uint64_t sub_1C66C0694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0) {
        v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C66C0710@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

uint64_t sub_1C66C0720@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

void sub_1C66C0730(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  if ((*v2 & a2) != 0) {
    *v2 &= ~a2;
  }
  OUTLINED_FUNCTION_57_3(a1);
}

uint64_t sub_1C66C0750(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

void sub_1C66C0778(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *v2 |= a2;
  OUTLINED_FUNCTION_57_3(a1);
}

uint64_t sub_1C66C0790(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_1C66C07A8(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_1C66C07B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & ~result;
  return result;
}

uint64_t sub_1C66C07C4(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_1C66C07CC(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1C66C07D8(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_1C66C07E4(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

void sub_1C66C07F4()
{
  OUTLINED_FUNCTION_36_9();
  v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  if (qword_1EBBF5DA0 != -1) {
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = sub_1C68EC478();
    __swift_project_value_buffer(v6, (uint64_t)&unk_1EBBF7A68);
    v7 = sub_1C68EC458();
    os_log_type_t v8 = sub_1C68ECE58();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_17();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C65AE000, v7, v8, "do not use the deprecated ContactResolverConfig initializer!", v9, 2u);
      OUTLINED_FUNCTION_0();
    }

    sub_1C65B28C4();
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 40) = v11;
    *(void *)(v5 + 48) = v10;
    uint64_t v12 = swift_bridgeObjectRetain();
    v13 = (void *)sub_1C6698344(v12);
    swift_bridgeObjectRelease();
    v14 = (int *)type metadata accessor for ContactResolverConfig(0);
    uint64_t v15 = v14[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v5 + v15) = v13;
    uint64_t v16 = v13[2];
    if (!v16)
    {
      LOBYTE(v18) = 1;
      goto LABEL_16;
    }
    uint64_t v17 = v13[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35_6();
    OUTLINED_FUNCTION_32_8();
    v22 = v1;
    if (v17)
    {
      LOBYTE(v18) = 1;
      goto LABEL_15;
    }
    if (v16 == 1) {
      break;
    }
    v1 = v13 + 7;
    while (!__OFADD__(1, 1))
    {
      uint64_t v18 = v13[6];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_35_6();
      OUTLINED_FUNCTION_32_8();
      if ((v18 & 1) == 0)
      {
        OUTLINED_FUNCTION_42_6();
        if (!v19) {
          continue;
        }
      }
      goto LABEL_15;
    }
    __break(1u);
LABEL_25:
    swift_once();
  }
  LOBYTE(v18) = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  v1 = v22;
LABEL_16:
  swift_bridgeObjectRelease();
  *(unsigned char *)(v5 + v14[12]) = v18 & 1;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain))
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain) == 1)
    {
      uint64_t v20 = 1;
    }
    else
    {
      if (qword_1EBBF4C28 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EBBF4C18;
    }
  }
  else
  {
    uint64_t v20 = 4;
  }
  swift_release();
  *(void *)(v5 + v14[13]) = v20;
  char v21 = *((unsigned char *)v1 + 17);
  swift_release();
  *(unsigned char *)(v5 + v14[14]) = v21;
  OUTLINED_FUNCTION_37_6();
}

void ContactResolverConfig.actionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t (*ContactResolverConfig.actionType.modify())(void)
{
  return nullsub_1;
}

uint64_t ContactResolverConfig.requestId.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContactResolverConfig.requestId.modify())(void)
{
  return nullsub_1;
}

uint64_t ContactResolverConfig.supportGondola.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 84));
}

uint64_t ContactResolverConfig.supportGondola.setter(char a1)
{
  uint64_t result = type metadata accessor for ContactResolverConfig(0);
  *(unsigned char *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*ContactResolverConfig.supportGondola.modify())(void)
{
  return nullsub_1;
}

uint64_t ContactResolverConfig.presentAllValidHandlesInDisambiguation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 88));
}

uint64_t ContactResolverConfig.presentAllValidHandlesInDisambiguation.setter(char a1)
{
  uint64_t result = type metadata accessor for ContactResolverConfig(0);
  *(unsigned char *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*ContactResolverConfig.presentAllValidHandlesInDisambiguation.modify())(void)
{
  return nullsub_1;
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:includeResolutionSignals:commsHasForcePrompted:crrCommsAppSelectionJointId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_3_25(v37, v38, v39, v40, v41, v42);
  OUTLINED_FUNCTION_0_1();
  v44 = v43;
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_6_18();
  OUTLINED_FUNCTION_12_14();
  if (v46)
  {
    swift_bridgeObjectRelease();
    *(void *)(v30 + 24) = v36;
    *(void *)(v30 + 32) = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_63_3();
  sub_1C65F5F80(&qword_1EA407728);
  OUTLINED_FUNCTION_11_15();
  uint64_t v47 = OUTLINED_FUNCTION_5_20();
  v48(v47);
  if ((v36 & 1) == 0)
  {
    uint64_t v49 = OUTLINED_FUNCTION_7_21();
    v50(v49);
  }
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_1_35();
  if (v32)
  {
    uint64_t v51 = OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_55_4(v51);
    v35 = sub_1C66C24A4;
  }
  else
  {
    OUTLINED_FUNCTION_56_3();
  }
  OUTLINED_FUNCTION_2_28();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54_5();
  if (!v35)
  {
    swift_bridgeObjectRelease();
    uint64_t v52 = OUTLINED_FUNCTION_4_19(v33);
    v53(v52);
    char v34 = 1;
LABEL_21:
    *(unsigned char *)(v30 + v44[12]) = v34 & 1;
    *(unsigned char *)(v30 + v44[18]) = a27 & 1;
    *(unsigned char *)(v30 + v44[19]) = a28 & 1;
    v57 = (void *)(v30 + v44[20]);
    swift_bridgeObjectRelease();
    void *v57 = a29;
    v57[1] = a30;
    OUTLINED_FUNCTION_10();
    return;
  }
  OUTLINED_FUNCTION_24_12();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_62_2();
  if (v31)
  {
    char v34 = 1;
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v55 = OUTLINED_FUNCTION_4_19(v33);
    v56(v55);
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v35 == (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))1)
  {
    char v34 = 0;
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_73_2();
  while (!__OFADD__(v33, 1))
  {
    OUTLINED_FUNCTION_71_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_70_1();
    if ((v34 & 1) == 0)
    {
      OUTLINED_FUNCTION_29_7();
      if (!v54) {
        continue;
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:commsHasForcePrompted:)()
{
  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_3_25(v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_0_1();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_6_18();
  OUTLINED_FUNCTION_12_14();
  if (v16)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = v6;
    *(void *)(v0 + 32) = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_63_3();
  sub_1C65F5F80(&qword_1EA407728);
  OUTLINED_FUNCTION_11_15();
  uint64_t v17 = OUTLINED_FUNCTION_5_20();
  v18(v17);
  if ((v6 & 1) == 0)
  {
    uint64_t v19 = OUTLINED_FUNCTION_7_21();
    v20(v19);
  }
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_1_35();
  if (v2)
  {
    uint64_t v21 = OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_55_4(v21);
    uint64_t v5 = sub_1C66C44A4;
  }
  else
  {
    OUTLINED_FUNCTION_56_3();
  }
  OUTLINED_FUNCTION_2_28();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54_5();
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = OUTLINED_FUNCTION_4_19(v3);
    v23(v22);
LABEL_20:
    OUTLINED_FUNCTION_46_3();
    *(unsigned char *)(v0 + v27) = 0;
    *(unsigned char *)(v0 + *(int *)(v14 + 76)) = v28 & 1;
    OUTLINED_FUNCTION_10();
    return;
  }
  OUTLINED_FUNCTION_24_12();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_62_2();
  if ((v1 & 1) != 0 || v5 == (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))1)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v25 = OUTLINED_FUNCTION_4_19(v3);
    v26(v25);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_73_2();
  while (!__OFADD__(v3, 1))
  {
    OUTLINED_FUNCTION_71_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_70_1();
    if ((v4 & 1) == 0)
    {
      OUTLINED_FUNCTION_29_7();
      if (!v24) {
        continue;
      }
    }
    goto LABEL_19;
  }
  __break(1u);
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:includeResolutionSignals:commsHasForcePrompted:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28)
{
  OUTLINED_FUNCTION_15_0();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = sub_1C68E9C68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v35 = v34;
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_1_15();
  uint64_t v39 = v38 - v37;
  uint64_t v40 = type metadata accessor for ContactResolverConfig(0);
  uint64_t v41 = v40 - 8;
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_16_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v39, v30, v33);
  ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:includeResolutionSignals:)();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v30, v33);
  sub_1C65B362C(v28, v32);
  *(unsigned char *)(v32 + *(int *)(v41 + 84)) = a28;
  OUTLINED_FUNCTION_10();
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:searchFirstPartyContacts:bundleIdsForThirdPartyContactSearch:domainsToSearchForHistory:searchSuggestedContacts:recommender:customGenerator:includeResolutionSignals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  OUTLINED_FUNCTION_38_2();
  char v30 = v29;
  char v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  sub_1C68E9C68();
  OUTLINED_FUNCTION_1_0();
  uint64_t v39 = OUTLINED_FUNCTION_40_5();
  v40(v39);
  uint64_t v41 = *a24;
  if (qword_1EBBF5DA0 != -1) {
    swift_once();
  }
  uint64_t v42 = a27;
  uint64_t v43 = a23;
  uint64_t v44 = sub_1C68EC478();
  __swift_project_value_buffer(v44, (uint64_t)&unk_1EBBF7A68);
  uint64_t v45 = sub_1C68EC458();
  os_log_type_t v46 = sub_1C68ECE58();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)OUTLINED_FUNCTION_17();
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl(&dword_1C65AE000, v45, v46, "do not use the deprecated ContactResolverConfig initializer!", v47, 2u);
    uint64_t v43 = a23;
    uint64_t v42 = a27;
    OUTLINED_FUNCTION_0();
  }

  sub_1C65B28C4();
  swift_bridgeObjectRelease();
  *(void *)(v38 + 40) = v36;
  *(void *)(v38 + 48) = v34;
  v48 = (int *)type metadata accessor for ContactResolverConfig(0);
  *(unsigned char *)(v38 + v48[9]) = v32 & 1;
  uint64_t v49 = v48[11];
  swift_bridgeObjectRelease();
  *(void *)(v38 + v49) = v43;
  *(unsigned char *)(v38 + v48[12]) = v30 & 1;
  *(void *)(v38 + v48[13]) = v41;
  if (v42)
  {
    uint64_t v50 = OUTLINED_FUNCTION_24();
    *(void *)(v50 + 16) = v42;
    *(void *)(v50 + 24) = a28;
    uint64_t v51 = sub_1C66C44A4;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v50 = 0;
  }
  uint64_t v52 = (uint64_t *)(v38 + v48[16]);
  sub_1C65B2CA8(*v52);
  *uint64_t v52 = (uint64_t)v51;
  v52[1] = v50;
  *(unsigned char *)(v38 + v48[18]) = a29 & 1;
  OUTLINED_FUNCTION_51_4();
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:searchFirstPartyContacts:bundleIdsForThirdPartyContactSearch:domainsToSearchForHistory:searchSuggestedContacts:recommender:customGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t *a26,uint64_t a27,uint64_t a28,uint64_t (*a29)@<X0>(void *@<X0>, uint64_t *@<X8>),uint64_t a30)
{
  OUTLINED_FUNCTION_36_9();
  char v58 = v30;
  char v56 = v31;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v57 = *a26;
  if (qword_1EBBF5DA0 != -1) {
    swift_once();
  }
  uint64_t v44 = a29;
  uint64_t v45 = sub_1C68EC478();
  __swift_project_value_buffer(v45, (uint64_t)&unk_1EBBF7A68);
  os_log_type_t v46 = sub_1C68EC458();
  os_log_type_t v47 = sub_1C68ECE58();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)OUTLINED_FUNCTION_17();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_1C65AE000, v46, v47, "do not use the deprecated ContactResolverConfig initializer!", v48, 2u);
    OUTLINED_FUNCTION_0();
  }

  sub_1C65B28C4();
  swift_bridgeObjectRelease();
  v43[3] = v41;
  v43[4] = v39;
  swift_bridgeObjectRelease();
  v43[5] = v37;
  v43[6] = v35;
  uint64_t v49 = (int *)type metadata accessor for ContactResolverConfig(0);
  uint64_t v50 = (char *)v43 + v49[8];
  uint64_t v51 = sub_1C68E9C68();
  uint64_t v52 = *(void *)(v51 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 24))(v50, v33, v51);
  *((unsigned char *)v43 + v49[9]) = v56 & 1;
  uint64_t v53 = v49[11];
  swift_bridgeObjectRelease();
  *(void *)((char *)v43 + v53) = a25;
  *((unsigned char *)v43 + v49[12]) = v58 & 1;
  *(void *)((char *)v43 + v49[13]) = v57;
  if (a29)
  {
    uint64_t v54 = OUTLINED_FUNCTION_24();
    *(void *)(v54 + 16) = a29;
    *(void *)(v54 + 24) = a30;
    uint64_t v44 = sub_1C66C44A4;
  }
  else
  {
    uint64_t v54 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v33, v51);
  uint64_t v55 = (void *)((char *)v43 + v49[16]);
  sub_1C65B2CA8(*v55);
  *uint64_t v55 = (uint64_t)v44;
  v55[1] = v54;
  *((unsigned char *)v43 + v49[18]) = 0;
  OUTLINED_FUNCTION_37_6();
}

uint64_t static ContactResolverConfig.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  if ((OUTLINED_FUNCTION_68_2(a1, a2) & 1) == 0) {
    goto LABEL_48;
  }
  uint64_t v5 = v3[2];
  uint64_t v6 = v2[2];
  if (!v5)
  {
    if (v6) {
      goto LABEL_48;
    }
    goto LABEL_11;
  }
  if (!v6) {
    goto LABEL_48;
  }
  BOOL v7 = v3[1] == v2[1] && v5 == v6;
  if (v7 || (char v8 = sub_1C68ED7E8(), v9 = 0, (v8 & 1) != 0))
  {
LABEL_11:
    if (v3[3] != v2[3] || v3[4] != v2[4])
    {
      char v11 = sub_1C68ED7E8();
      char v9 = 0;
      if ((v11 & 1) == 0) {
        return v9 & 1;
      }
    }
    if (v3[5] != v2[5] || v3[6] != v2[6])
    {
      char v13 = sub_1C68ED7E8();
      char v9 = 0;
      if ((v13 & 1) == 0) {
        return v9 & 1;
      }
    }
    type metadata accessor for ContactResolverConfig(0);
    OUTLINED_FUNCTION_64_2();
    if (v14)
    {
      OUTLINED_FUNCTION_8_23();
      if (v7)
      {
        OUTLINED_FUNCTION_8_23();
        if (v7 && (sub_1C6630DF4(*(void **)((char *)v3 + v4[11]), *(void **)((char *)v2 + v4[11])) & 1) != 0)
        {
          OUTLINED_FUNCTION_8_23();
          if (v7
            && *(void *)((char *)v3 + v4[13]) == *(void *)((char *)v2 + v4[13])
            && (sub_1C6617C5C(*((unsigned char *)v3 + v4[14]), *((unsigned char *)v2 + v4[14])) & 1) != 0)
          {
            uint64_t v15 = v4[15];
            uint64_t v16 = (char *)v3 + v15;
            __int16 v17 = *(_WORD *)((char *)v3 + v15);
            unsigned int v18 = *(unsigned __int16 *)((char *)v2 + v15);
            if (v17 == 2)
            {
              if (v18 != 2) {
                goto LABEL_48;
              }
            }
            else
            {
              if (v18 == 2) {
                goto LABEL_48;
              }
              int v19 = v16[1];
              BOOL v20 = (v18 & 1) == 0;
              unsigned int v21 = v18 >> 8;
              if (v20 == (v17 & 1) || v21 != v19) {
                goto LABEL_48;
              }
            }
            OUTLINED_FUNCTION_9_0(v4[17]);
            if (!v7 || v23 != v24)
            {
              char v26 = sub_1C68ED7E8();
              char v9 = 0;
              if ((v26 & 1) == 0) {
                return v9 & 1;
              }
            }
            OUTLINED_FUNCTION_8_23();
            if (v7)
            {
              OUTLINED_FUNCTION_8_23();
              if (v7)
              {
                uint64_t v28 = v4[20];
                char v29 = (void *)((char *)v3 + v28);
                uint64_t v30 = *(void *)((char *)v3 + v28 + 8);
                char v31 = (void *)((char *)v2 + v28);
                uint64_t v32 = v31[1];
                if (v30)
                {
                  if (!v32) {
                    goto LABEL_48;
                  }
                  if (*v29 != *v31 || v30 != v32)
                  {
                    char v34 = sub_1C68ED7E8();
                    char v9 = 0;
                    if ((v34 & 1) == 0) {
                      return v9 & 1;
                    }
                  }
                }
                else if (v32)
                {
                  goto LABEL_48;
                }
                OUTLINED_FUNCTION_8_23();
                if (v7)
                {
                  char v9 = *((unsigned char *)v3 + v4[22]) ^ *((unsigned char *)v2 + v4[22]) ^ 1;
                  return v9 & 1;
                }
              }
            }
          }
        }
      }
    }
LABEL_48:
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1C66C1814(unsigned __int8 *a1, char *a2)
{
  if ((OUTLINED_FUNCTION_68_2(a1, a2) & 1) == 0) {
    return 0;
  }
  BOOL v5 = v3[1] == v2[1] && v3[2] == v2[2];
  if (v5 || (v6 = sub_1C68ED7E8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v3[4];
    uint64_t v9 = v2[4];
    if (v8)
    {
      if (!v9) {
        return 0;
      }
      if (v3[3] != v2[3] || v8 != v9)
      {
        char v11 = sub_1C68ED7E8();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v3[5] != v2[5] || v3[6] != v2[6])
    {
      char v13 = sub_1C68ED7E8();
      uint64_t result = 0;
      if ((v13 & 1) == 0) {
        return result;
      }
    }
    type metadata accessor for PrivatizedContactResolverConfig(0);
    OUTLINED_FUNCTION_64_2();
    if (v14)
    {
      OUTLINED_FUNCTION_8_23();
      if (v5 && (sub_1C6630DF4(*(void **)((char *)v3 + v4[10]), *(void **)((char *)v2 + v4[10])) & 1) != 0)
      {
        OUTLINED_FUNCTION_8_23();
        if (v5
          && *(void *)((char *)v3 + v4[12]) == *(void *)((char *)v2 + v4[12])
          && (sub_1C6617C5C(*((unsigned char *)v3 + v4[13]), *((unsigned char *)v2 + v4[13])) & 1) != 0)
        {
          OUTLINED_FUNCTION_9_0(v4[14]);
          if (v5 && v15 == v16) {
            return 1;
          }
          return sub_1C68ED7E8();
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C66C1974(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79546E6F69746361 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7463617265746E69 && a2 == 0xED000064496E6F69;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x4974736575716572 && a2 == 0xE900000000000064;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x7954746E65746E69 && a2 == 0xEE00656D614E6570;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x69546E7552676F6CLL && a2 == 0xEE0061746144656DLL;
            if (v10 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6449656C646E7562 && a2 == 0xE900000000000073;
              if (v11 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000018 && a2 == 0x80000001C6915F30 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0xD000000000000019 && a2 == 0x80000001C6915F50 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x80000001C6915F70 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x80000001C6915F90)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                char v12 = sub_1C68ED7E8();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 10;
                }
                else {
                  return 11;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C66C1E58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C68E9C68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v23 = v7;
  uint64_t v24 = v6;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_15();
  uint64_t v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407798);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_15();
  char v26 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_16_0();
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  uint64_t v25 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C65E415C();
  sub_1C68ED9E8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C66C411C();
    OUTLINED_FUNCTION_27_7();
    *(unsigned char *)uint64_t v3 = v27;
    *(void *)(v3 + 8) = OUTLINED_FUNCTION_48_3(1);
    *(void *)(v3 + 16) = v13;
    *(void *)(v3 + 24) = sub_1C68ED5C8();
    *(void *)(v3 + 32) = v14;
    *(void *)(v3 + 40) = OUTLINED_FUNCTION_48_3(3);
    *(void *)(v3 + 48) = v15;
    LOBYTE(v27) = 4;
    sub_1C65F5F80(&qword_1EA407158);
    sub_1C68ED668();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v3 + v26[8], v10, v24);
    *(unsigned char *)(v3 + v26[9]) = OUTLINED_FUNCTION_47_4(5) & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
    sub_1C66C42C0(&qword_1EA406DF0);
    sub_1C68ED668();
    *(void *)(v3 + v26[10]) = v27;
    *(unsigned char *)(v3 + v26[11]) = OUTLINED_FUNCTION_47_4(7) & 1;
    sub_1C65E4640();
    OUTLINED_FUNCTION_27_7();
    *(void *)(v3 + v26[12]) = v27;
    sub_1C66C4168();
    OUTLINED_FUNCTION_27_7();
    *(unsigned char *)(v3 + v26[13]) = 4;
    uint64_t v16 = sub_1C68ED618();
    uint64_t v18 = v17;
    uint64_t v19 = OUTLINED_FUNCTION_19_14();
    v20(v19);
    unsigned int v21 = (uint64_t *)(v3 + v26[14]);
    *unsigned int v21 = v16;
    v21[1] = v18;
    sub_1C66C41B4(v3, a2);
    __swift_destroy_boxed_opaque_existential_1(v25);
    return sub_1C66C4218(v3);
  }
}

uint64_t sub_1C66C2378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66C1974(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66C23A0(uint64_t a1)
{
  unint64_t v2 = sub_1C65E415C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66C23DC(uint64_t a1)
{
  unint64_t v2 = sub_1C65E415C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C66C2418@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C66C1E58(a1, a2);
}

SiriInference::ContactResolverDomain __swiftcall ContactResolverDomain.init(rawValue:)(SiriInference::ContactResolverDomain rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static ContactResolverDomain.messages.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void sub_1C66C2448()
{
  uint64_t v0 = unk_1F216CBA8;
  if ((unk_1F216CBA8 & ~qword_1F216CBA0) == 0) {
    uint64_t v0 = 0;
  }
  qword_1EBBF4C18 = v0 | qword_1F216CBA0;
}

uint64_t sub_1C66C246C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C66C24A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

SiriInference::ContactResolverDomain sub_1C66C24D8(Swift::Int *a1)
{
  return ContactResolverDomain.init(rawValue:)(*a1);
}

uint64_t sub_1C66C24E0()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C66C2544@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C66C0710(*a1, *v2, a2);
}

void sub_1C66C2550(void *a1@<X8>)
{
}

uint64_t sub_1C66C255C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C66C0720(*a1, *v2, a2);
}

void sub_1C66C2568(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1C66C2584(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1C66C25A0(uint64_t *a1)
{
}

void sub_1C66C25A8(uint64_t *a1)
{
}

uint64_t sub_1C66C25B0(uint64_t *a1)
{
  return sub_1C66C07A8(*a1);
}

uint64_t sub_1C66C25B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C66C07B8(*a1, *v2, a2);
}

BOOL sub_1C66C25C4(uint64_t *a1)
{
  return sub_1C66C07CC(*a1, *v1);
}

uint64_t sub_1C66C25D0(uint64_t *a1)
{
  return sub_1C66C07E4(*a1);
}

SiriInference::ContactResolverDomain sub_1C66C25D8@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = ContactResolverDomain.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1C66C2604@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C66C063C(a1, a2);
}

SiriInference::SearchSuggestedContacts_optional __swiftcall SearchSuggestedContacts.init(rawValue:)(Swift::String rawValue)
{
  return (SiriInference::SearchSuggestedContacts_optional)sub_1C66704A4(v1);
}

uint64_t sub_1C66C2628(unsigned __int8 *a1, char *a2)
{
  return sub_1C6617C5C(*a1, *a2);
}

uint64_t sub_1C66C2634()
{
  return sub_1C6702320();
}

uint64_t sub_1C66C263C()
{
  return sub_1C667891C();
}

uint64_t sub_1C66C2644()
{
  return sub_1C680D2C4();
}

SiriInference::SearchSuggestedContacts_optional sub_1C66C264C(Swift::String *a1)
{
  return SearchSuggestedContacts.init(rawValue:)(*a1);
}

uint64_t sub_1C66C265C()
{
  return sub_1C68ECB98();
}

SiriInference::RecommenderType_optional __swiftcall RecommenderType.init(rawValue:)(Swift::String rawValue)
{
  return (SiriInference::RecommenderType_optional)sub_1C66704A4(v1);
}

uint64_t RecommenderType.rawValue.getter()
{
  uint64_t v1 = 0x6D6D6F6365526C6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6369736162;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x53656E4F69726973;
  }
}

uint64_t sub_1C66C2734(unsigned __int8 *a1, char *a2)
{
  return sub_1C6619194(*a1, *a2);
}

uint64_t sub_1C66C2740()
{
  return sub_1C670232C();
}

uint64_t sub_1C66C2748()
{
  return sub_1C667963C();
}

uint64_t sub_1C66C2750()
{
  return sub_1C680CB24();
}

SiriInference::RecommenderType_optional sub_1C66C2758(Swift::String *a1)
{
  return RecommenderType.init(rawValue:)(*a1);
}

uint64_t sub_1C66C2764@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RecommenderType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66C278C()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66C27EC()
{
  return sub_1C68ECB68();
}

SiriInference::ContactActionType_optional __swiftcall ContactActionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C68ED598();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C66C28C0(unsigned __int8 *a1, char *a2)
{
  return sub_1C6617AA8(*a1, *a2);
}

uint64_t sub_1C66C28CC()
{
  return sub_1C6702338(*v0);
}

uint64_t sub_1C66C28D4(uint64_t a1)
{
  return sub_1C6679324(a1, *v1);
}

uint64_t sub_1C66C28DC()
{
  return sub_1C680CD3C();
}

SiriInference::ContactActionType_optional sub_1C66C28E4(Swift::String *a1)
{
  return ContactActionType.init(rawValue:)(*a1);
}

uint64_t sub_1C66C28F0()
{
  return sub_1C68ECB98();
}

void static ContactHandleTypePreference.preferEmail.getter(_WORD *a1@<X8>)
{
}

void static ContactHandleTypePreference.requireEmail.getter(_WORD *a1@<X8>)
{
}

BOOL static ContactHandleTypePreference.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1C66C298C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7269757165527369 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C68ED7E8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C66C2A78(char a1)
{
  if (a1) {
    return 1701869940;
  }
  else {
    return 0x7269757165527369;
  }
}

uint64_t sub_1C66C2AAC()
{
  return sub_1C66C2A78(*v0);
}

uint64_t sub_1C66C2AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66C298C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66C2ADC(uint64_t a1)
{
  unint64_t v2 = sub_1C66C2E3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66C2B18(uint64_t a1)
{
  unint64_t v2 = sub_1C66C2E3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ContactHandleTypePreference.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407730);
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66C2E3C();
  sub_1C68EDA08();
  OUTLINED_FUNCTION_43_4();
  if (!v1)
  {
    sub_1C6684AD4();
    sub_1C68ED758();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t ContactHandleTypePreference.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407740);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66C2E3C();
  sub_1C68ED9E8();
  if (!v2)
  {
    char v6 = sub_1C68ED628();
    sub_1C6684B20();
    sub_1C68ED668();
    uint64_t v7 = OUTLINED_FUNCTION_18_0();
    v8(v7);
    *a2 = v6 & 1;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C66C2E0C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ContactHandleTypePreference.init(from:)(a1, a2);
}

uint64_t sub_1C66C2E24(void *a1)
{
  return ContactHandleTypePreference.encode(to:)(a1);
}

unint64_t sub_1C66C2E3C()
{
  unint64_t result = qword_1EA407738;
  if (!qword_1EA407738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407738);
  }
  return result;
}

unint64_t sub_1C66C2E9C()
{
  unint64_t result = qword_1EA407768;
  if (!qword_1EA407768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407768);
  }
  return result;
}

unint64_t sub_1C66C2EEC()
{
  unint64_t result = qword_1EA407770;
  if (!qword_1EA407770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407770);
  }
  return result;
}

unint64_t sub_1C66C2F3C()
{
  unint64_t result = qword_1EA407778;
  if (!qword_1EA407778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407778);
  }
  return result;
}

uint64_t assignWithCopy for ContactResolverConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  uint64_t v10 = a3[16];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)(a1 + v10);
  uint64_t v14 = *(void *)(a2 + v10);
  if (!v13)
  {
    if (v14)
    {
      uint64_t v16 = *(void *)(v12 + 8);
      *uint64_t v11 = v14;
      v11[1] = v16;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    goto LABEL_8;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v15 = *(void *)(v12 + 8);
  *uint64_t v11 = v14;
  v11[1] = v15;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v17 = a3[17];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v20 = a3[20];
  unsigned int v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *unsigned int v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  return a1;
}

uint64_t initializeWithTake for ContactResolverConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[16];
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for ContactResolverConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(_WORD *)(a1 + v15) = *(_WORD *)(a2 + v15);
  uint64_t v16 = a3[16];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a1 + v16);
  uint64_t v20 = *(void *)(a2 + v16);
  if (!v19)
  {
    if (v20)
    {
      uint64_t v22 = *(void *)(v18 + 8);
      *uint64_t v17 = v20;
      v17[1] = v22;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    goto LABEL_8;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)(v18 + 8);
  *uint64_t v17 = v20;
  v17[1] = v21;
  swift_release();
LABEL_8:
  uint64_t v23 = a3[17];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[20];
  uint64_t v30 = (void *)(a1 + v29);
  char v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  return a1;
}

uint64_t sub_1C66C34A8(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_3_1(*(void *)(a1 + 32));
  }
  sub_1C68E9C68();
  uint64_t v3 = OUTLINED_FUNCTION_53_4();

  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for ContactResolverConfig(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C66C352C);
}

void sub_1C66C352C()
{
  OUTLINED_FUNCTION_65();
  if (v2)
  {
    *(void *)(v1 + 32) = (v0 - 1);
  }
  else
  {
    sub_1C68E9C68();
    uint64_t v3 = OUTLINED_FUNCTION_41_8();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

uint64_t sub_1C66C3590()
{
  uint64_t result = sub_1C68E9C68();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *sub_1C66C3694(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66C3760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66C3854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *sub_1C66C38A4(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    uint64_t v9 = a2[6];
    uint64_t v10 = a3[8];
    uint64_t v22 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[5] = a2[5];
    a1[6] = v9;
    uint64_t v12 = sub_1C68E9C68();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v22, v11, v12);
    uint64_t v14 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)v4 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)v4 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C66C3A20(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v10 = a3[14];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C66C3B84(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_1C66C3C64(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C66C3D74(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_3_1(*(void *)(a1 + 16));
  }
  sub_1C68E9C68();
  uint64_t v3 = OUTLINED_FUNCTION_53_4();

  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

void sub_1C66C3DE4()
{
  OUTLINED_FUNCTION_65();
  if (v2)
  {
    *(void *)(v1 + 16) = (v0 - 1);
  }
  else
  {
    sub_1C68E9C68();
    uint64_t v3 = OUTLINED_FUNCTION_41_8();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

uint64_t sub_1C66C3E48()
{
  uint64_t result = sub_1C68E9C68();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactHandleTypePreference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66C3FF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactHandleTypePreference.CodingKeys()
{
  return &type metadata for ContactHandleTypePreference.CodingKeys;
}

unint64_t sub_1C66C4030()
{
  unint64_t result = qword_1EA407780;
  if (!qword_1EA407780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407780);
  }
  return result;
}

unint64_t sub_1C66C4080()
{
  unint64_t result = qword_1EA407788;
  if (!qword_1EA407788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407788);
  }
  return result;
}

unint64_t sub_1C66C40D0()
{
  unint64_t result = qword_1EA407790;
  if (!qword_1EA407790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407790);
  }
  return result;
}

unint64_t sub_1C66C411C()
{
  unint64_t result = qword_1EA4077A8;
  if (!qword_1EA4077A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077A8);
  }
  return result;
}

unint64_t sub_1C66C4168()
{
  unint64_t result = qword_1EA4077B8;
  if (!qword_1EA4077B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077B8);
  }
  return result;
}

uint64_t sub_1C66C41B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrivatizedContactResolverConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C66C4218(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrivatizedContactResolverConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C66C4274()
{
  unint64_t result = qword_1EA4077C8;
  if (!qword_1EA4077C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077C8);
  }
  return result;
}

uint64_t sub_1C66C42C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBF6840);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C66C4324()
{
  unint64_t result = qword_1EA4077D8;
  if (!qword_1EA4077D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077D8);
  }
  return result;
}

unint64_t sub_1C66C4370()
{
  unint64_t result = qword_1EA4077E0;
  if (!qword_1EA4077E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077E0);
  }
  return result;
}

unint64_t sub_1C66C43BC()
{
  unint64_t result = qword_1EA4077E8;
  if (!qword_1EA4077E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077E8);
  }
  return result;
}

unint64_t sub_1C66C4408()
{
  unint64_t result = qword_1EA4077F0;
  if (!qword_1EA4077F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4077F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedContactResolverConfig.CodingKeys()
{
  return &type metadata for PrivatizedContactResolverConfig.CodingKeys;
}

int *OUTLINED_FUNCTION_1_35()
{
  uint64_t v5 = *(void *)(v4 - 112);
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v5;
  unint64_t result = (int *)type metadata accessor for ContactResolverConfig(0);
  *(unsigned char *)(v0 + result[9]) = *(_DWORD *)(v4 - 104) & 1;
  *(void *)(v0 + result[13]) = v2;
  *(_WORD *)(v0 + result[15]) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_28()
{
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(v1 + 64));
  uint64_t v6 = *v5;
  sub_1C65B2C98(v2);
  sub_1C65B2CA8(v6);
  *uint64_t v5 = v4;
  v5[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(v6 - 104) = a6;
  *(void *)(v6 - 88) = a5;
  *(void *)(v6 - 112) = a4;
  return sub_1C68E9C68();
}

uint64_t OUTLINED_FUNCTION_4_19(uint64_t a1)
{
  sub_1C65B2CA8(a1);
  return *(void *)(v1 - 88);
}

uint64_t OUTLINED_FUNCTION_5_20()
{
  uint64_t result = v1;
  *(void *)(v2 - 128) = *(void *)(v0 + 8);
  *(void *)(v2 - 120) = v0 + 8;
  return result;
}

void OUTLINED_FUNCTION_6_18()
{
  sub_1C65B28C4();
}

uint64_t OUTLINED_FUNCTION_7_21()
{
  return v0 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 32);
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(v1 + 64));
  uint64_t v6 = *v5;
  sub_1C65B2C98(v4);
  sub_1C65B2CA8(v6);
  *uint64_t v5 = v3;
  v5[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_15()
{
  return sub_1C68EC858();
}

uint64_t OUTLINED_FUNCTION_15_15()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_16_12@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_1C68ED708();
}

uint64_t OUTLINED_FUNCTION_19_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  return 0x6C6143656E6F6870;
}

uint64_t OUTLINED_FUNCTION_24_12()
{
  *(void *)(v1 - 104) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_11()
{
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v1;
  uint64_t result = type metadata accessor for ContactResolverConfig(0);
  *(unsigned char *)(v0 + *(int *)(result + 36)) = v2 & 1;
  *(void *)(v0 + *(int *)(result + 52)) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_32_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_35_6()
{
  return sub_1C65B2CB8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  return v0 + *(int *)(v1 + 32);
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return sub_1C68ED718();
}

void OUTLINED_FUNCTION_45_6(_WORD *a1@<X8>)
{
  *a1 = v1;
}

void OUTLINED_FUNCTION_46_3()
{
  *(unsigned char *)(v0 + *(int *)(v1 + 48)) = v2 & 1;
}

uint64_t OUTLINED_FUNCTION_47_4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_1C68ED628();
}

uint64_t OUTLINED_FUNCTION_48_3@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_1C68ED618();
}

void OUTLINED_FUNCTION_57_3(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_67_2()
{
  return sub_1C65B2CB8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_68_2(unsigned __int8 *a1, char *a2)
{
  char v3 = *a2;
  unsigned __int8 v4 = *a1;
  return sub_1C6617AA8(v4, v3);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return sub_1C65B2CB8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_74_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

void sub_1C66C4A48(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  LODWORD(v191) = a4;
  uint64_t v190 = a3;
  uint64_t v180 = a2;
  uint64_t v7 = type metadata accessor for ContactResolver.SignalSet(0);
  uint64_t v8 = OUTLINED_FUNCTION_3(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_1();
  uint64_t v198 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_6();
  uint64_t matched = type metadata accessor for PrivatizedContactMatchRuntimeData(v10);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v167 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for ContactMatchRuntimeData(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v175 = v15;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_1();
  v204 = v17;
  uint64_t v18 = OUTLINED_FUNCTION_6();
  uint64_t v200 = type metadata accessor for StitchedContactResolverRecommendation(v18);
  OUTLINED_FUNCTION_0_1();
  uint64_t v188 = v19;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_20();
  uint64_t v183 = v21;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v22);
  uint64_t v194 = (uint64_t)&v167 - v23;
  uint64_t v24 = OUTLINED_FUNCTION_6();
  uint64_t v187 = type metadata accessor for StitchedContactResolverRequest(v24);
  OUTLINED_FUNCTION_0_1();
  uint64_t v172 = v25;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_1();
  uint64_t v189 = v27;
  uint64_t v28 = OUTLINED_FUNCTION_6();
  uint64_t v29 = type metadata accessor for StitchedContactData(v28);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_1();
  uint64_t v179 = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407818);
  uint64_t v33 = OUTLINED_FUNCTION_3(v32);
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_1();
  uint64_t v199 = v34;
  uint64_t v35 = OUTLINED_FUNCTION_6();
  uint64_t v186 = type metadata accessor for ContactResolverRunTimeData(v35);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_20();
  v181 = (unsigned __int8 *)v37;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v38);
  uint64_t v177 = (uint64_t)&v167 - v39;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v40);
  uint64_t v195 = (uint64_t)&v167 - v41;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407820);
  uint64_t v43 = OUTLINED_FUNCTION_3(v42);
  MEMORY[0x1F4188790](v43);
  OUTLINED_FUNCTION_20();
  uint64_t v201 = v44;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v45);
  os_log_type_t v47 = (char *)&v167 - v46;
  uint64_t v48 = type metadata accessor for PrivatizedContactResolverConfig(0);
  uint64_t v49 = OUTLINED_FUNCTION_3(v48);
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_20();
  uint64_t v185 = v50;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v167 - v52;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v54);
  uint64_t v202 = (uint64_t)&v167 - v55;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  uint64_t v57 = OUTLINED_FUNCTION_3(v56);
  MEMORY[0x1F4188790](v57);
  OUTLINED_FUNCTION_20();
  uint64_t v193 = v58;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v59);
  v61 = (char *)&v167 - v60;
  v182 = (int *)v29;
  uint64_t v192 = a1 + *(int *)(v29 + 28);
  sub_1C66C5B3C(v192, (uint64_t)&v167 - v60);
  uint64_t v62 = type metadata accessor for StitchableInteraction();
  LODWORD(v203) = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62);
  if (v203 == 1)
  {
    sub_1C65B4354((uint64_t)v61, &qword_1EA406798);
    uint64_t v178 = 0;
  }
  else
  {
    double v63 = *(double *)&v61[*(int *)(v62 + 28)];
    sub_1C66C6500((uint64_t)v61, (void (*)(void))type metadata accessor for StitchableInteraction);
    sub_1C67E9074(v63);
    if ((~*(void *)&v64 & 0x7FF0000000000000) == 0)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    if (v64 <= -9.22337204e18)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if (v64 >= 9.22337204e18)
    {
LABEL_61:
      __break(1u);
      return;
    }
    uint64_t v178 = (uint64_t)v64;
  }
  sub_1C67E4B70(*(void *)(a1 + 32), (uint64_t)v47);
  uint64_t v65 = v187;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v187);
  v184 = (uint64_t *)a1;
  v196 = (int *)matched;
  v225 = v14;
  if (EnumTagSinglePayload == 1)
  {
    sub_1C65B4354((uint64_t)v47, &qword_1EA407820);
LABEL_9:
    uint64_t v67 = v186;
    goto LABEL_16;
  }
  sub_1C66C64A0((uint64_t)v47, (uint64_t)v53, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
  sub_1C66C6500((uint64_t)v47, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
  uint64_t v68 = v202;
  sub_1C66C644C((uint64_t)v53, v202, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
  uint64_t v69 = v201;
  sub_1C67E4B70(*(void *)(a1 + 32), v201);
  int v70 = __swift_getEnumTagSinglePayload(v69, 1, v65);
  uint64_t v67 = v186;
  if (v70 == 1)
  {
    v71 = &qword_1EA407820;
LABEL_14:
    sub_1C65B4354(v69, v71);
    goto LABEL_15;
  }
  uint64_t v72 = *(void *)(v69 + *(int *)(v65 + 24));
  swift_bridgeObjectRetain();
  sub_1C66C6500(v69, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
  uint64_t v69 = v199;
  sub_1C67E4C2C(v72, v199);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v69, 1, v200) == 1)
  {
    v71 = &qword_1EA407818;
    goto LABEL_14;
  }
  uint64_t v146 = v177;
  sub_1C66C64A0(v69, v177, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  sub_1C66C6500(v69, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
  uint64_t v147 = v195;
  sub_1C66C644C(v146, v195, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  uint64_t v148 = v179;
  sub_1C66C64A0(a1, v179, (void (*)(void))type metadata accessor for StitchedContactData);
  uint64_t v149 = v190;
  swift_bridgeObjectRetain();
  uint64_t v150 = sub_1C66E1BA4(v148, v180, v149, v191);
  if (v151)
  {
    uint64_t v190 = v153;
    unint64_t v191 = v152;
    uint64_t v199 = v150;
    uint64_t v201 = v151;
    uint64_t v154 = v185;
    sub_1C66C64A0(v68, v185, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
    sub_1C6611260(v147 + *(int *)(v67 + 60), (uint64_t)v224, &qword_1EA407828);
    unsigned __int8 v205 = *(unsigned char *)(v147 + 264);
    v155 = *(void **)(v147 + 280);
    uint64_t v200 = *(void *)(v147 + 272);
    v156 = (unsigned __int8 *)(v147 + *(int *)(v67 + 64));
    uint64_t v157 = *v156;
    int v158 = v156[1];
    int v159 = v156[2];
    int v160 = v156[3];
    uint64_t v161 = v156[4];
    sub_1C66C5BA4(v224);
    uint64_t v162 = 0x1000000;
    if (!v160) {
      uint64_t v162 = 0;
    }
    uint64_t v163 = v162 | (v161 << 32);
    uint64_t v164 = 0x10000;
    if (!v159) {
      uint64_t v164 = 0;
    }
    uint64_t v165 = 256;
    if (!v158) {
      uint64_t v165 = 0;
    }
    uint64_t v166 = v163 | v164 | v165 | v157;
    swift_bridgeObjectRetain();
    sub_1C66CAD10(v154, (uint64_t)v224, &v205, v200, v155, v166, (uint64_t)v206);
    memcpy(v223, v206, 0x89uLL);
    sub_1C689D08C();
    if (v5)
    {
      sub_1C66C5C30((uint64_t)v223);
      swift_bridgeObjectRelease();
      sub_1C66C6500(v195, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
      sub_1C66C6500(v202, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
      return;
    }
    sub_1C66C5C30((uint64_t)v223);
    sub_1C66C5CC8(v199, v201, v191, v190 & 0x101010101010101);
    swift_bridgeObjectRelease();
    sub_1C66C6500(v195, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
    sub_1C66C6500(v202, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
    swift_bridgeObjectRelease();
    a1 = (uint64_t)v184;
    uint64_t v65 = v187;
    goto LABEL_9;
  }
  sub_1C66C6500(v147, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
LABEL_15:
  sub_1C66C6500(v68, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
LABEL_16:
  uint64_t v168 = *(void *)(*(void *)(a1 + 32) + 16);
  if (v168)
  {
    BOOL v176 = v203 == 1;
    OUTLINED_FUNCTION_8_24();
    uint64_t v170 = v73;
    uint64_t v74 = swift_bridgeObjectRetain();
    unint64_t v75 = 0;
    uint64x2_t v174 = (uint64x2_t)xmmword_1C68F7340;
    uint64x2_t v173 = (uint64x2_t)xmmword_1C68F7350;
    uint64_t v76 = v194;
    uint64_t v169 = v74;
    uint64_t v195 = 0x80000001C6915FB0;
    while (v75 < *(void *)(v74 + 16))
    {
      uint64_t v77 = *(void *)(v172 + 72);
      unint64_t v171 = v75;
      uint64_t v78 = v189;
      sub_1C66C64A0(v170 + v77 * v75, v189, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
      uint64_t v177 = *(void *)(*(void *)(v78 + *(int *)(v65 + 24)) + 16);
      if (v177)
      {
        OUTLINED_FUNCTION_8_24();
        uint64_t v180 = v79;
        uint64_t v80 = swift_bridgeObjectRetain();
        unint64_t v81 = 0;
        uint64_t v179 = v80;
        while (v81 < *(void *)(v80 + 16))
        {
          uint64_t v82 = *(void *)(v188 + 72);
          unint64_t v191 = v81;
          sub_1C66C64A0(v180 + v82 * v81, v76, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
          uint64_t v83 = v185;
          sub_1C66C64A0(v189, v185, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
          sub_1C6611260(v76 + *(int *)(v67 + 60), (uint64_t)v222, &qword_1EA407828);
          unsigned __int8 v205 = *(unsigned char *)(v76 + 264);
          v84 = *(void **)(v76 + 280);
          uint64_t v203 = *(void *)(v76 + 272);
          v85 = (unsigned __int8 *)(v76 + *(int *)(v67 + 64));
          uint64_t v86 = *v85;
          int v87 = v85[1];
          int v88 = v85[2];
          int v89 = v85[3];
          uint64_t v90 = v85[4];
          sub_1C66C5BA4(v222);
          uint64_t v91 = 0x1000000;
          if (!v89) {
            uint64_t v91 = 0;
          }
          uint64_t v92 = v91 | (v90 << 32);
          uint64_t v93 = 0x10000;
          if (!v88) {
            uint64_t v93 = 0;
          }
          uint64_t v94 = 256;
          if (!v87) {
            uint64_t v94 = 0;
          }
          uint64_t v95 = v92 | v93 | v94 | v86;
          swift_bridgeObjectRetain();
          sub_1C66CAD10(v83, (uint64_t)v222, &v205, v203, v84, v95, (uint64_t)v206);
          memcpy(v221, v206, 0x89uLL);
          uint64_t v96 = sub_1C689D08C();
          if (v5)
          {
            sub_1C66C5C30((uint64_t)v221);
            sub_1C66C6500(v194, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
            swift_bridgeObjectRelease();
            sub_1C66C6500(v189, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
            goto LABEL_52;
          }
          uint64_t v97 = v96;
          sub_1C66C5C30((uint64_t)v221);
          uint64_t v98 = v194;
          v99 = v181;
          sub_1C66C64A0(v194, (uint64_t)v181, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
          uint64_t v100 = v193;
          sub_1C66C5B3C(v192, v193);
          v101 = v184;
          unsigned __int8 v102 = *((unsigned char *)v184 + v182[12]);
          sub_1C66DC3E8(v99, v100, *((unsigned __int8 *)v184 + v182[10]), v102, *((unsigned __int8 *)v184 + v182[13]), *((unsigned __int8 *)v184 + v182[11]), v206);
          uint64_t v103 = v98;
          if ((*((void *)&v206[0] + 1) & 0xFF0000) != 0x20000)
          {
            uint64_t v212 = *(void *)&v206[0];
            __int16 v213 = WORD4(v206[0]);
            uint64x2_t v107 = (uint64x2_t)vdupq_n_s64(*((unint64_t *)&v206[0] + 1));
            int16x8_t v108 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v107, v173), (int32x4_t)vshlq_u64(v107, v174));
            *(int8x8_t *)v108.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v108), (int8x8_t)0x1000100010001);
            unsigned __int32 v214 = vmovn_s16(v108).u32[0];
            __int16 v215 = HIWORD(v206[0]) & 0x101;
            int v216 = v206[1] & 0x1010101;
            long long v217 = *(_OWORD *)((char *)&v206[1] + 8);
            long long v218 = *(_OWORD *)((char *)&v206[2] + 8);
            long long v219 = *(_OWORD *)((char *)&v206[3] + 8);
            long long v220 = *(_OWORD *)((char *)&v206[4] + 8);
            sub_1C66C5D80();
          }
          v104 = v225;
          v105 = v204;
          uint64_t v106 = v183;
          sub_1C66C64A0(v103, v183, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
          sub_1C66E277C(v106, v178, v176, v102, (uint64_t)&v207);
          sub_1C66C5E38();
          uint64_t v200 = v97;
          uint64_t v109 = *v101;
          uint64_t v110 = v101[1];
          sub_1C66C64A0(v103, v106, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
          uint64_t v111 = v193;
          sub_1C66C5B3C(v192, v193);
          swift_bridgeObjectRetain();
          sub_1C66CB974(v109, v110, v106, v111, (uint64_t)v208);
          sub_1C6611260((uint64_t)v208, (uint64_t)&v209, &qword_1EA407830);
          if (BYTE9(v210[1]) << 8 != 512)
          {
            v210[2] = v209;
            v211[0] = v210[0];
            *(_OWORD *)((char *)v211 + 10) = *(_OWORD *)((char *)v210 + 10);
            sub_1C66C5EF0();
          }
          uint64_t v112 = sub_1C682C104(3, *(void *)(v103 + 296));
          unint64_t v116 = (v115 >> 1) - v114;
          uint64_t v190 = v112;
          if (v115 >> 1 == v114)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if ((uint64_t)(v115 >> 1) <= v114) {
              goto LABEL_57;
            }
            uint64_t v117 = v113;
            uint64_t v118 = v114;
            swift_bridgeObjectRetain();
            uint64_t v199 = *(void *)(v175 + 72);
            uint64_t v119 = v117 + v118 * v199;
            do
            {
              sub_1C66C64A0(v119, (uint64_t)v105, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
              uint64_t v120 = v105[1];
              uint64_t v202 = *v105;
              type metadata accessor for Contact();
              swift_bridgeObjectRetain();
              uint64_t v121 = swift_bridgeObjectRetain();
              uint64_t v201 = sub_1C6838940(v121);
              uint64_t v203 = v5;
              swift_bridgeObjectRelease();
              v123 = (int *)v197;
              uint64_t v122 = v198;
              sub_1C66C64A0((uint64_t)v204 + *(int *)(v197 + 20), v198, (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
              v124 = v196;
              sub_1C67E96DC(v122, (uint64_t)v104 + v196[5]);
              v125 = (char *)v204 + v123[6];
              uint64_t v126 = *((void *)v125 + 1);
              uint64_t v127 = *((void *)v125 + 2);
              LOBYTE(v206[0]) = *v125;
              *((void *)&v206[0] + 1) = v126;
              *(void *)&v206[1] = v127;
              swift_bridgeObjectRetain();
              sub_1C67EA810((uint64_t)v206);
              char v129 = v128;
              uint64_t v131 = v130;
              uint64_t v133 = v132;
              uint64_t v134 = *(uint64_t *)((char *)v204 + v123[7]);
              sub_1C67E9074(*(double *)((char *)v204 + v123[8]));
              char v135 = *((unsigned char *)v204 + v123[9]);
              void *v225 = v202;
              v225[1] = v120;
              v225[2] = v201;
              v136 = (char *)v225 + v124[6];
              char *v136 = v129 & 1;
              *((void *)v136 + 1) = v131;
              *((void *)v136 + 2) = v133;
              *(void *)((char *)v225 + v124[7]) = v134;
              *(void *)((char *)v225 + v124[8]) = v137;
              *((unsigned char *)v225 + v124[9]) = v135;
              uint64_t v138 = swift_bridgeObjectRetain();
              uint64_t v139 = sub_1C67AFFF4(v138);
              sub_1C66C6500((uint64_t)v225, (void (*)(void))type metadata accessor for PrivatizedContactMatchRuntimeData);
              uint64_t v140 = v203;
              v141 = sub_1C66C6248(v139);
              uint64_t v142 = swift_bridgeObjectRetain();
              sub_1C66C5FA8(v142, (uint64_t)v141);
              uint64_t v5 = v140;
              v143 = (void *)sub_1C68EC868();
              sub_1C65ED460();
              v144 = (void *)sub_1C68EC708();
              AnalyticsSendEvent();
              swift_bridgeObjectRelease();

              v105 = v204;
              v104 = v225;
              sub_1C66C6500((uint64_t)v105, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
              swift_bridgeObjectRelease();
              v119 += v199;
              --v116;
            }
            while (v116);
          }
          unint64_t v81 = v191 + 1;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v76 = v194;
          sub_1C66C6500(v194, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
          uint64_t v67 = v186;
          uint64_t v65 = v187;
          uint64_t v80 = v179;
          if (v81 == v177)
          {
            swift_bridgeObjectRelease();
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_57:
        __break(1u);
        break;
      }
LABEL_40:
      unint64_t v145 = v171 + 1;
      sub_1C66C6500(v189, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
      unint64_t v75 = v145;
      uint64_t v74 = v169;
      if (v145 == v168)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
    goto LABEL_59;
  }
}

uint64_t sub_1C66C5B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C66C5BA4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1C66C5BDC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C66C5C30(uint64_t a1)
{
  return a1;
}

void sub_1C66C5CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C689D35C(a1, a2, a3, a4 & 0x101010101010101);
  if (!v4)
  {
    uint64_t v6 = (uint64_t)v5;
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1C66C5FA8(v7, v6);
    uint64_t v8 = (void *)sub_1C68EC868();
    sub_1C65ED460();
    uint64_t v9 = (void *)sub_1C68EC708();
    AnalyticsSendEvent();
    swift_bridgeObjectRelease();
  }
}

void sub_1C66C5D80()
{
  uint64_t v1 = sub_1C689D7A8();
  if (!v0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1C66C5FA8(v3, v2);
    uint64_t v4 = (void *)sub_1C68EC868();
    sub_1C65ED460();
    uint64_t v5 = (void *)sub_1C68EC708();
    AnalyticsSendEvent();
    swift_bridgeObjectRelease();
  }
}

void sub_1C66C5E38()
{
  uint64_t v1 = sub_1C689D908();
  if (!v0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1C66C5FA8(v3, v2);
    uint64_t v4 = (void *)sub_1C68EC868();
    sub_1C65ED460();
    uint64_t v5 = (void *)sub_1C68EC708();
    AnalyticsSendEvent();
    swift_bridgeObjectRelease();
  }
}

void sub_1C66C5EF0()
{
  uint64_t v1 = sub_1C689DA68();
  if (!v0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1C66C5FA8(v3, v2);
    uint64_t v4 = (void *)sub_1C68EC868();
    sub_1C65ED460();
    uint64_t v5 = (void *)sub_1C68EC708();
    AnalyticsSendEvent();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C66C5FA8(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1C66C6034(a1, (uint64_t)sub_1C66C6558, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1C66C6034(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_1C6767D98(&v32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C6767DD8();
  if (v8)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    while (1)
    {
      uint64_t v13 = (void *)*a5;
      unint64_t v15 = sub_1C68506A0(v10, v11);
      uint64_t v16 = v13[2];
      BOOL v17 = (v14 & 1) == 0;
      if (__OFADD__(v16, v17)) {
        break;
      }
      char v18 = v14;
      if (v13[3] >= v16 + v17)
      {
        if ((a4 & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A60);
          sub_1C68ED4E8();
        }
      }
      else
      {
        sub_1C66120A0();
        unint64_t v19 = sub_1C68506A0(v10, v11);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_17;
        }
        unint64_t v15 = v19;
      }
      uint64_t v21 = (void *)*a5;
      if (v18)
      {
        id v22 = *(id *)(v21[7] + 8 * v15);
        swift_bridgeObjectRelease();

        uint64_t v23 = v21[7];
        *(void *)(v23 + 8 * v15) = v22;
      }
      else
      {
        v21[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v24 = (uint64_t *)(v21[6] + 16 * v15);
        *uint64_t v24 = v10;
        v24[1] = v11;
        *(void *)(v21[7] + 8 * v15) = v12;
        uint64_t v25 = v21[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_16;
        }
        v21[2] = v27;
      }
      sub_1C6767DD8();
      uint64_t v10 = v28;
      uint64_t v11 = v29;
      uint64_t v12 = v30;
      a4 = 1;
      if (!v29) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C68ED868();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C6645058();
    return swift_release();
  }
  return result;
}

void *sub_1C66C6248(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF65F0);
  uint64_t result = (void *)sub_1C68ED538();
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = (char *)(result + 8);
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    double v19 = *(double *)(*(void *)(a1 + 56) + 8 * i);
    id v20 = objc_allocWithZone(NSNumber);
    swift_bridgeObjectRetain();
    uint64_t result = objc_msgSend(v20, sel_initWithDouble_, v19);
    *(void *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    uint64_t v21 = (void *)(v3[6] + 16 * i);
    *uint64_t v21 = v18;
    v21[1] = v17;
    *(void *)(v3[7] + 8 * i) = result;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return v3;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return v3;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return v3;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C66C644C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_18();
  v5(v4);
  return a2;
}

uint64_t sub_1C66C64A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C66C6500(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C66C6558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C6767CE0(&v6, *(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16));
  uint64_t v4 = v6;
  *a2 = result;
  a2[1] = v5;
  a2[2] = v4;
  return result;
}

uint64_t sub_1C66C65B0(uint64_t a1, void *a2, double a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v8 = v7;
  int v84 = a7;
  int v78 = a6;
  uint64_t v83 = a2;
  uint64_t v80 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v77 = v12;
  MEMORY[0x1F4188790](v13);
  int64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PrivatizedContactResolverConfig(0);
  MEMORY[0x1F4188790](v16 - 8);
  OUTLINED_FUNCTION_1();
  uint64_t v88 = v17;
  uint64_t v18 = type metadata accessor for ContactResolverDESRecord();
  MEMORY[0x1F4188790](v18 - 8);
  id v20 = (uint64_t *)((char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for StitchedContactResolverRecommendation(0);
  uint64_t v71 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v87 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v66 - v24;
  uint64_t v26 = type metadata accessor for StitchedContactResolverRequest(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v74 = v27;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_1();
  uint64_t v86 = v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  uint64_t v31 = MEMORY[0x1F4188790](v30 - 8);
  uint64_t v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v66 - v34;
  uint64_t v82 = (int *)type metadata accessor for StitchedContactData(0);
  uint64_t v36 = v82[7];
  uint64_t v85 = a1;
  uint64_t v81 = a1 + v36;
  sub_1C66C5B3C(a1 + v36, (uint64_t)v35);
  uint64_t v37 = type metadata accessor for StitchableInteraction();
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v37) == 1)
  {
    uint64_t result = sub_1C66C6EE4((uint64_t)v35);
    double v39 = 0.0;
  }
  else
  {
    double v39 = *(double *)&v35[*(int *)(v37 + 28)];
    uint64_t result = sub_1C66C6FAC((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StitchableInteraction);
  }
  if ((~*(void *)&v39 & 0x7FF0000000000000) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_once();
    goto LABEL_28;
  }
  uint64_t v40 = *(void *)(v85 + 32);
  uint64_t v70 = *(void *)(v40 + 16);
  if (!v70) {
    return result;
  }
  uint64_t v79 = (uint64_t)v39;
  uint64_t v72 = v40 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
  int v41 = v78 & 1;
  if (!a5) {
    int v41 = 2;
  }
  int v78 = v41;
  v77 += 8;
  swift_bridgeObjectRetain();
  unint64_t v42 = 0;
  double v43 = fmax(a3, 0.001);
  uint64_t v75 = v37;
  uint64_t v67 = v26;
  uint64_t v68 = v40;
  while (1)
  {
    if (v42 >= *(void *)(v40 + 16))
    {
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v44 = *(void *)(v74 + 72);
    unint64_t v73 = v42;
    uint64_t v45 = v86;
    sub_1C66C6F44(v72 + v44 * v42, v86, type metadata accessor for StitchedContactResolverRequest);
    uint64_t v46 = *(void *)(v45 + *(int *)(v26 + 24));
    uint64_t v47 = *(void *)(v46 + 16);
    if (v47) {
      break;
    }
LABEL_23:
    unint64_t v59 = v73 + 1;
    sub_1C66C6FAC(v86, type metadata accessor for StitchedContactResolverRequest);
    unint64_t v42 = v59;
    uint64_t v26 = v67;
    if (v59 == v70) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v48 = v71;
  uint64_t v49 = v46 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
  uint64_t v69 = v46;
  swift_bridgeObjectRetain();
  uint64_t v76 = *(void *)(v48 + 72);
  while (1)
  {
    sub_1C66C6F44(v49, (uint64_t)v25, type metadata accessor for StitchedContactResolverRecommendation);
    uint64_t v50 = type metadata accessor for ContactResolverRunTimeData(0);
    if ((v84 & 1) == 0 && (v25[*(int *)(v50 + 48)] & 1) == 0)
    {
      sub_1C6735EE4(v50, 0.0, 1.0);
      if (v51 >= v43) {
        break;
      }
    }
    sub_1C66C6F44(v86, v88, type metadata accessor for PrivatizedContactResolverConfig);
    sub_1C66C6F44((uint64_t)v25, v87, type metadata accessor for StitchedContactResolverRecommendation);
    sub_1C66C5B3C(v81, (uint64_t)v33);
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v37) == 1)
    {
      sub_1C66C6EE4((uint64_t)v33);
      uint64_t v52 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v53 = *(int *)(v37 + 36);
      uint64_t v54 = v20;
      uint64_t v55 = *(void *)&v33[v53];
      swift_bridgeObjectRetain();
      sub_1C66C6FAC((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StitchableInteraction);
      uint64_t v52 = sub_1C664C3F0(v55);
      id v20 = v54;
      swift_bridgeObjectRelease();
    }
    sub_1C66C7380(v88, v87, v52, *(unsigned char *)(v85 + v82[12]), v79, v78, *(unsigned int *)(v85 + v82[8]) | ((unint64_t)(*(unsigned __int16 *)(v85 + v82[8] + 4) | (*(unsigned __int8 *)(v85 + v82[8] + 6) << 16)) << 32), v20);
    uint64_t v56 = *__swift_project_boxed_opaque_existential_1(v83, v83[3]);
    sub_1C68E9B68();
    sub_1C671CEBC((uint64_t)v20, (uint64_t)v15, v56);
    if (v8)
    {
      uint64_t v60 = OUTLINED_FUNCTION_1_36();
      v61(v60);
      sub_1C66C6FAC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ContactResolverDESRecord);
      sub_1C66C6FAC((uint64_t)v25, type metadata accessor for StitchedContactResolverRecommendation);
      swift_bridgeObjectRelease();
      sub_1C66C6FAC(v86, type metadata accessor for StitchedContactResolverRequest);
      return swift_bridgeObjectRelease();
    }
    uint64_t v57 = OUTLINED_FUNCTION_1_36();
    v58(v57);
    sub_1C66C6FAC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ContactResolverDESRecord);
    sub_1C66C6FAC((uint64_t)v25, type metadata accessor for StitchedContactResolverRecommendation);
    uint64_t v37 = v75;
    v49 += v76;
    if (!--v47)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v68;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EBBF5DA0 != -1) {
    goto LABEL_36;
  }
LABEL_28:
  uint64_t v62 = sub_1C68EC478();
  __swift_project_value_buffer(v62, (uint64_t)&unk_1EBBF7A68);
  double v63 = sub_1C68EC458();
  os_log_type_t v64 = sub_1C68ECE48();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v65 = 0;
    _os_log_impl(&dword_1C65AE000, v63, v64, "skipping logging for non-force prompt", v65, 2u);
    MEMORY[0x1C87A54F0](v65, -1, -1);
  }

  sub_1C66C6FAC((uint64_t)v25, type metadata accessor for StitchedContactResolverRecommendation);
  return sub_1C66C6FAC(v86, type metadata accessor for StitchedContactResolverRequest);
}

double sub_1C66C6DA4()
{
  id v0 = objc_msgSend(self, sel_clientWithIdentifier_, 112);
  uint64_t v1 = (void *)sub_1C68EC868();
  uint64_t v2 = (void *)sub_1C68EC868();
  id v3 = objc_msgSend(v0, sel_levelForFactor_withNamespaceName_, v1, v2);

  if (v3)
  {
    objc_msgSend(v3, sel_doubleValue);
    double v5 = v4;
  }
  else
  {
    double v5 = 0.0;
  }

  return v5;
}

BOOL sub_1C66C6E94(char a1, char a2, double a3)
{
  BOOL result = 1;
  if ((a2 & 1) == 0 && (a1 & 1) == 0)
  {
    double v5 = fmax(a3, 0.001);
    sub_1C6735EE4(1, 0.0, 1.0);
    return v6 < v5;
  }
  return result;
}

uint64_t sub_1C66C6EE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C66C6F44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C66C6FAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_36()
{
  return v0;
}

uint64_t sub_1C66C7028(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v38 = (uint64_t)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for PrivatizedContactMatchRuntimeData(0);
  uint64_t v36 = *(void *)(matched - 8);
  uint64_t v37 = (int *)matched;
  MEMORY[0x1F4188790](matched);
  uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1C669FF10(0, v9, 0);
    uint64_t v10 = v46;
    uint64_t v35 = type metadata accessor for ContactMatchRuntimeData(0);
    unint64_t v11 = (void *)(a1
                   + ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80)));
    uint64_t v34 = *(void *)(*(void *)(v35 - 8) + 72);
    v33[1] = type metadata accessor for Contact();
    uint64_t v12 = (int *)v35;
    do
    {
      uint64_t v13 = v11[1];
      uint64_t v40 = *v11;
      uint64_t v41 = v10;
      swift_bridgeObjectRetain();
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v39 = sub_1C6838940(v14);
      uint64_t v42 = v2;
      swift_bridgeObjectRelease();
      uint64_t v15 = v38;
      sub_1C66CA810((uint64_t)v11 + v12[5], v38, (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
      uint64_t v16 = v37;
      sub_1C67E96DC(v15, (uint64_t)v8 + v37[5]);
      uint64_t v17 = (char *)v11 + v12[6];
      uint64_t v18 = *((void *)v17 + 1);
      uint64_t v19 = *((void *)v17 + 2);
      v43[0] = *v17;
      uint64_t v44 = v18;
      uint64_t v45 = v19;
      swift_bridgeObjectRetain();
      sub_1C67EA810((uint64_t)v43);
      LOBYTE(v15) = v20;
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)((char *)v11 + v12[7]);
      sub_1C67E9074(*(double *)((char *)v11 + v12[8]));
      char v26 = *((unsigned char *)v11 + v12[9]);
      *uint64_t v8 = v40;
      v8[1] = v13;
      v8[2] = v39;
      uint64_t v27 = (char *)v8 + v16[6];
      *uint64_t v27 = v15 & 1;
      *((void *)v27 + 1) = v22;
      *((void *)v27 + 2) = v24;
      *(void *)((char *)v8 + v16[7]) = v25;
      *(void *)((char *)v8 + v16[8]) = v28;
      uint64_t v29 = v16[9];
      uint64_t v10 = v41;
      *((unsigned char *)v8 + v29) = v26;
      uint64_t v46 = v10;
      unint64_t v30 = *(void *)(v10 + 16);
      unint64_t v31 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v30 >= v31 >> 1)
      {
        sub_1C669FF10(v31 > 1, v30 + 1, 1);
        uint64_t v10 = v46;
      }
      unint64_t v11 = (void *)((char *)v11 + v34);
      *(void *)(v10 + 16) = v30 + 1;
      sub_1C66CA50C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v30, (void (*)(void))type metadata accessor for PrivatizedContactMatchRuntimeData);
      --v9;
      uint64_t v2 = v42;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C66C7380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v9 = a1;
  uint64_t v11 = type metadata accessor for ContactResolverRunTimeData(0) - 8;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_15();
  uint64_t v42 = v13 - v12;
  *a8 = 2;
  uint64_t v14 = (int *)type metadata accessor for ContactResolverDESRecord();
  uint64_t v15 = (void *)((char *)a8 + v14[7]);
  uint64_t v16 = (char *)a8 + v14[14];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  *((void *)v16 + 2) = 0;
  v16[24] = -1;
  uint64_t v44 = v14[17];
  *((unsigned char *)a8 + v44) = 2;
  uint64_t v39 = (char *)a8 + v14[19];
  v39[6] = 0;
  *((_WORD *)v39 + 2) = 0;
  *(_DWORD *)uint64_t v39 = 2;
  sub_1C68E9BE8();
  sub_1C66CA810(v9, (uint64_t)a8 + v14[6], (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
  uint64_t v17 = (uint64_t *)(a2 + *(int *)(v11 + 68));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v20 = v17[2];
  uint64_t v21 = v17[3];
  uint64_t v22 = v17[4];
  uint64_t v23 = v17[5];
  *uint64_t v15 = *v17;
  v15[1] = v19;
  v15[2] = v20;
  v15[3] = v21;
  v15[4] = v22;
  v15[5] = v23;
  *((unsigned char *)a8 + v14[8]) = *(unsigned char *)(a2 + 264);
  uint64_t v24 = *(void *)(a2 + 280);
  uint64_t v25 = (void *)((char *)a8 + v14[9]);
  *uint64_t v25 = *(void *)(a2 + 272);
  v25[1] = v24;
  *((unsigned char *)a8 + v14[10]) = *(unsigned char *)(a2 + 288);
  sub_1C66C5BDC(v18, v19);
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C66C7028(v26);
  swift_bridgeObjectRelease();
  *(void *)((char *)a8 + v14[11]) = v27;
  uint64_t v37 = v11;
  *((unsigned char *)a8 + v14[12]) = sub_1C66B3FE4();
  uint64_t v36 = a2;
  *((unsigned char *)a8 + v14[13]) = *(unsigned char *)(a2 + *(int *)(v11 + 52));
  uint64_t v28 = a2 + *(int *)(type metadata accessor for StitchedContactResolverRecommendation(0) + 20);
  uint64_t v29 = *(void *)v28;
  uint64_t v30 = *(void *)(v28 + 8);
  uint64_t v31 = *(void *)(v28 + 16);
  uint64_t v32 = *(void *)v16;
  uint64_t v35 = *((void *)v16 + 1);
  uint64_t v33 = *((void *)v16 + 2);
  LOBYTE(v9) = *(unsigned char *)(v28 + 24);
  LOBYTE(v11) = v16[24];
  sub_1C66C76F0(*(void *)v28, v30, v31, v9);
  sub_1C6654910(v32, v35, v33, v11);
  *(void *)uint64_t v16 = v29;
  *((void *)v16 + 1) = v30;
  *((void *)v16 + 2) = v31;
  v16[24] = v9;
  *(void *)((char *)a8 + v14[15]) = a3;
  *((unsigned char *)a8 + v14[16]) = a4;
  LOBYTE(v29) = sub_1C67E914C(a5);
  sub_1C66CA870(a1, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
  *((unsigned char *)a8 + v14[18]) = v29;
  v39[6] = BYTE6(a7);
  *((_WORD *)v39 + 2) = WORD2(a7);
  *(_DWORD *)uint64_t v39 = a7;
  sub_1C66CA810(v36, v42, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  sub_1C66CA870(v36, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
  LOBYTE(v29) = *(unsigned char *)(v42 + *(int *)(v37 + 72));
  uint64_t result = sub_1C66CA870(v42, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  *((unsigned char *)a8 + v14[20]) = v29;
  *((unsigned char *)a8 + v44) = a6;
  return result;
}

uint64_t type metadata accessor for ContactResolverDESRecord()
{
  uint64_t result = qword_1EA407838;
  if (!qword_1EA407838) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C66C76F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    return sub_1C665485C(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1C66C7704(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6556616D65686373 && a2 == 0xED00006E6F697372;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x726E456C61697274 && a2 == 0xEF746E656D6C6C6FLL;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E656D6D6F636572 && a2 == 0xEF65707954726564;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x80000001C69160F0 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001C6916110 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 0x7365686374616DLL && a2 == 0xE700000000000000;
            if (v10 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C6916130 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              BOOL v11 = a1 == 0x6974756C6F736572 && a2 == 0xEE00657079546E6FLL;
              if (v11 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                BOOL v12 = a1 == 0x6F72506563726F66 && a2 == 0xEB0000000074706DLL;
                if (v12 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x80000001C6916150 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x80000001C6916170 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C6916190 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD000000000000019 && a2 == 0x80000001C69161B0 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C69161D0 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else if (a1 == 0xD000000000000018 && a2 == 0x80000001C69161F0)
                {
                  swift_bridgeObjectRelease();
                  return 16;
                }
                else
                {
                  char v13 = sub_1C68ED7E8();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 16;
                  }
                  else {
                    return 17;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C66C7DE0()
{
  return 17;
}

unint64_t sub_1C66C7DE8(char a1)
{
  unint64_t result = 0x6556616D65686373;
  switch(a1)
  {
    case 1:
      unint64_t result = 25705;
      break;
    case 2:
      unint64_t result = 0x6769666E6F63;
      break;
    case 3:
      unint64_t result = 0x726E456C61697274;
      break;
    case 4:
      unint64_t result = 0x6E656D6D6F636572;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x7365686374616DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0x6974756C6F736572;
      break;
    case 10:
      unint64_t result = 0x6F72506563726F66;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000019;
      break;
    case 15:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66C801C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407848);
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_15();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66CA2F8();
  sub_1C68EDA08();
  OUTLINED_FUNCTION_19_15();
  sub_1C68ED738();
  if (!v1)
  {
    BOOL v10 = (int *)type metadata accessor for ContactResolverDESRecord();
    sub_1C68E9BF8();
    sub_1C66CA698(&qword_1EA407488, MEMORY[0x1E4F27990]);
    OUTLINED_FUNCTION_9_18();
    type metadata accessor for PrivatizedContactResolverConfig(0);
    sub_1C66CA698(&qword_1EA407858, (void (*)(uint64_t))type metadata accessor for PrivatizedContactResolverConfig);
    OUTLINED_FUNCTION_9_18();
    sub_1C66CA344();
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_17_16(v10[8]);
    sub_1C66CA390();
    OUTLINED_FUNCTION_2_29();
    sub_1C68ED708();
    OUTLINED_FUNCTION_6_19(6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407870);
    sub_1C66CA604(&qword_1EA407878, &qword_1EA407880);
    OUTLINED_FUNCTION_9_18();
    OUTLINED_FUNCTION_17_16(v10[12]);
    sub_1C65E584C();
    OUTLINED_FUNCTION_2_29();
    OUTLINED_FUNCTION_17_16(v10[13]);
    sub_1C66CA3DC();
    OUTLINED_FUNCTION_2_29();
    sub_1C66CA428();
    OUTLINED_FUNCTION_4_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
    sub_1C66C42C0(&qword_1EA406E00);
    OUTLINED_FUNCTION_9_18();
    OUTLINED_FUNCTION_6_19(12);
    OUTLINED_FUNCTION_19_15();
    sub_1C68ED6C8();
    OUTLINED_FUNCTION_17_16(v10[18]);
    sub_1C66CA474();
    OUTLINED_FUNCTION_2_29();
    sub_1C66CA4C0();
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_6_19(16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1C66C8500@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for PrivatizedContactResolverConfig(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1_15();
  uint64_t v6 = v5 - v4;
  sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v35 = v8;
  uint64_t v36 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_15();
  uint64_t v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4078B0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1_15();
  type metadata accessor for ContactResolverDESRecord();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1_15();
  uint64_t v16 = (void *)(v15 - v14);
  *uint64_t v16 = 2;
  uint64_t v18 = (_OWORD *)(v15 - v14 + v17[7]);
  *uint64_t v18 = xmmword_1C68EF950;
  v18[1] = 0u;
  uint64_t v40 = v18;
  uint64_t v41 = (uint64_t *)(v15 - v14);
  v18[2] = 0u;
  uint64_t v19 = v15 - v14 + v17[14];
  *(void *)uint64_t v19 = 0;
  *(void *)(v19 + 8) = 0;
  *(void *)(v19 + 16) = 0;
  uint64_t v38 = (uint64_t)a1;
  uint64_t v39 = v19;
  *(unsigned char *)(v19 + 24) = -1;
  uint64_t v20 = v17[17];
  *((unsigned char *)v16 + v20) = 2;
  uint64_t v42 = v17;
  uint64_t v21 = v17[19];
  uint64_t v22 = v15 - v14 + v21;
  *(unsigned char *)(v22 + 6) = 0;
  *(_WORD *)(v22 + 4) = 0;
  *(_DWORD *)uint64_t v22 = 2;
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  unsigned int v25 = __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1C66CA2F8();
  sub_1C68ED9E8();
  if (v37)
  {
    OUTLINED_FUNCTION_12_15();
    __swift_destroy_boxed_opaque_existential_1(v38);
    if (v24) {
      sub_1C66CA870((uint64_t)v41 + v42[6], (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
    }
    sub_1C65E0B14(*(void *)v40, *((void *)v40 + 1));
    if (v6) {
      swift_bridgeObjectRelease();
    }
    if (v23) {
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1C6654910(*(void *)v39, *(void *)(v39 + 8), *(void *)(v39 + 16), *(unsigned char *)(v39 + 24));
    if (v25) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    *uint64_t v41 = sub_1C68ED648();
    sub_1C66CA698(&qword_1EA4074E8, MEMORY[0x1E4F27990]);
    sub_1C68ED668();
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))((char *)v41 + v42[5], v11, v36);
    LOBYTE(v43) = 2;
    sub_1C66CA698(&qword_1EA4078B8, (void (*)(uint64_t))type metadata accessor for PrivatizedContactResolverConfig);
    sub_1C68ED668();
    sub_1C66CA50C(v6, (uint64_t)v41 + v42[6], (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
    sub_1C66CA56C();
    sub_1C68ED608();
    *uint64_t v40 = v43;
    v40[1] = v44;
    v40[2] = v45;
    sub_1C66CA5B8();
    OUTLINED_FUNCTION_7_22();
    *((unsigned char *)v41 + v42[8]) = 2;
    OUTLINED_FUNCTION_16_13(5);
    uint64_t v26 = sub_1C68ED618();
    uint64_t v27 = (uint64_t *)((char *)v41 + v42[9]);
    *uint64_t v27 = v26;
    v27[1] = v28;
    *((unsigned char *)v41 + v42[10]) = OUTLINED_FUNCTION_10_17(6) & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407870);
    sub_1C66CA604(&qword_1EA4078D0, &qword_1EA4078D8);
    OUTLINED_FUNCTION_11_16();
    *(uint64_t *)((char *)v41 + v42[11]) = v43;
    sub_1C65E5800();
    OUTLINED_FUNCTION_7_22();
    *((unsigned char *)v41 + v42[12]) = 2;
    sub_1C66CA6E0();
    sub_1C68ED668();
    *((unsigned char *)v41 + v42[13]) = 2;
    sub_1C66CA72C();
    OUTLINED_FUNCTION_14_16();
    *(_OWORD *)uint64_t v39 = v43;
    *(void *)(v39 + 16) = v44;
    *(unsigned char *)(v39 + 24) = BYTE8(v44);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
    sub_1C66C42C0(&qword_1EA406DF0);
    OUTLINED_FUNCTION_11_16();
    *(uint64_t *)((char *)v41 + v42[15]) = v43;
    *((unsigned char *)v41 + v42[16]) = OUTLINED_FUNCTION_10_17(12) & 1;
    OUTLINED_FUNCTION_16_13(13);
    *((unsigned char *)v41 + v20) = sub_1C68ED5D8();
    sub_1C66CA778();
    OUTLINED_FUNCTION_7_22();
    *((unsigned char *)v41 + v42[18]) = 2;
    sub_1C66CA7C4();
    OUTLINED_FUNCTION_14_16();
    uint64_t v29 = (char *)v41 + v21;
    v29[6] = BYTE6(v43);
    *((_WORD *)v29 + 2) = WORD2(v43);
    *(_DWORD *)uint64_t v29 = v43;
    char v30 = OUTLINED_FUNCTION_10_17(16);
    uint64_t v31 = OUTLINED_FUNCTION_8_25();
    v32(v31);
    *((unsigned char *)v41 + v42[20]) = v30 & 1;
    sub_1C66CA810((uint64_t)v41, a2, (void (*)(void))type metadata accessor for ContactResolverDESRecord);
    __swift_destroy_boxed_opaque_existential_1(v38);
    return sub_1C66CA870((uint64_t)v41, (void (*)(void))type metadata accessor for ContactResolverDESRecord);
  }
  return result;
}

unint64_t sub_1C66C8D3C()
{
  return sub_1C66C7DE8(*v0);
}

uint64_t sub_1C66C8D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66C7704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66C8D6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66C7DE0();
  *a1 = result;
  return result;
}

uint64_t sub_1C66C8D94(uint64_t a1)
{
  unint64_t v2 = sub_1C66CA2F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66C8DD0(uint64_t a1)
{
  unint64_t v2 = sub_1C66CA2F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C66C8E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C66C8500(a1, a2);
}

uint64_t sub_1C66C8E24(void *a1)
{
  return sub_1C66C801C(a1);
}

void *sub_1C66C8E3C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C68E9BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *uint64_t v12 = *((unsigned char *)a2 + v11);
    uint64_t v14 = *(void *)((char *)a2 + v11 + 16);
    *((void *)v12 + 1) = *(void *)((char *)a2 + v11 + 8);
    *((void *)v12 + 2) = v14;
    uint64_t v15 = *(void *)((char *)a2 + v11 + 32);
    *((void *)v12 + 3) = *(void *)((char *)a2 + v11 + 24);
    *((void *)v12 + 4) = v15;
    uint64_t v16 = *(void *)((char *)a2 + v11 + 48);
    *((void *)v12 + 5) = *(void *)((char *)a2 + v11 + 40);
    *((void *)v12 + 6) = v16;
    uint64_t v17 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
    uint64_t v18 = v17[8];
    uint64_t v54 = &v13[v18];
    uint64_t v55 = &v12[v18];
    uint64_t v19 = sub_1C68E9C68();
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v55, v54, v19);
    v12[v17[9]] = v13[v17[9]];
    *(void *)&v12[v17[10]] = *(void *)&v13[v17[10]];
    v12[v17[11]] = v13[v17[11]];
    *(void *)&v12[v17[12]] = *(void *)&v13[v17[12]];
    v12[v17[13]] = v13[v17[13]];
    uint64_t v20 = v17[14];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = a3[7];
    unsigned int v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)((char *)a2 + v24 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27 == 1)
    {
      long long v28 = *((_OWORD *)v26 + 1);
      *(_OWORD *)unsigned int v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v28;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    }
    else
    {
      *(void *)unsigned int v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v30 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v30;
      uint64_t v31 = *((void *)v26 + 4);
      uint64_t v32 = *((void *)v26 + 5);
      *((void *)v25 + 4) = v31;
      *((void *)v25 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v33 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v34 = (void *)((char *)v4 + v33);
    uint64_t v35 = (void *)((char *)a2 + v33);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(void *)((char *)v4 + v37) = *(void *)((char *)a2 + v37);
    uint64_t v38 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v38) = *((unsigned char *)a2 + v38);
    uint64_t v39 = a3[14];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (char *)a2 + v39;
    int v42 = *((unsigned __int8 *)a2 + v39 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42 == 255)
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 9) = *(_OWORD *)(v41 + 9);
    }
    else
    {
      uint64_t v43 = *(void *)v41;
      uint64_t v44 = *((void *)v41 + 1);
      uint64_t v45 = *((void *)v41 + 2);
      sub_1C665485C(v43, v44, v45, v42);
      *(void *)uint64_t v40 = v43;
      *((void *)v40 + 1) = v44;
      *((void *)v40 + 2) = v45;
      v40[24] = v42;
    }
    uint64_t v46 = a3[16];
    *(void *)((char *)v4 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *((unsigned char *)v4 + v46) = *((unsigned char *)a2 + v46);
    uint64_t v47 = a3[18];
    *((unsigned char *)v4 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    *((unsigned char *)v4 + v47) = *((unsigned char *)a2 + v47);
    uint64_t v48 = a3[19];
    uint64_t v49 = a3[20];
    uint64_t v50 = (_DWORD *)((char *)v4 + v48);
    double v51 = (_DWORD *)((char *)a2 + v48);
    *uint64_t v50 = *v51;
    *(_DWORD *)((char *)v50 + 3) = *(_DWORD *)((char *)v51 + 3);
    *((unsigned char *)v4 + v49) = *((unsigned char *)a2 + v49);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C66C917C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C68E9BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for PrivatizedContactResolverConfig(0) + 32);
  uint64_t v8 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[14];
  int v10 = *(unsigned __int8 *)(v9 + 24);
  if (v10 != 255) {
    sub_1C66548B8(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), v10);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1C66C92F4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C68E9BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *((unsigned char *)a2 + v10);
  uint64_t v13 = *(void *)((char *)a2 + v10 + 16);
  *((void *)v11 + 1) = *(void *)((char *)a2 + v10 + 8);
  *((void *)v11 + 2) = v13;
  uint64_t v14 = *(void *)((char *)a2 + v10 + 32);
  *((void *)v11 + 3) = *(void *)((char *)a2 + v10 + 24);
  *((void *)v11 + 4) = v14;
  uint64_t v15 = *(void *)((char *)a2 + v10 + 48);
  *((void *)v11 + 5) = *(void *)((char *)a2 + v10 + 40);
  *((void *)v11 + 6) = v15;
  uint64_t v16 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  uint64_t v17 = v16[8];
  uint64_t v52 = &v12[v17];
  uint64_t v53 = &v11[v17];
  uint64_t v18 = sub_1C68E9C68();
  double v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51(v53, v52, v18);
  v11[v16[9]] = v12[v16[9]];
  *(void *)&v11[v16[10]] = *(void *)&v12[v16[10]];
  v11[v16[11]] = v12[v16[11]];
  *(void *)&v11[v16[12]] = *(void *)&v12[v16[12]];
  v11[v16[13]] = v12[v16[13]];
  uint64_t v19 = v16[14];
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  unsigned int v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26 == 1)
  {
    long long v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v27;
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  }
  else
  {
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v28 = *((void *)v25 + 3);
    *((void *)v24 + 2) = *((void *)v25 + 2);
    *((void *)v24 + 3) = v28;
    uint64_t v29 = *((void *)v25 + 4);
    uint64_t v30 = *((void *)v25 + 5);
    *((void *)v24 + 4) = v29;
    *((void *)v24 + 5) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + v35) = *(void *)((char *)a2 + v35);
  uint64_t v36 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v37 = a3[14];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  int v40 = *((unsigned __int8 *)a2 + v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40 == 255)
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    *(_OWORD *)(v38 + 9) = *(_OWORD *)(v39 + 9);
  }
  else
  {
    uint64_t v41 = *(void *)v39;
    uint64_t v42 = *((void *)v39 + 1);
    uint64_t v43 = *((void *)v39 + 2);
    sub_1C665485C(v41, v42, v43, v40);
    *(void *)uint64_t v38 = v41;
    *((void *)v38 + 1) = v42;
    *((void *)v38 + 2) = v43;
    v38[24] = v40;
  }
  uint64_t v44 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  uint64_t v45 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + v45) = *((unsigned char *)a2 + v45);
  uint64_t v46 = a3[19];
  uint64_t v47 = a3[20];
  uint64_t v48 = (_DWORD *)((char *)a1 + v46);
  uint64_t v49 = (_DWORD *)((char *)a2 + v46);
  _DWORD *v48 = *v49;
  *(_DWORD *)((char *)v48 + 3) = *(_DWORD *)((char *)v49 + 3);
  *((unsigned char *)a1 + v47) = *((unsigned char *)a2 + v47);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C66C95E4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C68E9BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *((unsigned char *)a2 + v10);
  *((void *)v11 + 1) = *(void *)((char *)a2 + v10 + 8);
  *((void *)v11 + 2) = *(void *)((char *)a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 3) = v12[3];
  *((void *)v11 + 4) = v12[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 5) = v12[5];
  *((void *)v11 + 6) = v12[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  uint64_t v14 = v13[8];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = (char *)v12 + v14;
  uint64_t v17 = sub_1C68E9C68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  v11[v13[9]] = *((unsigned char *)v12 + v13[9]);
  *(void *)&v11[v13[10]] = *(void *)((char *)v12 + v13[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v13[11]] = *((unsigned char *)v12 + v13[11]);
  *(void *)&v11[v13[12]] = *(void *)((char *)v12 + v13[12]);
  v11[v13[13]] = *((unsigned char *)v12 + v13[13]);
  uint64_t v18 = v13[14];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = (void *)((char *)v12 + v18);
  *(void *)uint64_t v19 = *v20;
  *((void *)v19 + 1) = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (uint64_t)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a1 + v21 + 8);
  uint64_t v25 = *(void *)((char *)a2 + v21 + 8);
  if (v24 == 1)
  {
    if (v25 == 1)
    {
      long long v26 = *(_OWORD *)v23;
      long long v27 = *((_OWORD *)v23 + 2);
      *(_OWORD *)(v22 + 16) = *((_OWORD *)v23 + 1);
      *(_OWORD *)(v22 + 32) = v27;
      *(_OWORD *)uint64_t v22 = v26;
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *(void *)(v22 + 8) = *((void *)v23 + 1);
      *(void *)(v22 + 16) = *((void *)v23 + 2);
      *(void *)(v22 + 24) = *((void *)v23 + 3);
      *(void *)(v22 + 32) = *((void *)v23 + 4);
      *(void *)(v22 + 40) = *((void *)v23 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v25 == 1)
  {
    sub_1C66C9A58(v22);
    long long v29 = *((_OWORD *)v23 + 1);
    long long v28 = *((_OWORD *)v23 + 2);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v29;
    *(_OWORD *)(v22 + 32) = v28;
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = *((void *)v23 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v22 + 16) = *((void *)v23 + 2);
    *(void *)(v22 + 24) = *((void *)v23 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v22 + 32) = *((void *)v23 + 4);
    *(void *)(v22 + 40) = *((void *)v23 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v33 = a3[14];
  uint64_t v34 = (uint64_t)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  int v36 = *((unsigned __int8 *)a2 + v33 + 24);
  if (*((unsigned __int8 *)a1 + v33 + 24) == 255)
  {
    if (v36 == 255)
    {
      long long v48 = *(_OWORD *)v35;
      *(_OWORD *)(v34 + 9) = *(_OWORD *)(v35 + 9);
      *(_OWORD *)uint64_t v34 = v48;
    }
    else
    {
      uint64_t v44 = *(void *)v35;
      uint64_t v45 = *((void *)v35 + 1);
      uint64_t v46 = *((void *)v35 + 2);
      sub_1C665485C(v44, v45, v46, v36);
      *(void *)uint64_t v34 = v44;
      *(void *)(v34 + 8) = v45;
      *(void *)(v34 + 16) = v46;
      *(unsigned char *)(v34 + 24) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_1C66C9AAC(v34);
    long long v47 = *(_OWORD *)(v35 + 9);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 9) = v47;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    uint64_t v38 = *((void *)v35 + 1);
    uint64_t v39 = *((void *)v35 + 2);
    sub_1C665485C(v37, v38, v39, v36);
    uint64_t v40 = *(void *)v34;
    uint64_t v41 = *(void *)(v34 + 8);
    uint64_t v42 = *(void *)(v34 + 16);
    *(void *)uint64_t v34 = v37;
    *(void *)(v34 + 8) = v38;
    *(void *)(v34 + 16) = v39;
    unsigned __int8 v43 = *(unsigned char *)(v34 + 24);
    *(unsigned char *)(v34 + 24) = v36;
    sub_1C66548B8(v40, v41, v42, v43);
  }
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  uint64_t v49 = a3[19];
  uint64_t v50 = (_DWORD *)((char *)a1 + v49);
  double v51 = (int *)((char *)a2 + v49);
  int v52 = *v51;
  *(_DWORD *)((char *)v50 + 3) = *(int *)((char *)v51 + 3);
  *uint64_t v50 = v52;
  *((unsigned char *)a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  return a1;
}

uint64_t sub_1C66C9A58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C66C9AAC(uint64_t a1)
{
  return a1;
}

void *sub_1C66C9B00(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C68E9BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *((unsigned char *)a2 + v10);
  *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)((char *)a2 + v10 + 24);
  *(_OWORD *)(v11 + 40) = *(_OWORD *)((char *)a2 + v10 + 40);
  uint64_t v13 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  uint64_t v14 = v13[8];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = sub_1C68E9C68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  v11[v13[9]] = v12[v13[9]];
  *(void *)&v11[v13[10]] = *(void *)&v12[v13[10]];
  v11[v13[11]] = v12[v13[11]];
  *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
  v11[v13[13]] = v12[v13[13]];
  *(_OWORD *)&v11[v13[14]] = *(_OWORD *)&v12[v13[14]];
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (_OWORD *)((char *)a1 + v18);
  uint64_t v21 = (_OWORD *)((char *)a2 + v18);
  long long v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  v20[2] = v21[2];
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v23 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  uint64_t v24 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  uint64_t v25 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  long long v26 = (_OWORD *)((char *)a1 + v25);
  long long v27 = (_OWORD *)((char *)a2 + v25);
  *long long v26 = *v27;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v27 + 9);
  uint64_t v28 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v29 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
  uint64_t v30 = a3[19];
  uint64_t v31 = a3[20];
  uint64_t v32 = (_DWORD *)((char *)a1 + v30);
  uint64_t v33 = (_DWORD *)((char *)a2 + v30);
  *uint64_t v32 = *v33;
  *(_DWORD *)((char *)v32 + 3) = *(_DWORD *)((char *)v33 + 3);
  *((unsigned char *)a1 + v31) = *((unsigned char *)a2 + v31);
  return a1;
}

void *sub_1C66C9D18(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C68E9BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *((unsigned char *)a2 + v10);
  uint64_t v13 = *(void *)((char *)a2 + v10 + 16);
  *((void *)v11 + 1) = *(void *)((char *)a2 + v10 + 8);
  *((void *)v11 + 2) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = v12[4];
  *((void *)v11 + 3) = v12[3];
  *((void *)v11 + 4) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v12[6];
  *((void *)v11 + 5) = v12[5];
  *((void *)v11 + 6) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  uint64_t v17 = v16[8];
  uint64_t v18 = &v11[v17];
  uint64_t v19 = (char *)v12 + v17;
  uint64_t v20 = sub_1C68E9C68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  v11[v16[9]] = *((unsigned char *)v12 + v16[9]);
  *(void *)&v11[v16[10]] = *(void *)((char *)v12 + v16[10]);
  swift_bridgeObjectRelease();
  v11[v16[11]] = *((unsigned char *)v12 + v16[11]);
  *(void *)&v11[v16[12]] = *(void *)((char *)v12 + v16[12]);
  v11[v16[13]] = *((unsigned char *)v12 + v16[13]);
  uint64_t v21 = v16[14];
  long long v22 = &v11[v21];
  uint64_t v23 = (void *)((char *)v12 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *(void *)long long v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[7];
  uint64_t v27 = (uint64_t)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  if (*(void *)((char *)a1 + v26 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v29 = *((void *)v28 + 1);
  if (v29 == 1)
  {
    sub_1C66C9A58(v27);
LABEL_4:
    long long v30 = *((_OWORD *)v28 + 1);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v30;
    *(_OWORD *)(v27 + 32) = *((_OWORD *)v28 + 2);
    goto LABEL_6;
  }
  *(void *)uint64_t v27 = *(void *)v28;
  *(void *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v28 + 3);
  *(void *)(v27 + 16) = *((void *)v28 + 2);
  *(void *)(v27 + 24) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *((void *)v28 + 5);
  *(void *)(v27 + 32) = *((void *)v28 + 4);
  *(void *)(v27 + 40) = v32;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v33 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v39) = *((unsigned char *)a2 + v39);
  uint64_t v40 = a3[14];
  uint64_t v41 = (uint64_t)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  int v43 = *((unsigned __int8 *)a1 + v40 + 24);
  if (v43 == 255)
  {
LABEL_10:
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
    goto LABEL_11;
  }
  int v44 = v42[24];
  if (v44 == 255)
  {
    sub_1C66C9AAC(v41);
    goto LABEL_10;
  }
  uint64_t v45 = *((void *)v42 + 2);
  uint64_t v46 = *(void *)v41;
  uint64_t v47 = *(void *)(v41 + 8);
  uint64_t v48 = *(void *)(v41 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(void *)(v41 + 16) = v45;
  *(unsigned char *)(v41 + 24) = v44;
  sub_1C66548B8(v46, v47, v48, v43);
LABEL_11:
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *((unsigned char *)a1 + v49) = *((unsigned char *)a2 + v49);
  uint64_t v50 = a3[19];
  *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  double v51 = (_DWORD *)((char *)a1 + v50);
  int v52 = (_DWORD *)((char *)a2 + v50);
  *(_DWORD *)((char *)v51 + 3) = *(_DWORD *)((char *)v52 + 3);
  *double v51 = *v52;
  *((unsigned char *)a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  return a1;
}

uint64_t sub_1C66CA01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C66CA030);
}

uint64_t sub_1C66CA030(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[5];
LABEL_5:
    return __swift_getEnumTagSinglePayload(a1 + v9, a2, v8);
  }
  type metadata accessor for PrivatizedContactResolverConfig(0);
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[9] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1C66CA0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C66CA0FC);
}

void sub_1C66CA0FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[5];
  }
  else
  {
    type metadata accessor for PrivatizedContactResolverConfig(0);
    OUTLINED_FUNCTION_0_6();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + a4[9] + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a4[6];
  }

  __swift_storeEnumTagSinglePayload(a1 + v11, a2, a2, v10);
}

uint64_t sub_1C66CA1B0()
{
  uint64_t result = sub_1C68E9BF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PrivatizedContactResolverConfig(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C66CA2F8()
{
  unint64_t result = qword_1EA407850;
  if (!qword_1EA407850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407850);
  }
  return result;
}

unint64_t sub_1C66CA344()
{
  unint64_t result = qword_1EA407860;
  if (!qword_1EA407860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407860);
  }
  return result;
}

unint64_t sub_1C66CA390()
{
  unint64_t result = qword_1EA407868;
  if (!qword_1EA407868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407868);
  }
  return result;
}

unint64_t sub_1C66CA3DC()
{
  unint64_t result = qword_1EA407890;
  if (!qword_1EA407890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407890);
  }
  return result;
}

unint64_t sub_1C66CA428()
{
  unint64_t result = qword_1EA407898;
  if (!qword_1EA407898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407898);
  }
  return result;
}

unint64_t sub_1C66CA474()
{
  unint64_t result = qword_1EA4078A0;
  if (!qword_1EA4078A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078A0);
  }
  return result;
}

unint64_t sub_1C66CA4C0()
{
  unint64_t result = qword_1EA4078A8;
  if (!qword_1EA4078A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078A8);
  }
  return result;
}

uint64_t sub_1C66CA50C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1C66CA56C()
{
  unint64_t result = qword_1EA4078C0;
  if (!qword_1EA4078C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078C0);
  }
  return result;
}

unint64_t sub_1C66CA5B8()
{
  unint64_t result = qword_1EA4078C8;
  if (!qword_1EA4078C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078C8);
  }
  return result;
}

uint64_t sub_1C66CA604(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA407870);
    sub_1C66CA698(a2, (void (*)(uint64_t))type metadata accessor for PrivatizedContactMatchRuntimeData);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C66CA698(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C66CA6E0()
{
  unint64_t result = qword_1EA4078E8;
  if (!qword_1EA4078E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078E8);
  }
  return result;
}

unint64_t sub_1C66CA72C()
{
  unint64_t result = qword_1EA4078F0;
  if (!qword_1EA4078F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078F0);
  }
  return result;
}

unint64_t sub_1C66CA778()
{
  unint64_t result = qword_1EA4078F8;
  if (!qword_1EA4078F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4078F8);
  }
  return result;
}

unint64_t sub_1C66CA7C4()
{
  unint64_t result = qword_1EA407900;
  if (!qword_1EA407900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407900);
  }
  return result;
}

uint64_t sub_1C66CA810(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C66CA870(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactResolverDESRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v5 = v6 - 17;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContactResolverDESRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66CAA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolverDESRecord.CodingKeys()
{
  return &type metadata for ContactResolverDESRecord.CodingKeys;
}

unint64_t sub_1C66CAA58()
{
  unint64_t result = qword_1EA407908;
  if (!qword_1EA407908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407908);
  }
  return result;
}

unint64_t sub_1C66CAAA8()
{
  unint64_t result = qword_1EA407910;
  if (!qword_1EA407910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407910);
  }
  return result;
}

unint64_t sub_1C66CAAF8()
{
  unint64_t result = qword_1EA407918;
  if (!qword_1EA407918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407918);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  return sub_1C68ED6F8();
}

uint64_t OUTLINED_FUNCTION_6_19@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return sub_1C68ED718();
}

uint64_t OUTLINED_FUNCTION_7_22()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  return *(void *)(v0 - 200);
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_10_17@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_1C68ED628();
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  return sub_1C68ED608();
}

uint64_t OUTLINED_FUNCTION_15_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_13@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return v1 - 128;
}

void OUTLINED_FUNCTION_17_16(uint64_t a1@<X8>)
{
  *(unsigned char *)(v2 - 112) = *(unsigned char *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_18_13()
{
  return *(void *)(v0 - 200);
}

uint64_t sub_1C66CAD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = a2;
  sub_1C65CDEF4(a2, (uint64_t)v58, &qword_1EA407828);
  uint64_t v14 = v59;
  uint64_t v46 = v60;
  uint64_t v45 = v61;
  uint64_t v48 = v62;
  uint64_t v47 = v63;
  uint64_t v15 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v55 = *a3;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v54 = *(void *)(a1 + 40);
  uint64_t v53 = v18;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1C68E9C18();
  uint64_t v51 = v19;
  uint64_t v20 = *(uint64_t **)(a1 + v15[12]);
  if (qword_1EBBF4C28 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    if ((uint64_t *)qword_1EBBF4C18 == v20)
    {
      OUTLINED_FUNCTION_1_37(0xE300000000000000);
      uint64_t v21 = 7105633;
    }
    else if (v20 == (uint64_t *)4)
    {
      OUTLINED_FUNCTION_1_37(0xE800000000000000);
      uint64_t v21 = 0x736567617373656DLL;
    }
    else if (v20 == (uint64_t *)1)
    {
      OUTLINED_FUNCTION_1_37(0xE500000000000000);
      uint64_t v21 = 0x656E6F6870;
    }
    else
    {
      OUTLINED_FUNCTION_1_37(0xE700000000000000);
      uint64_t v21 = 0x6E776F6E6B6E75;
    }
    uint64_t v49 = v21;
    uint64_t v22 = *(void *)(*(void *)(a1 + v15[10]) + 16);
    sub_1C66C41B4(a1, v17);
    uint64_t v57 = a5;
    uint64_t v56 = a6;
    uint64_t v44 = v14;
    if (!v22)
    {
      char v23 = 1;
      goto LABEL_23;
    }
    *(void *)&long long v43 = v11;
    uint64_t v20 = *(uint64_t **)(v17 + v15[10]);
    uint64_t v11 = v20[2];
    if (!v11)
    {
      char v23 = 0;
      uint64_t v11 = v43;
      goto LABEL_23;
    }
    uint64_t v42 = v17;
    uint64_t v14 = v20[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = OUTLINED_FUNCTION_0_34();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      break;
    }
    if (v11 == 1)
    {
      char v23 = 0;
      goto LABEL_22;
    }
    uint64_t v41 = a4;
    a5 = v20 + 7;
    a4 = 1;
    while (1)
    {
      a6 = a4 + 1;
      if (__OFADD__(a4, 1)) {
        break;
      }
      uint64_t v14 = *a5;
      swift_bridgeObjectRetain();
      uint64_t v17 = OUTLINED_FUNCTION_0_34();
      swift_bridgeObjectRelease();
      if (v17)
      {
        ++a4;
        a5 += 2;
        if (a6 != v11) {
          continue;
        }
      }
      char v23 = v17 ^ 1;
      a4 = v41;
      goto LABEL_22;
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  char v23 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v11 = v43;
  uint64_t v17 = v42;
LABEL_23:
  sub_1C66C4218(v17);
  uint64_t v24 = v15[14];
  char v25 = *(unsigned char *)(a1 + v15[13]);
  uint64_t v27 = *(void *)(a1 + v24);
  uint64_t v26 = *(void *)(a1 + v24 + 8);
  swift_bridgeObjectRetain();
  sub_1C66C4218(a1);
  sub_1C65CDEF4(v11, (uint64_t)v64, &qword_1EA407828);
  if (*((void *)&v64[0] + 1) == 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    long long v32 = 0uLL;
  }
  else
  {
    v64[3] = v64[0];
    long long v65 = v64[1];
    long long v66 = v64[2];
    long long v43 = v64[0];
    sub_1C65CDEF4((uint64_t)&v65, (uint64_t)v67, qword_1EBBF6270);
    uint64_t v29 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v45;
    swift_bridgeObjectRetain();
    sub_1C6620378((uint64_t)v67);
    sub_1C65CDEF4((uint64_t)&v66, (uint64_t)v68, qword_1EBBF6270);
    sub_1C6620378((uint64_t)v68);
    swift_bridgeObjectRelease();
    long long v32 = v43;
    uint64_t v28 = v48;
    uint64_t v30 = v46;
  }
  char v33 = v55;
  uint64_t v34 = v54;
  uint64_t v35 = v53;
  uint64_t v36 = v51;
  uint64_t v37 = v50;
  uint64_t result = v49;
  char v39 = v56 & 1;
  *(void *)a7 = v52;
  *(void *)(a7 + 8) = v36;
  *(void *)(a7 + 16) = result;
  *(void *)(a7 + 24) = v37;
  *(void *)(a7 + 32) = v34;
  *(void *)(a7 + 40) = v35;
  *(unsigned char *)(a7 + 48) = v23 & 1;
  *(unsigned char *)(a7 + 49) = v25;
  *(unsigned char *)(a7 + 50) = v33;
  uint64_t v40 = v57;
  *(void *)(a7 + 56) = a4;
  *(void *)(a7 + 64) = v40;
  *(void *)(a7 + 72) = v27;
  *(void *)(a7 + 80) = v26;
  *(_OWORD *)(a7 + 88) = v32;
  *(void *)(a7 + 104) = v30;
  *(void *)(a7 + 112) = v31;
  *(void *)(a7 + 120) = v28;
  *(void *)(a7 + 128) = v29;
  *(unsigned char *)(a7 + 136) = v39;
  return result;
}

uint64_t destroy for BaseContactResolverMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BaseContactResolverMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BaseContactResolverMetric(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

void *__swift_memcpy137_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x89uLL);
}

uint64_t assignWithTake for BaseContactResolverMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaseContactResolverMetric(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 137))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseContactResolverMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseContactResolverMetric()
{
  return &type metadata for BaseContactResolverMetric;
}

unsigned char *storeEnumTagSinglePayload for CoreAnalyticsMeasurableError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C66CB664);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsMeasurableError()
{
  return &type metadata for CoreAnalyticsMeasurableError;
}

unint64_t sub_1C66CB6A0()
{
  unint64_t result = qword_1EA407920;
  if (!qword_1EA407920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407920);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return sub_1C68ECAC8();
}

void OUTLINED_FUNCTION_1_37(uint64_t a1@<X8>)
{
  *(void *)(v1 - 336) = a1;
}

uint64_t sub_1C66CB734(uint64_t a1)
{
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v4 = *(void *)(matched - 8);
  uint64_t v5 = MEMORY[0x1F4188790](matched);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v19 = v1;
    uint64_t v20 = matched;
    unint64_t v12 = 0;
    uint64_t v21 = a1;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = *(void *)(v4 + 72);
      sub_1C663BD8C(a1 + v13 + v14 * v12, (uint64_t)v10);
      if (v10[*(int *)(matched + 36)] == 1)
      {
        uint64_t v15 = (uint64_t)v7;
        sub_1C66CD778((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C669FB8C(0, *(void *)(v11 + 16) + 1, 1);
        }
        uint64_t v11 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        unint64_t v16 = *(void *)(v23 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C669FB8C(v16 > 1, v17 + 1, 1);
          uint64_t v11 = v23;
        }
        *(void *)(v11 + 16) = v17 + 1;
        uint64_t v18 = v11 + v13 + v17 * v14;
        uint64_t v7 = (char *)v15;
        uint64_t result = sub_1C66CD778(v15, v18, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
        uint64_t matched = v20;
        a1 = v21;
      }
      else
      {
        uint64_t result = sub_1C66CD720((uint64_t)v10, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
      }
      if (v22 == ++v12)
      {
        uint64_t v11 = v23;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

void sub_1C66CB974(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v204 = a1;
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v203 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_20();
  v210 = v11;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  v211 = (char *)&v195 - v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  uint64_t v207 = (char *)&v195 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  MEMORY[0x1F4188790](v16 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v19 = v18 - v17;
  uint64_t v212 = (void *)type metadata accessor for StitchableInteraction();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_15();
  uint64_t v208 = v22 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF52B0);
  MEMORY[0x1F4188790](v23 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v26 = (void *)(v25 - v24);
  uint64_t v216 = type metadata accessor for Contact();
  OUTLINED_FUNCTION_0_1();
  uint64_t v202 = v27;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_20();
  v206 = v29;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v30);
  unsigned __int8 v205 = (uint64_t *)((char *)&v195 - v31);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v195 - v33;
  LOBYTE(v35) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  OUTLINED_FUNCTION_1_0();
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  char v39 = (uint64_t *)((char *)&v195 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v37);
  uint64_t v214 = (uint64_t)&v195 - v40;
  uint64_t v41 = type metadata accessor for ContactResolverRunTimeData(0);
  if ((*(unsigned char *)(a3 + *(int *)(v41 + 48)) & 1) == 0)
  {
    sub_1C65B4354(a4, &qword_1EA406798);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v42 = v41;
  uint64_t v215 = a4;
  uint64_t v201 = a5;
  uint64_t v43 = a3 + *(int *)(v41 + 40);
  char v44 = sub_1C66B3FE4();
  __int16 v213 = (void *)a3;
  switch(v44)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    default:
      char v45 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      if (v45)
      {
LABEL_9:
        sub_1C65B4354(v215, &qword_1EA406798);
        swift_bridgeObjectRelease();
        a5 = v201;
        a3 = (uint64_t)v213;
        goto LABEL_10;
      }
      uint64_t v46 = type metadata accessor for StitchedContactResolverRecommendation(0);
      a3 = (uint64_t)v213;
      uint64_t v47 = (char *)v213 + *(int *)(v46 + 20);
      int v48 = v47[24];
      if (v48 == 255)
      {
        if (qword_1EBBF5DA0 != -1) {
LABEL_211:
        }
          swift_once();
        uint64_t v60 = sub_1C68EC478();
        __swift_project_value_buffer(v60, (uint64_t)&unk_1EBBF7A68);
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1C68EC458();
        os_log_type_t v62 = sub_1C68ECE58();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          uint64_t v218 = v64;
          *(_DWORD *)uint64_t v63 = 136315138;
          swift_bridgeObjectRetain();
          sub_1C65B4078(v204, a2, (uint64_t)&v218, v65, v66, v67, v68, v69, v195, v196, v197, v198, (uint64_t)v199, (uint64_t)v200, v201, v202, v203, v204, (uint64_t)v205,
            (uint64_t)v206);
          uint64_t v217 = v70;
          sub_1C68ED0C8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C65AE000, v61, v62, "force prompt but no found user prompt. taskId=%s", v63, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87A54F0](v64, -1, -1);
          MEMORY[0x1C87A54F0](v63, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_1C65B4354(v215, &qword_1EA406798);
        a5 = v201;
LABEL_10:
        sub_1C66CD720(a3, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
        uint64_t v56 = 0;
        a3 = 0;
        unint64_t v57 = 0;
        unint64_t v58 = 0;
        uint64_t v54 = 0;
        __int16 v59 = 512;
        goto LABEL_11;
      }
      uint64_t v49 = *((void *)v47 + 1);
      uint64_t v50 = *((void *)v47 + 2);
      uint64_t v199 = *(void **)v47;
      uint64_t v200 = (void *)v49;
      uint64_t v204 = v50;
      HIDWORD(v197) = v48;
      sub_1C665485C((uint64_t)v199, v49, v50, v48);
      swift_bridgeObjectRelease();
      sub_1C65B42F8(v43, v214, &qword_1EBBF4628);
      uint64_t v198 = sub_1C66B3FE4();
      uint64_t v51 = a3;
      a3 = *(void *)(*(void *)(a3 + 296) + 16);
      uint64_t v52 = swift_bridgeObjectRetain();
      unint64_t v196 = *(void *)(sub_1C66CB734(v52) + 16);
      swift_bridgeObjectRelease();
      HIDWORD(v195) = *(unsigned __int8 *)(v51 + *(int *)(v42 + 64) + 2);
      uint64_t v53 = sub_1C67E419C();
      sub_1C67E4ADC(v53, (uint64_t)v26);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v216) == 1)
      {
        sub_1C65B4354((uint64_t)v26, &qword_1EBBF52B0);
        uint64_t v54 = -1;
        LODWORD(v26) = 3;
        uint64_t v55 = v215;
      }
      else
      {
        sub_1C66CD778((uint64_t)v26, (uint64_t)v34, (void (*)(void))type metadata accessor for Contact);
        uint64_t v55 = v215;
        if (a3 == 1)
        {
          OUTLINED_FUNCTION_5_21();
          uint64_t v54 = *(void *)(*(void *)&v34[v71] + 16);
          sub_1C66CD720((uint64_t)v34, (void (*)(void))type metadata accessor for Contact);
          if (v54)
          {
            uint64_t v72 = (uint64_t)v212;
            LODWORD(v26) = v54 != 1;
            goto LABEL_23;
          }
          LODWORD(v26) = 2;
        }
        else
        {
          sub_1C66CD720((uint64_t)v34, (void (*)(void))type metadata accessor for Contact);
          uint64_t v54 = -1;
          LODWORD(v26) = 3;
        }
      }
      uint64_t v72 = (uint64_t)v212;
LABEL_23:
      sub_1C65B42F8(v55, v19, &qword_1EA406798);
      if (__swift_getEnumTagSinglePayload(v19, 1, v72) != 1)
      {
        sub_1C6654910((uint64_t)v199, (uint64_t)v200, v204, BYTE4(v197));
        uint64_t v85 = v19;
        uint64_t v86 = v208;
        sub_1C66CD778(v85, v208, (void (*)(void))type metadata accessor for StitchableInteraction);
        if (qword_1EBBF5DA0 != -1) {
          swift_once();
        }
        uint64_t v87 = sub_1C68EC478();
        __swift_project_value_buffer(v87, (uint64_t)&unk_1EBBF7A68);
        uint64_t v88 = sub_1C68EC458();
        os_log_type_t v89 = sub_1C68ECE48();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v90 = 0;
          _os_log_impl(&dword_1C65AE000, v88, v89, "using interaction to collect ModelEvaluation data", v90, 2u);
          uint64_t v91 = v90;
          uint64_t v72 = (uint64_t)v212;
          MEMORY[0x1C87A54F0](v91, -1, -1);
        }

        uint64_t v92 = *(char **)(v86 + *(int *)(v72 + 36));
        sub_1C65B42F8(v214, (uint64_t)v39, &qword_1EBBF4628);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1C66CD778((uint64_t)v39, (uint64_t)v206, (void (*)(void))type metadata accessor for Contact);
            uint64_t v137 = *((void *)v92 + 2);
            if (!v137) {
              goto LABEL_99;
            }
            uint64_t v138 = *v206;
            uint64_t v139 = v206[1];
            uint64_t v35 = (uint64_t)(v92 + 56);
            while (1)
            {
              uint64_t v141 = *(void *)(v35 - 8);
              uint64_t v140 = *(void *)v35;
              BOOL v142 = *(void *)(v35 - 24) == v138 && *(void *)(v35 - 16) == v139;
              if (v142 || (sub_1C68ED7E8() & 1) != 0) {
                break;
              }
              v35 += 80;
              if (!--v137)
              {
LABEL_99:
                sub_1C65B4354(v215, &qword_1EA406798);
                sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                sub_1C65B4354(v214, &qword_1EBBF4628);
                sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
                v99 = (void (*)(void))type metadata accessor for Contact;
                uint64_t v100 = v206;
                goto LABEL_143;
              }
            }
            OUTLINED_FUNCTION_5_21();
            v155 = *(void **)((char *)v206 + v154);
            if (v155[2])
            {
              sub_1C66749C4(0, 1, (uint64_t)v155);
              uint64_t v157 = v155[11];
              uint64_t v156 = v155[12];
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_2_30();
              if (v140)
              {
                if (v156)
                {
                  if (v141 == v157 && v140 == v156) {
                    char v159 = 1;
                  }
                  else {
                    char v159 = OUTLINED_FUNCTION_6_20();
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  sub_1C65B4354(v215, &qword_1EA406798);
                  sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                  sub_1C65B4354(v214, &qword_1EBBF4628);
LABEL_193:
                  swift_bridgeObjectRelease();
LABEL_194:
                  sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
                  sub_1C66CD720((uint64_t)v206, (void (*)(void))type metadata accessor for Contact);
                  unsigned __int8 v135 = 1;
                  if (v159) {
                    unsigned __int8 v136 = 1;
                  }
                  else {
                    unsigned __int8 v136 = 2;
                  }
                  goto LABEL_202;
                }
LABEL_170:
                swift_bridgeObjectRetain();
                sub_1C65B4354(v215, &qword_1EA406798);
                sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                sub_1C65B4354(v214, &qword_1EBBF4628);
                char v159 = 0;
                goto LABEL_193;
              }
            }
            else
            {
              OUTLINED_FUNCTION_2_30();
              if (v140) {
                goto LABEL_170;
              }
              uint64_t v156 = 0;
            }
            sub_1C65B4354(v215, &qword_1EA406798);
            sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
            sub_1C65B4354(v214, &qword_1EBBF4628);
            if (!v156)
            {
              char v159 = 1;
              goto LABEL_194;
            }
            char v159 = 0;
            goto LABEL_193;
          case 2u:
            uint64_t v35 = *v39;
            v211 = v92;
            swift_bridgeObjectRetain();
            uint64_t v212 = (void *)sub_1C664C784(v35);
            uint64_t v119 = *(void *)(v35 + 16);
            uint64_t v120 = v215;
            LODWORD(v195) = v26;
            if (v119)
            {
              uint64_t matched = 0;
              v210 = (void *)v35;
              OUTLINED_FUNCTION_36_8();
              uint64_t v26 = (void *)(v35 + v121);
              uint64_t v123 = *(void *)(v122 + 72);
              swift_bridgeObjectRetain();
              uint64_t v124 = MEMORY[0x1E4FBC860];
              while (1)
              {
                OUTLINED_FUNCTION_5_21();
                uint64_t v126 = *(void *)((char *)v26 + v125);
                uint64_t v127 = *(void *)(v126 + 16);
                a2 = *(void *)(v124 + 16);
                if (__OFADD__(a2, v127)) {
                  break;
                }
                swift_bridgeObjectRetain();
                if (!swift_isUniquelyReferenced_nonNull_native()
                  || a2 + v127 > *(void *)(v124 + 24) >> 1)
                {
                  sub_1C65C9060();
                  uint64_t v124 = v128;
                }
                uint64_t v120 = v215;
                if (*(void *)(v126 + 16))
                {
                  uint64_t v129 = *(void *)(v124 + 16);
                  if ((*(void *)(v124 + 24) >> 1) - v129 < v127) {
                    goto LABEL_208;
                  }
                  unint64_t v130 = v124 + 80 * v129 + 32;
                  if (v126 + 32 < v130 + 80 * v127 && v130 < v126 + 32 + 80 * v127)
                  {
                    sub_1C68ED568();
                    __break(1u);
                    JUMPOUT(0x1C66CD35CLL);
                  }
                  swift_arrayInitWithCopy();
                  if (v127)
                  {
                    uint64_t v132 = *(void *)(v124 + 16);
                    BOOL v133 = __OFADD__(v132, v127);
                    uint64_t v134 = v132 + v127;
                    if (v133) {
                      goto LABEL_210;
                    }
                    *(void *)(v124 + 16) = v134;
                  }
                }
                else if (v127)
                {
                  goto LABEL_207;
                }
                swift_bridgeObjectRelease();
                uint64_t v26 = (void *)((char *)v26 + v123);
                if (!--v119)
                {
                  LOBYTE(v35) = (_BYTE)v210;
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_13_14();
                  uint64_t v86 = v208;
                  goto LABEL_120;
                }
              }
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
            }
            else
            {
              uint64_t v124 = MEMORY[0x1E4FBC860];
LABEL_120:
              swift_bridgeObjectRelease();
              int v160 = (void *)sub_1C664C8B4(v124);
              swift_bridgeObjectRelease();
              uint64_t v216 = *((void *)v211 + 2);
              if (!v216)
              {
                swift_bridgeObjectRelease();
                goto LABEL_142;
              }
              uint64_t v199 = v160;
              uint64_t v161 = 0;
              unsigned __int8 v205 = v211 + 32;
              a2 = v212[2];
              uint64_t v200 = v212 + 7;
              while (1)
              {
                if (a2)
                {
                  uint64_t v162 = &v205[10 * v161];
                  uint64_t v163 = *v162;
                  uint64_t v35 = v162[1];
                  uint64_t v164 = v162[2];
                  uint64_t v165 = v162[3];
                  uint64_t v204 = v162[4];
                  uint64_t v166 = v162[5];
                  uint64_t v202 = v164;
                  uint64_t v203 = v166;
                  uint64_t v167 = (void *)v162[6];
                  uint64_t matched = v162[7];
                  v210 = v167;
                  uint64_t v168 = (char *)v162[8];
                  v206 = (void *)v162[9];
                  uint64_t v207 = v168;
                  BOOL v169 = v212[4] == v163 && v212[5] == v35;
                  if (v169 || (sub_1C68ED7E8() & 1) != 0)
                  {
LABEL_139:
                    uint64_t v173 = v165;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v174 = OUTLINED_FUNCTION_9_19();
                    sub_1C66C5BDC(v174, v175);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v165)
                    {
                      OUTLINED_FUNCTION_14_17();
                      uint64_t v176 = v202;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v176 = 0;
                      uint64_t v173 = 0xE000000000000000;
                      OUTLINED_FUNCTION_14_17();
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v187 = OUTLINED_FUNCTION_9_19();
                    sub_1C65E0B14(v187, v188);
                    char v189 = sub_1C681455C(v176, v173, v199);
                    sub_1C65B4354(v161, &qword_1EA406798);
                    swift_bridgeObjectRelease();
                    sub_1C66CD720(a2, (void (*)(void))type metadata accessor for StitchableInteraction);
                    sub_1C65B4354(v214, &qword_1EBBF4628);
                    sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
                    swift_bridgeObjectRelease();
                    BOOL v83 = (v189 & 1) == 0;
                    unsigned __int8 v135 = 1;
                    if (v83) {
                      unsigned __int8 v136 = 2;
                    }
                    else {
                      unsigned __int8 v136 = 1;
                    }
LABEL_165:
                    OUTLINED_FUNCTION_2_30();
                    goto LABEL_202;
                  }
                  if (a2 != 1) {
                    break;
                  }
                }
LABEL_137:
                if (++v161 == v216)
                {
                  swift_bridgeObjectRelease();
                  LODWORD(v26) = v195;
                  uint64_t v120 = v215;
                  uint64_t v86 = v208;
LABEL_142:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C65B4354(v120, &qword_1EA406798);
                  sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                  sub_1C65B4354(v214, &qword_1EBBF4628);
                  v99 = (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation;
                  uint64_t v100 = v213;
                  goto LABEL_143;
                }
              }
              uint64_t v170 = v200;
              uint64_t v171 = 1;
              while (1)
              {
                uint64_t v26 = (void *)(v171 + 1);
                if (__OFADD__(v171, 1)) {
                  break;
                }
                BOOL v172 = *(v170 - 1) == v163 && *v170 == v35;
                if (v172 || (sub_1C68ED7E8() & 1) != 0) {
                  goto LABEL_139;
                }
                v170 += 2;
                ++v171;
                if (v26 == (void *)a2) {
                  goto LABEL_137;
                }
              }
            }
            __break(1u);
LABEL_210:
            __break(1u);
            goto LABEL_211;
          case 3u:
            sub_1C65B4354(v215, &qword_1EA406798);
            sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
            sub_1C65B4354(v214, &qword_1EBBF4628);
            sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
            unsigned __int8 v135 = 4;
            unsigned __int8 v136 = 4;
            goto LABEL_165;
          default:
            sub_1C66CD778((uint64_t)v39, (uint64_t)v205, (void (*)(void))type metadata accessor for Contact);
            uint64_t v93 = *((void *)v92 + 2);
            if (!v93) {
              goto LABEL_53;
            }
            uint64_t v94 = *v205;
            uint64_t v95 = v205[1];
            uint64_t v35 = (uint64_t)(v92 + 56);
            while (1)
            {
              uint64_t v97 = *(void *)(v35 - 8);
              uint64_t v96 = *(void *)v35;
              BOOL v98 = *(void *)(v35 - 24) == v94 && *(void *)(v35 - 16) == v95;
              if (v98 || (sub_1C68ED7E8() & 1) != 0) {
                break;
              }
              v35 += 80;
              if (!--v93)
              {
LABEL_53:
                sub_1C65B4354(v215, &qword_1EA406798);
                sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                sub_1C65B4354(v214, &qword_1EBBF4628);
                sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
                v99 = (void (*)(void))type metadata accessor for Contact;
                uint64_t v100 = v205;
LABEL_143:
                sub_1C66CD720((uint64_t)v100, v99);
                unsigned __int8 v135 = 2;
                unsigned __int8 v136 = 2;
                goto LABEL_165;
              }
            }
            OUTLINED_FUNCTION_5_21();
            uint64_t v149 = *(void **)((char *)v205 + v148);
            if (v149[2])
            {
              sub_1C66749C4(0, 1, (uint64_t)v149);
              uint64_t v151 = v149[11];
              uint64_t v150 = v149[12];
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_2_30();
              if (v96)
              {
                if (v150)
                {
                  if (v97 == v151 && v96 == v150) {
                    char v153 = 1;
                  }
                  else {
                    char v153 = OUTLINED_FUNCTION_6_20();
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  sub_1C65B4354(v215, &qword_1EA406798);
                  sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                  sub_1C65B4354(v214, &qword_1EBBF4628);
                  goto LABEL_187;
                }
                goto LABEL_168;
              }
            }
            else
            {
              OUTLINED_FUNCTION_2_30();
              if (v96)
              {
LABEL_168:
                swift_bridgeObjectRetain();
                sub_1C65B4354(v215, &qword_1EA406798);
                sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
                sub_1C65B4354(v214, &qword_1EBBF4628);
                char v153 = 0;
                goto LABEL_187;
              }
              uint64_t v150 = 0;
            }
            sub_1C65B4354(v215, &qword_1EA406798);
            sub_1C66CD720(v86, (void (*)(void))type metadata accessor for StitchableInteraction);
            sub_1C65B4354(v214, &qword_1EBBF4628);
            if (!v150)
            {
              char v153 = 1;
              goto LABEL_188;
            }
            char v153 = 0;
LABEL_187:
            swift_bridgeObjectRelease();
LABEL_188:
            sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
            sub_1C66CD720((uint64_t)v205, (void (*)(void))type metadata accessor for Contact);
            unsigned __int8 v135 = 0;
            if (v153) {
              unsigned __int8 v136 = 0;
            }
            else {
              unsigned __int8 v136 = 2;
            }
            goto LABEL_202;
        }
      }
      sub_1C65B4354(v19, &qword_1EA406798);
      if (!HIDWORD(v197))
      {
        LOBYTE(v35) = v198;
        uint64_t v101 = matched;
        switch((char)v204)
        {
          case 1:
            OUTLINED_FUNCTION_8_26();
            goto LABEL_145;
          case 2:
            OUTLINED_FUNCTION_17_17();
            goto LABEL_145;
          case 3:
            swift_bridgeObjectRelease();
            goto LABEL_159;
          default:
LABEL_145:
            char v177 = sub_1C68ED7E8();
            swift_bridgeObjectRelease();
            if (v177)
            {
LABEL_159:
              OUTLINED_FUNCTION_4_21();
              uint64_t v143 = v215;
              goto LABEL_160;
            }
            uint64_t v178 = v213[37];
            uint64_t v179 = *(void *)(v178 + 16);
            if (!v179)
            {
              LOBYTE(v103) = 0;
              goto LABEL_200;
            }
            OUTLINED_FUNCTION_36_8();
            uint64_t v181 = v178 + v180;
            uint64_t v35 = *(void *)(v182 + 72);
            swift_bridgeObjectRetain();
            uint64_t v183 = (uint64_t)v207;
            break;
        }
        while (1)
        {
          int v184 = *(unsigned __int8 *)(v181 + *(int *)(v101 + 36));
          sub_1C663BD8C(v181, v183);
          if (v184 == 1)
          {
            if (*(void **)v183 == v199 && v200 == *(void **)(v183 + 8))
            {
              sub_1C66CD720(v183, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
LABEL_175:
              swift_bridgeObjectRelease();
              LOBYTE(v35) = v198;
              switch((char)v204)
              {
                case 1:
                  OUTLINED_FUNCTION_8_26();
                  goto LABEL_199;
                case 2:
                  OUTLINED_FUNCTION_17_17();
                  goto LABEL_199;
                case 3:
LABEL_199:
                  LOBYTE(v103) = sub_1C68ED7E8();
                  swift_bridgeObjectRelease();
                  break;
                default:
                  swift_bridgeObjectRelease();
                  LOBYTE(v103) = 1;
                  break;
              }
LABEL_200:
              OUTLINED_FUNCTION_4_21();
              sub_1C65B4354(v215, &qword_1EA406798);
              sub_1C65B4354(v214, &qword_1EBBF4628);
LABEL_201:
              char v193 = v103 & 1;
              unsigned __int8 v135 = sub_1C66CD39C(v35, v103 & 1);
              unsigned __int8 v136 = sub_1C66CD3F0(v26, v193);
              sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
              goto LABEL_202;
            }
            char v186 = sub_1C68ED7E8();
            sub_1C66CD720(v183, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
            if (v186) {
              goto LABEL_175;
            }
          }
          else
          {
            sub_1C66CD720(v183, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
          }
          v181 += v35;
          if (!--v179)
          {
            swift_bridgeObjectRelease();
            LOBYTE(v103) = 0;
            OUTLINED_FUNCTION_2_30();
            goto LABEL_200;
          }
        }
      }
      LOBYTE(v35) = v198;
      uint64_t v73 = matched;
      uint64_t v74 = v204;
      if (HIDWORD(v197) != 1)
      {
        uint64_t v102 = (uint64_t)v200;
        if (!v204)
        {
          sub_1C6654910((uint64_t)v199, (uint64_t)v200, 0, 2u);
          uint64_t v143 = v55;
LABEL_160:
          sub_1C65B4354(v143, &qword_1EA406798);
          sub_1C65B4354(v214, &qword_1EBBF4628);
          sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
          unsigned __int8 v135 = 3;
          unsigned __int8 v136 = 3;
          goto LABEL_202;
        }
        uint64_t v103 = v213[37];
        uint64_t v104 = *(void *)(v103 + 16);
        if (v104)
        {
          LODWORD(v195) = v26;
          OUTLINED_FUNCTION_36_8();
          uint64_t v106 = v103 + v105;
          uint64_t v108 = *(void *)(v107 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v109 = 0;
          uint64_t v26 = v210;
          while (1)
          {
            uint64_t v110 = v106 + v108 * v109;
            LODWORD(v35) = *(unsigned __int8 *)(v110 + *(int *)(v73 + 36));
            sub_1C663BD8C(v110, (uint64_t)v26);
            uint64_t v111 = (uint64_t)v26;
            LODWORD(v26) = v195;
            if (v35 == 1)
            {
              OUTLINED_FUNCTION_5_21();
              uint64_t v115 = *(void *)(v111 + v114);
              uint64_t v35 = *(void *)(v115 + 16);
              if (v35) {
                break;
              }
            }
LABEL_68:
            ++v109;
            uint64_t v26 = (void *)v111;
            sub_1C66CD720(v111, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
            uint64_t v73 = matched;
            if (v109 == v104)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_2_30();
              OUTLINED_FUNCTION_13_14();
              goto LABEL_70;
            }
          }
          unint64_t v116 = (void *)(v115 + 80);
          while (*(v116 - 1) != v112 || v113 != *v116)
          {
            char v118 = sub_1C68ED7E8();
            uint64_t v111 = (uint64_t)v210;
            uint64_t v112 = (uint64_t)v200;
            uint64_t v113 = v204;
            if (v118) {
              break;
            }
            v116 += 10;
            if (!--v35) {
              goto LABEL_68;
            }
          }
          uint64_t v144 = v112;
          sub_1C66CD720(v111, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_15_17(v144);
          uint64_t v145 = OUTLINED_FUNCTION_18_14();
          sub_1C6654910(v145, v146, v147, 2u);
          sub_1C65B4354(v215, &qword_1EA406798);
          sub_1C65B4354(v214, &qword_1EBBF4628);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_2_30();
        }
        else
        {
LABEL_70:
          sub_1C6654910((uint64_t)v199, v102, v74, 2u);
          sub_1C65B4354(v215, &qword_1EA406798);
          sub_1C65B4354(v214, &qword_1EBBF4628);
          LOBYTE(v103) = 0;
        }
        goto LABEL_201;
      }
      uint64_t v75 = (uint64_t)v200;
      if (!v204)
      {
        sub_1C6654910((uint64_t)v199, (uint64_t)v200, 0, 1u);
        sub_1C65B4354(v55, &qword_1EA406798);
        sub_1C65B4354(v214, &qword_1EBBF4628);
        sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
        unsigned __int8 v136 = 4;
        unsigned __int8 v135 = 3;
        goto LABEL_202;
      }
      uint64_t v76 = v213[37];
      uint64_t v77 = *(void *)(v76 + 16);
      if (!v77)
      {
LABEL_39:
        sub_1C6654910((uint64_t)v199, v75, v74, 1u);
        sub_1C65B4354(v55, &qword_1EA406798);
        sub_1C65B4354(v214, &qword_1EBBF4628);
        LOBYTE(v76) = 0;
        goto LABEL_173;
      }
      LODWORD(v195) = v26;
      OUTLINED_FUNCTION_36_8();
      uint64_t v79 = v76 + v78;
      uint64_t v81 = *(void *)(v80 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v211;
      while (1)
      {
        int v82 = *(unsigned __int8 *)(v79 + *(int *)(v73 + 36));
        sub_1C663BD8C(v79, (uint64_t)v26);
        if (v82 != 1)
        {
          sub_1C66CD720((uint64_t)v26, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
          goto LABEL_37;
        }
        BOOL v83 = (void *)*v26 == v200 && v204 == v26[1];
        if (v83) {
          break;
        }
        char v84 = sub_1C68ED7E8();
        sub_1C66CD720((uint64_t)v26, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
        if (v84) {
          goto LABEL_172;
        }
LABEL_37:
        v79 += v81;
        if (!--v77)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v55 = v215;
          OUTLINED_FUNCTION_13_14();
          goto LABEL_39;
        }
      }
      sub_1C66CD720((uint64_t)v26, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
LABEL_172:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_17((uint64_t)v200);
      uint64_t v190 = OUTLINED_FUNCTION_18_14();
      sub_1C6654910(v190, v191, v192, 1u);
      sub_1C65B4354(v215, &qword_1EA406798);
      sub_1C65B4354(v214, &qword_1EBBF4628);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_14();
LABEL_173:
      unsigned __int8 v135 = sub_1C66CD39C(v35, v76 & 1);
      sub_1C66CD720((uint64_t)v213, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
      unsigned __int8 v136 = 4;
LABEL_202:
      uint64_t v56 = v35;
      unint64_t v58 = v135 | ((unint64_t)v26 << 8);
      if (HIDWORD(v195)) {
        __int16 v194 = 256;
      }
      else {
        __int16 v194 = 0;
      }
      __int16 v59 = v194 & 0xFF00 | v136;
      a5 = v201;
      unint64_t v57 = v196;
LABEL_11:
      *(void *)a5 = v56;
      *(void *)(a5 + 8) = a3;
      *(void *)(a5 + 16) = v57;
      *(void *)(a5 + 24) = v58;
      *(void *)(a5 + 32) = v54;
      *(_WORD *)(a5 + 40) = v59;
      return;
  }
}

uint64_t sub_1C66CD39C(char a1, char a2)
{
  switch(a1)
  {
    case 1:
    case 2:
      if ((a2 & 1) == 0) {
        goto LABEL_6;
      }
      uint64_t result = 1;
      break;
    case 3:
      goto LABEL_6;
    default:
      if (a2) {
        uint64_t result = 0;
      }
      else {
LABEL_6:
      }
        uint64_t result = 2;
      break;
  }
  return result;
}

uint64_t sub_1C66CD3F0(unsigned __int8 a1, char a2)
{
  if (a1 - 2 < 2) {
    return 4;
  }
  if (a1)
  {
    if (a2) {
      return 1;
    }
  }
  else if (a2)
  {
    return 0;
  }
  return 2;
}

uint64_t sub_1C66CD42C()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66CD478(char a1)
{
  uint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t result = 0x636572726F636E69;
      break;
    case 3:
      uint64_t result = 0x656E6F646E616261;
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_16_14();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66CD538()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66CD584(char a1)
{
  uint64_t result = 0x6E656469666E6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = 1701736302;
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_16_14();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66CD610(char *a1, char *a2)
{
  return sub_1C661755C(*a1, *a2);
}

uint64_t sub_1C66CD61C()
{
  return sub_1C6702350(*v0);
}

uint64_t sub_1C66CD624(uint64_t a1)
{
  return sub_1C6678470(a1, *v1);
}

uint64_t sub_1C66CD62C()
{
  return sub_1C680D464();
}

uint64_t sub_1C66CD634@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66CD42C();
  *a1 = result;
  return result;
}

uint64_t sub_1C66CD664@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C66CD478(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C66CD690()
{
  return sub_1C66CD478(*v0);
}

uint64_t sub_1C66CD698()
{
  return sub_1C6617428();
}

uint64_t sub_1C66CD6A4()
{
  return sub_1C6702368(*v0);
}

uint64_t sub_1C66CD6AC()
{
  return sub_1C66783E0();
}

uint64_t sub_1C66CD6B4()
{
  return sub_1C680D4C4();
}

uint64_t sub_1C66CD6BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66CD538();
  *a1 = result;
  return result;
}

uint64_t sub_1C66CD6EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C66CD584(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C66CD718()
{
  return sub_1C66CD584(*v0);
}

uint64_t sub_1C66CD720(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C66CD778(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1C66CD7EC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 42))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 41);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C66CD838(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 41) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverModelEvaluationMetrics()
{
}

unsigned char *sub_1C66CD894(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66CD960);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverModelEvaluationMetrics.HandleRecommendationType()
{
}

unsigned char *sub_1C66CD994(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66CDA60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverModelEvaluationMetrics.RecommendationEvaluation()
{
}

unint64_t sub_1C66CDA98()
{
  unint64_t result = qword_1EA407928;
  if (!qword_1EA407928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407928);
  }
  return result;
}

unint64_t sub_1C66CDAE8()
{
  unint64_t result = qword_1EA407930;
  if (!qword_1EA407930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407930);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  uint64_t v2 = *(void *)(v0 - 272);
  uint64_t v3 = *(void *)(v0 - 264);
  uint64_t v4 = *(void *)(v0 - 232);
  return sub_1C6654910(v2, v3, v4, 0);
}

uint64_t OUTLINED_FUNCTION_6_20()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_8_26()
{
  return 0x64657463656A6572;
}

uint64_t OUTLINED_FUNCTION_9_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_17(uint64_t a1)
{
  uint64_t v4 = *(void **)(v2 - 272);
  return sub_1C681455C(a1, v1, v4);
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  return 0x696C707041746F6ELL;
}

uint64_t OUTLINED_FUNCTION_17_17()
{
  return 0x656C6C65636E6163;
}

uint64_t OUTLINED_FUNCTION_18_14()
{
  return v0;
}

uint64_t sub_1C66CDC50(uint64_t a1)
{
  sub_1C65EA404(a1, v28);
  uint64_t v1 = v28[0];
  uint64_t v2 = v28[1];
  int64_t v3 = v28[3];
  unint64_t v4 = v28[4];
  int64_t v5 = (unint64_t)(v28[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  while (v4)
  {
    unint64_t v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v7 = v6 | (v3 << 6);
LABEL_20:
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v7);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    double v15 = *(double *)(*(void *)(v1 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C66CDE78(v13, v14, v15);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if (v18)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C65C7D1C();
        uint64_t v27 = v24;
      }
      unint64_t v21 = *(void *)(v27 + 16);
      unint64_t v22 = v21 + 1;
      if (v21 >= *(void *)(v27 + 24) >> 1)
      {
        sub_1C65C7D1C();
        unint64_t v22 = v21 + 1;
        uint64_t v27 = v25;
      }
      *(void *)(v27 + 16) = v22;
      uint64_t v23 = (void *)(v27 + 24 * v21);
      v23[4] = v16;
      v23[5] = v18;
      v23[6] = v20;
    }
  }
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x1C66CDE64);
  }
  if (v8 >= v5) {
    goto LABEL_26;
  }
  unint64_t v9 = *(void *)(v2 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (v9) {
    goto LABEL_19;
  }
  int64_t v10 = v3 + 2;
  if (v3 + 2 >= v5) {
    goto LABEL_26;
  }
  unint64_t v9 = *(void *)(v2 + 8 * v10);
  if (v9) {
    goto LABEL_19;
  }
  int64_t v10 = v3 + 3;
  if (v3 + 3 >= v5) {
    goto LABEL_26;
  }
  unint64_t v9 = *(void *)(v2 + 8 * v10);
  if (v9) {
    goto LABEL_19;
  }
  int64_t v10 = v3 + 4;
  if (v3 + 4 >= v5) {
    goto LABEL_26;
  }
  unint64_t v9 = *(void *)(v2 + 8 * v10);
  if (v9) {
    goto LABEL_19;
  }
  int64_t v10 = v3 + 5;
  if (v3 + 5 >= v5) {
    goto LABEL_26;
  }
  unint64_t v9 = *(void *)(v2 + 8 * v10);
  if (v9)
  {
LABEL_19:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v3 = v10;
    goto LABEL_20;
  }
  int64_t v11 = v3 + 6;
  while (v11 < v5)
  {
    unint64_t v9 = *(void *)(v2 + 8 * v11++);
    if (v9)
    {
      int64_t v10 = v11 - 1;
      goto LABEL_19;
    }
  }
LABEL_26:
  swift_release();
  return v27;
}

uint64_t sub_1C66CDE78(uint64_t a1, uint64_t a2, double a3)
{
  double v5 = trunc(a3);
  if (a3 <= -9.22337204e18 || a3 >= 9.22337204e18 || v5 != a3)
  {
    if ((~*(void *)&a3 & 0x7FF0000000000000) != 0)
    {
      if (a3 > -9.22337204e18)
      {
        if (a3 < 9.22337204e18)
        {
          if (qword_1EBBF5DA0 == -1) {
            goto LABEL_12;
          }
          goto LABEL_20;
        }
LABEL_19:
        __break(1u);
LABEL_20:
        swift_once();
LABEL_12:
        uint64_t v8 = sub_1C68EC478();
        __swift_project_value_buffer(v8, (uint64_t)&unk_1EBBF7A68);
        swift_bridgeObjectRetain_n();
        unint64_t v9 = sub_1C68EC458();
        os_log_type_t v10 = sub_1C68ECE48();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = swift_slowAlloc();
          uint64_t v12 = swift_slowAlloc();
          v20[0] = v12;
          *(_DWORD *)uint64_t v11 = 136315650;
          swift_bridgeObjectRetain();
          sub_1C65B4078(a1, a2, (uint64_t)v20, v13, v14, v15, v16, v17, v19, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6], v20[7], v20[8], v20[9],
            v20[10]);
          sub_1C68ED0C8();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v11 + 12) = 2048;
          sub_1C68ED0C8();
          *(_WORD *)(v11 + 22) = 2048;
          sub_1C68ED0C8();
          _os_log_impl(&dword_1C65AE000, v9, v10, "Rounded down value for signal %s %f -> %ld", (uint8_t *)v11, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1C87A54F0](v12, -1, -1);
          MEMORY[0x1C87A54F0](v11, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C66CE0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v133 = sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v127 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_25_12(v7, v117);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079B8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_1();
  uint64_t v132 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  uint64_t v11 = OUTLINED_FUNCTION_3(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_20();
  uint64_t v129 = v12;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  uint64_t v130 = (uint64_t)&v117 - v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  uint64_t v131 = (uint64_t)&v117 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_11();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079C0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_15();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638);
  uint64_t v25 = OUTLINED_FUNCTION_3(v24);
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v117 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v117 - v32;
  memcpy(v135, (const void *)a1, 0x108uLL);
  memcpy(v134, (const void *)a2, sizeof(v134));
  if ((static ContactQuery.== infix(_:_:)((uint64_t)v135, (uint64_t)v134) & 1) == 0
    || (sub_1C66169B4(*(unsigned char *)(a1 + 264), *(unsigned char *)(a2 + 264)) & 1) == 0)
  {
    return 0;
  }
  BOOL v34 = *(void *)(a1 + 272) == *(void *)(a2 + 272) && *(void *)(a1 + 280) == *(void *)(a2 + 280);
  if (v34 || (v35 = sub_1C68ED7E8(), uint64_t result = 0, (v35 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 288) != *(unsigned __int8 *)(a2 + 288)) {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + 289) != *(unsigned __int8 *)(a2 + 289)) {
      return 0;
    }
    sub_1C6630F64();
    if ((v37 & 1) == 0) {
      return 0;
    }
    uint64_t v125 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
    if ((sub_1C66D11EC(a1 + v125[10], a2 + v125[10]) & 1) == 0) {
      return 0;
    }
    uint64_t v38 = v125[11];
    char v39 = *(unsigned char *)(a1 + v38);
    int v123 = *(unsigned __int8 *)(a2 + v38);
    uint64_t v122 = sub_1C65E5AFC(v39);
    uint64_t v124 = v40;
    if (v122 == sub_1C65E5AFC(v123) && v124 == v41)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v121 = v41;
      int v123 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v123 & 1) == 0) {
        return result;
      }
    }
    if (*(unsigned __int8 *)(a1 + v125[12]) != *(unsigned __int8 *)(a2 + v125[12])
      || (sub_1C6618238(*(unsigned char *)(a1 + v125[13]), *(unsigned char *)(a2 + v125[13])) & 1) == 0)
    {
      return 0;
    }
    sub_1C65BB124(a1 + v125[14], (uint64_t)v33, &qword_1EBBF4638);
    sub_1C65BB124(a2 + v125[14], (uint64_t)v31, &qword_1EBBF4638);
    uint64_t v43 = v23 + *(int *)(v19 + 48);
    sub_1C65BB124((uint64_t)v33, v23, &qword_1EBBF4638);
    uint64_t v124 = v43;
    sub_1C65BB124((uint64_t)v31, v43, &qword_1EBBF4638);
    OUTLINED_FUNCTION_4(v23, 1, v17);
    if (v34)
    {
      sub_1C65C117C((uint64_t)v31, &qword_1EBBF4638);
      sub_1C65C117C((uint64_t)v33, &qword_1EBBF4638);
      OUTLINED_FUNCTION_4(v124, 1, v17);
      if (v34)
      {
        sub_1C65C117C(v23, &qword_1EBBF4638);
        goto LABEL_32;
      }
    }
    else
    {
      sub_1C65BB124(v23, (uint64_t)v28, &qword_1EBBF4638);
      uint64_t v44 = v124;
      OUTLINED_FUNCTION_4(v124, 1, v17);
      if (!v45)
      {
        sub_1C66D595C(v44, v2);
        char v48 = sub_1C66D11EC((uint64_t)v28, v2);
        sub_1C65C117C(v2, &qword_1EBBF4628);
        sub_1C65C117C((uint64_t)v31, &qword_1EBBF4638);
        sub_1C65C117C((uint64_t)v33, &qword_1EBBF4638);
        sub_1C65C117C((uint64_t)v28, &qword_1EBBF4628);
        sub_1C65C117C(v23, &qword_1EBBF4638);
        if ((v48 & 1) == 0) {
          return 0;
        }
LABEL_32:
        uint64_t v49 = v125;
        uint64_t v50 = v125[15];
        uint64_t v51 = *(void *)(a1 + v50);
        uint64_t v52 = *(void *)(a1 + v50 + 8);
        uint64_t v53 = *(void *)(a1 + v50 + 16);
        uint64_t v54 = *(void *)(a1 + v50 + 24);
        uint64_t v55 = *(void *)(a1 + v50 + 32);
        uint64_t v56 = *(void *)(a1 + v50 + 40);
        unint64_t v57 = (uint64_t *)(a2 + v50);
        uint64_t v58 = *v57;
        uint64_t v59 = v57[1];
        uint64_t v60 = v57[2];
        uint64_t v61 = v57[3];
        uint64_t v62 = v57[4];
        uint64_t v63 = v57[5];
        if (v52 == 1)
        {
          if (v59 == 1)
          {
LABEL_38:
            uint64_t v73 = v49[16];
            uint64_t v74 = *(unsigned __int8 *)(a1 + v73);
            int v75 = *(unsigned __int8 *)(a1 + v73 + 1);
            int v76 = *(unsigned __int8 *)(a1 + v73 + 2);
            int v77 = *(unsigned __int8 *)(a1 + v73 + 3);
            uint64_t v78 = *(unsigned __int8 *)(a1 + v73 + 4);
            uint64_t v79 = (unsigned __int8 *)(a2 + v73);
            uint64_t v80 = *v79;
            int v81 = v79[1];
            int v82 = v79[2];
            int v83 = v79[3];
            uint64_t v84 = v79[4];
            if (v77) {
              uint64_t v85 = 0x1000000;
            }
            else {
              uint64_t v85 = 0;
            }
            uint64_t v86 = v85 | (v78 << 32);
            if (v76) {
              uint64_t v87 = 0x10000;
            }
            else {
              uint64_t v87 = 0;
            }
            if (v75) {
              uint64_t v88 = 256;
            }
            else {
              uint64_t v88 = 0;
            }
            unint64_t v89 = v86 | v87 | v88 | v74;
            if (v83) {
              uint64_t v90 = 0x1000000;
            }
            else {
              uint64_t v90 = 0;
            }
            uint64_t v91 = v90 | (v84 << 32);
            if (v82) {
              uint64_t v92 = 0x10000;
            }
            else {
              uint64_t v92 = 0;
            }
            if (v81) {
              uint64_t v93 = 256;
            }
            else {
              uint64_t v93 = 0;
            }
            if (!sub_1C67E3984(v89, v91 | v92 | v93 | v80)) {
              return 0;
            }
            OUTLINED_FUNCTION_50_4();
            if (v94)
            {
              if (!v95) {
                return 0;
              }
              if (*v96 != *v97 || v94 != v95)
              {
                char v99 = sub_1C68ED7E8();
                uint64_t result = 0;
                if ((v99 & 1) == 0) {
                  return result;
                }
              }
            }
            else if (v95)
            {
              return 0;
            }
            if ((sub_1C68E9BC8() & 1) == 0) {
              return 0;
            }
            uint64_t v100 = v125;
            uint64_t v101 = v131;
            sub_1C65BB124(a1 + v125[19], v131, &qword_1EBBF6510);
            uint64_t v102 = v130;
            sub_1C65BB124(a2 + v100[19], v130, &qword_1EBBF6510);
            uint64_t v103 = v132;
            uint64_t v104 = v132 + *(int *)(v128 + 48);
            sub_1C65BB124(v101, v132, &qword_1EBBF6510);
            sub_1C65BB124(v102, v104, &qword_1EBBF6510);
            OUTLINED_FUNCTION_4(v103, 1, v133);
            if (v34)
            {
              sub_1C65C117C(v130, &qword_1EBBF6510);
              sub_1C65C117C(v131, &qword_1EBBF6510);
              OUTLINED_FUNCTION_4(v104, 1, v133);
              if (v34)
              {
                sub_1C65C117C(v132, &qword_1EBBF6510);
                goto LABEL_77;
              }
            }
            else
            {
              sub_1C65BB124(v132, v129, &qword_1EBBF6510);
              OUTLINED_FUNCTION_4(v104, 1, v133);
              if (!v105)
              {
                uint64_t v106 = v126;
                uint64_t v107 = v127;
                uint64_t v108 = v133;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 32))(v126, v104, v133);
                sub_1C65E6DE4((unint64_t *)&qword_1EA406560, MEMORY[0x1E4F27990]);
                uint64_t v109 = v129;
                char v110 = sub_1C68EC858();
                uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
                v111(v106, v108);
                sub_1C65C117C(v130, &qword_1EBBF6510);
                sub_1C65C117C(v131, &qword_1EBBF6510);
                v111(v109, v108);
                sub_1C65C117C(v132, &qword_1EBBF6510);
                if ((v110 & 1) == 0) {
                  return 0;
                }
LABEL_77:
                if (*(unsigned __int8 *)(a1 + v125[20]) == *(unsigned __int8 *)(a2 + v125[20]))
                {
                  OUTLINED_FUNCTION_50_4();
                  if (v112)
                  {
                    if (!v113) {
                      return 0;
                    }
                    BOOL v116 = *v114 == *v115 && v112 == v113;
                    if (!v116 && (sub_1C68ED7E8() & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v113)
                  {
                    return 0;
                  }
                  return 1;
                }
                return 0;
              }
              sub_1C65C117C(v130, &qword_1EBBF6510);
              sub_1C65C117C(v131, &qword_1EBBF6510);
              (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v129, v133);
            }
            uint64_t v46 = &qword_1EA4079B8;
            uint64_t v47 = v132;
LABEL_30:
            sub_1C65C117C(v47, v46);
            return 0;
          }
        }
        else if (v59 != 1)
        {
          v134[0] = v51;
          v134[1] = v52;
          v134[2] = v53;
          v134[3] = v54;
          v134[4] = v55;
          v134[5] = v56;
          v135[0] = v58;
          v135[1] = v59;
          v135[2] = v60;
          v135[3] = v61;
          uint64_t v120 = v63;
          uint64_t v121 = v62;
          v135[4] = v62;
          v135[5] = v63;
          uint64_t v122 = v55;
          uint64_t v117 = v53;
          uint64_t v118 = v58;
          uint64_t v68 = v51;
          uint64_t v124 = v51;
          uint64_t v119 = v60;
          int v123 = sub_1C68B5E04(v134, v135);
          sub_1C66C5BDC(v68, v52);
          uint64_t v69 = OUTLINED_FUNCTION_47_5();
          sub_1C66C5BDC(v69, v70);
          sub_1C66C5BDC(v118, v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = OUTLINED_FUNCTION_47_5();
          sub_1C65E0B14(v71, v72);
          uint64_t v49 = v125;
          if ((v123 & 1) == 0) {
            return 0;
          }
          goto LABEL_38;
        }
        uint64_t v132 = v54;
        uint64_t v133 = v56;
        uint64_t v124 = v51;
        sub_1C66C5BDC(v51, v52);
        uint64_t v64 = OUTLINED_FUNCTION_23_12();
        sub_1C66C5BDC(v64, v65);
        sub_1C65E0B14(v124, v52);
        uint64_t v66 = OUTLINED_FUNCTION_23_12();
        sub_1C65E0B14(v66, v67);
        return 0;
      }
      sub_1C65C117C((uint64_t)v31, &qword_1EBBF4638);
      sub_1C65C117C((uint64_t)v33, &qword_1EBBF4638);
      sub_1C65C117C((uint64_t)v28, &qword_1EBBF4628);
    }
    uint64_t v46 = &qword_1EA4079C0;
    uint64_t v47 = v23;
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1C66CEB34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C6916210 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C6916230 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C6916110 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001C6916250 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    BOOL v6 = a1 == 0x7365686374616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656D6D6F636572 && a2 == 0xEE006E6F69746164;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        BOOL v8 = a1 == 0x6974756C6F736572 && a2 == 0xEE00657079546E6FLL;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          BOOL v9 = a1 == 0x6F72506563726F66 && a2 == 0xEB0000000074706DLL;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            BOOL v10 = a1 == 0x6F72506563726F66 && a2 == 0xEF6570795474706DLL;
            if (v10 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001C6916280 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              BOOL v11 = a1 == 0x726E456C61697274 && a2 == 0xEF746E656D6C6C6FLL;
              if (v11 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                BOOL v12 = a1 == 0x546E755273756C50 && a2 == 0xEF61746144656D69;
                if (v12 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  BOOL v13 = a1 == 0x4974736575716572 && a2 == 0xE900000000000064;
                  if (v13 || (sub_1C68ED7E8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 13;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x64497972657571 && a2 == 0xE700000000000000;
                    if (v14 || (sub_1C68ED7E8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 14;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x6974756C6F736572 && a2 == 0xEC00000064496E6FLL;
                      if (v15 || (sub_1C68ED7E8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 15;
                      }
                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001C69162A0 || (sub_1C68ED7E8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C69162C0)
                      {
                        swift_bridgeObjectRelease();
                        return 17;
                      }
                      else
                      {
                        char v16 = sub_1C68ED7E8();
                        swift_bridgeObjectRelease();
                        if (v16) {
                          return 17;
                        }
                        else {
                          return 18;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C66CF2C4()
{
  return 18;
}

void sub_1C66CF314()
{
  OUTLINED_FUNCTION_63();
  unint64_t v57 = v2;
  uint64_t v38 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  uint64_t v5 = OUTLINED_FUNCTION_3(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1();
  uint64_t v39 = v6;
  uint64_t v7 = sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v46 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_1();
  uint64_t v40 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638);
  uint64_t v12 = OUTLINED_FUNCTION_3(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1();
  uint64_t v41 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_25_12(v16, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407948);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_1_15();
  uint64_t v18 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_19_1();
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  LOBYTE(v56[2]) = 0;
  v56[3] = 0;
  v56[4] = 0xE000000000000000;
  v56[5] = 0;
  v56[6] = 0xE000000000000000;
  v56[7] = 0;
  v56[8] = 0xE000000000000000;
  v56[9] = 0;
  v56[10] = 0xE000000000000000;
  v56[11] = 0;
  v56[12] = 0xE000000000000000;
  v56[13] = 0;
  v56[14] = 0xE000000000000000;
  v56[15] = 0;
  v56[16] = 0xE000000000000000;
  v56[17] = 0;
  v56[18] = 0xE000000000000000;
  memset(&v56[21], 0, 72);
  v56[19] = 0;
  v56[20] = 0xE000000000000000;
  v56[30] = MEMORY[0x1E4FBC860];
  LOBYTE(v56[31]) = 1;
  v56[32] = 0;
  memcpy((void *)v1, v56, 0x108uLL);
  *(void *)(v1 + 272) = 0;
  *(void *)(v1 + 280) = 0xE000000000000000;
  *(_WORD *)(v1 + 288) = 0;
  uint64_t v20 = v18[12];
  *(unsigned char *)(v1 + v20) = 0;
  uint64_t v21 = v18[13];
  *(unsigned char *)(v1 + v21) = 5;
  uint64_t v50 = v1 + v18[14];
  __swift_storeEnumTagSinglePayload(v50, 1, 1, v14);
  uint64_t v22 = (_OWORD *)(v1 + v18[15]);
  _OWORD *v22 = xmmword_1C68EF950;
  v22[1] = 0u;
  uint64_t v49 = v22;
  v22[2] = 0u;
  uint64_t v23 = v1 + v18[16];
  *(_DWORD *)uint64_t v23 = 1;
  *(unsigned char *)(v23 + 4) = 2;
  uint64_t v24 = (uint64_t *)(v1 + v18[17]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v47 = v24;
  uint64_t v44 = v1 + v18[18];
  sub_1C68E9BE8();
  uint64_t v43 = v1 + v18[19];
  uint64_t v48 = v7;
  __swift_storeEnumTagSinglePayload(v43, 1, 1, v7);
  uint64_t v25 = v18[20];
  *(unsigned char *)(v1 + v25) = 0;
  uint64_t v26 = (uint64_t *)(v1 + v18[21]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  char v45 = v26;
  __swift_project_boxed_opaque_existential_1(v57, v57[3]);
  sub_1C65E4E30();
  sub_1C68ED9E8();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    memcpy(v55, (const void *)v1, sizeof(v55));
    sub_1C65B6550(v55);
    swift_bridgeObjectRelease();
    sub_1C65C117C(v50, &qword_1EBBF4638);
    sub_1C65E0B14(*(void *)v49, *((void *)v49 + 1));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_0();
    v27();
    sub_1C65C117C(v43, &qword_1EBBF6510);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C65B5584();
    OUTLINED_FUNCTION_16_15();
    sub_1C65B6550(v56);
    memcpy((void *)v1, v55, 0x108uLL);
    sub_1C66CA5B8();
    sub_1C68ED668();
    *(unsigned char *)(v1 + 264) = v51;
    LOBYTE(v51) = 2;
    *(void *)(v1 + 272) = sub_1C68ED618();
    *(void *)(v1 + 280) = v28;
    *(unsigned char *)(v1 + 288) = OUTLINED_FUNCTION_41_9(3) & 1;
    *(unsigned char *)(v1 + 289) = OUTLINED_FUNCTION_41_9(4) & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407958);
    sub_1C65E534C(&qword_1EA407960, &qword_1EA407968);
    sub_1C68ED668();
    *(void *)(v1 + 296) = v51;
    sub_1C65E53E0(&qword_1EA407970);
    sub_1C68ED668();
    sub_1C66D595C(v42, v1 + v18[10]);
    sub_1C66CA6E0();
    OUTLINED_FUNCTION_16_15();
    *(unsigned char *)(v1 + v18[11]) = 6;
    *(unsigned char *)(v1 + v20) = sub_1C68ED628() & 1;
    sub_1C66D59C4();
    OUTLINED_FUNCTION_16_15();
    *(unsigned char *)(v1 + v21) = 8;
    LOBYTE(v51) = 10;
    sub_1C68ED608();
    sub_1C66C016C(v41, v50, &qword_1EBBF4638);
    sub_1C66CA56C();
    sub_1C68ED608();
    sub_1C65E0B14(*(void *)v49, *((void *)v49 + 1));
    *uint64_t v49 = v51;
    v49[1] = v52;
    *((void *)v49 + 4) = v53;
    *((void *)v49 + 5) = v54;
    sub_1C66D5A10();
    OUTLINED_FUNCTION_16_15();
    *(_WORD *)uint64_t v23 = __PAIR16__(BYTE1(v51), 10);
    *(unsigned char *)(v23 + 2) = BYTE2(v51);
    *(unsigned char *)(v23 + 3) = BYTE3(v51);
    *(unsigned char *)(v23 + 4) = BYTE4(v51);
    uint64_t v29 = OUTLINED_FUNCTION_42_7(13);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *uint64_t v47 = v29;
    v47[1] = v31;
    sub_1C65E6DE4(&qword_1EA4074E8, MEMORY[0x1E4F27990]);
    sub_1C68ED668();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 40))(v44, v40, v48);
    sub_1C68ED608();
    sub_1C66C016C(v39, v43, &qword_1EBBF6510);
    *(unsigned char *)(v1 + v25) = sub_1C68ED628() & 1;
    uint64_t v32 = OUTLINED_FUNCTION_42_7(17);
    uint64_t v34 = v33;
    uint64_t v35 = OUTLINED_FUNCTION_31_7();
    v36(v35);
    swift_bridgeObjectRelease();
    *char v45 = v32;
    v45[1] = v34;
    sub_1C66D5B94(v1, v38, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    sub_1C66D5AF4(v1, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  }
  OUTLINED_FUNCTION_54_0();
}

uint64_t sub_1C66CFD18()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66CFD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66CEB34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66CFD8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66CF2C4();
  *a1 = result;
  return result;
}

uint64_t sub_1C66CFDB4(uint64_t a1)
{
  unint64_t v2 = sub_1C65E4E30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66CFDF0(uint64_t a1)
{
  unint64_t v2 = sub_1C65E4E30();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C66CFE2C()
{
}

uint64_t sub_1C66CFE48()
{
  return sub_1C6702380(*v0);
}

uint64_t sub_1C66CFE50()
{
  return sub_1C6678B80();
}

uint64_t sub_1C66CFE58()
{
  return sub_1C680D13C();
}

uint64_t sub_1C66CFE60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66CFD18();
  *a1 = result;
  return result;
}

uint64_t sub_1C66CFE90()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66CFEF0(unsigned __int8 *a1, char *a2)
{
  return sub_1C6618074(*a1, *a2);
}

uint64_t sub_1C66CFEFC(uint64_t a1, uint64_t a2)
{
  static Contact.== infix(_:_:)();
  if ((v5 & 1) != 0
    && (uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0),
        OUTLINED_FUNCTION_45_7(matched),
        static ContactResolver.SignalSet.== infix(_:_:)())
    && ((v9 = OUTLINED_FUNCTION_15_18(), v11) ? (BOOL v11 = v9 == v10) : (BOOL v11 = 0),
        v11
     && (sub_1C66312B4(*(void *)(v7 + 16), *(void *)(v8 + 16)) & 1) != 0
     && (sub_1C66EE5EC(*(void **)(a1 + *(int *)(v2 + 28)), *(void **)(a2 + *(int *)(v2 + 28))), (v12 & 1) != 0)
     && (OUTLINED_FUNCTION_54_6(), v11)))
  {
    OUTLINED_FUNCTION_21_9();
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

unint64_t sub_1C66CFF8C(char a1)
{
  unint64_t result = 0x65756C6176;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736C616E676973;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7365727574616566;
      break;
    case 4:
      unint64_t result = 0x65726F6373;
      break;
    case 5:
      unint64_t result = 0x546E776F68537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66D005C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407A40);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66DB218();
  OUTLINED_FUNCTION_53_5();
  type metadata accessor for Contact();
  sub_1C65E6DE4(&qword_1EA407688, (void (*)(uint64_t))type metadata accessor for Contact);
  sub_1C68ED758();
  if (!v1)
  {
    type metadata accessor for ContactMatchRuntimeData(0);
    uint64_t v4 = OUTLINED_FUNCTION_24_13();
    type metadata accessor for ContactResolver.SignalSet(v4);
    sub_1C65E6DE4(&qword_1EA4076B8, (void (*)(uint64_t))type metadata accessor for ContactResolver.SignalSet);
    OUTLINED_FUNCTION_20_14();
    OUTLINED_FUNCTION_9_20();
    sub_1C66DB348();
    OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_13_15();
    OUTLINED_FUNCTION_12_16();
  }
  uint64_t v5 = OUTLINED_FUNCTION_32_9();
  return v6(v5);
}

void sub_1C66D023C()
{
  OUTLINED_FUNCTION_63();
  uint64_t v4 = v3;
  uint64_t v18 = v5;
  type metadata accessor for ContactResolver.SignalSet(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_15();
  type metadata accessor for Contact();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_19_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407A18);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_26_10();
  uint64_t matched = (int *)type metadata accessor for ContactMatchRuntimeData(v9);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1();
  uint64_t v20 = v11;
  uint64_t v21 = (uint64_t)v4;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C66DB218();
  sub_1C68ED9E8();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_1C65E6DE4(&qword_1EA407680, (void (*)(uint64_t))type metadata accessor for Contact);
    sub_1C68ED668();
    sub_1C65BBCF0(v1, v20, (void (*)(void))type metadata accessor for Contact);
    LOBYTE(v22) = 1;
    sub_1C65E6DE4(&qword_1EA4076B0, (void (*)(uint64_t))type metadata accessor for ContactResolver.SignalSet);
    sub_1C68ED668();
    sub_1C65BBCF0(v2, v20 + matched[5], (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
    sub_1C66DB264();
    OUTLINED_FUNCTION_22_8();
    double v12 = OUTLINED_FUNCTION_55_5();
    OUTLINED_FUNCTION_43_5(v13, v12);
    OUTLINED_FUNCTION_22_8();
    *(void *)(v20 + matched[7]) = v22;
    OUTLINED_FUNCTION_29_8(4);
    sub_1C68ED638();
    *(void *)(v20 + matched[8]) = v14;
    OUTLINED_FUNCTION_29_8(5);
    char v15 = sub_1C68ED628();
    uint64_t v16 = OUTLINED_FUNCTION_6_21();
    v17(v16);
    *(unsigned char *)(v20 + matched[9]) = v15 & 1;
    sub_1C66D5B94(v20, v18, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
    __swift_destroy_boxed_opaque_existential_1(v21);
    sub_1C66D5AF4(v20, (void (*)(void))type metadata accessor for ContactMatchRuntimeData);
  }
  OUTLINED_FUNCTION_54_0();
}

uint64_t sub_1C66D06A8(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = (void *)a2[2];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1C68ED7E8(), char v8 = 0, (v7 & 1) != 0))
  {
    if ((sub_1C6630DF4((void *)v4, v5) & 1) != 0
      && (uint64_t matched = type metadata accessor for PrivatizedContactMatchRuntimeData(0),
          uint64_t v10 = (unsigned __int8 *)OUTLINED_FUNCTION_45_7(matched),
          sub_1C67EA9F0(v10, v11))
      && ((double v12 = OUTLINED_FUNCTION_15_18(), v6) ? (v14 = v12 == v13) : (v14 = 0),
          v14
       && (sub_1C6630EC0() & 1) != 0
       && (sub_1C66EE5EC(*(void **)((char *)a1 + *(int *)(v4 + 28)), *(void **)((char *)a2 + *(int *)(v4 + 28))),
           (v15 & 1) != 0)
       && (OUTLINED_FUNCTION_54_6(), v6)))
    {
      OUTLINED_FUNCTION_21_9();
    }
    else
    {
      char v8 = 0;
    }
  }
  return v8 & 1;
}

uint64_t sub_1C66D076C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x736C616E676973 && a2 == 0xE700000000000000;
    if (v6 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C69162E0 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x7365727574616566 && a2 == 0xE800000000000000;
      if (v7 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
        if (v8 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x546E776F68537369 && a2 == 0xED0000726573556FLL)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = OUTLINED_FUNCTION_8_27();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C66D09A4(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407A80);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66DB3E0();
  OUTLINED_FUNCTION_53_5();
  sub_1C66DB4C4();
  OUTLINED_FUNCTION_4_22();
  if (!v1)
  {
    type metadata accessor for PrivatizedContactMatchRuntimeData(0);
    uint64_t v4 = OUTLINED_FUNCTION_24_13();
    type metadata accessor for PrivatizedSignalSet(v4);
    sub_1C65E6DE4(&qword_1EA407A90, (void (*)(uint64_t))type metadata accessor for PrivatizedSignalSet);
    OUTLINED_FUNCTION_20_14();
    OUTLINED_FUNCTION_9_20();
    sub_1C66DB510();
    OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_13_15();
    OUTLINED_FUNCTION_12_16();
  }
  uint64_t v5 = OUTLINED_FUNCTION_32_9();
  return v6(v5);
}

void sub_1C66D0B48()
{
  OUTLINED_FUNCTION_63();
  uint64_t v3 = v2;
  uint64_t v15 = v4;
  type metadata accessor for PrivatizedSignalSet(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_13_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407A58);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_15();
  uint64_t matched = (int *)type metadata accessor for PrivatizedContactMatchRuntimeData(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1();
  uint64_t v17 = v8;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C66DB3E0();
  sub_1C68ED9E8();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_1C66DB42C();
    OUTLINED_FUNCTION_28_7();
    *(void *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 8) = v19;
    LOBYTE(v18) = 1;
    sub_1C65E6DE4(&qword_1EA407A70, (void (*)(uint64_t))type metadata accessor for PrivatizedSignalSet);
    sub_1C68ED668();
    sub_1C65BBCF0(v1, v17 + matched[5], (void (*)(void))type metadata accessor for PrivatizedSignalSet);
    sub_1C66DB478();
    OUTLINED_FUNCTION_28_7();
    double v9 = OUTLINED_FUNCTION_55_5();
    OUTLINED_FUNCTION_43_5(v10, v9);
    OUTLINED_FUNCTION_28_7();
    *(void *)(v17 + matched[7]) = v18;
    OUTLINED_FUNCTION_30_10(4);
    sub_1C68ED638();
    *(void *)(v17 + matched[8]) = v11;
    OUTLINED_FUNCTION_30_10(5);
    char v12 = sub_1C68ED628();
    uint64_t v13 = OUTLINED_FUNCTION_10_18();
    v14(v13);
    *(unsigned char *)(v17 + matched[9]) = v12 & 1;
    sub_1C66D5B94(v17, v15, (void (*)(void))type metadata accessor for PrivatizedContactMatchRuntimeData);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_1C66D5AF4(v17, (void (*)(void))type metadata accessor for PrivatizedContactMatchRuntimeData);
  }
  OUTLINED_FUNCTION_54_0();
}

unint64_t sub_1C66D0F60()
{
  return sub_1C66CFF8C(*v0);
}

uint64_t sub_1C66D0F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66D076C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66D0F90(uint64_t a1)
{
  unint64_t v2 = sub_1C66DB218();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66D0FCC(uint64_t a1)
{
  unint64_t v2 = sub_1C66DB218();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C66D1008()
{
}

uint64_t sub_1C66D1020(void *a1)
{
  return sub_1C66D005C(a1);
}

uint64_t sub_1C66D103C(uint64_t a1)
{
  unint64_t v2 = sub_1C66DB3E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66D1078(uint64_t a1)
{
  unint64_t v2 = sub_1C66DB3E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C66D10B4()
{
}

uint64_t sub_1C66D10CC(void *a1)
{
  return sub_1C66D09A4(a1);
}

SiriInference::ForcePromptType_optional __swiftcall ForcePromptType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C68ED598();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C66D115C()
{
  return sub_1C6702398(*v0);
}

uint64_t sub_1C66D1164(uint64_t a1)
{
  return sub_1C66798A8(a1, *v1);
}

uint64_t sub_1C66D116C()
{
  return sub_1C680CA70();
}

SiriInference::ForcePromptType_optional sub_1C66D1174(Swift::String *a1)
{
  return ForcePromptType.init(rawValue:)(*a1);
}

uint64_t sub_1C66D1180()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66D11E0(unsigned __int8 *a1, char *a2)
{
  return sub_1C6618238(*a1, *a2);
}

uint64_t sub_1C66D11EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Contact();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v41 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  char v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v40 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079C8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t *)&v21[*(int *)(v19 + 56)];
  sub_1C65BB124(a1, (uint64_t)v21, &qword_1EBBF4628);
  sub_1C65BB124(a2, (uint64_t)v22, &qword_1EBBF4628);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C65BB124((uint64_t)v21, (uint64_t)v15, &qword_1EBBF4628);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v24 = v41;
        sub_1C65BBCF0((uint64_t)v22, v41, (void (*)(void))type metadata accessor for Contact);
        static Contact.== infix(_:_:)();
        char v26 = v25;
        sub_1C66D5AF4(v24, (void (*)(void))type metadata accessor for Contact);
        uint64_t v27 = (uint64_t)v15;
        goto LABEL_19;
      }
      uint64_t v23 = (uint64_t)v15;
      goto LABEL_15;
    case 2u:
      sub_1C65BB124((uint64_t)v21, (uint64_t)v12, &qword_1EBBF4628);
      uint64_t v28 = *v12;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1C6631150(v28, *v22, v29, v30, v31, v32, v33, v34, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50,
          v51);
        char v26 = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3) {
        uint64_t v37 = &qword_1EBBF4628;
      }
      else {
        uint64_t v37 = &qword_1EA4079C8;
      }
      if (EnumCaseMultiPayload == 3) {
        char v26 = -1;
      }
      else {
        char v26 = 0;
      }
      goto LABEL_21;
    default:
      sub_1C65BB124((uint64_t)v21, (uint64_t)v17, &qword_1EBBF4628);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v23 = (uint64_t)v17;
LABEL_15:
        sub_1C66D5AF4(v23, (void (*)(void))type metadata accessor for Contact);
LABEL_17:
        char v26 = 0;
        uint64_t v37 = &qword_1EA4079C8;
      }
      else
      {
        sub_1C65BBCF0((uint64_t)v22, (uint64_t)v8, (void (*)(void))type metadata accessor for Contact);
        static Contact.== infix(_:_:)();
        char v26 = v38;
        sub_1C66D5AF4((uint64_t)v8, (void (*)(void))type metadata accessor for Contact);
        uint64_t v27 = (uint64_t)v17;
LABEL_19:
        sub_1C66D5AF4(v27, (void (*)(void))type metadata accessor for Contact);
LABEL_20:
        uint64_t v37 = &qword_1EBBF4628;
      }
LABEL_21:
      sub_1C65C117C((uint64_t)v21, v37);
      return v26 & 1;
  }
}

unint64_t sub_1C66D15CC()
{
  unint64_t result = qword_1EA407938;
  if (!qword_1EA407938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407938);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForcePromptType()
{
  return &type metadata for ForcePromptType;
}

uint64_t sub_1C66D1630(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v10;
  char v12 = a2;
  uint64_t v11 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v11;
  uint64_t v13 = a2[16];
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = v13;
  uint64_t v14 = a2[18];
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = v14;
  uint64_t v15 = a2[20];
  *(void *)(a1 + 152) = a2[19];
  *(void *)(a1 + 160) = v15;
  uint64_t v148 = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v148)
  {
    uint64_t v16 = v12[22];
    *(void *)(a1 + 168) = v12[21];
    *(void *)(a1 + 176) = v16;
    *(void *)(a1 + 184) = v148;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(v12 + 21);
    *(void *)(a1 + 184) = v12[23];
  }
  uint64_t v18 = v12[26];
  if (v18)
  {
    *(unsigned char *)(a1 + 192) = *((unsigned char *)v12 + 192);
    *(void *)(a1 + 200) = v12[25];
    *(void *)(a1 + 208) = v18;
    uint64_t v19 = v12[28];
    *(void *)(a1 + 216) = v12[27];
    *(void *)(a1 + 224) = v19;
    *(void *)(a1 + 232) = v12[29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *((_OWORD *)v12 + 13);
    *(_OWORD *)(a1 + 192) = *((_OWORD *)v12 + 12);
    *(_OWORD *)(a1 + 208) = v20;
    *(_OWORD *)(a1 + 224) = *((_OWORD *)v12 + 14);
  }
  *(void *)(a1 + 240) = v12[30];
  *(unsigned char *)(a1 + 248) = *((unsigned char *)v12 + 248);
  *(void *)(a1 + 256) = v12[32];
  *(unsigned char *)(a1 + 264) = *((unsigned char *)v12 + 264);
  uint64_t v21 = v12[35];
  *(void *)(a1 + 272) = v12[34];
  *(void *)(a1 + 280) = v21;
  *(_WORD *)(a1 + 288) = *((_WORD *)v12 + 144);
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t)v12 + v22;
  *(void *)(a1 + 296) = v12[37];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)uint64_t v23 = *(void *)v24;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (!EnumCaseMultiPayload)
    {
      uint64_t v149 = v25;
      uint64_t v144 = a1;
      uint64_t v146 = v12;
      uint64_t v27 = *(void *)(v24 + 8);
      *(void *)uint64_t v23 = *(void *)v24;
      *(void *)(v23 + 8) = v27;
      *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
      uint64_t v28 = *(void *)(v24 + 32);
      *(void *)(v23 + 24) = *(void *)(v24 + 24);
      *(void *)(v23 + 32) = v28;
      uint64_t v29 = *(void *)(v24 + 48);
      *(void *)(v23 + 40) = *(void *)(v24 + 40);
      *(void *)(v23 + 48) = v29;
      uint64_t v30 = *(void *)(v24 + 64);
      *(void *)(v23 + 56) = *(void *)(v24 + 56);
      *(void *)(v23 + 64) = v30;
      uint64_t v31 = *(void *)(v24 + 80);
      *(void *)(v23 + 72) = *(void *)(v24 + 72);
      *(void *)(v23 + 80) = v31;
      uint64_t v32 = *(void *)(v24 + 96);
      *(void *)(v23 + 88) = *(void *)(v24 + 88);
      *(void *)(v23 + 96) = v32;
      uint64_t v33 = *(void *)(v24 + 112);
      *(void *)(v23 + 104) = *(void *)(v24 + 104);
      *(void *)(v23 + 112) = v33;
      uint64_t v34 = *(void *)(v24 + 128);
      *(void *)(v23 + 120) = *(void *)(v24 + 120);
      *(void *)(v23 + 128) = v34;
      uint64_t v35 = *(void *)(v24 + 144);
      *(void *)(v23 + 136) = *(void *)(v24 + 136);
      *(void *)(v23 + 144) = v35;
      uint64_t v36 = *(void *)(v24 + 160);
      *(void *)(v23 + 152) = *(void *)(v24 + 152);
      *(void *)(v23 + 160) = v36;
      uint64_t v37 = *(void *)(v24 + 176);
      *(void *)(v23 + 168) = *(void *)(v24 + 168);
      *(void *)(v23 + 176) = v37;
      uint64_t v38 = *(void *)(v24 + 192);
      *(void *)(v23 + 184) = *(void *)(v24 + 184);
      *(void *)(v23 + 192) = v38;
      uint64_t v39 = *(void *)(v24 + 208);
      *(void *)(v23 + 200) = *(void *)(v24 + 200);
      *(void *)(v23 + 208) = v39;
      *(void *)(v23 + 216) = *(void *)(v24 + 216);
      uint64_t v40 = (int *)type metadata accessor for Contact();
      uint64_t v41 = v40[19];
      __dst = (void *)(v23 + v41);
      uint64_t v42 = (const void *)(v24 + v41);
      uint64_t v43 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43)) {
        goto LABEL_16;
      }
LABEL_19:
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 16))(__dst, v42, v43);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v43);
      goto LABEL_20;
    }
    memcpy((void *)v23, (const void *)v24, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_18:
    uint64_t v59 = a3;
    goto LABEL_21;
  }
  uint64_t v149 = v25;
  uint64_t v144 = a1;
  uint64_t v146 = v12;
  uint64_t v44 = *(void *)(v24 + 8);
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = v44;
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  uint64_t v45 = *(void *)(v24 + 32);
  *(void *)(v23 + 24) = *(void *)(v24 + 24);
  *(void *)(v23 + 32) = v45;
  uint64_t v46 = *(void *)(v24 + 48);
  *(void *)(v23 + 40) = *(void *)(v24 + 40);
  *(void *)(v23 + 48) = v46;
  uint64_t v47 = *(void *)(v24 + 64);
  *(void *)(v23 + 56) = *(void *)(v24 + 56);
  *(void *)(v23 + 64) = v47;
  uint64_t v48 = *(void *)(v24 + 80);
  *(void *)(v23 + 72) = *(void *)(v24 + 72);
  *(void *)(v23 + 80) = v48;
  uint64_t v49 = *(void *)(v24 + 96);
  *(void *)(v23 + 88) = *(void *)(v24 + 88);
  *(void *)(v23 + 96) = v49;
  uint64_t v50 = *(void *)(v24 + 112);
  *(void *)(v23 + 104) = *(void *)(v24 + 104);
  *(void *)(v23 + 112) = v50;
  uint64_t v51 = *(void *)(v24 + 128);
  *(void *)(v23 + 120) = *(void *)(v24 + 120);
  *(void *)(v23 + 128) = v51;
  uint64_t v52 = *(void *)(v24 + 144);
  *(void *)(v23 + 136) = *(void *)(v24 + 136);
  *(void *)(v23 + 144) = v52;
  uint64_t v53 = *(void *)(v24 + 160);
  *(void *)(v23 + 152) = *(void *)(v24 + 152);
  *(void *)(v23 + 160) = v53;
  uint64_t v54 = *(void *)(v24 + 176);
  *(void *)(v23 + 168) = *(void *)(v24 + 168);
  *(void *)(v23 + 176) = v54;
  uint64_t v55 = *(void *)(v24 + 192);
  *(void *)(v23 + 184) = *(void *)(v24 + 184);
  *(void *)(v23 + 192) = v55;
  uint64_t v56 = *(void *)(v24 + 208);
  *(void *)(v23 + 200) = *(void *)(v24 + 200);
  *(void *)(v23 + 208) = v56;
  *(void *)(v23 + 216) = *(void *)(v24 + 216);
  uint64_t v40 = (int *)type metadata accessor for Contact();
  uint64_t v57 = v40[19];
  __dst = (void *)(v23 + v57);
  uint64_t v42 = (const void *)(v24 + v57);
  uint64_t v43 = sub_1C68E9698();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43)) {
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
  memcpy(__dst, v42, *(void *)(*(void *)(v58 - 8) + 64));
LABEL_20:
  a1 = v144;
  char v12 = v146;
  uint64_t v59 = a3;
  *(void *)(v23 + v40[20]) = *(void *)(v24 + v40[20]);
  *(unsigned char *)(v23 + v40[21]) = *(unsigned char *)(v24 + v40[21]);
  uint64_t v60 = v40[22];
  uint64_t v61 = (void *)(v23 + v60);
  uint64_t v62 = (void *)(v24 + v60);
  uint64_t v63 = v62[1];
  void *v61 = *v62;
  v61[1] = v63;
  *(unsigned char *)(v23 + v40[23]) = *(unsigned char *)(v24 + v40[23]);
  uint64_t v64 = v40[24];
  uint64_t v65 = (void *)(v23 + v64);
  uint64_t v66 = (void *)(v24 + v64);
  uint64_t v67 = v66[1];
  *uint64_t v65 = *v66;
  v65[1] = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v149;
  swift_storeEnumTagMultiPayload();
LABEL_21:
  uint64_t v68 = v59[12];
  *(unsigned char *)(a1 + v59[11]) = *((unsigned char *)v12 + v59[11]);
  *(unsigned char *)(a1 + v68) = *((unsigned char *)v12 + v68);
  uint64_t v69 = v59[14];
  *(unsigned char *)(a1 + v59[13]) = *((unsigned char *)v12 + v59[13]);
  uint64_t v70 = a1 + v69;
  uint64_t v71 = (uint64_t)v12 + v69;
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12 + v69, 1, v25))
  {
    int v73 = swift_getEnumCaseMultiPayload();
    if (v73 == 2)
    {
      *(void *)uint64_t v70 = *(void *)v71;
      swift_bridgeObjectRetain();
LABEL_34:
      swift_storeEnumTagMultiPayload();
      goto LABEL_35;
    }
    if (v73 == 1)
    {
      uint64_t v150 = v25;
      uint64_t v145 = a1;
      uint64_t v147 = v12;
      uint64_t v91 = *(void *)(v71 + 8);
      *(void *)uint64_t v70 = *(void *)v71;
      *(void *)(v70 + 8) = v91;
      *(unsigned char *)(v70 + 16) = *(unsigned char *)(v71 + 16);
      uint64_t v92 = *(void *)(v71 + 32);
      *(void *)(v70 + 24) = *(void *)(v71 + 24);
      *(void *)(v70 + 32) = v92;
      uint64_t v93 = *(void *)(v71 + 48);
      *(void *)(v70 + 40) = *(void *)(v71 + 40);
      *(void *)(v70 + 48) = v93;
      uint64_t v94 = *(void *)(v71 + 64);
      *(void *)(v70 + 56) = *(void *)(v71 + 56);
      *(void *)(v70 + 64) = v94;
      uint64_t v95 = *(void *)(v71 + 80);
      *(void *)(v70 + 72) = *(void *)(v71 + 72);
      *(void *)(v70 + 80) = v95;
      uint64_t v96 = *(void *)(v71 + 96);
      *(void *)(v70 + 88) = *(void *)(v71 + 88);
      *(void *)(v70 + 96) = v96;
      uint64_t v97 = *(void *)(v71 + 112);
      *(void *)(v70 + 104) = *(void *)(v71 + 104);
      *(void *)(v70 + 112) = v97;
      uint64_t v98 = *(void *)(v71 + 128);
      *(void *)(v70 + 120) = *(void *)(v71 + 120);
      *(void *)(v70 + 128) = v98;
      uint64_t v99 = *(void *)(v71 + 144);
      *(void *)(v70 + 136) = *(void *)(v71 + 136);
      *(void *)(v70 + 144) = v99;
      uint64_t v100 = *(void *)(v71 + 160);
      *(void *)(v70 + 152) = *(void *)(v71 + 152);
      *(void *)(v70 + 160) = v100;
      uint64_t v101 = *(void *)(v71 + 176);
      *(void *)(v70 + 168) = *(void *)(v71 + 168);
      *(void *)(v70 + 176) = v101;
      uint64_t v102 = *(void *)(v71 + 192);
      *(void *)(v70 + 184) = *(void *)(v71 + 184);
      *(void *)(v70 + 192) = v102;
      uint64_t v103 = *(void *)(v71 + 208);
      *(void *)(v70 + 200) = *(void *)(v71 + 200);
      *(void *)(v70 + 208) = v103;
      *(void *)(v70 + 216) = *(void *)(v71 + 216);
      uint64_t v87 = (int *)type metadata accessor for Contact();
      uint64_t v104 = v87[19];
      __dsta = (void *)(v70 + v104);
      unint64_t v89 = (const void *)(v71 + v104);
      uint64_t v90 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
      {
LABEL_30:
        uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
        memcpy(__dsta, v89, *(void *)(*(void *)(v105 - 8) + 64));
LABEL_33:
        a1 = v145;
        char v12 = v147;
        *(void *)(v70 + v87[20]) = *(void *)(v71 + v87[20]);
        *(unsigned char *)(v70 + v87[21]) = *(unsigned char *)(v71 + v87[21]);
        uint64_t v106 = v87[22];
        uint64_t v107 = (void *)(v70 + v106);
        uint64_t v108 = (void *)(v71 + v106);
        uint64_t v109 = v108[1];
        *uint64_t v107 = *v108;
        v107[1] = v109;
        *(unsigned char *)(v70 + v87[23]) = *(unsigned char *)(v71 + v87[23]);
        uint64_t v110 = v87[24];
        uint64_t v111 = (void *)(v70 + v110);
        uint64_t v112 = (void *)(v71 + v110);
        uint64_t v113 = v112[1];
        *uint64_t v111 = *v112;
        v111[1] = v113;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v25 = v150;
        goto LABEL_34;
      }
    }
    else
    {
      if (v73)
      {
        memcpy((void *)v70, (const void *)v71, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_35:
        __swift_storeEnumTagSinglePayload(v70, 0, 1, v25);
        goto LABEL_36;
      }
      uint64_t v150 = v25;
      uint64_t v145 = a1;
      uint64_t v147 = v12;
      uint64_t v74 = *(void *)(v71 + 8);
      *(void *)uint64_t v70 = *(void *)v71;
      *(void *)(v70 + 8) = v74;
      *(unsigned char *)(v70 + 16) = *(unsigned char *)(v71 + 16);
      uint64_t v75 = *(void *)(v71 + 32);
      *(void *)(v70 + 24) = *(void *)(v71 + 24);
      *(void *)(v70 + 32) = v75;
      uint64_t v76 = *(void *)(v71 + 48);
      *(void *)(v70 + 40) = *(void *)(v71 + 40);
      *(void *)(v70 + 48) = v76;
      uint64_t v77 = *(void *)(v71 + 64);
      *(void *)(v70 + 56) = *(void *)(v71 + 56);
      *(void *)(v70 + 64) = v77;
      uint64_t v78 = *(void *)(v71 + 80);
      *(void *)(v70 + 72) = *(void *)(v71 + 72);
      *(void *)(v70 + 80) = v78;
      uint64_t v79 = *(void *)(v71 + 96);
      *(void *)(v70 + 88) = *(void *)(v71 + 88);
      *(void *)(v70 + 96) = v79;
      uint64_t v80 = *(void *)(v71 + 112);
      *(void *)(v70 + 104) = *(void *)(v71 + 104);
      *(void *)(v70 + 112) = v80;
      uint64_t v81 = *(void *)(v71 + 128);
      *(void *)(v70 + 120) = *(void *)(v71 + 120);
      *(void *)(v70 + 128) = v81;
      uint64_t v82 = *(void *)(v71 + 144);
      *(void *)(v70 + 136) = *(void *)(v71 + 136);
      *(void *)(v70 + 144) = v82;
      uint64_t v83 = *(void *)(v71 + 160);
      *(void *)(v70 + 152) = *(void *)(v71 + 152);
      *(void *)(v70 + 160) = v83;
      uint64_t v84 = *(void *)(v71 + 176);
      *(void *)(v70 + 168) = *(void *)(v71 + 168);
      *(void *)(v70 + 176) = v84;
      uint64_t v85 = *(void *)(v71 + 192);
      *(void *)(v70 + 184) = *(void *)(v71 + 184);
      *(void *)(v70 + 192) = v85;
      uint64_t v86 = *(void *)(v71 + 208);
      *(void *)(v70 + 200) = *(void *)(v71 + 200);
      *(void *)(v70 + 208) = v86;
      *(void *)(v70 + 216) = *(void *)(v71 + 216);
      uint64_t v87 = (int *)type metadata accessor for Contact();
      uint64_t v88 = v87[19];
      __dsta = (void *)(v70 + v88);
      unint64_t v89 = (const void *)(v71 + v88);
      uint64_t v90 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90)) {
        goto LABEL_30;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v90 - 8) + 16))(__dsta, v89, v90);
    __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v90);
    goto LABEL_33;
  }
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638);
  memcpy((void *)v70, (const void *)v71, *(void *)(*(void *)(v72 - 8) + 64));
LABEL_36:
  uint64_t v114 = v59[15];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = (uint64_t)v12 + v114;
  uint64_t v117 = *(void *)(v116 + 8);
  if (v117 == 1)
  {
    long long v118 = *(_OWORD *)(v116 + 16);
    *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
    *(_OWORD *)(v115 + 16) = v118;
    *(_OWORD *)(v115 + 32) = *(_OWORD *)(v116 + 32);
  }
  else
  {
    *(void *)uint64_t v115 = *(void *)v116;
    *(void *)(v115 + 8) = v117;
    uint64_t v119 = *(void *)(v116 + 24);
    *(void *)(v115 + 16) = *(void *)(v116 + 16);
    *(void *)(v115 + 24) = v119;
    uint64_t v120 = *(void *)(v116 + 40);
    *(void *)(v115 + 32) = *(void *)(v116 + 32);
    *(void *)(v115 + 40) = v120;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v121 = v59[16];
  uint64_t v122 = v59[17];
  uint64_t v123 = a1 + v121;
  uint64_t v124 = (uint64_t)v12 + v121;
  *(_DWORD *)uint64_t v123 = *(_DWORD *)v124;
  *(unsigned char *)(v123 + 4) = *(unsigned char *)(v124 + 4);
  uint64_t v125 = (void *)(a1 + v122);
  uint64_t v126 = (uint64_t *)((char *)v12 + v122);
  uint64_t v127 = v126[1];
  void *v125 = *v126;
  v125[1] = v127;
  uint64_t v128 = v59[18];
  uint64_t v129 = a1 + v128;
  uint64_t v130 = (uint64_t)v12 + v128;
  uint64_t v131 = sub_1C68E9BF8();
  uint64_t v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 16);
  swift_bridgeObjectRetain();
  v132(v129, v130, v131);
  uint64_t v133 = a3[19];
  uint64_t v134 = (void *)(a1 + v133);
  unsigned __int8 v135 = (char *)v12 + v133;
  if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v133, 1, v131))
  {
    uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
  }
  else
  {
    v132((uint64_t)v134, (uint64_t)v135, v131);
    __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v131);
  }
  uint64_t v137 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *((unsigned char *)v12 + a3[20]);
  uint64_t v138 = (void *)(a1 + v137);
  uint64_t v139 = (uint64_t *)((char *)v12 + v137);
  uint64_t v140 = v139[1];
  *uint64_t v138 = *v139;
  v138[1] = v140;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C66D2474(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 168);
  uint64_t v7 = (_OWORD *)(a2 + 168);
  uint64_t v8 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v8)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_retain();
      swift_release();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C66935A8(a1 + 168);
      uint64_t v9 = *(void *)(a2 + 184);
      *uint64_t v6 = *v7;
      *(void *)(a1 + 184) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v7;
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *uint64_t v6 = v10;
  }
  uint64_t v11 = (_OWORD *)(a1 + 192);
  char v12 = (_OWORD *)(a2 + 192);
  uint64_t v13 = *(void *)(a2 + 208);
  if (*(void *)(a1 + 208))
  {
    if (v13)
    {
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C66935D8(a1 + 192);
      long long v15 = *(_OWORD *)(a2 + 208);
      long long v14 = *(_OWORD *)(a2 + 224);
      *uint64_t v11 = *v12;
      *(_OWORD *)(a1 + 208) = v15;
      *(_OWORD *)(a1 + 224) = v14;
    }
  }
  else if (v13)
  {
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v12;
    long long v17 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v17;
    *uint64_t v11 = v16;
  }
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(unsigned char *)(a1 + 289) = *(unsigned char *)(a2 + 289);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v18 = a3[10];
    uint64_t v19 = a1 + v18;
    uint64_t v20 = a2 + v18;
    sub_1C65C117C(a1 + v18, &qword_1EBBF4628);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
      *(void *)(v19 + 24) = *(void *)(v20 + 24);
      *(void *)(v19 + 32) = *(void *)(v20 + 32);
      *(void *)(v19 + 40) = *(void *)(v20 + 40);
      *(void *)(v19 + 48) = *(void *)(v20 + 48);
      *(void *)(v19 + 56) = *(void *)(v20 + 56);
      *(void *)(v19 + 64) = *(void *)(v20 + 64);
      *(void *)(v19 + 72) = *(void *)(v20 + 72);
      *(void *)(v19 + 80) = *(void *)(v20 + 80);
      *(void *)(v19 + 88) = *(void *)(v20 + 88);
      *(void *)(v19 + 96) = *(void *)(v20 + 96);
      *(void *)(v19 + 104) = *(void *)(v20 + 104);
      *(void *)(v19 + 112) = *(void *)(v20 + 112);
      *(void *)(v19 + 120) = *(void *)(v20 + 120);
      *(void *)(v19 + 128) = *(void *)(v20 + 128);
      *(void *)(v19 + 136) = *(void *)(v20 + 136);
      *(void *)(v19 + 144) = *(void *)(v20 + 144);
      *(void *)(v19 + 152) = *(void *)(v20 + 152);
      *(void *)(v19 + 160) = *(void *)(v20 + 160);
      *(void *)(v19 + 168) = *(void *)(v20 + 168);
      *(void *)(v19 + 176) = *(void *)(v20 + 176);
      *(void *)(v19 + 184) = *(void *)(v20 + 184);
      *(void *)(v19 + 192) = *(void *)(v20 + 192);
      *(void *)(v19 + 200) = *(void *)(v20 + 200);
      *(void *)(v19 + 208) = *(void *)(v20 + 208);
      *(void *)(v19 + 216) = *(void *)(v20 + 216);
      uint64_t v23 = (int *)type metadata accessor for Contact();
      uint64_t v27 = v23[19];
      __dst = (void *)(v19 + v27);
      uint64_t v25 = (const void *)(v20 + v27);
      uint64_t v26 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
LABEL_23:
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
        memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_26:
        *(void *)(v19 + v23[20]) = *(void *)(v20 + v23[20]);
        *(unsigned char *)(v19 + v23[21]) = *(unsigned char *)(v20 + v23[21]);
        uint64_t v29 = v23[22];
        uint64_t v30 = (void *)(v19 + v29);
        uint64_t v31 = (void *)(v20 + v29);
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        *(unsigned char *)(v19 + v23[23]) = *(unsigned char *)(v20 + v23[23]);
        uint64_t v32 = v23[24];
        uint64_t v33 = (void *)(v19 + v32);
        uint64_t v34 = (void *)(v20 + v32);
        *uint64_t v33 = *v34;
        v33[1] = v34[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_27;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_28;
      }
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
      *(void *)(v19 + 24) = *(void *)(v20 + 24);
      *(void *)(v19 + 32) = *(void *)(v20 + 32);
      *(void *)(v19 + 40) = *(void *)(v20 + 40);
      *(void *)(v19 + 48) = *(void *)(v20 + 48);
      *(void *)(v19 + 56) = *(void *)(v20 + 56);
      *(void *)(v19 + 64) = *(void *)(v20 + 64);
      *(void *)(v19 + 72) = *(void *)(v20 + 72);
      *(void *)(v19 + 80) = *(void *)(v20 + 80);
      *(void *)(v19 + 88) = *(void *)(v20 + 88);
      *(void *)(v19 + 96) = *(void *)(v20 + 96);
      *(void *)(v19 + 104) = *(void *)(v20 + 104);
      *(void *)(v19 + 112) = *(void *)(v20 + 112);
      *(void *)(v19 + 120) = *(void *)(v20 + 120);
      *(void *)(v19 + 128) = *(void *)(v20 + 128);
      *(void *)(v19 + 136) = *(void *)(v20 + 136);
      *(void *)(v19 + 144) = *(void *)(v20 + 144);
      *(void *)(v19 + 152) = *(void *)(v20 + 152);
      *(void *)(v19 + 160) = *(void *)(v20 + 160);
      *(void *)(v19 + 168) = *(void *)(v20 + 168);
      *(void *)(v19 + 176) = *(void *)(v20 + 176);
      *(void *)(v19 + 184) = *(void *)(v20 + 184);
      *(void *)(v19 + 192) = *(void *)(v20 + 192);
      *(void *)(v19 + 200) = *(void *)(v20 + 200);
      *(void *)(v19 + 208) = *(void *)(v20 + 208);
      *(void *)(v19 + 216) = *(void *)(v20 + 216);
      uint64_t v23 = (int *)type metadata accessor for Contact();
      uint64_t v24 = v23[19];
      __dst = (void *)(v19 + v24);
      uint64_t v25 = (const void *)(v20 + v24);
      uint64_t v26 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26)) {
        goto LABEL_23;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v25, v26);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v26);
    goto LABEL_26;
  }
LABEL_28:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v35 = a3[14];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v36, 1, v38);
  int v40 = __swift_getEnumTagSinglePayload(v37, 1, v38);
  if (EnumTagSinglePayload)
  {
    if (!v40)
    {
      int v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 2)
      {
        *(void *)uint64_t v36 = *(void *)v37;
        swift_bridgeObjectRetain();
LABEL_56:
        swift_storeEnumTagMultiPayload();
        goto LABEL_57;
      }
      if (v41 == 1)
      {
        *(void *)uint64_t v36 = *(void *)v37;
        *(void *)(v36 + 8) = *(void *)(v37 + 8);
        *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
        *(void *)(v36 + 24) = *(void *)(v37 + 24);
        *(void *)(v36 + 32) = *(void *)(v37 + 32);
        *(void *)(v36 + 40) = *(void *)(v37 + 40);
        *(void *)(v36 + 48) = *(void *)(v37 + 48);
        *(void *)(v36 + 56) = *(void *)(v37 + 56);
        *(void *)(v36 + 64) = *(void *)(v37 + 64);
        *(void *)(v36 + 72) = *(void *)(v37 + 72);
        *(void *)(v36 + 80) = *(void *)(v37 + 80);
        *(void *)(v36 + 88) = *(void *)(v37 + 88);
        *(void *)(v36 + 96) = *(void *)(v37 + 96);
        *(void *)(v36 + 104) = *(void *)(v37 + 104);
        *(void *)(v36 + 112) = *(void *)(v37 + 112);
        *(void *)(v36 + 120) = *(void *)(v37 + 120);
        *(void *)(v36 + 128) = *(void *)(v37 + 128);
        *(void *)(v36 + 136) = *(void *)(v37 + 136);
        *(void *)(v36 + 144) = *(void *)(v37 + 144);
        *(void *)(v36 + 152) = *(void *)(v37 + 152);
        *(void *)(v36 + 160) = *(void *)(v37 + 160);
        *(void *)(v36 + 168) = *(void *)(v37 + 168);
        *(void *)(v36 + 176) = *(void *)(v37 + 176);
        *(void *)(v36 + 184) = *(void *)(v37 + 184);
        *(void *)(v36 + 192) = *(void *)(v37 + 192);
        *(void *)(v36 + 200) = *(void *)(v37 + 200);
        *(void *)(v36 + 208) = *(void *)(v37 + 208);
        *(void *)(v36 + 216) = *(void *)(v37 + 216);
        uint64_t v42 = (int *)type metadata accessor for Contact();
        uint64_t v52 = v42[19];
        uint64_t v100 = (void *)(v36 + v52);
        uint64_t v44 = (const void *)(v37 + v52);
        uint64_t v45 = sub_1C68E9698();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
        {
LABEL_47:
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
          memcpy(v100, v44, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_55:
          *(void *)(v36 + v42[20]) = *(void *)(v37 + v42[20]);
          *(unsigned char *)(v36 + v42[21]) = *(unsigned char *)(v37 + v42[21]);
          uint64_t v56 = v42[22];
          uint64_t v57 = (void *)(v36 + v56);
          uint64_t v58 = (void *)(v37 + v56);
          void *v57 = *v58;
          v57[1] = v58[1];
          *(unsigned char *)(v36 + v42[23]) = *(unsigned char *)(v37 + v42[23]);
          uint64_t v59 = v42[24];
          uint64_t v60 = (void *)(v36 + v59);
          uint64_t v61 = (void *)(v37 + v59);
          *uint64_t v60 = *v61;
          v60[1] = v61[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_56;
        }
      }
      else
      {
        if (v41)
        {
          memcpy((void *)v36, (const void *)v37, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_57:
          __swift_storeEnumTagSinglePayload(v36, 0, 1, v38);
          goto LABEL_61;
        }
        *(void *)uint64_t v36 = *(void *)v37;
        *(void *)(v36 + 8) = *(void *)(v37 + 8);
        *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
        *(void *)(v36 + 24) = *(void *)(v37 + 24);
        *(void *)(v36 + 32) = *(void *)(v37 + 32);
        *(void *)(v36 + 40) = *(void *)(v37 + 40);
        *(void *)(v36 + 48) = *(void *)(v37 + 48);
        *(void *)(v36 + 56) = *(void *)(v37 + 56);
        *(void *)(v36 + 64) = *(void *)(v37 + 64);
        *(void *)(v36 + 72) = *(void *)(v37 + 72);
        *(void *)(v36 + 80) = *(void *)(v37 + 80);
        *(void *)(v36 + 88) = *(void *)(v37 + 88);
        *(void *)(v36 + 96) = *(void *)(v37 + 96);
        *(void *)(v36 + 104) = *(void *)(v37 + 104);
        *(void *)(v36 + 112) = *(void *)(v37 + 112);
        *(void *)(v36 + 120) = *(void *)(v37 + 120);
        *(void *)(v36 + 128) = *(void *)(v37 + 128);
        *(void *)(v36 + 136) = *(void *)(v37 + 136);
        *(void *)(v36 + 144) = *(void *)(v37 + 144);
        *(void *)(v36 + 152) = *(void *)(v37 + 152);
        *(void *)(v36 + 160) = *(void *)(v37 + 160);
        *(void *)(v36 + 168) = *(void *)(v37 + 168);
        *(void *)(v36 + 176) = *(void *)(v37 + 176);
        *(void *)(v36 + 184) = *(void *)(v37 + 184);
        *(void *)(v36 + 192) = *(void *)(v37 + 192);
        *(void *)(v36 + 200) = *(void *)(v37 + 200);
        *(void *)(v36 + 208) = *(void *)(v37 + 208);
        *(void *)(v36 + 216) = *(void *)(v37 + 216);
        uint64_t v42 = (int *)type metadata accessor for Contact();
        uint64_t v43 = v42[19];
        uint64_t v100 = (void *)(v36 + v43);
        uint64_t v44 = (const void *)(v37 + v43);
        uint64_t v45 = sub_1C68E9698();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45)) {
          goto LABEL_47;
        }
      }
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v100, v44, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v45);
      goto LABEL_55;
    }
    goto LABEL_37;
  }
  if (v40)
  {
    sub_1C65C117C(v36, &qword_1EBBF4628);
LABEL_37:
    size_t v46 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638) - 8) + 64);
LABEL_38:
    memcpy((void *)v36, (const void *)v37, v46);
    goto LABEL_61;
  }
  if (a1 == a2) {
    goto LABEL_61;
  }
  sub_1C65C117C(v36, &qword_1EBBF4628);
  int v47 = swift_getEnumCaseMultiPayload();
  if (v47 != 2)
  {
    if (v47 == 1)
    {
      *(void *)uint64_t v36 = *(void *)v37;
      *(void *)(v36 + 8) = *(void *)(v37 + 8);
      *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      *(void *)(v36 + 32) = *(void *)(v37 + 32);
      *(void *)(v36 + 40) = *(void *)(v37 + 40);
      *(void *)(v36 + 48) = *(void *)(v37 + 48);
      *(void *)(v36 + 56) = *(void *)(v37 + 56);
      *(void *)(v36 + 64) = *(void *)(v37 + 64);
      *(void *)(v36 + 72) = *(void *)(v37 + 72);
      *(void *)(v36 + 80) = *(void *)(v37 + 80);
      *(void *)(v36 + 88) = *(void *)(v37 + 88);
      *(void *)(v36 + 96) = *(void *)(v37 + 96);
      *(void *)(v36 + 104) = *(void *)(v37 + 104);
      *(void *)(v36 + 112) = *(void *)(v37 + 112);
      *(void *)(v36 + 120) = *(void *)(v37 + 120);
      *(void *)(v36 + 128) = *(void *)(v37 + 128);
      *(void *)(v36 + 136) = *(void *)(v37 + 136);
      *(void *)(v36 + 144) = *(void *)(v37 + 144);
      *(void *)(v36 + 152) = *(void *)(v37 + 152);
      *(void *)(v36 + 160) = *(void *)(v37 + 160);
      *(void *)(v36 + 168) = *(void *)(v37 + 168);
      *(void *)(v36 + 176) = *(void *)(v37 + 176);
      *(void *)(v36 + 184) = *(void *)(v37 + 184);
      *(void *)(v36 + 192) = *(void *)(v37 + 192);
      *(void *)(v36 + 200) = *(void *)(v37 + 200);
      *(void *)(v36 + 208) = *(void *)(v37 + 208);
      *(void *)(v36 + 216) = *(void *)(v37 + 216);
      uint64_t v48 = (int *)type metadata accessor for Contact();
      uint64_t v54 = v48[19];
      uint64_t v101 = (void *)(v36 + v54);
      uint64_t v50 = (const void *)(v37 + v54);
      uint64_t v51 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
      {
LABEL_52:
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
        memcpy(v101, v50, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_59:
        *(void *)(v36 + v48[20]) = *(void *)(v37 + v48[20]);
        *(unsigned char *)(v36 + v48[21]) = *(unsigned char *)(v37 + v48[21]);
        uint64_t v62 = v48[22];
        uint64_t v63 = (void *)(v36 + v62);
        uint64_t v64 = (void *)(v37 + v62);
        *uint64_t v63 = *v64;
        v63[1] = v64[1];
        *(unsigned char *)(v36 + v48[23]) = *(unsigned char *)(v37 + v48[23]);
        uint64_t v65 = v48[24];
        uint64_t v66 = (void *)(v36 + v65);
        uint64_t v67 = (void *)(v37 + v65);
        *uint64_t v66 = *v67;
        v66[1] = v67[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      }
    }
    else
    {
      if (v47)
      {
        size_t v46 = *(void *)(*(void *)(v38 - 8) + 64);
        goto LABEL_38;
      }
      *(void *)uint64_t v36 = *(void *)v37;
      *(void *)(v36 + 8) = *(void *)(v37 + 8);
      *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      *(void *)(v36 + 32) = *(void *)(v37 + 32);
      *(void *)(v36 + 40) = *(void *)(v37 + 40);
      *(void *)(v36 + 48) = *(void *)(v37 + 48);
      *(void *)(v36 + 56) = *(void *)(v37 + 56);
      *(void *)(v36 + 64) = *(void *)(v37 + 64);
      *(void *)(v36 + 72) = *(void *)(v37 + 72);
      *(void *)(v36 + 80) = *(void *)(v37 + 80);
      *(void *)(v36 + 88) = *(void *)(v37 + 88);
      *(void *)(v36 + 96) = *(void *)(v37 + 96);
      *(void *)(v36 + 104) = *(void *)(v37 + 104);
      *(void *)(v36 + 112) = *(void *)(v37 + 112);
      *(void *)(v36 + 120) = *(void *)(v37 + 120);
      *(void *)(v36 + 128) = *(void *)(v37 + 128);
      *(void *)(v36 + 136) = *(void *)(v37 + 136);
      *(void *)(v36 + 144) = *(void *)(v37 + 144);
      *(void *)(v36 + 152) = *(void *)(v37 + 152);
      *(void *)(v36 + 160) = *(void *)(v37 + 160);
      *(void *)(v36 + 168) = *(void *)(v37 + 168);
      *(void *)(v36 + 176) = *(void *)(v37 + 176);
      *(void *)(v36 + 184) = *(void *)(v37 + 184);
      *(void *)(v36 + 192) = *(void *)(v37 + 192);
      *(void *)(v36 + 200) = *(void *)(v37 + 200);
      *(void *)(v36 + 208) = *(void *)(v37 + 208);
      *(void *)(v36 + 216) = *(void *)(v37 + 216);
      uint64_t v48 = (int *)type metadata accessor for Contact();
      uint64_t v49 = v48[19];
      uint64_t v101 = (void *)(v36 + v49);
      uint64_t v50 = (const void *)(v37 + v49);
      uint64_t v51 = sub_1C68E9698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51)) {
        goto LABEL_52;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 16))(v101, v50, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v51);
    goto LABEL_59;
  }
  *(void *)uint64_t v36 = *(void *)v37;
  swift_bridgeObjectRetain();
LABEL_60:
  swift_storeEnumTagMultiPayload();
LABEL_61:
  uint64_t v68 = a3[15];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = (long long *)(a2 + v68);
  uint64_t v71 = *(void *)(a1 + v68 + 8);
  uint64_t v72 = *(void *)(a2 + v68 + 8);
  if (v71 == 1)
  {
    if (v72 == 1)
    {
      long long v73 = *v70;
      long long v74 = v70[2];
      *(_OWORD *)(v69 + 16) = v70[1];
      *(_OWORD *)(v69 + 32) = v74;
      *(_OWORD *)uint64_t v69 = v73;
    }
    else
    {
      *(void *)uint64_t v69 = *(void *)v70;
      *(void *)(v69 + 8) = *((void *)v70 + 1);
      *(void *)(v69 + 16) = *((void *)v70 + 2);
      *(void *)(v69 + 24) = *((void *)v70 + 3);
      *(void *)(v69 + 32) = *((void *)v70 + 4);
      *(void *)(v69 + 40) = *((void *)v70 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v72 == 1)
  {
    sub_1C66C9A58(v69);
    long long v76 = v70[1];
    long long v75 = v70[2];
    *(_OWORD *)uint64_t v69 = *v70;
    *(_OWORD *)(v69 + 16) = v76;
    *(_OWORD *)(v69 + 32) = v75;
  }
  else
  {
    *(void *)uint64_t v69 = *(void *)v70;
    *(void *)(v69 + 8) = *((void *)v70 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v69 + 16) = *((void *)v70 + 2);
    *(void *)(v69 + 24) = *((void *)v70 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v69 + 32) = *((void *)v70 + 4);
    *(void *)(v69 + 40) = *((void *)v70 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v77 = a3[16];
  uint64_t v78 = (unsigned char *)(a1 + v77);
  uint64_t v79 = (unsigned char *)(a2 + v77);
  *uint64_t v78 = *v79;
  v78[1] = v79[1];
  v78[2] = v79[2];
  v78[3] = v79[3];
  v78[4] = v79[4];
  uint64_t v80 = a3[17];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (void *)(a2 + v80);
  *uint64_t v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = a3[18];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (const void *)(a2 + v83);
  uint64_t v86 = sub_1C68E9BF8();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = *(void (**)(void *, const void *, uint64_t))(v87 + 24);
  v88(v84, v85, v86);
  uint64_t v89 = a3[19];
  uint64_t v90 = (void *)(a1 + v89);
  uint64_t v91 = (const void *)(a2 + v89);
  int v92 = __swift_getEnumTagSinglePayload(a1 + v89, 1, v86);
  int v93 = __swift_getEnumTagSinglePayload((uint64_t)v91, 1, v86);
  if (!v92)
  {
    if (!v93)
    {
      v88(v90, v91, v86);
      goto LABEL_74;
    }
    (*(void (**)(void *, uint64_t))(v87 + 8))(v90, v86);
    goto LABEL_73;
  }
  if (v93)
  {
LABEL_73:
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, const void *, uint64_t))(v87 + 16))(v90, v91, v86);
  __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v86);
LABEL_74:
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v95 = a3[21];
  uint64_t v96 = (void *)(a1 + v95);
  uint64_t v97 = (void *)(a2 + v95);
  *uint64_t v96 = *v97;
  v96[1] = v97[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C66D3DA0(uint64_t a1, uint64_t a2, int *a3)
{
  memcpy((void *)a1, (const void *)a2, 0x108uLL);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
    *(_OWORD *)(v7 + 152) = *(_OWORD *)(v8 + 152);
    *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 200) = *(_OWORD *)(v8 + 200);
    *(void *)(v7 + 216) = *(void *)(v8 + 216);
    long long v17 = (int *)type metadata accessor for Contact();
    uint64_t v18 = v17[19];
    uint64_t v19 = (void *)(v7 + v18);
    uint64_t v20 = (const void *)(v8 + v18);
    uint64_t v21 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
    }
    *(void *)(v7 + v17[20]) = *(void *)(v8 + v17[20]);
    *(unsigned char *)(v7 + v17[21]) = *(unsigned char *)(v8 + v17[21]);
    *(_OWORD *)(v7 + v17[22]) = *(_OWORD *)(v8 + v17[22]);
    *(unsigned char *)(v7 + v17[23]) = *(unsigned char *)(v8 + v17[23]);
    *(_OWORD *)(v7 + v17[24]) = *(_OWORD *)(v8 + v17[24]);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v9 - 8) + 64));
      goto LABEL_13;
    }
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
    *(_OWORD *)(v7 + 152) = *(_OWORD *)(v8 + 152);
    *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 200) = *(_OWORD *)(v8 + 200);
    *(void *)(v7 + 216) = *(void *)(v8 + 216);
    uint64_t v11 = (int *)type metadata accessor for Contact();
    uint64_t v12 = v11[19];
    uint64_t v13 = (void *)(v7 + v12);
    long long v14 = (const void *)(v8 + v12);
    uint64_t v15 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(void *)(v7 + v11[20]) = *(void *)(v8 + v11[20]);
    *(unsigned char *)(v7 + v11[21]) = *(unsigned char *)(v8 + v11[21]);
    *(_OWORD *)(v7 + v11[22]) = *(_OWORD *)(v8 + v11[22]);
    *(unsigned char *)(v7 + v11[23]) = *(unsigned char *)(v8 + v11[23]);
    *(_OWORD *)(v7 + v11[24]) = *(_OWORD *)(v8 + v11[24]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_13:
  uint64_t v23 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v25 = (_OWORD *)(a1 + v24);
  uint64_t v26 = (_OWORD *)(a2 + v24);
  if (__swift_getEnumTagSinglePayload(a2 + v24, 1, v9))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_28;
  }
  int v28 = swift_getEnumCaseMultiPayload();
  if (v28 == 1)
  {
    *uint64_t v25 = *v26;
    *((unsigned char *)v25 + 16) = *((unsigned char *)v26 + 16);
    *(_OWORD *)((char *)v25 + 24) = *(_OWORD *)((char *)v26 + 24);
    *(_OWORD *)((char *)v25 + 40) = *(_OWORD *)((char *)v26 + 40);
    *(_OWORD *)((char *)v25 + 56) = *(_OWORD *)((char *)v26 + 56);
    *(_OWORD *)((char *)v25 + 72) = *(_OWORD *)((char *)v26 + 72);
    *(_OWORD *)((char *)v25 + 88) = *(_OWORD *)((char *)v26 + 88);
    *(_OWORD *)((char *)v25 + 104) = *(_OWORD *)((char *)v26 + 104);
    *(_OWORD *)((char *)v25 + 120) = *(_OWORD *)((char *)v26 + 120);
    *(_OWORD *)((char *)v25 + 136) = *(_OWORD *)((char *)v26 + 136);
    *(_OWORD *)((char *)v25 + 152) = *(_OWORD *)((char *)v26 + 152);
    *(_OWORD *)((char *)v25 + 168) = *(_OWORD *)((char *)v26 + 168);
    *(_OWORD *)((char *)v25 + 184) = *(_OWORD *)((char *)v26 + 184);
    *(_OWORD *)((char *)v25 + 200) = *(_OWORD *)((char *)v26 + 200);
    *((void *)v25 + 27) = *((void *)v26 + 27);
    uint64_t v35 = (int *)type metadata accessor for Contact();
    uint64_t v36 = v35[19];
    uint64_t v37 = (char *)v25 + v36;
    uint64_t v38 = (char *)v26 + v36;
    uint64_t v39 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
    }
    *(void *)((char *)v25 + v35[20]) = *(void *)((char *)v26 + v35[20]);
    *((unsigned char *)v25 + v35[21]) = *((unsigned char *)v26 + v35[21]);
    *(_OWORD *)((char *)v25 + v35[22]) = *(_OWORD *)((char *)v26 + v35[22]);
    *((unsigned char *)v25 + v35[23]) = *((unsigned char *)v26 + v35[23]);
    *(_OWORD *)((char *)v25 + v35[24]) = *(_OWORD *)((char *)v26 + v35[24]);
    goto LABEL_26;
  }
  if (!v28)
  {
    *uint64_t v25 = *v26;
    *((unsigned char *)v25 + 16) = *((unsigned char *)v26 + 16);
    *(_OWORD *)((char *)v25 + 24) = *(_OWORD *)((char *)v26 + 24);
    *(_OWORD *)((char *)v25 + 40) = *(_OWORD *)((char *)v26 + 40);
    *(_OWORD *)((char *)v25 + 56) = *(_OWORD *)((char *)v26 + 56);
    *(_OWORD *)((char *)v25 + 72) = *(_OWORD *)((char *)v26 + 72);
    *(_OWORD *)((char *)v25 + 88) = *(_OWORD *)((char *)v26 + 88);
    *(_OWORD *)((char *)v25 + 104) = *(_OWORD *)((char *)v26 + 104);
    *(_OWORD *)((char *)v25 + 120) = *(_OWORD *)((char *)v26 + 120);
    *(_OWORD *)((char *)v25 + 136) = *(_OWORD *)((char *)v26 + 136);
    *(_OWORD *)((char *)v25 + 152) = *(_OWORD *)((char *)v26 + 152);
    *(_OWORD *)((char *)v25 + 168) = *(_OWORD *)((char *)v26 + 168);
    *(_OWORD *)((char *)v25 + 184) = *(_OWORD *)((char *)v26 + 184);
    *(_OWORD *)((char *)v25 + 200) = *(_OWORD *)((char *)v26 + 200);
    *((void *)v25 + 27) = *((void *)v26 + 27);
    uint64_t v29 = (int *)type metadata accessor for Contact();
    uint64_t v30 = v29[19];
    uint64_t v31 = (char *)v25 + v30;
    uint64_t v32 = (char *)v26 + v30;
    uint64_t v33 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    *(void *)((char *)v25 + v29[20]) = *(void *)((char *)v26 + v29[20]);
    *((unsigned char *)v25 + v29[21]) = *((unsigned char *)v26 + v29[21]);
    *(_OWORD *)((char *)v25 + v29[22]) = *(_OWORD *)((char *)v26 + v29[22]);
    *((unsigned char *)v25 + v29[23]) = *((unsigned char *)v26 + v29[23]);
    *(_OWORD *)((char *)v25 + v29[24]) = *(_OWORD *)((char *)v26 + v29[24]);
LABEL_26:
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  memcpy(v25, v26, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_27:
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v9);
LABEL_28:
  uint64_t v41 = a3[15];
  uint64_t v42 = a3[16];
  uint64_t v43 = (_OWORD *)(a1 + v41);
  uint64_t v44 = (_OWORD *)(a2 + v41);
  long long v45 = v44[1];
  _OWORD *v43 = *v44;
  v43[1] = v45;
  v43[2] = v44[2];
  uint64_t v46 = a1 + v42;
  uint64_t v47 = a2 + v42;
  *(unsigned char *)(v46 + 4) = *(unsigned char *)(v47 + 4);
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  uint64_t v48 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = sub_1C68E9BF8();
  uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32);
  v52(v49, v50, v51);
  uint64_t v53 = a3[19];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  if (__swift_getEnumTagSinglePayload(a2 + v53, 1, v51))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v52((uint64_t)v54, (uint64_t)v55, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v51);
  }
  uint64_t v57 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v57) = *(_OWORD *)(a2 + v57);
  return a1;
}

uint64_t sub_1C66D4618(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 184))
  {
    if (*(void *)(a2 + 184))
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_release();
      uint64_t v16 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C66935A8(a1 + 168);
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
LABEL_6:
  if (*(void *)(a1 + 208))
  {
    uint64_t v17 = *(void *)(a2 + 208);
    if (v17)
    {
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v17;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C66935D8(a1 + 192);
  }
  long long v19 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v19;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_11:
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_release();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(unsigned char *)(a1 + 289) = *(unsigned char *)(a2 + 289);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRelease();
  if (a1 == a2) {
    goto LABEL_24;
  }
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  sub_1C65C117C(a1 + v21, &qword_1EBBF4628);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
    *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
    *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
    *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
    *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
    *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
    *(_OWORD *)(v22 + 120) = *(_OWORD *)(v23 + 120);
    *(_OWORD *)(v22 + 136) = *(_OWORD *)(v23 + 136);
    *(_OWORD *)(v22 + 152) = *(_OWORD *)(v23 + 152);
    *(_OWORD *)(v22 + 168) = *(_OWORD *)(v23 + 168);
    *(_OWORD *)(v22 + 184) = *(_OWORD *)(v23 + 184);
    *(_OWORD *)(v22 + 200) = *(_OWORD *)(v23 + 200);
    *(void *)(v22 + 216) = *(void *)(v23 + 216);
    uint64_t v32 = (int *)type metadata accessor for Contact();
    uint64_t v33 = v32[19];
    uint64_t v34 = (void *)(v22 + v33);
    uint64_t v35 = (const void *)(v23 + v33);
    uint64_t v36 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
    }
    *(void *)(v22 + v32[20]) = *(void *)(v23 + v32[20]);
    *(unsigned char *)(v22 + v32[21]) = *(unsigned char *)(v23 + v32[21]);
    *(_OWORD *)(v22 + v32[22]) = *(_OWORD *)(v23 + v32[22]);
    *(unsigned char *)(v22 + v32[23]) = *(unsigned char *)(v23 + v32[23]);
    *(_OWORD *)(v22 + v32[24]) = *(_OWORD *)(v23 + v32[24]);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)v22, (const void *)v23, *(void *)(*(void *)(v24 - 8) + 64));
      goto LABEL_24;
    }
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
    *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
    *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
    *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
    *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
    *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
    *(_OWORD *)(v22 + 120) = *(_OWORD *)(v23 + 120);
    *(_OWORD *)(v22 + 136) = *(_OWORD *)(v23 + 136);
    *(_OWORD *)(v22 + 152) = *(_OWORD *)(v23 + 152);
    *(_OWORD *)(v22 + 168) = *(_OWORD *)(v23 + 168);
    *(_OWORD *)(v22 + 184) = *(_OWORD *)(v23 + 184);
    *(_OWORD *)(v22 + 200) = *(_OWORD *)(v23 + 200);
    *(void *)(v22 + 216) = *(void *)(v23 + 216);
    uint64_t v26 = (int *)type metadata accessor for Contact();
    uint64_t v27 = v26[19];
    int v28 = (void *)(v22 + v27);
    uint64_t v29 = (const void *)(v23 + v27);
    uint64_t v30 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    *(void *)(v22 + v26[20]) = *(void *)(v23 + v26[20]);
    *(unsigned char *)(v22 + v26[21]) = *(unsigned char *)(v23 + v26[21]);
    *(_OWORD *)(v22 + v26[22]) = *(_OWORD *)(v23 + v26[22]);
    *(unsigned char *)(v22 + v26[23]) = *(unsigned char *)(v23 + v26[23]);
    *(_OWORD *)(v22 + v26[24]) = *(_OWORD *)(v23 + v26[24]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_24:
  uint64_t v38 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v40, 1, v42);
  int v44 = __swift_getEnumTagSinglePayload(v41, 1, v42);
  if (EnumTagSinglePayload)
  {
    if (!v44)
    {
      int v45 = swift_getEnumCaseMultiPayload();
      if (v45 == 1)
      {
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
        *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
        *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
        *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
        *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
        *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
        *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
        *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
        *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
        *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
        *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
        *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
        *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
        *(void *)(v40 + 216) = *(void *)(v41 + 216);
        uint64_t v60 = (int *)type metadata accessor for Contact();
        uint64_t v61 = v60[19];
        uint64_t v62 = (void *)(v40 + v61);
        uint64_t v63 = (const void *)(v41 + v61);
        uint64_t v64 = sub_1C68E9698();
        if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
        }
        *(void *)(v40 + v60[20]) = *(void *)(v41 + v60[20]);
        *(unsigned char *)(v40 + v60[21]) = *(unsigned char *)(v41 + v60[21]);
        *(_OWORD *)(v40 + v60[22]) = *(_OWORD *)(v41 + v60[22]);
        *(unsigned char *)(v40 + v60[23]) = *(unsigned char *)(v41 + v60[23]);
        *(_OWORD *)(v40 + v60[24]) = *(_OWORD *)(v41 + v60[24]);
      }
      else
      {
        if (v45)
        {
          memcpy((void *)v40, (const void *)v41, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_50:
          __swift_storeEnumTagSinglePayload(v40, 0, 1, v42);
          goto LABEL_51;
        }
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
        *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
        *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
        *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
        *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
        *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
        *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
        *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
        *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
        *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
        *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
        *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
        *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
        *(void *)(v40 + 216) = *(void *)(v41 + 216);
        uint64_t v46 = (int *)type metadata accessor for Contact();
        uint64_t v47 = v46[19];
        uint64_t v48 = (void *)(v40 + v47);
        uint64_t v49 = (const void *)(v41 + v47);
        uint64_t v50 = sub_1C68E9698();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
        }
        *(void *)(v40 + v46[20]) = *(void *)(v41 + v46[20]);
        *(unsigned char *)(v40 + v46[21]) = *(unsigned char *)(v41 + v46[21]);
        *(_OWORD *)(v40 + v46[22]) = *(_OWORD *)(v41 + v46[22]);
        *(unsigned char *)(v40 + v46[23]) = *(unsigned char *)(v41 + v46[23]);
        *(_OWORD *)(v40 + v46[24]) = *(_OWORD *)(v41 + v46[24]);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
    goto LABEL_32;
  }
  if (v44)
  {
    sub_1C65C117C(v40, &qword_1EBBF4628);
LABEL_32:
    size_t v52 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638) - 8) + 64);
LABEL_33:
    memcpy((void *)v40, (const void *)v41, v52);
    goto LABEL_51;
  }
  if (a1 == a2) {
    goto LABEL_51;
  }
  sub_1C65C117C(v40, &qword_1EBBF4628);
  int v53 = swift_getEnumCaseMultiPayload();
  if (v53 == 1)
  {
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
    *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
    *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
    *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
    *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
    *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
    *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
    *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
    *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
    *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
    *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
    *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
    *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
    *(void *)(v40 + 216) = *(void *)(v41 + 216);
    uint64_t v66 = (int *)type metadata accessor for Contact();
    uint64_t v67 = v66[19];
    uint64_t v68 = (void *)(v40 + v67);
    uint64_t v69 = (const void *)(v41 + v67);
    uint64_t v70 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
    {
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
    }
    *(void *)(v40 + v66[20]) = *(void *)(v41 + v66[20]);
    *(unsigned char *)(v40 + v66[21]) = *(unsigned char *)(v41 + v66[21]);
    *(_OWORD *)(v40 + v66[22]) = *(_OWORD *)(v41 + v66[22]);
    *(unsigned char *)(v40 + v66[23]) = *(unsigned char *)(v41 + v66[23]);
    *(_OWORD *)(v40 + v66[24]) = *(_OWORD *)(v41 + v66[24]);
  }
  else
  {
    if (v53)
    {
      size_t v52 = *(void *)(*(void *)(v42 - 8) + 64);
      goto LABEL_33;
    }
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
    *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
    *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
    *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
    *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
    *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
    *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
    *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
    *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
    *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
    *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
    *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
    *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
    *(void *)(v40 + 216) = *(void *)(v41 + 216);
    uint64_t v54 = (int *)type metadata accessor for Contact();
    uint64_t v55 = v54[19];
    uint64_t v56 = (void *)(v40 + v55);
    uint64_t v57 = (const void *)(v41 + v55);
    uint64_t v58 = sub_1C68E9698();
    if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
    }
    *(void *)(v40 + v54[20]) = *(void *)(v41 + v54[20]);
    *(unsigned char *)(v40 + v54[21]) = *(unsigned char *)(v41 + v54[21]);
    *(_OWORD *)(v40 + v54[22]) = *(_OWORD *)(v41 + v54[22]);
    *(unsigned char *)(v40 + v54[23]) = *(unsigned char *)(v41 + v54[23]);
    *(_OWORD *)(v40 + v54[24]) = *(_OWORD *)(v41 + v54[24]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_51:
  uint64_t v72 = a3[15];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  if (*(void *)(a1 + v72 + 8) == 1)
  {
LABEL_54:
    long long v76 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
    *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
    goto LABEL_56;
  }
  uint64_t v75 = *(void *)(v74 + 8);
  if (v75 == 1)
  {
    sub_1C66C9A58(v73);
    goto LABEL_54;
  }
  *(void *)uint64_t v73 = *(void *)v74;
  *(void *)(v73 + 8) = v75;
  swift_bridgeObjectRelease();
  uint64_t v77 = *(void *)(v74 + 24);
  *(void *)(v73 + 16) = *(void *)(v74 + 16);
  *(void *)(v73 + 24) = v77;
  swift_bridgeObjectRelease();
  uint64_t v78 = *(void *)(v74 + 40);
  *(void *)(v73 + 32) = *(void *)(v74 + 32);
  *(void *)(v73 + 40) = v78;
  swift_bridgeObjectRelease();
LABEL_56:
  uint64_t v79 = a3[16];
  uint64_t v80 = a3[17];
  uint64_t v81 = (unsigned char *)(a1 + v79);
  uint64_t v82 = (unsigned char *)(a2 + v79);
  *uint64_t v81 = *v82;
  v81[1] = v82[1];
  v81[2] = v82[2];
  v81[3] = v82[3];
  v81[4] = v82[4];
  uint64_t v83 = (void *)(a1 + v80);
  uint64_t v84 = (uint64_t *)(a2 + v80);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  *uint64_t v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = a3[18];
  uint64_t v88 = (void *)(a1 + v87);
  uint64_t v89 = (const void *)(a2 + v87);
  uint64_t v90 = sub_1C68E9BF8();
  uint64_t v91 = *(void *)(v90 - 8);
  int v92 = *(void (**)(void *, const void *, uint64_t))(v91 + 40);
  v92(v88, v89, v90);
  uint64_t v93 = a3[19];
  uint64_t v94 = (void *)(a1 + v93);
  uint64_t v95 = (const void *)(a2 + v93);
  int v96 = __swift_getEnumTagSinglePayload(a1 + v93, 1, v90);
  int v97 = __swift_getEnumTagSinglePayload((uint64_t)v95, 1, v90);
  if (!v96)
  {
    if (!v97)
    {
      v92(v94, v95, v90);
      goto LABEL_62;
    }
    (*(void (**)(void *, uint64_t))(v91 + 8))(v94, v90);
    goto LABEL_61;
  }
  if (v97)
  {
LABEL_61:
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_62;
  }
  (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v94, v95, v90);
  __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v90);
LABEL_62:
  uint64_t v99 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v100 = (void *)(a1 + v99);
  uint64_t v101 = (uint64_t *)(a2 + v99);
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  *uint64_t v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C66D54AC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_3_1(*(void *)(a1 + 8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = a3[10];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638);
    OUTLINED_FUNCTION_0_6();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v9 = v11;
      uint64_t v10 = a3[14];
    }
    else
    {
      sub_1C68E9BF8();
      OUTLINED_FUNCTION_0_6();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v9 = v13;
        uint64_t v10 = a3[18];
      }
      else
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
        uint64_t v10 = a3[19];
      }
    }
  }

  return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
}

void sub_1C66D55A0()
{
  OUTLINED_FUNCTION_65();
  if (v4)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
    OUTLINED_FUNCTION_0_6();
    if (*(_DWORD *)(v8 + 84) == v6)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v5[10];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4638);
      OUTLINED_FUNCTION_0_6();
      if (*(_DWORD *)(v12 + 84) == v6)
      {
        uint64_t v9 = v11;
        uint64_t v10 = v5[14];
      }
      else
      {
        sub_1C68E9BF8();
        OUTLINED_FUNCTION_0_6();
        if (*(_DWORD *)(v14 + 84) == v6)
        {
          uint64_t v9 = v13;
          uint64_t v10 = v5[18];
        }
        else
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
          uint64_t v10 = v5[19];
        }
      }
    }
    __swift_storeEnumTagSinglePayload(v1 + v10, v0, v0, v9);
  }
}

void sub_1C66D5690()
{
  sub_1C66D58F8(319, &qword_1EBBF4630, (uint64_t (*)(uint64_t))type metadata accessor for Contact, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Recommendation);
  if (v0 <= 0x3F)
  {
    sub_1C66D589C();
    if (v1 <= 0x3F)
    {
      sub_1C68E9BF8();
      if (v2 <= 0x3F)
      {
        sub_1C66D58F8(319, (unint64_t *)&qword_1EA407940, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1C66D589C()
{
  if (!qword_1EBBF4640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBF4628);
    unint64_t v0 = sub_1C68ED098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBBF4640);
    }
  }
}

void sub_1C66D58F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C66D595C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C66D59C4()
{
  unint64_t result = qword_1EA407978;
  if (!qword_1EA407978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407978);
  }
  return result;
}

unint64_t sub_1C66D5A10()
{
  unint64_t result = qword_1EA407980;
  if (!qword_1EA407980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407980);
  }
  return result;
}

unint64_t sub_1C66D5A5C()
{
  unint64_t result = qword_1EA4079A8;
  if (!qword_1EA4079A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4079A8);
  }
  return result;
}

unint64_t sub_1C66D5AA8()
{
  unint64_t result = qword_1EA4079B0;
  if (!qword_1EA4079B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4079B0);
  }
  return result;
}

uint64_t sub_1C66D5AF4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_8_0();
  v3();
  return a1;
}

unint64_t sub_1C66D5B48()
{
  unint64_t result = qword_1EA4079D0;
  if (!qword_1EA4079D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4079D0);
  }
  return result;
}

uint64_t sub_1C66D5B94(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_0();
  v5(v4);
  return a2;
}

void *sub_1C66D5BE8(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = a3[5];
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    long long v10 = *(_OWORD *)((char *)a2 + v7 + 16);
    *(_OWORD *)unint64_t v8 = *(_OWORD *)((char *)a2 + v7);
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *(_OWORD *)((char *)a2 + v7 + 32);
    *((void *)v8 + 6) = *(void *)((char *)a2 + v7 + 48);
    *((_WORD *)v8 + 28) = *(_WORD *)((char *)a2 + v7 + 56);
    *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
    *((_DWORD *)v8 + 20) = *(_DWORD *)((char *)a2 + v7 + 80);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)((char *)a2 + v7 + 88);
    *((void *)v8 + 13) = *(void *)((char *)a2 + v7 + 104);
    uint64_t v11 = (int *)type metadata accessor for PrivatizedSignalSet(0);
    uint64_t v12 = v11[24];
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_1C68EBDF8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v18 = v11[25];
    long long v19 = &v8[v18];
    uint64_t v20 = &v9[v18];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v18], 1, v15))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v19, v20, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
    }
    uint64_t v22 = v11[26];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v22], 1, v15))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v23, v24, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v15);
    }
    v8[v11[27]] = v9[v11[27]];
    v8[v11[28]] = v9[v11[28]];
    v8[v11[29]] = v9[v11[29]];
    v8[v11[30]] = v9[v11[30]];
    v8[v11[31]] = v9[v11[31]];
    v8[v11[32]] = v9[v11[32]];
    v8[v11[33]] = v9[v11[33]];
    v8[v11[34]] = v9[v11[34]];
    v8[v11[35]] = v9[v11[35]];
    uint64_t v26 = v11[36];
    uint64_t v27 = &v8[v26];
    int v28 = &v9[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    v8[v11[37]] = v9[v11[37]];
    v8[v11[38]] = v9[v11[38]];
    uint64_t v30 = v11[39];
    uint64_t v31 = &v8[v30];
    uint64_t v32 = &v9[v30];
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    *((_DWORD *)v31 + 4) = *((_DWORD *)v32 + 4);
    uint64_t v33 = *((void *)v32 + 4);
    *((void *)v31 + 3) = *((void *)v32 + 3);
    *((void *)v31 + 4) = v33;
    uint64_t v34 = *((void *)v32 + 6);
    *((void *)v31 + 5) = *((void *)v32 + 5);
    *((void *)v31 + 6) = v34;
    *(void *)&v8[v11[40]] = *(void *)&v9[v11[40]];
    v8[v11[41]] = v9[v11[41]];
    v8[v11[42]] = v9[v11[42]];
    v8[v11[43]] = v9[v11[43]];
    *(void *)&v8[v11[44]] = *(void *)&v9[v11[44]];
    v8[v11[45]] = v9[v11[45]];
    v8[v11[46]] = v9[v11[46]];
    v8[v11[47]] = v9[v11[47]];
    *(void *)&v8[v11[48]] = *(void *)&v9[v11[48]];
    *(void *)&v8[v11[49]] = *(void *)&v9[v11[49]];
    uint64_t v35 = a3[6];
    uint64_t v36 = a3[7];
    uint64_t v37 = (char *)v4 + v35;
    uint64_t v38 = (char *)a2 + v35;
    *uint64_t v37 = *v38;
    uint64_t v39 = *((void *)v38 + 2);
    *((void *)v37 + 1) = *((void *)v38 + 1);
    *((void *)v37 + 2) = v39;
    *(void *)((char *)v4 + v36) = *(void *)((char *)a2 + v36);
    uint64_t v40 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *((unsigned char *)v4 + v40) = *((unsigned char *)a2 + v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C66D608C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  int v5 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  uint64_t v6 = v4 + v5[24];
  uint64_t v7 = sub_1C68EBDF8();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = v4 + v5[25];
  if (!__swift_getEnumTagSinglePayload(v8, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v8, v7);
  }
  uint64_t v9 = v4 + v5[26];
  if (!__swift_getEnumTagSinglePayload(v9, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v9, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1C66D623C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
  *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
  *((_WORD *)v7 + 28) = *(_WORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 4) = *(_OWORD *)((char *)a2 + v6 + 64);
  *((_DWORD *)v7 + 20) = *(_DWORD *)((char *)a2 + v6 + 80);
  *(_OWORD *)(v7 + 88) = *(_OWORD *)((char *)a2 + v6 + 88);
  *((void *)v7 + 13) = *(void *)((char *)a2 + v6 + 104);
  long long v10 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  uint64_t v11 = v10[24];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C68EBDF8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[25];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v16], 1, v14))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v17, v18, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  }
  uint64_t v20 = v10[26];
  uint64_t v21 = &v7[v20];
  uint64_t v22 = &v8[v20];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v20], 1, v14))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v21, v22, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v14);
  }
  v7[v10[27]] = v8[v10[27]];
  v7[v10[28]] = v8[v10[28]];
  v7[v10[29]] = v8[v10[29]];
  v7[v10[30]] = v8[v10[30]];
  v7[v10[31]] = v8[v10[31]];
  v7[v10[32]] = v8[v10[32]];
  v7[v10[33]] = v8[v10[33]];
  v7[v10[34]] = v8[v10[34]];
  v7[v10[35]] = v8[v10[35]];
  uint64_t v24 = v10[36];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  v7[v10[37]] = v8[v10[37]];
  v7[v10[38]] = v8[v10[38]];
  uint64_t v28 = v10[39];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  *((_DWORD *)v29 + 4) = *((_DWORD *)v30 + 4);
  uint64_t v31 = *((void *)v30 + 4);
  *((void *)v29 + 3) = *((void *)v30 + 3);
  *((void *)v29 + 4) = v31;
  uint64_t v32 = *((void *)v30 + 6);
  *((void *)v29 + 5) = *((void *)v30 + 5);
  *((void *)v29 + 6) = v32;
  *(void *)&v7[v10[40]] = *(void *)&v8[v10[40]];
  v7[v10[41]] = v8[v10[41]];
  v7[v10[42]] = v8[v10[42]];
  v7[v10[43]] = v8[v10[43]];
  *(void *)&v7[v10[44]] = *(void *)&v8[v10[44]];
  v7[v10[45]] = v8[v10[45]];
  v7[v10[46]] = v8[v10[46]];
  v7[v10[47]] = v8[v10[47]];
  *(void *)&v7[v10[48]] = *(void *)&v8[v10[48]];
  *(void *)&v7[v10[49]] = *(void *)&v8[v10[49]];
  uint64_t v33 = a3[6];
  uint64_t v34 = a3[7];
  uint64_t v35 = (char *)a1 + v33;
  uint64_t v36 = (char *)a2 + v33;
  *uint64_t v35 = *v36;
  uint64_t v37 = *((void *)v36 + 2);
  *((void *)v35 + 1) = *((void *)v36 + 1);
  *((void *)v35 + 2) = v37;
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);
  uint64_t v38 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v38) = *((unsigned char *)a2 + v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C66D6690(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  char *v7 = *((unsigned char *)a2 + v6);
  *((void *)v7 + 1) = *(void *)((char *)a2 + v6 + 8);
  *((void *)v7 + 2) = *(void *)((char *)a2 + v6 + 16);
  *((void *)v7 + 3) = *(void *)((char *)a2 + v6 + 24);
  *((void *)v7 + 4) = *(void *)((char *)a2 + v6 + 32);
  *((void *)v7 + 5) = *(void *)((char *)a2 + v6 + 40);
  v7[48] = *((unsigned char *)a2 + v6 + 48);
  v7[49] = *((unsigned char *)a2 + v6 + 49);
  v7[50] = *((unsigned char *)a2 + v6 + 50);
  v7[51] = *((unsigned char *)a2 + v6 + 51);
  v7[52] = *((unsigned char *)a2 + v6 + 52);
  v7[53] = *((unsigned char *)a2 + v6 + 53);
  v7[54] = *((unsigned char *)a2 + v6 + 54);
  v7[55] = *((unsigned char *)a2 + v6 + 55);
  v7[56] = *((unsigned char *)a2 + v6 + 56);
  v7[57] = *((unsigned char *)a2 + v6 + 57);
  *((void *)v7 + 8) = *(void *)((char *)a2 + v6 + 64);
  *((void *)v7 + 9) = *(void *)((char *)a2 + v6 + 72);
  v7[80] = *((unsigned char *)a2 + v6 + 80);
  v7[81] = *((unsigned char *)a2 + v6 + 81);
  v7[82] = *((unsigned char *)a2 + v6 + 82);
  v7[83] = *((unsigned char *)a2 + v6 + 83);
  *((void *)v7 + 11) = *(void *)((char *)a2 + v6 + 88);
  *((void *)v7 + 12) = *(void *)((char *)a2 + v6 + 96);
  *((void *)v7 + 13) = *(void *)((char *)a2 + v6 + 104);
  long long v9 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  uint64_t v10 = v9[24];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C68EBDF8();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = v9[25];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)&v7[v18], 1, v13);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v13);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v19, v20, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v23 = *(void *)(v13 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v13);
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v13);
LABEL_13:
  uint64_t v25 = v9[26];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  int v28 = __swift_getEnumTagSinglePayload((uint64_t)&v7[v25], 1, v13);
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v13);
  if (!v28)
  {
    uint64_t v30 = *(void *)(v13 - 8);
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v26, v27, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v13);
LABEL_19:
  v7[v9[27]] = v8[v9[27]];
  v7[v9[28]] = v8[v9[28]];
  v7[v9[29]] = v8[v9[29]];
  v7[v9[30]] = v8[v9[30]];
  v7[v9[31]] = v8[v9[31]];
  v7[v9[32]] = v8[v9[32]];
  v7[v9[33]] = v8[v9[33]];
  v7[v9[34]] = v8[v9[34]];
  v7[v9[35]] = v8[v9[35]];
  uint64_t v32 = v9[36];
  uint64_t v33 = &v7[v32];
  uint64_t v34 = &v8[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[37]] = v8[v9[37]];
  v7[v9[38]] = v8[v9[38]];
  uint64_t v35 = v9[39];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  *(void *)uint64_t v36 = *(void *)&v8[v35];
  v36[8] = v8[v35 + 8];
  v36[9] = v8[v35 + 9];
  v36[10] = v8[v35 + 10];
  v36[11] = v8[v35 + 11];
  v36[12] = v8[v35 + 12];
  v36[13] = v8[v35 + 13];
  v36[14] = v8[v35 + 14];
  v36[15] = v8[v35 + 15];
  v36[16] = v8[v35 + 16];
  v36[17] = v8[v35 + 17];
  v36[18] = v8[v35 + 18];
  v36[19] = v8[v35 + 19];
  *((void *)v36 + 3) = *(void *)&v8[v35 + 24];
  *((void *)v36 + 4) = *(void *)&v8[v35 + 32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 5) = *((void *)v37 + 5);
  *((void *)v36 + 6) = *((void *)v37 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[40]] = *(void *)&v8[v9[40]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[41]] = v8[v9[41]];
  v7[v9[42]] = v8[v9[42]];
  v7[v9[43]] = v8[v9[43]];
  *(void *)&v7[v9[44]] = *(void *)&v8[v9[44]];
  v7[v9[45]] = v8[v9[45]];
  v7[v9[46]] = v8[v9[46]];
  v7[v9[47]] = v8[v9[47]];
  *(void *)&v7[v9[48]] = *(void *)&v8[v9[48]];
  *(void *)&v7[v9[49]] = *(void *)&v8[v9[49]];
  swift_retain();
  swift_release();
  uint64_t v38 = a3[6];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  *uint64_t v39 = *v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  *((void *)v39 + 2) = *((void *)v40 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_1C66D6DAC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(_OWORD *)(v7 + 16) = v9;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + v6 + 32);
  *(void *)(v7 + 48) = *(void *)(a2 + v6 + 48);
  *(_WORD *)(v7 + 56) = *(_WORD *)(a2 + v6 + 56);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + v6 + 64);
  *(_DWORD *)(v7 + 80) = *(_DWORD *)(a2 + v6 + 80);
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(a2 + v6 + 88);
  *(void *)(v7 + 104) = *(void *)(a2 + v6 + 104);
  uint64_t v10 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  uint64_t v11 = v10[24];
  uint64_t v12 = (void *)(v7 + v11);
  uint64_t v13 = (const void *)(v8 + v11);
  uint64_t v14 = sub_1C68EBDF8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[25];
  uint64_t v17 = (void *)(v7 + v16);
  uint64_t v18 = (const void *)(v8 + v16);
  if (__swift_getEnumTagSinglePayload(v8 + v16, 1, v14))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v17, v18, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  }
  uint64_t v20 = v10[26];
  int v21 = (void *)(v7 + v20);
  int v22 = (const void *)(v8 + v20);
  if (__swift_getEnumTagSinglePayload(v8 + v20, 1, v14))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v21, v22, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v14);
  }
  *(unsigned char *)(v7 + v10[27]) = *(unsigned char *)(v8 + v10[27]);
  *(unsigned char *)(v7 + v10[28]) = *(unsigned char *)(v8 + v10[28]);
  *(unsigned char *)(v7 + v10[29]) = *(unsigned char *)(v8 + v10[29]);
  *(unsigned char *)(v7 + v10[30]) = *(unsigned char *)(v8 + v10[30]);
  *(unsigned char *)(v7 + v10[31]) = *(unsigned char *)(v8 + v10[31]);
  *(unsigned char *)(v7 + v10[32]) = *(unsigned char *)(v8 + v10[32]);
  *(unsigned char *)(v7 + v10[33]) = *(unsigned char *)(v8 + v10[33]);
  *(unsigned char *)(v7 + v10[34]) = *(unsigned char *)(v8 + v10[34]);
  *(unsigned char *)(v7 + v10[35]) = *(unsigned char *)(v8 + v10[35]);
  *(_OWORD *)(v7 + v10[36]) = *(_OWORD *)(v8 + v10[36]);
  *(unsigned char *)(v7 + v10[37]) = *(unsigned char *)(v8 + v10[37]);
  *(unsigned char *)(v7 + v10[38]) = *(unsigned char *)(v8 + v10[38]);
  uint64_t v24 = v10[39];
  uint64_t v25 = v7 + v24;
  uint64_t v26 = v8 + v24;
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(void *)(v25 + 48) = *(void *)(v26 + 48);
  *(void *)(v7 + v10[40]) = *(void *)(v8 + v10[40]);
  *(unsigned char *)(v7 + v10[41]) = *(unsigned char *)(v8 + v10[41]);
  *(unsigned char *)(v7 + v10[42]) = *(unsigned char *)(v8 + v10[42]);
  *(unsigned char *)(v7 + v10[43]) = *(unsigned char *)(v8 + v10[43]);
  *(void *)(v7 + v10[44]) = *(void *)(v8 + v10[44]);
  *(unsigned char *)(v7 + v10[45]) = *(unsigned char *)(v8 + v10[45]);
  *(unsigned char *)(v7 + v10[46]) = *(unsigned char *)(v8 + v10[46]);
  *(unsigned char *)(v7 + v10[47]) = *(unsigned char *)(v8 + v10[47]);
  *(void *)(v7 + v10[48]) = *(void *)(v8 + v10[48]);
  *(void *)(v7 + v10[49]) = *(void *)(v8 + v10[49]);
  uint64_t v28 = a3[6];
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v32 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  return a1;
}

void *sub_1C66D7198(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  *uint64_t v8 = *((unsigned char *)a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
  *((void *)v8 + 5) = *(void *)((char *)a2 + v7 + 40);
  v8[48] = *((unsigned char *)a2 + v7 + 48);
  v8[49] = *((unsigned char *)a2 + v7 + 49);
  v8[50] = *((unsigned char *)a2 + v7 + 50);
  v8[51] = *((unsigned char *)a2 + v7 + 51);
  v8[52] = *((unsigned char *)a2 + v7 + 52);
  v8[53] = *((unsigned char *)a2 + v7 + 53);
  v8[54] = *((unsigned char *)a2 + v7 + 54);
  v8[55] = *((unsigned char *)a2 + v7 + 55);
  v8[56] = *((unsigned char *)a2 + v7 + 56);
  v8[57] = *((unsigned char *)a2 + v7 + 57);
  *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
  v8[80] = *((unsigned char *)a2 + v7 + 80);
  v8[81] = *((unsigned char *)a2 + v7 + 81);
  v8[82] = *((unsigned char *)a2 + v7 + 82);
  v8[83] = *((unsigned char *)a2 + v7 + 83);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)((char *)a2 + v7 + 88);
  *((void *)v8 + 13) = *(void *)((char *)a2 + v7 + 104);
  uint64_t v10 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  uint64_t v11 = v10[24];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_1C68EBDF8();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = v10[25];
  uint64_t v20 = &v8[v19];
  int v21 = &v9[v19];
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)&v8[v19], 1, v14);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v14);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v20, v21, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)(v14 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v14);
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v20, v21, v14);
LABEL_13:
  uint64_t v26 = v10[26];
  long long v27 = &v8[v26];
  uint64_t v28 = &v9[v26];
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)&v8[v26], 1, v14);
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v14);
  if (!v29)
  {
    uint64_t v31 = *(void *)(v14 - 8);
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v27, v28, v14);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v14);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4079E0);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v27, v28, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v14);
LABEL_19:
  v8[v10[27]] = v9[v10[27]];
  v8[v10[28]] = v9[v10[28]];
  v8[v10[29]] = v9[v10[29]];
  v8[v10[30]] = v9[v10[30]];
  v8[v10[31]] = v9[v10[31]];
  v8[v10[32]] = v9[v10[32]];
  v8[v10[33]] = v9[v10[33]];
  v8[v10[34]] = v9[v10[34]];
  v8[v10[35]] = v9[v10[35]];
  uint64_t v33 = v10[36];
  uint64_t v34 = &v8[v33];
  uint64_t v35 = &v9[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v8[v10[37]] = v9[v10[37]];
  v8[v10[38]] = v9[v10[38]];
  uint64_t v38 = v10[39];
  uint64_t v39 = &v8[v38];
  uint64_t v40 = &v9[v38];
  *(void *)uint64_t v39 = *(void *)&v9[v38];
  v39[8] = v9[v38 + 8];
  v39[9] = v9[v38 + 9];
  v39[10] = v9[v38 + 10];
  v39[11] = v9[v38 + 11];
  v39[12] = v9[v38 + 12];
  v39[13] = v9[v38 + 13];
  v39[14] = v9[v38 + 14];
  v39[15] = v9[v38 + 15];
  v39[16] = v9[v38 + 16];
  v39[17] = v9[v38 + 17];
  v39[18] = v9[v38 + 18];
  v39[19] = v9[v38 + 19];
  uint64_t v41 = *(void *)&v9[v38 + 32];
  *((void *)v39 + 3) = *(void *)&v9[v38 + 24];
  *((void *)v39 + 4) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *((void *)v40 + 6);
  *((void *)v39 + 5) = *((void *)v40 + 5);
  *((void *)v39 + 6) = v42;
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[40]] = *(void *)&v9[v10[40]];
  swift_bridgeObjectRelease();
  v8[v10[41]] = v9[v10[41]];
  v8[v10[42]] = v9[v10[42]];
  v8[v10[43]] = v9[v10[43]];
  *(void *)&v8[v10[44]] = *(void *)&v9[v10[44]];
  v8[v10[45]] = v9[v10[45]];
  v8[v10[46]] = v9[v10[46]];
  v8[v10[47]] = v9[v10[47]];
  *(void *)&v8[v10[48]] = *(void *)&v9[v10[48]];
  *(void *)&v8[v10[49]] = *(void *)&v9[v10[49]];
  swift_release();
  uint64_t v43 = a3[6];
  int v44 = (char *)a1 + v43;
  int v45 = (char *)a2 + v43;
  char *v44 = *v45;
  *((void *)v44 + 1) = *((void *)v45 + 1);
  *((void *)v44 + 2) = *((void *)v45 + 2);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v46) = *((unsigned char *)a2 + v46);
  return a1;
}

uint64_t sub_1C66D7828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C66D783C);
}

uint64_t sub_1C66D783C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_3_1(*(void *)(a1 + 8));
  }
  uint64_t v7 = type metadata accessor for PrivatizedSignalSet(0);
  uint64_t v8 = a1 + *(int *)(a3 + 20);

  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_1C66D78B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C66D78CC);
}

void sub_1C66D78CC()
{
  OUTLINED_FUNCTION_65();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for PrivatizedSignalSet(0);
    uint64_t v6 = v1 + *(int *)(v4 + 20);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t sub_1C66D7940()
{
  uint64_t result = type metadata accessor for PrivatizedSignalSet(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolverRunTimeData.CodingKeys()
{
  return &type metadata for ContactResolverRunTimeData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ContactResolutionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66D7B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolutionType()
{
  return &type metadata for ContactResolutionType;
}

void *sub_1C66D7B3C(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v14;
    uint64_t v15 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v15;
    uint64_t v16 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v16;
    uint64_t v17 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v17;
    uint64_t v18 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v18;
    *(void *)(a1 + 216) = a2[27];
    uint64_t v19 = (int *)type metadata accessor for Contact();
    uint64_t v20 = v19[19];
    __dst = (char *)v4 + v20;
    int v21 = (char *)a2 + v20;
    uint64_t v22 = sub_1C68E9698();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(__dst, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(__dst, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v22);
    }
    *(void *)((char *)v4 + v19[20]) = *(uint64_t *)((char *)a2 + v19[20]);
    *((unsigned char *)v4 + v19[21]) = *((unsigned char *)a2 + v19[21]);
    uint64_t v25 = v19[22];
    uint64_t v26 = (void *)((char *)v4 + v25);
    long long v27 = (uint64_t *)((char *)a2 + v25);
    __dstb = (void *)v27[1];
    *uint64_t v26 = *v27;
    v26[1] = __dstb;
    *((unsigned char *)v4 + v19[23]) = *((unsigned char *)a2 + v19[23]);
    uint64_t v28 = v19[24];
    int v29 = (void *)((char *)v4 + v28);
    int v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v89 = v30[1];
    *int v29 = *v30;
    v29[1] = v89;
    uint64_t v31 = a3[5];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    *(_OWORD *)uint64_t v32 = *(_OWORD *)((char *)a2 + v31);
    *((void *)v32 + 2) = *(uint64_t *)((char *)a2 + v31 + 16);
    v32[24] = *((unsigned char *)a2 + v31 + 24);
    uint64_t v34 = *(uint64_t *)((char *)a2 + v31 + 40);
    *((void *)v32 + 4) = *(uint64_t *)((char *)a2 + v31 + 32);
    *((void *)v32 + 5) = v34;
    uint64_t v35 = *(uint64_t *)((char *)a2 + v31 + 56);
    *((void *)v32 + 6) = *(uint64_t *)((char *)a2 + v31 + 48);
    *((void *)v32 + 7) = v35;
    uint64_t v36 = *(uint64_t *)((char *)a2 + v31 + 72);
    *((void *)v32 + 8) = *(uint64_t *)((char *)a2 + v31 + 64);
    *((void *)v32 + 9) = v36;
    uint64_t v37 = *(uint64_t *)((char *)a2 + v31 + 88);
    *((void *)v32 + 10) = *(uint64_t *)((char *)a2 + v31 + 80);
    *((void *)v32 + 11) = v37;
    uint64_t v38 = *(uint64_t *)((char *)a2 + v31 + 104);
    *((void *)v32 + 12) = *(uint64_t *)((char *)a2 + v31 + 96);
    *((void *)v32 + 13) = v38;
    uint64_t v39 = *(uint64_t *)((char *)a2 + v31 + 120);
    *((void *)v32 + 14) = *(uint64_t *)((char *)a2 + v31 + 112);
    *((void *)v32 + 15) = v39;
    uint64_t v40 = *(uint64_t *)((char *)a2 + v31 + 136);
    *((void *)v32 + 16) = *(uint64_t *)((char *)a2 + v31 + 128);
    *((void *)v32 + 17) = v40;
    uint64_t v41 = *(uint64_t *)((char *)a2 + v31 + 152);
    *((void *)v32 + 18) = *(uint64_t *)((char *)a2 + v31 + 144);
    *((void *)v32 + 19) = v41;
    uint64_t v42 = *(uint64_t *)((char *)a2 + v31 + 168);
    *((void *)v32 + 20) = *(uint64_t *)((char *)a2 + v31 + 160);
    *((void *)v32 + 21) = v42;
    uint64_t v88 = *(uint64_t *)((char *)a2 + v31 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v88)
    {
      uint64_t v43 = *(void *)(v33 + 184);
      *((void *)v32 + 22) = *(void *)(v33 + 176);
      *((void *)v32 + 23) = v43;
      *((void *)v32 + 24) = v88;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v32 + 11) = *(_OWORD *)(v33 + 176);
      *((void *)v32 + 24) = *(void *)(v33 + 192);
    }
    uint64_t v44 = *(void *)(v33 + 216);
    if (v44)
    {
      v32[200] = *(unsigned char *)(v33 + 200);
      *((void *)v32 + 26) = *(void *)(v33 + 208);
      *((void *)v32 + 27) = v44;
      uint64_t v45 = *(void *)(v33 + 232);
      *((void *)v32 + 28) = *(void *)(v33 + 224);
      *((void *)v32 + 29) = v45;
      *((void *)v32 + 30) = *(void *)(v33 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v46 = *(_OWORD *)(v33 + 216);
      *(_OWORD *)(v32 + 200) = *(_OWORD *)(v33 + 200);
      *(_OWORD *)(v32 + 216) = v46;
      *(_OWORD *)(v32 + 232) = *(_OWORD *)(v33 + 232);
    }
    *((void *)v32 + 31) = *(void *)(v33 + 248);
    v32[256] = *(unsigned char *)(v33 + 256);
    uint64_t v47 = *(void *)(v33 + 272);
    *((void *)v32 + 33) = *(void *)(v33 + 264);
    *((void *)v32 + 34) = v47;
    long long v48 = *(_OWORD *)(v33 + 296);
    *(_OWORD *)(v32 + 280) = *(_OWORD *)(v33 + 280);
    *(_OWORD *)(v32 + 296) = v48;
    *(_OWORD *)(v32 + 312) = *(_OWORD *)(v33 + 312);
    *((void *)v32 + 41) = *(void *)(v33 + 328);
    *((_DWORD *)v32 + 84) = *(_DWORD *)(v33 + 336);
    v32[340] = *(unsigned char *)(v33 + 340);
    uint64_t v49 = *(void *)(v33 + 352);
    *((void *)v32 + 43) = *(void *)(v33 + 344);
    *((void *)v32 + 44) = v49;
    *((_DWORD *)v32 + 90) = *(_DWORD *)(v33 + 360);
    *((_OWORD *)v32 + 23) = *(_OWORD *)(v33 + 368);
    *((void *)v32 + 48) = *(void *)(v33 + 384);
    uint64_t v50 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
    uint64_t v51 = v50[30];
    __dsta = &v32[v51];
    size_t v52 = (const void *)(v33 + v51);
    uint64_t v53 = sub_1C68EBBD8();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
      memcpy(__dsta, v52, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v53 - 8) + 16))(__dsta, v52, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v53);
    }
    uint64_t v55 = v50[31];
    uint64_t v56 = &v32[v55];
    uint64_t v57 = (const void *)(v33 + v55);
    if (__swift_getEnumTagSinglePayload(v33 + v55, 1, v53))
    {
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v53 - 8) + 16))(v56, v57, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v53);
    }
    uint64_t v59 = v50[32];
    uint64_t v60 = &v32[v59];
    uint64_t v61 = (const void *)(v33 + v59);
    if (__swift_getEnumTagSinglePayload(v33 + v59, 1, v53))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v53 - 8) + 16))(v60, v61, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v53);
    }
    uint64_t v63 = v50[33];
    uint64_t v64 = &v32[v63];
    uint64_t v65 = v33 + v63;
    *(void *)uint64_t v64 = *(void *)v65;
    *((void *)v64 + 1) = *(void *)(v65 + 8);
    *((_DWORD *)v64 + 4) = *(_DWORD *)(v65 + 16);
    uint64_t v66 = *(void *)(v65 + 32);
    *((void *)v64 + 3) = *(void *)(v65 + 24);
    *((void *)v64 + 4) = v66;
    uint64_t v67 = *(void *)(v65 + 48);
    *((void *)v64 + 5) = *(void *)(v65 + 40);
    *((void *)v64 + 6) = v67;
    v32[v50[34]] = *(unsigned char *)(v33 + v50[34]);
    v32[v50[35]] = *(unsigned char *)(v33 + v50[35]);
    v32[v50[36]] = *(unsigned char *)(v33 + v50[36]);
    v32[v50[37]] = *(unsigned char *)(v33 + v50[37]);
    v32[v50[38]] = *(unsigned char *)(v33 + v50[38]);
    v32[v50[39]] = *(unsigned char *)(v33 + v50[39]);
    v32[v50[40]] = *(unsigned char *)(v33 + v50[40]);
    v32[v50[41]] = *(unsigned char *)(v33 + v50[41]);
    uint64_t v68 = v50[42];
    uint64_t v69 = &v32[v68];
    uint64_t v70 = v33 + v68;
    *(void *)uint64_t v69 = *(void *)v70;
    *((_WORD *)v69 + 4) = *(_WORD *)(v70 + 8);
    uint64_t v71 = v50[43];
    uint64_t v72 = &v32[v71];
    uint64_t v73 = v33 + v71;
    *(void *)uint64_t v72 = *(void *)v73;
    v72[8] = *(unsigned char *)(v73 + 8);
    uint64_t v74 = *(void *)(v73 + 24);
    *((void *)v72 + 2) = *(void *)(v73 + 16);
    *((void *)v72 + 3) = v74;
    v32[v50[44]] = *(unsigned char *)(v33 + v50[44]);
    v32[v50[45]] = *(unsigned char *)(v33 + v50[45]);
    v32[v50[46]] = *(unsigned char *)(v33 + v50[46]);
    v32[v50[47]] = *(unsigned char *)(v33 + v50[47]);
    v32[v50[48]] = *(unsigned char *)(v33 + v50[48]);
    uint64_t v75 = v50[49];
    long long v76 = &v32[v75];
    uint64_t v77 = v33 + v75;
    *((_WORD *)v76 + 4) = *(_WORD *)(v77 + 8);
    *(void *)long long v76 = *(void *)v77;
    uint64_t v78 = v50[50];
    uint64_t v79 = &v32[v78];
    uint64_t v80 = v33 + v78;
    *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
    *((void *)v79 + 2) = *(void *)(v80 + 16);
    v32[v50[51]] = *(unsigned char *)(v33 + v50[51]);
    *(void *)&v32[v50[52]] = *(void *)(v33 + v50[52]);
    v32[v50[53]] = *(unsigned char *)(v33 + v50[53]);
    v32[v50[54]] = *(unsigned char *)(v33 + v50[54]);
    v32[v50[55]] = *(unsigned char *)(v33 + v50[55]);
    v32[v50[56]] = *(unsigned char *)(v33 + v50[56]);
    v32[v50[57]] = *(unsigned char *)(v33 + v50[57]);
    v32[v50[58]] = *(unsigned char *)(v33 + v50[58]);
    v32[v50[59]] = *(unsigned char *)(v33 + v50[59]);
    *(void *)&v32[v50[60]] = *(void *)(v33 + v50[60]);
    *(void *)&v32[v50[61]] = *(void *)(v33 + v50[61]);
    uint64_t v81 = a3[6];
    uint64_t v82 = a3[7];
    uint64_t v83 = (char *)v4 + v81;
    uint64_t v84 = (char *)a2 + v81;
    *uint64_t v83 = *v84;
    uint64_t v85 = *((void *)v84 + 2);
    *((void *)v83 + 1) = *((void *)v84 + 1);
    *((void *)v83 + 2) = v85;
    *(void *)((char *)v4 + v82) = *(uint64_t *)((char *)a2 + v82);
    uint64_t v86 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *((unsigned char *)v4 + v86) = *((unsigned char *)a2 + v86);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C66D8418(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Contact() + 76);
  uint64_t v5 = sub_1C68E9698();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 192))
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v6 + 216))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  uint64_t v8 = v6 + v7[30];
  uint64_t v9 = sub_1C68EBBD8();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v6 + v7[31];
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v10, v9);
  }
  uint64_t v11 = v6 + v7[32];
  if (!__swift_getEnumTagSinglePayload(v11, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v11, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C66D8754(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  uint64_t v18 = (int *)type metadata accessor for Contact();
  uint64_t v19 = v18[19];
  __dst = (void *)(a1 + v19);
  uint64_t v20 = (const void *)(a2 + v19);
  uint64_t v21 = sub_1C68E9698();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(__dst, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v21);
  }
  *(void *)(a1 + v18[20]) = *(void *)(a2 + v18[20]);
  *(unsigned char *)(a1 + v18[21]) = *(unsigned char *)(a2 + v18[21]);
  uint64_t v23 = v18[22];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  __dstb = (void *)v25[1];
  *uint64_t v24 = *v25;
  v24[1] = __dstb;
  *(unsigned char *)(a1 + v18[23]) = *(unsigned char *)(a2 + v18[23]);
  uint64_t v26 = v18[24];
  long long v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v87 = v28[1];
  *long long v27 = *v28;
  v27[1] = v87;
  uint64_t v29 = a3[5];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)(a2 + v29);
  *(void *)(v30 + 16) = *(void *)(a2 + v29 + 16);
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(a2 + v29 + 24);
  uint64_t v32 = *(void *)(a2 + v29 + 40);
  *(void *)(v30 + 32) = *(void *)(a2 + v29 + 32);
  *(void *)(v30 + 40) = v32;
  uint64_t v33 = *(void *)(a2 + v29 + 56);
  *(void *)(v30 + 48) = *(void *)(a2 + v29 + 48);
  *(void *)(v30 + 56) = v33;
  uint64_t v34 = *(void *)(a2 + v29 + 72);
  *(void *)(v30 + 64) = *(void *)(a2 + v29 + 64);
  *(void *)(v30 + 72) = v34;
  uint64_t v35 = *(void *)(a2 + v29 + 88);
  *(void *)(v30 + 80) = *(void *)(a2 + v29 + 80);
  *(void *)(v30 + 88) = v35;
  uint64_t v36 = *(void *)(a2 + v29 + 104);
  *(void *)(v30 + 96) = *(void *)(a2 + v29 + 96);
  *(void *)(v30 + 104) = v36;
  uint64_t v37 = *(void *)(a2 + v29 + 120);
  *(void *)(v30 + 112) = *(void *)(a2 + v29 + 112);
  *(void *)(v30 + 120) = v37;
  uint64_t v38 = *(void *)(a2 + v29 + 136);
  *(void *)(v30 + 128) = *(void *)(a2 + v29 + 128);
  *(void *)(v30 + 136) = v38;
  uint64_t v39 = *(void *)(a2 + v29 + 152);
  *(void *)(v30 + 144) = *(void *)(a2 + v29 + 144);
  *(void *)(v30 + 152) = v39;
  uint64_t v40 = *(void *)(a2 + v29 + 168);
  *(void *)(v30 + 160) = *(void *)(a2 + v29 + 160);
  *(void *)(v30 + 168) = v40;
  uint64_t v86 = *(void *)(a2 + v29 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v86)
  {
    uint64_t v41 = *(void *)(v31 + 184);
    *(void *)(v30 + 176) = *(void *)(v31 + 176);
    *(void *)(v30 + 184) = v41;
    *(void *)(v30 + 192) = v86;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v30 + 176) = *(_OWORD *)(v31 + 176);
    *(void *)(v30 + 192) = *(void *)(v31 + 192);
  }
  uint64_t v42 = *(void *)(v31 + 216);
  if (v42)
  {
    *(unsigned char *)(v30 + 200) = *(unsigned char *)(v31 + 200);
    *(void *)(v30 + 208) = *(void *)(v31 + 208);
    *(void *)(v30 + 216) = v42;
    uint64_t v43 = *(void *)(v31 + 232);
    *(void *)(v30 + 224) = *(void *)(v31 + 224);
    *(void *)(v30 + 232) = v43;
    *(void *)(v30 + 240) = *(void *)(v31 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *(_OWORD *)(v31 + 216);
    *(_OWORD *)(v30 + 200) = *(_OWORD *)(v31 + 200);
    *(_OWORD *)(v30 + 216) = v44;
    *(_OWORD *)(v30 + 232) = *(_OWORD *)(v31 + 232);
  }
  *(void *)(v30 + 248) = *(void *)(v31 + 248);
  *(unsigned char *)(v30 + 256) = *(unsigned char *)(v31 + 256);
  uint64_t v45 = *(void *)(v31 + 272);
  *(void *)(v30 + 264) = *(void *)(v31 + 264);
  *(void *)(v30 + 272) = v45;
  long long v46 = *(_OWORD *)(v31 + 296);
  *(_OWORD *)(v30 + 280) = *(_OWORD *)(v31 + 280);
  *(_OWORD *)(v30 + 296) = v46;
  *(_OWORD *)(v30 + 312) = *(_OWORD *)(v31 + 312);
  *(void *)(v30 + 328) = *(void *)(v31 + 328);
  *(_DWORD *)(v30 + 336) = *(_DWORD *)(v31 + 336);
  *(unsigned char *)(v30 + 340) = *(unsigned char *)(v31 + 340);
  uint64_t v47 = *(void *)(v31 + 352);
  *(void *)(v30 + 344) = *(void *)(v31 + 344);
  *(void *)(v30 + 352) = v47;
  *(_DWORD *)(v30 + 360) = *(_DWORD *)(v31 + 360);
  *(_OWORD *)(v30 + 368) = *(_OWORD *)(v31 + 368);
  *(void *)(v30 + 384) = *(void *)(v31 + 384);
  long long v48 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  uint64_t v49 = v48[30];
  __dsta = (void *)(v30 + v49);
  uint64_t v50 = (const void *)(v31 + v49);
  uint64_t v51 = sub_1C68EBBD8();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(__dsta, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 16))(__dsta, v50, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v51);
  }
  uint64_t v53 = v48[31];
  uint64_t v54 = (void *)(v30 + v53);
  uint64_t v55 = (const void *)(v31 + v53);
  if (__swift_getEnumTagSinglePayload(v31 + v53, 1, v51))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 16))(v54, v55, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v51);
  }
  uint64_t v57 = v48[32];
  uint64_t v58 = (void *)(v30 + v57);
  uint64_t v59 = (const void *)(v31 + v57);
  if (__swift_getEnumTagSinglePayload(v31 + v57, 1, v51))
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 16))(v58, v59, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v51);
  }
  uint64_t v61 = v48[33];
  uint64_t v62 = v30 + v61;
  uint64_t v63 = v31 + v61;
  *(void *)uint64_t v62 = *(void *)v63;
  *(void *)(v62 + 8) = *(void *)(v63 + 8);
  *(_DWORD *)(v62 + 16) = *(_DWORD *)(v63 + 16);
  uint64_t v64 = *(void *)(v63 + 32);
  *(void *)(v62 + 24) = *(void *)(v63 + 24);
  *(void *)(v62 + 32) = v64;
  uint64_t v65 = *(void *)(v63 + 48);
  *(void *)(v62 + 40) = *(void *)(v63 + 40);
  *(void *)(v62 + 48) = v65;
  *(unsigned char *)(v30 + v48[34]) = *(unsigned char *)(v31 + v48[34]);
  *(unsigned char *)(v30 + v48[35]) = *(unsigned char *)(v31 + v48[35]);
  *(unsigned char *)(v30 + v48[36]) = *(unsigned char *)(v31 + v48[36]);
  *(unsigned char *)(v30 + v48[37]) = *(unsigned char *)(v31 + v48[37]);
  *(unsigned char *)(v30 + v48[38]) = *(unsigned char *)(v31 + v48[38]);
  *(unsigned char *)(v30 + v48[39]) = *(unsigned char *)(v31 + v48[39]);
  *(unsigned char *)(v30 + v48[40]) = *(unsigned char *)(v31 + v48[40]);
  *(unsigned char *)(v30 + v48[41]) = *(unsigned char *)(v31 + v48[41]);
  uint64_t v66 = v48[42];
  uint64_t v67 = v30 + v66;
  uint64_t v68 = v31 + v66;
  *(void *)uint64_t v67 = *(void *)v68;
  *(_WORD *)(v67 + 8) = *(_WORD *)(v68 + 8);
  uint64_t v69 = v48[43];
  uint64_t v70 = v30 + v69;
  uint64_t v71 = v31 + v69;
  *(void *)uint64_t v70 = *(void *)v71;
  *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
  uint64_t v72 = *(void *)(v71 + 24);
  *(void *)(v70 + 16) = *(void *)(v71 + 16);
  *(void *)(v70 + 24) = v72;
  *(unsigned char *)(v30 + v48[44]) = *(unsigned char *)(v31 + v48[44]);
  *(unsigned char *)(v30 + v48[45]) = *(unsigned char *)(v31 + v48[45]);
  *(unsigned char *)(v30 + v48[46]) = *(unsigned char *)(v31 + v48[46]);
  *(unsigned char *)(v30 + v48[47]) = *(unsigned char *)(v31 + v48[47]);
  *(unsigned char *)(v30 + v48[48]) = *(unsigned char *)(v31 + v48[48]);
  uint64_t v73 = v48[49];
  uint64_t v74 = v30 + v73;
  uint64_t v75 = v31 + v73;
  *(_WORD *)(v74 + 8) = *(_WORD *)(v75 + 8);
  *(void *)uint64_t v74 = *(void *)v75;
  uint64_t v76 = v48[50];
  uint64_t v77 = v30 + v76;
  uint64_t v78 = v31 + v76;
  *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
  *(void *)(v77 + 16) = *(void *)(v78 + 16);
  *(unsigned char *)(v30 + v48[51]) = *(unsigned char *)(v31 + v48[51]);
  *(void *)(v30 + v48[52]) = *(void *)(v31 + v48[52]);
  *(unsigned char *)(v30 + v48[53]) = *(unsigned char *)(v31 + v48[53]);
  *(unsigned char *)(v30 + v48[54]) = *(unsigned char *)(v31 + v48[54]);
  *(unsigned char *)(v30 + v48[55]) = *(unsigned char *)(v31 + v48[55]);
  *(unsigned char *)(v30 + v48[56]) = *(unsigned char *)(v31 + v48[56]);
  *(unsigned char *)(v30 + v48[57]) = *(unsigned char *)(v31 + v48[57]);
  *(unsigned char *)(v30 + v48[58]) = *(unsigned char *)(v31 + v48[58]);
  *(unsigned char *)(v30 + v48[59]) = *(unsigned char *)(v31 + v48[59]);
  *(void *)(v30 + v48[60]) = *(void *)(v31 + v48[60]);
  *(void *)(v30 + v48[61]) = *(void *)(v31 + v48[61]);
  uint64_t v79 = a3[6];
  uint64_t v80 = a3[7];
  uint64_t v81 = a1 + v79;
  uint64_t v82 = a2 + v79;
  *(unsigned char *)uint64_t v81 = *(unsigned char *)v82;
  uint64_t v83 = *(void *)(v82 + 16);
  *(void *)(v81 + 8) = *(void *)(v82 + 8);
  *(void *)(v81 + 16) = v83;
  *(void *)(a1 + v80) = *(void *)(a2 + v80);
  uint64_t v84 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v84) = *(unsigned char *)(a2 + v84);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C66D8FE0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Contact();
  uint64_t v7 = v6[19];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C68E9698();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  *(void *)(a1 + v6[20]) = *(void *)(a2 + v6[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[21]) = *(unsigned char *)(a2 + v6[21]);
  uint64_t v15 = v6[22];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[23]) = *(unsigned char *)(a2 + v6[23]);
  uint64_t v18 = v6[24];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[5];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)(a2 + v21);
  *(void *)(v22 + 8) = *(void *)(a2 + v21 + 8);
  *(void *)(v22 + 16) = *(void *)(a2 + v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  *(void *)(v22 + 56) = *(void *)(v23 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 64) = *(void *)(v23 + 64);
  *(void *)(v22 + 72) = *(void *)(v23 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 80) = *(void *)(v23 + 80);
  *(void *)(v22 + 88) = *(void *)(v23 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 96) = *(void *)(v23 + 96);
  *(void *)(v22 + 104) = *(void *)(v23 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 112) = *(void *)(v23 + 112);
  *(void *)(v22 + 120) = *(void *)(v23 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  *(void *)(v22 + 136) = *(void *)(v23 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 144) = *(void *)(v23 + 144);
  *(void *)(v22 + 152) = *(void *)(v23 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 160) = *(void *)(v23 + 160);
  *(void *)(v22 + 168) = *(void *)(v23 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (_OWORD *)(v22 + 176);
  uint64_t v25 = (_OWORD *)(v23 + 176);
  uint64_t v26 = *(void *)(v23 + 192);
  if (*(void *)(v22 + 192))
  {
    if (v26)
    {
      *(void *)(v22 + 176) = *(void *)(v23 + 176);
      swift_retain();
      swift_release();
      *(void *)(v22 + 184) = *(void *)(v23 + 184);
      *(void *)(v22 + 192) = *(void *)(v23 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C66935A8(v22 + 176);
      uint64_t v27 = *(void *)(v23 + 192);
      *uint64_t v24 = *v25;
      *(void *)(v22 + 192) = v27;
    }
  }
  else if (v26)
  {
    *(void *)(v22 + 176) = *(void *)(v23 + 176);
    *(void *)(v22 + 184) = *(void *)(v23 + 184);
    *(void *)(v22 + 192) = *(void *)(v23 + 192);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *v25;
    *(void *)(v22 + 192) = *(void *)(v23 + 192);
    *uint64_t v24 = v28;
  }
  uint64_t v29 = (_OWORD *)(v22 + 200);
  uint64_t v30 = (_OWORD *)(v23 + 200);
  uint64_t v31 = *(void *)(v23 + 216);
  if (*(void *)(v22 + 216))
  {
    if (v31)
    {
      *(unsigned char *)(v22 + 200) = *(unsigned char *)(v23 + 200);
      *(void *)(v22 + 208) = *(void *)(v23 + 208);
      *(void *)(v22 + 216) = *(void *)(v23 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 224) = *(void *)(v23 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 232) = *(void *)(v23 + 232);
      *(void *)(v22 + 240) = *(void *)(v23 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C66935D8(v22 + 200);
      long long v33 = *(_OWORD *)(v23 + 216);
      long long v32 = *(_OWORD *)(v23 + 232);
      *uint64_t v29 = *v30;
      *(_OWORD *)(v22 + 216) = v33;
      *(_OWORD *)(v22 + 232) = v32;
    }
  }
  else if (v31)
  {
    *(unsigned char *)(v22 + 200) = *(unsigned char *)(v23 + 200);
    *(void *)(v22 + 208) = *(void *)(v23 + 208);
    *(void *)(v22 + 216) = *(void *)(v23 + 216);
    *(void *)(v22 + 224) = *(void *)(v23 + 224);
    *(void *)(v22 + 232) = *(void *)(v23 + 232);
    *(void *)(v22 + 240) = *(void *)(v23 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *v30;
    long long v35 = *(_OWORD *)(v23 + 232);
    *(_OWORD *)(v22 + 216) = *(_OWORD *)(v23 + 216);
    *(_OWORD *)(v22 + 232) = v35;
    *uint64_t v29 = v34;
  }
  *(void *)(v22 + 248) = *(void *)(v23 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + 256) = *(unsigned char *)(v23 + 256);
  *(void *)(v22 + 264) = *(void *)(v23 + 264);
  swift_retain();
  swift_release();
  *(void *)(v22 + 272) = *(void *)(v23 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + 280) = *(unsigned char *)(v23 + 280);
  *(void *)(v22 + 288) = *(void *)(v23 + 288);
  *(void *)(v22 + 296) = *(void *)(v23 + 296);
  *(void *)(v22 + 304) = *(void *)(v23 + 304);
  *(void *)(v22 + 312) = *(void *)(v23 + 312);
  *(void *)(v22 + 320) = *(void *)(v23 + 320);
  *(unsigned char *)(v22 + 328) = *(unsigned char *)(v23 + 328);
  *(unsigned char *)(v22 + 329) = *(unsigned char *)(v23 + 329);
  *(unsigned char *)(v22 + 330) = *(unsigned char *)(v23 + 330);
  *(unsigned char *)(v22 + 331) = *(unsigned char *)(v23 + 331);
  *(unsigned char *)(v22 + 332) = *(unsigned char *)(v23 + 332);
  *(unsigned char *)(v22 + 333) = *(unsigned char *)(v23 + 333);
  *(unsigned char *)(v22 + 334) = *(unsigned char *)(v23 + 334);
  *(unsigned char *)(v22 + 335) = *(unsigned char *)(v23 + 335);
  *(unsigned char *)(v22 + 336) = *(unsigned char *)(v23 + 336);
  *(unsigned char *)(v22 + 337) = *(unsigned char *)(v23 + 337);
  *(unsigned char *)(v22 + 338) = *(unsigned char *)(v23 + 338);
  *(unsigned char *)(v22 + 339) = *(unsigned char *)(v23 + 339);
  *(unsigned char *)(v22 + 340) = *(unsigned char *)(v23 + 340);
  *(void *)(v22 + 344) = *(void *)(v23 + 344);
  *(void *)(v22 + 352) = *(void *)(v23 + 352);
  *(unsigned char *)(v22 + 360) = *(unsigned char *)(v23 + 360);
  *(unsigned char *)(v22 + 361) = *(unsigned char *)(v23 + 361);
  *(unsigned char *)(v22 + 362) = *(unsigned char *)(v23 + 362);
  *(unsigned char *)(v22 + 363) = *(unsigned char *)(v23 + 363);
  *(void *)(v22 + 368) = *(void *)(v23 + 368);
  *(void *)(v22 + 376) = *(void *)(v23 + 376);
  *(void *)(v22 + 384) = *(void *)(v23 + 384);
  uint64_t v36 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  uint64_t v37 = v36[30];
  uint64_t v38 = (void *)(v22 + v37);
  uint64_t v39 = (const void *)(v23 + v37);
  uint64_t v40 = sub_1C68EBBD8();
  int v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40);
  int v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v43 = *(void *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v38, v40);
LABEL_27:
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, const void *, uint64_t))(v43 + 24))(v38, v39, v40);
LABEL_28:
  uint64_t v45 = v36[31];
  long long v46 = (void *)(v22 + v45);
  uint64_t v47 = (const void *)(v23 + v45);
  int v48 = __swift_getEnumTagSinglePayload(v22 + v45, 1, v40);
  int v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v40);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v46, v47, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v40);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v50 = *(void *)(v40 - 8);
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v46, v40);
LABEL_33:
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v50 + 24))(v46, v47, v40);
LABEL_34:
  uint64_t v52 = v36[32];
  uint64_t v53 = (void *)(v22 + v52);
  uint64_t v54 = (const void *)(v23 + v52);
  int v55 = __swift_getEnumTagSinglePayload(v22 + v52, 1, v40);
  int v56 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v40);
  if (!v55)
  {
    uint64_t v57 = *(void *)(v40 - 8);
    if (!v56)
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 24))(v53, v54, v40);
      goto LABEL_40;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v53, v40);
    goto LABEL_39;
  }
  if (v56)
  {
LABEL_39:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v53, v54, v40);
  __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v40);
LABEL_40:
  uint64_t v59 = v36[33];
  uint64_t v60 = v22 + v59;
  uint64_t v61 = v23 + v59;
  *(void *)uint64_t v60 = *(void *)(v23 + v59);
  *(unsigned char *)(v60 + 8) = *(unsigned char *)(v23 + v59 + 8);
  *(unsigned char *)(v60 + 9) = *(unsigned char *)(v23 + v59 + 9);
  *(unsigned char *)(v60 + 10) = *(unsigned char *)(v23 + v59 + 10);
  *(unsigned char *)(v60 + 11) = *(unsigned char *)(v23 + v59 + 11);
  *(unsigned char *)(v60 + 12) = *(unsigned char *)(v23 + v59 + 12);
  *(unsigned char *)(v60 + 13) = *(unsigned char *)(v23 + v59 + 13);
  *(unsigned char *)(v60 + 14) = *(unsigned char *)(v23 + v59 + 14);
  *(unsigned char *)(v60 + 15) = *(unsigned char *)(v23 + v59 + 15);
  *(unsigned char *)(v60 + 16) = *(unsigned char *)(v23 + v59 + 16);
  *(unsigned char *)(v60 + 17) = *(unsigned char *)(v23 + v59 + 17);
  *(unsigned char *)(v60 + 18) = *(unsigned char *)(v23 + v59 + 18);
  *(unsigned char *)(v60 + 19) = *(unsigned char *)(v23 + v59 + 19);
  *(void *)(v60 + 24) = *(void *)(v23 + v59 + 24);
  *(void *)(v60 + 32) = *(void *)(v23 + v59 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v60 + 40) = *(void *)(v61 + 40);
  *(void *)(v60 + 48) = *(void *)(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + v36[34]) = *(unsigned char *)(v23 + v36[34]);
  *(unsigned char *)(v22 + v36[35]) = *(unsigned char *)(v23 + v36[35]);
  *(unsigned char *)(v22 + v36[36]) = *(unsigned char *)(v23 + v36[36]);
  *(unsigned char *)(v22 + v36[37]) = *(unsigned char *)(v23 + v36[37]);
  *(unsigned char *)(v22 + v36[38]) = *(unsigned char *)(v23 + v36[38]);
  *(unsigned char *)(v22 + v36[39]) = *(unsigned char *)(v23 + v36[39]);
  *(unsigned char *)(v22 + v36[40]) = *(unsigned char *)(v23 + v36[40]);
  *(unsigned char *)(v22 + v36[41]) = *(unsigned char *)(v23 + v36[41]);
  uint64_t v62 = v36[42];
  uint64_t v63 = v22 + v62;
  uint64_t v64 = v23 + v62;
  *(void *)uint64_t v63 = *(void *)v64;
  *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
  *(unsigned char *)(v63 + 9) = *(unsigned char *)(v64 + 9);
  uint64_t v65 = v36[43];
  uint64_t v66 = v22 + v65;
  uint64_t v67 = v23 + v65;
  *(void *)uint64_t v66 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  *(void *)(v66 + 16) = *(void *)(v67 + 16);
  *(void *)(v66 + 24) = *(void *)(v67 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + v36[44]) = *(unsigned char *)(v23 + v36[44]);
  *(unsigned char *)(v22 + v36[45]) = *(unsigned char *)(v23 + v36[45]);
  *(unsigned char *)(v22 + v36[46]) = *(unsigned char *)(v23 + v36[46]);
  *(unsigned char *)(v22 + v36[47]) = *(unsigned char *)(v23 + v36[47]);
  *(unsigned char *)(v22 + v36[48]) = *(unsigned char *)(v23 + v36[48]);
  uint64_t v68 = v36[49];
  uint64_t v69 = v22 + v68;
  uint64_t v70 = v23 + v68;
  *(void *)uint64_t v69 = *(void *)v70;
  *(unsigned char *)(v69 + 8) = *(unsigned char *)(v70 + 8);
  *(unsigned char *)(v69 + 9) = *(unsigned char *)(v70 + 9);
  uint64_t v71 = v36[50];
  uint64_t v72 = v22 + v71;
  uint64_t v73 = v23 + v71;
  *(void *)uint64_t v72 = *(void *)v73;
  *(unsigned char *)(v72 + 8) = *(unsigned char *)(v73 + 8);
  *(void *)(v72 + 16) = *(void *)(v73 + 16);
  *(unsigned char *)(v22 + v36[51]) = *(unsigned char *)(v23 + v36[51]);
  *(void *)(v22 + v36[52]) = *(void *)(v23 + v36[52]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + v36[53]) = *(unsigned char *)(v23 + v36[53]);
  *(unsigned char *)(v22 + v36[54]) = *(unsigned char *)(v23 + v36[54]);
  *(unsigned char *)(v22 + v36[55]) = *(unsigned char *)(v23 + v36[55]);
  *(unsigned char *)(v22 + v36[56]) = *(unsigned char *)(v23 + v36[56]);
  *(unsigned char *)(v22 + v36[57]) = *(unsigned char *)(v23 + v36[57]);
  *(unsigned char *)(v22 + v36[58]) = *(unsigned char *)(v23 + v36[58]);
  *(unsigned char *)(v22 + v36[59]) = *(unsigned char *)(v23 + v36[59]);
  *(void *)(v22 + v36[60]) = *(void *)(v23 + v36[60]);
  *(void *)(v22 + v36[61]) = *(void *)(v23 + v36[61]);
  swift_retain();
  swift_release();
  uint64_t v74 = a3[6];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  *(unsigned char *)uint64_t v75 = *(unsigned char *)v76;
  *(void *)(v75 + 8) = *(void *)(v76 + 8);
  *(void *)(v75 + 16) = *(void *)(v76 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C66D9E34(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  uint64_t v6 = (int *)type metadata accessor for Contact();
  uint64_t v7 = v6[19];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C68E9698();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[20]) = *(void *)(a2 + v6[20]);
  *(unsigned char *)(a1 + v6[21]) = *(unsigned char *)(a2 + v6[21]);
  *(_OWORD *)(a1 + v6[22]) = *(_OWORD *)(a2 + v6[22]);
  *(unsigned char *)(a1 + v6[23]) = *(unsigned char *)(a2 + v6[23]);
  *(_OWORD *)(a1 + v6[24]) = *(_OWORD *)(a2 + v6[24]);
  uint64_t v12 = a3[5];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  memcpy((void *)(a1 + v12 + 8), (const void *)(a2 + v12 + 8), 0x108uLL);
  *(void *)(v13 + 272) = *(void *)(v14 + 272);
  long long v15 = *(_OWORD *)(v14 + 296);
  *(_OWORD *)(v13 + 280) = *(_OWORD *)(v14 + 280);
  *(_OWORD *)(v13 + 296) = v15;
  *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
  *(void *)(v13 + 328) = *(void *)(v14 + 328);
  *(_DWORD *)(v13 + 336) = *(_DWORD *)(v14 + 336);
  *(unsigned char *)(v13 + 340) = *(unsigned char *)(v14 + 340);
  uint64_t v16 = *(void *)(v14 + 352);
  *(void *)(v13 + 344) = *(void *)(v14 + 344);
  *(void *)(v13 + 352) = v16;
  *(_DWORD *)(v13 + 360) = *(_DWORD *)(v14 + 360);
  *(_OWORD *)(v13 + 368) = *(_OWORD *)(v14 + 368);
  *(void *)(v13 + 384) = *(void *)(v14 + 384);
  uint64_t v17 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  uint64_t v18 = v17[30];
  uint64_t v19 = (void *)(v13 + v18);
  uint64_t v20 = (const void *)(v14 + v18);
  uint64_t v21 = sub_1C68EBBD8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = v17[31];
  uint64_t v24 = (void *)(v13 + v23);
  uint64_t v25 = (const void *)(v14 + v23);
  if (__swift_getEnumTagSinglePayload(v14 + v23, 1, v21))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v24, v25, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v21);
  }
  uint64_t v27 = v17[32];
  long long v28 = (void *)(v13 + v27);
  uint64_t v29 = (const void *)(v14 + v27);
  if (__swift_getEnumTagSinglePayload(v14 + v27, 1, v21))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v28, v29, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v21);
  }
  uint64_t v31 = v17[33];
  uint64_t v32 = v13 + v31;
  uint64_t v33 = v14 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(void *)(v32 + 48) = *(void *)(v33 + 48);
  *(unsigned char *)(v13 + v17[34]) = *(unsigned char *)(v14 + v17[34]);
  *(unsigned char *)(v13 + v17[35]) = *(unsigned char *)(v14 + v17[35]);
  *(unsigned char *)(v13 + v17[36]) = *(unsigned char *)(v14 + v17[36]);
  *(unsigned char *)(v13 + v17[37]) = *(unsigned char *)(v14 + v17[37]);
  *(unsigned char *)(v13 + v17[38]) = *(unsigned char *)(v14 + v17[38]);
  *(unsigned char *)(v13 + v17[39]) = *(unsigned char *)(v14 + v17[39]);
  *(unsigned char *)(v13 + v17[40]) = *(unsigned char *)(v14 + v17[40]);
  *(unsigned char *)(v13 + v17[41]) = *(unsigned char *)(v14 + v17[41]);
  uint64_t v35 = v17[42];
  uint64_t v36 = v13 + v35;
  uint64_t v37 = v14 + v35;
  *(void *)uint64_t v36 = *(void *)v37;
  *(_WORD *)(v36 + 8) = *(_WORD *)(v37 + 8);
  uint64_t v38 = v17[43];
  uint64_t v39 = (_OWORD *)(v13 + v38);
  uint64_t v40 = (_OWORD *)(v14 + v38);
  long long v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  *(unsigned char *)(v13 + v17[44]) = *(unsigned char *)(v14 + v17[44]);
  *(unsigned char *)(v13 + v17[45]) = *(unsigned char *)(v14 + v17[45]);
  *(unsigned char *)(v13 + v17[46]) = *(unsigned char *)(v14 + v17[46]);
  *(unsigned char *)(v13 + v17[47]) = *(unsigned char *)(v14 + v17[47]);
  *(unsigned char *)(v13 + v17[48]) = *(unsigned char *)(v14 + v17[48]);
  uint64_t v42 = v17[49];
  uint64_t v43 = v13 + v42;
  uint64_t v44 = v14 + v42;
  *(void *)uint64_t v43 = *(void *)v44;
  *(_WORD *)(v43 + 8) = *(_WORD *)(v44 + 8);
  uint64_t v45 = v17[50];
  uint64_t v46 = v13 + v45;
  uint64_t v47 = v14 + v45;
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(unsigned char *)(v13 + v17[51]) = *(unsigned char *)(v14 + v17[51]);
  *(void *)(v13 + v17[52]) = *(void *)(v14 + v17[52]);
  *(unsigned char *)(v13 + v17[53]) = *(unsigned char *)(v14 + v17[53]);
  *(unsigned char *)(v13 + v17[54]) = *(unsigned char *)(v14 + v17[54]);
  *(unsigned char *)(v13 + v17[55]) = *(unsigned char *)(v14 + v17[55]);
  *(unsigned char *)(v13 + v17[56]) = *(unsigned char *)(v14 + v17[56]);
  *(unsigned char *)(v13 + v17[57]) = *(unsigned char *)(v14 + v17[57]);
  *(unsigned char *)(v13 + v17[58]) = *(unsigned char *)(v14 + v17[58]);
  *(unsigned char *)(v13 + v17[59]) = *(unsigned char *)(v14 + v17[59]);
  *(void *)(v13 + v17[60]) = *(void *)(v14 + v17[60]);
  *(void *)(v13 + v17[61]) = *(void *)(v14 + v17[61]);
  uint64_t v48 = a3[6];
  uint64_t v49 = a3[7];
  uint64_t v50 = a1 + v48;
  uint64_t v51 = a2 + v48;
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(void *)(v50 + 16) = *(void *)(v51 + 16);
  *(void *)(a1 + v49) = *(void *)(a2 + v49);
  uint64_t v52 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v52) = *(unsigned char *)(a2 + v52);
  return a1;
}

uint64_t sub_1C66DA424(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
  uint64_t v19 = (int *)type metadata accessor for Contact();
  uint64_t v20 = v19[19];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_1C68E9698();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  int v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (EnumTagSinglePayload)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v26 = *(void *)(v23 - 8);
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v21, v23);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 40))(v21, v22, v23);
LABEL_7:
  *(void *)(a1 + v19[20]) = *(void *)(a2 + v19[20]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v19[21]) = *(unsigned char *)(a2 + v19[21]);
  uint64_t v28 = v19[22];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v19[23]) = *(unsigned char *)(a2 + v19[23]);
  uint64_t v33 = v19[24];
  long long v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *long long v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[5];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(_OWORD *)uint64_t v39 = *(_OWORD *)(a2 + v38);
  *(void *)(v39 + 16) = *(void *)(a2 + v38 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + 24) = *(unsigned char *)(v40 + 24);
  uint64_t v41 = *(void *)(v40 + 40);
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  *(void *)(v39 + 40) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v40 + 56);
  *(void *)(v39 + 48) = *(void *)(v40 + 48);
  *(void *)(v39 + 56) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v40 + 72);
  *(void *)(v39 + 64) = *(void *)(v40 + 64);
  *(void *)(v39 + 72) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v40 + 88);
  *(void *)(v39 + 80) = *(void *)(v40 + 80);
  *(void *)(v39 + 88) = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(v40 + 104);
  *(void *)(v39 + 96) = *(void *)(v40 + 96);
  *(void *)(v39 + 104) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v40 + 120);
  *(void *)(v39 + 112) = *(void *)(v40 + 112);
  *(void *)(v39 + 120) = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v40 + 136);
  *(void *)(v39 + 128) = *(void *)(v40 + 128);
  *(void *)(v39 + 136) = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(v40 + 152);
  *(void *)(v39 + 144) = *(void *)(v40 + 144);
  *(void *)(v39 + 152) = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(v40 + 168);
  *(void *)(v39 + 160) = *(void *)(v40 + 160);
  *(void *)(v39 + 168) = v49;
  swift_bridgeObjectRelease();
  if (*(void *)(v39 + 192))
  {
    if (*(void *)(v40 + 192))
    {
      *(void *)(v39 + 176) = *(void *)(v40 + 176);
      swift_release();
      uint64_t v50 = *(void *)(v40 + 192);
      *(void *)(v39 + 184) = *(void *)(v40 + 184);
      *(void *)(v39 + 192) = v50;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C66935A8(v39 + 176);
  }
  *(_OWORD *)(v39 + 176) = *(_OWORD *)(v40 + 176);
  *(void *)(v39 + 192) = *(void *)(v40 + 192);
LABEL_12:
  if (*(void *)(v39 + 216))
  {
    uint64_t v51 = *(void *)(v40 + 216);
    if (v51)
    {
      *(unsigned char *)(v39 + 200) = *(unsigned char *)(v40 + 200);
      *(void *)(v39 + 208) = *(void *)(v40 + 208);
      *(void *)(v39 + 216) = v51;
      swift_bridgeObjectRelease();
      *(void *)(v39 + 224) = *(void *)(v40 + 224);
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v40 + 240);
      *(void *)(v39 + 232) = *(void *)(v40 + 232);
      *(void *)(v39 + 240) = v52;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1C66935D8(v39 + 200);
  }
  long long v53 = *(_OWORD *)(v40 + 216);
  *(_OWORD *)(v39 + 200) = *(_OWORD *)(v40 + 200);
  *(_OWORD *)(v39 + 216) = v53;
  *(_OWORD *)(v39 + 232) = *(_OWORD *)(v40 + 232);
LABEL_17:
  *(void *)(v39 + 248) = *(void *)(v40 + 248);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + 256) = *(unsigned char *)(v40 + 256);
  *(void *)(v39 + 264) = *(void *)(v40 + 264);
  swift_release();
  *(void *)(v39 + 272) = *(void *)(v40 + 272);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + 280) = *(unsigned char *)(v40 + 280);
  long long v54 = *(_OWORD *)(v40 + 304);
  *(_OWORD *)(v39 + 288) = *(_OWORD *)(v40 + 288);
  *(_OWORD *)(v39 + 304) = v54;
  *(void *)(v39 + 320) = *(void *)(v40 + 320);
  *(unsigned char *)(v39 + 328) = *(unsigned char *)(v40 + 328);
  *(unsigned char *)(v39 + 329) = *(unsigned char *)(v40 + 329);
  *(unsigned char *)(v39 + 330) = *(unsigned char *)(v40 + 330);
  *(unsigned char *)(v39 + 331) = *(unsigned char *)(v40 + 331);
  *(unsigned char *)(v39 + 332) = *(unsigned char *)(v40 + 332);
  *(unsigned char *)(v39 + 333) = *(unsigned char *)(v40 + 333);
  *(unsigned char *)(v39 + 334) = *(unsigned char *)(v40 + 334);
  *(unsigned char *)(v39 + 335) = *(unsigned char *)(v40 + 335);
  *(unsigned char *)(v39 + 336) = *(unsigned char *)(v40 + 336);
  *(unsigned char *)(v39 + 337) = *(unsigned char *)(v40 + 337);
  *(unsigned char *)(v39 + 338) = *(unsigned char *)(v40 + 338);
  *(unsigned char *)(v39 + 339) = *(unsigned char *)(v40 + 339);
  *(unsigned char *)(v39 + 340) = *(unsigned char *)(v40 + 340);
  *(void *)&long long v54 = *(void *)(v40 + 352);
  *(void *)(v39 + 344) = *(void *)(v40 + 344);
  *(void *)(v39 + 352) = v54;
  *(unsigned char *)(v39 + 360) = *(unsigned char *)(v40 + 360);
  *(unsigned char *)(v39 + 361) = *(unsigned char *)(v40 + 361);
  *(unsigned char *)(v39 + 362) = *(unsigned char *)(v40 + 362);
  *(unsigned char *)(v39 + 363) = *(unsigned char *)(v40 + 363);
  *(_OWORD *)(v39 + 368) = *(_OWORD *)(v40 + 368);
  *(void *)(v39 + 384) = *(void *)(v40 + 384);
  int v55 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  uint64_t v56 = v55[30];
  uint64_t v57 = (void *)(v39 + v56);
  uint64_t v58 = (const void *)(v40 + v56);
  uint64_t v59 = sub_1C68EBBD8();
  int v60 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v59);
  int v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  uint64_t v62 = *(void *)(v59 - 8);
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v62 + 8))(v57, v59);
LABEL_22:
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v57, v58, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, const void *, uint64_t))(v62 + 40))(v57, v58, v59);
LABEL_23:
  uint64_t v64 = v55[31];
  uint64_t v65 = (void *)(v39 + v64);
  uint64_t v66 = (const void *)(v40 + v64);
  int v67 = __swift_getEnumTagSinglePayload(v39 + v64, 1, v59);
  int v68 = __swift_getEnumTagSinglePayload((uint64_t)v66, 1, v59);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v65, v66, v59);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v59);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v69 = *(void *)(v59 - 8);
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v69 + 8))(v65, v59);
LABEL_28:
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(void *, const void *, uint64_t))(v69 + 40))(v65, v66, v59);
LABEL_29:
  uint64_t v71 = v55[32];
  uint64_t v72 = (void *)(v39 + v71);
  uint64_t v73 = (const void *)(v40 + v71);
  int v74 = __swift_getEnumTagSinglePayload(v39 + v71, 1, v59);
  int v75 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v59);
  if (!v74)
  {
    uint64_t v76 = *(void *)(v59 - 8);
    if (!v75)
    {
      (*(void (**)(void *, const void *, uint64_t))(v76 + 40))(v72, v73, v59);
      goto LABEL_35;
    }
    (*(void (**)(void *, uint64_t))(v76 + 8))(v72, v59);
    goto LABEL_34;
  }
  if (v75)
  {
LABEL_34:
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407400);
    memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v72, v73, v59);
  __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v59);
LABEL_35:
  uint64_t v78 = v55[33];
  uint64_t v79 = v39 + v78;
  uint64_t v80 = v40 + v78;
  *(void *)uint64_t v79 = *(void *)(v40 + v78);
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v40 + v78 + 8);
  *(unsigned char *)(v79 + 9) = *(unsigned char *)(v40 + v78 + 9);
  *(unsigned char *)(v79 + 10) = *(unsigned char *)(v40 + v78 + 10);
  *(unsigned char *)(v79 + 11) = *(unsigned char *)(v40 + v78 + 11);
  *(unsigned char *)(v79 + 12) = *(unsigned char *)(v40 + v78 + 12);
  *(unsigned char *)(v79 + 13) = *(unsigned char *)(v40 + v78 + 13);
  *(unsigned char *)(v79 + 14) = *(unsigned char *)(v40 + v78 + 14);
  *(unsigned char *)(v79 + 15) = *(unsigned char *)(v40 + v78 + 15);
  *(unsigned char *)(v79 + 16) = *(unsigned char *)(v40 + v78 + 16);
  *(unsigned char *)(v79 + 17) = *(unsigned char *)(v40 + v78 + 17);
  *(unsigned char *)(v79 + 18) = *(unsigned char *)(v40 + v78 + 18);
  *(unsigned char *)(v79 + 19) = *(unsigned char *)(v40 + v78 + 19);
  uint64_t v81 = *(void *)(v40 + v78 + 32);
  *(void *)(v79 + 24) = *(void *)(v40 + v78 + 24);
  *(void *)(v79 + 32) = v81;
  swift_bridgeObjectRelease();
  uint64_t v82 = *(void *)(v80 + 48);
  *(void *)(v79 + 40) = *(void *)(v80 + 40);
  *(void *)(v79 + 48) = v82;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v55[34]) = *(unsigned char *)(v40 + v55[34]);
  *(unsigned char *)(v39 + v55[35]) = *(unsigned char *)(v40 + v55[35]);
  *(unsigned char *)(v39 + v55[36]) = *(unsigned char *)(v40 + v55[36]);
  *(unsigned char *)(v39 + v55[37]) = *(unsigned char *)(v40 + v55[37]);
  *(unsigned char *)(v39 + v55[38]) = *(unsigned char *)(v40 + v55[38]);
  *(unsigned char *)(v39 + v55[39]) = *(unsigned char *)(v40 + v55[39]);
  *(unsigned char *)(v39 + v55[40]) = *(unsigned char *)(v40 + v55[40]);
  *(unsigned char *)(v39 + v55[41]) = *(unsigned char *)(v40 + v55[41]);
  uint64_t v83 = v55[42];
  uint64_t v84 = v39 + v83;
  uint64_t v85 = v40 + v83;
  *(void *)uint64_t v84 = *(void *)v85;
  *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
  *(unsigned char *)(v84 + 9) = *(unsigned char *)(v85 + 9);
  uint64_t v86 = v55[43];
  uint64_t v87 = v39 + v86;
  uint64_t v88 = v40 + v86;
  *(void *)uint64_t v87 = *(void *)v88;
  *(unsigned char *)(v87 + 8) = *(unsigned char *)(v88 + 8);
  uint64_t v90 = *(void *)(v88 + 16);
  uint64_t v89 = *(void *)(v88 + 24);
  *(void *)(v87 + 16) = v90;
  *(void *)(v87 + 24) = v89;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v55[44]) = *(unsigned char *)(v40 + v55[44]);
  *(unsigned char *)(v39 + v55[45]) = *(unsigned char *)(v40 + v55[45]);
  *(unsigned char *)(v39 + v55[46]) = *(unsigned char *)(v40 + v55[46]);
  *(unsigned char *)(v39 + v55[47]) = *(unsigned char *)(v40 + v55[47]);
  *(unsigned char *)(v39 + v55[48]) = *(unsigned char *)(v40 + v55[48]);
  uint64_t v91 = v55[49];
  uint64_t v92 = v39 + v91;
  uint64_t v93 = v40 + v91;
  *(void *)uint64_t v92 = *(void *)v93;
  *(unsigned char *)(v92 + 8) = *(unsigned char *)(v93 + 8);
  *(unsigned char *)(v92 + 9) = *(unsigned char *)(v93 + 9);
  uint64_t v94 = v55[50];
  uint64_t v95 = v39 + v94;
  uint64_t v96 = v40 + v94;
  *(void *)uint64_t v95 = *(void *)v96;
  *(unsigned char *)(v95 + 8) = *(unsigned char *)(v96 + 8);
  *(void *)(v95 + 16) = *(void *)(v96 + 16);
  *(unsigned char *)(v39 + v55[51]) = *(unsigned char *)(v40 + v55[51]);
  *(void *)(v39 + v55[52]) = *(void *)(v40 + v55[52]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + v55[53]) = *(unsigned char *)(v40 + v55[53]);
  *(unsigned char *)(v39 + v55[54]) = *(unsigned char *)(v40 + v55[54]);
  *(unsigned char *)(v39 + v55[55]) = *(unsigned char *)(v40 + v55[55]);
  *(unsigned char *)(v39 + v55[56]) = *(unsigned char *)(v40 + v55[56]);
  *(unsigned char *)(v39 + v55[57]) = *(unsigned char *)(v40 + v55[57]);
  *(unsigned char *)(v39 + v55[58]) = *(unsigned char *)(v40 + v55[58]);
  *(unsigned char *)(v39 + v55[59]) = *(unsigned char *)(v40 + v55[59]);
  *(void *)(v39 + v55[60]) = *(void *)(v40 + v55[60]);
  *(void *)(v39 + v55[61]) = *(void *)(v40 + v55[61]);
  swift_release();
  uint64_t v97 = a3[6];
  uint64_t v98 = a1 + v97;
  uint64_t v99 = a2 + v97;
  *(unsigned char *)uint64_t v98 = *(unsigned char *)v99;
  *(void *)(v98 + 8) = *(void *)(v99 + 8);
  *(void *)(v98 + 16) = *(void *)(v99 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v100 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v100) = *(unsigned char *)(a2 + v100);
  return a1;
}

uint64_t sub_1C66DAF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Contact();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for ContactResolver.SignalSet(0);
    OUTLINED_FUNCTION_0_6();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return OUTLINED_FUNCTION_3_1(*(void *)(a1 + *(int *)(a3 + 24) + 16));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

void sub_1C66DB010(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Contact();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for ContactResolver.SignalSet(0);
    OUTLINED_FUNCTION_0_6();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_1C66DB0C4()
{
  uint64_t result = type metadata accessor for Contact();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ContactResolver.SignalSet(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C66DB1C0()
{
  unint64_t result = qword_1EA4079F8;
  if (!qword_1EA4079F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4079F8);
  }
  return result;
}

unint64_t sub_1C66DB218()
{
  unint64_t result = qword_1EA407A20;
  if (!qword_1EA407A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A20);
  }
  return result;
}

unint64_t sub_1C66DB264()
{
  unint64_t result = qword_1EA407A28;
  if (!qword_1EA407A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A28);
  }
  return result;
}

unint64_t sub_1C66DB2B0()
{
  unint64_t result = qword_1EA407A30;
  if (!qword_1EA407A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A30);
  }
  return result;
}

unint64_t sub_1C66DB2FC()
{
  unint64_t result = qword_1EA407A38;
  if (!qword_1EA407A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A38);
  }
  return result;
}

unint64_t sub_1C66DB348()
{
  unint64_t result = qword_1EA407A48;
  if (!qword_1EA407A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A48);
  }
  return result;
}

unint64_t sub_1C66DB394()
{
  unint64_t result = qword_1EA407A50;
  if (!qword_1EA407A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A50);
  }
  return result;
}

unint64_t sub_1C66DB3E0()
{
  unint64_t result = qword_1EA407A60;
  if (!qword_1EA407A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A60);
  }
  return result;
}

unint64_t sub_1C66DB42C()
{
  unint64_t result = qword_1EA407A68;
  if (!qword_1EA407A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A68);
  }
  return result;
}

unint64_t sub_1C66DB478()
{
  unint64_t result = qword_1EA407A78;
  if (!qword_1EA407A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A78);
  }
  return result;
}

unint64_t sub_1C66DB4C4()
{
  unint64_t result = qword_1EA407A88;
  if (!qword_1EA407A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A88);
  }
  return result;
}

unint64_t sub_1C66DB510()
{
  unint64_t result = qword_1EA407A98;
  if (!qword_1EA407A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407A98);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedContactMatchRuntimeData.CodingKeys()
{
  return &type metadata for PrivatizedContactMatchRuntimeData.CodingKeys;
}

unsigned char *_s13SiriInference15ForcePromptTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66DB638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactMatchRuntimeData.CodingKeys()
{
  return &type metadata for ContactMatchRuntimeData.CodingKeys;
}

unint64_t sub_1C66DB674()
{
  unint64_t result = qword_1EA407AA0;
  if (!qword_1EA407AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AA0);
  }
  return result;
}

unint64_t sub_1C66DB6C4()
{
  unint64_t result = qword_1EA407AA8;
  if (!qword_1EA407AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AA8);
  }
  return result;
}

unint64_t sub_1C66DB714()
{
  unint64_t result = qword_1EA407AB0;
  if (!qword_1EA407AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AB0);
  }
  return result;
}

unint64_t sub_1C66DB764()
{
  unint64_t result = qword_1EA407AB8;
  if (!qword_1EA407AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AB8);
  }
  return result;
}

unint64_t sub_1C66DB7B4()
{
  unint64_t result = qword_1EA407AC0;
  if (!qword_1EA407AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AC0);
  }
  return result;
}

unint64_t sub_1C66DB804()
{
  unint64_t result = qword_1EA407AC8;
  if (!qword_1EA407AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AC8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_22()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_5_22()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return *(void *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_7_23@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 16) = a1;
  return sub_1C68ED718();
}

uint64_t OUTLINED_FUNCTION_8_27()
{
  return sub_1C68ED7E8();
}

double OUTLINED_FUNCTION_9_20()
{
  int v3 = (double *)(v0 + *(int *)(v1 + 24));
  char v4 = *(unsigned char *)v3;
  double result = v3[1];
  uint64_t v6 = *((void *)v3 + 2);
  *(unsigned char *)(v2 - 88) = v4;
  *(double *)(v2 - 80) = result;
  *(void *)(v2 - 72) = v6;
  *(unsigned char *)(v2 - 89) = 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_17()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  *(unsigned char *)(v0 - 88) = 5;
  return sub_1C68ED718();
}

uint64_t OUTLINED_FUNCTION_13_15()
{
  *(unsigned char *)(v0 - 88) = 4;
  return sub_1C68ED728();
}

uint64_t OUTLINED_FUNCTION_14_18()
{
  return sub_1C68ED758();
}

double OUTLINED_FUNCTION_15_18()
{
  return *(double *)(v0 + *(int *)(v1 + 24) + 8);
}

uint64_t OUTLINED_FUNCTION_16_15()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_19_16@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 16) = a1;
  return sub_1C68ED6F8();
}

uint64_t OUTLINED_FUNCTION_20_14()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_23_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_13()
{
  *(unsigned char *)(v0 - 88) = 1;
  return 0;
}

void OUTLINED_FUNCTION_25_12(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 72) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_29_8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_30_10@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_32_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_6@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 16) = a1;
  return sub_1C68ED6B8();
}

uint64_t OUTLINED_FUNCTION_41_9@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 224) = a1;
  return sub_1C68ED628();
}

uint64_t OUTLINED_FUNCTION_42_7@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 224) = a1;
  return sub_1C68ED5C8();
}

unint64_t OUTLINED_FUNCTION_43_5@<X0>(char a1@<W8>, double a2@<D0>)
{
  *(unsigned char *)uint64_t v3 = a1;
  *(double *)(v3 + 8) = a2;
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v4 - 65) = 3;
  return sub_1C66DB2B0();
}

uint64_t OUTLINED_FUNCTION_45_7(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_1C66DBC1C(uint64_t a1)
{
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v4 = *(void *)(matched - 8);
  uint64_t v5 = MEMORY[0x1F4188790](matched);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)v19 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    v19[1] = v1;
    uint64_t v20 = matched;
    unint64_t v12 = 0;
    uint64_t v21 = a1;
    uint64_t v22 = v10 + 339;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = *(void *)(v4 + 72);
      sub_1C663BD8C(a1 + v13 + v14 * v12, (uint64_t)v10);
      if (v22[*(int *)(matched + 20)] == 1)
      {
        uint64_t v15 = (uint64_t)v7;
        sub_1C663BDF0((uint64_t)v10, (uint64_t)v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C669FB8C(0, *(void *)(v11 + 16) + 1, 1);
        }
        uint64_t v11 = v24;
        unint64_t v17 = *(void *)(v24 + 16);
        unint64_t v16 = *(void *)(v24 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C669FB8C(v16 > 1, v17 + 1, 1);
          uint64_t v11 = v24;
        }
        *(void *)(v11 + 16) = v17 + 1;
        uint64_t v18 = v11 + v13 + v17 * v14;
        uint64_t v7 = (char *)v15;
        uint64_t result = sub_1C663BDF0(v15, v18);
        uint64_t matched = v20;
        a1 = v21;
      }
      else
      {
        uint64_t result = sub_1C65BC11C((uint64_t)v10, type metadata accessor for ContactMatchRuntimeData);
      }
      if (v23 == ++v12)
      {
        uint64_t v11 = v24;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1C66DBE3C(uint64_t a1)
{
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v4 = *(void *)(matched - 8);
  uint64_t v5 = MEMORY[0x1F4188790](matched);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)v19 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    v19[1] = v1;
    uint64_t v20 = matched;
    unint64_t v12 = 0;
    uint64_t v21 = a1;
    uint64_t v22 = v10 + 338;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = *(void *)(v4 + 72);
      sub_1C663BD8C(a1 + v13 + v14 * v12, (uint64_t)v10);
      if (v22[*(int *)(matched + 20)] == 1)
      {
        uint64_t v15 = (uint64_t)v7;
        sub_1C663BDF0((uint64_t)v10, (uint64_t)v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C669FB8C(0, *(void *)(v11 + 16) + 1, 1);
        }
        uint64_t v11 = v24;
        unint64_t v17 = *(void *)(v24 + 16);
        unint64_t v16 = *(void *)(v24 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C669FB8C(v16 > 1, v17 + 1, 1);
          uint64_t v11 = v24;
        }
        *(void *)(v11 + 16) = v17 + 1;
        uint64_t v18 = v11 + v13 + v17 * v14;
        uint64_t v7 = (char *)v15;
        uint64_t result = sub_1C663BDF0(v15, v18);
        uint64_t matched = v20;
        a1 = v21;
      }
      else
      {
        uint64_t result = sub_1C65BC11C((uint64_t)v10, type metadata accessor for ContactMatchRuntimeData);
      }
      if (v23 == ++v12)
      {
        uint64_t v11 = v24;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1C66DC05C(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v22 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v21 = (uint64_t *)(a2 + 56);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    uint64_t v23 = a2;
    do
    {
      uint64_t v5 = *(void *)(a2 + 16);
      if (v5)
      {
        uint64_t v26 = v4;
        uint64_t v6 = 0;
        uint64_t v7 = v21;
        uint64_t v25 = v3;
        uint64_t v8 = (uint64_t *)(v22 + 80 * v3);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        uint64_t v11 = v8[2];
        uint64_t v12 = v8[3];
        while (*(v7 - 3) != v9 || *(v7 - 2) != v10)
        {
          uint64_t v15 = *(v7 - 1);
          uint64_t v14 = *v7;
          if (sub_1C68ED7E8()) {
            break;
          }
          if (v14 && v12)
          {
            BOOL v16 = v15 == v11 && v14 == v12;
            if (v16 || (sub_1C68ED7E8() & 1) != 0) {
              break;
            }
          }
          v7 += 10;
          if (v5 == ++v6)
          {
            a2 = v23;
            uint64_t v4 = v26;
            goto LABEL_24;
          }
        }
        uint64_t v4 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C65C8084();
          uint64_t v4 = v18;
        }
        unint64_t v17 = *(void *)(v4 + 16);
        if (v17 >= *(void *)(v4 + 24) >> 1)
        {
          sub_1C65C8084();
          uint64_t v4 = v19;
        }
        *(void *)(v4 + 16) = v17 + 1;
        *(void *)(v4 + 8 * v17 + 32) = v6;
        a2 = v23;
LABEL_24:
        uint64_t v3 = v25;
      }
      ++v3;
    }
    while (v3 != v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C66DC228(uint64_t *a1, uint64_t (*a2)(void *))
{
  uint64_t v4 = *(void *)(type metadata accessor for ContactMatchRuntimeData(0) - 8);
  uint64_t v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C676B13C();
    uint64_t v5 = v6;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  v9[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9[1] = v7;
  uint64_t result = a2(v9);
  *a1 = v5;
  return result;
}

uint64_t sub_1C66DC2E0()
{
  uint64_t v1 = sub_1C68EDA38();
  sub_1C68ECA18();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C66DC37C()
{
  uint64_t v1 = sub_1C68EDA38();
  sub_1C68ECA18();
  sub_1C68ECA18();
  return v1;
}

uint64_t sub_1C66DC3E8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, unsigned int a6@<W5>, _OWORD *a7@<X8>)
{
  HIDWORD(v256) = a5;
  uint64_t v257 = __PAIR64__(a3, a6);
  HIDWORD(v263) = a4;
  uint64_t v262 = a2;
  v259 = a7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v260 = (uint64_t)&v255 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContactMatchRuntimeData(0) - 8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  v266 = (NSObject **)((char *)&v255 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v267 = (char *)&v255 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t)&v255 - v15;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  v264 = a1;
  uint64_t v272 = *(void *)(*((void *)a1 + 37) + 16);
  uint64_t v261 = v18;
  if (v272)
  {
    OUTLINED_FUNCTION_3_26();
    uint64_t v270 = v19;
    v275.n128_u64[0] = *v20;
    uint64_t v274 = v275.n128_u64[0] + 16;
    uint64_t v269 = *(void *)(v21 + 72);
    uint64_t v258 = v22;
    swift_bridgeObjectRetain_n();
    uint64_t v23 = 0;
    long long v265 = xmmword_1C68F0550;
    __n128 v276 = (__n128)xmmword_1C68EF950;
    unint64_t v268 = v16;
    do
    {
      sub_1C663BD8C(v270 + v269 * v23, v16);
      uint64_t v25 = *(void *)v16;
      uint64_t v24 = *(void *)(v16 + 8);
      uint64_t v26 = *(void *)(v16 + *(int *)(type metadata accessor for Contact() + 80));
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v278 = v25;
        uint64_t v273 = v23;
        uint64_t v271 = v17;
        unint64_t v284 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        uint64_t v279 = v24;
        OUTLINED_FUNCTION_7_24();
        uint64_t v28 = v284;
        os_log_t v277 = (os_log_t)sub_1C65C74BC();
        uint64_t v29 = (uint64_t *)(v26 + 96);
        do
        {
          uint64_t v280 = v28;
          uint64_t v30 = *v29;
          v282[0] = *(v29 - 1);
          v282[1] = v30;
          OUTLINED_FUNCTION_5_23();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          if (sub_1C68ED198())
          {
            sub_1C68EC868();
            uint64_t v31 = OUTLINED_FUNCTION_11_18();
            id v33 = (id)v32(v31);

            uint64_t v34 = sub_1C68EC898();
            unint64_t v36 = v35;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_3();
          }
          else
          {
            id v37 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
            swift_bridgeObjectRetain();
            uint64_t v38 = (void *)sub_1C68EC868();
            swift_bridgeObjectRelease();
            id v39 = objc_msgSend(v37, sel_initWithStringValue_, v38);

            uint64_t v40 = sub_1C6684194(v39);
            unint64_t v42 = v41;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_3();
            if (v42) {
              uint64_t v34 = v40;
            }
            else {
              uint64_t v34 = 0;
            }
            if (v42) {
              unint64_t v36 = v42;
            }
            else {
              unint64_t v36 = 0xE000000000000000;
            }
          }
          uint64_t v43 = v279;
          uint64_t v28 = v280;
          unint64_t v284 = v280;
          unint64_t v45 = *(void *)(v280 + 16);
          unint64_t v44 = *(void *)(v280 + 24);
          if (v45 >= v44 >> 1)
          {
            sub_1C669FE70(v44 > 1, v45 + 1, 1);
            uint64_t v43 = v279;
            uint64_t v28 = v284;
          }
          *(void *)(v28 + 16) = v45 + 1;
          uint64_t v46 = (void *)(v28 + 80 * v45);
          v46[4] = v278;
          v46[5] = v43;
          v46[6] = v34;
          v46[7] = v36;
          OUTLINED_FUNCTION_6_22((uint64_t)v46, v276);
          v29 += 10;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
        uint64_t v17 = v271;
        uint64_t v16 = v268;
        uint64_t v23 = v273;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406498);
        uint64_t v28 = swift_allocObject();
        OUTLINED_FUNCTION_0_35(v28);
      }
      sub_1C65BC11C(v16, type metadata accessor for ContactMatchRuntimeData);
      uint64_t v47 = *(void *)(v28 + 16);
      uint64_t v48 = *(void *)(v17 + 16);
      if (__OFADD__(v48, v47))
      {
        __break(1u);
LABEL_225:
        __break(1u);
LABEL_226:
        __break(1u);
LABEL_227:
        __break(1u);
        goto LABEL_228;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v48 + v47 > *(void *)(v17 + 24) >> 1)
      {
        sub_1C65C80C4();
        uint64_t v17 = v49;
      }
      if (*(void *)(v28 + 16))
      {
        if ((*(void *)(v17 + 24) >> 1) - *(void *)(v17 + 16) < v47) {
          goto LABEL_229;
        }
        OUTLINED_FUNCTION_10_19();
        BOOL v52 = v52 || v50 >= v51;
        if (!v52) {
          goto LABEL_238;
        }
        swift_arrayInitWithCopy();
        if (v47)
        {
          uint64_t v53 = *(void *)(v17 + 16);
          BOOL v54 = __OFADD__(v53, v47);
          uint64_t v55 = v53 + v47;
          if (v54) {
            goto LABEL_231;
          }
          *(void *)(v17 + 16) = v55;
        }
      }
      else if (v47)
      {
        goto LABEL_225;
      }
      ++v23;
      swift_bridgeObjectRelease();
    }
    while (v23 != v272);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v56 = swift_bridgeObjectRetain();
  v282[0] = sub_1C66DBC1C(v56);
  swift_bridgeObjectRetain();
  sub_1C66DC228(v282, (uint64_t (*)(void *))sub_1C66DE974);
  uint64_t v258 = 0;
  swift_bridgeObjectRelease();
  uint64_t v270 = *(void *)(v282[0] + 16);
  uint64_t v271 = v17;
  if (v270)
  {
    OUTLINED_FUNCTION_3_26();
    uint64_t v269 = v57;
    v275.n128_u64[0] = *MEMORY[0x1E4F5A1E0];
    uint64_t v274 = v275.n128_u64[0] + 16;
    unint64_t v268 = *(void *)(v58 + 72);
    uint64_t v255 = v59;
    swift_retain();
    uint64_t v16 = 0;
    long long v265 = xmmword_1C68F0550;
    __n128 v276 = (__n128)xmmword_1C68EF950;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    int v60 = (uint64_t *)v267;
    do
    {
      uint64_t v272 = v27;
      sub_1C663BD8C(v269 + v268 * v16, (uint64_t)v60);
      uint64_t v62 = *v60;
      uint64_t v61 = v60[1];
      uint64_t v63 = *(uint64_t *)((char *)v60 + *(int *)(type metadata accessor for Contact() + 80));
      uint64_t v64 = *(void *)(v63 + 16);
      if (v64)
      {
        uint64_t v273 = v16;
        unint64_t v284 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        uint64_t v279 = v61;
        OUTLINED_FUNCTION_7_24();
        uint64_t v65 = v284;
        os_log_t v277 = (os_log_t)sub_1C65C74BC();
        uint64_t v278 = v62;
        uint64_t v66 = (uint64_t *)(v63 + 96);
        do
        {
          uint64_t v280 = v65;
          uint64_t v67 = *v66;
          v282[0] = *(v66 - 1);
          v282[1] = v67;
          OUTLINED_FUNCTION_5_23();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          if (sub_1C68ED198())
          {
            sub_1C68EC868();
            uint64_t v68 = OUTLINED_FUNCTION_11_18();
            id v70 = (id)v69(v68);

            uint64_t v71 = sub_1C68EC898();
            unint64_t v73 = v72;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_3();
          }
          else
          {
            id v74 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
            swift_bridgeObjectRetain();
            int v75 = (void *)sub_1C68EC868();
            swift_bridgeObjectRelease();
            id v76 = objc_msgSend(v74, sel_initWithStringValue_, v75);

            uint64_t v77 = sub_1C6684194(v76);
            unint64_t v79 = v78;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_3();
            if (v79) {
              uint64_t v71 = v77;
            }
            else {
              uint64_t v71 = 0;
            }
            if (v79) {
              unint64_t v73 = v79;
            }
            else {
              unint64_t v73 = 0xE000000000000000;
            }
          }
          uint64_t v80 = v279;
          uint64_t v65 = v280;
          unint64_t v284 = v280;
          unint64_t v82 = *(void *)(v280 + 16);
          unint64_t v81 = *(void *)(v280 + 24);
          if (v82 >= v81 >> 1)
          {
            sub_1C669FE70(v81 > 1, v82 + 1, 1);
            uint64_t v80 = v279;
            uint64_t v65 = v284;
          }
          *(void *)(v65 + 16) = v82 + 1;
          uint64_t v83 = (void *)(v65 + 80 * v82);
          v83[4] = v278;
          v83[5] = v80;
          v83[6] = v71;
          v83[7] = v73;
          OUTLINED_FUNCTION_6_22((uint64_t)v83, v276);
          v66 += 10;
          --v64;
        }
        while (v64);
        swift_bridgeObjectRelease();
        uint64_t v17 = v271;
        int v60 = (uint64_t *)v267;
        uint64_t v16 = v273;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406498);
        uint64_t v65 = swift_allocObject();
        OUTLINED_FUNCTION_0_35(v65);
      }
      sub_1C65BC11C((uint64_t)v60, type metadata accessor for ContactMatchRuntimeData);
      uint64_t v84 = *(void *)(v65 + 16);
      uint64_t v27 = v272;
      uint64_t v85 = *(void *)(v272 + 16);
      if (__OFADD__(v85, v84)) {
        goto LABEL_226;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v85 + v84 > *(void *)(v27 + 24) >> 1)
      {
        sub_1C65C80C4();
        uint64_t v27 = v86;
      }
      if (*(void *)(v65 + 16))
      {
        if ((*(void *)(v27 + 24) >> 1) - *(void *)(v27 + 16) < v84) {
          goto LABEL_230;
        }
        OUTLINED_FUNCTION_10_19();
        if (!v52 && v87 < v88) {
          goto LABEL_238;
        }
        swift_arrayInitWithCopy();
        if (v84)
        {
          uint64_t v90 = *(void *)(v27 + 16);
          BOOL v54 = __OFADD__(v90, v84);
          uint64_t v91 = v90 + v84;
          if (v54) {
            goto LABEL_232;
          }
          *(void *)(v27 + 16) = v91;
        }
      }
      else if (v84)
      {
        goto LABEL_227;
      }
      ++v16;
      swift_bridgeObjectRelease();
    }
    while (v16 != v270);
    swift_release_n();
  }
  else
  {
    swift_release();
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  uint64_t v92 = swift_bridgeObjectRetain();
  uint64_t v93 = v258;
  v282[0] = sub_1C66DBE3C(v92);
  swift_bridgeObjectRetain();
  sub_1C66DC228(v282, (uint64_t (*)(void *))sub_1C66DDFD0);
  uint64_t v258 = v93;
  if (!v93)
  {
    swift_bridgeObjectRelease();
    unint64_t v284 = MEMORY[0x1E4FBC860];
    uint64_t v94 = *(void *)(v282[0] + 16);
    uint64_t v272 = v27;
    uint64_t v269 = v94;
    if (v94)
    {
      OUTLINED_FUNCTION_3_26();
      unint64_t v268 = v95;
      uint64_t v274 = *MEMORY[0x1E4F5A1E0];
      uint64_t v273 = v274 + 16;
      v267 = *(char **)(v96 + 72);
      uint64_t v261 = v97;
      swift_retain();
      uint64_t v98 = 0;
      long long v265 = xmmword_1C68F0550;
      __n128 v275 = (__n128)xmmword_1C68EF950;
      uint64_t v99 = v266;
      do
      {
        sub_1C663BD8C(v268 + (void)v267 * v98, (uint64_t)v99);
        uint64_t v101 = *v99;
        uint64_t v100 = v99[1];
        uint64_t v102 = *(uint64_t *)((char *)v99 + *(int *)(type metadata accessor for Contact() + 80));
        uint64_t v103 = *(void *)(v102 + 16);
        if (v103)
        {
          uint64_t v270 = v98;
          uint64_t v283 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_7_24();
          uint64_t v104 = v283;
          v276.n128_u64[0] = sub_1C65C74BC();
          uint64_t v105 = (uint64_t *)(v102 + 96);
          os_log_t v277 = v101;
          uint64_t v278 = (uint64_t)v100;
          do
          {
            uint64_t v280 = v104;
            uint64_t v106 = *(v105 - 7);
            uint64_t v107 = *v105;
            v282[0] = *(v105 - 1);
            v282[1] = v107;
            v281[0] = 64;
            v281[1] = 0xE100000000000000;
            swift_bridgeObjectRetain();
            uint64_t v279 = v106;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            if (sub_1C68ED198())
            {
              uint64_t v108 = (void *)sub_1C68EC868();
              id v109 = (id)(*(uint64_t (**)(uint64_t, void *))(v274 + 16))(v274, v108);

              uint64_t v110 = sub_1C68EC898();
              unint64_t v112 = v111;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              id v113 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
              swift_bridgeObjectRetain();
              uint64_t v114 = (void *)sub_1C68EC868();
              swift_bridgeObjectRelease();
              id v115 = objc_msgSend(v113, sel_initWithStringValue_, v114);

              uint64_t v116 = sub_1C6684194(v115);
              unint64_t v112 = v117;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              if (v112) {
                uint64_t v110 = v116;
              }
              else {
                uint64_t v110 = 0;
              }
              if (!v112) {
                unint64_t v112 = 0xE000000000000000;
              }
            }
            uint64_t v104 = v280;
            uint64_t v283 = v280;
            unint64_t v119 = *(void *)(v280 + 16);
            unint64_t v118 = *(void *)(v280 + 24);
            os_log_t v120 = v277;
            if (v119 >= v118 >> 1)
            {
              sub_1C669FE70(v118 > 1, v119 + 1, 1);
              uint64_t v104 = v283;
            }
            *(void *)(v104 + 16) = v119 + 1;
            uint64_t v121 = (void *)(v104 + 80 * v119);
            uint64_t v122 = v278;
            v121[4] = v120;
            v121[5] = v122;
            v121[6] = v110;
            v121[7] = v112;
            OUTLINED_FUNCTION_6_22((uint64_t)v121, v275);
            v105 += 10;
            --v103;
          }
          while (v103);
          swift_bridgeObjectRelease();
          uint64_t v98 = v270;
          uint64_t v17 = v271;
          uint64_t v99 = v266;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406498);
          uint64_t v123 = swift_allocObject();
          *(_OWORD *)(v123 + 16) = v265;
          *(void *)(v123 + 32) = v101;
          *(void *)(v123 + 40) = v100;
          *(void *)(v123 + 48) = 0;
          *(void *)(v123 + 56) = 0;
          *(void *)(v123 + 64) = 0;
          *(void *)(v123 + 72) = 1;
          *(_OWORD *)(v123 + 80) = 0u;
          *(_OWORD *)(v123 + 96) = 0u;
          swift_bridgeObjectRetain();
        }
        ++v98;
        sub_1C65BC11C((uint64_t)v99, type metadata accessor for ContactMatchRuntimeData);
        sub_1C65C7934();
      }
      while (v98 != v269);
      swift_release_n();
      v275.n128_u64[0] = v284;
      uint64_t v27 = v272;
    }
    else
    {
      swift_release();
      v275.n128_u64[0] = MEMORY[0x1E4FBC860];
    }
    uint64_t v124 = v260;
    sub_1C66C5B3C(v262, v260);
    uint64_t v125 = type metadata accessor for StitchableInteraction();
    if (__swift_getEnumTagSinglePayload(v124, 1, v125) == 1)
    {
      sub_1C66C6EE4(v124);
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v16 = *(void *)(v124 + *(int *)(v125 + 36));
      swift_bridgeObjectRetain();
      sub_1C65BC11C(v124, (uint64_t (*)(void))type metadata accessor for StitchableInteraction);
    }
    if (qword_1EBBF5DA0 != -1) {
      goto LABEL_233;
    }
    while (1)
    {
      uint64_t v126 = sub_1C68EC478();
      uint64_t v127 = __swift_project_value_buffer(v126, (uint64_t)&unk_1EBBF7A68);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v128 = sub_1C68EC458();
      os_log_type_t v129 = sub_1C68ECE48();
      int v130 = v129;
      if (os_log_type_enabled(v128, v129))
      {
        uint64_t v131 = swift_slowAlloc();
        LODWORD(v278) = v130;
        uint64_t v132 = v131;
        uint64_t v279 = swift_slowAlloc();
        v282[0] = v279;
        *(_DWORD *)uint64_t v132 = 136315906;
        uint64_t v133 = swift_bridgeObjectRetain();
        uint64_t v134 = MEMORY[0x1C87A3B40](v133, &unk_1F21840B8);
        uint64_t v280 = v127;
        os_log_t v277 = v128;
        uint64_t v135 = v16;
        uint64_t v137 = v136;
        swift_bridgeObjectRelease();
        sub_1C65B4078(v134, v137, (uint64_t)v282, v138, v139, v140, v141, v142, v255, v256, v257, v258, (uint64_t)v259, v260, v261, v262, v263, (uint64_t)v264, v265,
          *((uint64_t *)&v265 + 1));
        v281[0] = v143;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v132 + 12) = 2080;
        uint64_t v144 = swift_bridgeObjectRetain();
        uint64_t v145 = MEMORY[0x1C87A3B40](v144, &unk_1F21840B8);
        uint64_t v147 = v146;
        swift_bridgeObjectRelease();
        sub_1C65B4078(v145, v147, (uint64_t)v282, v148, v149, v150, v151, v152, v255, v256, v257, v258, (uint64_t)v259, v260, v261, v262, v263, (uint64_t)v264, v265,
          *((uint64_t *)&v265 + 1));
        v281[0] = v153;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v132 + 22) = 2080;
        uint64_t v154 = swift_bridgeObjectRetain();
        uint64_t v155 = MEMORY[0x1C87A3B40](v154, &unk_1F21840B8);
        uint64_t v157 = v156;
        swift_bridgeObjectRelease();
        sub_1C65B4078(v155, v157, (uint64_t)v282, v158, v159, v160, v161, v162, v255, v256, v257, v258, (uint64_t)v259, v260, v261, v262, v263, (uint64_t)v264, v265,
          *((uint64_t *)&v265 + 1));
        OUTLINED_FUNCTION_9_21(v163);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v132 + 32) = 2080;
        uint64_t v164 = swift_bridgeObjectRetain();
        uint64_t v165 = MEMORY[0x1C87A3B40](v164, &unk_1F21840B8);
        uint64_t v167 = v166;
        swift_bridgeObjectRelease();
        sub_1C65B4078(v165, v167, (uint64_t)v282, v168, v169, v170, v171, v172, v255, v256, v257, v258, (uint64_t)v259, v260, v261, v262, v263, (uint64_t)v264, v265,
          *((uint64_t *)&v265 + 1));
        OUTLINED_FUNCTION_9_21(v173);
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v135;
        swift_bridgeObjectRelease();
        os_log_t v174 = v277;
        _os_log_impl(&dword_1C65AE000, v277, (os_log_type_t)v278, "allPersons=%s\nnlxPersons=%s\nstdPersons=%s\ncorrectPersons=%s", (uint8_t *)v132, 0x2Au);
        uint64_t v175 = v279;
        swift_arrayDestroy();
        MEMORY[0x1C87A54F0](v175, -1, -1);
        MEMORY[0x1C87A54F0](v132, -1, -1);
      }
      else
      {

        OUTLINED_FUNCTION_4_3();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      if ((v263 & 0x100000000) != 0 && !*(void *)(v16 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v201 = sub_1C68EC458();
        os_log_type_t v202 = sub_1C68ECE58();
        if (os_log_type_enabled(v201, v202))
        {
          uint64_t v203 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v203 = 0;
          _os_log_impl(&dword_1C65AE000, v201, v202, "task is successful but has no StitchablePersons.", v203, 2u);
          MEMORY[0x1C87A54F0](v203, -1, -1);
        }

        sub_1C66DDD48(0xD00000000000008CLL, 0x80000001C6916300, 0xD00000000000006FLL, 0x80000001C6916390, 92);
        sub_1C66C6EE4(v262);
        uint64_t result = sub_1C65BC11C((uint64_t)v264, type metadata accessor for ContactResolverRunTimeData);
        unsigned __int8 v205 = v259;
        _OWORD *v259 = xmmword_1C68F80E0;
        v205[1] = 0u;
        v205[2] = 0u;
        v205[3] = 0u;
        v205[4] = 0u;
        *((void *)v205 + 10) = 0;
        return result;
      }
      uint64_t v176 = v264;
      memcpy(v282, v264, sizeof(v282));
      uint64_t v270 = LOBYTE(v282[31]);
      memcpy(v281, v264, sizeof(v281));
      sub_1C65B537C(v282);
      uint64_t v273 = sub_1C6692BB8(v281);
      uint64_t v177 = type metadata accessor for ContactResolverRunTimeData(0);
      uint64_t v274 = sub_1C66B3FE4();
      LODWORD(v269) = v176[*(int *)(v177 + 48)];
      if ((v263 & 0x100000000) != 0)
      {
        os_log_t v277 = *(os_log_t *)(v16 + 16);
        if (v277)
        {
          os_log_t v178 = 0;
          uint64_t v279 = v16 + 32;
          uint64_t v280 = v16;
          uint64_t v179 = *(void *)(v17 + 16);
          v276.n128_u64[0] = v17 + 56;
          uint64_t v278 = v179;
          while (!v179)
          {
LABEL_117:
            os_log_t v178 = (os_log_t)((char *)v178 + 1);
            uint64_t v27 = v272;
            uint64_t v179 = v278;
            if (v178 == v277)
            {
              char v189 = 0;
              goto LABEL_121;
            }
          }
          uint64_t v180 = v278;
          uint64_t v181 = (uint64_t *)(v279 + 80 * (void)v178);
          uint64_t v177 = *v181;
          uint64_t v176 = (unsigned __int8 *)v181[1];
          uint64_t v182 = v181[2];
          uint64_t v183 = v181[3];
          int v184 = (uint64_t *)v276.n128_u64[0];
          while (1)
          {
            BOOL v185 = *(v184 - 3) == v177 && *(v184 - 2) == (void)v176;
            if (v185) {
              break;
            }
            uint64_t v187 = *(v184 - 1);
            uint64_t v186 = *v184;
            if (OUTLINED_FUNCTION_2_31()) {
              break;
            }
            if (v186 && v183)
            {
              BOOL v188 = v187 == v182 && v186 == v183;
              if (v188 || (OUTLINED_FUNCTION_1_38() & 1) != 0) {
                break;
              }
            }
            v184 += 10;
            if (!--v180) {
              goto LABEL_117;
            }
          }
          char v189 = 1;
          uint64_t v27 = v272;
LABEL_121:
          uint64_t v16 = v280;
          uint64_t v191 = *(NSObject **)(v280 + 16);
          char v287 = v189;
          uint64_t v17 = v271;
          os_log_t v277 = v191;
          if (v191)
          {
            uint64_t v192 = 0;
            uint64_t v278 = *(void *)(v27 + 16);
            v276.n128_u64[0] = v27 + 56;
            while (1)
            {
              char v193 = ((char *)&v192->isa + 1);
              if (__OFADD__(v192, 1)) {
                goto LABEL_236;
              }
              if (v278) {
                break;
              }
LABEL_139:
              uint64_t v192 = v193;
              uint64_t v17 = v271;
              uint64_t v27 = v272;
              uint64_t v16 = v280;
              if (v193 == v277)
              {
                int v200 = 0;
LABEL_145:
                uint64_t v206 = *(void *)(v16 + 16);
                LODWORD(v277) = v200;
                HIBYTE(v286) = v200;
                uint64_t v271 = v206;
                if (v206)
                {
                  unint64_t v207 = 0;
                  uint64_t v278 = *(void *)(v275.n128_u64[0] + 16);
                  unint64_t v268 = v275.n128_u64[0] + 56;
                  do
                  {
                    v276.n128_u64[0] = v207 + 1;
                    if (__OFADD__(v207, 1)) {
                      goto LABEL_237;
                    }
                    if (v278)
                    {
                      uint64_t v208 = v278;
                      OUTLINED_FUNCTION_8_28();
                      long long v209 = (uint64_t *)v268;
                      while (*(v209 - 3) != v177 || *(v209 - 2) != (void)v176)
                      {
                        uint64_t v212 = *(v209 - 1);
                        uint64_t v211 = *v209;
                        if (OUTLINED_FUNCTION_2_31()) {
                          break;
                        }
                        if (v211 && v16)
                        {
                          BOOL v213 = v212 == v27 && v211 == v16;
                          if (v213 || (OUTLINED_FUNCTION_1_38() & 1) != 0) {
                            break;
                          }
                        }
                        v209 += 10;
                        if (!--v208) {
                          goto LABEL_163;
                        }
                      }
                      LOBYTE(v286) = 1;
                      HIBYTE(v285) = 0;
                      char v214 = v277 ^ 1;
                      uint64_t v27 = v272;
                      uint64_t v16 = v280;
                      goto LABEL_170;
                    }
LABEL_163:
                    unint64_t v207 = v276.n128_u64[0];
                    uint64_t v27 = v272;
                    uint64_t v16 = v280;
                  }
                  while (v276.n128_u64[0] != v271);
                }
                LOBYTE(v286) = 0;
                if ((v277 & 1) == 0) {
                  goto LABEL_168;
                }
                char v214 = 0;
                HIBYTE(v285) = 1;
                goto LABEL_170;
              }
            }
            uint64_t v194 = v278;
            OUTLINED_FUNCTION_8_28();
            uint64_t v195 = (uint64_t *)v276.n128_u64[0];
            while (*(v195 - 3) != v177 || *(v195 - 2) != (void)v176)
            {
              uint64_t v198 = *(v195 - 1);
              uint64_t v197 = *v195;
              if (OUTLINED_FUNCTION_2_31()) {
                break;
              }
              if (v197 && v16)
              {
                BOOL v199 = v198 == v27 && v197 == v16;
                if (v199 || (OUTLINED_FUNCTION_1_38() & 1) != 0) {
                  break;
                }
              }
              v195 += 10;
              if (!--v194) {
                goto LABEL_139;
              }
            }
            int v200 = 1;
            uint64_t v17 = v271;
            uint64_t v27 = v272;
            uint64_t v16 = v280;
            goto LABEL_145;
          }
        }
        else
        {
          char v287 = 0;
        }
        __int16 v286 = 0;
LABEL_168:
        char v214 = 0;
        HIBYTE(v285) = 0;
LABEL_170:
        LOBYTE(v285) = v214;
        swift_bridgeObjectRetain();
        uint64_t v215 = v258;
        uint64_t v216 = (void *)sub_1C66DC05C(v16, v27);
        uint64_t v217 = sub_1C6727CF8(v216);
        char v219 = v218;
        swift_bridgeObjectRelease();
        BOOL v185 = (v219 & 1) == 0;
        uint64_t v27 = v272;
        uint64_t v220 = v185 ? v217 : -1;
        uint64_t v271 = v220;
        uint64_t v221 = v275.n128_u64[0];
        swift_bridgeObjectRetain();
        v222 = (void *)sub_1C66DC05C(v16, v221);
        uint64_t v258 = v215;
        uint64_t v223 = sub_1C6727CF8(v222);
        char v225 = v224;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v190 = (v225 & 1) != 0 ? -1 : v223;
      }
      else
      {
        swift_bridgeObjectRelease();
        char v287 = 0;
        __int16 v286 = 0;
        __int16 v285 = 0;
        uint64_t v190 = -1;
        uint64_t v271 = -1;
      }
      unint64_t v268 = v190;
      v267 = *(char **)(v17 + 16);
      swift_bridgeObjectRelease();
      uint64_t v279 = *(void *)(v27 + 16);
      uint64_t v226 = 0;
      uint64_t v17 = 0;
      if (!v279) {
        break;
      }
      unint64_t v227 = *(void *)(v275.n128_u64[0] + 16);
      os_log_t v277 = (os_log_t)(v275.n128_u64[0] + 56);
      uint64_t v278 = v27 + 32;
      v276.n128_u64[0] = v227;
      while (1)
      {
        if (v227)
        {
          uint64_t v280 = v17;
          v228 = (uint64_t *)v277;
          v229 = (uint64_t *)(v278 + 80 * v226);
          uint64_t v230 = *v229;
          uint64_t v231 = v229[1];
          uint64_t v232 = v229[2];
          uint64_t v233 = v229[3];
          while (*(v228 - 3) != v230 || *(v228 - 2) != v231)
          {
            uint64_t v235 = *(v228 - 1);
            uint64_t v16 = *v228;
            if (OUTLINED_FUNCTION_2_31()) {
              break;
            }
            if (v16 && v233)
            {
              BOOL v236 = v235 == v232 && v16 == v233;
              if (v236 || (sub_1C68ED7E8() & 1) != 0) {
                break;
              }
            }
            v228 += 10;
            if (!--v227)
            {
              uint64_t v237 = 0;
              goto LABEL_195;
            }
          }
          uint64_t v237 = 1;
LABEL_195:
          uint64_t v27 = v272;
          uint64_t v17 = v280;
          unint64_t v227 = v276.n128_u64[0];
        }
        else
        {
          uint64_t v237 = 0;
        }
        BOOL v54 = __OFADD__(v17, v237);
        v17 += v237;
        if (v54) {
          break;
        }
        if (++v226 == v279)
        {
          uint64_t v226 = *(void *)(v27 + 16);
          goto LABEL_200;
        }
      }
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      swift_once();
    }
LABEL_200:
    uint64_t v238 = *(void *)(v275.n128_u64[0] + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (__OFSUB__(v226, v17))
    {
      __break(1u);
    }
    else
    {
      sub_1C66C6EE4(v262);
      sub_1C65BC11C((uint64_t)v264, type metadata accessor for ContactResolverRunTimeData);
      if (!__OFSUB__(v238, v17))
      {
        int v239 = v285;
        uint64_t v240 = 0x10000;
        if ((v263 & 0x100000000) != 0) {
          uint64_t v241 = 0x10000;
        }
        else {
          uint64_t v241 = 0;
        }
        unint64_t v242 = v270 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)v274 << 8) | v241;
        if ((v256 & 0x100000000) != 0) {
          uint64_t v243 = 0x1000000;
        }
        else {
          uint64_t v243 = 0;
        }
        uint64_t v244 = 0x100000000;
        if ((v257 & 1) == 0) {
          uint64_t v244 = 0;
        }
        unint64_t v245 = v242 | v243 | v244;
        uint64_t v246 = 0x10000000000;
        if ((v257 & 0x100000000) == 0) {
          uint64_t v246 = 0;
        }
        uint64_t result = 0x1000000000000;
        if (!v269) {
          uint64_t result = 0;
        }
        uint64_t v247 = v245 | v246 | result;
        uint64_t v248 = 0x100000000000000;
        if (!v287) {
          uint64_t v248 = 0;
        }
        uint64_t v249 = v247 | v248;
        uint64_t v250 = 256;
        if (!(_BYTE)v286) {
          uint64_t v250 = 0;
        }
        uint64_t v251 = v250 | HIBYTE(v286);
        if (!HIBYTE(v285)) {
          uint64_t v240 = 0;
        }
        v252 = v259;
        *(void *)v259 = v273;
        v252[1] = v249;
        if (v239) {
          uint64_t v253 = 0x1000000;
        }
        else {
          uint64_t v253 = 0;
        }
        v252[2] = v251 | v240 | v253;
        v252[3] = v267;
        v252[4] = v17;
        v252[5] = v226;
        v252[6] = v238;
        v252[7] = v226 - v17;
        v252[8] = v238 - v17;
        unint64_t v254 = v268;
        v252[9] = v271;
        v252[10] = v254;
        return result;
      }
    }
    __break(1u);
LABEL_236:
    __break(1u);
LABEL_237:
    __break(1u);
LABEL_238:
    sub_1C68ED568();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C66DDB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = a6 & 1;
  uint64_t v8 = (void *)sub_1C68EC868();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF6620);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0410;
  *(void *)(inited + 32) = 0x6449726F727265;
  *(void *)(inited + 40) = 0xE700000000000000;
  sub_1C66DC2E0();
  uint64_t v10 = sub_1C68EC868();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = 1701603686;
  *(void *)(inited + 64) = 0xE400000000000000;
  *(void *)(inited + 72) = sub_1C68EC868();
  *(void *)(inited + 80) = 0x6E6F6974636E7566;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = sub_1C68EC868();
  *(void *)(inited + 104) = 1701734764;
  *(void *)(inited + 112) = 0xE400000000000000;
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a5);
  sub_1C65ED460();
  sub_1C68EC748();
  uint64_t v11 = (void *)sub_1C68EC708();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

  return v7;
}

void sub_1C66DDD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = (void *)sub_1C68EC868();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF6620);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0410;
  *(void *)(inited + 32) = 0x6449726F727265;
  *(void *)(inited + 40) = 0xE700000000000000;
  sub_1C66DC37C();
  uint64_t v8 = sub_1C68EC868();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = 1701603686;
  *(void *)(inited + 64) = 0xE400000000000000;
  *(void *)(inited + 72) = sub_1C68EC868();
  *(void *)(inited + 80) = 0x6E6F6974636E7566;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = sub_1C68EC868();
  *(void *)(inited + 104) = 1701734764;
  *(void *)(inited + 112) = 0xE400000000000000;
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a5);
  sub_1C65ED460();
  sub_1C68EC748();
  uint64_t v9 = (void *)sub_1C68EC708();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

BOOL sub_1C66DDEF8()
{
  uint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

unint64_t sub_1C66DDF40()
{
  return 0xD000000000000018;
}

BOOL sub_1C66DDF68@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C66DDEF8();
  *a1 = result;
  return result;
}

unint64_t sub_1C66DDFA0@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1C66DDF40();
  *a1 = 0xD000000000000018;
  a1[1] = v3;
  return result;
}

void sub_1C66DDFD0(uint64_t *a1)
{
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v136 = *(void *)(matched - 8);
  uint64_t v3 = MEMORY[0x1F4188790](matched);
  uint64_t v133 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v144 = (uint64_t)&v127 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v141 = (uint64_t)&v127 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v140 = (uint64_t)&v127 - v9;
  uint64_t v10 = a1[1];
  uint64_t v11 = sub_1C68ED798();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10) {
        sub_1C66DF348(0, v10, 1, a1);
      }
      return;
    }
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  uint64_t v12 = v11;
  uint64_t v137 = v1;
  uint64_t v142 = a1;
  uint64_t v129 = sub_1C666E4CC(v10 / 2);
  unint64_t v135 = v13;
  if (v10 > 0)
  {
    uint64_t v128 = v12;
    uint64_t v14 = 0;
    uint64_t v15 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v16 = v10;
    uint64_t v131 = v10;
    while (1)
    {
      uint64_t v17 = v14;
      uint64_t v18 = v14 + 1;
      if (v14 + 1 >= v16)
      {
        ++v14;
        uint64_t v19 = v142;
      }
      else
      {
        uint64_t v19 = v142;
        uint64_t v20 = *v142;
        uint64_t v21 = *(void *)(v136 + 72);
        uint64_t v22 = v140;
        sub_1C663BD8C(*v142 + v21 * v18, v140);
        uint64_t v139 = v16;
        uint64_t v23 = v141;
        sub_1C663BD8C(v20 + v21 * v14, v141);
        uint64_t v24 = *(int *)(matched + 32);
        double v25 = *(double *)(v22 + v24);
        double v26 = *(double *)(v23 + v24);
        uint64_t v27 = v23;
        uint64_t v16 = v139;
        sub_1C65BC11C(v27, type metadata accessor for ContactMatchRuntimeData);
        sub_1C65BC11C(v22, type metadata accessor for ContactMatchRuntimeData);
        v14 += 2;
        uint64_t v138 = v20;
        uint64_t v145 = v21;
        if (v17 + 2 < v16)
        {
          uint64_t v134 = v17;
          int v130 = v15;
          uint64_t v28 = v21 * v18;
          uint64_t v29 = v20;
          uint64_t v30 = v21 * v14;
          while (1)
          {
            uint64_t v31 = v14;
            uint64_t v32 = v140;
            sub_1C663BD8C(v29 + v30, v140);
            uint64_t v33 = v141;
            sub_1C663BD8C(v29 + v28, v141);
            BOOL v34 = *(double *)(v33 + *(int *)(matched + 32)) >= *(double *)(v32 + *(int *)(matched + 32));
            sub_1C65BC11C(v33, type metadata accessor for ContactMatchRuntimeData);
            sub_1C65BC11C(v32, type metadata accessor for ContactMatchRuntimeData);
            if (v26 < v25 == v34) {
              break;
            }
            ++v14;
            v29 += v145;
            if (v31 + 1 >= v139)
            {
              uint64_t v16 = v139;
              uint64_t v14 = v139;
              uint64_t v15 = v130;
              uint64_t v19 = v142;
              uint64_t v17 = v134;
              goto LABEL_12;
            }
          }
          uint64_t v15 = v130;
          uint64_t v19 = v142;
          uint64_t v17 = v134;
          uint64_t v16 = v139;
        }
LABEL_12:
        if (v26 < v25)
        {
          if (v14 < v17) {
            goto LABEL_141;
          }
          if (v17 < v14)
          {
            int v130 = v15;
            uint64_t v35 = 0;
            uint64_t v36 = v145;
            uint64_t v37 = v145 * (v14 - 1);
            uint64_t v38 = v17;
            uint64_t v39 = v14 * v145;
            uint64_t v40 = v38;
            uint64_t v134 = v38;
            uint64_t v41 = v38 * v145;
            do
            {
              if (v40 != v14 + v35 - 1)
              {
                uint64_t v42 = v138;
                if (!v138) {
                  goto LABEL_147;
                }
                uint64_t v43 = v14;
                unint64_t v44 = v138 + v41;
                uint64_t v45 = v138 + v37;
                sub_1C663BDF0(v138 + v41, v133);
                if (v41 < v37 || v44 >= v42 + v39)
                {
                  swift_arrayInitWithTakeFrontToBack();
                  uint64_t v36 = v145;
                }
                else
                {
                  uint64_t v36 = v145;
                  if (v41 != v37) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                sub_1C663BDF0(v133, v45);
                uint64_t v19 = v142;
                uint64_t v14 = v43;
              }
              ++v40;
              --v35;
              v37 -= v36;
              v39 -= v36;
              v41 += v36;
            }
            while (v40 < v14 + v35);
            uint64_t v15 = v130;
            uint64_t v17 = v134;
            uint64_t v16 = v139;
          }
        }
      }
      if (v14 < v16)
      {
        if (__OFSUB__(v14, v17)) {
          goto LABEL_138;
        }
        if (v14 - v17 < v128)
        {
          if (__OFADD__(v17, v128)) {
            goto LABEL_142;
          }
          if (v17 + v128 >= v16) {
            uint64_t v47 = v16;
          }
          else {
            uint64_t v47 = v17 + v128;
          }
          if (v47 < v17)
          {
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            return;
          }
          if (v14 != v47)
          {
            uint64_t v134 = v17;
            int v130 = v15;
            uint64_t v48 = *(void *)(v136 + 72);
            uint64_t v49 = v48 * (v14 - 1);
            uint64_t v138 = v48;
            uint64_t v50 = v14 * v48;
            uint64_t v132 = v47;
            do
            {
              uint64_t v51 = 0;
              uint64_t v52 = v134;
              uint64_t v139 = v14;
              while (1)
              {
                uint64_t v145 = v52;
                uint64_t v53 = *v19;
                uint64_t v54 = v50;
                uint64_t v55 = v50 + v51 + *v19;
                uint64_t v56 = v140;
                sub_1C663BD8C(v55, v140);
                uint64_t v57 = v49;
                uint64_t v58 = v49 + v51 + v53;
                uint64_t v59 = v141;
                sub_1C663BD8C(v58, v141);
                uint64_t v60 = *(int *)(matched + 32);
                double v61 = *(double *)(v56 + v60);
                double v62 = *(double *)(v59 + v60);
                sub_1C65BC11C(v59, type metadata accessor for ContactMatchRuntimeData);
                sub_1C65BC11C(v56, type metadata accessor for ContactMatchRuntimeData);
                if (v62 >= v61) {
                  break;
                }
                uint64_t v63 = *v19;
                if (!*v19) {
                  goto LABEL_145;
                }
                uint64_t v50 = v54;
                uint64_t v49 = v57;
                uint64_t v64 = v63 + v57 + v51;
                sub_1C663BDF0(v63 + v54 + v51, v144);
                swift_arrayInitWithTakeFrontToBack();
                sub_1C663BDF0(v144, v64);
                uint64_t v65 = v139;
                v51 -= v138;
                uint64_t v52 = v145 + 1;
                uint64_t v19 = v142;
                if (v139 == v145 + 1) {
                  goto LABEL_45;
                }
              }
              uint64_t v65 = v139;
              uint64_t v49 = v57;
              uint64_t v50 = v54;
LABEL_45:
              uint64_t v14 = v65 + 1;
              v49 += v138;
              v50 += v138;
            }
            while (v14 != v132);
            uint64_t v14 = v132;
            uint64_t v15 = v130;
            uint64_t v17 = v134;
          }
        }
      }
      if (v14 < v17) {
        goto LABEL_137;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_1C65C8578(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      unint64_t v67 = *((void *)v15 + 2);
      unint64_t v66 = *((void *)v15 + 3);
      unint64_t v68 = v67 + 1;
      if (v67 >= v66 >> 1) {
        uint64_t v15 = sub_1C65C8578((char *)(v66 > 1), v67 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v68;
      uint64_t v69 = v15 + 32;
      id v70 = &v15[16 * v67 + 32];
      *(void *)id v70 = v17;
      *((void *)v70 + 1) = v14;
      if (v67)
      {
        while (1)
        {
          unint64_t v71 = v68 - 1;
          if (v68 >= 4)
          {
            id v76 = &v69[16 * v68];
            uint64_t v77 = *((void *)v76 - 8);
            uint64_t v78 = *((void *)v76 - 7);
            BOOL v82 = __OFSUB__(v78, v77);
            uint64_t v79 = v78 - v77;
            if (v82) {
              goto LABEL_122;
            }
            uint64_t v81 = *((void *)v76 - 6);
            uint64_t v80 = *((void *)v76 - 5);
            BOOL v82 = __OFSUB__(v80, v81);
            uint64_t v74 = v80 - v81;
            char v75 = v82;
            if (v82) {
              goto LABEL_123;
            }
            unint64_t v83 = v68 - 2;
            uint64_t v84 = &v69[16 * v68 - 32];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v82 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v82) {
              goto LABEL_124;
            }
            BOOL v82 = __OFADD__(v74, v87);
            uint64_t v88 = v74 + v87;
            if (v82) {
              goto LABEL_126;
            }
            if (v88 >= v79)
            {
              uint64_t v106 = &v69[16 * v71];
              uint64_t v108 = *(void *)v106;
              uint64_t v107 = *((void *)v106 + 1);
              BOOL v82 = __OFSUB__(v107, v108);
              uint64_t v109 = v107 - v108;
              if (v82) {
                goto LABEL_132;
              }
              BOOL v99 = v74 < v109;
              goto LABEL_84;
            }
          }
          else
          {
            if (v68 != 3)
            {
              uint64_t v100 = *((void *)v15 + 4);
              uint64_t v101 = *((void *)v15 + 5);
              BOOL v82 = __OFSUB__(v101, v100);
              uint64_t v93 = v101 - v100;
              char v94 = v82;
              goto LABEL_78;
            }
            uint64_t v73 = *((void *)v15 + 4);
            uint64_t v72 = *((void *)v15 + 5);
            BOOL v82 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            char v75 = v82;
          }
          if (v75) {
            goto LABEL_125;
          }
          unint64_t v83 = v68 - 2;
          uint64_t v89 = &v69[16 * v68 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v92 = __OFSUB__(v90, v91);
          uint64_t v93 = v90 - v91;
          char v94 = v92;
          if (v92) {
            goto LABEL_127;
          }
          unint64_t v95 = &v69[16 * v71];
          uint64_t v97 = *(void *)v95;
          uint64_t v96 = *((void *)v95 + 1);
          BOOL v82 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          if (v82) {
            goto LABEL_129;
          }
          if (__OFADD__(v93, v98)) {
            goto LABEL_131;
          }
          if (v93 + v98 >= v74)
          {
            BOOL v99 = v74 < v98;
LABEL_84:
            if (v99) {
              unint64_t v71 = v83;
            }
            goto LABEL_86;
          }
LABEL_78:
          if (v94) {
            goto LABEL_128;
          }
          uint64_t v102 = &v69[16 * v71];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v82 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v82) {
            goto LABEL_130;
          }
          if (v105 < v93) {
            goto LABEL_95;
          }
LABEL_86:
          unint64_t v110 = v71 - 1;
          if (v71 - 1 >= v68)
          {
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
            goto LABEL_133;
          }
          if (!*v142) {
            goto LABEL_146;
          }
          uint64_t v111 = v14;
          unint64_t v112 = v15;
          id v113 = &v69[16 * v110];
          uint64_t v114 = *(void *)v113;
          id v115 = &v69[16 * v71];
          uint64_t v116 = *((void *)v115 + 1);
          uint64_t v117 = v137;
          sub_1C66DF838(*v142 + *(void *)(v136 + 72) * *(void *)v113, *v142 + *(void *)(v136 + 72) * *(void *)v115, *v142 + *(void *)(v136 + 72) * v116, v135);
          uint64_t v137 = v117;
          if (v117)
          {
            uint64_t v10 = v131;
LABEL_101:
            swift_bridgeObjectRelease();
            if (v10 >= -1)
            {
              *(void *)(v129 + 16) = 0;
              swift_bridgeObjectRelease();
              return;
            }
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
            goto LABEL_143;
          }
          if (v116 < v114) {
            goto LABEL_119;
          }
          if (v71 > *((void *)v112 + 2)) {
            goto LABEL_120;
          }
          *(void *)id v113 = v114;
          *(void *)&v69[16 * v110 + 8] = v116;
          unint64_t v118 = *((void *)v112 + 2);
          if (v71 >= v118) {
            goto LABEL_121;
          }
          uint64_t v15 = v112;
          unint64_t v68 = v118 - 1;
          memmove(&v69[16 * v71], v115 + 16, 16 * (v118 - 1 - v71));
          *((void *)v112 + 2) = v118 - 1;
          uint64_t v14 = v111;
          if (v118 <= 2) {
            goto LABEL_95;
          }
        }
      }
      unint64_t v68 = 1;
LABEL_95:
      uint64_t v16 = v142[1];
      uint64_t v10 = v131;
      if (v14 >= v16) {
        goto LABEL_104;
      }
    }
  }
  uint64_t v15 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v68 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
  if (v68 >= 2)
  {
    uint64_t v119 = *v142;
    while (1)
    {
      unint64_t v120 = v68 - 2;
      if (v68 < 2) {
        break;
      }
      if (!v119) {
        goto LABEL_148;
      }
      uint64_t v121 = v15;
      uint64_t v122 = *(void *)&v15[16 * v120 + 32];
      uint64_t v123 = *(void *)&v15[16 * v68 + 24];
      uint64_t v124 = v137;
      sub_1C66DF838(v119 + *(void *)(v136 + 72) * v122, v119 + *(void *)(v136 + 72) * *(void *)&v15[16 * v68 + 16], v119 + *(void *)(v136 + 72) * v123, v135);
      uint64_t v137 = v124;
      if (v124) {
        goto LABEL_101;
      }
      if (v123 < v122) {
        goto LABEL_134;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v121 = sub_1C676B0EC();
      }
      if (v120 >= *((void *)v121 + 2)) {
        goto LABEL_135;
      }
      uint64_t v125 = &v121[16 * v120 + 32];
      *(void *)uint64_t v125 = v122;
      *((void *)v125 + 1) = v123;
      unint64_t v126 = *((void *)v121 + 2);
      if (v68 > v126) {
        goto LABEL_136;
      }
      memmove(&v121[16 * v68 + 16], &v121[16 * v68 + 32], 16 * (v126 - v68));
      *((void *)v121 + 2) = v126 - 1;
      unint64_t v68 = v126 - 1;
      uint64_t v15 = v121;
      if (v126 <= 2) {
        goto LABEL_115;
      }
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
LABEL_115:
  swift_bridgeObjectRelease();
  if (v10 < -1) {
    goto LABEL_144;
  }
  *(void *)(v129 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C66DE974(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v130 = *(void *)(matched - 8);
  uint64_t v4 = MEMORY[0x1F4188790](matched);
  uint64_t v127 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v139 = (uint64_t)&v121 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v136 = (uint64_t)&v121 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v135 = (uint64_t)&v121 - v10;
  uint64_t v11 = a1[1];
  uint64_t v12 = sub_1C68ED798();
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_141;
    }
    if (v11) {
      sub_1C66DF5B0(0, v11, 1, a1);
    }
    return;
  }
  uint64_t v13 = v12;
  uint64_t v137 = a1;
  uint64_t v123 = sub_1C666E4CC(v11 / 2);
  uint64_t v124 = v11;
  unint64_t v129 = v14;
  if (v11 <= 0) {
    goto LABEL_104;
  }
  uint64_t v122 = v13;
  uint64_t v15 = 0;
  uint64_t v132 = v136 + 344;
  uint64_t v133 = v135 + 344;
  uint64_t v16 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v17 = v15;
    uint64_t v18 = v15 + 1;
    unint64_t v126 = v16;
    if (v15 + 1 >= v11)
    {
      uint64_t v29 = v15 + 1;
      uint64_t v19 = v137;
    }
    else
    {
      uint64_t v19 = v137;
      uint64_t v20 = *v137;
      uint64_t v21 = v15;
      uint64_t v128 = v15;
      uint64_t v22 = *(void *)(v130 + 72);
      uint64_t v23 = v135;
      sub_1C663BD8C(v20 + v22 * v18, v135);
      uint64_t v24 = v20 + v22 * v21;
      uint64_t v25 = v136;
      sub_1C663BD8C(v24, v136);
      uint64_t v26 = *(int *)(matched + 20);
      double v27 = *(double *)(v133 + v26);
      double v28 = *(double *)(v132 + v26);
      sub_1C65BC11C(v25, type metadata accessor for ContactMatchRuntimeData);
      sub_1C65BC11C(v23, type metadata accessor for ContactMatchRuntimeData);
      uint64_t v29 = v128 + 2;
      uint64_t v131 = v20;
      uint64_t v140 = v22;
      if (v128 + 2 >= v11)
      {
        uint64_t v35 = v22;
        uint64_t v17 = v128;
      }
      else
      {
        uint64_t v121 = v2;
        uint64_t v134 = v22 * v18;
        uint64_t v30 = v22 * v29;
        while (1)
        {
          uint64_t v31 = v29;
          uint64_t v32 = v135;
          sub_1C663BD8C(v20 + v30, v135);
          uint64_t v33 = v136;
          sub_1C663BD8C(v20 + v134, v136);
          BOOL v34 = *(double *)(v132 + *(int *)(matched + 20)) >= *(double *)(v133 + *(int *)(matched + 20));
          sub_1C65BC11C(v33, type metadata accessor for ContactMatchRuntimeData);
          sub_1C65BC11C(v32, type metadata accessor for ContactMatchRuntimeData);
          if (v28 < v27 == v34) {
            break;
          }
          uint64_t v29 = v31 + 1;
          uint64_t v35 = v140;
          v20 += v140;
          if (v31 + 1 >= v11)
          {
            uint64_t v29 = v11;
            uint64_t v19 = v137;
            uint64_t v17 = v128;
            uint64_t v2 = v121;
            goto LABEL_13;
          }
        }
        uint64_t v19 = v137;
        uint64_t v29 = v31;
        uint64_t v17 = v128;
        uint64_t v2 = v121;
        uint64_t v35 = v140;
      }
LABEL_13:
      if (v28 < v27)
      {
        if (v29 < v17) {
          goto LABEL_142;
        }
        if (v17 < v29)
        {
          uint64_t v125 = v11;
          uint64_t v36 = 0;
          uint64_t v37 = v29;
          uint64_t v38 = v35 * (v29 - 1);
          uint64_t v39 = v17;
          uint64_t v40 = v37 * v35;
          uint64_t v41 = v39;
          uint64_t v42 = v39 * v35;
          do
          {
            uint64_t v43 = v37;
            if (v41 != v37 + v36 - 1)
            {
              uint64_t v44 = v131;
              if (!v131) {
                goto LABEL_148;
              }
              unint64_t v45 = v131 + v42;
              uint64_t v134 = v131 + v38;
              sub_1C663BDF0(v131 + v42, v127);
              if (v42 < v38 || v45 >= v44 + v40)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v35 = v140;
              }
              else
              {
                uint64_t v35 = v140;
                if (v42 != v38) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1C663BDF0(v127, v134);
              uint64_t v19 = v137;
            }
            ++v41;
            --v36;
            uint64_t v37 = v43;
            v38 -= v35;
            v40 -= v35;
            v42 += v35;
          }
          while (v41 < v43 + v36);
          uint64_t v29 = v43;
          uint64_t v17 = v128;
          uint64_t v11 = v125;
        }
      }
    }
    if (v29 < v11)
    {
      if (__OFSUB__(v29, v17)) {
        goto LABEL_140;
      }
      if (v29 - v17 < v122)
      {
        if (__OFADD__(v17, v122)) {
          goto LABEL_143;
        }
        if (v17 + v122 >= v11) {
          uint64_t v47 = v11;
        }
        else {
          uint64_t v47 = v17 + v122;
        }
        if (v47 < v17)
        {
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (v29 != v47)
        {
          uint64_t v128 = v17;
          uint64_t v121 = v2;
          uint64_t v48 = *(void *)(v130 + 72);
          uint64_t v140 = v48 * (v29 - 1);
          uint64_t v131 = v48;
          uint64_t v49 = v29 * v48;
          uint64_t v125 = v47;
          do
          {
            uint64_t v50 = 0;
            uint64_t v51 = v128;
            uint64_t v134 = v29;
            while (1)
            {
              uint64_t v52 = *v19;
              uint64_t v53 = v49;
              uint64_t v54 = v49 + v50 + *v19;
              uint64_t v55 = v135;
              sub_1C663BD8C(v54, v135);
              uint64_t v56 = v136;
              sub_1C663BD8C(v140 + v50 + v52, v136);
              uint64_t v57 = *(int *)(matched + 20);
              double v58 = *(double *)(v133 + v57);
              double v59 = *(double *)(v132 + v57);
              sub_1C65BC11C(v56, type metadata accessor for ContactMatchRuntimeData);
              sub_1C65BC11C(v55, type metadata accessor for ContactMatchRuntimeData);
              if (v59 >= v58) {
                break;
              }
              uint64_t v60 = *v19;
              if (!*v19) {
                goto LABEL_146;
              }
              uint64_t v49 = v53;
              uint64_t v61 = v60 + v140 + v50;
              sub_1C663BDF0(v60 + v53 + v50, v139);
              uint64_t v62 = v134;
              swift_arrayInitWithTakeFrontToBack();
              sub_1C663BDF0(v139, v61);
              v50 -= v131;
              ++v51;
              uint64_t v19 = v137;
              if (v62 == v51) {
                goto LABEL_46;
              }
            }
            uint64_t v62 = v134;
            uint64_t v49 = v53;
LABEL_46:
            uint64_t v29 = v62 + 1;
            v140 += v131;
            v49 += v131;
          }
          while (v29 != v125);
          uint64_t v29 = v125;
          uint64_t v2 = v121;
          uint64_t v17 = v128;
        }
      }
    }
    if (v29 < v17) {
      goto LABEL_139;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v16 = v126;
    }
    else {
      uint64_t v16 = sub_1C65C8578(0, *((void *)v126 + 2) + 1, 1, v126);
    }
    unint64_t v64 = *((void *)v16 + 2);
    unint64_t v63 = *((void *)v16 + 3);
    unint64_t v65 = v64 + 1;
    if (v64 >= v63 >> 1) {
      uint64_t v16 = sub_1C65C8578((char *)(v63 > 1), v64 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v65;
    unint64_t v66 = v16 + 32;
    unint64_t v67 = &v16[16 * v64 + 32];
    *(void *)unint64_t v67 = v17;
    *((void *)v67 + 1) = v29;
    uint64_t v134 = v29;
    if (v64) {
      break;
    }
    unint64_t v65 = 1;
LABEL_96:
    uint64_t v11 = v137[1];
    uint64_t v15 = v134;
    if (v134 >= v11) {
      goto LABEL_105;
    }
  }
  while (1)
  {
    unint64_t v68 = v65 - 1;
    if (v65 >= 4)
    {
      uint64_t v73 = &v66[16 * v65];
      uint64_t v74 = *((void *)v73 - 8);
      uint64_t v75 = *((void *)v73 - 7);
      BOOL v79 = __OFSUB__(v75, v74);
      uint64_t v76 = v75 - v74;
      if (v79) {
        goto LABEL_124;
      }
      uint64_t v78 = *((void *)v73 - 6);
      uint64_t v77 = *((void *)v73 - 5);
      BOOL v79 = __OFSUB__(v77, v78);
      uint64_t v71 = v77 - v78;
      char v72 = v79;
      if (v79) {
        goto LABEL_125;
      }
      unint64_t v80 = v65 - 2;
      uint64_t v81 = &v66[16 * v65 - 32];
      uint64_t v83 = *(void *)v81;
      uint64_t v82 = *((void *)v81 + 1);
      BOOL v79 = __OFSUB__(v82, v83);
      uint64_t v84 = v82 - v83;
      if (v79) {
        goto LABEL_126;
      }
      BOOL v79 = __OFADD__(v71, v84);
      uint64_t v85 = v71 + v84;
      if (v79) {
        goto LABEL_128;
      }
      if (v85 >= v76)
      {
        uint64_t v103 = &v66[16 * v68];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v79 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v79) {
          goto LABEL_134;
        }
        BOOL v96 = v71 < v106;
        goto LABEL_85;
      }
    }
    else
    {
      if (v65 != 3)
      {
        uint64_t v97 = *((void *)v16 + 4);
        uint64_t v98 = *((void *)v16 + 5);
        BOOL v79 = __OFSUB__(v98, v97);
        uint64_t v90 = v98 - v97;
        char v91 = v79;
        goto LABEL_79;
      }
      uint64_t v70 = *((void *)v16 + 4);
      uint64_t v69 = *((void *)v16 + 5);
      BOOL v79 = __OFSUB__(v69, v70);
      uint64_t v71 = v69 - v70;
      char v72 = v79;
    }
    if (v72) {
      goto LABEL_127;
    }
    unint64_t v80 = v65 - 2;
    uint64_t v86 = &v66[16 * v65 - 32];
    uint64_t v88 = *(void *)v86;
    uint64_t v87 = *((void *)v86 + 1);
    BOOL v89 = __OFSUB__(v87, v88);
    uint64_t v90 = v87 - v88;
    char v91 = v89;
    if (v89) {
      goto LABEL_129;
    }
    BOOL v92 = &v66[16 * v68];
    uint64_t v94 = *(void *)v92;
    uint64_t v93 = *((void *)v92 + 1);
    BOOL v79 = __OFSUB__(v93, v94);
    uint64_t v95 = v93 - v94;
    if (v79) {
      goto LABEL_131;
    }
    if (__OFADD__(v90, v95)) {
      goto LABEL_133;
    }
    if (v90 + v95 >= v71)
    {
      BOOL v96 = v71 < v95;
LABEL_85:
      if (v96) {
        unint64_t v68 = v80;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v91) {
      goto LABEL_130;
    }
    BOOL v99 = &v66[16 * v68];
    uint64_t v101 = *(void *)v99;
    uint64_t v100 = *((void *)v99 + 1);
    BOOL v79 = __OFSUB__(v100, v101);
    uint64_t v102 = v100 - v101;
    if (v79) {
      goto LABEL_132;
    }
    if (v102 < v90) {
      goto LABEL_96;
    }
LABEL_87:
    unint64_t v107 = v68 - 1;
    if (v68 - 1 >= v65)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (!*v137) {
      goto LABEL_147;
    }
    uint64_t v108 = v16;
    uint64_t v109 = &v66[16 * v107];
    uint64_t v110 = *(void *)v109;
    uint64_t v111 = &v66[16 * v68];
    uint64_t v112 = *((void *)v111 + 1);
    sub_1C66DFC28(*v137 + *(void *)(v130 + 72) * *(void *)v109, *v137 + *(void *)(v130 + 72) * *(void *)v111, *v137 + *(void *)(v130 + 72) * v112, v129);
    if (v2) {
      break;
    }
    if (v112 < v110) {
      goto LABEL_121;
    }
    if (v68 > *((void *)v108 + 2)) {
      goto LABEL_122;
    }
    *(void *)uint64_t v109 = v110;
    *(void *)&v66[16 * v107 + 8] = v112;
    unint64_t v113 = *((void *)v108 + 2);
    if (v68 >= v113) {
      goto LABEL_123;
    }
    unint64_t v65 = v113 - 1;
    memmove(&v66[16 * v68], v111 + 16, 16 * (v113 - 1 - v68));
    uint64_t v16 = v108;
    *((void *)v108 + 2) = v113 - 1;
    if (v113 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_102:
  swift_bridgeObjectRelease();
  if (v124 >= -1) {
    goto LABEL_117;
  }
  __break(1u);
LABEL_104:
  uint64_t v16 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v65 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
  if (v65 >= 2)
  {
    uint64_t v114 = *v137;
    while (1)
    {
      unint64_t v115 = v65 - 2;
      if (v65 < 2) {
        break;
      }
      if (!v114) {
        goto LABEL_149;
      }
      uint64_t v116 = v16;
      uint64_t v117 = *(void *)&v16[16 * v115 + 32];
      uint64_t v118 = *(void *)&v16[16 * v65 + 24];
      sub_1C66DFC28(v114 + *(void *)(v130 + 72) * v117, v114 + *(void *)(v130 + 72) * *(void *)&v16[16 * v65 + 16], v114 + *(void *)(v130 + 72) * v118, v129);
      if (v2) {
        goto LABEL_102;
      }
      if (v118 < v117) {
        goto LABEL_136;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v116 = sub_1C676B0EC();
      }
      if (v115 >= *((void *)v116 + 2)) {
        goto LABEL_137;
      }
      uint64_t v119 = &v116[16 * v115 + 32];
      *(void *)uint64_t v119 = v117;
      *((void *)v119 + 1) = v118;
      unint64_t v120 = *((void *)v116 + 2);
      if (v65 > v120) {
        goto LABEL_138;
      }
      memmove(&v116[16 * v65 + 16], &v116[16 * v65 + 32], 16 * (v120 - v65));
      uint64_t v16 = v116;
      *((void *)v116 + 2) = v120 - 1;
      unint64_t v65 = v120 - 1;
      if (v120 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v124 >= -1)
  {
LABEL_117:
    *(void *)(v123 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
}

uint64_t sub_1C66DF348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v27 = a1;
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v7 = MEMORY[0x1F4188790](matched);
  uint64_t v31 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v29 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v33 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v32 = v16 * v29;
    while (2)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v27;
      do
      {
        uint64_t v19 = *a4;
        sub_1C663BD8C(v32 + v17 + *a4, (uint64_t)v15);
        sub_1C663BD8C(v33 + v17 + v19, (uint64_t)v11);
        uint64_t v20 = *(int *)(matched + 32);
        double v21 = *(double *)&v15[v20];
        double v22 = *(double *)&v11[v20];
        sub_1C65BC11C((uint64_t)v11, type metadata accessor for ContactMatchRuntimeData);
        uint64_t result = sub_1C65BC11C((uint64_t)v15, type metadata accessor for ContactMatchRuntimeData);
        if (v22 >= v21) {
          break;
        }
        uint64_t v23 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v24 = v23 + v33 + v17;
        sub_1C663BDF0(v23 + v32 + v17, v31);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_1C663BDF0(v31, v24);
        v17 -= v28;
        ++v18;
      }
      while (v29 != v18);
      v33 += v28;
      v32 += v28;
      if (++v29 != v26) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C66DF5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v28 = a1;
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v7 = MEMORY[0x1F4188790](matched);
  uint64_t v36 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v32 = (uint64_t)&v26 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v31 = (char *)&v26 - v13;
  uint64_t v34 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = (uint64_t)v31;
    uint64_t v29 = v32 + 344;
    uint64_t v30 = v31 + 344;
    uint64_t v37 = v14 * (v34 - 1);
    uint64_t v33 = v14;
    uint64_t v16 = v14 * v34;
    while (2)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v28;
      do
      {
        uint64_t v19 = *a4;
        sub_1C663BD8C(v16 + v17 + *a4, v15);
        uint64_t v20 = v32;
        sub_1C663BD8C(v37 + v17 + v19, v32);
        uint64_t v21 = *(int *)(matched + 20);
        double v22 = *(double *)&v30[v21];
        double v23 = *(double *)(v29 + v21);
        sub_1C65BC11C(v20, type metadata accessor for ContactMatchRuntimeData);
        uint64_t result = sub_1C65BC11C(v15, type metadata accessor for ContactMatchRuntimeData);
        if (v23 >= v22) {
          break;
        }
        uint64_t v24 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v25 = v24 + v37 + v17;
        sub_1C663BDF0(v24 + v16 + v17, v36);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_1C663BDF0(v36, v25);
        v17 -= v33;
        ++v18;
      }
      while (v34 != v18);
      v37 += v33;
      v16 += v33;
      if (++v34 != v27) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_1C66DF838(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v8 = MEMORY[0x1F4188790](matched);
  uint64_t v54 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v53 = (uint64_t)&v48 - v10;
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int64_t v13 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_75;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_76;
  }
  uint64_t v17 = v13 / v12;
  uint64_t v18 = v15 / v12;
  if (v13 / v12 >= v15 / v12)
  {
    sub_1C669C55C(a2, v15 / v12);
    uint64_t v30 = v18 * v12;
    unint64_t v19 = a4 + v18 * v12;
    if (v30 < 1 || a1 >= a2) {
      goto LABEL_69;
    }
    unint64_t v51 = a4;
    uint64_t v52 = -v12;
    uint64_t v49 = v12;
    unint64_t v50 = a1;
    while (1)
    {
      unint64_t v32 = a3;
      uint64_t v33 = v52;
      uint64_t v34 = v53;
      a3 += v52;
      unint64_t v35 = v19 + v52;
      sub_1C663BD8C(v19 + v52, v53);
      unint64_t v36 = a2 + v33;
      uint64_t v37 = a2 + v33;
      uint64_t v38 = v54;
      sub_1C663BD8C(v37, v54);
      uint64_t v39 = *(int *)(matched + 32);
      double v40 = *(double *)(v34 + v39);
      double v41 = *(double *)(v38 + v39);
      sub_1C65BC11C(v38, type metadata accessor for ContactMatchRuntimeData);
      sub_1C65BC11C(v34, type metadata accessor for ContactMatchRuntimeData);
      if (v41 >= v40)
      {
        if (v32 >= v19 && a3 < v19)
        {
          a4 = v51;
          if (v32 != v19) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v19 = v35;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v19 = v35;
      }
      else
      {
        if (v32 >= a2 && a3 < a2)
        {
          unint64_t v44 = v50;
          a4 = v51;
          if (v32 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v36;
          uint64_t v12 = v49;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v36;
      }
      a4 = v51;
LABEL_64:
      uint64_t v12 = v49;
      unint64_t v44 = v50;
LABEL_65:
      if (v19 <= a4 || a2 <= v44) {
        goto LABEL_69;
      }
    }
  }
  sub_1C669C55C(a1, v13 / v12);
  unint64_t v19 = a4 + v17 * v12;
  if (v17 * v12 >= 1 && a2 < a3)
  {
    do
    {
      uint64_t v21 = v53;
      sub_1C663BD8C(a2, v53);
      uint64_t v22 = v54;
      sub_1C663BD8C(a4, v54);
      uint64_t v23 = *(int *)(matched + 32);
      double v24 = *(double *)(v21 + v23);
      double v25 = *(double *)(v22 + v23);
      sub_1C65BC11C(v22, type metadata accessor for ContactMatchRuntimeData);
      sub_1C65BC11C(v21, type metadata accessor for ContactMatchRuntimeData);
      if (v25 >= v24)
      {
        if (a1 < a4 || a1 >= a4 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v26 = a2;
        a4 += v12;
      }
      else
      {
        unint64_t v26 = a2 + v12;
        if (a1 < a2 || a1 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a1 += v12;
      BOOL v29 = a4 >= v19 || v26 >= a3;
      a2 = v26;
    }
    while (!v29);
  }
LABEL_69:
  int64_t v46 = v19 - a4;
  if (v12 != -1 || v46 != 0x8000000000000000)
  {
    sub_1C669C55C(a4, v46 / v12);
    return;
  }
LABEL_77:
  __break(1u);
}

void sub_1C66DFC28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v59 = a3;
  uint64_t matched = type metadata accessor for ContactMatchRuntimeData(0);
  uint64_t v9 = MEMORY[0x1F4188790](matched);
  uint64_t v62 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (char *)&v52 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_77;
  }
  int64_t v16 = v59 - a2;
  if (v59 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_78;
  }
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  uint64_t v53 = v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_1C669C55C(a2, v16 / v13);
    unint64_t v20 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2) {
      goto LABEL_71;
    }
    uint64_t v60 = (char *)matched;
    uint64_t v52 = v4;
    uint64_t v58 = -v13;
    uint64_t v56 = v62 + 344;
    uint64_t v57 = v61 + 344;
    unint64_t v23 = v59;
    unint64_t v54 = a1;
    unint64_t v55 = a4;
    uint64_t v24 = (uint64_t)v61;
    while (1)
    {
      unint64_t v25 = v23;
      uint64_t v26 = v58;
      unint64_t v27 = v25 + v58;
      unint64_t v28 = v20 + v58;
      unint64_t v29 = v20;
      sub_1C663BD8C(v20 + v58, v24);
      unint64_t v30 = a2 + v26;
      uint64_t v31 = v62;
      sub_1C663BD8C(a2 + v26, v62);
      uint64_t v32 = *((int *)v60 + 5);
      double v33 = *(double *)&v57[v32];
      double v34 = *(double *)(v56 + v32);
      sub_1C65BC11C(v31, type metadata accessor for ContactMatchRuntimeData);
      sub_1C65BC11C(v24, type metadata accessor for ContactMatchRuntimeData);
      if (v34 >= v33)
      {
        BOOL v36 = v25 < v29 || v27 >= v29;
        unint64_t v23 = v27;
        if (!v36)
        {
          a4 = v55;
          if (v25 != v29) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v20 = v28;
          goto LABEL_42;
        }
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v20 = v28;
      }
      else
      {
        unint64_t v20 = v29;
        BOOL v35 = v25 < a2 || v27 >= a2;
        unint64_t v23 = v27;
        if (!v35)
        {
          unint64_t v37 = v54;
          a4 = v55;
          if (v25 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v30;
          goto LABEL_43;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v30;
      }
      a4 = v55;
LABEL_42:
      unint64_t v37 = v54;
LABEL_43:
      if (v20 <= a4 || a2 <= v37) {
        goto LABEL_71;
      }
    }
  }
  sub_1C669C55C(a1, v14 / v13);
  unint64_t v20 = a4 + v18 * v13;
  if (v18 * v13 >= 1 && a2 < v59)
  {
    uint64_t v52 = v4;
    uint64_t v60 = v61 + 344;
    uint64_t v58 = v62 + 344;
    uint64_t v39 = v53;
    uint64_t v40 = (uint64_t)v61;
    uint64_t v41 = v62;
    do
    {
      sub_1C663BD8C(a2, v40);
      sub_1C663BD8C(a4, v41);
      uint64_t v42 = *(int *)(matched + 20);
      double v43 = *(double *)&v60[v42];
      double v44 = *(double *)(v58 + v42);
      sub_1C65BC11C(v41, type metadata accessor for ContactMatchRuntimeData);
      sub_1C65BC11C(v40, type metadata accessor for ContactMatchRuntimeData);
      if (v44 >= v43)
      {
        unint64_t v47 = a4 + v39;
        if (a1 < a4 || a1 >= v47)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v45 = a2;
        a4 = v47;
        uint64_t v39 = v53;
      }
      else
      {
        unint64_t v45 = a2 + v39;
        if (a1 < a2 || a1 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a1 += v39;
      BOOL v49 = a4 >= v20 || v45 >= v59;
      a2 = v45;
    }
    while (!v49);
  }
LABEL_71:
  int64_t v50 = v20 - a4;
  if (v53 != -1 || v50 != 0x8000000000000000)
  {
    sub_1C669C55C(a4, v50 / v53);
    return;
  }
LABEL_79:
  __break(1u);
}

unsigned char *storeEnumTagSinglePayload for ContactResolverSearchMetricsError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C66E0134);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolverSearchMetricsError()
{
  return &type metadata for ContactResolverSearchMetricsError;
}

uint64_t getEnumTagSinglePayload for ContactResolverSearchMetrics(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 88))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 10);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactResolverSearchMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 10) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolverSearchMetrics()
{
  return &type metadata for ContactResolverSearchMetrics;
}

unint64_t sub_1C66E0220(uint64_t a1)
{
  unint64_t result = sub_1C66E0248();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C66E0248()
{
  unint64_t result = qword_1EA407AD0;
  if (!qword_1EA407AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AD0);
  }
  return result;
}

unint64_t sub_1C66E0298()
{
  unint64_t result = qword_1EA407AD8;
  if (!qword_1EA407AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AD8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_35(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 80);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 1;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_1_38()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_2_31()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  *(void *)(v0 + 240) = 64;
  *(void *)(v0 + 248) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

double OUTLINED_FUNCTION_6_22@<D0>(uint64_t a1@<X8>, __n128 a2@<Q1>)
{
  double result = 0.0;
  *(__n128 *)(a1 + 64) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_24()
{
  return sub_1C669FE70(0, v0, 0);
}

uint64_t OUTLINED_FUNCTION_9_21(uint64_t a1)
{
  *(void *)(v1 + 240) = a1;
  return sub_1C68ED0C8();
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return *(void *)(v0 + 176);
}

void sub_1C66E0414(uint64_t a1)
{
  uint64_t v140 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407AE0);
  uint64_t v3 = OUTLINED_FUNCTION_3(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_20();
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v136 = (char *)v118 - v6;
  uint64_t v134 = type metadata accessor for StitchedContactResolverRecommendation(0);
  OUTLINED_FUNCTION_0_1();
  v118[1] = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for StitchedContactResolverRequest(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v126 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_1();
  uint64_t v125 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  uint64_t v17 = OUTLINED_FUNCTION_3(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_1();
  uint64_t v139 = v18;
  uint64_t v145 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_1_15();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407820);
  uint64_t v24 = OUTLINED_FUNCTION_3(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_19_1();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407818);
  uint64_t v26 = OUTLINED_FUNCTION_3(v25);
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_1_15();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  uint64_t v31 = OUTLINED_FUNCTION_3(v30);
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_1_15();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  v118[0] = v36;
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_20();
  uint64_t v143 = v38;
  uint64_t v40 = MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)v118 - v41;
  MEMORY[0x1F4188790](v40);
  uint64_t v144 = (char *)v118 - v43;
  sub_1C67E4B70(*(void *)(v140 + 32), v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v12) == 1)
  {
    double v44 = &qword_1EA407820;
    uint64_t v45 = v1;
LABEL_5:
    sub_1C65C117C(v45, v44);
    __swift_storeEnumTagSinglePayload(v34, 1, 1, v35);
    goto LABEL_6;
  }
  *(void *)&long long v138 = v12;
  uint64_t v46 = *(void *)(v1 + *(int *)(v12 + 24));
  swift_bridgeObjectRetain();
  sub_1C66E19A0(v1, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
  sub_1C67E4C2C(v46, v29);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v29, 1, v134) == 1)
  {
    double v44 = &qword_1EA407818;
    uint64_t v45 = v29;
    goto LABEL_5;
  }
  sub_1C66E194C(v29, v22, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  sub_1C66E19A0(v29, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
  sub_1C65BB124(v22 + v145[19], v34, &qword_1EBBF6510);
  sub_1C66E19A0(v22, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
  if (__swift_getEnumTagSinglePayload(v34, 1, v35) == 1)
  {
LABEL_6:
    sub_1C65C117C(v34, &qword_1EBBF6510);
    if (qword_1EA4057A8 == -1)
    {
LABEL_7:
      uint64_t v47 = sub_1C68EC478();
      __swift_project_value_buffer(v47, (uint64_t)qword_1EA442880);
      uint64_t v48 = sub_1C68EC458();
      os_log_type_t v49 = sub_1C68ECE48();
      if (os_log_type_enabled(v48, v49))
      {
        int64_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v50 = 0;
        _os_log_impl(&dword_1C65AE000, v48, v49, "skipping logging metrics since resolutionId is missing", v50, 2u);
        MEMORY[0x1C87A54F0](v50, -1, -1);
      }

      return;
    }
LABEL_83:
    swift_once();
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v118[0] + 32))(v144, v34, v35);
  sub_1C68E9BE8();
  uint64_t v51 = type metadata accessor for StitchedContactData(0);
  uint64_t v52 = v139;
  uint64_t v53 = v140;
  sub_1C65BB124(v140 + *(int *)(v51 + 28), v139, &qword_1EA406798);
  uint64_t v54 = type metadata accessor for StitchableInteraction();
  OUTLINED_FUNCTION_97_0(v52);
  if (v55)
  {
    sub_1C65C117C(v52, &qword_1EA406798);
    double v57 = 0.0;
  }
  else
  {
    double v56 = *(double *)(v52 + *(int *)(v54 + 28));
    sub_1C66E19A0(v52, (void (*)(void))type metadata accessor for StitchableInteraction);
    double v57 = v56 * 1000.0;
  }
  uint64_t v58 = *(void *)(v53 + 16);
  uint64_t v59 = *(void *)(v53 + 24);
  uint64_t v132 = v35;
  uint64_t v141 = v42;
  if (v58 != 0xD000000000000013 || v59 != 0x80000001C6916400)
  {
    OUTLINED_FUNCTION_7_25();
    if ((sub_1C68ED7E8() & 1) == 0)
    {
      if (v58 != 0xD000000000000011 || v59 != 0x80000001C69140E0)
      {
        OUTLINED_FUNCTION_7_25();
        if ((sub_1C68ED7E8() & 1) == 0)
        {
          unint64_t v64 = 0;
          goto LABEL_19;
        }
      }
      sub_1C67E9074(v57);
      if ((~*(void *)&v117 & 0x7FF0000000000000) != 0)
      {
        if (v117 > -9.22337204e18)
        {
          if (v117 < 9.22337204e18)
          {
            char v60 = 0;
            uint64_t v61 = (uint64_t)v117;
            goto LABEL_18;
          }
LABEL_86:
          __break(1u);
          JUMPOUT(0x1C66E11E0);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_86;
    }
  }
  char v60 = 1;
  uint64_t v61 = 2;
LABEL_18:
  v146[0] = v61;
  LOBYTE(v146[1]) = v60;
  sub_1C6838B20();

  v146[0] = v61;
  LOBYTE(v146[1]) = v60;
  sub_1C6838B20();
  unint64_t v64 = v63;
  uint64_t v35 = v132;
  uint64_t v42 = v141;
LABEL_19:
  unint64_t v65 = v144;
  sub_1C683DBD4();

  uint64_t v122 = *(void *)(*(void *)(v140 + 32) + 16);
  if (!v122) {
    goto LABEL_73;
  }
  OUTLINED_FUNCTION_8();
  uint64_t v119 = v66 + v67;
  uint64_t v120 = v68;
  uint64_t v130 = (void *)(v11 + 249);
  uint64_t v131 = (void (**)(uint64_t, uint64_t, uint64_t))(v118[0] + 16);
  uint64_t v128 = v118[0] + 8;
  unint64_t v129 = v154;
  uint64_t v69 = swift_bridgeObjectRetain();
  unint64_t v70 = 0;
  long long v127 = xmmword_1C68F0550;
  uint64_t v71 = v143;
  uint64_t v121 = v69;
  do
  {
    if (v70 >= *(void *)(v69 + 16))
    {
      __break(1u);
      goto LABEL_83;
    }
    uint64_t v72 = v125;
    sub_1C66E194C(v119 + *(void *)(v126 + 72) * v70, v125, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
    uint64_t v73 = *(void *)(v72 + v120);
    swift_bridgeObjectRetain();
    sub_1C66E19A0(v72, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
    if (*(void *)(v73 + 16))
    {
      uint64_t v123 = v73;
      unint64_t v124 = v70;
      OUTLINED_FUNCTION_8();
      uint64_t v76 = v73 + v75;
      uint64_t v135 = *(void *)(v77 + 72);
      uint64_t v78 = v136;
      while (1)
      {
        uint64_t v139 = v76;
        uint64_t v140 = v74;
        sub_1C66E194C(v76, v11, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
        (*v131)(v71, v11 + v145[18], v35);
        memcpy(v146, (const void *)v11, 0xA8uLL);
        uint64_t v79 = *(void *)(v11 + 176);
        uint64_t v80 = *(void *)(v11 + 200);
        uint64_t v81 = *(void *)(v11 + 224);
        unint64_t v82 = *(void *)(v11 + 232);
        uint64_t v83 = *(void *)(v11 + 240);
        char v84 = *(unsigned char *)(v11 + 248);
        v146[21] = *(void *)(v11 + 168);
        v146[22] = v79;
        long long v137 = *(_OWORD *)(v11 + 184);
        long long v147 = v137;
        uint64_t v148 = v80;
        long long v138 = *(_OWORD *)(v11 + 208);
        long long v149 = v138;
        uint64_t v150 = v81;
        unint64_t v151 = v82;
        uint64_t v152 = v83;
        char v153 = v84;
        uint64_t v86 = v129;
        uint64_t v85 = v130;
        *(void *)(v129 + 7) = *(void *)((char *)v130 + 7);
        *uint64_t v86 = *v85;
        char v87 = sub_1C65C1034();
        char v88 = v87 & 1;
        unint64_t v89 = BYTE7(v137) & 0xF;
        if ((v137 & 0x2000000000000000) == 0) {
          unint64_t v89 = v79 & 0xFFFFFFFFFFFFLL;
        }
        if (v89) {
          char v90 = v88 | 2;
        }
        else {
          char v90 = v87 & 1;
        }
        if ((void)v137) {
          char v88 = v90;
        }
        unint64_t v91 = BYTE7(v138) & 0xF;
        if ((v138 & 0x2000000000000000) == 0) {
          unint64_t v91 = v80 & 0xFFFFFFFFFFFFLL;
        }
        if (v91) {
          char v92 = v88 | 4;
        }
        else {
          char v92 = v88;
        }
        uint64_t v93 = HIBYTE(v82) & 0xF;
        if ((v82 & 0x2000000000000000) == 0) {
          uint64_t v93 = v81 & 0xFFFFFFFFFFFFLL;
        }
        if (v93) {
          v92 |= 8u;
        }
        if ((void)v138) {
          char v94 = v92;
        }
        else {
          char v94 = v88;
        }
        swift_bridgeObjectRetain();
        id v95 = sub_1C6838A04(v94);
        sub_1C683B234();
        sub_1C683E550();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        BOOL v96 = v142;
        sub_1C684424C(v78);
        uint64_t v97 = (uint64_t)v78;
        if (v96)
        {

          uint64_t v142 = 0;
          uint64_t v98 = 1;
        }
        else
        {
          uint64_t v142 = 0;
          uint64_t v98 = 0;
        }
        uint64_t v99 = v134;
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4072E0);
        __swift_storeEnumTagSinglePayload((uint64_t)v78, v98, 1, v100);
        *(void *)&long long v137 = *(char *)(v11 + v145[13]);
        *(void *)&long long v138 = *(void *)(v11 + 272);
        uint64_t v101 = (uint64_t *)(v11 + *(int *)(v99 + 20));
        uint64_t v102 = *v101;
        int v103 = *((unsigned __int8 *)v101 + 24);
        if (*((unsigned char *)v101 + 24))
        {
          if (v103 == 1 || v103 == 2) {
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          uint64_t v104 = v101[1];
          uint64_t v105 = v101[2];
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6308);
          uint64_t v106 = swift_allocObject();
          *(_OWORD *)(v106 + 16) = v127;
          *(void *)(v106 + 32) = v102;
          *(void *)(v106 + 40) = v104;
          sub_1C665485C(v102, v104, v105, 0);
        }
        uint64_t v107 = v133;
        sub_1C65BB124(v97, v133, &qword_1EA407AE0);
        uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4072E0);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v107, 1, v108);
        swift_bridgeObjectRetain();
        if (EnumTagSinglePayload == 1)
        {
          uint64_t v110 = &qword_1EA407AE0;
        }
        else
        {
          sub_1C6844E50();
          uint64_t v110 = &qword_1EA4072E0;
        }
        sub_1C65C117C(v107, v110);
        LOBYTE(v146[0]) = EnumTagSinglePayload == 1;
        uint64_t v42 = v141;
        sub_1C683DEE8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v111 = (void *)v101[2];
        int v112 = *((unsigned __int8 *)v101 + 24);
        if (!*((unsigned char *)v101 + 24))
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = v132;
          char v113 = 0;
          uint64_t v114 = v111;
          uint64_t v78 = v136;
          uint64_t v71 = v143;
          unint64_t v65 = v144;
          switch(v114)
          {
            case 1:
              char v113 = 0;
              break;
            case 2:
              char v113 = 0;
              break;
            case 3:
              char v113 = 0;
              break;
            default:
              goto LABEL_66;
          }
          goto LABEL_66;
        }
        uint64_t v35 = v132;
        if (v112 == 1) {
          break;
        }
        unint64_t v65 = v144;
        if (v112 != 2)
        {
          char v113 = 1;
          goto LABEL_65;
        }
        if (v111) {
          goto LABEL_59;
        }
LABEL_63:
        swift_bridgeObjectRetain();
        char v113 = 1;
LABEL_65:
        uint64_t v78 = v136;
        uint64_t v71 = v143;
LABEL_66:
        LOBYTE(v146[0]) = v113;
        sub_1C683E20C();
        swift_bridgeObjectRelease();
        sub_1C65C117C((uint64_t)v78, &qword_1EA407AE0);
        OUTLINED_FUNCTION_8_0();
        v115();
        sub_1C66E19A0(v11, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
        uint64_t v76 = v139 + v135;
        uint64_t v74 = v140 - 1;
        if (v140 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v69 = v121;
          unint64_t v70 = v124;
          goto LABEL_71;
        }
      }
      unint64_t v65 = v144;
      if (!v111) {
        goto LABEL_63;
      }
LABEL_59:
      sub_1C67B6360(v101[1], v101[2], (void *)*v101);
      goto LABEL_63;
    }
    swift_bridgeObjectRelease();
    uint64_t v69 = v121;
LABEL_71:
    ++v70;
  }
  while (v70 != v122);
  swift_bridgeObjectRelease();
LABEL_73:
  uint64_t v116 = *(void (**)(char *, uint64_t))(v118[0] + 8);
  v116(v42, v35);
  v116(v65, v35);
}

uint64_t sub_1C66E11F0(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406798);
  uint64_t v5 = OUTLINED_FUNCTION_3(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_20();
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for PrivatizedContactResolverConfig(0);
  uint64_t v10 = OUTLINED_FUNCTION_3(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1();
  uint64_t v58 = v11;
  sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v54 = v13;
  uint64_t v55 = v12;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1();
  uint64_t v57 = v14;
  uint64_t v15 = type metadata accessor for StitchedContactResolverRecommendation(0) - 8;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_1_15();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for StitchedContactResolverRequest(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_19_1();
  double v23 = sub_1C66C6DA4();
  unint64_t v63 = &type metadata for ContactFeatures;
  unint64_t v64 = sub_1C65B7B98();
  v62[0] = 1;
  char v24 = sub_1C68EA508();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  uint64_t v60 = a1;
  uint64_t v25 = *(void *)(a1 + 32);
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26) {
    return 0;
  }
  uint64_t v53 = v18;
  uint64_t v61 = v1;
  OUTLINED_FUNCTION_8();
  uint64_t v28 = v25 + v27;
  uint64_t v29 = *(void *)(v21 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C66E194C(v28, v2, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
    uint64_t v30 = *(void *)(v2 + *(int *)(v19 + 24));
    if (*(void *)(v30 + 16)) {
      break;
    }
    sub_1C66E19A0(v2, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
    v28 += v29;
    if (!--v26)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  OUTLINED_FUNCTION_8();
  uint64_t v33 = v53;
  sub_1C66E194C(v30 + v32, v53, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
  char v34 = *(unsigned char *)(v33 + *(int *)(type metadata accessor for ContactResolverRunTimeData(0) + 48));
  swift_bridgeObjectRetain();
  if (!sub_1C66C6E94(v34, v24 & 1, v23))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EA4057A8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1C68EC478();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EA442880);
    uint64_t v41 = sub_1C68EC458();
    os_log_type_t v42 = sub_1C68ECE48();
    if (!os_log_type_enabled(v41, v42)) {
      goto LABEL_22;
    }
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    double v44 = "skipping logging training sample for non-force prompt";
    goto LABEL_21;
  }
  if (qword_1EA4057E8 != -1) {
    swift_once();
  }
  uint64_t v35 = (uint64_t)v59;
  uint64_t v36 = v60;
  if (byte_1EA4428C8 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EA4057A8 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1C68EC478();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EA442880);
    uint64_t v41 = sub_1C68EC458();
    os_log_type_t v42 = sub_1C68ECE48();
    if (!os_log_type_enabled(v41, v42)) {
      goto LABEL_22;
    }
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    double v44 = "skipping logging training sample because D&U not allowed";
LABEL_21:
    _os_log_impl(&dword_1C65AE000, v41, v42, v44, v43, 2u);
    MEMORY[0x1C87A54F0](v43, -1, -1);
LABEL_22:

    sub_1C66E19A0(v33, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
    sub_1C66E19A0(v2, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
    return 0;
  }
  sub_1C68E9BE8();
  sub_1C66E194C(v2, v58, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
  uint64_t v52 = type metadata accessor for StitchedContactData(0);
  uint64_t v37 = v36 + *(int *)(v52 + 28);
  sub_1C65BB124(v37, v35, &qword_1EA406798);
  uint64_t v38 = type metadata accessor for StitchableInteraction();
  OUTLINED_FUNCTION_97_0(v35);
  if (v39)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C65C117C(v35, &qword_1EA406798);
  }
  else
  {
    uint64_t v46 = *(void *)(v35 + *(int *)(v38 + 36));
    swift_bridgeObjectRetain();
    sub_1C66E19A0(v35, (void (*)(void))type metadata accessor for StitchableInteraction);
    sub_1C664C3F0(v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = v53;
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = v37;
  uint64_t v48 = v56;
  sub_1C65BB124(v47, v56, &qword_1EA406798);
  OUTLINED_FUNCTION_97_0(v48);
  if (v39)
  {
    uint64_t result = sub_1C65C117C(v48, &qword_1EA406798);
    double v49 = 0.0;
  }
  else
  {
    double v49 = *(double *)(v48 + *(int *)(v38 + 28));
    uint64_t result = sub_1C66E19A0(v48, (void (*)(void))type metadata accessor for StitchableInteraction);
  }
  if ((~*(void *)&v49 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v49 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v49 < 9.22337204e18)
  {
    sub_1C67E914C((uint64_t)v49);
    uint64_t v50 = v58;
    sub_1C6844A08();
    swift_bridgeObjectRelease();
    sub_1C66E19A0(v50, (void (*)(void))type metadata accessor for PrivatizedContactResolverConfig);
    OUTLINED_FUNCTION_8_0();
    v51();
    sub_1C66E19A0(v33, (void (*)(void))type metadata accessor for StitchedContactResolverRecommendation);
    sub_1C66E19A0(v2, (void (*)(void))type metadata accessor for StitchedContactResolverRequest);
    return 1;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C66E194C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_0();
  v5(v4);
  return a2;
}

uint64_t sub_1C66E19A0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_8_0();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_7_25()
{
  return v0;
}

uint64_t sub_1C66E1A08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C669F7F0();
    uint64_t result = v12;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = (unint64_t)"contactDisambiguation";
    do
    {
      int v6 = *v4++;
      unint64_t v7 = 0xD000000000000015;
      unint64_t v8 = 0x80000001C6911D60;
      switch(v6)
      {
        case 1:
          unint64_t v8 = v5 | 0x8000000000000000;
          unint64_t v7 = 0xD000000000000014;
          break;
        case 2:
          unint64_t v8 = 0xEC0000006E6F6974;
          unint64_t v7 = 0x616D7269666E6F63;
          break;
        case 3:
          unint64_t v8 = 0xE90000000000006ELL;
          unint64_t v7 = 0x6F69747563657865;
          break;
        case 4:
          unint64_t v8 = 0xEB00000000707567;
          unint64_t v7 = 0x6E61486B63697571;
          break;
        default:
          break;
      }
      uint64_t v13 = result;
      unint64_t v9 = *(void *)(result + 16);
      if (v9 >= *(void *)(result + 24) >> 1)
      {
        uint64_t v11 = (const char *)v5;
        sub_1C669F7F0();
        unint64_t v5 = (unint64_t)v11;
        uint64_t result = v13;
      }
      *(void *)(result + 16) = v9 + 1;
      uint64_t v10 = result + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v8;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C66E1BA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v47 = a4;
  uint64_t v48 = a3;
  uint64_t v58 = type metadata accessor for StitchedContactResolverRecommendation(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v51 = v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StitchedContactResolverRequest(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v55 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v61 = 0;
  __int16 v60 = 0;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v54 = *(void *)(v16 + 16);
  if (v54)
  {
    uint64_t v46 = a1;
    uint64_t v17 = *(int *)(v14 + 24);
    uint64_t v52 = v16 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v53 = v17;
    a1 = (uint64_t)(v10 + 24);
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    unint64_t v19 = 0;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v49 = v16;
    uint64_t v50 = v12;
    do
    {
      if (v19 >= *(void *)(v16 + 16)) {
        goto LABEL_55;
      }
      uint64_t v21 = *(void *)(v12 + 72);
      unint64_t v57 = v19;
      uint64_t v22 = v55;
      sub_1C66E2210(v52 + v21 * v19, v55, type metadata accessor for StitchedContactResolverRequest);
      uint64_t v23 = *(void *)(v22 + v53);
      swift_bridgeObjectRetain();
      sub_1C66E2278(v22, type metadata accessor for StitchedContactResolverRequest);
      uint64_t v4 = *(void *)(v23 + 16);
      if (v4)
      {
        uint64_t v24 = *(unsigned __int8 *)(v51 + 80);
        uint64_t v56 = v23;
        uint64_t v25 = v23 + ((v24 + 32) & ~v24);
        uint64_t v26 = *(void *)(v51 + 72);
        while (1)
        {
          sub_1C66E2210(v25, (uint64_t)v10, type metadata accessor for StitchedContactResolverRecommendation);
          if (v10[*(int *)(type metadata accessor for ContactResolverRunTimeData(0) + 48)]) {
            HIBYTE(v61) = 1;
          }
          int v27 = *(unsigned __int8 *)(a1 + *(int *)(v58 + 20));
          if (*(unsigned char *)(a1 + *(int *)(v58 + 20)))
          {
            if (v27 == 1)
            {
              BOOL v28 = __OFADD__(v18++, 1);
              if (v28) {
                goto LABEL_54;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_0_36();
                uint64_t v20 = v34;
              }
              OUTLINED_FUNCTION_3_27();
              if (v29)
              {
                OUTLINED_FUNCTION_2_32();
                uint64_t v20 = v35;
              }
              *(void *)(v20 + 16) = v23;
              *(unsigned char *)(v20 + v5 + 32) = 0;
              sub_1C66E2278((uint64_t)v10, type metadata accessor for StitchedContactResolverRecommendation);
              HIBYTE(v60) = 1;
            }
            else if (v27 == 2)
            {
              BOOL v28 = __OFADD__(v18++, 1);
              if (v28)
              {
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
LABEL_55:
                __break(1u);
LABEL_56:
                OUTLINED_FUNCTION_0_36();
                uint64_t v20 = v42;
LABEL_38:
                unint64_t v36 = *(void *)(v20 + 16);
                if (v36 >= *(void *)(v20 + 24) >> 1)
                {
                  OUTLINED_FUNCTION_2_32();
                  uint64_t v20 = v43;
                }
                *(void *)(v20 + 16) = v36 + 1;
                *(unsigned char *)(v20 + v36 + 32) = 3;
                goto LABEL_41;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_0_36();
                uint64_t v20 = v30;
              }
              OUTLINED_FUNCTION_3_27();
              if (v29)
              {
                OUTLINED_FUNCTION_2_32();
                uint64_t v20 = v31;
              }
              *(void *)(v20 + 16) = v23;
              uint64_t v23 = 1;
              *(unsigned char *)(v20 + v5 + 32) = 1;
              sub_1C66E2278((uint64_t)v10, type metadata accessor for StitchedContactResolverRecommendation);
              LOBYTE(v60) = 1;
            }
            else
            {
              sub_1C66E2278((uint64_t)v10, type metadata accessor for StitchedContactResolverRecommendation);
            }
          }
          else
          {
            BOOL v28 = __OFADD__(v18++, 1);
            if (v28) {
              goto LABEL_53;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_0_36();
              uint64_t v20 = v32;
            }
            OUTLINED_FUNCTION_3_27();
            if (v29)
            {
              OUTLINED_FUNCTION_2_32();
              uint64_t v20 = v33;
            }
            *(void *)(v20 + 16) = v23;
            *(unsigned char *)(v20 + v5 + 32) = 2;
            sub_1C66E2278((uint64_t)v10, type metadata accessor for StitchedContactResolverRecommendation);
            LOBYTE(v61) = 1;
          }
          v25 += v26;
          if (!--v4)
          {
            swift_bridgeObjectRelease();
            uint64_t v16 = v49;
            uint64_t v12 = v50;
            goto LABEL_33;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_33:
      unint64_t v19 = v57 + 1;
    }
    while (v57 + 1 != v54);
    swift_bridgeObjectRelease();
    a1 = v46;
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = type metadata accessor for StitchedContactData(0);
  if (*(unsigned char *)(a1 + *(int *)(v4 + 48)))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_56;
    }
    goto LABEL_38;
  }
LABEL_41:
  if (*(unsigned char *)(a1 + *(int *)(v4 + 44)) == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_36();
      uint64_t v20 = v44;
    }
    unint64_t v37 = *(void *)(v20 + 16);
    if (v37 >= *(void *)(v20 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_32();
      uint64_t v20 = v45;
    }
    *(void *)(v20 + 16) = v37 + 1;
    *(unsigned char *)(v20 + v37 + 32) = 4;
  }
  else if (!*(void *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1C66E2278(a1, type metadata accessor for StitchedContactData);
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v39 = sub_1C66E1A08(v38);
  swift_bridgeObjectRelease_n();
  uint64_t v59 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
  sub_1C65C2B80();
  uint64_t v40 = sub_1C68EC818();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C66E2278(a1, type metadata accessor for StitchedContactData);
  uint64_t v58 = v40;
  if (v48) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_1C66E2210(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C66E2278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C66E22D8(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x616D7269666E6F63;
      break;
    case 3:
      unint64_t result = 0x6F69747563657865;
      break;
    case 4:
      unint64_t result = 0x6E61486B63697571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66E23A8()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66E23F4(unsigned __int8 *a1, char *a2)
{
  return sub_1C6617EC8(*a1, *a2);
}

uint64_t sub_1C66E2400()
{
  return sub_1C67023CC(*v0);
}

uint64_t sub_1C66E2408(uint64_t a1)
{
  return sub_1C6678774(a1, *v1);
}

uint64_t sub_1C66E2410()
{
  return sub_1C680D35C();
}

uint64_t sub_1C66E2418@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66E23A8();
  *a1 = result;
  return result;
}

unint64_t sub_1C66E2448@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C66E22D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactResolverTaskMetrics.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66E2540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolverTaskMetrics.Event()
{
  return &type metadata for ContactResolverTaskMetrics.Event;
}

void *initializeWithCopy for ContactResolverTaskMetrics(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactResolverTaskMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  return a1;
}

uint64_t assignWithTake for ContactResolverTaskMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  return a1;
}

ValueMetadata *type metadata accessor for ContactResolverTaskMetrics()
{
  return &type metadata for ContactResolverTaskMetrics;
}

unint64_t sub_1C66E26E4()
{
  unint64_t result = qword_1EA407AE8;
  if (!qword_1EA407AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AE8);
  }
  return result;
}

void OUTLINED_FUNCTION_0_36()
{
  sub_1C65C8800();
}

void OUTLINED_FUNCTION_2_32()
{
  sub_1C65C8800();
}

uint64_t sub_1C66E277C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v12 = a1 + *(int *)(type metadata accessor for StitchedContactResolverRecommendation(0) + 20);
  uint64_t v13 = *(void *)(v12 + 16);
  int v14 = *(unsigned __int8 *)(v12 + 24);
  char v41 = a3;
  char v42 = a4;
  uint64_t v40 = a2;
  if (!*(unsigned char *)(v12 + 24))
  {
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    OUTLINED_FUNCTION_0_37();
    OUTLINED_FUNCTION_2_33();
    char v32 = 1;
    goto LABEL_26;
  }
  uint64_t v16 = *(void **)v12;
  uint64_t v15 = *(void *)(v12 + 8);
  if (v14 != 1)
  {
    if (v14 == 2)
    {
      uint64_t v17 = v16[2];
      if (v13)
      {
        uint64_t v18 = sub_1C67B6360(v15, v13, v16);
        char v20 = v19;
        uint64_t result = sub_1C66E2AD8(a1);
        uint64_t v22 = v17;
        if (v20)
        {
          char v25 = 0;
          uint64_t v28 = 0;
          uint64_t v30 = 0;
          uint64_t v23 = 0;
          LOBYTE(v13) = 4;
          a4 = 5;
          char v26 = 1;
          char v29 = 3;
          a3 = 2;
          char v6 = 1;
          char v27 = 1;
          char v31 = 1;
          char v5 = 2;
          LOBYTE(a2) = 3;
          char v32 = 3;
        }
        else
        {
          uint64_t v23 = v18;
          if ((unint64_t)v18 < 3) {
            char v24 = 1;
          }
          else {
            char v24 = 2;
          }
          uint64_t result = 5;
          char v25 = 0;
          char v26 = 0;
          char v6 = 1;
          char v27 = 1;
          a3 = 0;
          uint64_t v28 = 0;
          if (v18 >= 1) {
            char v29 = v24;
          }
          else {
            char v29 = 0;
          }
          uint64_t v30 = 0;
          char v31 = 1;
          char v5 = 2;
          a4 = 5;
          LOBYTE(a2) = 3;
          LOBYTE(v13) = 4;
          char v32 = 3;
        }
        goto LABEL_27;
      }
      uint64_t v37 = 0;
      uint64_t v38 = v16[2];
      uint64_t v39 = 0;
      LOBYTE(a2) = 3;
      a4 = 5;
      char v5 = 2;
      char v36 = 4;
      char v6 = 1;
      a3 = 1;
      LOBYTE(v13) = 4;
      char v32 = 3;
    }
    else
    {
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      char v32 = 0;
      LOBYTE(v13) = 4;
      char v36 = 5;
      a3 = 3;
      uint64_t v37 = 0x200000001;
      OUTLINED_FUNCTION_2_33();
    }
LABEL_26:
    uint64_t result = sub_1C66E2AD8(a1);
    uint64_t v30 = 0;
    uint64_t v23 = 0;
    char v26 = 1;
    char v27 = 1;
    uint64_t v22 = v38;
    uint64_t v28 = v39;
    char v29 = v36;
    char v25 = v37;
    char v31 = BYTE4(v37);
    goto LABEL_27;
  }
  uint64_t v39 = v16[2];
  if (!v13)
  {
    char v6 = 0;
    char v5 = 0;
    uint64_t v38 = 0;
    a4 = 4;
    OUTLINED_FUNCTION_0_37();
    LOBYTE(a2) = 1;
    LOBYTE(v13) = 4;
    char v32 = 2;
    goto LABEL_26;
  }
  uint64_t v30 = sub_1C67B6360(v15, v13, v16);
  char v34 = v33;
  uint64_t result = sub_1C66E2AD8(a1);
  if (v34)
  {
    char v6 = 0;
    uint64_t v30 = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    LOBYTE(v13) = 4;
    char v25 = 1;
    char v31 = 2;
    char v29 = 5;
    a3 = 3;
    char v26 = 1;
    char v27 = 1;
    char v5 = 1;
    a4 = 3;
    LOBYTE(a2) = 2;
    char v32 = 2;
  }
  else
  {
    if ((unint64_t)v30 < 3) {
      char v35 = 1;
    }
    else {
      char v35 = 2;
    }
    uint64_t result = 5;
    char v25 = 1;
    char v26 = 1;
    char v6 = 0;
    char v27 = 0;
    a3 = 3;
    char v29 = 5;
    char v31 = 2;
    char v5 = 1;
    if (v30 >= 1) {
      a4 = v35;
    }
    else {
      a4 = 0;
    }
    LOBYTE(a2) = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    LOBYTE(v13) = 4;
    char v32 = 2;
  }
  uint64_t v28 = v39;
LABEL_27:
  *(unsigned char *)a5 = v32;
  *(void *)(a5 + 8) = v40;
  *(unsigned char *)(a5 + 16) = v41 & 1;
  *(unsigned char *)(a5 + 17) = v42 & 1;
  *(unsigned char *)(a5 + 18) = a2;
  *(unsigned char *)(a5 + 19) = a4;
  *(unsigned char *)(a5 + 20) = v5;
  *(void *)(a5 + 24) = v30;
  *(unsigned char *)(a5 + 32) = v27;
  *(void *)(a5 + 40) = v28;
  *(unsigned char *)(a5 + 48) = v6;
  *(unsigned char *)(a5 + 49) = a3;
  *(unsigned char *)(a5 + 50) = v29;
  *(unsigned char *)(a5 + 51) = v31;
  *(void *)(a5 + 56) = v23;
  *(unsigned char *)(a5 + 64) = v26;
  *(void *)(a5 + 72) = v22;
  *(unsigned char *)(a5 + 80) = v25;
  *(unsigned char *)(a5 + 81) = v13;
  return result;
}

uint64_t sub_1C66E2AD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StitchedContactResolverRecommendation(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *__swift_memcpy82_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x52uLL);
}

uint64_t sub_1C66E2B3C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 82))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C66E2B88(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 82) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics()
{
}

unsigned char *sub_1C66E2BF0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66E2CBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics.SelectionBucket()
{
}

unsigned char *sub_1C66E2CF0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66E2DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics.DisambiguationUserAction()
{
}

unsigned char *sub_1C66E2DF0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66E2EBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics.RecommendationType()
{
}

uint64_t sub_1C66E2EF0()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C66E2F3C(char a1)
{
  unint64_t result = 0x656C65736F747561;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x616D7269666E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66E2FF0()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66E303C(char a1)
{
  uint64_t result = 0x64657463656C6573;
  if (a1 == 1) {
    return 0x656E6F646E616261;
  }
  return result;
}

uint64_t sub_1C66E3098()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66E30E4(char a1)
{
  uint64_t result = 0x7473726966;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x327478656ELL;
      break;
    case 2:
      uint64_t result = 0x337265766FLL;
      break;
    case 3:
      uint64_t result = 0x64657463656C6573;
      break;
    case 4:
      uint64_t result = 0x656E6F646E616261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66E3190(unsigned __int8 *a1, char *a2)
{
  return sub_1C66176EC(*a1, *a2);
}

uint64_t sub_1C66E319C()
{
  return sub_1C67023E4(*v0);
}

uint64_t sub_1C66E31A4(uint64_t a1)
{
  return sub_1C6678568(a1, *v1);
}

uint64_t sub_1C66E31AC()
{
  return sub_1C680D430();
}

uint64_t sub_1C66E31B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66E2EF0();
  *a1 = result;
  return result;
}

unint64_t sub_1C66E31E4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C66E2F3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C66E3210()
{
  return sub_1C66E2F3C(*v0);
}

unint64_t sub_1C66E321C()
{
  unint64_t result = qword_1EA407AF0;
  if (!qword_1EA407AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AF0);
  }
  return result;
}

uint64_t sub_1C66E3268()
{
  return sub_1C66179C4();
}

uint64_t sub_1C66E3274()
{
  return sub_1C67023FC();
}

uint64_t sub_1C66E327C()
{
  return sub_1C66786F0();
}

uint64_t sub_1C66E3284()
{
  return sub_1C680D374();
}

uint64_t sub_1C66E328C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66E2FF0();
  *a1 = result;
  return result;
}

uint64_t sub_1C66E32BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C66E303C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C66E32E8()
{
  return sub_1C66E303C(*v0);
}

unint64_t sub_1C66E32F4()
{
  unint64_t result = qword_1EA407AF8;
  if (!qword_1EA407AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407AF8);
  }
  return result;
}

uint64_t sub_1C66E3340(unsigned __int8 *a1, char *a2)
{
  return sub_1C6617868(*a1, *a2);
}

uint64_t sub_1C66E334C()
{
  return sub_1C6702408(*v0);
}

uint64_t sub_1C66E3354(uint64_t a1)
{
  return sub_1C6678628(a1, *v1);
}

uint64_t sub_1C66E335C()
{
  return sub_1C680D418();
}

uint64_t sub_1C66E3364@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66E3098();
  *a1 = result;
  return result;
}

uint64_t sub_1C66E3394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C66E30E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C66E33C0()
{
  return sub_1C66E30E4(*v0);
}

unint64_t sub_1C66E33CC()
{
  unint64_t result = qword_1EA407B00;
  if (!qword_1EA407B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B00);
  }
  return result;
}

void *sub_1C66E3444(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(void *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    uint64_t v12 = &v9[v11];
    uint64_t v13 = v10 + v11;
    uint64_t v14 = sub_1C68E9C68();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_retain();
    v15(v12, v13, v14);
    uint64_t v16 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
  }
  return v4;
}

uint64_t sub_1C66E35A0(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for StringTokenizer() + 20);
  uint64_t v6 = sub_1C68E9C68();
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1C66E362C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = sub_1C68E9C68();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  v14(v11, v12, v13);
  uint64_t v15 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t *sub_1C66E3730(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(uint64_t *)((char *)a1 + v6) = *(uint64_t *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1C68E9C68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1C66E37FC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1C66E38C0(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  uint64_t v10 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1C66E3990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C66E39A4);
}

uint64_t sub_1C66E39A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for StringTokenizer();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_1C66E3A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C66E3A40);
}

uint64_t sub_1C66E3A40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for StringTokenizer();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ContactsFrameworkMatcher()
{
  uint64_t result = qword_1EBBF4E00;
  if (!qword_1EBBF4E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C66E3B08()
{
  uint64_t result = type metadata accessor for StringTokenizer();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C66E3BAC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5210);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v25 = (uint64_t)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v22 = v4;
    uint64_t v23 = (char *)v20 - v8;
    v20[1] = v1;
    uint64_t v21 = a1;
    unint64_t v10 = 0;
    uint64_t v11 = &qword_1EBBF5210;
    uint64_t v12 = (char *)v20 - v8;
    while (v10 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v26 = *(void *)(v4 + 72);
      sub_1C65BB124(a1 + v13 + v26 * v10, (uint64_t)v12, v11);
      uint64_t v14 = v3;
      uint64_t v15 = &v12[*(int *)(v3 + 36)];
      if (v15[*(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 204)] == 1)
      {
        uint64_t v16 = v11;
        sub_1C65D3C68((uint64_t)v12, v25, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C669FB20();
        }
        uint64_t v17 = v27;
        unint64_t v18 = *(void *)(v27 + 16);
        if (v18 >= *(void *)(v27 + 24) >> 1)
        {
          sub_1C669FB20();
          uint64_t v17 = v27;
        }
        *(void *)(v17 + 16) = v18 + 1;
        uint64_t v19 = v17 + v13 + v18 * v26;
        uint64_t v11 = v16;
        uint64_t result = sub_1C65D3C68(v25, v19, v16);
        uint64_t v3 = v14;
        a1 = v21;
        uint64_t v4 = v22;
      }
      else
      {
        uint64_t result = sub_1C65B4354((uint64_t)v12, v11);
        uint64_t v3 = v14;
      }
      if (v24 == ++v10)
      {
        uint64_t v9 = v27;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1C66E3DF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C669F7F0();
    uint64_t v2 = v15;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x1C87A3880](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v15 + 16);
      if (v12 >= *(void *)(v15 + 24) >> 1) {
        sub_1C669F7F0();
      }
      *(void *)(v15 + 16) = v12 + 1;
      uint64_t v13 = v15 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C66E3EF0(NSObject *a1)
{
  os_log_t v115 = a1;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5210);
  OUTLINED_FUNCTION_0_1();
  uint64_t v124 = v3;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_20();
  uint64_t v125 = v5;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  uint64_t v120 = (char *)&v108 - v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  uint64_t v126 = (uint64_t)&v108 - v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_19_2();
  uint64_t v122 = v12;
  uint64_t v111 = type metadata accessor for Contact();
  OUTLINED_FUNCTION_0_1();
  uint64_t v121 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_1();
  uint64_t v123 = v15;
  uint64_t v16 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_15();
  if (qword_1EBBF68D0 != -1) {
    goto LABEL_61;
  }
  while (1)
  {
    unint64_t v18 = (void *)qword_1EBBF7B08;
    uint64_t v19 = v1 + *(int *)(v16 + 20);
    *(void *)uint64_t v19 = "ContactResolver.1PMatcher";
    *(void *)(v19 + 8) = 25;
    uint64_t v112 = v19;
    *(unsigned char *)(v19 + 16) = 2;
    id v20 = v18;
    sub_1C68EC438();
    uint64_t v113 = *(int *)(v16 + 24);
    *(void *)(v1 + v113) = v20;
    id v21 = v20;
    sub_1C68ECF98();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF6640);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C68F0550;
    uint64_t v23 = sub_1C68ED3B8();
    uint64_t v25 = v24;
    *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v22 + 64) = sub_1C66246B0();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v25;
    uint64_t v114 = v1;
    sub_1C68EC418();
    swift_bridgeObjectRelease();

    if (qword_1EBBF5DA0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1C68EC478();
    uint64_t v116 = __swift_project_value_buffer(v26, (uint64_t)&unk_1EBBF7A68);
    uint64_t v27 = sub_1C68EC458();
    os_log_type_t v28 = sub_1C68ECE48();
    uint64_t v16 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      char v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v29 = 0;
      _os_log_impl(&dword_1C65AE000, v27, (os_log_type_t)v16, "finding 1p contact matches", v29, 2u);
      OUTLINED_FUNCTION_0();
    }

    uint64_t v30 = v117;
    uint64_t v31 = sub_1C66E4AB4((uint64_t)v115);
    uint64_t v1 = (uint64_t)&unk_1C68F0000;
    uint64_t v33 = v119;
    char v32 = v120;
    if (v30)
    {
      char v34 = v30;
      char v35 = v30;
      char v36 = sub_1C68EC458();
      os_log_type_t v37 = sub_1C68ECE58();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_30();
        v128[0] = OUTLINED_FUNCTION_39();
        *(_DWORD *)uint64_t v38 = 136315138;
        long long v127 = v30;
        uint64_t v39 = v30;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6650);
        uint64_t v40 = sub_1C68EC8F8();
        sub_1C65B4078(v40, v41, (uint64_t)v128, v42, v43, v44, v45, v46, v108, v109, (uint64_t)v110, v111, v112, v113, v114, (uint64_t)v115, v116, (uint64_t)v117, v118,
          v119);
        long long v127 = v47;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C65AE000, v36, v37, "ContactFrameworkMatcher failed. error=%s", v38, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_0();
      }
      else
      {
      }
      uint64_t v67 = MEMORY[0x1E4FBC860];
      goto LABEL_57;
    }
    uint64_t v48 = v31;
    double v117 = 0;
    unint64_t v49 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain_n();
    uint64_t v50 = sub_1C68EC458();
    int v51 = sub_1C68ECE48();
    if (os_log_type_enabled(v50, (os_log_type_t)v51))
    {
      HIDWORD(v109) = v51;
      os_log_t v115 = v50;
      uint64_t v52 = (_DWORD *)OUTLINED_FUNCTION_30();
      uint64_t v108 = OUTLINED_FUNCTION_39();
      v128[0] = v108;
      uint64_t v110 = v52;
      *uint64_t v52 = 136315138;
      uint64_t v53 = *(void *)(v48 + 16);
      uint64_t v54 = MEMORY[0x1E4FBC860];
      if (v53)
      {
        long long v127 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1C669FC70(0, v53, 0);
        uint64_t v55 = v123;
        OUTLINED_FUNCTION_36_8();
        uint64_t v57 = v48 + v56;
        uint64_t v59 = *(void *)(v58 + 72);
        uint64_t v54 = v127;
        do
        {
          uint64_t v60 = v122;
          sub_1C65BB124(v57, v122, &qword_1EBBF5210);
          sub_1C65DF2F4(v60, v55, (void (*)(void))type metadata accessor for Contact);
          sub_1C65B4354(v60, &qword_1EBBF5210);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C669FC70(0, (uint64_t)v54[2].isa + 1, 1);
            uint64_t v54 = v127;
          }
          unint64_t isa = (unint64_t)v54[2].isa;
          unint64_t v61 = (unint64_t)v54[3].isa;
          if (isa >= v61 >> 1)
          {
            char v66 = OUTLINED_FUNCTION_62(v61);
            sub_1C669FC70(v66, isa + 1, 1);
            uint64_t v54 = v127;
          }
          v54[2].unint64_t isa = (Class)(isa + 1);
          OUTLINED_FUNCTION_36_8();
          uint64_t v65 = (uint64_t)v54 + v63 + *(void *)(v64 + 72) * isa;
          uint64_t v55 = v123;
          sub_1C65BBE04(v123, v65);
          v57 += v59;
          --v53;
        }
        while (v53);
        swift_bridgeObjectRelease();
        unint64_t v49 = MEMORY[0x1E4FBC860];
      }
      uint64_t v1 = (uint64_t)v110;
      uint64_t v16 = MEMORY[0x1C87A3B40](v54, v111);
      uint64_t v69 = v68;
      swift_bridgeObjectRelease();
      sub_1C65B4078(v16, v69, (uint64_t)v128, v70, v71, v72, v73, v74, v108, v109, (uint64_t)v110, v111, v112, v113, v114, (uint64_t)v115, v116, (uint64_t)v117, v118,
        v119);
      long long v127 = v75;
      sub_1C68ED0C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v76 = v115;
      _os_log_impl(&dword_1C65AE000, v115, BYTE4(v109), "raw matches: %s", (uint8_t *)v1, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();

      uint64_t v33 = v119;
      char v32 = v120;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v128[0] = v49;
    uint64_t v77 = *(void *)(v48 + 16);
    swift_bridgeObjectRetain();
    uint64_t v122 = v48;
    uint64_t v123 = v77;
    if (v77)
    {
      unint64_t v78 = 0;
      while (v78 < *(void *)(v48 + 16))
      {
        unint64_t v79 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
        uint64_t v1 = *(void *)(v124 + 72);
        sub_1C65BB124(v48 + v79 + v1 * v78, v2, &qword_1EBBF5210);
        uint64_t v16 = v2 + *(int *)(v33 + 36);
        if (*(unsigned char *)(v16 + *(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 204)))
        {
          sub_1C65B4354(v2, &qword_1EBBF5210);
        }
        else
        {
          sub_1C65D3C68(v2, v126, &qword_1EBBF5210);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C669FB20();
          }
          uint64_t v80 = v128[0];
          unint64_t v82 = *(void *)(v128[0] + 16);
          unint64_t v81 = *(void *)(v128[0] + 24);
          uint64_t v16 = v82 + 1;
          if (v82 >= v81 >> 1)
          {
            OUTLINED_FUNCTION_62(v81);
            sub_1C669FB20();
            uint64_t v80 = v128[0];
          }
          *(void *)(v80 + 16) = v16;
          sub_1C65D3C68(v126, v80 + v79 + v82 * v1, &qword_1EBBF5210);
          uint64_t v48 = v122;
        }
        if (v123 == ++v78)
        {
          unint64_t v49 = v128[0];
          char v32 = v120;
          goto LABEL_34;
        }
      }
      __break(1u);
      goto LABEL_59;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v83 = swift_bridgeObjectRetain();
    char v84 = v117;
    sub_1C66E3BAC(v83);
    os_log_t v115 = v84;
    uint64_t v85 = sub_1C66E6A4C(v49);
    swift_release();
    v128[0] = v85;
    sub_1C65C78C0();
    uint64_t v16 = sub_1C65CFB18(v128[0]);
    swift_bridgeObjectRelease();
    uint64_t v86 = sub_1C66347AC(v16);
    swift_bridgeObjectRelease();
    uint64_t v126 = v86;
    uint64_t v129 = v86;
    if (!v123) {
      break;
    }
    uint64_t v87 = v48;
    unint64_t v88 = 0;
    unint64_t v89 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
    uint64_t v90 = v87 + v89;
    double v117 = (v87 + v89);
    unint64_t v118 = v89;
    while (v88 < *(void *)(v122 + 16))
    {
      uint64_t v2 = *(void *)(v124 + 72);
      sub_1C65BB124(v90 + v2 * v88, (uint64_t)v32, &qword_1EBBF5210);
      unint64_t v91 = (char *)v32 + *(int *)(v33 + 36);
      uint64_t v92 = type metadata accessor for ContactResolver.SignalSet(0);
      if (v91[*(int *)(v92 + 140)] == 1)
      {
        uint64_t v93 = v125;
        uint64_t v16 = *(void *)(v126 + 16);
        if (v16)
        {
          uint64_t v121 = v92;
          char v94 = v32;
          uint64_t v95 = *v32;
          uint64_t v96 = v94[1];
          swift_bridgeObjectRetain();
          unint64_t v97 = 0;
          uint64_t v1 = v118;
          while (1)
          {
            sub_1C65BB124(v126 + v1, (uint64_t)v93, &qword_1EBBF5210);
            if (*v93 == v95 && v93[1] == v96) {
              break;
            }
            char v99 = sub_1C68ED7E8();
            uint64_t v100 = (uint64_t)v93;
            char v101 = v99;
            sub_1C65B4354(v100, &qword_1EBBF5210);
            if (v101) {
              goto LABEL_48;
            }
            ++v97;
            v1 += v2;
            uint64_t v93 = v125;
            if (v16 == v97)
            {
              swift_bridgeObjectRelease();
              uint64_t v33 = v119;
              char v32 = v120;
LABEL_52:
              uint64_t v90 = (uint64_t)v117;
              goto LABEL_53;
            }
          }
          sub_1C65B4354((uint64_t)v93, &qword_1EBBF5210);
LABEL_48:
          swift_bridgeObjectRelease();
          uint64_t v126 = v129;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v126 = sub_1C681A348();
          }
          uint64_t v33 = v119;
          char v32 = v120;
          if (v97 < *(void *)(v126 + 16))
          {
            uint64_t v102 = v126;
            *(unsigned char *)(v126 + *(int *)(v121 + 140) + (uint64_t)*(int *)(v119 + 36) + v1) = 1;
            uint64_t v129 = v102;
            goto LABEL_52;
          }
          goto LABEL_60;
        }
      }
LABEL_53:
      ++v88;
      sub_1C65B4354((uint64_t)v32, &qword_1EBBF5210);
      if (v88 == v123) {
        goto LABEL_54;
      }
    }
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    swift_once();
  }
LABEL_54:
  swift_bridgeObjectRelease();
  int v103 = sub_1C68EC458();
  os_log_type_t v104 = sub_1C68ECE48();
  if (os_log_type_enabled(v103, v104))
  {
    uint64_t v105 = (uint8_t *)OUTLINED_FUNCTION_30();
    *(_DWORD *)uint64_t v105 = 134217984;
    OUTLINED_FUNCTION_7_7();
    v128[0] = *(void *)(v129 + 16);
    sub_1C68ED0C8();
    _os_log_impl(&dword_1C65AE000, v103, v104, "found %ld matches after deduping", v105, 0xCu);
    OUTLINED_FUNCTION_0();
  }

  OUTLINED_FUNCTION_7_7();
  uint64_t v67 = v129;
LABEL_57:
  sub_1C68ECF88();
  uint64_t v106 = v114;
  sub_1C68EC428();
  sub_1C65B33A8(v106, (void (*)(void))type metadata accessor for Signpost);
  return v67;
}

uint64_t sub_1C66E4AB4(uint64_t a1)
{
  __int16 v285 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1();
  uint64_t v263 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B08);
  OUTLINED_FUNCTION_0_1();
  unint64_t v251 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1();
  uint64_t v257 = v8;
  uint64_t v272 = type metadata accessor for ContactsFrameworkMatcher();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_1();
  uint64_t v274 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B10);
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_3_0();
  uint64_t v258 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_19_2();
  __n128 v275 = v15;
  uint64_t v287 = type metadata accessor for Contact();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_20();
  uint64_t v259 = v17;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_3_0();
  uint64_t v262 = v19;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_19_2();
  uint64_t v286 = v21;
  uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5210);
  OUTLINED_FUNCTION_0_1();
  uint64_t v273 = v22;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_20();
  uint64_t v261 = v24;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_3_0();
  uint64_t v260 = v26;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_3_0();
  uint64_t v284 = v28;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_3_0();
  v288 = v30;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_19_2();
  uint64_t v270 = v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43F0);
  MEMORY[0x1F4188790](v33 - 8);
  OUTLINED_FUNCTION_1();
  type metadata accessor for StringTokenizer();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_1();
  v302 = v35;
  uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5200);
  OUTLINED_FUNCTION_0_1();
  uint64_t v37 = v36;
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_20();
  v264 = v39;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_19_2();
  uint64_t v283 = v41;
  uint64_t v42 = *(void *)(a1 + 16);
  uint64_t v291 = sub_1C65C812C();
  uint64_t v43 = MEMORY[0x1E4FBB1B0];
  uint64_t v314 = sub_1C68ECD78();
  uint64_t v280 = v5;
  v312[0] = sub_1C68EC748();
  uint64_t v269 = v42;
  if (v42)
  {
    uint64_t v44 = a1 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    uint64_t v43 = *(void *)(v37 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C66E8508(v312, v44, (uint64_t)v289);
      if (v307) {
        goto LABEL_184;
      }
      v44 += v43;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
  }
  uint64_t v282 = swift_bridgeObjectRetain();
  uint64_t v45 = sub_1C668896C();
  uint64_t v313 = v45;
  uint64_t v46 = (uint64_t *)&unk_1C68F0000;
  uint64_t v256 = v1;
  int v47 = (void *)v283;
  if (!v269) {
    goto LABEL_128;
  }
  uint64_t v267 = (uint64_t)v289 + *(int *)(v272 + 20);
  uint64_t v266 = a1 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  uint64_t v265 = *(void *)(v37 + 72);
  swift_bridgeObjectRetain();
  uint64_t v48 = 0;
  uint64_t v255 = &v309;
  uint64_t v253 = &v310[1];
  unint64_t v49 = (unint64_t)&qword_1EBBF5210;
  uint64_t v254 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v50 = 134217984;
  long long v252 = v50;
  while (1)
  {
    uint64_t v271 = v48;
    sub_1C65BB124(v266 + v265 * v48, (uint64_t)v47, &qword_1EBBF5200);
    memcpy(v312, v47, sizeof(v312));
    sub_1C65DF2F4(v267, (uint64_t)v302, (void (*)(void))type metadata accessor for StringTokenizer);
    memcpy(v310, v312, sizeof(v310));
    sub_1C65B537C(v312);
    uint64_t v51 = sub_1C65C6D90();
    uint64_t v294 = *(void *)(v51 + 16);
    if (v294) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v110 = MEMORY[0x1E4FBC860];
LABEL_44:
    sub_1C65B6550(v312);
    sub_1C65B33A8((uint64_t)v302, (void (*)(void))type metadata accessor for StringTokenizer);
    v310[0] = v110;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
    sub_1C65C2B80();
    sub_1C68EC818();
    uint64_t v43 = v111;
    OUTLINED_FUNCTION_38_3();
    if (!v113
      || (uint64_t v114 = v112,
          uint64_t v115 = v314,
          swift_bridgeObjectRetain(),
          uint64_t v293 = v114,
          sub_1C65CDAC4(v114, v43, v115),
          char v117 = v116,
          swift_bridgeObjectRelease(),
          (v117 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v47 = (void *)v283;
      uint64_t v118 = v283 + *(int *)(v268 + 36);
      if (*(unsigned char *)(v118 + v285[51]) == 1 && (uint64_t v119 = *(void *)(v283 + 240), *(void *)(v119 + 16)))
      {
        uint64_t v120 = *(void *)(v119 + 40);
        uint64_t v43 = *(void *)(v119 + 48);
        uint64_t v122 = *(void *)(v119 + 56);
        uint64_t v121 = *(void *)(v119 + 64);
        uint64_t v123 = *(void *)(v119 + 72);
        v315[0] = *(unsigned char *)(v119 + 32);
        uint64_t v316 = v120;
        uint64_t v317 = v43;
        uint64_t v318 = v122;
        uint64_t v319 = v121;
        uint64_t v320 = v123;
        uint64_t v124 = v291;
        uint64_t v305 = *(void *)(v291 + 16);
        if (v305)
        {
          uint64_t v295 = v118;
          uint64_t v299 = v43;
          unint64_t v102 = (*(unsigned __int8 *)(v273 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v125 = 0;
          uint64_t v126 = *(void *)(v273 + 72);
          while (1)
          {
            uint64_t v46 = &qword_1EBBF5210;
            sub_1C65BB124(v124 + v102, (uint64_t)v270, &qword_1EBBF5210);
            if (*v270 == v122 && v270[1] == v121) {
              break;
            }
            char v128 = sub_1C68ED7E8();
            sub_1C65B4354((uint64_t)v270, &qword_1EBBF5210);
            if (v128) {
              goto LABEL_116;
            }
            ++v125;
            v102 += v126;
            uint64_t v124 = v291;
            if (v305 == v125)
            {
              swift_bridgeObjectRelease();
              uint64_t v43 = v299;
              goto LABEL_114;
            }
          }
          sub_1C65B4354((uint64_t)v270, &qword_1EBBF5210);
LABEL_116:
          swift_bridgeObjectRelease();
          uint64_t v43 = sub_1C6814624(v315, *(void *)(v295 + 248));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
          {
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v195 = v291;
            }
            else {
              uint64_t v195 = sub_1C681A348();
            }
            if (v125 >= *(void *)(v195 + 16))
            {
              __break(1u);
LABEL_180:
              __break(1u);
              goto LABEL_181;
            }
            *(unsigned char *)(v195 + v285[51] + (uint64_t)*(int *)(v281 + 36) + v102) = 1;
            uint64_t v291 = v195;
            *(void *)(v195 + v285[52] + (uint64_t)*(int *)(v281 + 36) + v102) = *(void *)(v295 + v285[52]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v125 >= *(void *)(v291 + 16)) {
              goto LABEL_180;
            }
            uint64_t v196 = v285[53];
            char v197 = *(unsigned char *)(v295 + v196);
            *(unsigned char *)(v291 + v196 + *(int *)(v281 + 36) + v102) = v197;
            *(unsigned char *)(v291 + *(int *)(v287 + 92) + v102) = v197 ^ 1;
          }
          int v47 = (void *)v283;
          sub_1C65B4354(v283, &qword_1EBBF5200);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_114:
          sub_1C65B4354(v283, &qword_1EBBF5200);
          int v47 = (void *)v283;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_1C65B4354(v283, &qword_1EBBF5200);
      }
      goto LABEL_123;
    }
    uint64_t v296 = v43;
    if (qword_1EBBF5DA0 != -1) {
      swift_once();
    }
    uint64_t v129 = sub_1C68EC478();
    __swift_project_value_buffer(v129, (uint64_t)&unk_1EBBF7A68);
    uint64_t v46 = (uint64_t *)v43;
    swift_bridgeObjectRetain_n();
    uint64_t v130 = sub_1C68EC458();
    os_log_type_t v131 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_7_0(v131))
    {
      uint64_t v132 = (uint8_t *)OUTLINED_FUNCTION_30();
      v310[0] = OUTLINED_FUNCTION_39();
      *(_DWORD *)uint64_t v132 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v133 = v114;
      sub_1C65B4078(v114, v43, (uint64_t)v310, v134, v135, v136, v137, v138, v250, v251, v252, *((uint64_t *)&v252 + 1), (uint64_t)v253, v254, (uint64_t)v255, v256, (uint64_t)v257, v258, v259,
        v260);
      uint64_t v308 = v139;
      unint64_t v49 = (unint64_t)&qword_1EBBF5210;
      sub_1C68ED0C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C65AE000, v130, (os_log_type_t)v43, "running standard fts search on \"%s\"", v132, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v133 = v114;
    }
    uint64_t v140 = v289[3];
    uint64_t v43 = v289[4];
    __swift_project_boxed_opaque_existential_1(v289, v140);
    uint64_t v141 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8))(v133, v296, v140, v43);
    if (v307) {
      goto LABEL_141;
    }
    unint64_t v311 = v141;
    uint64_t v142 = sub_1C68EC458();
    os_log_type_t v143 = sub_1C68ECE48();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v43 = OUTLINED_FUNCTION_30();
      *(_DWORD *)uint64_t v43 = v252;
      OUTLINED_FUNCTION_7_7();
      if (v311 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v144 = sub_1C68ED528();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v144 = *(void *)((v311 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v310[0] = v144;
      sub_1C68ED0C8();
      _os_log_impl(&dword_1C65AE000, v142, v143, "found %ld contacts via standard search", (uint8_t *)v43, 0xCu);
      OUTLINED_FUNCTION_0();
      unint64_t v49 = (unint64_t)&qword_1EBBF5210;
    }

    swift_bridgeObjectRetain();
    sub_1C67FB8C8((uint64_t)v310, v114, v296, v145, v146, v147, v148, v149, v250, v251);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_7();
    unint64_t v150 = v311;
    if (v311 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v151 = sub_1C68ED528();
    }
    else
    {
      uint64_t v151 = *(void *)((v311 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    int v47 = (void *)v283;
    if (v151)
    {
      if (v151 >= 1)
      {
        uint64_t v152 = 0;
        uint64_t v300 = v283 + *(int *)(v268 + 36);
        uint64_t v277 = v285[53];
        uint64_t v278 = v285[51];
        unint64_t v276 = v150 & 0xC000000000000001;
        unint64_t v290 = v150;
        uint64_t v279 = v151;
        while (1)
        {
          id v153 = v276 ? (id)MEMORY[0x1C87A4300](v152, v150) : *(id *)(v150 + 8 * v152 + 32);
          uint64_t v154 = v153;
          sub_1C66E7CF8(v153, v47, v286);
          sub_1C65DF2F4(v286, (uint64_t)v288, (void (*)(void))type metadata accessor for Contact);
          uint64_t v155 = (uint64_t)v288 + *(int *)(v281 + 36);
          sub_1C65DF2F4(v300, v155, (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
          *(unsigned char *)(v155 + 338) = 1;
          *((unsigned char *)v288 + *(int *)(v287 + 84)) = objc_msgSend(v154, sel_isSuggested);
          *(unsigned char *)(v155 + 332) = objc_msgSend(v154, sel_isSuggested);
          *(unsigned char *)(v155 + 337) = objc_msgSend(v154, sel_hasSuggestedProperties);
          uint64_t v156 = swift_bridgeObjectRetain();
          uint64_t v157 = sub_1C6688970(v156);
          unsigned __int16 v158 = sub_1C66E7E3C(v157, (uint64_t)v288);
          char v159 = v158;
          unsigned int v160 = v158;
          swift_bridgeObjectRelease();
          int v161 = v159 & 1;
          *(unsigned char *)(v155 + 333) = v159 & 1;
          *(unsigned char *)(v155 + 334) = v160 > 0xFF;
          if (v160 < 0x100)
          {
            char v163 = 0;
            uint64_t v162 = v285;
          }
          else
          {
            uint64_t v162 = v285;
            char v163 = *(unsigned char *)(v155 + v285[35]);
          }
          *(unsigned char *)(v155 + v162[36]) = v163;
          OUTLINED_FUNCTION_38_3();
          if (v165)
          {
            BOOL v167 = v293 == sub_1C68EC918() && v296 == v166;
            char v168 = v167 ? 1 : sub_1C68ED7E8();
            swift_bridgeObjectRelease();
            uint64_t v164 = v285;
          }
          else
          {
            char v168 = 0;
          }
          *(unsigned char *)(v155 + v164[33] + 15) = v168 & 1;
          swift_bridgeObjectRetain();
          sub_1C6833398();
          swift_bridgeObjectRelease();
          if (__swift_getEnumTagSinglePayload((uint64_t)v275, 1, v280) == 1)
          {
            sub_1C65B4354((uint64_t)v275, &qword_1EA407B10);
          }
          else
          {
            uint64_t v169 = *v275;
            sub_1C65B4354((uint64_t)v275 + *(int *)(v280 + 48), &qword_1EBBF5200);
            *(unsigned char *)(v155 + 339) = 1;
            *(void *)(v155 + 344) = v169;
            uint64_t v170 = *v288;
            uint64_t v171 = v288[1];
            swift_bridgeObjectRetain();
            sub_1C6812E94(v170, v171);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          char v172 = *(unsigned char *)(v300 + v278) ? (*(unsigned char *)(v300 + v277) & 1) == 0 : 2;
          *((unsigned char *)v288 + *(int *)(v287 + 92)) = v172;
          v310[0] = v293;
          v310[1] = v296;
          swift_bridgeObjectRetain();
          sub_1C66E841C(v310, MEMORY[0x1E4FBAF40]);
          sub_1C66E841C(v310, MEMORY[0x1E4FBAF50]);
          sub_1C66E841C(v310, MEMORY[0x1E4FBAF38]);
          uint64_t v173 = v310[0];
          unint64_t v174 = v310[1];
          swift_bridgeObjectRetain();
          uint64_t v43 = sub_1C68EC9C8();
          swift_bridgeObjectRelease();
          if (v43 >= 3)
          {
            swift_bridgeObjectRetain();
            unint64_t v175 = *(void *)(sub_1C6688E14(v173, v174) + 16);
            swift_bridgeObjectRelease();
            if (v175 > 1) {
              break;
            }
          }
          uint64_t v176 = v274;
          sub_1C65DF2F4((uint64_t)v289, v274, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
          if (v161) {
            goto LABEL_101;
          }
          char v177 = *(unsigned char *)(v274 + *(int *)(v272 + 24));
          sub_1C65B33A8(v274, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
          if (v177) {
            goto LABEL_102;
          }
          swift_bridgeObjectRetain_n();
          os_log_t v178 = sub_1C68EC458();
          os_log_type_t v179 = sub_1C68ECE48();
          if (OUTLINED_FUNCTION_7_0(v179))
          {
            uint64_t v180 = (uint8_t *)OUTLINED_FUNCTION_30();
            uint64_t v308 = OUTLINED_FUNCTION_39();
            *(_DWORD *)uint64_t v180 = 136315138;
            swift_bridgeObjectRetain();
            sub_1C65B4078(v293, v296, (uint64_t)&v308, v181, v182, v183, v184, v185, v250, v251, v252, *((uint64_t *)&v252 + 1), (uint64_t)v253, v254, (uint64_t)v255, v256, (uint64_t)v257, v258, v259,
              v260);
            sub_1C68ED0C8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1C65AE000, v178, (os_log_type_t)v43, "Match was not added because it was a short partial match: %s", v180, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_0();
            OUTLINED_FUNCTION_0();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          swift_bridgeObjectRelease();
          uint64_t v194 = (uint64_t)v288;
          unint64_t v49 = (unint64_t)&qword_1EBBF5210;
LABEL_107:
          sub_1C65B4354(v194, &qword_1EBBF5210);
          sub_1C65B33A8(v286, (void (*)(void))type metadata accessor for Contact);
          int v47 = (void *)v283;
          ++v152;
          unint64_t v150 = v290;
          if (v279 == v152) {
            goto LABEL_112;
          }
        }
        uint64_t v176 = v274;
        sub_1C65DF2F4((uint64_t)v289, v274, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
LABEL_101:
        sub_1C65B33A8(v176, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
LABEL_102:
        unint64_t v49 = (unint64_t)&qword_1EBBF5210;
        sub_1C65BB124((uint64_t)v288, v284, &qword_1EBBF5210);
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v189 = v291;
        }
        else
        {
          uint64_t isUniquelyReferenced_nonNull_native = OUTLINED_FUNCTION_28_8();
          uint64_t v189 = isUniquelyReferenced_nonNull_native;
        }
        unint64_t v191 = *(void *)(v189 + 16);
        unint64_t v190 = *(void *)(v189 + 24);
        if (v191 >= v190 >> 1)
        {
          OUTLINED_FUNCTION_43_6(v190);
          uint64_t isUniquelyReferenced_nonNull_native = sub_1C65C812C();
          uint64_t v189 = isUniquelyReferenced_nonNull_native;
        }
        *(void *)(v189 + 16) = v191 + 1;
        OUTLINED_FUNCTION_14_19(isUniquelyReferenced_nonNull_native, v187, v188, v189);
        sub_1C65D3C68(v284, v192 + v193 * v191, &qword_1EBBF5210);

        swift_bridgeObjectRelease();
        uint64_t v194 = (uint64_t)v288;
        goto LABEL_107;
      }
LABEL_176:
      __break(1u);
      goto LABEL_177;
    }
LABEL_112:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C65B4354((uint64_t)v47, &qword_1EBBF5200);
    swift_bridgeObjectRelease();
LABEL_123:
    uint64_t v48 = v271 + 1;
    if (v271 + 1 == v269)
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = v313;
      uint64_t v46 = (uint64_t *)&unk_1C68F0000;
LABEL_128:
      if (!*(void *)(v45 + 16))
      {
LABEL_182:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v291;
      }
      if (qword_1EBBF5DA0 != -1) {
        goto LABEL_178;
      }
      while (1)
      {
        uint64_t v198 = sub_1C68EC478();
        __swift_project_value_buffer(v198, (uint64_t)&unk_1EBBF7A68);
        uint64_t v199 = v313;
        swift_bridgeObjectRetain();
        int v200 = sub_1C68EC458();
        os_log_type_t v201 = sub_1C68ECE48();
        if (os_log_type_enabled(v200, v201))
        {
          os_log_type_t v202 = (uint8_t *)OUTLINED_FUNCTION_30();
          *(_DWORD *)os_log_type_t v202 = v46[320];
          v312[0] = *(void *)(v199 + 16);
          sub_1C68ED0C8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C65AE000, v200, v201, "running findContacts for %ld IDs", v202, 0xCu);
          OUTLINED_FUNCTION_0();
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        uint64_t v203 = v289[3];
        uint64_t v204 = v289[4];
        __swift_project_boxed_opaque_existential_1(v289, v203);
        OUTLINED_FUNCTION_7_7();
        sub_1C683012C();
        uint64_t v206 = v205;
        swift_bridgeObjectRelease();
        uint64_t v207 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v204 + 32))(v206, MEMORY[0x1E4FBC860], v203, v204);
        if (v307) {
          break;
        }
        unint64_t v49 = v207;
        swift_release();
        swift_bridgeObjectRetain_n();
        uint64_t v208 = sub_1C68EC458();
        os_log_type_t v209 = sub_1C68ECE48();
        unint64_t v210 = v49 >> 62;
        if (os_log_type_enabled(v208, v209))
        {
          uint64_t v211 = (uint8_t *)OUTLINED_FUNCTION_30();
          *(_DWORD *)uint64_t v211 = v46[320];
          unint64_t v102 = v256;
          if (v210)
          {
            swift_bridgeObjectRetain();
            uint64_t v46 = (uint64_t *)v49;
            uint64_t v212 = sub_1C68ED528();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v46 = (uint64_t *)v49;
            uint64_t v212 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          v310[0] = v212;
          sub_1C68ED0C8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C65AE000, v208, v209, "found %ld contacts from IDs", v211, 0xCu);
          OUTLINED_FUNCTION_0();

          unint64_t v49 = (unint64_t)v46;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          unint64_t v102 = v256;
        }
        if (v210)
        {
LABEL_181:
          swift_bridgeObjectRetain();
          uint64_t v213 = sub_1C68ED528();
          swift_bridgeObjectRelease();
          if (!v213) {
            goto LABEL_182;
          }
        }
        else
        {
          uint64_t v213 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v213) {
            goto LABEL_182;
          }
        }
        v301 = (uint64_t *)v49;
        unint64_t v303 = v49 & 0xC000000000000001;
        uint64_t v214 = 4;
        uint64_t v297 = v213;
        while (1)
        {
          id v215 = v303 ? (id)MEMORY[0x1C87A4300](v214 - 4, v49) : *(id *)(v49 + 8 * v214);
          uint64_t v43 = (uint64_t)v215;
          if (__OFADD__(v214 - 4, 1)) {
            break;
          }
          uint64_t v306 = v214 - 3;
          id v216 = objc_msgSend(v215, sel_identifier);
          uint64_t v217 = sub_1C68EC898();
          uint64_t v219 = v218;

          if (*(void *)(v282 + 16) && (unint64_t v220 = sub_1C68506A0(v217, v219), (v221 & 1) != 0))
          {
            uint64_t v81 = v258;
            sub_1C65BB124(*(void *)(v282 + 56) + *(void *)(v251 + 72) * v220, v258, &qword_1EA407B08);
            uint64_t v222 = 0;
          }
          else
          {
            uint64_t v222 = 1;
            uint64_t v81 = v258;
          }
          __swift_storeEnumTagSinglePayload(v81, v222, 1, v280);
          swift_bridgeObjectRelease();
          sub_1C65BB124(v81, v102, &qword_1EA407B10);
          if (__swift_getEnumTagSinglePayload(v102, 1, v280) == 1) {
            goto LABEL_172;
          }
          sub_1C65D3C68(v102, (uint64_t)v257, &qword_1EA407B08);
          sub_1C65B4354(v81, &qword_1EA407B10);
          uint64_t v223 = *v257;
          char v224 = v264;
          sub_1C65D3C68((uint64_t)v257 + *(int *)(v280 + 48), (uint64_t)v264, &qword_1EBBF5200);
          id v225 = (id)v43;
          uint64_t v226 = v259;
          sub_1C667A62C();
          uint64_t v227 = v264[23];
          if (v227)
          {
            uint64_t v228 = v264[21];
            uint64_t v229 = v264[22];
            uint64_t v230 = *(void *)(v259 + 216);
            sub_1C65B54A8(v228, v229, v227);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_16_16();
              sub_1C65C81C4();
              uint64_t v230 = v244;
            }
            unint64_t v232 = *(void *)(v230 + 16);
            unint64_t v231 = *(void *)(v230 + 24);
            if (v232 >= v231 >> 1)
            {
              OUTLINED_FUNCTION_62(v231);
              sub_1C65C81C4();
              uint64_t v230 = v245;
            }
            *(void *)(v230 + 16) = v232 + 1;
            uint64_t v233 = (void *)(v230 + 48 * v232);
            v233[4] = 0;
            v233[5] = 0xE000000000000000;
            v233[6] = v229;
            v233[7] = v227;
            v233[8] = 0;
            v233[9] = 0xE000000000000000;
            sub_1C65B6684(v228, v229, v227);
            uint64_t v226 = v259;
            *(void *)(v259 + 216) = v230;
            unint64_t v102 = v256;
            char v224 = v264;
          }
          uint64_t v234 = (uint64_t)v224 + *(int *)(v268 + 36);
          if (*(unsigned char *)(v234 + v285[51])) {
            char v235 = (*(unsigned char *)(v234 + v285[53]) & 1) == 0;
          }
          else {
            char v235 = 2;
          }
          *(unsigned char *)(v226 + *(int *)(v287 + 92)) = v235;
          sub_1C65BBE04(v226, v262);
          sub_1C65DF2F4(v234, v263, (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
          *(unsigned char *)(v263 + 339) = 1;
          *(void *)(v263 + 344) = v223;
          sub_1C65DF2F4(v262, v260, (void (*)(void))type metadata accessor for Contact);
          sub_1C65DF2F4(v263, v260 + *(int *)(v281 + 36), (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
          uint64_t v46 = &qword_1EBBF5210;
          sub_1C65BB124(v260, v261, &qword_1EBBF5210);
          uint64_t v236 = swift_isUniquelyReferenced_nonNull_native();
          if (v236)
          {
            uint64_t v239 = v291;
          }
          else
          {
            uint64_t v236 = OUTLINED_FUNCTION_28_8();
            uint64_t v239 = v236;
          }
          unint64_t v241 = *(void *)(v239 + 16);
          unint64_t v240 = *(void *)(v239 + 24);
          if (v241 >= v240 >> 1)
          {
            OUTLINED_FUNCTION_62(v240);
            uint64_t v236 = sub_1C65C812C();
            uint64_t v239 = v236;
          }
          *(void *)(v239 + 16) = v241 + 1;
          OUTLINED_FUNCTION_14_19(v236, v237, v238, v239);
          sub_1C65D3C68(v261, v242 + v243 * v241, &qword_1EBBF5210);

          sub_1C65B4354(v260, &qword_1EBBF5210);
          sub_1C65B33A8(v263, (void (*)(void))type metadata accessor for ContactResolver.SignalSet);
          sub_1C65B33A8(v262, (void (*)(void))type metadata accessor for Contact);
          sub_1C65B4354((uint64_t)v264, &qword_1EBBF5200);
          ++v214;
          unint64_t v49 = (unint64_t)v301;
          if (v306 == v297) {
            goto LABEL_182;
          }
        }
LABEL_177:
        __break(1u);
LABEL_178:
        swift_once();
      }
      swift_bridgeObjectRelease();
      swift_release();
LABEL_174:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v292 = v51 + 32;
  swift_bridgeObjectRetain();
  uint64_t v52 = 0;
  unint64_t v304 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v53 = (uint64_t *)(v292 + 16 * v52);
    uint64_t v54 = *v53;
    uint64_t v46 = (uint64_t *)v53[1];
    if (*v302)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v55 = sub_1C68EA5B8();
      uint64_t v56 = v307;
      if (v307)
      {
        v298 = v46;
        if (qword_1EBBF5DA0 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_1C68EC478();
        __swift_project_value_buffer(v57, (uint64_t)&unk_1EBBF7A68);
        id v58 = v307;
        id v59 = v307;
        uint64_t v60 = sub_1C68EC458();
        os_log_type_t v61 = sub_1C68ECE58();
        if (OUTLINED_FUNCTION_7_0(v61))
        {
          uint64_t v62 = OUTLINED_FUNCTION_30();
          uint64_t v46 = (uint64_t *)OUTLINED_FUNCTION_39();
          uint64_t v308 = (uint64_t)v46;
          *(_DWORD *)uint64_t v62 = 136315138;
          id v63 = v307;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6650);
          uint64_t v64 = sub_1C68EC8F8();
          sub_1C65B4078(v64, v65, (uint64_t)&v308, v66, v67, v68, v69, v70, v250, v251, v252, *((uint64_t *)&v252 + 1), (uint64_t)v253, v254, (uint64_t)v255, v256, (uint64_t)v257, v258, v259,
            v260);
          *(void *)(v62 + 4) = v71;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C65AE000, v60, (os_log_type_t)v43, "morphun tokenizer failed: %s", (uint8_t *)v62, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0();
          OUTLINED_FUNCTION_0();
        }
        else
        {
        }
        uint64_t v308 = v54;
        v309 = v298;
        uint64_t v93 = OUTLINED_FUNCTION_35_7();
        OUTLINED_FUNCTION_1_0();
        uint64_t v94 = OUTLINED_FUNCTION_18_15();
        v95(v94);
        __swift_storeEnumTagSinglePayload(v43, 0, 1, v93);
        sub_1C65C74BC();
        sub_1C68ED108();
        sub_1C65B4354(v43, &qword_1EBBF43F0);
        uint64_t v96 = OUTLINED_FUNCTION_46_4();
        uint64_t v100 = sub_1C66E8A34(v96, v97, v98, v99);
        uint64_t v81 = sub_1C66E3DF0(v100);
        v307 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        MEMORY[0x1F4188790](v55);
        sub_1C689A7FC();
        uint64_t v81 = v92;
        v307 = 0;
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
    }
    else
    {
      uint64_t v308 = *v53;
      v309 = v46;
      uint64_t v72 = OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_1_0();
      uint64_t v73 = OUTLINED_FUNCTION_18_15();
      v74(v73);
      __swift_storeEnumTagSinglePayload(v43, 0, 1, v72);
      sub_1C65C74BC();
      swift_bridgeObjectRetain_n();
      sub_1C68ED108();
      sub_1C65B4354(v43, &qword_1EBBF43F0);
      uint64_t v75 = OUTLINED_FUNCTION_46_4();
      uint64_t v79 = sub_1C66E8A34(v75, v76, v77, v78);
      uint64_t v80 = *(void *)(v79 + 16);
      if (v80)
      {
        uint64_t v308 = MEMORY[0x1E4FBC860];
        sub_1C669F7F0();
        uint64_t v81 = v308;
        uint64_t v46 = (uint64_t *)(v79 + 56);
        do
        {
          uint64_t v82 = *(v46 - 3);
          uint64_t v83 = *(v46 - 2);
          uint64_t v84 = *(v46 - 1);
          uint64_t v85 = *v46;
          swift_bridgeObjectRetain();
          uint64_t v86 = MEMORY[0x1C87A3880](v82, v83, v84, v85);
          uint64_t v88 = v87;
          swift_bridgeObjectRelease();
          uint64_t v308 = v81;
          unint64_t v90 = *(void *)(v81 + 16);
          unint64_t v89 = *(void *)(v81 + 24);
          if (v90 >= v89 >> 1)
          {
            OUTLINED_FUNCTION_62(v89);
            sub_1C669F7F0();
            uint64_t v81 = v308;
          }
          *(void *)(v81 + 16) = v90 + 1;
          uint64_t v91 = v81 + 16 * v90;
          *(void *)(v91 + 32) = v86;
          *(void *)(v91 + 40) = v88;
          v46 += 4;
          --v80;
        }
        while (v80);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v81 = MEMORY[0x1E4FBC860];
      }
    }
    uint64_t v101 = *(void *)(v81 + 16);
    unint64_t v102 = v304;
    uint64_t v43 = *(void *)(v304 + 16);
    if (__OFADD__(v43, v101))
    {
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C65B4354(v283, &qword_1EBBF5200);
      swift_bridgeObjectRelease();
      goto LABEL_173;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v43 + v101 > *(void *)(v304 + 24) >> 1)
    {
      sub_1C65C8524();
      unint64_t v102 = v103;
    }
    if (*(void *)(v81 + 16)) {
      break;
    }
    if (v101) {
      goto LABEL_140;
    }
LABEL_41:
    unint64_t v304 = v102;
    swift_bridgeObjectRelease();
    if (++v52 == v294)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v49 = (unint64_t)&qword_1EBBF5210;
      unint64_t v110 = v102;
      goto LABEL_44;
    }
  }
  uint64_t v104 = *(void *)(v102 + 16);
  if ((*(void *)(v102 + 24) >> 1) - v104 < v101)
  {
    __break(1u);
LABEL_172:
    sub_1C65B4354(v102, &qword_1EA407B10);
    type metadata accessor for InferenceError();
    swift_allocObject();
    uint64_t v246 = v81;
    uint64_t v247 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD000000000000093, 0x80000001C6916440, 0xD000000000000018, 0x80000001C69164E0, 181, MEMORY[0x1E4FBC860], 2);
    sub_1C675786C(0, 0xE000000000000000);
    sub_1C669521C();
    swift_allocError();
    *uint64_t v248 = v247;
    swift_willThrow();
    swift_bridgeObjectRelease();

    sub_1C65B4354(v246, &qword_1EA407B10);
LABEL_173:
    swift_bridgeObjectRelease();
    goto LABEL_174;
  }
  unint64_t v105 = v102 + 16 * v104 + 32;
  if (v81 + 32 >= v105 + 16 * v101 || v105 >= v81 + 32 + 16 * v101)
  {
    swift_arrayInitWithCopy();
    if (v101)
    {
      uint64_t v107 = *(void *)(v102 + 16);
      BOOL v108 = __OFADD__(v107, v101);
      uint64_t v109 = v107 + v101;
      if (v108)
      {
        __break(1u);
        goto LABEL_176;
      }
      *(void *)(v102 + 16) = v109;
    }
    goto LABEL_41;
  }
  OUTLINED_FUNCTION_0_8();
  OUTLINED_FUNCTION_32_10();
  sub_1C68ED568();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1C66E6A4C(unint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5210);
  OUTLINED_FUNCTION_0_1();
  uint64_t v168 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_20();
  uint64_t v167 = v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_3_0();
  uint64_t v172 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_3_0();
  uint64_t v171 = v11;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_3_0();
  uint64_t v173 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_3_0();
  uint64_t v179 = v15;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_3_0();
  uint64_t v181 = v17;
  OUTLINED_FUNCTION_13();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v166 - v20;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_3_0();
  uint64_t v182 = v22;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_3_0();
  uint64_t v175 = v24;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_3_0();
  uint64_t v183 = (char *)v26;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_3_0();
  uint64_t v176 = v28;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_3_0();
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_3_0();
  uint64_t v177 = v33;
  OUTLINED_FUNCTION_13();
  uint64_t v35 = MEMORY[0x1F4188790](v34);
  uint64_t v37 = (char *)&v166 - v36;
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_3_0();
  uint64_t v170 = v39;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v40);
  uint64_t v178 = (uint64_t)&v166 - v41;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v42);
  OUTLINED_FUNCTION_3_0();
  unint64_t v174 = (char *)v43;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v44);
  OUTLINED_FUNCTION_3_0();
  uint64_t v180 = v45;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v46);
  OUTLINED_FUNCTION_3_0();
  uint64_t v185 = v47;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v48);
  uint64_t v184 = (char *)&v166 - v49;
  OUTLINED_FUNCTION_13();
  uint64_t v51 = MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v166 - v52;
  MEMORY[0x1F4188790](v51);
  uint64_t v55 = (char *)&v166 - v54;
  uint64_t v56 = type metadata accessor for ContactsFrameworkMatcher();
  uint64_t v57 = MEMORY[0x1E4FBC860];
  BOOL v58 = *(unsigned char *)(v1 + *(int *)(v56 + 24)) == 1;
  uint64_t v186 = v4;
  unint64_t v169 = a1;
  if (v58)
  {
    v187[0] = MEMORY[0x1E4FBC860];
    uint64_t v59 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v60 = v59;
    unint64_t v61 = a1;
    uint64_t v179 = v60;
    if (!v60) {
      goto LABEL_33;
    }
    uint64_t v181 = v2;
    uint64_t v183 = v53 + 334;
    OUTLINED_FUNCTION_36_8();
    uint64_t v63 = *(void *)(v62 + 72);
    uint64_t v182 = v64;
    uint64_t v65 = a1 + v64;
    unint64_t v61 = MEMORY[0x1E4FBC860];
    uint64_t v67 = v66;
    while (1)
    {
      sub_1C65BB124(v65, (uint64_t)v55, &qword_1EBBF5210);
      uint64_t v68 = v186;
      a1 = v55[*(int *)(v186 + 36) + 333];
      sub_1C65BB124((uint64_t)v55, (uint64_t)v53, &qword_1EBBF5210);
      if (a1 == 1)
      {
        a1 = v183[*(int *)(v68 + 36)];
        sub_1C65B4354((uint64_t)v53, &qword_1EBBF5210);
        if (a1)
        {
          sub_1C65D3C68((uint64_t)v55, (uint64_t)v184, &qword_1EBBF5210);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            OUTLINED_FUNCTION_4_23();
          }
          unint64_t v61 = v187[0];
          a1 = *(void *)(v187[0] + 16);
          if (a1 >= *(void *)(v187[0] + 24) >> 1)
          {
            sub_1C669FB20();
            unint64_t v61 = v187[0];
          }
          *(void *)(v61 + 16) = a1 + 1;
          sub_1C65D3C68((uint64_t)v184, v61 + v182 + a1 * v63, &qword_1EBBF5210);
          goto LABEL_14;
        }
      }
      else
      {
        sub_1C65B4354((uint64_t)v53, &qword_1EBBF5210);
      }
      sub_1C65B4354((uint64_t)v55, &qword_1EBBF5210);
LABEL_14:
      v65 += v63;
      if (!--v67)
      {
        uint64_t v4 = v186;
        OUTLINED_FUNCTION_22_9();
        uint64_t v57 = MEMORY[0x1E4FBC860];
        uint64_t v2 = v181;
LABEL_33:
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_45_8();
        if (v82)
        {
          uint64_t v83 = qword_1EBBF5DA0;
          swift_retain();
          if (v83 != -1) {
            swift_once();
          }
          uint64_t v84 = sub_1C68EC478();
          OUTLINED_FUNCTION_31_8(v84, (uint64_t)&unk_1EBBF7A68);
          uint64_t v85 = sub_1C68EC458();
          os_log_type_t v86 = sub_1C68ECE48();
          if (OUTLINED_FUNCTION_2_0(v86))
          {
            uint64_t v87 = (float *)OUTLINED_FUNCTION_15_19();
            OUTLINED_FUNCTION_10_20(v87, 3.852e-34);
            OUTLINED_FUNCTION_6_23();
            swift_release();
            uint64_t v88 = "found %ld identical relation token matches";
            goto LABEL_82;
          }
          goto LABEL_83;
        }
        OUTLINED_FUNCTION_39_5();
        if (!v179) {
          goto LABEL_72;
        }
        uint64_t v181 = v2;
        uint64_t v94 = v185 + 333;
        unint64_t v95 = (*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
        uint64_t v96 = *(void *)(v168 + 72);
        uint64_t v97 = v61 + v95;
        unint64_t v61 = MEMORY[0x1E4FBC860];
        uint64_t v98 = v179;
        while (2)
        {
          uint64_t v99 = v185;
          sub_1C65BB124(v97, v185, &qword_1EBBF5210);
          a1 = v186;
          int v100 = *(unsigned __int8 *)(v94 + *(int *)(v186 + 36));
          uint64_t v101 = v99;
          uint64_t v102 = v180;
          sub_1C65BB124(v101, v180, &qword_1EBBF5210);
          if (v100 == 1)
          {
            uint64_t v103 = v102 + *(int *)(a1 + 36);
            LOBYTE(v103) = *(unsigned char *)(v103 + *(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 180));
            sub_1C65B4354(v102, &qword_1EBBF5210);
            if ((v103 & 1) == 0)
            {
              sub_1C65D3C68(v185, (uint64_t)v174, &qword_1EBBF5210);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                OUTLINED_FUNCTION_4_23();
              }
              unint64_t v61 = v187[0];
              a1 = *(void *)(v187[0] + 16);
              if (a1 >= *(void *)(v187[0] + 24) >> 1)
              {
                OUTLINED_FUNCTION_9_22();
                unint64_t v61 = v187[0];
              }
              *(void *)(v61 + 16) = a1 + 1;
              sub_1C65D3C68((uint64_t)v174, v61 + v95 + a1 * v96, &qword_1EBBF5210);
LABEL_55:
              v97 += v96;
              if (!--v98)
              {
                uint64_t v4 = v186;
                OUTLINED_FUNCTION_22_9();
                uint64_t v57 = MEMORY[0x1E4FBC860];
                uint64_t v2 = v181;
LABEL_72:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_45_8();
                if (v116)
                {
                  uint64_t v117 = qword_1EBBF5DA0;
                  swift_retain();
                  if (v117 != -1) {
                    swift_once();
                  }
                  uint64_t v118 = sub_1C68EC478();
                  OUTLINED_FUNCTION_31_8(v118, (uint64_t)&unk_1EBBF7A68);
                  uint64_t v85 = sub_1C68EC458();
                  os_log_type_t v119 = sub_1C68ECE48();
                  if (OUTLINED_FUNCTION_2_0(v119))
                  {
                    uint64_t v87 = (float *)OUTLINED_FUNCTION_15_19();
                    OUTLINED_FUNCTION_10_20(v87, 3.852e-34);
                    OUTLINED_FUNCTION_6_23();
                    swift_release();
                    uint64_t v88 = "found %ld non-transliterated token matches";
                    goto LABEL_82;
                  }
                  goto LABEL_83;
                }
                OUTLINED_FUNCTION_39_5();
                if (!v179) {
                  goto LABEL_118;
                }
                OUTLINED_FUNCTION_21_10();
                uint64_t v186 = v126;
                uint64_t v127 = v61 + v126;
                while (2)
                {
                  uint64_t v128 = v125;
                  uint64_t v129 = v178;
                  sub_1C65BB124(v127, v178, &qword_1EBBF5210);
                  uint64_t v130 = v129 + *(int *)(v4 + 36);
                  uint64_t v131 = type metadata accessor for ContactResolver.SignalSet(0);
                  LODWORD(v130) = *(unsigned __int8 *)(v130 + *(int *)(v131 + 140));
                  uint64_t v132 = v129;
                  uint64_t v133 = v170;
                  sub_1C65BB124(v132, v170, &qword_1EBBF5210);
                  if (v130 == 1)
                  {
                    sub_1C65B4354(v133, &qword_1EBBF5210);
                    goto LABEL_92;
                  }
                  char v134 = *(unsigned char *)(v133 + *(int *)(v4 + 36) + *(int *)(v131 + 180));
                  sub_1C65B4354(v133, &qword_1EBBF5210);
                  if (v134)
                  {
                    sub_1C65B4354(v178, &qword_1EBBF5210);
                  }
                  else
                  {
LABEL_92:
                    sub_1C65D3C68(v178, v2, &qword_1EBBF5210);
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      OUTLINED_FUNCTION_4_23();
                    }
                    uint64_t v135 = v187[0];
                    unint64_t v136 = *(void *)(v187[0] + 16);
                    if (v136 >= *(void *)(v187[0] + 24) >> 1)
                    {
                      OUTLINED_FUNCTION_9_22();
                      uint64_t v135 = v187[0];
                    }
                    *(void *)(v135 + 16) = v136 + 1;
                    sub_1C65D3C68(v2, v135 + v186 + v136 * a1, &qword_1EBBF5210);
                  }
                  v127 += a1;
                  uint64_t v125 = v128 - 1;
                  if (v128 == 1)
                  {
                    uint64_t v57 = v187[0];
                    OUTLINED_FUNCTION_22_9();
LABEL_118:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v188 = v57;
                    if (*(void *)(v57 + 16))
                    {
                      uint64_t v151 = qword_1EBBF5DA0;
                      swift_retain();
                      if (v151 != -1) {
                        swift_once();
                      }
                      uint64_t v152 = sub_1C68EC478();
                      os_log_type_t v153 = __swift_project_value_buffer(v152, (uint64_t)&unk_1EBBF7A68);
                      swift_retain();
                      uint64_t v154 = sub_1C68EC458();
                      os_log_type_t v155 = sub_1C68ECE48();
                      if (OUTLINED_FUNCTION_6_2(v155))
                      {
                        uint64_t v156 = (float *)swift_slowAlloc();
                        OUTLINED_FUNCTION_33_9(v156, 3.852e-34);
                        OUTLINED_FUNCTION_20_15();
                        swift_release();
                        uint64_t v157 = "found %ld MeCard or non-transliterated matches";
LABEL_128:
                        _os_log_impl(&dword_1C65AE000, v154, v153, v157, (uint8_t *)v156, 0xCu);
                        MEMORY[0x1C87A54F0](v156, -1, -1);

                        goto LABEL_85;
                      }
LABEL_134:

LABEL_84:
                      swift_release_n();
                      goto LABEL_85;
                    }
LABEL_129:
                    swift_release();
                    if (qword_1EBBF5DA0 != -1) {
                      swift_once();
                    }
                    uint64_t v161 = sub_1C68EC478();
                    os_log_type_t v162 = __swift_project_value_buffer(v161, (uint64_t)&unk_1EBBF7A68);
                    char v163 = sub_1C68EC458();
                    os_log_type_t v164 = sub_1C68ECE48();
                    if (OUTLINED_FUNCTION_6_2(v164))
                    {
                      uint64_t v165 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)uint64_t v165 = 0;
                      _os_log_impl(&dword_1C65AE000, v163, v162, "did not find viable matches", v165, 2u);
                      MEMORY[0x1C87A54F0](v165, -1, -1);
                    }

                    return MEMORY[0x1E4FBC860];
                  }
                  continue;
                }
              }
              continue;
            }
          }
          else
          {
            sub_1C65B4354(v102, &qword_1EBBF5210);
          }
          break;
        }
        sub_1C65B4354(v185, &qword_1EBBF5210);
        goto LABEL_55;
      }
    }
  }
  unint64_t v174 = v21;
  v187[0] = MEMORY[0x1E4FBC860];
  uint64_t v69 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v170 = v69;
  if (v69)
  {
    uint64_t v184 = v37 + 333;
    uint64_t v180 = v177 + 334;
    OUTLINED_FUNCTION_36_8();
    uint64_t v185 = *(void *)(v70 + 72);
    uint64_t v178 = v71;
    uint64_t v72 = a1 + v71;
    a1 = (unint64_t)&qword_1EBBF5210;
    uint64_t v73 = v182;
    uint64_t v74 = v31;
    uint64_t v76 = v75;
    while (1)
    {
      sub_1C65BB124(v72, (uint64_t)v37, &qword_1EBBF5210);
      uint64_t v1 = v184[*(int *)(v4 + 36)];
      sub_1C65BB124((uint64_t)v37, v76, &qword_1EBBF5210);
      if (v1 != 1) {
        goto LABEL_23;
      }
      uint64_t v1 = *(unsigned __int8 *)(v180 + *(int *)(v4 + 36));
      sub_1C65BB124(v76, v74, &qword_1EBBF5210);
      if (v1)
      {
        sub_1C65B4354(v74, &qword_1EBBF5210);
        sub_1C65B4354(v76, &qword_1EBBF5210);
LABEL_26:
        sub_1C65D3C68((uint64_t)v37, (uint64_t)v183, &qword_1EBBF5210);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v1 = (uint64_t)v187;
          sub_1C669FB20();
        }
        uint64_t v80 = v187[0];
        unint64_t v81 = *(void *)(v187[0] + 16);
        if (v81 >= *(void *)(v187[0] + 24) >> 1)
        {
          uint64_t v1 = (uint64_t)v187;
          sub_1C669FB20();
          uint64_t v80 = v187[0];
        }
        *(void *)(v80 + 16) = v81 + 1;
        sub_1C65D3C68((uint64_t)v183, v80 + v178 + v81 * v185, &qword_1EBBF5210);
        uint64_t v4 = v186;
        uint64_t v73 = v182;
        goto LABEL_31;
      }
      uint64_t v77 = v74 + *(int *)(v4 + 36);
      uint64_t v1 = type metadata accessor for ContactResolver.SignalSet(0);
      LOBYTE(v77) = *(unsigned char *)(v77 + *(int *)(v1 + 180));
      uint64_t v78 = v4;
      uint64_t v79 = v176;
      sub_1C65BB124(v74, v176, &qword_1EBBF5210);
      if (v77) {
        break;
      }
      uint64_t v1 = *(unsigned __int8 *)(v79 + *(int *)(v78 + 36) + *(int *)(v1 + 148));
      sub_1C65B4354(v79, &qword_1EBBF5210);
      sub_1C65B4354(v74, &qword_1EBBF5210);
      uint64_t v4 = v78;
      uint64_t v76 = v177;
      sub_1C65B4354(v177, &qword_1EBBF5210);
      uint64_t v73 = v182;
      if ((v1 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_24:
      sub_1C65B4354((uint64_t)v37, &qword_1EBBF5210);
LABEL_31:
      v72 += v185;
      if (!--v69)
      {
        uint64_t v57 = MEMORY[0x1E4FBC860];
        goto LABEL_39;
      }
    }
    sub_1C65B4354(v79, &qword_1EBBF5210);
    sub_1C65B4354(v74, &qword_1EBBF5210);
    uint64_t v73 = v182;
    uint64_t v4 = v78;
    uint64_t v76 = v177;
LABEL_23:
    sub_1C65B4354(v76, &qword_1EBBF5210);
    goto LABEL_24;
  }
  uint64_t v73 = v182;
LABEL_39:
  OUTLINED_FUNCTION_22_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_45_8();
  uint64_t v89 = v179;
  if (v90)
  {
    uint64_t v91 = qword_1EBBF5DA0;
    swift_retain();
    if (v91 != -1) {
      swift_once();
    }
    uint64_t v92 = sub_1C68EC478();
    OUTLINED_FUNCTION_31_8(v92, (uint64_t)&unk_1EBBF7A68);
    uint64_t v85 = sub_1C68EC458();
    os_log_type_t v93 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_2_0(v93))
    {
      uint64_t v87 = (float *)OUTLINED_FUNCTION_15_19();
      OUTLINED_FUNCTION_10_20(v87, 3.852e-34);
      OUTLINED_FUNCTION_6_23();
      swift_release();
      uint64_t v88 = "found %ld identical or non-transformed token matches";
      goto LABEL_82;
    }
    goto LABEL_83;
  }
  OUTLINED_FUNCTION_39_5();
  uint64_t v104 = v170;
  if (!v170) {
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_21_10();
  uint64_t v185 = v105;
  uint64_t v106 = v1 + v105;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v107 = v175;
  do
  {
    sub_1C65BB124(v106, v107, &qword_1EBBF5210);
    uint64_t v108 = v107 + *(int *)(v4 + 36);
    uint64_t v109 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
    LODWORD(v108) = *(unsigned __int8 *)(v108 + v109[35]);
    sub_1C65BB124(v107, v73, &qword_1EBBF5210);
    if (v108 == 1)
    {
      sub_1C65B4354(v73, &qword_1EBBF5210);
    }
    else
    {
      char v110 = *(unsigned char *)(v73 + *(int *)(v4 + 36) + v109[45]);
      uint64_t v111 = v73;
      uint64_t v112 = v73;
      uint64_t v113 = (uint64_t)v174;
      sub_1C65BB124(v111, (uint64_t)v174, &qword_1EBBF5210);
      if (v110)
      {
        sub_1C65B4354(v113, &qword_1EBBF5210);
        OUTLINED_FUNCTION_40_7();
        uint64_t v73 = v112;
        uint64_t v107 = v175;
LABEL_64:
        OUTLINED_FUNCTION_40_7();
        goto LABEL_70;
      }
      char v114 = *(unsigned char *)(v113 + *(int *)(v4 + 36) + v109[37]);
      sub_1C65B4354(v113, &qword_1EBBF5210);
      OUTLINED_FUNCTION_40_7();
      uint64_t v73 = v112;
      uint64_t v107 = v175;
      if (v114) {
        goto LABEL_64;
      }
    }
    sub_1C65D3C68(v107, v181, &qword_1EBBF5210);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      OUTLINED_FUNCTION_4_23();
    }
    uint64_t v1 = v187[0];
    unint64_t v115 = *(void *)(v187[0] + 16);
    if (v115 >= *(void *)(v187[0] + 24) >> 1)
    {
      OUTLINED_FUNCTION_9_22();
      uint64_t v1 = v187[0];
    }
    *(void *)(v1 + 16) = v115 + 1;
    sub_1C65D3C68(v181, v1 + v185 + v115 * a1, &qword_1EBBF5210);
LABEL_70:
    v106 += a1;
    --v104;
  }
  while (v104);
  OUTLINED_FUNCTION_22_9();
  uint64_t v57 = MEMORY[0x1E4FBC860];
  uint64_t v89 = v179;
LABEL_77:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_45_8();
  if (!v120)
  {
    OUTLINED_FUNCTION_39_5();
    uint64_t v137 = v170;
    if (v170)
    {
      uint64_t v138 = v89 + 256;
      uint64_t v139 = v173;
      uint64_t v185 = v173 + 333;
      OUTLINED_FUNCTION_36_8();
      uint64_t v141 = *(void *)(v140 + 72);
      uint64_t v184 = (char *)v142;
      uint64_t v143 = v1 + v142;
      while (2)
      {
        sub_1C65BB124(v143, v89, &qword_1EBBF5210);
        switch(*(unsigned char *)(v138 + *(int *)(v186 + 36)))
        {
          case 1:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_44_7();
            goto LABEL_104;
          default:
            a1 = sub_1C68ED7E8();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_44_7();
            if ((a1 & 1) == 0)
            {
              OUTLINED_FUNCTION_40_7();
              OUTLINED_FUNCTION_42_8();
LABEL_113:
              OUTLINED_FUNCTION_36_10();
              OUTLINED_FUNCTION_41_10();
LABEL_114:
              OUTLINED_FUNCTION_36_10();
LABEL_115:
              uint64_t v89 = v179;
              sub_1C65B4354(v179, &qword_1EBBF5210);
              goto LABEL_116;
            }
LABEL_104:
            uint64_t v144 = v139;
            int v145 = *(unsigned __int8 *)(v185 + *(int *)(v186 + 36));
            sub_1C65B4354(v144, &qword_1EBBF5210);
            OUTLINED_FUNCTION_42_8();
            if (v145 != 1) {
              goto LABEL_113;
            }
            unint64_t v146 = a1 + *(int *)(v186 + 36);
            uint64_t v147 = type metadata accessor for ContactResolver.SignalSet(0);
            LOBYTE(v146) = *(unsigned char *)(v146 + *(int *)(v147 + 148));
            OUTLINED_FUNCTION_36_10();
            OUTLINED_FUNCTION_41_10();
            if ((v146 & 1) == 0) {
              goto LABEL_114;
            }
            char v148 = *(unsigned char *)(a1 + *(int *)(v186 + 36) + *(int *)(v147 + 132) + 15);
            OUTLINED_FUNCTION_36_10();
            if ((v148 & 1) == 0) {
              goto LABEL_115;
            }
            sub_1C65D3C68(v179, v167, &qword_1EBBF5210);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              OUTLINED_FUNCTION_4_23();
            }
            uint64_t v149 = v187[0];
            unint64_t v150 = *(void *)(v187[0] + 16);
            if (v150 >= *(void *)(v187[0] + 24) >> 1)
            {
              OUTLINED_FUNCTION_9_22();
              uint64_t v149 = v187[0];
            }
            *(void *)(v149 + 16) = v150 + 1;
            sub_1C65D3C68(v167, (uint64_t)&v184[v149 + v150 * v141], &qword_1EBBF5210);
            uint64_t v89 = v179;
LABEL_116:
            v143 += v141;
            --v137;
            uint64_t v139 = v173;
            if (v137) {
              continue;
            }
            uint64_t v57 = v187[0];
            OUTLINED_FUNCTION_22_9();
            break;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v188 = v57;
    if (*(void *)(v57 + 16))
    {
      uint64_t v158 = qword_1EBBF5DA0;
      swift_retain();
      if (v158 != -1) {
        swift_once();
      }
      uint64_t v159 = sub_1C68EC478();
      os_log_type_t v153 = __swift_project_value_buffer(v159, (uint64_t)&unk_1EBBF7A68);
      swift_retain();
      uint64_t v154 = sub_1C68EC458();
      os_log_type_t v160 = sub_1C68ECE48();
      if (OUTLINED_FUNCTION_6_2(v160))
      {
        uint64_t v156 = (float *)swift_slowAlloc();
        OUTLINED_FUNCTION_33_9(v156, 3.852e-34);
        OUTLINED_FUNCTION_20_15();
        swift_release();
        uint64_t v157 = "found %ld NLv3 relation matches that are set as nicknames";
        goto LABEL_128;
      }
      goto LABEL_134;
    }
    goto LABEL_129;
  }
  uint64_t v121 = qword_1EBBF5DA0;
  swift_retain();
  if (v121 != -1) {
    swift_once();
  }
  uint64_t v122 = sub_1C68EC478();
  OUTLINED_FUNCTION_31_8(v122, (uint64_t)&unk_1EBBF7A68);
  uint64_t v85 = sub_1C68EC458();
  os_log_type_t v123 = sub_1C68ECE48();
  if (!OUTLINED_FUNCTION_2_0(v123))
  {
LABEL_83:

    goto LABEL_84;
  }
  uint64_t v87 = (float *)OUTLINED_FUNCTION_15_19();
  OUTLINED_FUNCTION_10_20(v87, 3.852e-34);
  OUTLINED_FUNCTION_6_23();
  swift_release();
  uint64_t v88 = "found %ld MeCard or non-transformed matches";
LABEL_82:
  _os_log_impl(&dword_1C65AE000, v85, (os_log_type_t)v57, v88, (uint8_t *)v87, 0xCu);
  MEMORY[0x1C87A54F0](v87, -1, -1);

LABEL_85:
  swift_beginAccess();
  return v188;
}

uint64_t sub_1C66E7CF8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = a1;
  sub_1C667A62C();
  uint64_t v6 = a2[23];
  if (v6)
  {
    uint64_t v7 = a2[21];
    uint64_t v8 = a2[22];
    uint64_t v9 = *(void *)(a3 + 216);
    sub_1C65B54A8(v7, v8, a2[23]);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_16_16();
      sub_1C65C81C4();
      uint64_t v9 = v17;
    }
    unint64_t v11 = *(void *)(v9 + 16);
    unint64_t v10 = *(void *)(v9 + 24);
    if (v11 >= v10 >> 1)
    {
      OUTLINED_FUNCTION_62(v10);
      sub_1C65C81C4();
      uint64_t v9 = v18;
    }
    *(void *)(v9 + 16) = v11 + 1;
    uint64_t v12 = (void *)(v9 + 48 * v11);
    v12[4] = 0;
    v12[5] = 0xE000000000000000;
    v12[6] = v8;
    v12[7] = v6;
    v12[8] = 0;
    v12[9] = 0xE000000000000000;
    sub_1C65B6684(v7, v8, v6);
    *(void *)(a3 + 216) = v9;
  }
  uint64_t v13 = (char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5200) + 36);
  uint64_t v14 = type metadata accessor for ContactResolver.SignalSet(0);
  if (v13[*(int *)(v14 + 204)]) {
    char v15 = (v13[*(int *)(v14 + 212)] & 1) == 0;
  }
  else {
    char v15 = 2;
  }
  uint64_t result = type metadata accessor for Contact();
  *(unsigned char *)(a3 + *(int *)(result + 92)) = v15;
  return result;
}

uint64_t sub_1C66E7E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Contact();
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v2 + *(int *)(type metadata accessor for ContactsFrameworkMatcher() + 20);
  uint64_t v7 = type metadata accessor for StringTokenizer();
  uint64_t v71 = v7;
  uint64_t v72 = &off_1F2185050;
  uint64_t v8 = v70;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v70);
  sub_1C65DF2F4(v6, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for StringTokenizer);
  uint64_t v10 = sub_1C667F320();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v64 = v7;
    uint64_t v65 = v6;
    uint64_t v66 = v3;
    uint64_t v67 = a2;
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t *)(v10 + 40);
    uint64_t v13 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v14 = *(v12 - 1);
      uint64_t v15 = *v12;
      uint64_t v16 = v71;
      uint64_t v17 = (uint64_t)v72;
      __swift_project_boxed_opaque_existential_1(v70, v71);
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C689BA4C(v14, v15, 1, v16, v17);
      MEMORY[0x1F4188790](v18);
      OUTLINED_FUNCTION_47_6();
      uint64_t v20 = sub_1C6814C30((uint64_t)sub_1C6688084, v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v13 + 16);
      if (__OFADD__(v22, v21))
      {
        __break(1u);
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(void *)(v13 + 24) >> 1)
      {
        sub_1C65C8524();
        uint64_t v13 = v23;
      }
      if (*(void *)(v20 + 16))
      {
        uint64_t v24 = *(void *)(v13 + 16);
        if ((*(void *)(v13 + 24) >> 1) - v24 < v21) {
          goto LABEL_59;
        }
        unint64_t v25 = OUTLINED_FUNCTION_29_9(v13 + 16 * v24);
        BOOL v27 = v27 || v25 >= v26;
        if (!v27)
        {
LABEL_64:
          OUTLINED_FUNCTION_0_8();
          OUTLINED_FUNCTION_32_10();
          uint64_t result = sub_1C68ED568();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v21)
        {
          uint64_t v28 = *(void *)(v13 + 16);
          BOOL v29 = __OFADD__(v28, v21);
          uint64_t v30 = v28 + v21;
          if (v29) {
            goto LABEL_61;
          }
          *(void *)(v13 + 16) = v30;
        }
      }
      else if (v21)
      {
        goto LABEL_56;
      }
      v12 += 2;
      swift_bridgeObjectRelease();
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v66;
        a2 = v67;
        uint64_t v7 = v64;
        uint64_t v6 = v65;
        goto LABEL_21;
      }
    }
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)sub_1C6688970(v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  uint64_t v71 = v7;
  uint64_t v72 = &off_1F2185050;
  uint64_t v31 = __swift_allocate_boxed_opaque_existential_1(v70);
  sub_1C65DF2F4(v6, (uint64_t)v31, (void (*)(void))type metadata accessor for StringTokenizer);
  uint64_t v32 = sub_1C667F180();
  uint64_t v33 = *(void *)(v32 + 16);
  sub_1C65DF2F4(a2, v3, (void (*)(void))type metadata accessor for Contact);
  if (v33)
  {
    sub_1C65B33A8(v3, (void (*)(void))type metadata accessor for Contact);
  }
  else
  {
    unint64_t v34 = *(void *)(v3 + 144);
    if ((v34 & 0x2000000000000000) != 0) {
      uint64_t v35 = HIBYTE(v34) & 0xF;
    }
    else {
      uint64_t v35 = *(void *)(v3 + 136) & 0xFFFFFFFFFFFFLL;
    }
    sub_1C65B33A8(v3, (void (*)(void))type metadata accessor for Contact);
    if (v35)
    {
      uint64_t v11 = *(void *)(a2 + 136);
      uint64_t v21 = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_28;
      }
      goto LABEL_63;
    }
  }
  while (1)
  {
    uint64_t v11 = *(void *)(v32 + 16);
    if (!v11) {
      break;
    }
    uint64_t v68 = v8;
    swift_bridgeObjectRetain();
    uint64_t v40 = (uint64_t *)(v32 + 40);
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t v8 = v70;
    while (1)
    {
      uint64_t v42 = *(v40 - 1);
      uint64_t v43 = *v40;
      uint64_t v44 = v71;
      uint64_t v45 = (uint64_t)v72;
      __swift_project_boxed_opaque_existential_1(v70, v71);
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1C689BA4C(v42, v43, 1, v44, v45);
      MEMORY[0x1F4188790](v46);
      OUTLINED_FUNCTION_47_6();
      uint64_t v48 = sub_1C6814C30((uint64_t)sub_1C66883E8, v47, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v48 + 16);
      uint64_t v49 = *(void *)(v41 + 16);
      if (__OFADD__(v49, v21)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v49 + v21 > *(void *)(v41 + 24) >> 1)
      {
        sub_1C65C8524();
        uint64_t v41 = v50;
      }
      if (*(void *)(v48 + 16))
      {
        uint64_t v51 = *(void *)(v41 + 16);
        if ((*(void *)(v41 + 24) >> 1) - v51 < v21) {
          goto LABEL_60;
        }
        unint64_t v52 = OUTLINED_FUNCTION_29_9(v41 + 16 * v51);
        if (!v27 && v52 < v53) {
          goto LABEL_64;
        }
        swift_arrayInitWithCopy();
        if (v21)
        {
          uint64_t v55 = *(void *)(v41 + 16);
          BOOL v29 = __OFADD__(v55, v21);
          uint64_t v56 = v55 + v21;
          if (v29) {
            goto LABEL_62;
          }
          *(void *)(v41 + 16) = v56;
        }
      }
      else if (v21)
      {
        goto LABEL_58;
      }
      v40 += 2;
      swift_bridgeObjectRelease();
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v68;
        goto LABEL_51;
      }
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    OUTLINED_FUNCTION_16_16();
    sub_1C65C8524();
    uint64_t v32 = v62;
LABEL_28:
    unint64_t v37 = *(void *)(v32 + 16);
    unint64_t v36 = *(void *)(v32 + 24);
    uint64_t v38 = v32;
    if (v37 >= v36 >> 1)
    {
      OUTLINED_FUNCTION_43_6(v36);
      sub_1C65C8524();
      uint64_t v38 = v63;
    }
    *(void *)(v38 + 16) = v37 + 1;
    uint64_t v32 = v38;
    unint64_t v39 = v38 + 16 * v37;
    *(void *)(v39 + 32) = v11;
    *(void *)(v39 + 40) = v21;
  }
  uint64_t v41 = MEMORY[0x1E4FBC860];
LABEL_51:
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_1C6688970(v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  char v58 = sub_1C6816200((uint64_t)v8, a1);
  swift_bridgeObjectRelease();
  char v59 = sub_1C6816200(a1, v57);
  swift_bridgeObjectRelease();
  if (v59) {
    int v60 = 256;
  }
  else {
    int v60 = 0;
  }
  return v60 & 0xFFFFFFFE | v58 & 1;
}

uint64_t sub_1C66E841C(void *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C68ECA48();
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    do
    {
      if ((a2(v6, v7) & 1) == 0) {
        MEMORY[0x1C87A3940](v6, v7);
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_1C68ECA48();
      uint64_t v7 = v8;
    }
    while (v8);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1C66E8508(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v61 = a3;
  uint64_t v51 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B08);
  uint64_t v47 = *(void *)(v49 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v49);
  uint64_t v52 = (uint64_t)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v48 = (void *)((char *)v46 - v8);
  uint64_t v53 = type metadata accessor for ContactsFrameworkMatcher();
  MEMORY[0x1F4188790](v53);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1C68EAEE8();
  uint64_t v11 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  char v59 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2;
  uint64_t result = *(void *)(a2 + 240);
  uint64_t v14 = *(void *)(result + 16);
  if (!v14) {
    return result;
  }
  v46[1] = v4;
  unsigned int v57 = *MEMORY[0x1E4FA3028];
  uint64_t v16 = *(void (**)(char *, void, uint64_t))(v11 + 104);
  uint64_t v15 = v11 + 104;
  uint64_t v55 = (void (**)(char *, uint64_t))(v15 - 96);
  uint64_t v56 = v16;
  v46[0] = swift_bridgeObjectRetain();
  uint64_t v17 = (uint64_t *)(v46[0] + 72);
  char v58 = v10;
  uint64_t v54 = v15;
  while (1)
  {
    int v63 = *((unsigned __int8 *)v17 - 40);
    uint64_t v19 = *(v17 - 4);
    uint64_t v18 = *(v17 - 3);
    uint64_t v20 = *(v17 - 1);
    uint64_t v62 = *(v17 - 2);
    uint64_t v21 = *v17;
    uint64_t v22 = v59;
    uint64_t v23 = v60;
    v56(v59, v57, v60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C68EAED8();
    uint64_t v26 = v25;
    (*v55)(v22, v23);
    if (v19 == v24 && v18 == v26) {
      break;
    }
    char v28 = sub_1C68ED7E8();
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v58;
    sub_1C65DF2F4(v61, (uint64_t)v58, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
    if (v28) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C65B33A8(v29, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
LABEL_22:
    v17 += 6;
    if (!--v14) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v58;
  sub_1C65DF2F4(v61, (uint64_t)v58, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
LABEL_10:
  int v30 = *(unsigned __int8 *)(v29 + *(int *)(v53 + 28));
  sub_1C65B33A8(v29, (void (*)(void))type metadata accessor for ContactsFrameworkMatcher);
  if (((v30 | v63) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v31 = (uint64_t)v48;
  uint64_t v32 = (uint64_t)v48 + *(int *)(v49 + 48);
  void *v48 = v21;
  sub_1C65BB124(v50, v32, &qword_1EBBF5200);
  sub_1C65D3C68(v31, v52, &qword_1EA407B08);
  swift_bridgeObjectRetain();
  uint64_t v33 = v51;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v64 = (void *)*v33;
  unint64_t v34 = v64;
  *uint64_t v33 = 0x8000000000000000;
  unint64_t v35 = sub_1C68506A0(v62, v20);
  if (!__OFADD__(v34[2], (v36 & 1) == 0))
  {
    unint64_t v37 = v35;
    char v38 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B18);
    if (sub_1C68ED4D8())
    {
      unint64_t v39 = sub_1C68506A0(v62, v20);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_27;
      }
      unint64_t v37 = v39;
    }
    uint64_t v41 = v64;
    if (v38)
    {
      sub_1C66E8F60(v52, v64[7] + *(void *)(v47 + 72) * v37);
    }
    else
    {
      v64[(v37 >> 6) + 8] |= 1 << v37;
      uint64_t v42 = (void *)(v41[6] + 16 * v37);
      *uint64_t v42 = v62;
      v42[1] = v20;
      sub_1C65D3C68(v52, v41[7] + *(void *)(v47 + 72) * v37, &qword_1EA407B08);
      uint64_t v43 = v41[2];
      BOOL v44 = __OFADD__(v43, 1);
      uint64_t v45 = v43 + 1;
      if (v44) {
        goto LABEL_26;
      }
      v41[2] = v45;
      swift_bridgeObjectRetain();
    }
    *uint64_t v51 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_1C68ED868();
  __break(1u);
  return result;
}

uint64_t sub_1C66E8A34(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v40 = v7 + 16;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 15;
    uint64_t v9 = HIBYTE(a4) & 0xF;
    if (!a1 || ((a4 & 0x2000000000000000) != 0 ? (uint64_t v10 = HIBYTE(a4) & 0xF) : (uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL), !v10))
    {
      if ((a4 & 0x2000000000000000) == 0) {
        uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v28 = 7;
      if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
        uint64_t v28 = 11;
      }
      sub_1C66E8E10(v28 | (v9 << 16), v8, a2 & 1, v7);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      return v11;
    }
    uint64_t v39 = a1;
    unint64_t v45 = 4 * v10;
    uint64_t v11 = MEMORY[0x1E4FBC860];
    unint64_t v12 = 15;
    unint64_t v13 = 15;
    uint64_t v14 = 15;
    do
    {
      sub_1C68ECAF8();
      char v15 = sub_1C68EC7B8();
      swift_bridgeObjectRelease();
      if (v15)
      {
        char v16 = (v13 >> 14 == v12 >> 14) & a2;
        if (!v16)
        {
          if (v12 >> 14 < v13 >> 14) {
            goto LABEL_35;
          }
          uint64_t v17 = sub_1C68ECB18();
          uint64_t v42 = v18;
          uint64_t v43 = v17;
          uint64_t v20 = v19;
          uint64_t v41 = v21;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_16_16();
            sub_1C65C8A34();
            uint64_t v11 = v26;
          }
          unint64_t v22 = *(void *)(v11 + 16);
          if (v22 >= *(void *)(v11 + 24) >> 1)
          {
            sub_1C65C8A34();
            uint64_t v11 = v27;
          }
          *(void *)(v11 + 16) = v22 + 1;
          uint64_t v23 = (void *)(v11 + 32 * v22);
          v23[4] = v43;
          v23[5] = v42;
          v23[6] = v20;
          v23[7] = v41;
          *(void *)uint64_t v40 = v11;
        }
        unint64_t v24 = sub_1C68EC9D8();
        *(void *)(v8 + 16) = v24;
        if (v16)
        {
          unint64_t v13 = v24;
          uint64_t v14 = v24;
        }
        else
        {
          unint64_t v13 = v24;
          uint64_t v14 = v24;
          if (*(void *)(v11 + 16) == v39) {
            break;
          }
        }
      }
      else
      {
        unint64_t v24 = sub_1C68EC9D8();
      }
      BOOL v25 = v45 == v24 >> 14;
      unint64_t v12 = v24;
      unint64_t v24 = v14;
    }
    while (!v25);
    if (v45 == v13 >> 14 && (a2 & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      return v11;
    }
    if (v45 >= v24 >> 14)
    {
      uint64_t v29 = sub_1C68ECB18();
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      sub_1C662DB90();
      uint64_t v36 = *(void *)(*(void *)v40 + 16);
      sub_1C662DE8C(v36);
      uint64_t v11 = *(void *)v40;
      *(void *)(v11 + 16) = v36 + 1;
      unint64_t v37 = (void *)(v11 + 32 * v36);
      v37[4] = v29;
      v37[5] = v31;
      v37[6] = v33;
      v37[7] = v35;
      *(void *)uint64_t v40 = v11;
      goto LABEL_33;
    }
  }
LABEL_35:
  OUTLINED_FUNCTION_0_8();
  uint64_t result = sub_1C68ED508();
  __break(1u);
  return result;
}

uint64_t sub_1C66E8E10(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1C68ECB18();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_1C662DB90();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_1C662DE8C(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    char v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1C68ED508();
  __break(1u);
  return result;
}

uint64_t sub_1C66E8F18()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C66E8F50()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C66E8F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_4_23()
{
  sub_1C669FB20();
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  *(void *)(v1 - 120) = v0;
  return sub_1C68ED0C8();
}

void OUTLINED_FUNCTION_9_22()
{
  sub_1C669FB20();
}

uint64_t OUTLINED_FUNCTION_10_20(float *a1, float a2)
{
  *a1 = a2;
  return swift_release();
}

void OUTLINED_FUNCTION_14_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 408) = a4;
}

uint64_t OUTLINED_FUNCTION_15_19()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_16_16()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return *(void *)(v0 + 392);
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  *(void *)(v1 - 120) = v0;
  return sub_1C68ED0C8();
}

uint64_t OUTLINED_FUNCTION_29_9@<X0>(uint64_t a1@<X8>)
{
  return a1 + 32;
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  return sub_1C68E9C68();
}

uint64_t OUTLINED_FUNCTION_40_7()
{
  return sub_1C65B4354(v0, v1);
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  uint64_t v4 = *(void *)(v2 - 240);
  return sub_1C65BB124(v1, v4, v0);
}

uint64_t OUTLINED_FUNCTION_42_8()
{
  uint64_t v4 = *(void *)(v2 - 248);
  return sub_1C65BB124(v1, v4, v0);
}

BOOL OUTLINED_FUNCTION_43_6@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_45_8()
{
  *(void *)(v1 - 96) = v0;
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t ContactSlotResolutionTask.init(queries:config:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 40) = a1;
  uint64_t v5 = type metadata accessor for ContactSlotResolutionTask();
  sub_1C65DCEBC(a2, a3 + *(int *)(v5 + 24), (void (*)(void))type metadata accessor for ContactResolverConfig);
  uint64_t v6 = type metadata accessor for ContactResolver();
  swift_allocObject();
  uint64_t v9 = v6;
  uint64_t v10 = &off_1F2176020;
  *(void *)&long long v8 = ContactResolver.init()();
  sub_1C66ECBC4(a2, (void (*)(void))type metadata accessor for ContactResolverConfig);
  return sub_1C65C490C(&v8, a3);
}

void ContactSlotResolutionTask.run(withAlreadyResolvedSlots:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_63();
  a19 = v22;
  a20 = v23;
  os_log_type_t v119 = v21;
  unint64_t v24 = v20;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4073A0);
  uint64_t v113 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v115 = v27 - v26;
  uint64_t v28 = type metadata accessor for ContactSlotResolutionTask();
  uint64_t v29 = v28 - 8;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_1_15();
  uint64_t v32 = v31 - v30;
  uint64_t v33 = type metadata accessor for ContactResolverRunTimeData(0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v114 = v34;
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  char v38 = (char *)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v103 - v39;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v42);
  OUTLINED_FUNCTION_1_15();
  uint64_t v45 = v44 - v43;
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  uint64_t v46 = v119;
  sub_1C65B7D24(v24[5], (uint64_t)v24 + *(int *)(v29 + 32), v47, v48, v49, v50, v51, v52, v103, v104, (uint64_t)v105, v106, v107, v108, v109, (uint64_t)v110, v111, v112, v113,
    v114);
  uint64_t v117 = (uint64_t)v46;
  if (!v46)
  {
    uint64_t v111 = v41;
    uint64_t v112 = v53;
    uint64_t v109 = v32;
    char v110 = v24;
    uint64_t v118 = v33;
    os_log_type_t v119 = v38;
    if (qword_1EBBF5DA0 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1C68EC478();
    uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)&unk_1EBBF7A68);
    uint64_t v56 = v112;
    swift_bridgeObjectRetain_n();
    unsigned int v57 = sub_1C68EC458();
    int v58 = sub_1C68ECE48();
    BOOL v59 = os_log_type_enabled(v57, (os_log_type_t)v58);
    uint64_t v60 = v111;
    if (v59)
    {
      HIDWORD(v107) = v58;
      uint64_t v108 = v55;
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      a10 = v106;
      *(_DWORD *)uint64_t v61 = 136315138;
      uint64_t v62 = *(void *)(v56 + 16);
      uint64_t v63 = MEMORY[0x1E4FBC860];
      if (v62)
      {
        unint64_t v104 = (unint64_t)v61;
        uint64_t v105 = v57;
        uint64_t v120 = MEMORY[0x1E4FBC860];
        sub_1C66A0234();
        uint64_t v64 = v56 + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80));
        uint64_t v116 = *(void *)(v114 + 72);
        uint64_t v63 = v120;
        do
        {
          sub_1C65DCEBC(v64, (uint64_t)v40, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
          sub_1C65BB124((uint64_t)&v40[*(int *)(v118 + 40)], v45, &qword_1EBBF4628);
          sub_1C66ECBC4((uint64_t)v40, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C66A0234();
            uint64_t v63 = v120;
          }
          unint64_t v65 = *(void *)(v63 + 16);
          if (v65 >= *(void *)(v63 + 24) >> 1)
          {
            sub_1C66A0234();
            uint64_t v63 = v120;
          }
          *(void *)(v63 + 16) = v65 + 1;
          OUTLINED_FUNCTION_2_34();
          sub_1C65D3C68(v45, v66 + v67 * v65, &qword_1EBBF4628);
          v64 += v116;
          --v62;
        }
        while (v62);
        uint64_t v60 = v111;
        uint64_t v56 = v112;
        uint64_t v61 = (uint8_t *)v104;
        unsigned int v57 = v105;
      }
      uint64_t v68 = MEMORY[0x1C87A3B40](v63, v60);
      uint64_t v70 = v69;
      swift_bridgeObjectRelease();
      sub_1C65B4078(v68, v70, (uint64_t)&a10, v71, v72, v73, v74, v75, v103, v104, (uint64_t)v105, v106, v107, v108, v109, (uint64_t)v110, v111, v112, v113,
        v114);
      uint64_t v120 = v76;
      sub_1C68ED0C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C65AE000, v57, BYTE4(v107), "Contact recommendations: %s", v61, 0xCu);
      uint64_t v77 = v106;
      swift_arrayDestroy();
      MEMORY[0x1C87A54F0](v77, -1, -1);
      MEMORY[0x1C87A54F0](v61, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v78 = MEMORY[0x1E4FBC860];
    uint64_t v79 = *(void *)(v110[5] + 16);
    uint64_t v80 = *(void *)(v56 + 16);
    uint64_t v81 = v114;
    if (v79 == v80)
    {
      if (v79)
      {
        a10 = MEMORY[0x1E4FBC860];
        sub_1C66A041C();
        uint64_t v82 = v56 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v114 = *(void *)(v81 + 72);
        uint64_t v83 = v115;
        uint64_t v84 = (uint64_t)v119;
        while (1)
        {
          uint64_t v116 = v79;
          sub_1C65DCEBC(v82, v84, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
          uint64_t v85 = v118;
          int v86 = sub_1C65E16F0();
          uint64_t v87 = sub_1C65E1F5C();
          int v88 = v86;
          uint64_t v84 = (uint64_t)v119;
          uint64_t v89 = v117;
          sub_1C66E9B24(v88, v87, v119[*(int *)(v85 + 52)], v83);
          swift_bridgeObjectRelease();
          sub_1C66ECBC4(v84, (void (*)(void))type metadata accessor for ContactResolverRunTimeData);
          uint64_t v90 = a10;
          uint64_t v117 = v89;
          if (v89) {
            break;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C66A041C();
            uint64_t v90 = a10;
          }
          uint64_t v83 = v115;
          uint64_t v91 = v116;
          unint64_t v92 = *(void *)(v90 + 16);
          if (v92 >= *(void *)(v90 + 24) >> 1)
          {
            sub_1C66A041C();
            uint64_t v90 = a10;
          }
          *(void *)(v90 + 16) = v92 + 1;
          OUTLINED_FUNCTION_2_34();
          sub_1C65D3C68(v83, v93 + v94 * v92, &qword_1EA4073A0);
          v82 += v114;
          uint64_t v79 = v91 - 1;
          if (!v79) {
            goto LABEL_24;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_24:
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v95 = v109;
      sub_1C65DCEBC((uint64_t)v110, v109, (void (*)(void))type metadata accessor for ContactSlotResolutionTask);
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_1C68EC458();
      os_log_type_t v97 = sub_1C68ECE58();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = swift_slowAlloc();
        *(_DWORD *)uint64_t v98 = 134218240;
        uint64_t v99 = *(void *)(*(void *)(v95 + 40) + 16);
        sub_1C66ECBC4(v95, (void (*)(void))type metadata accessor for ContactSlotResolutionTask);
        a10 = v99;
        sub_1C68ED0C8();
        *(_WORD *)(v98 + 12) = 2048;
        swift_bridgeObjectRelease();
        a10 = v80;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C65AE000, v96, v97, "Original query count (%ld) doesn't match recommendations count (%ld). Results may be truncated.", (uint8_t *)v98, 0x16u);
        MEMORY[0x1C87A54F0](v98, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C66ECBC4(v95, (void (*)(void))type metadata accessor for ContactSlotResolutionTask);

        swift_bridgeObjectRelease();
      }
      type metadata accessor for InferenceError();
      swift_allocObject();
      uint64_t v100 = sub_1C6757C90(30, 0, 0xE000000000000000, 0xD00000000000007FLL, 0x80000001C6916590, 0xD00000000000001ELL, 0x80000001C6916610, 49, v78, 1);
      sub_1C669521C();
      uint64_t v101 = swift_allocError();
      *uint64_t v102 = v100;
      uint64_t v117 = v101;
      swift_willThrow();
    }
  }
  OUTLINED_FUNCTION_54_0();
}

uint64_t sub_1C66E9B24@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v85 = a1;
  int v86 = a3;
  uint64_t v87 = a4;
  uint64_t v88 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF52B0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v81 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v83 = (uint64_t)&v76 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v80 = (uint64_t)&v76 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v82 = (uint64_t)&v76 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v76 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v76 - v16;
  uint64_t v90 = type metadata accessor for Contact();
  uint64_t v78 = *(void *)(v90 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v90);
  uint64_t v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v76 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v76 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v91 = (uint64_t)&v76 - v27;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4072E0);
  uint64_t v28 = MEMORY[0x1F4188790](v84);
  uint64_t v77 = (uint64_t)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v76 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v79 = (uint64_t *)((char *)&v76 - v33);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C65BB124(v89, (uint64_t)v36, &qword_1EBBF4628);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C65BBE04((uint64_t)v36, (uint64_t)v20);
      uint64_t v37 = v83;
      sub_1C65DCEBC((uint64_t)v20, v83, (void (*)(void))type metadata accessor for Contact);
      uint64_t v43 = v90;
      __swift_storeEnumTagSinglePayload(v37, 0, 1, v90);
      uint64_t v44 = v81;
      sub_1C65BB124(v37, v81, &qword_1EBBF52B0);
      if (__swift_getEnumTagSinglePayload(v44, 1, v43) == 1)
      {
        sub_1C65C111C(v44);
        type metadata accessor for InferenceError();
        swift_allocObject();
        uint64_t v45 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD000000000000086, 0x80000001C6916630, 0xD000000000000023, 0x80000001C69166C0, 19, MEMORY[0x1E4FBC860], 2);
        sub_1C675786C(0, 0xE000000000000000);
        sub_1C669521C();
        swift_allocError();
        *uint64_t v46 = v45;
        swift_willThrow();
        uint64_t v42 = (uint64_t)v20;
        goto LABEL_6;
      }
      uint64_t v64 = v77;
      sub_1C65BBE04(v44, v77);
      sub_1C66ECBC4((uint64_t)v20, (void (*)(void))type metadata accessor for Contact);
      sub_1C65C111C(v37);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4073A0);
      uint64_t v60 = v87;
      uint64_t v66 = v88;
      uint64_t v67 = v87 + *(int *)(v65 + 36);
      *(_DWORD *)uint64_t v67 = v85;
      *(void *)(v67 + 8) = v66;
      *(unsigned char *)(v67 + 16) = v86;
      uint64_t v63 = v64;
      goto LABEL_19;
    case 2u:
      uint64_t v48 = *(void *)v36;
      uint64_t v49 = *(void *)(*(void *)v36 + 16);
      if (v49)
      {
        uint64_t v92 = MEMORY[0x1E4FBC860];
        sub_1C669FC70(0, v49, 0);
        uint64_t v50 = *(unsigned __int8 *)(v78 + 80);
        uint64_t v83 = v48;
        uint64_t v89 = (v50 + 32) & ~v50;
        uint64_t v51 = v48 + v89;
        uint64_t v52 = *(void *)(v78 + 72);
        do
        {
          sub_1C65DCEBC(v51, (uint64_t)v26, (void (*)(void))type metadata accessor for Contact);
          sub_1C65DCEBC((uint64_t)v26, (uint64_t)v17, (void (*)(void))type metadata accessor for Contact);
          uint64_t v53 = v90;
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v90);
          sub_1C65BB124((uint64_t)v17, (uint64_t)v15, &qword_1EBBF52B0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v53) == 1)
          {
            sub_1C65C111C((uint64_t)v15);
            type metadata accessor for InferenceError();
            swift_allocObject();
            uint64_t v68 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD000000000000086, 0x80000001C6916630, 0xD000000000000023, 0x80000001C69166C0, 22, MEMORY[0x1E4FBC860], 2);
            sub_1C675786C(0, 0xE000000000000000);
            sub_1C669521C();
            swift_allocError();
            *uint64_t v69 = v68;
            swift_willThrow();
            sub_1C65C111C((uint64_t)v17);
            sub_1C66ECBC4((uint64_t)v26, (void (*)(void))type metadata accessor for Contact);
            swift_bridgeObjectRelease();
            return swift_release();
          }
          sub_1C65BBE04((uint64_t)v15, v91);
          sub_1C65C111C((uint64_t)v17);
          sub_1C66ECBC4((uint64_t)v26, (void (*)(void))type metadata accessor for Contact);
          uint64_t v54 = v92;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C669FC70(0, *(void *)(v54 + 16) + 1, 1);
            uint64_t v54 = v92;
          }
          unint64_t v56 = *(void *)(v54 + 16);
          unint64_t v55 = *(void *)(v54 + 24);
          if (v56 >= v55 >> 1)
          {
            sub_1C669FC70(v55 > 1, v56 + 1, 1);
            uint64_t v54 = v92;
          }
          *(void *)(v54 + 16) = v56 + 1;
          sub_1C65BBE04(v91, v54 + v89 + v56 * v52);
          v51 += v52;
          --v49;
        }
        while (v49);
        swift_bridgeObjectRelease();
        uint64_t v70 = v88;
        uint64_t v71 = v87;
        int v73 = v85;
        char v72 = v86;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v54 = MEMORY[0x1E4FBC860];
        uint64_t v71 = v87;
        uint64_t v70 = v88;
        int v73 = v85;
        char v72 = v86;
      }
      uint64_t v74 = (uint64_t)v79;
      *uint64_t v79 = v54;
      swift_storeEnumTagMultiPayload();
      uint64_t v75 = v71 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA4073A0) + 36);
      *(_DWORD *)uint64_t v75 = v73;
      *(void *)(v75 + 8) = v70;
      *(unsigned char *)(v75 + 16) = v72;
      sub_1C65D3C68(v74, v71, &qword_1EA4072E0);
      return swift_bridgeObjectRetain();
    case 3u:
      uint64_t v57 = v87;
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA4073A0) + 36);
      *(_DWORD *)uint64_t v58 = v85;
      *(void *)(v58 + 8) = v88;
      *(unsigned char *)(v58 + 16) = v86;
      return swift_bridgeObjectRetain();
    default:
      sub_1C65BBE04((uint64_t)v36, (uint64_t)v23);
      uint64_t v37 = v82;
      sub_1C65DCEBC((uint64_t)v23, v82, (void (*)(void))type metadata accessor for Contact);
      uint64_t v38 = v90;
      __swift_storeEnumTagSinglePayload(v37, 0, 1, v90);
      uint64_t v39 = v80;
      sub_1C65BB124(v37, v80, &qword_1EBBF52B0);
      if (__swift_getEnumTagSinglePayload(v39, 1, v38) == 1)
      {
        sub_1C65C111C(v39);
        type metadata accessor for InferenceError();
        swift_allocObject();
        uint64_t v40 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD000000000000086, 0x80000001C6916630, 0xD000000000000023, 0x80000001C69166C0, 17, MEMORY[0x1E4FBC860], 2);
        sub_1C675786C(0, 0xE000000000000000);
        sub_1C669521C();
        swift_allocError();
        *uint64_t v41 = v40;
        swift_willThrow();
        uint64_t v42 = (uint64_t)v23;
LABEL_6:
        sub_1C66ECBC4(v42, (void (*)(void))type metadata accessor for Contact);
        return sub_1C65C111C(v37);
      }
      else
      {
        sub_1C65BBE04(v39, (uint64_t)v32);
        sub_1C66ECBC4((uint64_t)v23, (void (*)(void))type metadata accessor for Contact);
        sub_1C65C111C(v37);
        swift_storeEnumTagMultiPayload();
        uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4073A0);
        uint64_t v60 = v87;
        uint64_t v61 = v88;
        uint64_t v62 = v87 + *(int *)(v59 + 36);
        *(_DWORD *)uint64_t v62 = v85;
        *(void *)(v62 + 8) = v61;
        *(unsigned char *)(v62 + 16) = v86;
        uint64_t v63 = (uint64_t)v32;
LABEL_19:
        sub_1C65D3C68(v63, v60, &qword_1EA4072E0);
        return swift_bridgeObjectRetain();
      }
  }
}

void sub_1C66EA58C()
{
  OUTLINED_FUNCTION_63();
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  switch(v4)
  {
    case 1:
      *(void *)uint64_t v1 = v0;
      *(unsigned char *)(v1 + 8) = 1;
      goto LABEL_4;
    case 2:
      if (v0 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1C68ED528();
        if (v5) {
          goto LABEL_7;
        }
LABEL_16:
        sub_1C6606D84(v2, 2u);
        uint64_t v7 = MEMORY[0x1E4FBC860];
        goto LABEL_17;
      }
      uint64_t v5 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_16;
      }
LABEL_7:
      uint64_t v9 = MEMORY[0x1E4FBC860];
      sub_1C68ED458();
      if (v5 < 0)
      {
        __break(1u);
        JUMPOUT(0x1C66EA71CLL);
      }
      uint64_t v6 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          MEMORY[0x1C87A4300](v6, v2);
        }
        else {
          swift_retain();
        }
        ++v6;
        sub_1C68ED428();
        sub_1C68ED468();
        sub_1C68ED478();
        sub_1C68ED438();
      }
      while (v5 != v6);
      uint64_t v7 = v9;
      sub_1C6606D84(v2, 2u);
LABEL_17:
      *(void *)uint64_t v3 = v7;
      char v8 = 2;
LABEL_18:
      *(unsigned char *)(v3 + 8) = v8;
LABEL_19:
      OUTLINED_FUNCTION_54_0();
      return;
    case 3:
      *(void *)uint64_t v1 = 0;
      char v8 = 3;
      goto LABEL_18;
    default:
      *(void *)uint64_t v1 = v0;
      *(unsigned char *)(v1 + 8) = 0;
LABEL_4:
      swift_retain();
      goto LABEL_19;
  }
}

void sub_1C66EA72C()
{
  OUTLINED_FUNCTION_63();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_10_21(v2, (uint64_t)v27);
  uint64_t v6 = sub_1C65D3C68((uint64_t)v27, (uint64_t)v29, &qword_1EA407B40);
  OUTLINED_FUNCTION_10_21(v6, (uint64_t)v28);
  switch(sub_1C66EB9AC((uint64_t)v28))
  {
    case 1u:
      sub_1C65D3C68((uint64_t)v29, (uint64_t)v25, &qword_1EA407B40);
      char v8 = (const void *)nullsub_1(v25);
      OUTLINED_FUNCTION_7_26(v8);
      sub_1C66ECBB0((uint64_t)v26);
      goto LABEL_4;
    case 2u:
      sub_1C65D3C68((uint64_t)v29, (uint64_t)v26, &qword_1EA407B40);
      uint64_t v9 = nullsub_1(v26);
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(*(void *)v9 + 16);
      uint64_t v12 = MEMORY[0x1E4FBC860];
      if (v11)
      {
        sub_1C65D3C68((uint64_t)v29, (uint64_t)v25, &qword_1EA407B40);
        nullsub_1(v25);
        swift_bridgeObjectRetain();
        uint64_t v13 = OUTLINED_FUNCTION_9_23();
        sub_1C66A069C(v13, v14, v15);
        uint64_t v16 = (char *)(v10 + 32);
        for (uint64_t i = v11 - 1; ; --i)
        {
          memcpy(v24, v16, sizeof(v24));
          sub_1C66EB9F4((uint64_t)v24);
          unint64_t v19 = *(void *)(v12 + 16);
          unint64_t v18 = *(void *)(v12 + 24);
          if (v19 >= v18 >> 1)
          {
            BOOL v20 = OUTLINED_FUNCTION_6_24(v18);
            sub_1C66A069C(v20, v21, v22);
          }
          *(void *)(v12 + 16) = v19 + 1;
          memcpy((void *)(v12 + 712 * v19 + 32), v24, 0x2C8uLL);
          if (!i) {
            break;
          }
          v16 += 712;
        }
        sub_1C66EC184(v3);
      }
      v25[0] = v12;
      sub_1C66ECBA4((uint64_t)v25);
      uint64_t v23 = v25;
      goto LABEL_14;
    case 3u:
      sub_1C66EB9C4(v26);
      uint64_t v23 = v26;
LABEL_14:
      sub_1C65D3C68((uint64_t)v23, v5, &qword_1EA407B48);
      break;
    default:
      sub_1C65D3C68((uint64_t)v29, (uint64_t)v25, &qword_1EA407B40);
      uint64_t v7 = (const void *)nullsub_1(v25);
      OUTLINED_FUNCTION_7_26(v7);
      sub_1C66ECBBC((uint64_t)v26);
LABEL_4:
      sub_1C65D3C68((uint64_t)v26, v5, &qword_1EA407B48);
      sub_1C66EB9F4((uint64_t)&qword_1EA407B40);
      break;
  }
  OUTLINED_FUNCTION_54_0();
}

void sub_1C66EA978()
{
  OUTLINED_FUNCTION_63();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_10_21(v4, (uint64_t)v57);
  uint64_t v5 = sub_1C65D3C68((uint64_t)v57, (uint64_t)v59, &qword_1EA407B30);
  OUTLINED_FUNCTION_10_21(v5, (uint64_t)v58);
  switch(sub_1C66EB78C((uint64_t)v58))
  {
    case 1u:
      sub_1C65D3C68((uint64_t)v59, (uint64_t)&v39, &qword_1EA407B30);
      int64_t v14 = (void *)nullsub_1(&v39);
      OUTLINED_FUNCTION_8_29(v14, v15, v16, v17, v18, v19, v20, v21, v37, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56[0]);
      sub_1C66EB998((uint64_t)v56);
      goto LABEL_4;
    case 2u:
      sub_1C65D3C68((uint64_t)v59, (uint64_t)v56, &qword_1EA407B30);
      uint64_t v22 = nullsub_1(v56);
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *(void *)(*(void *)v22 + 16);
      uint64_t v25 = MEMORY[0x1E4FBC860];
      if (v24)
      {
        sub_1C65D3C68((uint64_t)v59, (uint64_t)&v39, &qword_1EA407B30);
        nullsub_1(&v39);
        swift_bridgeObjectRetain();
        uint64_t v26 = (char *)OUTLINED_FUNCTION_9_23();
        sub_1C66A0778(v26, v27, v28);
        uint64_t v29 = (char *)(v23 + 32);
        for (uint64_t i = v24 - 1; ; --i)
        {
          memcpy(__dst, v29, sizeof(__dst));
          sub_1C66EB7C4((uint64_t)__dst);
          unint64_t v32 = *(void *)(v25 + 16);
          unint64_t v31 = *(void *)(v25 + 24);
          if (v32 >= v31 >> 1)
          {
            BOOL v33 = OUTLINED_FUNCTION_6_24(v31);
            sub_1C66A0778((char *)v33, v34, v35);
          }
          *(void *)(v25 + 16) = v32 + 1;
          memcpy((void *)(v25 + (v32 << 7) + 32), __dst, 0x80uLL);
          if (!i) {
            break;
          }
          v29 += 128;
        }
        sub_1C66EB85C(v1);
      }
      uint64_t v39 = v25;
      sub_1C66EB98C((uint64_t)&v39);
      uint64_t v36 = &v39;
      goto LABEL_14;
    case 3u:
      sub_1C66EB7A4((uint64_t)v56);
      uint64_t v36 = (uint64_t *)v56;
LABEL_14:
      sub_1C65D3C68((uint64_t)v36, v3, &qword_1EA407B38);
      break;
    default:
      sub_1C65D3C68((uint64_t)v59, (uint64_t)&v39, &qword_1EA407B30);
      uint64_t v6 = (void *)nullsub_1(&v39);
      OUTLINED_FUNCTION_8_29(v6, v7, v8, v9, v10, v11, v12, v13, v37, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56[0]);
      sub_1C66EB9A4((uint64_t)v56);
LABEL_4:
      sub_1C65D3C68((uint64_t)v56, v3, &qword_1EA407B38);
      sub_1C66EB7C4((uint64_t)&qword_1EA407B30);
      break;
  }
  OUTLINED_FUNCTION_54_0();
}

#error "1C66EABB0: call analysis failed (funcsize=6)"

void *initializeBufferWithCopyOfBuffer for ContactSlotResolutionTask(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    int v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    char *v9 = *((unsigned char *)a2 + v8);
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 16);
    *((void *)v9 + 1) = *(uint64_t *)((char *)a2 + v8 + 8);
    *((void *)v9 + 2) = v11;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v8 + 32);
    *((void *)v9 + 3) = *(uint64_t *)((char *)a2 + v8 + 24);
    *((void *)v9 + 4) = v12;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v8 + 48);
    *((void *)v9 + 5) = *(uint64_t *)((char *)a2 + v8 + 40);
    *((void *)v9 + 6) = v13;
    int64_t v14 = (int *)type metadata accessor for ContactResolverConfig(0);
    uint64_t v15 = v14[8];
    uint64_t v33 = v10 + v15;
    int64_t v34 = &v9[v15];
    uint64_t v16 = sub_1C68E9C68();
    unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v34, v33, v16);
    v9[v14[9]] = *(unsigned char *)(v10 + v14[9]);
    v9[v14[10]] = *(unsigned char *)(v10 + v14[10]);
    *(void *)&v9[v14[11]] = *(void *)(v10 + v14[11]);
    v9[v14[12]] = *(unsigned char *)(v10 + v14[12]);
    *(void *)&v9[v14[13]] = *(void *)(v10 + v14[13]);
    v9[v14[14]] = *(unsigned char *)(v10 + v14[14]);
    *(_WORD *)&v9[v14[15]] = *(_WORD *)(v10 + v14[15]);
    uint64_t v17 = v14[16];
    int v18 = &v9[v17];
    uint64_t v19 = v10 + v17;
    uint64_t v20 = *(void *)(v10 + v17);
    swift_bridgeObjectRetain();
    if (v20)
    {
      uint64_t v21 = *(void *)(v19 + 8);
      *(void *)int v18 = v20;
      *((void *)v18 + 1) = v21;
      swift_retain();
    }
    else
    {
      *(_OWORD *)int v18 = *(_OWORD *)v19;
    }
    uint64_t v23 = v14[17];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = (void *)(v10 + v23);
    uint64_t v26 = v25[1];
    *(void *)uint64_t v24 = *v25;
    *((void *)v24 + 1) = v26;
    v9[v14[18]] = *(unsigned char *)(v10 + v14[18]);
    v9[v14[19]] = *(unsigned char *)(v10 + v14[19]);
    uint64_t v27 = v14[20];
    char v28 = &v9[v27];
    uint64_t v29 = (void *)(v10 + v27);
    uint64_t v30 = v29[1];
    *(void *)char v28 = *v29;
    *((void *)v28 + 1) = v30;
    v9[v14[21]] = *(unsigned char *)(v10 + v14[21]);
    v9[v14[22]] = *(unsigned char *)(v10 + v14[22]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ContactSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ContactResolverConfig(0);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = sub_1C68E9C68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + *(int *)(v5 + 64))) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v8 = a1 + v7;
  int v9 = (void *)(a2 + v7);
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  uint64_t v11 = v9[2];
  *(void *)(v8 + 8) = v10;
  *(void *)(v8 + 16) = v11;
  uint64_t v12 = v9[4];
  *(void *)(v8 + 24) = v9[3];
  *(void *)(v8 + 32) = v12;
  uint64_t v13 = v9[6];
  *(void *)(v8 + 40) = v9[5];
  *(void *)(v8 + 48) = v13;
  int64_t v14 = (int *)type metadata accessor for ContactResolverConfig(0);
  uint64_t v15 = v14[8];
  unint64_t v32 = (char *)v9 + v15;
  uint64_t v33 = v8 + v15;
  uint64_t v16 = sub_1C68E9C68();
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v33, v32, v16);
  *(unsigned char *)(v8 + v14[9]) = *((unsigned char *)v9 + v14[9]);
  *(unsigned char *)(v8 + v14[10]) = *((unsigned char *)v9 + v14[10]);
  *(void *)(v8 + v14[11]) = *(void *)((char *)v9 + v14[11]);
  *(unsigned char *)(v8 + v14[12]) = *((unsigned char *)v9 + v14[12]);
  *(void *)(v8 + v14[13]) = *(void *)((char *)v9 + v14[13]);
  *(unsigned char *)(v8 + v14[14]) = *((unsigned char *)v9 + v14[14]);
  *(_WORD *)(v8 + v14[15]) = *(_WORD *)((char *)v9 + v14[15]);
  uint64_t v18 = v14[16];
  uint64_t v19 = (void *)(v8 + v18);
  uint64_t v20 = (char *)v9 + v18;
  uint64_t v21 = *(void *)((char *)v9 + v18);
  swift_bridgeObjectRetain();
  if (v21)
  {
    uint64_t v22 = *((void *)v20 + 1);
    *uint64_t v19 = v21;
    v19[1] = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  uint64_t v23 = v14[17];
  uint64_t v24 = (void *)(v8 + v23);
  uint64_t v25 = (void *)((char *)v9 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *(unsigned char *)(v8 + v14[18]) = *((unsigned char *)v9 + v14[18]);
  *(unsigned char *)(v8 + v14[19]) = *((unsigned char *)v9 + v14[19]);
  uint64_t v27 = v14[20];
  char v28 = (void *)(v8 + v27);
  uint64_t v29 = (void *)((char *)v9 + v27);
  uint64_t v30 = v29[1];
  *char v28 = *v29;
  v28[1] = v30;
  *(unsigned char *)(v8 + v14[21]) = *((unsigned char *)v9 + v14[21]);
  *(unsigned char *)(v8 + v14[22]) = *((unsigned char *)v9 + v14[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v34;
}

uint64_t *assignWithCopy for ContactSlotResolutionTask(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (uint64_t *)((char *)a2 + v6);
  char *v7 = *((unsigned char *)a2 + v6);
  *((void *)v7 + 1) = *(uint64_t *)((char *)a2 + v6 + 8);
  *((void *)v7 + 2) = *(uint64_t *)((char *)a2 + v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 3) = v8[3];
  *((void *)v7 + 4) = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 5) = v8[5];
  *((void *)v7 + 6) = v8[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v9 = (int *)type metadata accessor for ContactResolverConfig(0);
  uint64_t v10 = v9[8];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = (char *)v8 + v10;
  uint64_t v13 = sub_1C68E9C68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  v7[v9[9]] = *((unsigned char *)v8 + v9[9]);
  v7[v9[10]] = *((unsigned char *)v8 + v9[10]);
  *(void *)&v7[v9[11]] = *(void *)((char *)v8 + v9[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[12]] = *((unsigned char *)v8 + v9[12]);
  *(void *)&v7[v9[13]] = *(void *)((char *)v8 + v9[13]);
  v7[v9[14]] = *((unsigned char *)v8 + v9[14]);
  *(_WORD *)&v7[v9[15]] = *(_WORD *)((char *)v8 + v9[15]);
  uint64_t v14 = v9[16];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = (char *)v8 + v14;
  uint64_t v17 = *(void *)&v7[v14];
  uint64_t v18 = *(void *)((char *)v8 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = v18;
      *((void *)v15 + 1) = v20;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v19 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v19;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v21 = v9[17];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = (void *)((char *)v8 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[18]] = *((unsigned char *)v8 + v9[18]);
  v7[v9[19]] = *((unsigned char *)v8 + v9[19]);
  uint64_t v24 = v9[20];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = (void *)((char *)v8 + v24);
  *(void *)uint64_t v25 = *v26;
  *((void *)v25 + 1) = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[21]] = *((unsigned char *)v8 + v9[21]);
  v7[v9[22]] = *((unsigned char *)v8 + v9[22]);
  return a1;
}

uint64_t assignWithTake for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (void *)(a2 + v8);
  *(unsigned char *)uint64_t v9 = *(unsigned char *)(a2 + v8);
  uint64_t v11 = *(void *)(a2 + v8 + 16);
  *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
  *(void *)(v9 + 16) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v10[4];
  *(void *)(v9 + 24) = v10[3];
  *(void *)(v9 + 32) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = v10[6];
  *(void *)(v9 + 40) = v10[5];
  *(void *)(v9 + 48) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for ContactResolverConfig(0);
  uint64_t v15 = v14[8];
  uint64_t v16 = v9 + v15;
  uint64_t v17 = (char *)v10 + v15;
  uint64_t v18 = sub_1C68E9C68();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *(unsigned char *)(v9 + v14[9]) = *((unsigned char *)v10 + v14[9]);
  *(unsigned char *)(v9 + v14[10]) = *((unsigned char *)v10 + v14[10]);
  *(void *)(v9 + v14[11]) = *(void *)((char *)v10 + v14[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v14[12]) = *((unsigned char *)v10 + v14[12]);
  *(void *)(v9 + v14[13]) = *(void *)((char *)v10 + v14[13]);
  *(unsigned char *)(v9 + v14[14]) = *((unsigned char *)v10 + v14[14]);
  *(_WORD *)(v9 + v14[15]) = *(_WORD *)((char *)v10 + v14[15]);
  uint64_t v19 = v14[16];
  uint64_t v20 = (void *)(v9 + v19);
  uint64_t v21 = (char *)v10 + v19;
  uint64_t v22 = *(void *)(v9 + v19);
  uint64_t v23 = *(void *)((char *)v10 + v19);
  if (!v22)
  {
    if (v23)
    {
      uint64_t v25 = *((void *)v21 + 1);
      *uint64_t v20 = v23;
      v20[1] = v25;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_8;
  }
  if (!v23)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v24 = *((void *)v21 + 1);
  *uint64_t v20 = v23;
  v20[1] = v24;
  swift_release();
LABEL_8:
  uint64_t v26 = v14[17];
  uint64_t v27 = (void *)(v9 + v26);
  char v28 = (void *)((char *)v10 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v14[18]) = *((unsigned char *)v10 + v14[18]);
  *(unsigned char *)(v9 + v14[19]) = *((unsigned char *)v10 + v14[19]);
  uint64_t v31 = v14[20];
  unint64_t v32 = (void *)(v9 + v31);
  uint64_t v33 = (void *)((char *)v10 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *unint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v14[21]) = *((unsigned char *)v10 + v14[21]);
  *(unsigned char *)(v9 + v14[22]) = *((unsigned char *)v10 + v14[22]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C66EB5CC);
}

uint64_t sub_1C66EB5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ContactResolverConfig(0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C66EB668);
}

uint64_t sub_1C66EB668(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ContactResolverConfig(0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C66EB6E8()
{
  uint64_t result = type metadata accessor for ContactResolverConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C66EB78C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 128) <= 2u) {
    return *(unsigned __int8 *)(a1 + 128);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

double sub_1C66EB7A4(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = 3;
  return result;
}

uint64_t sub_1C66EB7C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C66EB85C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C66EB8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  if (a17 >= 2u)
  {
    if (a17 != 2) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C66EB98C(uint64_t result)
{
  *(unsigned char *)(result + 128) = 2;
  return result;
}

uint64_t sub_1C66EB998(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_1C66EB9A4(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_1C66EB9AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 712) <= 2u) {
    return *(unsigned __int8 *)(a1 + 712);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

void sub_1C66EB9C4(unsigned char *a1)
{
  a1[712] = 3;
}

uint64_t sub_1C66EB9F4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 128);
  uint64_t v19 = *(void *)(a1 + 120);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v17 = *(void *)(a1 + 136);
  uint64_t v14 = *(void *)(a1 + 160);
  uint64_t v15 = *(void *)(a1 + 152);
  uint64_t v12 = *(void *)(a1 + 176);
  uint64_t v13 = *(void *)(a1 + 168);
  long long v9 = *(_OWORD *)(a1 + 184);
  long long v8 = *(_OWORD *)(a1 + 200);
  long long v7 = *(_OWORD *)(a1 + 216);
  uint64_t v10 = *(void *)(a1 + 416);
  uint64_t v11 = *(void *)(a1 + 408);
  uint64_t v5 = *(void *)(a1 + 512);
  uint64_t v6 = *(void *)(a1 + 520);
  uint64_t v20 = *(void *)(a1 + 696);
  unint64_t v21 = *(void *)(a1 + 704);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C66EBCAC(v4, v3);
  sub_1C66EBCF0(v19, v18, v17, v16, v15, v14, v13, v12, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1));
  swift_bridgeObjectRetain();
  sub_1C66EC094(v11, v10);
  sub_1C66EC108(v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C66EC170(v20, v21);
  return a1;
}

uint64_t sub_1C66EBCAC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C66EBCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C66EBEA8(a8, a9, a10, a11, a12, a13, a14);
  }
}

void sub_1C66EBEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C66EC000(a6, a7);
  }
}

uint64_t sub_1C66EC000(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C66EC094(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C66EC108(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C66EC170(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C663E464(a1, a2);
  }
  return a1;
}

uint64_t sub_1C66EC184(uint64_t a1)
{
  long long v18 = *(_OWORD *)(a1 + 480);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_1C66EC2E8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(a1 + 496));
  return a1;
}

uint64_t sub_1C66EC2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = LOBYTE(STACK[0x598]);
  if (v69 == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = a69;
    if (v69 <= 1)
    {
      uint64_t v71 = STACK[0x588];
      unint64_t v72 = STACK[0x590];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C66EC6CC(a12, a13);
      sub_1C66EC710(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
      swift_bridgeObjectRelease();
      sub_1C66ECAB4(a52, a53);
      sub_1C66ECB28(a65, a66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1C66ECB90(v71, v72);
    }
  }
  return result;
}

uint64_t sub_1C66EC6CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C66EC710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C66EC8C8(a8, a9, a10, a11, a12, a13, a14);
  }
}

void sub_1C66EC8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C66ECA20(a6, a7);
  }
}

uint64_t sub_1C66ECA20(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C66ECAB4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C66ECB28(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C66ECB90(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C65B64F8(a1, a2);
  }
  return a1;
}

uint64_t sub_1C66ECBA4(uint64_t result)
{
  *(unsigned char *)(result + 712) = 2;
  return result;
}

uint64_t sub_1C66ECBB0(uint64_t result)
{
  *(unsigned char *)(result + 712) = 1;
  return result;
}

uint64_t sub_1C66ECBBC(uint64_t result)
{
  *(unsigned char *)(result + 712) = 0;
  return result;
}

uint64_t sub_1C66ECBC4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

BOOL OUTLINED_FUNCTION_6_24@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void *OUTLINED_FUNCTION_7_26(const void *a1)
{
  return memcpy(&STACK[0x598], a1, 0x2C8uLL);
}

void *OUTLINED_FUNCTION_8_29(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char __dst)
{
  return memcpy(&__dst, __src, 0x80uLL);
}

uint64_t OUTLINED_FUNCTION_9_23()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_21(uint64_t a1, uint64_t a2)
{
  return sub_1C65D3C68(v3, a2, v2);
}

SiriInference::ContinentName::Value_optional __swiftcall ContinentName.Value.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C68ED598();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

SiriInference::ContinentName __swiftcall ContinentName.init(value:prefix:)(SiriInference::ContinentName::Value value, SiriInference::ContinentName::Prefix_optional prefix)
{
  char v3 = *(unsigned char *)prefix.value;
  unsigned char *v2 = *(unsigned char *)value;
  v2[1] = v3;
  result.value = value;
  return result;
}

uint64_t ContinentName.Value.rawValue.getter()
{
  uint64_t result = 0x6D41206874726F4ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D41206874756F53;
      break;
    case 2:
      uint64_t result = 0x6369747261746E41;
      break;
    case 3:
      uint64_t result = 0x616369726641;
      break;
    case 4:
      uint64_t result = 0x65706F727545;
      break;
    case 5:
      uint64_t result = 1634300737;
      break;
    case 6:
      uint64_t result = 0x61697361727545;
      break;
    case 7:
      uint64_t result = 0x61696E6165634FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66ECE24()
{
  return sub_1C6619DF4();
}

uint64_t sub_1C66ECE30()
{
  return sub_1C6702420(*v0);
}

uint64_t sub_1C66ECE38()
{
  return sub_1C6679D9C();
}

uint64_t sub_1C66ECE40()
{
  return sub_1C680C940();
}

SiriInference::ContinentName::Value_optional sub_1C66ECE48(Swift::String *a1)
{
  return ContinentName.Value.init(rawValue:)(*a1);
}

uint64_t sub_1C66ECE54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ContinentName.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66ECE7C()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66ECEDC()
{
  return sub_1C68ECB68();
}

SiriInference::ContinentName::Prefix_optional __swiftcall ContinentName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C68ED598();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t ContinentName.Prefix.rawValue.getter()
{
  uint64_t v1 = 28265;
  if (*v0 != 1) {
    uint64_t v1 = 1918985582;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E656E69746E6F63;
  }
}

uint64_t sub_1C66ECFD4(char *a1, char *a2)
{
  return sub_1C6619D20(*a1, *a2);
}

uint64_t sub_1C66ECFE0()
{
  return sub_1C6702438();
}

uint64_t sub_1C66ECFE8(uint64_t a1)
{
  return sub_1C6679D24(a1, *v1);
}

uint64_t sub_1C66ECFF0()
{
  return sub_1C680C958();
}

SiriInference::ContinentName::Prefix_optional sub_1C66ECFF8(Swift::String *a1)
{
  return ContinentName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C66ED004@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ContinentName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66ED02C()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66ED08C()
{
  return sub_1C68ECB68();
}

void ContinentName.value.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void ContinentName.prefix.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t static ContinentName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  int v3 = *(unsigned __int8 *)(a2 + 1);
  if ((sub_1C6619DF4() & 1) == 0) {
    return 0;
  }
  uint64_t result = v3 == 3 && v2 == 3;
  if (v2 != 3 && v3 != 3)
  {
    return sub_1C6619D20(v2, v3);
  }
  return result;
}

uint64_t sub_1C66ED16C(uint64_t a1)
{
  unint64_t v2 = sub_1C66ED4F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66ED1A8(uint64_t a1)
{
  unint64_t v2 = sub_1C66ED4F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ContinentName.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B50);
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *v1;
  int v13 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66ED4F8();
  sub_1C68EDA08();
  char v17 = v10;
  char v16 = 0;
  sub_1C66ED544();
  sub_1C68ED758();
  if (!v2)
  {
    char v15 = v13;
    char v14 = 1;
    sub_1C66ED590();
    sub_1C68ED6F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t ContinentName.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407B70);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66ED4F8();
  sub_1C68ED9E8();
  if (!v2)
  {
    sub_1C66ED5DC();
    OUTLINED_FUNCTION_23_1();
    sub_1C68ED668();
    sub_1C66ED628();
    OUTLINED_FUNCTION_23_1();
    sub_1C68ED608();
    uint64_t v6 = OUTLINED_FUNCTION_18_0();
    v7(v6);
    *a2 = v10;
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C66ED4C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ContinentName.init(from:)(a1, a2);
}

uint64_t sub_1C66ED4DC(void *a1)
{
  return ContinentName.encode(to:)(a1);
}

unint64_t sub_1C66ED4F8()
{
  unint64_t result = qword_1EA407B58;
  if (!qword_1EA407B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B58);
  }
  return result;
}

unint64_t sub_1C66ED544()
{
  unint64_t result = qword_1EA407B60;
  if (!qword_1EA407B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B60);
  }
  return result;
}

unint64_t sub_1C66ED590()
{
  unint64_t result = qword_1EA407B68;
  if (!qword_1EA407B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B68);
  }
  return result;
}

unint64_t sub_1C66ED5DC()
{
  unint64_t result = qword_1EA407B78;
  if (!qword_1EA407B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B78);
  }
  return result;
}

unint64_t sub_1C66ED628()
{
  unint64_t result = qword_1EA407B80;
  if (!qword_1EA407B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B80);
  }
  return result;
}

unint64_t sub_1C66ED678()
{
  unint64_t result = qword_1EA407B88;
  if (!qword_1EA407B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B88);
  }
  return result;
}

unint64_t sub_1C66ED6C8()
{
  unint64_t result = qword_1EA407B90;
  if (!qword_1EA407B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContinentName(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 65283 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65283 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = a1[1];
        if (!a1[1]) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 16)) - 65284;
        return (v5 + 1);
      }
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (*((unsigned char *)a1 + 2)) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 3u) {
    int v6 = 3;
  }
  else {
    int v6 = *((unsigned __int8 *)a1 + 1);
  }
  int v7 = v6 - 4;
  if (*((unsigned __int8 *)a1 + 1) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContinentName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66ED87CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContinentName()
{
}

unsigned char *storeEnumTagSinglePayload for ContinentName.Value(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66ED97CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContinentName.Value()
{
}

unsigned char *storeEnumTagSinglePayload for ContinentName.Prefix(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66EDA7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContinentName.Prefix()
{
}

unsigned char *storeEnumTagSinglePayload for ContinentName.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66EDB7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContinentName.CodingKeys()
{
  return &type metadata for ContinentName.CodingKeys;
}

unint64_t sub_1C66EDBB8()
{
  unint64_t result = qword_1EA407B98;
  if (!qword_1EA407B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407B98);
  }
  return result;
}

unint64_t sub_1C66EDC08()
{
  unint64_t result = qword_1EA407BA0;
  if (!qword_1EA407BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BA0);
  }
  return result;
}

unint64_t sub_1C66EDC58()
{
  unint64_t result = qword_1EA407BA8;
  if (!qword_1EA407BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BA8);
  }
  return result;
}

unint64_t sub_1C66EDCA4()
{
  unint64_t result = qword_1EA407BB0;
  if (!qword_1EA407BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BB0);
  }
  return result;
}

unint64_t sub_1C66EDCF0()
{
  unint64_t result = qword_1EA407BB8;
  if (!qword_1EA407BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BB8);
  }
  return result;
}

void sub_1C66EDD3C(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 104;
    uint64_t v27 = *(void *)(a1 + 16);
    uint64_t v24 = v3 - 1;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v25 = a1 + 104;
    do
    {
      unsigned int v6 = (unsigned char *)(v5 + 80 * v4);
      while (1)
      {
        if (v4 >= *(void *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v7 = *((void *)v6 - 9);
        char v28 = *(v6 - 64);
        uint64_t v33 = *((void *)v6 - 7);
        char v30 = *(v6 - 40);
        char v31 = *(v6 - 48);
        uint64_t v29 = *((void *)v6 - 4);
        char v32 = *(v6 - 24);
        char v8 = *(v6 - 23);
        char v9 = *(v6 - 16);
        uint64_t v10 = *((void *)v6 - 1);
        unint64_t v11 = v4 + 1;
        char v12 = *v6;
        type metadata accessor for DateTime();
        int v13 = (void *)swift_retain();
        if (!static DateTime.<= infix(_:_:)(v13, a2)) {
          break;
        }
        swift_release();
        v6 += 80;
        ++v4;
        uint64_t v2 = a1;
        if (v27 == v11) {
          goto LABEL_13;
        }
      }
      unint64_t v23 = v4;
      uint64_t v14 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C66A044C();
        uint64_t v14 = v26;
      }
      uint64_t v15 = v33;
      char v17 = v9;
      char v16 = v8;
      uint64_t v18 = v10;
      char v19 = v12;
      unint64_t v20 = *(void *)(v14 + 16);
      unint64_t v21 = v20 + 1;
      if (v20 >= *(void *)(v14 + 24) >> 1)
      {
        sub_1C66A044C();
        unint64_t v21 = v20 + 1;
        uint64_t v15 = v33;
        char v19 = v12;
        uint64_t v18 = v10;
        char v17 = v9;
        char v16 = v8;
        uint64_t v14 = v26;
      }
      *(void *)(v14 + 16) = v21;
      uint64_t v26 = v14;
      uint64_t v22 = v14 + 80 * v20;
      *(void *)(v22 + 32) = v7;
      *(unsigned char *)(v22 + 40) = v28;
      *(void *)(v22 + 48) = v15;
      *(unsigned char *)(v22 + 56) = v31;
      *(unsigned char *)(v22 + 64) = v30;
      *(void *)(v22 + 72) = v29;
      *(unsigned char *)(v22 + 80) = v32;
      *(unsigned char *)(v22 + 81) = v16;
      *(unsigned char *)(v22 + 88) = v17;
      *(void *)(v22 + 96) = v18;
      *(unsigned char *)(v22 + 104) = v19;
      uint64_t v2 = a1;
      uint64_t v5 = v25;
      ++v4;
    }
    while (v24 != v23);
  }
LABEL_13:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C66EDF84(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 104;
    uint64_t v21 = *(void *)(a1 + 16);
    uint64_t v18 = v3 - 1;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v19 = a1 + 104;
    do
    {
      unsigned int v6 = (unsigned char *)(v5 + 80 * v4);
      unint64_t v7 = v4;
      while (1)
      {
        if (v7 >= *(void *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v8 = v2;
        uint64_t v9 = *((void *)v6 - 9);
        char v10 = *(v6 - 64);
        uint64_t v11 = *((void *)v6 - 7);
        int v12 = *(v6 - 48);
        char v27 = *(v6 - 40);
        uint64_t v26 = *((void *)v6 - 4);
        char v13 = *(v6 - 23);
        char v24 = *(v6 - 16);
        char v25 = *(v6 - 24);
        uint64_t v23 = *((void *)v6 - 1);
        char v22 = *v6;
        type metadata accessor for DateTime();
        uint64_t v14 = (void *)swift_retain();
        if (static DateTime.<= infix(_:_:)(v14, a2))
        {
          if (v12) {
            break;
          }
        }
        ++v7;
        swift_release();
        v6 += 80;
        uint64_t v2 = v8;
        if (v21 == v7) {
          goto LABEL_14;
        }
      }
      uint64_t v15 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C66A044C();
        uint64_t v15 = v20;
      }
      uint64_t v2 = v8;
      unint64_t v16 = *(void *)(v15 + 16);
      if (v16 >= *(void *)(v15 + 24) >> 1)
      {
        sub_1C66A044C();
        uint64_t v15 = v20;
      }
      *(void *)(v15 + 16) = v16 + 1;
      uint64_t v20 = v15;
      uint64_t v17 = v15 + 80 * v16;
      *(void *)(v17 + 32) = v9;
      unint64_t v4 = v7 + 1;
      *(unsigned char *)(v17 + 40) = v10;
      *(void *)(v17 + 48) = v11;
      *(unsigned char *)(v17 + 56) = 1;
      *(unsigned char *)(v17 + 64) = v27;
      *(void *)(v17 + 72) = v26;
      *(unsigned char *)(v17 + 80) = v25;
      *(unsigned char *)(v17 + 81) = v13;
      *(unsigned char *)(v17 + 88) = v24;
      *(void *)(v17 + 96) = v23;
      *(unsigned char *)(v17 + 104) = v22;
      uint64_t v5 = v19;
    }
    while (v18 != v7);
  }
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C66EE194(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 104;
    uint64_t v27 = *(void *)(a1 + 16);
    uint64_t v24 = v3 - 1;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v25 = a1 + 104;
    do
    {
      unsigned int v6 = (unsigned char *)(v5 + 80 * v4);
      while (1)
      {
        if (v4 >= *(void *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v7 = *((void *)v6 - 9);
        char v28 = *(v6 - 64);
        uint64_t v33 = *((void *)v6 - 7);
        char v30 = *(v6 - 40);
        char v31 = *(v6 - 48);
        uint64_t v29 = *((void *)v6 - 4);
        char v32 = *(v6 - 24);
        char v8 = *(v6 - 23);
        char v9 = *(v6 - 16);
        uint64_t v10 = *((void *)v6 - 1);
        unint64_t v11 = v4 + 1;
        char v12 = *v6;
        type metadata accessor for DateTime();
        char v13 = (void *)swift_retain();
        if (static DateTime.< infix(_:_:)(v13, a2)) {
          break;
        }
        swift_release();
        v6 += 80;
        ++v4;
        uint64_t v2 = a1;
        if (v27 == v11) {
          goto LABEL_13;
        }
      }
      unint64_t v23 = v4;
      uint64_t v14 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C66A044C();
        uint64_t v14 = v26;
      }
      uint64_t v15 = v33;
      char v17 = v9;
      char v16 = v8;
      uint64_t v18 = v10;
      char v19 = v12;
      unint64_t v20 = *(void *)(v14 + 16);
      unint64_t v21 = v20 + 1;
      if (v20 >= *(void *)(v14 + 24) >> 1)
      {
        sub_1C66A044C();
        unint64_t v21 = v20 + 1;
        uint64_t v15 = v33;
        char v19 = v12;
        uint64_t v18 = v10;
        char v17 = v9;
        char v16 = v8;
        uint64_t v14 = v26;
      }
      *(void *)(v14 + 16) = v21;
      uint64_t v26 = v14;
      uint64_t v22 = v14 + 80 * v20;
      *(void *)(v22 + 32) = v7;
      *(unsigned char *)(v22 + 40) = v28;
      *(void *)(v22 + 48) = v15;
      *(unsigned char *)(v22 + 56) = v31;
      *(unsigned char *)(v22 + 64) = v30;
      *(void *)(v22 + 72) = v29;
      *(unsigned char *)(v22 + 80) = v32;
      *(unsigned char *)(v22 + 81) = v16;
      *(unsigned char *)(v22 + 88) = v17;
      *(void *)(v22 + 96) = v18;
      *(unsigned char *)(v22 + 104) = v19;
      uint64_t v2 = a1;
      uint64_t v5 = v25;
      ++v4;
    }
    while (v24 != v23);
  }
LABEL_13:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C66EE3DC(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 104;
    uint64_t v21 = *(void *)(a1 + 16);
    uint64_t v18 = v3 - 1;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v19 = a1 + 104;
    do
    {
      unsigned int v6 = (unsigned char *)(v5 + 80 * v4);
      unint64_t v7 = v4;
      while (1)
      {
        if (v7 >= *(void *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v8 = v2;
        uint64_t v9 = *((void *)v6 - 9);
        char v10 = *(v6 - 64);
        uint64_t v11 = *((void *)v6 - 7);
        int v12 = *(v6 - 48);
        char v27 = *(v6 - 40);
        uint64_t v26 = *((void *)v6 - 4);
        char v13 = *(v6 - 23);
        char v24 = *(v6 - 16);
        char v25 = *(v6 - 24);
        uint64_t v23 = *((void *)v6 - 1);
        char v22 = *v6;
        type metadata accessor for DateTime();
        uint64_t v14 = (void *)swift_retain();
        if (!static DateTime.< infix(_:_:)(v14, a2))
        {
          if (v12) {
            break;
          }
        }
        ++v7;
        swift_release();
        v6 += 80;
        uint64_t v2 = v8;
        if (v21 == v7) {
          goto LABEL_14;
        }
      }
      uint64_t v15 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C66A044C();
        uint64_t v15 = v20;
      }
      uint64_t v2 = v8;
      unint64_t v16 = *(void *)(v15 + 16);
      if (v16 >= *(void *)(v15 + 24) >> 1)
      {
        sub_1C66A044C();
        uint64_t v15 = v20;
      }
      *(void *)(v15 + 16) = v16 + 1;
      uint64_t v20 = v15;
      uint64_t v17 = v15 + 80 * v16;
      *(void *)(v17 + 32) = v9;
      unint64_t v4 = v7 + 1;
      *(unsigned char *)(v17 + 40) = v10;
      *(void *)(v17 + 48) = v11;
      *(unsigned char *)(v17 + 56) = 1;
      *(unsigned char *)(v17 + 64) = v27;
      *(void *)(v17 + 72) = v26;
      *(unsigned char *)(v17 + 80) = v25;
      *(unsigned char *)(v17 + 81) = v13;
      *(unsigned char *)(v17 + 88) = v24;
      *(void *)(v17 + 96) = v23;
      *(unsigned char *)(v17 + 104) = v22;
      uint64_t v5 = v19;
    }
    while (v18 != v7);
  }
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C66EE5EC(void *a1, void *a2)
{
  if (a1 == a2 || a1[2] != a2[2]) {
    return;
  }
  uint64_t v5 = 0;
  unsigned int v6 = a1 + 8;
  OUTLINED_FUNCTION_1_39();
  int64_t v8 = v7 >> 6;
  while (1)
  {
    if (v2)
    {
      OUTLINED_FUNCTION_4_24();
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_20;
    }
    uint64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      return;
    }
    unint64_t v12 = v6[v11];
    ++v5;
    if (!v12)
    {
      uint64_t v5 = v11 + 1;
      if (v11 + 1 >= v8) {
        return;
      }
      unint64_t v12 = v6[v5];
      if (!v12)
      {
        uint64_t v5 = v11 + 2;
        if (v11 + 2 >= v8) {
          return;
        }
        unint64_t v12 = v6[v5];
        if (!v12) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v2 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_20:
    double v14 = *(double *)(a1[7] + 8 * v10);
    unint64_t v15 = sub_1C6850620(*(unsigned char *)(a1[6] + v10));
    if ((v16 & 1) == 0 || *(double *)(a2[7] + 8 * v15) != v14) {
      return;
    }
  }
  uint64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return;
  }
  unint64_t v12 = v6[v13];
  if (v12)
  {
    uint64_t v5 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v8) {
      return;
    }
    unint64_t v12 = v6[v5];
    ++v13;
    if (v12) {
      goto LABEL_19;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1C66EE730(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v93 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v94 = (unint64_t)(v5 + 63) >> 6;
  while (2)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v95 = v4;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
      }
      if (v10 >= v94) {
        return 1;
      }
      unint64_t v11 = *(void *)(v93 + 8 * v10);
      int64_t v12 = v4 + 1;
      if (!v11)
      {
        int64_t v12 = v4 + 2;
        if (v4 + 2 >= v94) {
          return 1;
        }
        unint64_t v11 = *(void *)(v93 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 3;
          if (v4 + 3 >= v94) {
            return 1;
          }
          unint64_t v11 = *(void *)(v93 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 4;
            if (v4 + 4 >= v94) {
              return 1;
            }
            unint64_t v11 = *(void *)(v93 + 8 * v12);
            if (!v11)
            {
              uint64_t v13 = v4 + 5;
              if (v4 + 5 >= v94) {
                return 1;
              }
              unint64_t v11 = *(void *)(v93 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_174;
                  }
                  if (v12 >= v94) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v93 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v4 + 5;
            }
          }
        }
      }
LABEL_23:
      unint64_t v7 = (v11 - 1) & v11;
      int64_t v95 = v12;
      unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    double v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(v3 + 56) + 24 * v9;
    uint64_t v19 = *(uint64_t *)v17;
    unint64_t v18 = *(void *)(v17 + 8);
    int v20 = *(unsigned __int8 *)(v17 + 16);
    swift_bridgeObjectRetain();
    sub_1C66F0A94(v19, v18, v20);
    unint64_t v21 = sub_1C68506A0(v15, v16);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_166;
    }
    uint64_t v24 = *(void *)(v2 + 56) + 24 * v21;
    uint64_t v26 = *(uint64_t *)v24;
    unint64_t v25 = *(void *)(v24 + 8);
    char v27 = *(unsigned char *)(v24 + 16);
    switch(v27)
    {
      case 1:
        if (v20 != 1) {
          goto LABEL_164;
        }
        sub_1C66F0AB8(*(void *)v24, *(void *)(v24 + 8), 1);
        sub_1C66F0AB8(v19, v18, 1);
        BOOL v28 = *(double *)&v26 == *(double *)&v19;
        goto LABEL_30;
      case 2:
        if (v20 != 2) {
          goto LABEL_164;
        }
        sub_1C66F0AB8(*(void *)v24, *(void *)(v24 + 8), 2);
        sub_1C66F0AB8(v19, v18, 2);
        int64_t v4 = v95;
        if (((v19 ^ ((v26 & 1) == 0)) & 1) == 0) {
          return 0;
        }
        continue;
      case 3:
        if (v20 == 3)
        {
          if (v26 == v19 && v25 == v18)
          {
            swift_bridgeObjectRetain();
            sub_1C66F0AB8(v19, v18, 3);
LABEL_68:
            sub_1C66F0AB8(v19, v18, v27);
            int64_t v4 = v95;
          }
          else
          {
            char v30 = sub_1C68ED7E8();
            swift_bridgeObjectRetain();
            sub_1C66F0AB8(v26, v25, 3);
            sub_1C66F0AB8(v19, v18, 3);
            int64_t v4 = v95;
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          continue;
        }
        swift_bridgeObjectRetain_n();
LABEL_164:
        sub_1C66F0A94(v19, v18, v20);
        sub_1C66F0AB8(v26, v25, v27);
        sub_1C66F0AB8(v19, v18, v20);
LABEL_165:
        sub_1C66F0AB8(v26, v25, v27);
LABEL_166:
        sub_1C66F0AB8(v19, v18, v20);
        return 0;
      case 4:
        if (v20 != 4)
        {
          sub_1C663E464(*(void *)v24, *(void *)(v24 + 8));
          sub_1C663E464(v26, v25);
          goto LABEL_164;
        }
        uint64_t v31 = 0;
        switch(v25 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v26), v26)) {
              goto LABEL_170;
            }
            uint64_t v31 = HIDWORD(v26) - (int)v26;
LABEL_49:
            sub_1C663E464(v26, v25);
            break;
          case 2uLL:
            uint64_t v33 = *(void *)(v26 + 16);
            uint64_t v32 = *(void *)(v26 + 24);
            uint64_t v31 = v32 - v33;
            if (!__OFSUB__(v32, v33)) {
              goto LABEL_49;
            }
            goto LABEL_171;
          case 3uLL:
            break;
          default:
            uint64_t v31 = BYTE6(v25);
            break;
        }
        unint64_t v34 = v18 >> 62;
        switch(v18 >> 62)
        {
          case 1uLL:
            LODWORD(v35) = HIDWORD(v19) - v19;
            if (__OFSUB__(HIDWORD(v19), v19)) {
              goto LABEL_172;
            }
            uint64_t v35 = (int)v35;
LABEL_55:
            if (v31 != v35)
            {
LABEL_168:
              char v27 = 4;
              LOBYTE(v20) = 4;
              goto LABEL_165;
            }
            if (v31 < 1)
            {
LABEL_67:
              sub_1C66F0AB8(v26, v25, 4);
              uint64_t v2 = a2;
              uint64_t v3 = a1;
              goto LABEL_68;
            }
            uint64_t v39 = v19 >> 32;
            uint64_t v3 = a1;
            switch(v25 >> 62)
            {
              case 1uLL:
                uint64_t v88 = v19 >> 32;
                if ((int)v26 > v26 >> 32) {
                  goto LABEL_175;
                }
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v26, v25, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v26, v25, 4);
                uint64_t v43 = (char *)sub_1C68E9408();
                if (!v43) {
                  goto LABEL_73;
                }
                uint64_t v44 = sub_1C68E9428();
                if (__OFSUB__((int)v26, v44)) {
                  goto LABEL_177;
                }
                v43 += (int)v26 - v44;
LABEL_73:
                sub_1C68E9418();
                if (v34)
                {
                  if (v34 == 1)
                  {
                    if (v88 < (int)v19) {
                      goto LABEL_184;
                    }
                    swift_retain();
                    uint64_t v45 = (char *)sub_1C68E9408();
                    uint64_t v2 = a2;
                    if (v45)
                    {
                      uint64_t v46 = sub_1C68E9428();
                      if (__OFSUB__((int)v19, v46)) {
                        goto LABEL_193;
                      }
                      v45 += (int)v19 - v46;
                    }
                    uint64_t v47 = sub_1C68E9418();
                    int64_t v48 = v88 - (int)v19;
                    if (v47 < v48) {
                      int64_t v48 = v47;
                    }
                    if (!v43)
                    {
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      __break(1u);
                      JUMPOUT(0x1C66EF838);
                    }
                    if (!v45) {
                      goto LABEL_195;
                    }
                    int v49 = memcmp(v43, v45, v48);
                    sub_1C66F0AB8(v19, v18, 4);
                  }
                  else
                  {
                    uint64_t v72 = *(void *)(v19 + 16);
                    uint64_t v73 = *(void *)(v19 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v74 = (char *)sub_1C68E9408();
                    if (v74)
                    {
                      uint64_t v75 = sub_1C68E9428();
                      if (__OFSUB__(v72, v75)) {
                        goto LABEL_192;
                      }
                      v74 += v72 - v75;
                    }
                    BOOL v38 = __OFSUB__(v73, v72);
                    int64_t v76 = v73 - v72;
                    if (v38) {
                      goto LABEL_185;
                    }
                    uint64_t v77 = sub_1C68E9418();
                    if (v77 >= v76) {
                      size_t v78 = v76;
                    }
                    else {
                      size_t v78 = v77;
                    }
                    uint64_t v2 = a2;
                    if (!v43) {
                      goto LABEL_201;
                    }
                    if (!v74) {
                      goto LABEL_202;
                    }
                    int v49 = memcmp(v43, v74, v78);
                    swift_release();
                    swift_release();
                  }
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                }
                else
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v43) {
                    goto LABEL_200;
                  }
                  int v49 = memcmp(v43, __s1, BYTE6(v18));
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  uint64_t v2 = a2;
                }
                sub_1C66F0AB8(v26, v25, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C65B64F8(v19, v18);
                uint64_t v3 = a1;
LABEL_159:
                int64_t v4 = v95;
                if (v49) {
                  return 0;
                }
                break;
              case 2uLL:
                uint64_t v89 = v19 >> 32;
                uint64_t v50 = *(void *)(v26 + 16);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v26, v25, 4);
                swift_retain();
                swift_retain();
                uint64_t v51 = sub_1C68E9408();
                if (v51)
                {
                  uint64_t v52 = v51;
                  uint64_t v53 = sub_1C68E9428();
                  if (__OFSUB__(v50, v53)) {
                    goto LABEL_176;
                  }
                  int v86 = (void *)(v52 + v50 - v53);
                }
                else
                {
                  int v86 = 0;
                }
                sub_1C68E9418();
                uint64_t v3 = a1;
                if (v34)
                {
                  if (v34 == 1)
                  {
                    if (v89 < (int)v19) {
                      goto LABEL_180;
                    }
                    swift_retain();
                    uint64_t v57 = (char *)sub_1C68E9408();
                    uint64_t v2 = a2;
                    if (v57)
                    {
                      uint64_t v58 = sub_1C68E9428();
                      if (__OFSUB__((int)v19, v58)) {
                        goto LABEL_191;
                      }
                      v57 += (int)v19 - v58;
                    }
                    uint64_t v59 = sub_1C68E9418();
                    int64_t v60 = v89 - (int)v19;
                    if (v59 < v60) {
                      int64_t v60 = v59;
                    }
                    if (!v86) {
                      goto LABEL_197;
                    }
                    if (!v57) {
                      goto LABEL_198;
                    }
                    int v49 = memcmp(v86, v57, v60);
                    sub_1C66F0AB8(v19, v18, 4);
                    sub_1C66F0AB8(v19, v18, 4);
                  }
                  else
                  {
                    uint64_t v68 = *(void *)(v19 + 16);
                    uint64_t v69 = *(void *)(v19 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v70 = (char *)sub_1C68E9408();
                    if (v70)
                    {
                      uint64_t v71 = sub_1C68E9428();
                      uint64_t v2 = a2;
                      if (__OFSUB__(v68, v71)) {
                        goto LABEL_190;
                      }
                      v70 += v68 - v71;
                    }
                    else
                    {
                      uint64_t v2 = a2;
                    }
                    BOOL v38 = __OFSUB__(v69, v68);
                    int64_t v82 = v69 - v68;
                    if (v38) {
                      goto LABEL_183;
                    }
                    uint64_t v83 = sub_1C68E9418();
                    if (v83 >= v82) {
                      size_t v84 = v82;
                    }
                    else {
                      size_t v84 = v83;
                    }
                    uint64_t v3 = a1;
                    if (!v86) {
                      goto LABEL_205;
                    }
                    if (!v70) {
                      goto LABEL_206;
                    }
                    int v49 = memcmp(v86, v70, v84);
                    swift_release();
                    swift_release();
                    sub_1C66F0AB8(v19, v18, 4);
                  }
                  swift_release();
                  swift_release();
                }
                else
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v86) {
                    goto LABEL_199;
                  }
                  int v49 = memcmp(v86, __s1, BYTE6(v18));
                  sub_1C66F0AB8(v19, v18, 4);
                  swift_release();
                  swift_release();
                  uint64_t v2 = a2;
                }
                sub_1C66F0AB8(v26, v25, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C66F0AB8(v26, v25, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C65B64F8(v19, v18);
                goto LABEL_159;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v34) {
                  goto LABEL_98;
                }
                if (v34 == 1)
                {
                  uint64_t v87 = v19 >> 32;
                  uint64_t v90 = (int)v19;
                  if (v39 < (int)v19) {
                    goto LABEL_179;
                  }
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v26, v25, 4);
                  uint64_t v40 = (char *)sub_1C68E9408();
                  uint64_t v2 = a2;
                  if (v40)
                  {
                    uint64_t v54 = sub_1C68E9428();
                    if (__OFSUB__((int)v19, v54)) {
                      goto LABEL_189;
                    }
                    v40 += (int)v19 - v54;
                  }
                  uint64_t v42 = sub_1C68E9418();
                  if (!v40) {
                    goto LABEL_196;
                  }
LABEL_94:
                  if (v42 >= v87 - v90) {
                    size_t v55 = v87 - v90;
                  }
                  else {
                    size_t v55 = v42;
                  }
                  int v56 = memcmp(__s1, v40, v55);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C65B64F8(v19, v18);
LABEL_99:
                  int64_t v4 = v95;
                  if (v56) {
                    return 0;
                  }
                  continue;
                }
                uint64_t v65 = *(void *)(v19 + 16);
                uint64_t v66 = *(void *)(v19 + 24);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v26, v25, 4);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1C68E9408();
                if (v63)
                {
                  uint64_t v67 = sub_1C68E9428();
                  uint64_t v2 = a2;
                  if (__OFSUB__(v65, v67)) {
                    goto LABEL_187;
                  }
                  v63 += v65 - v67;
                }
                else
                {
                  uint64_t v2 = a2;
                }
                BOOL v38 = __OFSUB__(v66, v65);
                int64_t v79 = v66 - v65;
                if (v38) {
                  goto LABEL_182;
                }
                uint64_t v80 = sub_1C68E9418();
                uint64_t v3 = a1;
                if (!v63) {
                  goto LABEL_204;
                }
LABEL_145:
                if (v80 >= v79) {
                  size_t v81 = v79;
                }
                else {
                  size_t v81 = v80;
                }
                int v49 = memcmp(__s1, v63, v81);
                swift_release();
                swift_release();
                sub_1C66F0AB8(v26, v25, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C66F0AB8(v26, v25, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C66F0AB8(v19, v18, 4);
                sub_1C65B64F8(v19, v18);
                goto LABEL_159;
              default:
                __s1[0] = v26;
                LOWORD(__s1[1]) = v25;
                BYTE2(__s1[1]) = BYTE2(v25);
                BYTE3(__s1[1]) = BYTE3(v25);
                BYTE4(__s1[1]) = BYTE4(v25);
                BYTE5(__s1[1]) = BYTE5(v25);
                if (!v34)
                {
LABEL_98:
                  uint64_t __s2 = v19;
                  __int16 v97 = v18;
                  char v98 = BYTE2(v18);
                  char v99 = BYTE3(v18);
                  char v100 = BYTE4(v18);
                  char v101 = BYTE5(v18);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v26, v25, 4);
                  int v56 = memcmp(__s1, &__s2, BYTE6(v18));
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C66F0AB8(v26, v25, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C66F0AB8(v19, v18, 4);
                  sub_1C65B64F8(v19, v18);
                  uint64_t v2 = a2;
                  goto LABEL_99;
                }
                if (v34 == 1)
                {
                  uint64_t v87 = v19 >> 32;
                  uint64_t v90 = (int)v19;
                  if (v39 < (int)v19) {
                    goto LABEL_178;
                  }
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v19, v18, 4);
                  sub_1C66F0A94(v26, v25, 4);
                  uint64_t v40 = (char *)sub_1C68E9408();
                  uint64_t v2 = a2;
                  if (v40)
                  {
                    uint64_t v41 = sub_1C68E9428();
                    if (__OFSUB__((int)v19, v41)) {
                      goto LABEL_188;
                    }
                    v40 += (int)v19 - v41;
                  }
                  uint64_t v42 = sub_1C68E9418();
                  if (!v40) {
                    goto LABEL_207;
                  }
                  goto LABEL_94;
                }
                uint64_t v61 = *(void *)(v19 + 16);
                uint64_t v62 = *(void *)(v19 + 24);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v19, v18, 4);
                sub_1C66F0A94(v26, v25, 4);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1C68E9408();
                if (v63)
                {
                  uint64_t v64 = sub_1C68E9428();
                  uint64_t v2 = a2;
                  if (__OFSUB__(v61, v64)) {
                    goto LABEL_186;
                  }
                  v63 += v61 - v64;
                }
                else
                {
                  uint64_t v2 = a2;
                }
                BOOL v38 = __OFSUB__(v62, v61);
                int64_t v79 = v62 - v61;
                if (v38) {
                  goto LABEL_181;
                }
                uint64_t v80 = sub_1C68E9418();
                uint64_t v3 = a1;
                if (!v63) {
                  goto LABEL_203;
                }
                goto LABEL_145;
            }
            break;
          case 2uLL:
            uint64_t v37 = *(void *)(v19 + 16);
            uint64_t v36 = *(void *)(v19 + 24);
            BOOL v38 = __OFSUB__(v36, v37);
            uint64_t v35 = v36 - v37;
            if (!v38) {
              goto LABEL_55;
            }
            goto LABEL_173;
          case 3uLL:
            if (!v31) {
              goto LABEL_67;
            }
            goto LABEL_168;
          default:
            uint64_t v35 = BYTE6(v18);
            goto LABEL_55;
        }
        continue;
      default:
        if (v20) {
          goto LABEL_164;
        }
        sub_1C66F0AB8(*(void *)v24, *(void *)(v24 + 8), 0);
        sub_1C66F0AB8(v19, v18, 0);
        BOOL v28 = v26 == v19;
LABEL_30:
        int64_t v4 = v95;
        if (!v28) {
          return 0;
        }
        continue;
    }
  }
}

void sub_1C66EF87C(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = sub_1C68E9DB8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v49 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_15();
  uint64_t v50 = v8 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C18);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  int64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v14 = (char *)&v41 - v13;
  if (a1 == a2)
  {
    BOOL v52 = 1;
    return;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    BOOL v52 = 0;
    return;
  }
  uint64_t v51 = 0;
  uint64_t v46 = a1;
  OUTLINED_FUNCTION_1_39();
  uint64_t v45 = v49 + 16;
  uint64_t v47 = (void (**)(uint64_t, uint64_t))(v49 + 8);
  int64_t v48 = (void (**)(uint64_t, char *, uint64_t))(v49 + 32);
  uint64_t v43 = a1 + 64;
  int64_t v44 = v15 >> 6;
  uint64_t v42 = (v15 >> 6) - 1;
  uint64_t v16 = v54;
  while (1)
  {
    if (v2)
    {
      OUTLINED_FUNCTION_4_24();
      unint64_t v18 = v17 | (v51 << 6);
LABEL_6:
      uint64_t v19 = v46;
      (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v12, *(void *)(v46 + 48) + *(void *)(v49 + 72) * v18, v54);
      uint64_t v20 = *(void *)(v19 + 56) + 16 * v18;
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C20);
      char v22 = &v12[*(int *)(v21 + 48)];
      char v23 = *(unsigned char *)(v20 + 8);
      *(void *)char v22 = *(void *)v20;
      v22[8] = v23;
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v21);
      goto LABEL_28;
    }
    uint64_t v24 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v24 < v44)
    {
      unint64_t v25 = *(void *)(v43 + 8 * v24);
      if (v25) {
        goto LABEL_10;
      }
      uint64_t v26 = v51 + 2;
      ++v51;
      if (v24 + 1 < v44)
      {
        unint64_t v25 = *(void *)(v43 + 8 * v26);
        if (v25) {
          goto LABEL_13;
        }
        uint64_t v51 = v24 + 1;
        if (v24 + 2 < v44)
        {
          unint64_t v25 = *(void *)(v43 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_10;
          }
          uint64_t v51 = v24 + 2;
          if (v24 + 3 < v44)
          {
            unint64_t v25 = *(void *)(v43 + 8 * (v24 + 3));
            if (v25)
            {
              v24 += 3;
              goto LABEL_10;
            }
            uint64_t v26 = v24 + 4;
            uint64_t v51 = v24 + 3;
            if (v24 + 4 < v44) {
              break;
            }
          }
        }
      }
    }
LABEL_27:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C20);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v27);
    uint64_t v2 = 0;
LABEL_28:
    sub_1C65FEC2C((uint64_t)v12, (uint64_t)v14);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C20);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v28);
    BOOL v52 = EnumTagSinglePayload == 1;
    if (EnumTagSinglePayload == 1) {
      return;
    }
    uint64_t v53 = v2;
    char v30 = &v14[*(int *)(v28 + 48)];
    uint64_t v31 = v50;
    uint64_t v32 = v14;
    (*v48)(v50, v14, v16);
    uint64_t v33 = *(void *)v30;
    char v34 = v30[8];
    sub_1C685087C();
    uint64_t v36 = v35;
    char v38 = v37;
    (*v47)(v31, v16);
    if ((v38 & 1) == 0) {
      return;
    }
    uint64_t v39 = *(void *)(a2 + 56) + 16 * v36;
    if (*(unsigned char *)(v39 + 8))
    {
      double v14 = v32;
      uint64_t v2 = v53;
      if ((v34 & 1) == 0) {
        return;
      }
    }
    else
    {
      if (*(void *)v39 == v33) {
        char v40 = v34;
      }
      else {
        char v40 = 1;
      }
      double v14 = v32;
      uint64_t v2 = v53;
      if (v40) {
        return;
      }
    }
  }
  unint64_t v25 = *(void *)(v43 + 8 * v26);
  if (v25)
  {
LABEL_13:
    uint64_t v24 = v26;
LABEL_10:
    uint64_t v2 = (v25 - 1) & v25;
    unint64_t v18 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v51 = v24;
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v44)
    {
      uint64_t v51 = v42;
      goto LABEL_27;
    }
    unint64_t v25 = *(void *)(v43 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_10;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t CoreAnalyticsMetric.fullyQualifiedEventName.getter()
{
  OUTLINED_FUNCTION_5_24();
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CoreAnalyticsMetric.description.getter()
{
  OUTLINED_FUNCTION_5_24();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v1;
}

SiriInference::CoreAnalyticsMetric __swiftcall CoreAnalyticsMetric.init(eventName:properties:)(Swift::String eventName, Swift::OpaquePointer properties)
{
  *(Swift::String *)uint64_t v2 = eventName;
  *(Swift::OpaquePointer *)(v2 + 16) = properties;
  result.eventName = eventName;
  result.properties = properties;
  return result;
}

void *CoreAnalyticsMetric.eventPayload()()
{
  return sub_1C66F03EC(*(void *)(v0 + 16));
}

uint64_t static CoreAnalyticsMetric.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C68ED7E8() & 1) == 0) {
    return 0;
  }

  return sub_1C66EE730(v2, v3);
}

uint64_t sub_1C66EFE14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C68ED7E8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C66EFF1C(char a1)
{
  if (a1) {
    return 0x69747265706F7270;
  }
  else {
    return 0x6D614E746E657665;
  }
}

uint64_t sub_1C66EFF5C()
{
  return sub_1C66EFF1C(*v0);
}

uint64_t sub_1C66EFF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66EFE14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66EFF8C(uint64_t a1)
{
  unint64_t v2 = sub_1C66F0730();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66EFFC8(uint64_t a1)
{
  unint64_t v2 = sub_1C66F0730();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CoreAnalyticsMetric.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407BC0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v10 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F0730();
  sub_1C68EDA08();
  sub_1C68ED708();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407BD0);
    sub_1C66F07C8(&qword_1EA407BD8, (void (*)(void))sub_1C66F077C);
    sub_1C68ED758();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v3);
}

uint64_t CoreAnalyticsMetric.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407BE8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F0730();
  sub_1C68ED9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v6 = sub_1C68ED618();
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407BD0);
  sub_1C66F07C8(&qword_1EA407BF0, (void (*)(void))sub_1C66F0844);
  swift_bridgeObjectRetain();
  sub_1C68ED668();
  uint64_t v9 = OUTLINED_FUNCTION_18_0();
  v10(v9);
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C66F03B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CoreAnalyticsMetric.init(from:)(a1, a2);
}

uint64_t sub_1C66F03CC(void *a1)
{
  return CoreAnalyticsMetric.encode(to:)(a1);
}

void *sub_1C66F03EC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF65F0);
  uint64_t v2 = sub_1C68ED538();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v38 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v35 = v6;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v37 = v2 + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v38 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(v38 + 56) + 24 * i;
    uint64_t v20 = *(void *)v19;
    unint64_t v21 = *(void *)(v19 + 8);
    switch(*(unsigned char *)(v19 + 16))
    {
      case 1:
        id v24 = objc_allocWithZone(NSNumber);
        swift_bridgeObjectRetain();
        id v23 = objc_msgSend(v24, sel_initWithDouble_, *(double *)&v20);
        goto LABEL_23;
      case 2:
        id v25 = objc_allocWithZone(NSNumber);
        swift_bridgeObjectRetain();
        id v23 = objc_msgSend(v25, sel_initWithBool_, v20 & 1);
        goto LABEL_23;
      case 3:
        swift_bridgeObjectRetain();
        sub_1C66F0A94(v20, v21, 3);
        uint64_t v26 = sub_1C68EC868();
        uint64_t v27 = v20;
        unint64_t v28 = v21;
        char v29 = 3;
        goto LABEL_26;
      case 4:
        swift_bridgeObjectRetain();
        sub_1C66F0A94(v20, v21, 4);
        uint64_t v26 = sub_1C68E9A08();
        uint64_t v27 = v20;
        unint64_t v28 = v21;
        char v29 = 4;
LABEL_26:
        sub_1C66F0AB8(v27, v28, v29);
        break;
      default:
        id v22 = objc_allocWithZone(NSNumber);
        swift_bridgeObjectRetain();
        id v23 = objc_msgSend(v22, sel_initWithInteger_, v20);
LABEL_23:
        uint64_t v26 = (uint64_t)v23;
        break;
    }
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v30 = (void *)(v3[6] + 16 * i);
    *char v30 = v18;
    v30[1] = v17;
    *(void *)(v3[7] + 8 * i) = v26;
    uint64_t v31 = v3[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v3[2] = v33;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_32;
    }
    if (v13 >= v36) {
      break;
    }
    unint64_t v14 = *(void *)(v35 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v36) {
        return v3;
      }
      unint64_t v14 = *(void *)(v35 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v36) {
          return v3;
        }
        unint64_t v14 = *(void *)(v35 + 8 * v4);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v36) {
            return v3;
          }
          unint64_t v14 = *(void *)(v35 + 8 * v15);
          if (v14)
          {
            int64_t v4 = v15;
            goto LABEL_18;
          }
          while (1)
          {
            int64_t v4 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            if (v4 >= v36) {
              return v3;
            }
            unint64_t v14 = *(void *)(v35 + 8 * v4);
            ++v15;
            if (v14) {
              goto LABEL_18;
            }
          }
LABEL_33:
          __break(1u);
          JUMPOUT(0x1C66F071CLL);
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  return v3;
}

unint64_t sub_1C66F0730()
{
  unint64_t result = qword_1EA407BC8;
  if (!qword_1EA407BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BC8);
  }
  return result;
}

unint64_t sub_1C66F077C()
{
  unint64_t result = qword_1EA407BE0;
  if (!qword_1EA407BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BE0);
  }
  return result;
}

uint64_t sub_1C66F07C8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA407BD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C66F0844()
{
  unint64_t result = qword_1EA407BF8;
  if (!qword_1EA407BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407BF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsMetric()
{
  return &type metadata for CoreAnalyticsMetric;
}

unsigned char *storeEnumTagSinglePayload for CoreAnalyticsMetric.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F096CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsMetric.CodingKeys()
{
  return &type metadata for CoreAnalyticsMetric.CodingKeys;
}

unint64_t sub_1C66F09A8()
{
  unint64_t result = qword_1EA407C00;
  if (!qword_1EA407C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C00);
  }
  return result;
}

unint64_t sub_1C66F09F8()
{
  unint64_t result = qword_1EA407C08;
  if (!qword_1EA407C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C08);
  }
  return result;
}

unint64_t sub_1C66F0A48()
{
  unint64_t result = qword_1EA407C10;
  if (!qword_1EA407C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C10);
  }
  return result;
}

uint64_t sub_1C66F0A94(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 4) {
    return sub_1C663E464(result, a2);
  }
  if (a3 == 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C66F0AB8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 4) {
    return sub_1C65B64F8(result, a2);
  }
  if (a3 == 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_24()
{
  return v0;
}

uint64_t sub_1C66F0B28(uint64_t a1, void (*a2)(unint64_t, unint64_t, uint64_t))
{
  unsigned int v4 = *(void **)(a1 + *(int *)(type metadata accessor for AppRankEvent(0) + 24));
  uint64_t v5 = type metadata accessor for AppRankSelectionEvent(0);
  uint64_t v6 = sub_1C67B6360(*(void *)(a1 + *(int *)(v5 + 24)), *(void *)(a1 + *(int *)(v5 + 24) + 8), v4);
  if ((v7 & 1) == 0 && __OFADD__(v6, 1)) {
    __break(1u);
  }
  uint64_t result = sub_1C68E9A88();
  double v10 = round(v9 * 1000.0);
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 < 9.22337204e18)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF6620);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C68F0C10;
    strcpy((char *)(inited + 32), "numAppsShown");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(void *)(inited + 48) = sub_1C68ECDA8();
    *(void *)(inited + 56) = 0xD000000000000013;
    *(void *)(inited + 64) = 0x80000001C6916750;
    *(void *)(inited + 72) = sub_1C68ECDA8();
    *(void *)(inited + 80) = 0xD00000000000001CLL;
    *(void *)(inited + 88) = 0x80000001C6916770;
    *(void *)(inited + 96) = sub_1C68ECDA8();
    sub_1C65ED460();
    uint64_t v12 = sub_1C68EC748();
    a2(0xD00000000000001FLL, 0x80000001C6916790, v12);
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  __break(1u);
  return result;
}

NSObject __swiftcall CoreAnalyticsValue.toNSObject()()
{
  uint64_t v1 = *v0;
  switch(*((unsigned char *)v0 + 16))
  {
    case 1:
      id v2 = objc_allocWithZone(NSNumber);
      int v3 = sel_initWithDouble_;
      return (NSObject)objc_msgSend(v2, v3, v4);
    case 2:
      id v2 = objc_allocWithZone(NSNumber);
      int v3 = sel_initWithBool_;
      uint64_t v4 = v1 & 1;
      return (NSObject)objc_msgSend(v2, v3, v4);
    case 3:
      OUTLINED_FUNCTION_8_30();
      return (NSObject)sub_1C68EC868();
    case 4:
      uint64_t v6 = OUTLINED_FUNCTION_8_30();
      sub_1C663E464(v6, v7);
      OUTLINED_FUNCTION_8_30();
      uint64_t v8 = sub_1C68E9A08();
      uint64_t v9 = OUTLINED_FUNCTION_8_30();
      sub_1C66F0AB8(v9, v10, 4);
      return (NSObject)v8;
    default:
      id v2 = objc_allocWithZone(NSNumber);
      int v3 = sel_initWithInteger_;
      uint64_t v4 = v1;
      return (NSObject)objc_msgSend(v2, v3, v4);
  }
}

uint64_t sub_1C66F0E90()
{
  uint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C66F0EE8(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1C66F0F14()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C66F0F60(char *a1, char *a2)
{
  return sub_1C6618D88(*a1, *a2);
}

uint64_t sub_1C66F0F6C()
{
  return sub_1C6702444();
}

uint64_t sub_1C66F0F74()
{
  return sub_1C6679298();
}

uint64_t sub_1C66F0F7C()
{
  return sub_1C680CD94();
}

uint64_t sub_1C66F0F84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66F0E90();
  *a1 = result;
  return result;
}

uint64_t sub_1C66F0FB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C66F0EE8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C66F0FE0()
{
  return sub_1C66F0EE8(*v0);
}

uint64_t sub_1C66F0FE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C66F0EE4();
  *a1 = result;
  return result;
}

void sub_1C66F1010(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C66F101C(uint64_t a1)
{
  unint64_t v2 = sub_1C66F1324();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66F1058(uint64_t a1)
{
  unint64_t v2 = sub_1C66F1324();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CoreAnalyticsValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C28);
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F1324();
  sub_1C68ED9E8();
  if (!v2)
  {
    LOBYTE(v31) = 0;
    sub_1C68ED618();
    char v12 = sub_1C66F0F14();
    char v13 = v12;
    switch(v12)
    {
      case 1:
        OUTLINED_FUNCTION_1_40();
        sub_1C68ED638();
        uint64_t v19 = v18;
        uint64_t v20 = OUTLINED_FUNCTION_5_4();
        v21(v20);
        uint64_t v17 = 0;
        uint64_t v14 = v19;
        goto LABEL_12;
      case 2:
        OUTLINED_FUNCTION_1_40();
        char v22 = sub_1C68ED628();
        uint64_t v23 = OUTLINED_FUNCTION_5_4();
        v24(v23);
        uint64_t v17 = 0;
        uint64_t v14 = v22 & 1;
        goto LABEL_12;
      case 3:
        OUTLINED_FUNCTION_1_40();
        uint64_t v14 = sub_1C68ED618();
        uint64_t v17 = v25;
        uint64_t v26 = OUTLINED_FUNCTION_5_4();
        v27(v26);
        goto LABEL_12;
      case 4:
        v30[15] = 1;
        sub_1C66F13BC();
        sub_1C68ED668();
        uint64_t v28 = OUTLINED_FUNCTION_5_4();
        v29(v28);
        uint64_t v14 = v31;
        uint64_t v17 = v32;
        goto LABEL_12;
      case 5:
        sub_1C66F1370();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v5);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      default:
        OUTLINED_FUNCTION_1_40();
        uint64_t v14 = sub_1C68ED648();
        uint64_t v15 = OUTLINED_FUNCTION_5_4();
        v16(v15);
        uint64_t v17 = 0;
LABEL_12:
        *(void *)a2 = v14;
        *(void *)(a2 + 8) = v17;
        *(unsigned char *)(a2 + 16) = v13;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C66F1324()
{
  unint64_t result = qword_1EA407C30;
  if (!qword_1EA407C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C30);
  }
  return result;
}

unint64_t sub_1C66F1370()
{
  unint64_t result = qword_1EA407C38;
  if (!qword_1EA407C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C38);
  }
  return result;
}

unint64_t sub_1C66F13BC()
{
  unint64_t result = qword_1EA407C40;
  if (!qword_1EA407C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C40);
  }
  return result;
}

uint64_t CoreAnalyticsValue.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C48);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = *(void *)v1;
  unint64_t v5 = *(void *)(v1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F1324();
  sub_1C68EDA08();
  switch(v7)
  {
    case 1:
      sub_1C68ED728();
      if (v13) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 2:
      OUTLINED_FUNCTION_4_25();
      sub_1C68ED718();
      if (!v2) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 3:
      sub_1C68ED708();
      if (!v13) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 4:
      sub_1C663E464(v6, v5);
      sub_1C66F16B8();
      OUTLINED_FUNCTION_4_25();
      sub_1C68ED758();
      if (!v2)
      {
        OUTLINED_FUNCTION_5_25();
        sub_1C68ED708();
      }
      uint64_t v11 = OUTLINED_FUNCTION_6_25();
      v12(v11);
      return sub_1C66F0AB8(v6, v5, 4);
    default:
      OUTLINED_FUNCTION_4_25();
      sub_1C68ED738();
      if (!v2)
      {
LABEL_9:
        OUTLINED_FUNCTION_5_25();
        sub_1C68ED708();
      }
LABEL_10:
      uint64_t v8 = OUTLINED_FUNCTION_6_25();
      return v9(v8);
  }
}

unint64_t sub_1C66F16B8()
{
  unint64_t result = qword_1EA407C50;
  if (!qword_1EA407C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C50);
  }
  return result;
}

uint64_t static CoreAnalyticsValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  unint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_18;
      }
      uint64_t v21 = OUTLINED_FUNCTION_61_1();
      uint64_t v23 = OUTLINED_FUNCTION_3_28(v21, v22, 1);
      sub_1C66F0AB8(v23, v24, 1);
      char v12 = *(double *)&v2 == *(double *)&v5;
      return v12 & 1;
    case 2:
      if (v7 != 2) {
        goto LABEL_18;
      }
      uint64_t v13 = OUTLINED_FUNCTION_61_1();
      uint64_t v15 = OUTLINED_FUNCTION_3_28(v13, v14, 2);
      sub_1C66F0AB8(v15, v16, 2);
      char v12 = ((v2 & 1) == 0) ^ v5;
      return v12 & 1;
    case 3:
      if (v7 != 3)
      {
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
      if (v2 == v5 && v3 == v6)
      {
        char v12 = 1;
      }
      else
      {
        OUTLINED_FUNCTION_9_24();
        char v12 = sub_1C68ED7E8();
      }
      sub_1C66F0A94(v5, v6, 3);
      sub_1C66F0A94(v2, v3, 3);
      uint64_t v18 = OUTLINED_FUNCTION_3_28(v2, v3, 3);
      char v20 = 3;
      goto LABEL_21;
    case 4:
      if (v7 == 4)
      {
        sub_1C66F0A94(*(void *)a2, *(void *)(a2 + 8), 4);
        sub_1C66F0A94(v2, v3, 4);
        uint64_t v17 = OUTLINED_FUNCTION_9_24();
        char v12 = MEMORY[0x1C87A0950](v17);
        uint64_t v18 = OUTLINED_FUNCTION_3_28(v2, v3, 4);
        char v20 = 4;
LABEL_21:
        sub_1C66F0AB8(v18, v19, v20);
      }
      else
      {
        uint64_t v26 = OUTLINED_FUNCTION_61_1();
        sub_1C663E464(v26, v27);
LABEL_18:
        sub_1C66F0A94(v5, v6, v7);
        uint64_t v28 = OUTLINED_FUNCTION_61_1();
        uint64_t v30 = OUTLINED_FUNCTION_3_28(v28, v29, v4);
        sub_1C66F0AB8(v30, v31, v7);
        char v12 = 0;
      }
      break;
    default:
      if (*(unsigned char *)(a2 + 16)) {
        goto LABEL_18;
      }
      uint64_t v8 = OUTLINED_FUNCTION_61_1();
      uint64_t v10 = OUTLINED_FUNCTION_3_28(v8, v9, 0);
      sub_1C66F0AB8(v10, v11, 0);
      char v12 = v2 == v5;
      break;
  }
  return v12 & 1;
}

uint64_t sub_1C66F18F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreAnalyticsValue.init(from:)(a1, a2);
}

uint64_t sub_1C66F1910(void *a1)
{
  return CoreAnalyticsValue.encode(to:)(a1);
}

uint64_t destroy for CoreAnalyticsValue(uint64_t a1)
{
  return sub_1C66F0AB8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13SiriInference18CoreAnalyticsValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C66F0A94(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CoreAnalyticsValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C66F0A94(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C66F0AB8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CoreAnalyticsValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C66F0AB8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreAnalyticsValue(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreAnalyticsValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C66F1AB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C66F1AB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for CoreAnalyticsValue()
{
}

unsigned char *sub_1C66F1ACC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C66F1B68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for CoreAnalyticsValue.DecoderError()
{
}

unsigned char *sub_1C66F1B9C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F1C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CoreAnalyticsValue.CodingKeys()
{
}

unint64_t sub_1C66F1CA0()
{
  unint64_t result = qword_1EA407C58;
  if (!qword_1EA407C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C58);
  }
  return result;
}

unint64_t sub_1C66F1CF0()
{
  unint64_t result = qword_1EA407C60;
  if (!qword_1EA407C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C60);
  }
  return result;
}

unint64_t sub_1C66F1D40()
{
  unint64_t result = qword_1EA407C68;
  if (!qword_1EA407C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C68);
  }
  return result;
}

unint64_t sub_1C66F1D90()
{
  unint64_t result = qword_1EA407C70;
  if (!qword_1EA407C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C70);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_40()
{
  *(unsigned char *)(v0 - 96) = 1;
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_3_28(uint64_t a1, unint64_t a2, char a3)
{
  sub_1C66F0AB8(a1, a2, a3);
  return v3;
}

void OUTLINED_FUNCTION_5_25()
{
  *(unsigned char *)(v0 - 96) = 0;
}

uint64_t OUTLINED_FUNCTION_6_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_24()
{
  return v0;
}

void sub_1C66F1E6C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v6 = self;
  unint64_t v7 = (void *)sub_1C68E9AA8();
  id v8 = objc_msgSend(v6, sel_predicateForEventsWithStartDateAfter_, v7);

  sub_1C65BAD10(0, &qword_1EBBF65B0);
  id v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_startDateSortDescriptorAscending_, 1);
  if (v9)
  {
    uint64_t v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
    uint64_t v11 = OUTLINED_FUNCTION_32_6();
    *(_OWORD *)(v11 + 16) = xmmword_1C68F03F0;
    id v12 = v8;
    *(void *)(v11 + 32) = sub_1C66F2030(a1);
    sub_1C68ECC18();
    uint64_t v13 = OUTLINED_FUNCTION_32_6();
    *(_OWORD *)(v13 + 16) = xmmword_1C68F03F0;
    *(void *)(v13 + 32) = v10;
    uint64_t v19 = v13;
    sub_1C68ECC18();
    id v14 = v10;
    id v15 = sub_1C66F20CC(v8, v11, a4, a3, v19);
    if (v15)
    {
      unint64_t v16 = v15;
      uint64_t v17 = (void *)MEMORY[0x1C87A4AB0]();
      sub_1C66F2740(v16, &v19);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1C66F2030(char a1)
{
  if (a1)
  {
    if (a1 != 1) {
      goto LABEL_7;
    }
    id result = objc_msgSend(self, sel_siriIntentEventStream);
    if (result) {
      return result;
    }
    __break(1u);
  }
  id result = objc_msgSend(self, sel_appIntentsStream);
  if (result) {
    return result;
  }
  __break(1u);
LABEL_7:
  id result = objc_msgSend(self, sel_tombstoneStream);
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_1C66F20CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    id v9 = 0;
    if (a5) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  sub_1C65BAD10(0, &qword_1EBBF65B8);
  id v9 = (void *)sub_1C68ECBD8();
  swift_bridgeObjectRelease();
  if (!a5) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C65BAD10(0, &qword_1EBBF65C0);
  uint64_t v10 = (void *)sub_1C68ECBD8();
  swift_bridgeObjectRelease();
LABEL_6:
  id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventQueryWithPredicate_eventStreams_offset_limit_sortDescriptors_, a1, v9, a3, a4, v10);

  return v11;
}

id sub_1C66F21D4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1C68EC868();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

id sub_1C66F2248()
{
  sub_1C65BAD10(0, &qword_1EBBF6590);
  id v0 = (void *)sub_1C68ECBD8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_andPredicateWithSubpredicates_, v0);

  return v1;
}

void sub_1C66F22CC(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C68F8F50;
  unint64_t v7 = self;
  id v8 = (void *)sub_1C68E9AA8();
  id v9 = objc_msgSend(v7, sel_predicateForEventsWithStartDateAfter_, v8);

  if (!v9)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(void *)(v6 + 32) = v9;
  uint64_t v10 = self;
  sub_1C66F2CAC(v10);
  uint64_t v40 = a1;
  if (v11)
  {
    id v12 = (void *)sub_1C68EC868();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  sub_1C65BAD10(0, &qword_1EBBF3D88);
  id v13 = sub_1C66F21D4();
  id v14 = objc_msgSend(v7, sel_predicateForObjectsWithMetadataKey_andValue_, v12, v13);

  if (!v14) {
    goto LABEL_24;
  }
  sub_1C65BAD10(0, (unint64_t *)&unk_1EBBF5A40);
  *(void *)(v6 + 40) = v14;
  unint64_t v42 = v6;
  sub_1C68ECC18();
  id v15 = sub_1C66F2248();
  id v16 = objc_msgSend(self, sel_tombstoneStream);
  if (!v16)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v17 = v16;
  sub_1C65BAD10(0, &qword_1EBBF65B0);
  id v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_startDateSortDescriptorAscending_, 0);
  if (!v18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v19 = v18;
  uint64_t v20 = OUTLINED_FUNCTION_32_6();
  long long v41 = xmmword_1C68F03F0;
  *(_OWORD *)(v20 + 16) = xmmword_1C68F03F0;
  *(void *)(v20 + 32) = v17;
  unint64_t v42 = v20;
  sub_1C68ECC18();
  uint64_t v21 = v42;
  uint64_t v22 = OUTLINED_FUNCTION_32_6();
  *(_OWORD *)(v22 + 16) = v41;
  *(void *)(v22 + 32) = v19;
  unint64_t v42 = v22;
  sub_1C68ECC18();
  uint64_t v23 = v42;
  id v24 = v15;
  id v25 = v17;
  id v26 = v19;
  id v27 = sub_1C66F20CC(v15, v21, 0, 1, v23);
  if (!v27)
  {
LABEL_27:
    __break(1u);
    return;
  }
  uint64_t v28 = v27;
  unint64_t v29 = (void *)MEMORY[0x1C87A4AB0]();
  sub_1C66F2740(v28, &v42);
  if (v1)
  {
  }
  else
  {

    uint64_t v30 = v42;
    if (v42 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C68ED528();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v32 = v40;
    if (v31)
    {
      sub_1C66749C8(0, (v30 & 0xC000000000000001) == 0, v30);
      if ((v30 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x1C87A4300](0, v30);
      }
      else {
        id v33 = *(id *)(v30 + 32);
      }
      char v34 = v33;
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(v34, sel_startDate);

      if (v35)
      {
        sub_1C68E9B48();

        uint64_t v36 = sub_1C68E9B78();
        uint64_t v37 = 0;
      }
      else
      {

        uint64_t v36 = sub_1C68E9B78();
        uint64_t v37 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v5, v37, 1, v36);
      sub_1C6601018((uint64_t)v5, v32);
    }
    else
    {

      swift_bridgeObjectRelease();
      uint64_t v38 = sub_1C68E9B78();
      __swift_storeEnumTagSinglePayload(v32, 1, 1, v38);
    }
  }
}

void sub_1C66F2740(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(self, sel_userKnowledgeStore);
  if (v4)
  {
    uint64_t v5 = v4;
    id v46 = 0;
    id v6 = a1;
    id v7 = v5;
    id v8 = objc_msgSend(v7, sel_executeQuery_error_, v6, &v46);
    if (v8)
    {
      id v9 = v8;
      id v10 = v46;

      self;
      if (swift_dynamicCastObjCClass()
        && (id v46 = 0,
            sub_1C65BAD10(0, (unint64_t *)&qword_1EBBF65D8),
            id v11 = v9,
            sub_1C68ECBE8(),
            v11,
            (id v12 = v46) != 0))
      {

        *a2 = v12;
      }
      else
      {
        if (qword_1EBBF6748 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_1C68EC478();
        __swift_project_value_buffer(v15, (uint64_t)qword_1EBBF7AB0);
        id v16 = v9;
        uint64_t v17 = sub_1C68EC458();
        os_log_type_t v18 = sub_1C68ECE58();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          long long v41 = (void *)swift_slowAlloc();
          id v46 = v41;
          *(_DWORD *)uint64_t v19 = 136315138;
          id v20 = v16;
          id v21 = objc_msgSend(v20, sel_description);
          uint64_t v22 = sub_1C68EC898();
          uint64_t v43 = (uint64_t)v16;
          uint64_t v24 = v23;

          sub_1C65B4078(v22, v24, (uint64_t)&v46, v25, v26, v27, v28, v29, v39, v40, (uint64_t)(v19 + 4), (uint64_t)v41, v43, v45, (uint64_t)v46, v47, v48, v49, v50,
            v51);
          sub_1C68ED0C8();

          id v16 = v44;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C65AE000, v17, v18, "invalid query results. expected [_DKEvent], got %s", v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87A54F0](v42, -1, -1);
          MEMORY[0x1C87A54F0](v19, -1, -1);
        }
        else
        {
        }
        type metadata accessor for InferenceError();
        swift_allocObject();
        uint64_t v37 = sub_1C6757C90(55, 0, 0xE000000000000000, 0xD00000000000007CLL, 0x80000001C69167B0, 0x79726575516E7572, 0xEC000000293A5F28, 179, MEMORY[0x1E4FBC860], 1);
        sub_1C669521C();
        swift_allocError();
        *uint64_t v38 = v37;
        swift_willThrow();
      }
    }
    else
    {
      id v30 = v46;
      uint64_t v31 = (void *)sub_1C68E9878();

      swift_willThrow();
      type metadata accessor for InferenceError();
      swift_allocObject();
      uint64_t v32 = sub_1C6757C90(56, 0, 0xE000000000000000, 0xD00000000000007CLL, 0x80000001C69167B0, 0x79726575516E7572, 0xEC000000293A5F28, 174, MEMORY[0x1E4FBC860], 1);
      id v46 = v31;
      id v33 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6650);
      uint64_t v34 = sub_1C68EC8F8();
      sub_1C675786C(v34, v35);
      sub_1C669521C();
      swift_allocError();
      *uint64_t v36 = v32;
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for InferenceError();
    swift_allocObject();
    uint64_t v13 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD00000000000007CLL, 0x80000001C69167B0, 0x79726575516E7572, 0xEC000000293A5F28, 173, MEMORY[0x1E4FBC860], 2);
    sub_1C675786C(0, 0xE000000000000000);
    sub_1C669521C();
    swift_allocError();
    uint64_t *v14 = v13;
    swift_willThrow();
  }
}

uint64_t sub_1C66F2CAC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_eventStreamName);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C68EC898();

  return v3;
}

uint64_t Country.Value.init(rawValue:)@<X0>(char *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C78);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_1C66166CC(v2, 255);
  *(void *)uint64_t v4 = "AD";
  *(void *)(v4 + 8) = 2;
  *(unsigned char *)(v4 + 16) = 2;
  *(void *)(v4 + 24) = "AE";
  *(void *)(v4 + 32) = 2;
  *(unsigned char *)(v4 + 40) = 2;
  *(void *)(v4 + 48) = "AF";
  *(void *)(v4 + 56) = 2;
  *(unsigned char *)(v4 + 64) = 2;
  *(void *)(v4 + 72) = "AG";
  *(void *)(v4 + 80) = 2;
  *(unsigned char *)(v4 + 88) = 2;
  *(void *)(v4 + 96) = "AI";
  *(void *)(v4 + 104) = 2;
  *(unsigned char *)(v4 + 112) = 2;
  *(void *)(v4 + 120) = "AL";
  *(void *)(v4 + 128) = 2;
  *(unsigned char *)(v4 + 136) = 2;
  *(void *)(v4 + 144) = "AM";
  *(void *)(v4 + 152) = 2;
  *(unsigned char *)(v4 + 160) = 2;
  *(void *)(v4 + 168) = "AN";
  *(void *)(v4 + 176) = 2;
  *(unsigned char *)(v4 + 184) = 2;
  *(void *)(v4 + 192) = "AO";
  *(void *)(v4 + 200) = 2;
  *(unsigned char *)(v4 + 208) = 2;
  *(void *)(v4 + 216) = "AQ";
  *(void *)(v4 + 224) = 2;
  *(unsigned char *)(v4 + 232) = 2;
  *(void *)(v4 + 240) = "AR";
  *(void *)(v4 + 248) = 2;
  *(unsigned char *)(v4 + 256) = 2;
  *(void *)(v4 + 264) = "AS";
  *(void *)(v4 + 272) = 2;
  *(unsigned char *)(v4 + 280) = 2;
  *(void *)(v4 + 288) = "AT";
  *(void *)(v4 + 296) = 2;
  *(unsigned char *)(v4 + 304) = 2;
  *(void *)(v4 + 312) = "AU";
  *(void *)(v4 + 320) = 2;
  *(unsigned char *)(v4 + 328) = 2;
  *(void *)(v4 + 336) = "AW";
  *(void *)(v4 + 344) = 2;
  *(unsigned char *)(v4 + 352) = 2;
  *(void *)(v4 + 360) = "AX";
  *(void *)(v4 + 368) = 2;
  *(unsigned char *)(v4 + 376) = 2;
  *(void *)(v4 + 384) = "AZ";
  *(void *)(v4 + 392) = 2;
  *(unsigned char *)(v4 + 400) = 2;
  *(void *)(v4 + 408) = "BA";
  *(void *)(v4 + 416) = 2;
  *(unsigned char *)(v4 + 424) = 2;
  *(void *)(v4 + 432) = "BB";
  *(void *)(v4 + 440) = 2;
  *(unsigned char *)(v4 + 448) = 2;
  *(void *)(v4 + 456) = "BD";
  *(void *)(v4 + 464) = 2;
  *(unsigned char *)(v4 + 472) = 2;
  *(void *)(v4 + 480) = "BE";
  *(void *)(v4 + 488) = 2;
  *(unsigned char *)(v4 + 496) = 2;
  *(void *)(v4 + 504) = "BF";
  *(void *)(v4 + 512) = 2;
  *(unsigned char *)(v4 + 520) = 2;
  *(void *)(v4 + 528) = "BG";
  *(void *)(v4 + 536) = 2;
  *(unsigned char *)(v4 + 544) = 2;
  *(void *)(v4 + 552) = "BH";
  *(void *)(v4 + 560) = 2;
  *(unsigned char *)(v4 + 568) = 2;
  *(void *)(v4 + 576) = "BI";
  *(void *)(v4 + 584) = 2;
  *(unsigned char *)(v4 + 592) = 2;
  *(void *)(v4 + 600) = "BJ";
  *(void *)(v4 + 608) = 2;
  *(unsigned char *)(v4 + 616) = 2;
  *(void *)(v4 + 624) = "BL";
  *(void *)(v4 + 632) = 2;
  *(unsigned char *)(v4 + 640) = 2;
  *(void *)(v4 + 648) = "BM";
  *(void *)(v4 + 656) = 2;
  *(unsigned char *)(v4 + 664) = 2;
  *(void *)(v4 + 672) = "BN";
  *(void *)(v4 + 680) = 2;
  *(unsigned char *)(v4 + 688) = 2;
  *(void *)(v4 + 696) = "BO";
  *(void *)(v4 + 704) = 2;
  *(unsigned char *)(v4 + 712) = 2;
  *(void *)(v4 + 720) = "BR";
  *(void *)(v4 + 728) = 2;
  *(unsigned char *)(v4 + 736) = 2;
  *(void *)(v4 + 744) = "BQ";
  *(void *)(v4 + 752) = 2;
  *(unsigned char *)(v4 + 760) = 2;
  *(void *)(v4 + 768) = "BS";
  *(void *)(v4 + 776) = 2;
  *(unsigned char *)(v4 + 784) = 2;
  *(void *)(v4 + 792) = "BT";
  *(void *)(v4 + 800) = 2;
  *(unsigned char *)(v4 + 808) = 2;
  *(void *)(v4 + 816) = "BV";
  *(void *)(v4 + 824) = 2;
  *(unsigned char *)(v4 + 832) = 2;
  *(void *)(v4 + 840) = "BW";
  *(void *)(v4 + 848) = 2;
  *(unsigned char *)(v4 + 856) = 2;
  *(void *)(v4 + 864) = "BY";
  *(void *)(v4 + 872) = 2;
  *(unsigned char *)(v4 + 880) = 2;
  *(void *)(v4 + 888) = "BZ";
  *(void *)(v4 + 896) = 2;
  *(unsigned char *)(v4 + 904) = 2;
  *(void *)(v4 + 912) = "CA";
  *(void *)(v4 + 920) = 2;
  *(unsigned char *)(v4 + 928) = 2;
  *(void *)(v4 + 936) = "CC";
  *(void *)(v4 + 944) = 2;
  *(unsigned char *)(v4 + 952) = 2;
  *(void *)(v4 + 960) = "CD";
  *(void *)(v4 + 968) = 2;
  *(unsigned char *)(v4 + 976) = 2;
  *(void *)(v4 + 984) = "CF";
  *(void *)(v4 + 992) = 2;
  *(unsigned char *)(v4 + 1000) = 2;
  *(void *)(v4 + 1008) = "CG";
  *(void *)(v4 + 1016) = 2;
  *(unsigned char *)(v4 + 1024) = 2;
  *(void *)(v4 + 1032) = "CH";
  *(void *)(v4 + 1040) = 2;
  *(unsigned char *)(v4 + 1048) = 2;
  *(void *)(v4 + 1056) = "CI";
  *(void *)(v4 + 1064) = 2;
  *(unsigned char *)(v4 + 1072) = 2;
  *(void *)(v4 + 1080) = "CK";
  *(void *)(v4 + 1088) = 2;
  *(unsigned char *)(v4 + 1096) = 2;
  *(void *)(v4 + 1104) = "CL";
  *(void *)(v4 + 1112) = 2;
  *(unsigned char *)(v4 + 1120) = 2;
  *(void *)(v4 + 1128) = "CM";
  *(void *)(v4 + 1136) = 2;
  *(unsigned char *)(v4 + 1144) = 2;
  *(void *)(v4 + 1152) = "CN";
  *(void *)(v4 + 1160) = 2;
  *(unsigned char *)(v4 + 1168) = 2;
  *(void *)(v4 + 1176) = "CO";
  *(void *)(v4 + 1184) = 2;
  *(unsigned char *)(v4 + 1192) = 2;
  *(void *)(v4 + 1200) = "CR";
  *(void *)(v4 + 1208) = 2;
  *(unsigned char *)(v4 + 1216) = 2;
  *(void *)(v4 + 1224) = "CU";
  *(void *)(v4 + 1232) = 2;
  *(unsigned char *)(v4 + 1240) = 2;
  *(void *)(v4 + 1248) = "CV";
  *(void *)(v4 + 1256) = 2;
  *(unsigned char *)(v4 + 1264) = 2;
  *(void *)(v4 + 1272) = "CW";
  *(void *)(v4 + 1280) = 2;
  *(unsigned char *)(v4 + 1288) = 2;
  *(void *)(v4 + 1296) = "CX";
  *(void *)(v4 + 1304) = 2;
  *(unsigned char *)(v4 + 1312) = 2;
  *(void *)(v4 + 1320) = "CY";
  *(void *)(v4 + 1328) = 2;
  *(unsigned char *)(v4 + 1336) = 2;
  *(void *)(v4 + 1344) = "CZ";
  *(void *)(v4 + 1352) = 2;
  *(unsigned char *)(v4 + 1360) = 2;
  *(void *)(v4 + 1368) = "DE";
  *(void *)(v4 + 1376) = 2;
  *(unsigned char *)(v4 + 1384) = 2;
  *(void *)(v4 + 1392) = "DJ";
  *(void *)(v4 + 1400) = 2;
  *(unsigned char *)(v4 + 1408) = 2;
  *(void *)(v4 + 1416) = "DK";
  *(void *)(v4 + 1424) = 2;
  *(unsigned char *)(v4 + 1432) = 2;
  *(void *)(v4 + 1440) = "DM";
  *(void *)(v4 + 1448) = 2;
  *(unsigned char *)(v4 + 1456) = 2;
  *(void *)(v4 + 1464) = "DO";
  *(void *)(v4 + 1472) = 2;
  *(unsigned char *)(v4 + 1480) = 2;
  *(void *)(v4 + 1488) = "DZ";
  *(void *)(v4 + 1496) = 2;
  *(unsigned char *)(v4 + 1504) = 2;
  *(void *)(v4 + 1512) = "EC";
  *(void *)(v4 + 1520) = 2;
  *(unsigned char *)(v4 + 1528) = 2;
  *(void *)(v4 + 1536) = "EE";
  *(void *)(v4 + 1544) = 2;
  *(unsigned char *)(v4 + 1552) = 2;
  *(void *)(v4 + 1560) = "EG";
  *(void *)(v4 + 1568) = 2;
  *(unsigned char *)(v4 + 1576) = 2;
  *(void *)(v4 + 1584) = "EH";
  *(void *)(v4 + 1592) = 2;
  *(unsigned char *)(v4 + 1600) = 2;
  *(void *)(v4 + 1608) = "ER";
  *(void *)(v4 + 1616) = 2;
  *(unsigned char *)(v4 + 1624) = 2;
  *(void *)(v4 + 1632) = "ES";
  *(void *)(v4 + 1640) = 2;
  *(unsigned char *)(v4 + 1648) = 2;
  *(void *)(v4 + 1656) = "ET";
  *(void *)(v4 + 1664) = 2;
  *(unsigned char *)(v4 + 1672) = 2;
  *(void *)(v4 + 1680) = "FI";
  *(void *)(v4 + 1688) = 2;
  *(unsigned char *)(v4 + 1696) = 2;
  *(void *)(v4 + 1704) = "FJ";
  *(void *)(v4 + 1712) = 2;
  *(unsigned char *)(v4 + 1720) = 2;
  *(void *)(v4 + 1728) = "FK";
  *(void *)(v4 + 1736) = 2;
  *(void *)(v4 + 1752) = "FM";
  *(void *)(v4 + 1776) = "FO";
  *(void *)(v4 + 1800) = "FR";
  *(void *)(v4 + 1824) = "FU";
  *(void *)(v4 + 1848) = "GA";
  *(void *)(v4 + 1872) = "GB";
  *(void *)(v4 + 1896) = "GD";
  *(void *)(v4 + 1920) = "GE";
  *(void *)(v4 + 1944) = "GF";
  *(void *)(v4 + 1968) = "GG";
  *(void *)(v4 + 1992) = "GH";
  *(void *)(v4 + 2184) = "GS";
  *(void *)(v4 + 2280) = "GY";
  *(void *)(v4 + 2376) = "HR";
  *(void *)(v4 + 2472) = "IE";
  *(void *)(v4 + 2568) = "IO";
  *(void *)(v4 + 2664) = "IT";
  *(void *)(v4 + 2760) = "JP";
  *(void *)(v4 + 2856) = "KI";
  *(void *)(v4 + 2952) = "KR";
  *(void *)(v4 + 3048) = "LA";
  *(void *)(v4 + 3144) = "LK";
  *(void *)(v4 + 3240) = "LU";
  *(void *)(v4 + 3336) = "MC";
  *(void *)(v4 + 3432) = "MG";
  *(void *)(v4 + 3528) = "MM";
  *(void *)(v4 + 3624) = "MQ";
  *(void *)(v4 + 3720) = "MU";
  *(void *)(v4 + 3816) = "MY";
  *(void *)(v4 + 3912) = "NE";
  *(void *)(v4 + 4008) = "NL";
  *(unsigned char *)(v4 + 1744) = 2;
  *(void *)(v4 + 4056) = "NP";
  *(void *)(v4 + 4040) = 2;
  *(unsigned char *)(v4 + 4048) = 2;
  *(void *)(v4 + 1760) = 2;
  *(void *)(v4 + 4032) = "NO";
  *(void *)(v4 + 4016) = 2;
  *(unsigned char *)(v4 + 4024) = 2;
  *(void *)(v4 + 3984) = "NI";
  *(unsigned char *)(v4 + 3976) = 2;
  *(void *)(v4 + 3992) = 2;
  *(unsigned char *)(v4 + 4000) = 2;
  *(void *)(v4 + 3960) = "NG";
  *(void *)(v4 + 3944) = 2;
  *(unsigned char *)(v4 + 3952) = 2;
  *(void *)(v4 + 3968) = 2;
  *(unsigned char *)(v4 + 1768) = 2;
  *(void *)(v4 + 3936) = "NF";
  *(void *)(v4 + 3920) = 2;
  *(unsigned char *)(v4 + 3928) = 2;
  *(void *)(v4 + 3888) = "NC";
  *(unsigned char *)(v4 + 3880) = 2;
  *(void *)(v4 + 3896) = 2;
  *(unsigned char *)(v4 + 3904) = 2;
  *(void *)(v4 + 3864) = "NA";
  *(void *)(v4 + 3848) = 2;
  *(unsigned char *)(v4 + 3856) = 2;
  *(void *)(v4 + 3872) = 2;
  *(void *)(v4 + 1784) = 2;
  *(void *)(v4 + 3840) = "MZ";
  *(void *)(v4 + 3824) = 2;
  *(unsigned char *)(v4 + 3832) = 2;
  *(void *)(v4 + 3792) = "MX";
  *(unsigned char *)(v4 + 3784) = 2;
  *(void *)(v4 + 3800) = 2;
  *(unsigned char *)(v4 + 3808) = 2;
  *(void *)(v4 + 3768) = "MW";
  *(void *)(v4 + 3752) = 2;
  *(unsigned char *)(v4 + 3760) = 2;
  *(void *)(v4 + 3776) = 2;
  *(unsigned char *)(v4 + 1792) = 2;
  *(void *)(v4 + 3744) = "MV";
  *(void *)(v4 + 3728) = 2;
  *(unsigned char *)(v4 + 3736) = 2;
  *(void *)(v4 + 3696) = "MT";
  *(unsigned char *)(v4 + 3688) = 2;
  *(void *)(v4 + 3704) = 2;
  *(unsigned char *)(v4 + 3712) = 2;
  *(void *)(v4 + 3672) = "MS";
  *(void *)(v4 + 3656) = 2;
  *(unsigned char *)(v4 + 3664) = 2;
  *(void *)(v4 + 3680) = 2;
  *(void *)(v4 + 1808) = 2;
  *(void *)(v4 + 3648) = "MR";
  *(void *)(v4 + 3632) = 2;
  *(unsigned char *)(v4 + 3640) = 2;
  *(void *)(v4 + 3600) = "MP";
  *(unsigned char *)(v4 + 3592) = 2;
  *(void *)(v4 + 3608) = 2;
  *(unsigned char *)(v4 + 3616) = 2;
  *(void *)(v4 + 3576) = "MO";
  *(void *)(v4 + 3560) = 2;
  *(unsigned char *)(v4 + 3568) = 2;
  *(void *)(v4 + 3584) = 2;
  *(unsigned char *)(v4 + 1816) = 2;
  *(void *)(v4 + 3552) = "MN";
  *(void *)(v4 + 3536) = 2;
  *(unsigned char *)(v4 + 3544) = 2;
  *(void *)(v4 + 3504) = "ML";
  *(unsigned char *)(v4 + 3496) = 2;
  *(void *)(v4 + 3512) = 2;
  *(unsigned char *)(v4 + 3520) = 2;
  *(void *)(v4 + 3480) = "MK";
  *(void *)(v4 + 3464) = 2;
  *(unsigned char *)(v4 + 3472) = 2;
  *(void *)(v4 + 3488) = 2;
  *(void *)(v4 + 1832) = 2;
  *(void *)(v4 + 3456) = "MH";
  *(void *)(v4 + 3440) = 2;
  *(unsigned char *)(v4 + 3448) = 2;
  *(void *)(v4 + 3408) = "MF";
  *(unsigned char *)(v4 + 3400) = 2;
  *(void *)(v4 + 3416) = 2;
  *(unsigned char *)(v4 + 3424) = 2;
  *(void *)(v4 + 3384) = "ME";
  *(void *)(v4 + 3368) = 2;
  *(unsigned char *)(v4 + 3376) = 2;
  *(void *)(v4 + 3392) = 2;
  *(unsigned char *)(v4 + 1840) = 2;
  *(void *)(v4 + 3360) = "MD";
  *(void *)(v4 + 3344) = 2;
  *(unsigned char *)(v4 + 3352) = 2;
  *(void *)(v4 + 3312) = "MA";
  *(unsigned char *)(v4 + 3304) = 2;
  *(void *)(v4 + 3320) = 2;
  *(unsigned char *)(v4 + 3328) = 2;
  *(void *)(v4 + 3288) = "LY";
  *(void *)(v4 + 3272) = 2;
  *(unsigned char *)(v4 + 3280) = 2;
  *(void *)(v4 + 3296) = 2;
  *(void *)(v4 + 1856) = 2;
  *(void *)(v4 + 3264) = "LV";
  *(void *)(v4 + 3248) = 2;
  *(unsigned char *)(v4 + 3256) = 2;
  *(void *)(v4 + 3216) = "LT";
  *(unsigned char *)(v4 + 3208) = 2;
  *(void *)(v4 + 3224) = 2;
  *(unsigned char *)(v4 + 3232) = 2;
  *(void *)(v4 + 3192) = "LS";
  *(void *)(v4 + 3176) = 2;
  *(unsigned char *)(v4 + 3184) = 2;
  *(void *)(v4 + 3200) = 2;
  *(unsigned char *)(v4 + 1864) = 2;
  *(void *)(v4 + 3168) = "LR";
  *(void *)(v4 + 3152) = 2;
  *(unsigned char *)(v4 + 3160) = 2;
  *(void *)(v4 + 3120) = "LI";
  *(unsigned char *)(v4 + 3112) = 2;
  *(void *)(v4 + 3128) = 2;
  *(unsigned char *)(v4 + 3136) = 2;
  *(void *)(v4 + 3096) = "LC";
  *(void *)(v4 + 3080) = 2;
  *(unsigned char *)(v4 + 3088) = 2;
  *(void *)(v4 + 3104) = 2;
  *(void *)(v4 + 1880) = 2;
  *(void *)(v4 + 3072) = "LB";
  *(void *)(v4 + 3056) = 2;
  *(unsigned char *)(v4 + 3064) = 2;
  *(void *)(v4 + 3024) = "KZ";
  *(unsigned char *)(v4 + 3016) = 2;
  *(void *)(v4 + 3032) = 2;
  *(unsigned char *)(v4 + 3040) = 2;
  *(void *)(v4 + 3000) = "KY";
  *(void *)(v4 + 2984) = 2;
  *(unsigned char *)(v4 + 2992) = 2;
  *(void *)(v4 + 3008) = 2;
  *(unsigned char *)(v4 + 1888) = 2;
  *(void *)(v4 + 2976) = "KW";
  *(void *)(v4 + 2960) = 2;
  *(unsigned char *)(v4 + 2968) = 2;
  *(void *)(v4 + 2928) = "KP";
  *(unsigned char *)(v4 + 2920) = 2;
  *(void *)(v4 + 2936) = 2;
  *(unsigned char *)(v4 + 2944) = 2;
  *(void *)(v4 + 2904) = "KN";
  *(void *)(v4 + 2888) = 2;
  *(unsigned char *)(v4 + 2896) = 2;
  *(void *)(v4 + 2912) = 2;
  *(void *)(v4 + 1904) = 2;
  *(void *)(v4 + 2880) = "KM";
  *(void *)(v4 + 2864) = 2;
  *(unsigned char *)(v4 + 2872) = 2;
  *(void *)(v4 + 2832) = "KH";
  *(unsigned char *)(v4 + 2824) = 2;
  *(void *)(v4 + 2840) = 2;
  *(unsigned char *)(v4 + 2848) = 2;
  *(void *)(v4 + 2808) = "KG";
  *(void *)(v4 + 2792) = 2;
  *(unsigned char *)(v4 + 2800) = 2;
  *(void *)(v4 + 2816) = 2;
  *(unsigned char *)(v4 + 1912) = 2;
  *(void *)(v4 + 2784) = "KE";
  *(void *)(v4 + 2768) = 2;
  *(unsigned char *)(v4 + 2776) = 2;
  *(void *)(v4 + 2736) = "JO";
  *(unsigned char *)(v4 + 2728) = 2;
  *(void *)(v4 + 2744) = 2;
  *(unsigned char *)(v4 + 2752) = 2;
  *(void *)(v4 + 2712) = "JM";
  *(void *)(v4 + 2696) = 2;
  *(unsigned char *)(v4 + 2704) = 2;
  *(void *)(v4 + 2720) = 2;
  *(void *)(v4 + 1928) = 2;
  *(void *)(v4 + 2688) = "JE";
  *(void *)(v4 + 2672) = 2;
  *(unsigned char *)(v4 + 2680) = 2;
  *(void *)(v4 + 2640) = "IS";
  *(unsigned char *)(v4 + 2632) = 2;
  *(void *)(v4 + 2648) = 2;
  *(unsigned char *)(v4 + 2656) = 2;
  *(void *)(v4 + 2616) = "IR";
  *(void *)(v4 + 2600) = 2;
  *(unsigned char *)(v4 + 2608) = 2;
  *(void *)(v4 + 2624) = 2;
  *(unsigned char *)(v4 + 1936) = 2;
  *(void *)(v4 + 2592) = "IQ";
  *(void *)(v4 + 2576) = 2;
  *(unsigned char *)(v4 + 2584) = 2;
  *(void *)(v4 + 2544) = "IN";
  *(unsigned char *)(v4 + 2536) = 2;
  *(void *)(v4 + 2552) = 2;
  *(unsigned char *)(v4 + 2560) = 2;
  *(void *)(v4 + 2520) = "IM";
  *(void *)(v4 + 2504) = 2;
  *(unsigned char *)(v4 + 2512) = 2;
  *(void *)(v4 + 2528) = 2;
  *(void *)(v4 + 1952) = 2;
  *(void *)(v4 + 2496) = "IL";
  *(void *)(v4 + 2480) = 2;
  *(unsigned char *)(v4 + 2488) = 2;
  *(void *)(v4 + 2448) = "ID";
  *(unsigned char *)(v4 + 2440) = 2;
  *(void *)(v4 + 2456) = 2;
  *(unsigned char *)(v4 + 2464) = 2;
  *(void *)(v4 + 2424) = "HU";
  *(void *)(v4 + 2408) = 2;
  *(unsigned char *)(v4 + 2416) = 2;
  *(void *)(v4 + 2432) = 2;
  *(unsigned char *)(v4 + 1960) = 2;
  *(void *)(v4 + 2400) = "HT";
  *(void *)(v4 + 2384) = 2;
  *(unsigned char *)(v4 + 2392) = 2;
  *(void *)(v4 + 2352) = "HN";
  *(unsigned char *)(v4 + 2344) = 2;
  *(void *)(v4 + 2360) = 2;
  *(unsigned char *)(v4 + 2368) = 2;
  *(void *)(v4 + 2328) = "HM";
  *(void *)(v4 + 2312) = 2;
  *(unsigned char *)(v4 + 2320) = 2;
  *(void *)(v4 + 2336) = 2;
  *(void *)(v4 + 1976) = 2;
  *(void *)(v4 + 2304) = "HK";
  *(void *)(v4 + 2288) = 2;
  *(unsigned char *)(v4 + 2296) = 2;
  *(void *)(v4 + 2256) = "GW";
  *(unsigned char *)(v4 + 2248) = 2;
  *(void *)(v4 + 2264) = 2;
  *(unsigned char *)(v4 + 2272) = 2;
  *(void *)(v4 + 2232) = "GU";
  *(void *)(v4 + 2216) = 2;
  *(unsigned char *)(v4 + 2224) = 2;
  *(void *)(v4 + 2240) = 2;
  *(unsigned char *)(v4 + 1984) = 2;
  *(void *)(v4 + 2208) = "GT";
  *(void *)(v4 + 2192) = 2;
  *(unsigned char *)(v4 + 2200) = 2;
  *(void *)(v4 + 2160) = "GR";
  *(unsigned char *)(v4 + 2152) = 2;
  *(void *)(v4 + 2168) = 2;
  *(unsigned char *)(v4 + 2176) = 2;
  *(void *)(v4 + 2136) = "GQ";
  *(void *)(v4 + 2120) = 2;
  *(unsigned char *)(v4 + 2128) = 2;
  *(void *)(v4 + 2144) = 2;
  *(void *)(v4 + 2000) = 2;
  *(void *)(v4 + 2112) = "GP";
  *(void *)(v4 + 2096) = 2;
  *(unsigned char *)(v4 + 2104) = 2;
  *(void *)(v4 + 2064) = "GM";
  *(void *)(v4 + 2072) = 2;
  *(unsigned char *)(v4 + 2080) = 2;
  *(void *)(v4 + 2088) = "GN";
  *(unsigned char *)(v4 + 2032) = 2;
  *(void *)(v4 + 2040) = "GL";
  *(void *)(v4 + 2048) = 2;
  *(unsigned char *)(v4 + 2056) = 2;
  *(unsigned char *)(v4 + 2008) = 2;
  *(void *)(v4 + 2016) = "GI";
  *(void *)(v4 + 2024) = 2;
  *(void *)(v4 + 4064) = 2;
  *(unsigned char *)(v4 + 4072) = 2;
  *(void *)(v4 + 4080) = "NR";
  *(void *)(v4 + 4088) = 2;
  *(unsigned char *)(v4 + 4096) = 2;
  *(void *)(v4 + 4104) = "NU";
  *(void *)(v4 + 4112) = 2;
  *(unsigned char *)(v4 + 4120) = 2;
  *(void *)(v4 + 4128) = "NZ";
  *(void *)(v4 + 4136) = 2;
  *(unsigned char *)(v4 + 4144) = 2;
  *(void *)(v4 + 4152) = "OM";
  *(void *)(v4 + 4160) = 2;
  *(unsigned char *)(v4 + 4168) = 2;
  *(void *)(v4 + 4176) = "PA";
  *(void *)(v4 + 4184) = 2;
  *(unsigned char *)(v4 + 4192) = 2;
  *(void *)(v4 + 4200) = "PE";
  *(void *)(v4 + 4208) = 2;
  *(unsigned char *)(v4 + 4216) = 2;
  *(void *)(v4 + 4224) = "PF";
  *(void *)(v4 + 4232) = 2;
  *(unsigned char *)(v4 + 4240) = 2;
  *(void *)(v4 + 4248) = "PG";
  *(void *)(v4 + 4256) = 2;
  *(unsigned char *)(v4 + 4264) = 2;
  *(void *)(v4 + 4272) = "PH";
  *(void *)(v4 + 4280) = 2;
  *(unsigned char *)(v4 + 4288) = 2;
  *(void *)(v4 + 4296) = "PI";
  *(void *)(v4 + 4304) = 2;
  *(unsigned char *)(v4 + 4312) = 2;
  *(void *)(v4 + 4320) = "PK";
  *(void *)(v4 + 4328) = 2;
  *(unsigned char *)(v4 + 4336) = 2;
  *(void *)(v4 + 4344) = "PL";
  *(void *)(v4 + 4352) = 2;
  *(unsigned char *)(v4 + 4360) = 2;
  *(void *)(v4 + 4368) = "PM";
  *(void *)(v4 + 4376) = 2;
  *(unsigned char *)(v4 + 4384) = 2;
  *(void *)(v4 + 4392) = "PN";
  *(void *)(v4 + 4400) = 2;
  *(unsigned char *)(v4 + 4408) = 2;
  *(void *)(v4 + 4416) = "PR";
  *(void *)(v4 + 4424) = 2;
  *(unsigned char *)(v4 + 4432) = 2;
  *(void *)(v4 + 4440) = "PS";
  *(void *)(v4 + 4448) = 2;
  *(unsigned char *)(v4 + 4456) = 2;
  *(void *)(v4 + 4464) = "PT";
  *(void *)(v4 + 4472) = 2;
  *(unsigned char *)(v4 + 4480) = 2;
  *(void *)(v4 + 4488) = "PW";
  *(void *)(v4 + 4496) = 2;
  *(unsigned char *)(v4 + 4504) = 2;
  *(void *)(v4 + 4512) = "PY";
  *(void *)(v4 + 4520) = 2;
  *(unsigned char *)(v4 + 4528) = 2;
  *(void *)(v4 + 4536) = "QA";
  *(void *)(v4 + 4544) = 2;
  *(unsigned char *)(v4 + 4552) = 2;
  *(void *)(v4 + 4560) = "RE";
  *(void *)(v4 + 4568) = 2;
  *(unsigned char *)(v4 + 4576) = 2;
  *(void *)(v4 + 4584) = "RO";
  *(void *)(v4 + 4592) = 2;
  *(unsigned char *)(v4 + 4600) = 2;
  *(void *)(v4 + 4608) = "RS";
  *(void *)(v4 + 4616) = 2;
  *(unsigned char *)(v4 + 4624) = 2;
  *(void *)(v4 + 4632) = "RU";
  *(void *)(v4 + 4640) = 2;
  *(unsigned char *)(v4 + 4648) = 2;
  *(void *)(v4 + 4656) = "RW";
  *(void *)(v4 + 4664) = 2;
  *(unsigned char *)(v4 + 4672) = 2;
  *(void *)(v4 + 4680) = "SA";
  *(void *)(v4 + 4688) = 2;
  *(unsigned char *)(v4 + 4696) = 2;
  *(void *)(v4 + 4704) = "SB";
  *(void *)(v4 + 4712) = 2;
  *(unsigned char *)(v4 + 4720) = 2;
  *(void *)(v4 + 4728) = "SC";
  *(void *)(v4 + 4736) = 2;
  *(unsigned char *)(v4 + 4744) = 2;
  *(void *)(v4 + 4752) = "SD";
  *(void *)(v4 + 4760) = 2;
  *(unsigned char *)(v4 + 4768) = 2;
  *(void *)(v4 + 4776) = "SE";
  *(void *)(v4 + 4784) = 2;
  *(unsigned char *)(v4 + 4792) = 2;
  *(void *)(v4 + 4800) = "SG";
  *(void *)(v4 + 4808) = 2;
  *(unsigned char *)(v4 + 4816) = 2;
  *(void *)(v4 + 4824) = "SH";
  *(void *)(v4 + 4832) = 2;
  *(unsigned char *)(v4 + 4840) = 2;
  *(void *)(v4 + 4848) = "SI";
  *(void *)(v4 + 4856) = 2;
  *(unsigned char *)(v4 + 4864) = 2;
  *(void *)(v4 + 4872) = "SJ";
  *(void *)(v4 + 4880) = 2;
  *(unsigned char *)(v4 + 4888) = 2;
  *(void *)(v4 + 4896) = "SK";
  *(void *)(v4 + 4904) = 2;
  *(unsigned char *)(v4 + 4912) = 2;
  *(void *)(v4 + 4920) = "SL";
  *(void *)(v4 + 4928) = 2;
  *(unsigned char *)(v4 + 4936) = 2;
  *(void *)(v4 + 4944) = "SM";
  *(void *)(v4 + 4952) = 2;
  *(unsigned char *)(v4 + 4960) = 2;
  *(void *)(v4 + 4968) = "SN";
  *(void *)(v4 + 4976) = 2;
  *(unsigned char *)(v4 + 4984) = 2;
  *(void *)(v4 + 4992) = "SO";
  *(void *)(v4 + 5000) = 2;
  *(unsigned char *)(v4 + 5008) = 2;
  *(void *)(v4 + 5016) = "SR";
  *(void *)(v4 + 5024) = 2;
  *(unsigned char *)(v4 + 5032) = 2;
  *(void *)(v4 + 5040) = "SS";
  *(void *)(v4 + 5048) = 2;
  *(unsigned char *)(v4 + 5056) = 2;
  *(void *)(v4 + 5064) = "ST";
  *(void *)(v4 + 5072) = 2;
  *(unsigned char *)(v4 + 5080) = 2;
  *(void *)(v4 + 5088) = "SX";
  *(void *)(v4 + 5096) = 2;
  *(unsigned char *)(v4 + 5104) = 2;
  *(void *)(v4 + 5112) = "SV";
  *(void *)(v4 + 5120) = 2;
  *(unsigned char *)(v4 + 5128) = 2;
  *(void *)(v4 + 5136) = "SY";
  *(void *)(v4 + 5144) = 2;
  *(unsigned char *)(v4 + 5152) = 2;
  *(void *)(v4 + 5160) = "SZ";
  *(void *)(v4 + 5168) = 2;
  *(unsigned char *)(v4 + 5176) = 2;
  *(void *)(v4 + 5184) = "TC";
  *(void *)(v4 + 5192) = 2;
  *(unsigned char *)(v4 + 5200) = 2;
  *(void *)(v4 + 5208) = "TD";
  *(void *)(v4 + 5216) = 2;
  *(unsigned char *)(v4 + 5224) = 2;
  *(void *)(v4 + 5232) = "TF";
  *(void *)(v4 + 5240) = 2;
  *(unsigned char *)(v4 + 5248) = 2;
  *(void *)(v4 + 5256) = "TG";
  *(void *)(v4 + 5264) = 2;
  *(unsigned char *)(v4 + 5272) = 2;
  *(void *)(v4 + 5280) = "TH";
  *(void *)(v4 + 5288) = 2;
  *(unsigned char *)(v4 + 5296) = 2;
  *(void *)(v4 + 5304) = "TJ";
  *(void *)(v4 + 5312) = 2;
  *(unsigned char *)(v4 + 5320) = 2;
  *(void *)(v4 + 5328) = "TK";
  *(void *)(v4 + 5336) = 2;
  *(unsigned char *)(v4 + 5344) = 2;
  *(void *)(v4 + 5352) = "TL";
  *(void *)(v4 + 5360) = 2;
  *(unsigned char *)(v4 + 5368) = 2;
  *(void *)(v4 + 5376) = "TM";
  *(void *)(v4 + 5384) = 2;
  *(unsigned char *)(v4 + 5392) = 2;
  *(void *)(v4 + 5400) = "TN";
  *(void *)(v4 + 5408) = 2;
  *(unsigned char *)(v4 + 5416) = 2;
  *(void *)(v4 + 5424) = "TO";
  *(void *)(v4 + 5432) = 2;
  *(unsigned char *)(v4 + 5440) = 2;
  *(void *)(v4 + 5448) = "TR";
  *(void *)(v4 + 5456) = 2;
  *(unsigned char *)(v4 + 5464) = 2;
  *(void *)(v4 + 5472) = "TT";
  *(void *)(v4 + 5480) = 2;
  *(unsigned char *)(v4 + 5488) = 2;
  *(void *)(v4 + 5496) = "TV";
  *(void *)(v4 + 5504) = 2;
  *(unsigned char *)(v4 + 5512) = 2;
  *(void *)(v4 + 5520) = "TW";
  *(void *)(v4 + 5528) = 2;
  *(unsigned char *)(v4 + 5536) = 2;
  *(void *)(v4 + 5544) = "TZ";
  *(void *)(v4 + 5552) = 2;
  *(unsigned char *)(v4 + 5560) = 2;
  *(void *)(v4 + 5568) = "UA";
  *(void *)(v4 + 5576) = 2;
  *(unsigned char *)(v4 + 5584) = 2;
  *(void *)(v4 + 5592) = "UG";
  *(void *)(v4 + 5600) = 2;
  *(unsigned char *)(v4 + 5608) = 2;
  *(void *)(v4 + 5616) = "UM";
  *(void *)(v4 + 5624) = 2;
  *(unsigned char *)(v4 + 5632) = 2;
  *(void *)(v4 + 5640) = "US";
  *(void *)(v4 + 5648) = 2;
  *(unsigned char *)(v4 + 5656) = 2;
  *(void *)(v4 + 5664) = "UY";
  *(void *)(v4 + 5672) = 2;
  *(unsigned char *)(v4 + 5680) = 2;
  *(void *)(v4 + 5688) = "UZ";
  *(void *)(v4 + 5696) = 2;
  *(unsigned char *)(v4 + 5704) = 2;
  *(void *)(v4 + 5712) = "VA";
  *(void *)(v4 + 5720) = 2;
  *(unsigned char *)(v4 + 5728) = 2;
  *(void *)(v4 + 5736) = "VC";
  *(void *)(v4 + 5744) = 2;
  *(unsigned char *)(v4 + 5752) = 2;
  *(void *)(v4 + 5760) = "VE";
  *(void *)(v4 + 5768) = 2;
  *(unsigned char *)(v4 + 5776) = 2;
  *(void *)(v4 + 5784) = "VG";
  *(void *)(v4 + 5792) = 2;
  *(unsigned char *)(v4 + 5800) = 2;
  *(void *)(v4 + 5808) = "VI";
  *(void *)(v4 + 5816) = 2;
  *(unsigned char *)(v4 + 5824) = 2;
  *(void *)(v4 + 5832) = "VN";
  *(void *)(v4 + 5840) = 2;
  *(unsigned char *)(v4 + 5848) = 2;
  *(void *)(v4 + 5856) = "VT";
  *(void *)(v4 + 5864) = 2;
  *(unsigned char *)(v4 + 5872) = 2;
  *(void *)(v4 + 5880) = "VU";
  *(void *)(v4 + 5888) = 2;
  *(unsigned char *)(v4 + 5896) = 2;
  *(void *)(v4 + 5904) = "WF";
  *(void *)(v4 + 5912) = 2;
  *(unsigned char *)(v4 + 5920) = 2;
  *(void *)(v4 + 5928) = "WS";
  *(void *)(v4 + 5936) = 2;
  *(unsigned char *)(v4 + 5944) = 2;
  *(void *)(v4 + 5952) = "YE";
  *(void *)(v4 + 5960) = 2;
  *(unsigned char *)(v4 + 5968) = 2;
  *(void *)(v4 + 5976) = "YT";
  *(void *)(v4 + 5984) = 2;
  *(unsigned char *)(v4 + 5992) = 2;
  *(void *)(v4 + 6000) = "YY";
  *(void *)(v4 + 6008) = 2;
  *(unsigned char *)(v4 + 6016) = 2;
  *(void *)(v4 + 6024) = "ZA";
  *(void *)(v4 + 6032) = 2;
  *(unsigned char *)(v4 + 6040) = 2;
  *(void *)(v4 + 6048) = "ZM";
  *(void *)(v4 + 6056) = 2;
  *(unsigned char *)(v4 + 6064) = 2;
  *(void *)(v4 + 6072) = "ZW";
  *(void *)(v4 + 6080) = 2;
  *(unsigned char *)(v4 + 6088) = 2;
  *(void *)(v4 + 6096) = "ZZ";
  *(void *)(v4 + 6104) = 2;
  *(unsigned char *)(v4 + 6112) = 2;
  nullsub_1(v3);
  unint64_t v5 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 < 0x80) {
    goto LABEL_4;
  }
  if ((v5 & 0xFFFFFFFFFFFFFFC0) == 0x80)
  {
    LOBYTE(v5) = v5 | 0x80;
LABEL_4:
    char v7 = v5;
    goto LABEL_5;
  }
  unint64_t v8 = v5 - 192;
  char v7 = -19;
  LOBYTE(v5) = -64;
  switch(v8)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      LOBYTE(v5) = -63;
      goto LABEL_4;
    case 2uLL:
      LOBYTE(v5) = -62;
      goto LABEL_4;
    case 3uLL:
      LOBYTE(v5) = -61;
      goto LABEL_4;
    case 4uLL:
      LOBYTE(v5) = -60;
      goto LABEL_4;
    case 5uLL:
      LOBYTE(v5) = -59;
      goto LABEL_4;
    case 6uLL:
      LOBYTE(v5) = -58;
      goto LABEL_4;
    case 7uLL:
      LOBYTE(v5) = -57;
      goto LABEL_4;
    case 8uLL:
      LOBYTE(v5) = -56;
      goto LABEL_4;
    case 9uLL:
      LOBYTE(v5) = -55;
      goto LABEL_4;
    case 0xAuLL:
      LOBYTE(v5) = -54;
      goto LABEL_4;
    case 0xBuLL:
      LOBYTE(v5) = -53;
      goto LABEL_4;
    case 0xCuLL:
      LOBYTE(v5) = -52;
      goto LABEL_4;
    case 0xDuLL:
      LOBYTE(v5) = -51;
      goto LABEL_4;
    case 0xEuLL:
      LOBYTE(v5) = -50;
      goto LABEL_4;
    case 0xFuLL:
      LOBYTE(v5) = -49;
      goto LABEL_4;
    case 0x10uLL:
      LOBYTE(v5) = -48;
      goto LABEL_4;
    case 0x11uLL:
      LOBYTE(v5) = -47;
      goto LABEL_4;
    case 0x12uLL:
      LOBYTE(v5) = -46;
      goto LABEL_4;
    case 0x13uLL:
      LOBYTE(v5) = -45;
      goto LABEL_4;
    case 0x14uLL:
      LOBYTE(v5) = -44;
      goto LABEL_4;
    case 0x15uLL:
      LOBYTE(v5) = -43;
      goto LABEL_4;
    case 0x16uLL:
      LOBYTE(v5) = -42;
      goto LABEL_4;
    case 0x17uLL:
      LOBYTE(v5) = -41;
      goto LABEL_4;
    case 0x18uLL:
      LOBYTE(v5) = -40;
      goto LABEL_4;
    case 0x19uLL:
      LOBYTE(v5) = -39;
      goto LABEL_4;
    case 0x1AuLL:
      LOBYTE(v5) = -38;
      goto LABEL_4;
    case 0x1BuLL:
      LOBYTE(v5) = -37;
      goto LABEL_4;
    case 0x1CuLL:
      LOBYTE(v5) = -36;
      goto LABEL_4;
    case 0x1DuLL:
      LOBYTE(v5) = -35;
      goto LABEL_4;
    case 0x1EuLL:
      LOBYTE(v5) = -34;
      goto LABEL_4;
    case 0x1FuLL:
      LOBYTE(v5) = -33;
      goto LABEL_4;
    case 0x20uLL:
      LOBYTE(v5) = -32;
      goto LABEL_4;
    case 0x21uLL:
      LOBYTE(v5) = -31;
      goto LABEL_4;
    case 0x22uLL:
      LOBYTE(v5) = -30;
      goto LABEL_4;
    case 0x23uLL:
      LOBYTE(v5) = -29;
      goto LABEL_4;
    case 0x24uLL:
      LOBYTE(v5) = -28;
      goto LABEL_4;
    case 0x25uLL:
      LOBYTE(v5) = -27;
      goto LABEL_4;
    case 0x26uLL:
      LOBYTE(v5) = -26;
      goto LABEL_4;
    case 0x27uLL:
      LOBYTE(v5) = -25;
      goto LABEL_4;
    case 0x28uLL:
      LOBYTE(v5) = -24;
      goto LABEL_4;
    case 0x29uLL:
      LOBYTE(v5) = -23;
      goto LABEL_4;
    case 0x2AuLL:
      LOBYTE(v5) = -22;
      goto LABEL_4;
    case 0x2BuLL:
      LOBYTE(v5) = -21;
      goto LABEL_4;
    case 0x2CuLL:
      LOBYTE(v5) = -20;
      goto LABEL_4;
    case 0x2DuLL:
      break;
    case 0x2EuLL:
      char v7 = -18;
      break;
    case 0x2FuLL:
      char v7 = -17;
      break;
    case 0x30uLL:
      char v7 = -16;
      break;
    case 0x31uLL:
      char v7 = -15;
      break;
    case 0x32uLL:
      char v7 = -14;
      break;
    case 0x33uLL:
      char v7 = -13;
      break;
    case 0x34uLL:
      char v7 = -12;
      break;
    case 0x35uLL:
      char v7 = -11;
      break;
    case 0x36uLL:
      char v7 = -10;
      break;
    case 0x37uLL:
      char v7 = -9;
      break;
    case 0x38uLL:
      char v7 = -8;
      break;
    case 0x39uLL:
      char v7 = -7;
      break;
    case 0x3AuLL:
      char v7 = -6;
      break;
    case 0x3BuLL:
      char v7 = -5;
      break;
    case 0x3CuLL:
      char v7 = -4;
      break;
    case 0x3DuLL:
      char v7 = -3;
      break;
    case 0x3EuLL:
      char v7 = -2;
      break;
    default:
      char v7 = -1;
      break;
  }
LABEL_5:
  *a1 = v7;
  return result;
}

char *Country.init(value:prefix:suffix:)@<X0>(char *result@<X0>, unsigned char *a2@<X1>, char *a3@<X2>, unsigned char *a4@<X8>)
{
  char v4 = *result;
  char v5 = *a3;
  *a4 = *a2;
  a4[1] = v5;
  a4[2] = v4;
  return result;
}

uint64_t Country.Value.rawValue.getter()
{
  uint64_t result = 17473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 17729;
      break;
    case 2:
      uint64_t result = 17985;
      break;
    case 3:
      uint64_t result = 18241;
      break;
    case 4:
      uint64_t result = 18753;
      break;
    case 5:
      uint64_t result = 19521;
      break;
    case 6:
      uint64_t result = 19777;
      break;
    case 7:
      uint64_t result = 20033;
      break;
    case 8:
      uint64_t result = 20289;
      break;
    case 9:
      uint64_t result = 20801;
      break;
    case 0xA:
      uint64_t result = 21057;
      break;
    case 0xB:
      uint64_t result = 21313;
      break;
    case 0xC:
      uint64_t result = 21569;
      break;
    case 0xD:
      uint64_t result = 21825;
      break;
    case 0xE:
      uint64_t result = 22337;
      break;
    case 0xF:
      uint64_t result = 22593;
      break;
    case 0x10:
      uint64_t result = 23105;
      break;
    case 0x11:
      uint64_t result = 16706;
      break;
    case 0x12:
      uint64_t result = 16962;
      break;
    case 0x13:
      uint64_t result = 17474;
      break;
    case 0x14:
      uint64_t result = 17730;
      break;
    case 0x15:
      uint64_t result = 17986;
      break;
    case 0x16:
      uint64_t result = 18242;
      break;
    case 0x17:
      uint64_t result = 18498;
      break;
    case 0x18:
      uint64_t result = 18754;
      break;
    case 0x19:
      uint64_t result = 19010;
      break;
    case 0x1A:
      uint64_t result = 19522;
      break;
    case 0x1B:
      uint64_t result = 19778;
      break;
    case 0x1C:
      uint64_t result = 20034;
      break;
    case 0x1D:
      uint64_t result = 20290;
      break;
    case 0x1E:
      uint64_t result = 21058;
      break;
    case 0x1F:
      uint64_t result = 20802;
      break;
    case 0x20:
      uint64_t result = 21314;
      break;
    case 0x21:
      uint64_t result = 21570;
      break;
    case 0x22:
      uint64_t result = 22082;
      break;
    case 0x23:
      uint64_t result = 22338;
      break;
    case 0x24:
      uint64_t result = 22850;
      break;
    case 0x25:
      uint64_t result = 23106;
      break;
    case 0x26:
      uint64_t result = 16707;
      break;
    case 0x27:
      uint64_t result = 17219;
      break;
    case 0x28:
      uint64_t result = 17475;
      break;
    case 0x29:
      uint64_t result = 17987;
      break;
    case 0x2A:
      uint64_t result = 18243;
      break;
    case 0x2B:
      uint64_t result = 18499;
      break;
    case 0x2C:
      uint64_t result = 18755;
      break;
    case 0x2D:
      uint64_t result = 19267;
      break;
    case 0x2E:
      uint64_t result = 19523;
      break;
    case 0x2F:
      uint64_t result = 19779;
      break;
    case 0x30:
      uint64_t result = 20035;
      break;
    case 0x31:
      uint64_t result = 20291;
      break;
    case 0x32:
      uint64_t result = 21059;
      break;
    case 0x33:
      uint64_t result = 21827;
      break;
    case 0x34:
      uint64_t result = 22083;
      break;
    case 0x35:
      uint64_t result = 22339;
      break;
    case 0x36:
      uint64_t result = 22595;
      break;
    case 0x37:
      uint64_t result = 22851;
      break;
    case 0x38:
      uint64_t result = 23107;
      break;
    case 0x39:
      uint64_t result = 17732;
      break;
    case 0x3A:
      uint64_t result = 19012;
      break;
    case 0x3B:
      uint64_t result = 19268;
      break;
    case 0x3C:
      uint64_t result = 19780;
      break;
    case 0x3D:
      uint64_t result = 20292;
      break;
    case 0x3E:
      uint64_t result = 23108;
      break;
    case 0x3F:
      uint64_t result = 17221;
      break;
    case 0x40:
      uint64_t result = 17733;
      break;
    case 0x41:
      uint64_t result = 18245;
      break;
    case 0x42:
      uint64_t result = 18501;
      break;
    case 0x43:
      uint64_t result = 21061;
      break;
    case 0x44:
      uint64_t result = 21317;
      break;
    case 0x45:
      uint64_t result = 21573;
      break;
    case 0x46:
      uint64_t result = 18758;
      break;
    case 0x47:
      uint64_t result = 19014;
      break;
    case 0x48:
      uint64_t result = 19270;
      break;
    case 0x49:
      uint64_t result = 19782;
      break;
    case 0x4A:
      uint64_t result = 20294;
      break;
    case 0x4B:
      uint64_t result = 21062;
      break;
    case 0x4C:
      uint64_t result = 21830;
      break;
    case 0x4D:
      uint64_t result = 16711;
      break;
    case 0x4E:
      uint64_t result = 16967;
      break;
    case 0x4F:
      uint64_t result = 17479;
      break;
    case 0x50:
      uint64_t result = 17735;
      break;
    case 0x51:
      uint64_t result = 17991;
      break;
    case 0x52:
      uint64_t result = 18247;
      break;
    case 0x53:
      uint64_t result = 18503;
      break;
    case 0x54:
      uint64_t result = 18759;
      break;
    case 0x55:
      uint64_t result = 19527;
      break;
    case 0x56:
      uint64_t result = 19783;
      break;
    case 0x57:
      uint64_t result = 20039;
      break;
    case 0x58:
      uint64_t result = 20551;
      break;
    case 0x59:
      uint64_t result = 20807;
      break;
    case 0x5A:
      uint64_t result = 21063;
      break;
    case 0x5B:
      uint64_t result = 21319;
      break;
    case 0x5C:
      uint64_t result = 21575;
      break;
    case 0x5D:
      uint64_t result = 21831;
      break;
    case 0x5E:
      uint64_t result = 22343;
      break;
    case 0x5F:
      uint64_t result = 22855;
      break;
    case 0x60:
      uint64_t result = 19272;
      break;
    case 0x61:
      uint64_t result = 19784;
      break;
    case 0x62:
      uint64_t result = 20040;
      break;
    case 0x63:
      uint64_t result = 21064;
      break;
    case 0x64:
      uint64_t result = 21576;
      break;
    case 0x65:
      uint64_t result = 21832;
      break;
    case 0x66:
      uint64_t result = 17481;
      break;
    case 0x67:
      uint64_t result = 17737;
      break;
    case 0x68:
      uint64_t result = 19529;
      break;
    case 0x69:
      uint64_t result = 19785;
      break;
    case 0x6A:
      uint64_t result = 20041;
      break;
    case 0x6B:
      uint64_t result = 20297;
      break;
    case 0x6C:
      uint64_t result = 20809;
      break;
    case 0x6D:
      uint64_t result = 21065;
      break;
    case 0x6E:
      uint64_t result = 21321;
      break;
    case 0x6F:
      uint64_t result = 21577;
      break;
    case 0x70:
      uint64_t result = 17738;
      break;
    case 0x71:
      uint64_t result = 19786;
      break;
    case 0x72:
      uint64_t result = 20298;
      break;
    case 0x73:
      uint64_t result = 20554;
      break;
    case 0x74:
      uint64_t result = 17739;
      break;
    case 0x75:
      uint64_t result = 18251;
      break;
    case 0x76:
      uint64_t result = 18507;
      break;
    case 0x77:
      uint64_t result = 18763;
      break;
    case 0x78:
      uint64_t result = 19787;
      break;
    case 0x79:
      uint64_t result = 20043;
      break;
    case 0x7A:
      uint64_t result = 20555;
      break;
    case 0x7B:
      uint64_t result = 21067;
      break;
    case 0x7C:
      uint64_t result = 22347;
      break;
    case 0x7D:
      uint64_t result = 22859;
      break;
    case 0x7E:
      uint64_t result = 23115;
      break;
    case 0x7F:
      uint64_t result = 16716;
      break;
    case 0x80:
      uint64_t result = 16972;
      break;
    case 0x81:
      uint64_t result = 17228;
      break;
    case 0x82:
      uint64_t result = 18764;
      break;
    case 0x83:
      uint64_t result = 19276;
      break;
    case 0x84:
      uint64_t result = 21068;
      break;
    case 0x85:
      uint64_t result = 21324;
      break;
    case 0x86:
      uint64_t result = 21580;
      break;
    case 0x87:
      uint64_t result = 21836;
      break;
    case 0x88:
      uint64_t result = 22092;
      break;
    case 0x89:
      uint64_t result = 22860;
      break;
    case 0x8A:
      uint64_t result = 16717;
      break;
    case 0x8B:
      uint64_t result = 17229;
      break;
    case 0x8C:
      uint64_t result = 17485;
      break;
    case 0x8D:
      uint64_t result = 17741;
      break;
    case 0x8E:
      uint64_t result = 17997;
      break;
    case 0x8F:
      uint64_t result = 18253;
      break;
    case 0x90:
      uint64_t result = 18509;
      break;
    case 0x91:
      uint64_t result = 19277;
      break;
    case 0x92:
      uint64_t result = 19533;
      break;
    case 0x93:
      uint64_t result = 19789;
      break;
    case 0x94:
      uint64_t result = 20045;
      break;
    case 0x95:
      uint64_t result = 20301;
      break;
    case 0x96:
      uint64_t result = 20557;
      break;
    case 0x97:
      uint64_t result = 20813;
      break;
    case 0x98:
      uint64_t result = 21069;
      break;
    case 0x99:
      uint64_t result = 21325;
      break;
    case 0x9A:
      uint64_t result = 21581;
      break;
    case 0x9B:
      uint64_t result = 21837;
      break;
    case 0x9C:
      uint64_t result = 22093;
      break;
    case 0x9D:
      uint64_t result = 22349;
      break;
    case 0x9E:
      uint64_t result = 22605;
      break;
    case 0x9F:
      uint64_t result = 22861;
      break;
    case 0xA0:
      uint64_t result = 23117;
      break;
    case 0xA1:
      uint64_t result = 16718;
      break;
    case 0xA2:
      uint64_t result = 17230;
      break;
    case 0xA3:
      uint64_t result = 17742;
      break;
    case 0xA4:
      uint64_t result = 17998;
      break;
    case 0xA5:
      uint64_t result = 18254;
      break;
    case 0xA6:
      uint64_t result = 18766;
      break;
    case 0xA7:
      uint64_t result = 19534;
      break;
    case 0xA8:
      uint64_t result = 20302;
      break;
    case 0xA9:
      uint64_t result = 20558;
      break;
    case 0xAA:
      uint64_t result = 21070;
      break;
    case 0xAB:
      uint64_t result = 21838;
      break;
    case 0xAC:
      uint64_t result = 23118;
      break;
    case 0xAD:
      uint64_t result = 19791;
      break;
    case 0xAE:
      uint64_t result = 16720;
      break;
    case 0xAF:
      uint64_t result = 17744;
      break;
    case 0xB0:
      uint64_t result = 18000;
      break;
    case 0xB1:
      uint64_t result = 18256;
      break;
    case 0xB2:
      uint64_t result = 18512;
      break;
    case 0xB3:
      uint64_t result = 18768;
      break;
    case 0xB4:
      uint64_t result = 19280;
      break;
    case 0xB5:
      uint64_t result = 19536;
      break;
    case 0xB6:
      uint64_t result = 19792;
      break;
    case 0xB7:
      uint64_t result = 20048;
      break;
    case 0xB8:
      uint64_t result = 21072;
      break;
    case 0xB9:
      uint64_t result = 21328;
      break;
    case 0xBA:
      uint64_t result = 21584;
      break;
    case 0xBB:
      uint64_t result = 22352;
      break;
    case 0xBC:
      uint64_t result = 22864;
      break;
    case 0xBD:
      uint64_t result = 16721;
      break;
    case 0xBE:
      uint64_t result = 17746;
      break;
    case 0xBF:
      uint64_t result = 20306;
      break;
    case 0xC0:
      uint64_t result = 21330;
      break;
    case 0xC1:
      uint64_t result = 21842;
      break;
    case 0xC2:
      uint64_t result = 22354;
      break;
    case 0xC3:
      uint64_t result = 16723;
      break;
    case 0xC4:
      uint64_t result = 16979;
      break;
    case 0xC5:
      uint64_t result = 17235;
      break;
    case 0xC6:
      uint64_t result = 17491;
      break;
    case 0xC7:
      uint64_t result = 17747;
      break;
    case 0xC8:
      uint64_t result = 18259;
      break;
    case 0xC9:
      uint64_t result = 18515;
      break;
    case 0xCA:
      uint64_t result = 18771;
      break;
    case 0xCB:
      uint64_t result = 19027;
      break;
    case 0xCC:
      uint64_t result = 19283;
      break;
    case 0xCD:
      uint64_t result = 19539;
      break;
    case 0xCE:
      uint64_t result = 19795;
      break;
    case 0xCF:
      uint64_t result = 20051;
      break;
    case 0xD0:
      uint64_t result = 20307;
      break;
    case 0xD1:
      uint64_t result = 21075;
      break;
    case 0xD2:
      uint64_t result = 21331;
      break;
    case 0xD3:
      uint64_t result = 21587;
      break;
    case 0xD4:
      uint64_t result = 22611;
      break;
    case 0xD5:
      uint64_t result = 22099;
      break;
    case 0xD6:
      uint64_t result = 22867;
      break;
    case 0xD7:
      uint64_t result = 23123;
      break;
    case 0xD8:
      uint64_t result = 17236;
      break;
    case 0xD9:
      uint64_t result = 17492;
      break;
    case 0xDA:
      uint64_t result = 18004;
      break;
    case 0xDB:
      uint64_t result = 18260;
      break;
    case 0xDC:
      uint64_t result = 18516;
      break;
    case 0xDD:
      uint64_t result = 19028;
      break;
    case 0xDE:
      uint64_t result = 19284;
      break;
    case 0xDF:
      uint64_t result = 19540;
      break;
    case 0xE0:
      uint64_t result = 19796;
      break;
    case 0xE1:
      uint64_t result = 20052;
      break;
    case 0xE2:
      uint64_t result = 20308;
      break;
    case 0xE3:
      uint64_t result = 21076;
      break;
    case 0xE4:
      uint64_t result = 21588;
      break;
    case 0xE5:
      uint64_t result = 22100;
      break;
    case 0xE6:
      uint64_t result = 22356;
      break;
    case 0xE7:
      uint64_t result = 23124;
      break;
    case 0xE8:
      uint64_t result = 16725;
      break;
    case 0xE9:
      uint64_t result = 18261;
      break;
    case 0xEA:
      uint64_t result = 19797;
      break;
    case 0xEB:
      uint64_t result = 21333;
      break;
    case 0xEC:
      uint64_t result = 22869;
      break;
    case 0xED:
      uint64_t result = 23125;
      break;
    case 0xEE:
      uint64_t result = 16726;
      break;
    case 0xEF:
      uint64_t result = 17238;
      break;
    case 0xF0:
      uint64_t result = 17750;
      break;
    case 0xF1:
      uint64_t result = 18262;
      break;
    case 0xF2:
      uint64_t result = 18774;
      break;
    case 0xF3:
      uint64_t result = 20054;
      break;
    case 0xF4:
      uint64_t result = 21590;
      break;
    case 0xF5:
      uint64_t result = 21846;
      break;
    case 0xF6:
      uint64_t result = 18007;
      break;
    case 0xF7:
      uint64_t result = 21335;
      break;
    case 0xF8:
      uint64_t result = 17753;
      break;
    case 0xF9:
      uint64_t result = 21593;
      break;
    case 0xFA:
      uint64_t result = 22873;
      break;
    case 0xFB:
      uint64_t result = 16730;
      break;
    case 0xFC:
      uint64_t result = 19802;
      break;
    case 0xFD:
      uint64_t result = 22362;
      break;
    case 0xFE:
      uint64_t result = 23130;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66F5098(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C6616ED8(*a1, *a2);
}

uint64_t sub_1C66F50A4()
{
  return sub_1C6702450();
}

uint64_t sub_1C66F50AC(uint64_t a1)
{
  return sub_1C66780D4(a1, *v1);
}

uint64_t sub_1C66F50B4()
{
  return sub_1C680D6CC();
}

uint64_t sub_1C66F50BC@<X0>(char *a1@<X8>)
{
  return Country.Value.init(rawValue:)(a1);
}

uint64_t sub_1C66F50C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Country.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66F50F0()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66F5150()
{
  return sub_1C68ECB68();
}

SiriInference::Country::Prefix_optional __swiftcall Country.Prefix.init(rawValue:)(Swift::String rawValue)
{
  return (SiriInference::Country::Prefix_optional)sub_1C66704A4(v1);
}

uint64_t Country.Prefix.rawValue.getter()
{
  uint64_t v1 = 28265;
  if (*v0 != 1) {
    uint64_t v1 = 1918985582;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7972746E756F63;
  }
}

uint64_t sub_1C66F51F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C6616E00(*a1, *a2);
}

uint64_t sub_1C66F5200()
{
  return sub_1C670245C(*v0);
}

uint64_t sub_1C66F5208(uint64_t a1)
{
  return sub_1C6678058(a1, *v1);
}

uint64_t sub_1C66F5210(uint64_t a1)
{
  return sub_1C680D730(a1, *v1);
}

SiriInference::Country::Prefix_optional sub_1C66F5218(Swift::String *a1)
{
  return Country.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C66F5224@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Country.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66F524C()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66F52AC()
{
  return sub_1C68ECB68();
}

SiriInference::Country::Suffix_optional __swiftcall Country.Suffix.init(rawValue:)(Swift::String rawValue)
{
  return (SiriInference::Country::Suffix_optional)sub_1C66704A4(v1);
}

SiriInference::Country::Suffix_optional sub_1C66F5308(Swift::String *a1)
{
  return Country.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C66F5314()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66F5374()
{
  return sub_1C68ECB68();
}

void Country.prefix.getter(unsigned char *a1@<X8>)
{
}

void Country.suffix.getter(unsigned char *a1@<X8>)
{
}

void Country.value.getter(unsigned char *a1@<X8>)
{
}

uint64_t static Country.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if ((sub_1C6616ED8(a1[2], a2[2]) & 1) == 0) {
    return 0;
  }
  if (v2 == 3)
  {
    if (v4 != 3) {
      return 0;
    }
  }
  else if (v4 == 3 || (sub_1C6616E00(v2, v4) & 1) == 0)
  {
    return 0;
  }
  uint64_t result = v5 == 3 && v3 == 3;
  if (v3 != 3 && v5 != 3)
  {
    return sub_1C6616E00(v3, v5);
  }
  return result;
}

uint64_t sub_1C66F5494(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x786966667573 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C66F55D4(char a1)
{
  if (!a1) {
    return 0x786966657270;
  }
  if (a1 == 1) {
    return 0x786966667573;
  }
  return 0x65756C6176;
}

uint64_t sub_1C66F5620()
{
  return sub_1C66F55D4(*v0);
}

uint64_t sub_1C66F5628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66F5494(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66F5650(uint64_t a1)
{
  unint64_t v2 = sub_1C66F5A64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66F568C(uint64_t a1)
{
  unint64_t v2 = sub_1C66F5A64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Country.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407C80);
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *v1;
  int v11 = v1[1];
  int v15 = v1[2];
  int v16 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F5A64();
  sub_1C68EDA08();
  char v22 = v10;
  char v21 = 0;
  sub_1C66F5AB0();
  sub_1C68ED6F8();
  if (!v2)
  {
    char v12 = v15;
    char v20 = v16;
    char v19 = 1;
    sub_1C66F5AFC();
    sub_1C68ED6F8();
    char v18 = v12;
    char v17 = 2;
    sub_1C66F5B48();
    sub_1C68ED758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t Country.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407CA8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F5A64();
  sub_1C68ED9E8();
  if (!v2)
  {
    sub_1C66F5B94();
    OUTLINED_FUNCTION_4_26();
    sub_1C66F5BE0();
    OUTLINED_FUNCTION_4_26();
    sub_1C66F5C2C();
    sub_1C68ED668();
    uint64_t v7 = OUTLINED_FUNCTION_1_22();
    v8(v7);
    *a2 = v11;
    a2[1] = v10;
    a2[2] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C66F5A30@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Country.init(from:)(a1, a2);
}

uint64_t sub_1C66F5A48(void *a1)
{
  return Country.encode(to:)(a1);
}

unint64_t sub_1C66F5A64()
{
  unint64_t result = qword_1EA407C88;
  if (!qword_1EA407C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C88);
  }
  return result;
}

unint64_t sub_1C66F5AB0()
{
  unint64_t result = qword_1EA407C90;
  if (!qword_1EA407C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C90);
  }
  return result;
}

unint64_t sub_1C66F5AFC()
{
  unint64_t result = qword_1EA407C98;
  if (!qword_1EA407C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407C98);
  }
  return result;
}

unint64_t sub_1C66F5B48()
{
  unint64_t result = qword_1EA407CA0;
  if (!qword_1EA407CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CA0);
  }
  return result;
}

unint64_t sub_1C66F5B94()
{
  unint64_t result = qword_1EA407CB0;
  if (!qword_1EA407CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CB0);
  }
  return result;
}

unint64_t sub_1C66F5BE0()
{
  unint64_t result = qword_1EA407CB8;
  if (!qword_1EA407CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CB8);
  }
  return result;
}

unint64_t sub_1C66F5C2C()
{
  unint64_t result = qword_1EA407CC0;
  if (!qword_1EA407CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CC0);
  }
  return result;
}

unint64_t sub_1C66F5C7C()
{
  unint64_t result = qword_1EA407CC8;
  if (!qword_1EA407CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CC8);
  }
  return result;
}

unint64_t sub_1C66F5CCC()
{
  unint64_t result = qword_1EA407CD0;
  if (!qword_1EA407CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CD0);
  }
  return result;
}

unint64_t sub_1C66F5D1C()
{
  unint64_t result = qword_1EA407CD8;
  if (!qword_1EA407CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CD8);
  }
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Country(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFD)
  {
    if ((a2 + 33554179) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        goto LABEL_5;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
      {
LABEL_5:
        int v3 = (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776964;
        return (v3 + 1);
      }
    }
  }
  if (*(unsigned __int8 *)a1 <= 3u) {
    int v4 = 3;
  }
  else {
    int v4 = *(unsigned __int8 *)a1;
  }
  int v5 = v4 - 4;
  if (*(unsigned __int8 *)a1 < 3u) {
    int v3 = -1;
  }
  else {
    int v3 = v5;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Country(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554179) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFC) {
    int v3 = 0;
  }
  if (a2 > 0xFC)
  {
    *(_WORD *)unint64_t result = a2 - 253;
    *(unsigned char *)(result + 2) = (a2 - 253) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 253) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 3;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

void type metadata accessor for Country()
{
}

uint64_t getEnumTagSinglePayload for Country.Value(unsigned __int8 *a1, int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 != 1)
  {
    if ((a2 + 254) >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 254) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 255;
    return (v5 + 1);
  }
LABEL_17:
  if (*a1 == 255) {
    int v5 = 0;
  }
  else {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Country.Value(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 254 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 254) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 1)
  {
    unsigned int v6 = ((a2 - 2) >> 8) + 1;
    *unint64_t result = a2 - 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F5FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = -1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Country.Value()
{
}

void type metadata accessor for Country.Prefix()
{
}

void type metadata accessor for Country.Suffix()
{
}

unsigned char *_s13SiriInference7CountryV6PrefixOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F60FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Country.CodingKeys()
{
  return &type metadata for Country.CodingKeys;
}

unint64_t sub_1C66F6138()
{
  unint64_t result = qword_1EA407CE0;
  if (!qword_1EA407CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CE0);
  }
  return result;
}

unint64_t sub_1C66F6188()
{
  unint64_t result = qword_1EA407CE8;
  if (!qword_1EA407CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CE8);
  }
  return result;
}

unint64_t sub_1C66F61D8()
{
  unint64_t result = qword_1EA407CF0;
  if (!qword_1EA407CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CF0);
  }
  return result;
}

unint64_t sub_1C66F6224()
{
  unint64_t result = qword_1EA407CF8;
  if (!qword_1EA407CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407CF8);
  }
  return result;
}

unint64_t sub_1C66F6270()
{
  unint64_t result = qword_1EA407D00;
  if (!qword_1EA407D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D00);
  }
  return result;
}

unint64_t sub_1C66F62BC()
{
  unint64_t result = qword_1EA407D08;
  if (!qword_1EA407D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D08);
  }
  return result;
}

void OUTLINED_FUNCTION_3_29(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  return sub_1C68ED608();
}

SiriInference::County __swiftcall County.init(name:prefix:suffix:)(Swift::String name, SiriInference::County::Prefix_optional prefix, SiriInference::County::Suffix_optional suffix)
{
  char v4 = *(unsigned char *)prefix.value;
  char v5 = *(unsigned char *)suffix.value;
  *(Swift::String *)uint64_t v3 = name;
  *(unsigned char *)(v3 + 16) = v4;
  *(unsigned char *)(v3 + 17) = v5;
  result.name = name;
  result.prefix = prefix;
  return result;
}

SiriInference::County::Prefix_optional __swiftcall County.Prefix.init(rawValue:)(Swift::String rawValue)
{
  return (SiriInference::County::Prefix_optional)sub_1C66704A4(v1);
}

uint64_t County.Prefix.rawValue.getter()
{
  uint64_t v1 = 0x79746E756F63;
  if (*v0 != 1) {
    uint64_t v1 = 1918985582;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 28265;
  }
}

uint64_t sub_1C66F63A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C661706C(*a1, *a2);
}

uint64_t sub_1C66F63AC()
{
  return sub_1C6702468(*v0);
}

uint64_t sub_1C66F63B4(uint64_t a1)
{
  return sub_1C66781C0(a1, *v1);
}

uint64_t sub_1C66F63BC(uint64_t a1)
{
  return sub_1C680D5E8(a1, *v1);
}

SiriInference::County::Prefix_optional sub_1C66F63C4(Swift::String *a1)
{
  return County.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C66F63D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = County.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66F63F8()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66F6458()
{
  return sub_1C68ECB68();
}

SiriInference::County::Suffix_optional __swiftcall County.Suffix.init(rawValue:)(Swift::String rawValue)
{
  return (SiriInference::County::Suffix_optional)sub_1C66704A4(v1);
}

SiriInference::County::Suffix_optional sub_1C66F64B4(Swift::String *a1)
{
  return County.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C66F64C0()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66F6520()
{
  return sub_1C68ECB68();
}

uint64_t County.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void County.prefix.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void County.suffix.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t static County.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 17);
  uint64_t v4 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 17);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (v7 = sub_1C68ED7E8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == 3)
    {
      if (v4 != 3) {
        return 0;
      }
    }
    else if (v4 == 3 || (sub_1C661706C(v2, v4) & 1) == 0)
    {
      return 0;
    }
    uint64_t result = v5 == 3 && v3 == 3;
    if (v3 != 3 && v5 != 3)
    {
      return sub_1C661706C(v3, v5);
    }
  }
  return result;
}

uint64_t sub_1C66F6694(uint64_t a1)
{
  unint64_t v2 = sub_1C66F6AEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66F66D0(uint64_t a1)
{
  unint64_t v2 = sub_1C66F6AEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t County.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407D10);
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v1 + 16);
  int v17 = *(unsigned __int8 *)(v1 + 17);
  int v18 = v9;
  uint64_t v10 = a1[3];
  char v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1C66F6AEC();
  sub_1C68EDA08();
  char v23 = 0;
  sub_1C68ED708();
  if (!v2)
  {
    char v14 = v17;
    char v22 = v18;
    char v21 = 1;
    sub_1C66F6B38();
    sub_1C68ED6F8();
    char v20 = v14;
    char v19 = 2;
    sub_1C66F6B84();
    sub_1C68ED6F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v13);
}

uint64_t County.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407D30);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F6AEC();
  sub_1C68ED9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v6 = sub_1C68ED618();
  uint64_t v8 = v7;
  sub_1C66F6BD0();
  swift_bridgeObjectRetain();
  sub_1C68ED608();
  sub_1C66F6C1C();
  sub_1C68ED608();
  uint64_t v10 = OUTLINED_FUNCTION_18_0();
  v11(v10);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v13;
  *(unsigned char *)(a2 + 17) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C66F6AB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return County.init(from:)(a1, a2);
}

uint64_t sub_1C66F6AD0(void *a1)
{
  return County.encode(to:)(a1);
}

unint64_t sub_1C66F6AEC()
{
  unint64_t result = qword_1EA407D18;
  if (!qword_1EA407D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D18);
  }
  return result;
}

unint64_t sub_1C66F6B38()
{
  unint64_t result = qword_1EA407D20;
  if (!qword_1EA407D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D20);
  }
  return result;
}

unint64_t sub_1C66F6B84()
{
  unint64_t result = qword_1EA407D28;
  if (!qword_1EA407D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D28);
  }
  return result;
}

unint64_t sub_1C66F6BD0()
{
  unint64_t result = qword_1EA407D38;
  if (!qword_1EA407D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D38);
  }
  return result;
}

unint64_t sub_1C66F6C1C()
{
  unint64_t result = qword_1EA407D40;
  if (!qword_1EA407D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D40);
  }
  return result;
}

unint64_t sub_1C66F6C6C()
{
  unint64_t result = qword_1EA407D48;
  if (!qword_1EA407D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D48);
  }
  return result;
}

unint64_t sub_1C66F6CBC()
{
  unint64_t result = qword_1EA407D50;
  if (!qword_1EA407D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D50);
  }
  return result;
}

void type metadata accessor for County()
{
}

void type metadata accessor for County.Prefix()
{
}

void type metadata accessor for County.Suffix()
{
}

unsigned char *_s13SiriInference6CountyV6PrefixOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F6DFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for County.CodingKeys()
{
  return &type metadata for County.CodingKeys;
}

unint64_t sub_1C66F6E38()
{
  unint64_t result = qword_1EA407D58;
  if (!qword_1EA407D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D58);
  }
  return result;
}

unint64_t sub_1C66F6E88()
{
  unint64_t result = qword_1EA407D60;
  if (!qword_1EA407D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D60);
  }
  return result;
}

unint64_t sub_1C66F6ED8()
{
  unint64_t result = qword_1EA407D68;
  if (!qword_1EA407D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D68);
  }
  return result;
}

unint64_t sub_1C66F6F24()
{
  unint64_t result = qword_1EA407D70;
  if (!qword_1EA407D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D70);
  }
  return result;
}

unint64_t sub_1C66F6F70()
{
  unint64_t result = qword_1EA407D78;
  if (!qword_1EA407D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D78);
  }
  return result;
}

SiriInference::CrossStreetName __swiftcall CrossStreetName.init(name:prefix:)(Swift::String name, SiriInference::CrossStreetName::Prefix_optional prefix)
{
  char v3 = *(unsigned char *)prefix.value;
  *(Swift::String *)uint64_t v2 = name;
  *(unsigned char *)(v2 + 16) = v3;
  result.name = name;
  result.prefix = prefix;
  return result;
}

SiriInference::CrossStreetName::Prefix_optional __swiftcall CrossStreetName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C68ED598();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t CrossStreetName.Prefix.rawValue.getter()
{
  uint64_t result = 28265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x754E746565727473;
      break;
    case 2:
      uint64_t result = 0x6365737265746E69;
      break;
    case 3:
      uint64_t result = 1918985582;
      break;
    case 4:
      uint64_t result = 28271;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C66F70C8()
{
  return sub_1C6619858();
}

uint64_t sub_1C66F70D4()
{
  return sub_1C6702474(*v0);
}

uint64_t sub_1C66F70DC()
{
  return sub_1C66799A0();
}

uint64_t sub_1C66F70E4()
{
  return sub_1C680CA58();
}

SiriInference::CrossStreetName::Prefix_optional sub_1C66F70EC(Swift::String *a1)
{
  return CrossStreetName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C66F70F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CrossStreetName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C66F7120()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66F7180()
{
  return sub_1C68ECB68();
}

uint64_t CrossStreetName.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void CrossStreetName.prefix.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t static CrossStreetName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_1C68ED7E8(), uint64_t result = 0, (v5 & 1) != 0))
  {
    uint64_t result = v3 == 5 && (unint64_t)(v2 == 5);
    if (v2 != 5 && v3 != 5)
    {
      return sub_1C6619858();
    }
  }
  return result;
}

uint64_t sub_1C66F72A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x786966657270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C68ED7E8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C66F737C(char a1)
{
  if (a1) {
    return 0x786966657270;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C66F73A8()
{
  return sub_1C66F737C(*v0);
}

uint64_t sub_1C66F73B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66F72A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66F73D8(uint64_t a1)
{
  unint64_t v2 = sub_1C66F77A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66F7414(uint64_t a1)
{
  unint64_t v2 = sub_1C66F77A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CrossStreetName.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407D80);
  OUTLINED_FUNCTION_0_1();
  uint64_t v11 = v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F77A0();
  sub_1C68EDA08();
  char v15 = 0;
  sub_1C68ED708();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_1C66F77EC();
    sub_1C68ED6F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v4);
}

uint64_t CrossStreetName.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407D98);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66F77A0();
  sub_1C68ED9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v6 = sub_1C68ED618();
  uint64_t v8 = v7;
  sub_1C66F7838();
  swift_bridgeObjectRetain();
  sub_1C68ED608();
  uint64_t v9 = OUTLINED_FUNCTION_18_0();
  v10(v9);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C66F776C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CrossStreetName.init(from:)(a1, a2);
}

uint64_t sub_1C66F7784(void *a1)
{
  return CrossStreetName.encode(to:)(a1);
}

unint64_t sub_1C66F77A0()
{
  unint64_t result = qword_1EA407D88;
  if (!qword_1EA407D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D88);
  }
  return result;
}

unint64_t sub_1C66F77EC()
{
  unint64_t result = qword_1EA407D90;
  if (!qword_1EA407D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407D90);
  }
  return result;
}

unint64_t sub_1C66F7838()
{
  unint64_t result = qword_1EA407DA0;
  if (!qword_1EA407DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DA0);
  }
  return result;
}

unint64_t sub_1C66F7888()
{
  unint64_t result = qword_1EA407DA8;
  if (!qword_1EA407DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossStreetName()
{
  return &type metadata for CrossStreetName;
}

unsigned char *storeEnumTagSinglePayload for CrossStreetName.Prefix(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F79B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossStreetName.Prefix()
{
  return &type metadata for CrossStreetName.Prefix;
}

unsigned char *storeEnumTagSinglePayload for CrossStreetName.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F7AB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossStreetName.CodingKeys()
{
  return &type metadata for CrossStreetName.CodingKeys;
}

unint64_t sub_1C66F7AF0()
{
  unint64_t result = qword_1EA407DB0;
  if (!qword_1EA407DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DB0);
  }
  return result;
}

unint64_t sub_1C66F7B40()
{
  unint64_t result = qword_1EA407DB8;
  if (!qword_1EA407DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DB8);
  }
  return result;
}

unint64_t sub_1C66F7B90()
{
  unint64_t result = qword_1EA407DC0;
  if (!qword_1EA407DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DC0);
  }
  return result;
}

unint64_t sub_1C66F7BDC()
{
  unint64_t result = qword_1EA407DC8;
  if (!qword_1EA407DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DC8);
  }
  return result;
}

uint64_t destroy for DatabaseError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseError()
{
  return &type metadata for DatabaseError;
}

uint64_t sub_1C66F7E58(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C68EC898();
    sub_1C68ED938();
    sub_1C68EC7D8();
    uint64_t v3 = sub_1C68ED988();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v5 = v3 & ~v4;
    OUTLINED_FUNCTION_3_30();
    if (v6)
    {
      uint64_t v7 = sub_1C68EC898();
      uint64_t v9 = v8;
      if (v7 == sub_1C68EC898() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v21 = 1;
        return v21 & 1;
      }
      uint64_t v13 = ~v4;
      uint64_t v14 = (v5 + 1) & v13;
      OUTLINED_FUNCTION_3_30();
      if (v15)
      {
        while (1)
        {
          uint64_t v16 = sub_1C68EC898();
          uint64_t v18 = v17;
          if (v16 == sub_1C68EC898() && v18 == v19) {
            break;
          }
          char v21 = sub_1C68ED7E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
          {
            uint64_t v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_3_30();
            if (v22) {
              continue;
            }
          }
          return v21 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_1C66F7FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 0;
  }
  sub_1C68ED938();
  swift_bridgeObjectRetain();
  sub_1C68EC7D8();
  swift_bridgeObjectRelease();
  sub_1C68ED948();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1C68EC7D8();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = sub_1C68ED988();
  uint64_t v11 = -1 << *(unsigned char *)(a5 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  uint64_t v13 = ~v11;
  while (1)
  {
    uint64_t v14 = (void *)(*(void *)(a5 + 48) + 32 * v12);
    uint64_t v16 = v14[2];
    uint64_t v15 = v14[3];
    BOOL v17 = *v14 == a1 && v14[1] == a2;
    if (!v17 && (sub_1C68ED7E8() & 1) == 0) {
      goto LABEL_20;
    }
    if (!v15) {
      break;
    }
    if (a4)
    {
      BOOL v18 = v16 == a3 && v15 == a4;
      if (v18 || (sub_1C68ED7E8() & 1) != 0) {
        return 1;
      }
    }
LABEL_20:
    unint64_t v12 = (v12 + 1) & v13;
    OUTLINED_FUNCTION_5_26();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  if (a4) {
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

void sub_1C66F8188(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C68ED938();
    sub_1C68ED948();
    sub_1C68ED988();
    OUTLINED_FUNCTION_12_17();
    if ((v5 & 1) != 0 && *(void *)(*(void *)(a2 + 48) + 8 * v4) != a1)
    {
      OUTLINED_FUNCTION_0_38();
      if (v8)
      {
        do
        {
          if (*(void *)(v6 + 8 * v7) == a1) {
            break;
          }
          OUTLINED_FUNCTION_0_38();
        }
        while ((v9 & 1) != 0);
      }
    }
  }
}

void sub_1C66F8244()
{
  sub_1C67FA2E0();
  qword_1EBBF57D8 = v0;
}

void sub_1C66F826C(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  swift_bridgeObjectRelease();
  char v12 = sub_1C66F831C(a1);
  if (v12 == 92) {
    char v13 = 1;
  }
  else {
    char v13 = v12;
  }
  id v14 = objc_msgSend(self, sel_callStackSymbols);
  uint64_t v15 = sub_1C68ECBF8();

  *(unsigned char *)a6 = v13;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  *(void *)(a6 + 40) = v15;
}

uint64_t sub_1C66F831C(int a1)
{
  if (!v2 & v1)
  {
    switch(a1)
    {
      case 100:
        return 29;
      case 101:
        return 30;
      case 283:
        return 40;
      case 284:
        return 41;
      case 539:
        return 51;
      case 769:
        return 52;
      case 776:
        return 53;
      case 778:
        return 54;
      case 782:
        return 55;
      case 787:
        return 56;
      case 1032:
        return 57;
      case 1034:
        return 58;
      case 1038:
        return 59;
      case 1043:
        return 60;
      case 1288:
        return 61;
      case 1290:
        return 62;
      case 1294:
        return 63;
      case 1299:
        return 64;
      case 1544:
        return 65;
      case 1546:
        return 66;
      case 1555:
        return 67;
      case 1802:
        return 68;
      case 1811:
        return 69;
      case 2058:
        return 70;
      case 2067:
        return 71;
      case 2314:
        return 72;
      case 2323:
        return 73;
      case 2570:
        return 74;
      case 2579:
        return 75;
      case 2826:
        return 76;
      case 3082:
        return 77;
      case 3338:
        return 78;
      case 3594:
        return 79;
      case 3850:
        return 80;
      case 4106:
        return 81;
      case 4362:
        return 82;
      case 4618:
        return 83;
      case 4874:
        return 84;
      case 5130:
        return 85;
      case 5386:
        return 86;
      case 5642:
        return 87;
      case 5898:
        return 88;
      case 6154:
        return 89;
      case 6410:
        return 90;
      case 6666:
        return 91;
      default:
        return 92;
    }
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t result = 11;
    switch(a1)
    {
      case 0:
        goto LABEL_104;
      case 1:
        uint64_t v3 = 1;
        goto LABEL_104;
      case 2:
        uint64_t v3 = 2;
        goto LABEL_104;
      case 3:
        uint64_t v3 = 3;
        goto LABEL_104;
      case 4:
        uint64_t v3 = 4;
        goto LABEL_104;
      case 5:
        uint64_t v3 = 5;
        goto LABEL_104;
      case 6:
        uint64_t v3 = 6;
        goto LABEL_104;
      case 7:
        uint64_t v3 = 7;
        goto LABEL_104;
      case 8:
        uint64_t v3 = 8;
        goto LABEL_104;
      case 9:
        uint64_t v3 = 9;
        goto LABEL_104;
      case 10:
        uint64_t v3 = 10;
LABEL_104:
        uint64_t result = v3;
        break;
      case 11:
        return result;
      case 12:
        uint64_t result = 12;
        break;
      case 13:
        uint64_t result = 13;
        break;
      case 14:
        uint64_t result = 14;
        break;
      case 15:
        uint64_t result = 15;
        break;
      case 16:
        uint64_t result = 16;
        break;
      case 17:
        uint64_t result = 17;
        break;
      case 18:
        uint64_t result = 18;
        break;
      case 19:
        uint64_t result = 19;
        break;
      case 20:
        uint64_t result = 20;
        break;
      case 21:
        uint64_t result = 21;
        break;
      case 22:
        uint64_t result = 22;
        break;
      case 23:
        uint64_t result = 23;
        break;
      case 24:
        uint64_t result = 24;
        break;
      case 25:
        uint64_t result = 25;
        break;
      case 26:
        uint64_t result = 26;
        break;
      case 27:
        uint64_t result = 27;
        break;
      case 28:
        uint64_t result = 28;
        break;
      default:
        JUMPOUT(0);
    }
  }
  return result;
}

uint64_t sub_1C66F892C(uint64_t a1)
{
  unint64_t v2 = sub_1C66F8D40();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C66F8968(uint64_t a1)
{
  unint64_t v2 = sub_1C66F8D40();

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C66F89A8()
{
  sub_1C66F8C40(v0 + 24, (uint64_t)v2);
  sub_1C66F8C40((uint64_t)v2, (uint64_t)v3);
  if (v3[1])
  {
    sub_1C68ED398();
    swift_bridgeObjectRetain();
    sub_1C68ECA18();
    swift_bridgeObjectRelease();
    sub_1C68ECA18();
    sub_1C68ECA18();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C68ECA18();
    swift_bridgeObjectRelease();
  }
  sub_1C68ECA18();
  sub_1C68ED4C8();
  sub_1C68ECA18();
  return 0;
}

uint64_t sub_1C66F8B1C()
{
  return sub_1C66F89A8();
}

unint64_t sub_1C66F8B58()
{
  return 0xD000000000000014;
}

uint64_t sub_1C66F8B74()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF3B48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
  *(void *)(inited + 32) = sub_1C68EC898();
  *(void *)(inited + 40) = v2;
  uint64_t v4 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v0 + 16);
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  if (!v3) {
    uint64_t v4 = 0;
  }
  unint64_t v5 = 0xE000000000000000;
  if (v3) {
    unint64_t v5 = v3;
  }
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  return sub_1C68EC748();
}

unint64_t sub_1C66F8C18()
{
  return 0xD000000000000014;
}

uint64_t sub_1C66F8C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBF6270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C66F8CA8(char a1)
{
  return dword_1C68F9FC8[a1];
}

BOOL sub_1C66F8CBC(char *a1, char *a2)
{
  return sub_1C661A878(*a1, *a2);
}

uint64_t sub_1C66F8CC8()
{
  return sub_1C670248C();
}

uint64_t sub_1C66F8CD0()
{
  return sub_1C667A3A8();
}

uint64_t sub_1C66F8CD8()
{
  return sub_1C680C794();
}

uint64_t sub_1C66F8CE0@<X0>(int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C66F831C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C66F8D0C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_1C66F8CA8(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_1C66F8D40()
{
  unint64_t result = qword_1EA407DE0;
  if (!qword_1EA407DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DE0);
  }
  return result;
}

uint64_t sub_1C66F8D8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ResultCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xA5)
  {
    if (a2 + 91 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 91) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 92;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x5C;
  int v5 = v6 - 92;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResultCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 91 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 91) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xA5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xA4)
  {
    unsigned int v6 = ((a2 - 165) >> 8) + 1;
    *uint64_t result = a2 + 91;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66F8F28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 91;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultCode()
{
  return &type metadata for ResultCode;
}

unint64_t sub_1C66F8F64()
{
  unint64_t result = qword_1EA407DF8;
  if (!qword_1EA407DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407DF8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  return v0;
}

void OUTLINED_FUNCTION_7_27(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = ~a1;
  *(void *)(v2 - 88) = v1;
}

uint64_t OUTLINED_FUNCTION_9_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  return sub_1C68EC858();
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  return sub_1C68EC798();
}

uint64_t sub_1C66F910C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v60 = a5;
  uint64_t v63 = a4;
  uint64_t v64 = a6;
  int v62 = a3;
  uint64_t v58 = a1;
  sub_1C68E9D28();
  OUTLINED_FUNCTION_0_1();
  uint64_t v55 = v8;
  uint64_t v56 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_15();
  uint64_t v54 = v10 - v9;
  uint64_t v57 = sub_1C68E9CD8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1_15();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1C68E9D18();
  OUTLINED_FUNCTION_0_1();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_15();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = _s19ConvergenceStrategyOMa();
  MEMORY[0x1F4188790](v24 - 8);
  OUTLINED_FUNCTION_5();
  uint64_t v59 = v25 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  id v30 = (char *)&v52 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v52 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v33 - 8);
  OUTLINED_FUNCTION_5();
  uint64_t v36 = v34 - v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v52 - v38;
  uint64_t v61 = a2;
  sub_1C65FEDC8(a2, (uint64_t)v32);
  switch(__swift_getEnumTagSinglePayload((uint64_t)v32, 3, v17))
  {
    case 1u:
      sub_1C68E9D58();
      break;
    case 2u:
      sub_1C68E9B78();
      OUTLINED_FUNCTION_4_27();
      OUTLINED_FUNCTION_6_27();
      v45();
      __swift_storeEnumTagSinglePayload(v36, 0, 1, a2);
      OUTLINED_FUNCTION_5_27(v36, (uint64_t)v39);
      sub_1C6645080(v36);
      break;
    case 3u:
      sub_1C68E9B78();
      OUTLINED_FUNCTION_4_27();
      OUTLINED_FUNCTION_6_27();
      v46();
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, a2);
      break;
    default:
      uint64_t v53 = v19;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v23, v32, v17);
      OUTLINED_FUNCTION_3_2();
      v40();
      uint64_t v42 = v54;
      uint64_t v41 = v55;
      uint64_t v43 = v56;
      OUTLINED_FUNCTION_3_2();
      v44();
      sub_1C68E9D98();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v57);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v23, v17);
      break;
  }
  uint64_t v47 = v64;
  char v48 = v62;
  sub_1C65FEDC8(v61, (uint64_t)v30);
  if (v48)
  {
    uint64_t v49 = v59;
    __swift_storeEnumTagSinglePayload(v59, 3, 3, v17);
    char v50 = sub_1C6702BBC((uint64_t)v30, v49);
    sub_1C65FEE2C(v49);
    sub_1C65FEE2C((uint64_t)v30);
    if ((v50 & 1) == 0)
    {
      OUTLINED_FUNCTION_5_27((uint64_t)v39, v47);
      return sub_1C6645080((uint64_t)v39);
    }
  }
  else
  {
    sub_1C65FEE2C((uint64_t)v30);
  }
  return sub_1C6601018((uint64_t)v39, v47);
}

BOOL sub_1C66F957C()
{
  uint64_t v0 = sub_1C68E9DB8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1_15();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_1C68E9C88();
  OUTLINED_FUNCTION_0_1();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5();
  uint64_t v13 = (char *)(v11 - v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v23 - v15;
  sub_1C68E9CA8();
  OUTLINED_FUNCTION_3_2();
  v17();
  char v18 = sub_1C68E9C78();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v7);
  v19(v16, v7);
  if ((v18 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_3_2();
  v20();
  uint64_t v21 = sub_1C68E9DC8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return (v21 & 3) == 0 && v21 % 100 || v21 % 400 == 0;
}

uint64_t OUTLINED_FUNCTION_5_27@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 - 128);
  return sub_1C65FEE88(a1, v4, 0, 1, a2);
}

uint64_t sub_1C66F97B4()
{
  uint64_t result = sub_1C68E9A48();
  double v2 = round(v1);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 9.22337204e18) {
    return (uint64_t)v2;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C66F9810()
{
  uint64_t v0 = sub_1C68E9B78();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C68E9B68();
  uint64_t v4 = sub_1C66F97B4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C66F98DC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E00);
  uint64_t v1 = OUTLINED_FUNCTION_3(v0);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_1_15();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  uint64_t v6 = OUTLINED_FUNCTION_3(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1();
  uint64_t v83 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E10);
  uint64_t v9 = OUTLINED_FUNCTION_3(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_1();
  uint64_t v88 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E18);
  uint64_t v12 = OUTLINED_FUNCTION_3(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1_15();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_1C68EAC78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_8_32(v20, v79);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E20);
  uint64_t v22 = OUTLINED_FUNCTION_3(v21);
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_1_15();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E28);
  uint64_t v27 = OUTLINED_FUNCTION_3(v26);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  id v30 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v79 - v31;
  uint64_t result = sub_1C68EAB28();
  int v35 = v34;
  if ((v34 & 1) == 0 && __OFADD__(result++, 1))
  {
    __break(1u);
    return result;
  }
  uint64_t v85 = result;
  uint64_t v87 = v4;
  sub_1C68EAAF8();
  uint64_t v37 = sub_1C68EAAD8();
  OUTLINED_FUNCTION_4((uint64_t)v32, 1, v37);
  if (v47)
  {
    sub_1C66FA5E8((uint64_t)v32, &qword_1EA407E28);
    uint64_t v84 = 0;
    uint64_t v38 = v87;
    goto LABEL_17;
  }
  uint64_t v82 = v18;
  uint64_t v80 = v16;
  int v81 = v35;
  uint64_t v39 = sub_1C68EAAB8();
  uint64_t v41 = v40;
  OUTLINED_FUNCTION_59_1();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v42 + 8);
  v43(v32, v37);
  if (v41)
  {
    sub_1C68EAAF8();
    OUTLINED_FUNCTION_4((uint64_t)v30, 1, v37);
    if (v47)
    {
      int64_t v44 = &qword_1EA407E28;
      uint64_t v45 = (uint64_t)v30;
    }
    else
    {
      sub_1C68EAAC8();
      v43(v30, v37);
      uint64_t v46 = sub_1C68EAA78();
      OUTLINED_FUNCTION_4(v25, 1, v46);
      if (!v47)
      {
        sub_1C664BC9C(&v90);
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_6_28();
        v48();
        char v49 = v90;
LABEL_15:
        uint64_t v38 = v87;
        LOBYTE(v35) = v81;
        uint64_t v16 = v80;
        char v89 = v49;
        type metadata accessor for DateTime.Date.Holiday();
        swift_allocObject();
        uint64_t v84 = DateTime.Date.Holiday.init(with:name:calendarSystem:)(v39, v41, v39, v41, &v89);
        swift_bridgeObjectRetain();
        goto LABEL_16;
      }
      int64_t v44 = &qword_1EA407E20;
      uint64_t v45 = v25;
    }
    sub_1C66FA5E8(v45, v44);
    char v49 = 12;
    goto LABEL_15;
  }
  uint64_t v84 = 0;
  uint64_t v38 = v87;
  LOBYTE(v35) = v81;
  uint64_t v16 = v80;
LABEL_16:
  uint64_t v18 = v82;
LABEL_17:
  uint64_t v50 = v86;
  sub_1C68EAB58();
  OUTLINED_FUNCTION_4(v15, 1, v16);
  if (v47)
  {
    sub_1C66FA5E8(v15, &qword_1EA407E18);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v50, v15, v16);
    char v51 = sub_1C67F64C8();
    if (v51)
    {
      uint64_t v52 = OUTLINED_FUNCTION_9_26();
      v53(v52);
    }
    else
    {
      TerminalElement.Qualifier.toQualifier()(&v93);
      uint64_t v54 = OUTLINED_FUNCTION_9_26();
      v55(v54);
      if (v93 != 20)
      {
        char v92 = 38;
        char v91 = v93;
        type metadata accessor for DateTime.DateTimeRange();
        swift_allocObject();
        uint64_t v56 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, 0, 0, 0, 0, &v92, &v91);
        goto LABEL_24;
      }
    }
  }
  uint64_t v56 = 0;
LABEL_24:
  char v57 = v35 & 1;
  uint64_t v58 = sub_1C68EAAE8();
  char v60 = v59;
  uint64_t v61 = sub_1C68EAB18();
  char v63 = v62;
  uint64_t v64 = v88;
  sub_1C66F9FC8(v88);
  uint64_t v65 = sub_1C68EAA98();
  OUTLINED_FUNCTION_4(v64, 1, v65);
  if (v47)
  {
    sub_1C66FA5E8(v64, &qword_1EA407E10);
    char v66 = 7;
  }
  else
  {
    uint64_t v67 = v83;
    sub_1C68EAA88();
    uint64_t v68 = v67;
    uint64_t v69 = sub_1C68EABD8();
    OUTLINED_FUNCTION_4(v68, 1, v69);
    if (v70)
    {
      sub_1C66FA5E8(v68, &qword_1EA407E08);
      char v99 = 7;
    }
    else
    {
      sub_1C67D4718();
      OUTLINED_FUNCTION_59_1();
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v68, v69);
    }
    uint64_t v38 = v87;
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_6_28();
    v72();
    char v66 = v99;
  }
  char v98 = v66;
  char v97 = 12;
  sub_1C68EAB48();
  uint64_t v73 = sub_1C68EAC58();
  OUTLINED_FUNCTION_4(v38, 1, v73);
  if (v47)
  {
    sub_1C66FA5E8(v38, &qword_1EA407E00);
    char v75 = 7;
  }
  else
  {
    sub_1C671A284(&v96);
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_6_28();
    v74();
    char v75 = v96;
  }
  char v95 = v75;
  uint64_t v76 = sub_1C68EAB08();
  char v78 = v77 & 1;
  char v94 = 7;
  type metadata accessor for DateTime.Date();
  swift_allocObject();
  return DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(v58, v60 & 1, v85, v57, v61, v63 & 1, &v98, v84, &v97, 0, 1, &v95, v76, v78, &v94, v56);
}

uint64_t sub_1C66F9FC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(sub_1C68EAB38() + 16);
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    uint64_t result = sub_1C68EAB38();
    if (!*(void *)(result + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = result;
    uint64_t v5 = sub_1C68EAA98();
    OUTLINED_FUNCTION_59_1();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(a1, v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    swift_bridgeObjectRelease();
    uint64_t v7 = a1;
    uint64_t v8 = 0;
    uint64_t v9 = v5;
  }
  else
  {
    uint64_t v9 = sub_1C68EAA98();
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }

  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
}

uint64_t sub_1C66FA0A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  uint64_t v3 = OUTLINED_FUNCTION_3(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1();
  uint64_t v66 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E10);
  uint64_t v6 = OUTLINED_FUNCTION_3(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1();
  uint64_t v67 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E28);
  uint64_t v9 = OUTLINED_FUNCTION_3(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_8_32(v10, v64[0]);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E00);
  uint64_t v12 = OUTLINED_FUNCTION_3(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1_15();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_1C68EAB68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v18 = v17;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v71 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  char v70 = (char *)v64 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v69 = (char *)v64 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v64 - v27;
  MEMORY[0x1F4188790](v26);
  id v30 = (char *)v64 - v29;
  sub_1C68EAAE8();
  char v32 = v31;
  uint64_t v33 = *(void (**)(void))(v18 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v33)(v30, v1, v16);
  if (v32)
  {
    sub_1C68EAB48();
    uint64_t v37 = *(void (**)(uint64_t))(v18 + 8);
    v64[1] = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v65 = v37;
    uint64_t v38 = OUTLINED_FUNCTION_11_20();
    v39(v38);
    uint64_t v40 = sub_1C68EAC58();
    BOOL v36 = 1;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v15, 1, v40);
    sub_1C66FA5E8(v15, &qword_1EA407E00);
    ((void (*)(char *, uint64_t, uint64_t))v33)(v28, v1, v16);
    if (EnumTagSinglePayload == 1)
    {
      sub_1C68EAB28();
      BOOL v36 = (v42 & 1) == 0;
    }
    int v34 = v65;
  }
  else
  {
    int v34 = *(void (**)(uint64_t))(v18 + 8);
    uint64_t v35 = OUTLINED_FUNCTION_11_20();
    v34(v35);
    OUTLINED_FUNCTION_0_39();
    v33();
    BOOL v36 = 1;
  }
  ((void (*)(char *, uint64_t))v34)(v28, v16);
  OUTLINED_FUNCTION_0_39();
  v33();
  if (v36)
  {
    uint64_t v43 = OUTLINED_FUNCTION_10_23();
    v34(v43);
    OUTLINED_FUNCTION_0_39();
    v33();
  }
  else
  {
    sub_1C68EAB18();
    char v45 = v44;
    uint64_t v46 = OUTLINED_FUNCTION_10_23();
    v34(v46);
    OUTLINED_FUNCTION_0_39();
    v33();
    if (v45)
    {
      uint64_t v50 = v68;
      sub_1C68EAAF8();
      uint64_t v51 = sub_1C68EAAD8();
      OUTLINED_FUNCTION_4(v50, 1, v51);
      if (v61)
      {
        uint64_t v52 = OUTLINED_FUNCTION_10_23();
        v34(v52);
        sub_1C66FA5E8(v50, &qword_1EA407E28);
      }
      else
      {
        sub_1C68EAAB8();
        uint64_t v54 = v53;
        uint64_t v55 = OUTLINED_FUNCTION_10_23();
        v34(v55);
        OUTLINED_FUNCTION_59_1();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v50, v51);
        if (v54)
        {
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      OUTLINED_FUNCTION_0_39();
      v33();
      uint64_t v57 = v67;
      sub_1C66F9FC8(v67);
      uint64_t v58 = sub_1C68EAA98();
      OUTLINED_FUNCTION_4(v57, 1, v58);
      if (v61)
      {
        ((void (*)(char *, uint64_t))v34)(v71, v16);
        sub_1C66FA5E8(v57, &qword_1EA407E10);
      }
      else
      {
        uint64_t v59 = v66;
        sub_1C68EAA88();
        uint64_t v60 = sub_1C68EABD8();
        OUTLINED_FUNCTION_4(v59, 1, v60);
        if (v61)
        {
          sub_1C66FA5E8(v59, &qword_1EA407E08);
          char v72 = 7;
        }
        else
        {
          sub_1C67D4718();
          OUTLINED_FUNCTION_59_1();
          (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v59, v60);
        }
        ((void (*)(char *, uint64_t))v34)(v71, v16);
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_6_28();
        v63();
        if (v72 != 7) {
          return 1;
        }
      }
      return 0;
    }
  }
  uint64_t v47 = OUTLINED_FUNCTION_10_23();
  v34(v47);
LABEL_10:
  char v48 = v71;
  OUTLINED_FUNCTION_0_39();
  v33();
  ((void (*)(char *, uint64_t))v34)(v48, v16);
  return 1;
}

uint64_t sub_1C66FA5E8(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_59_1();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void OUTLINED_FUNCTION_8_32(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_9_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_20()
{
  return v0;
}

uint64_t DateTime.Date.__allocating_init(withDay:month:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_14_20();
  DateTime.Date.init(withDay:month:)(v1, v2);
  return v0;
}

uint64_t DateTime.Date.__allocating_init(withHoliday:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_19_17();
  DateTime.Date.init(withHoliday:)(v1);
  return v0;
}

uint64_t DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, char *a15, uint64_t a16)
{
  OUTLINED_FUNCTION_20_16();
  char v20 = v19 & 1;
  char v22 = v21 & 1;
  uint64_t v23 = OUTLINED_FUNCTION_1_42();
  DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(a1, v16, a3, v17, a5, v18, a7, a8, a9, a10, v20, a12, a13, v22, a15, a16);
  return v23;
}

uint64_t DateTime.Date.day.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t DateTime.Date.month.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t DateTime.Date.year.getter()
{
  return *(void *)(v0 + 48);
}

void DateTime.Date.definedValue.getter(unsigned char *a1@<X8>)
{
}

uint64_t DateTime.Date.holiday.getter()
{
  return swift_retain();
}

void DateTime.Date.monthOfYear.getter(unsigned char *a1@<X8>)
{
}

uint64_t DateTime.Date.weekOfYear.getter()
{
  return *(void *)(v0 + 80);
}

void DateTime.Date.dayOfWeek.getter(unsigned char *a1@<X8>)
{
}

uint64_t DateTime.Date.dayOfWeekOrdinal.getter()
{
  return *(void *)(v0 + 96);
}

void DateTime.Date.calendarEra.getter(unsigned char *a1@<X8>)
{
}

uint64_t DateTime.Date.occurringIn.getter()
{
  return swift_retain();
}

uint64_t sub_1C66FA848()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406728);
  MEMORY[0x1F4188790](v0 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v3 = v2 - v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406730);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_1C68E9DD8();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  uint64_t v9 = sub_1C68E9E28();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v9);
  sub_1C68E9648();
  sub_1C68E9588();
  sub_1C68E95A8();
  sub_1C68E9518();
  sub_1C68E9638();
  return sub_1C68E94B8();
}

uint64_t DateTime.Date.__allocating_init(withDay:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_19_17();
  DateTime.Date.init(withDay:)(v1);
  return v0;
}

uint64_t DateTime.Date.init(withDay:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  *(_WORD *)(v1 + 56) = 1793;
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 72) = 12;
  *(void *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.init(withDay:month:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a2;
  *(unsigned char *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(_WORD *)(v2 + 56) = 1793;
  *(void *)(v2 + 64) = 0;
  *(unsigned char *)(v2 + 72) = 12;
  *(void *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.__allocating_init(withDay:monthOfYear:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_14_20();
  DateTime.Date.init(withDay:monthOfYear:)(v1, v2);
  return v0;
}

uint64_t DateTime.Date.init(withDay:monthOfYear:)(uint64_t a1, char *a2)
{
  char v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 72) = v3;
  *(void *)(v2 + 48) = 0;
  *(_WORD *)(v2 + 56) = 1793;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.__allocating_init(withDay:monthOfYear:year:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_27_8();
  DateTime.Date.init(withDay:monthOfYear:year:)(v1, v2, v3);
  return v0;
}

uint64_t DateTime.Date.init(withDay:monthOfYear:year:)(uint64_t a1, char *a2, uint64_t a3)
{
  char v4 = *a2;
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 72) = v4;
  *(void *)(v3 + 48) = a3;
  *(_WORD *)(v3 + 56) = 1792;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 1;
  *(void *)(v3 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.__allocating_init(withYear:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_19_17();
  DateTime.Date.init(withYear:)(v1);
  return v0;
}

uint64_t DateTime.Date.init(withYear:)(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  *(_WORD *)(v1 + 56) = 1792;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  *(unsigned char *)(v1 + 72) = 12;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.__allocating_init(withDay:month:year:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_27_8();
  DateTime.Date.init(withDay:month:year:)(v1, v2, v3);
  return v0;
}

uint64_t DateTime.Date.__allocating_init(withMonth:year:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = OUTLINED_FUNCTION_14_20();
  DateTime.Date.init(withMonth:year:)(v1, v2);
  return v0;
}

uint64_t DateTime.Date.init(withMonth:year:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(unsigned char *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a2;
  *(_WORD *)(v2 + 56) = 1792;
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 1;
  *(void *)(v2 + 64) = 0;
  *(unsigned char *)(v2 + 72) = 12;
  *(void *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.__allocating_init(withDefinedValue:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = (unsigned char *)OUTLINED_FUNCTION_19_17();
  DateTime.Date.init(withDefinedValue:)(v1);
  return v0;
}

uint64_t DateTime.Date.init(withDefinedValue:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 57) = *a1;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 72) = 12;
  *(void *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.init(withHoliday:)(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_26_11();
  *(unsigned char *)(v1 + 72) = 12;
  *(void *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(v2);
}

uint64_t DateTime.Date.__allocating_init(withDayOfWeek:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = (unsigned char *)OUTLINED_FUNCTION_19_17();
  DateTime.Date.init(withDayOfWeek:)(v1);
  return v0;
}

uint64_t DateTime.Date.init(withDayOfWeek:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 89) = *a1;
  OUTLINED_FUNCTION_22_10();
  *(unsigned char *)(v1 + 72) = 12;
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = 0;
  *(_WORD *)(v1 + 104) = v3;
  return OUTLINED_FUNCTION_2_36();
}

uint64_t DateTime.Date.__allocating_init(withDayOfWeek:dayOfWeekOrdinal:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = (unsigned char *)OUTLINED_FUNCTION_14_20();
  DateTime.Date.init(withDayOfWeek:dayOfWeekOrdinal:)(v1, v2);
  return v0;
}

uint64_t DateTime.Date.init(withDayOfWeek:dayOfWeekOrdinal:)(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 89) = *a1;
  *(void *)(v2 + 96) = a2;
  *(_WORD *)(v2 + 104) = 1792;
  OUTLINED_FUNCTION_22_10();
  *(unsigned char *)(v2 + 72) = 12;
  *(void *)(v2 + 80) = 0;
  *(unsigned char *)(v2 + 88) = v3;
  return OUTLINED_FUNCTION_2_36();
}

uint64_t DateTime.Date.__allocating_init(withMonthOfYear:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = (unsigned char *)OUTLINED_FUNCTION_19_17();
  DateTime.Date.init(withMonthOfYear:)(v1);
  return v0;
}

uint64_t DateTime.Date.init(withMonthOfYear:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 72) = *a1;
  OUTLINED_FUNCTION_26_11();
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(v2);
}

uint64_t DateTime.Date.__allocating_init(withMonthOfYear:year:)()
{
  OUTLINED_FUNCTION_1_42();
  uint64_t v1 = (unsigned char *)OUTLINED_FUNCTION_14_20();
  DateTime.Date.init(withMonthOfYear:year:)(v1, v2);
  return v0;
}

uint64_t DateTime.Date.init(withMonthOfYear:year:)(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 72) = *a1;
  *(void *)(v2 + 48) = a2;
  *(_WORD *)(v2 + 56) = 1792;
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 1;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_40(1793);
}

uint64_t DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, char *a15)
{
  OUTLINED_FUNCTION_20_16();
  char v19 = v18 & 1;
  char v21 = v20 & 1;
  uint64_t v22 = OUTLINED_FUNCTION_1_42();
  DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(a1, v15, a3, v16, a5, v17, a7, a8, a9, a10, v19, a12, a13, v21, a15);
  return v22;
}

uint64_t DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, char *a7, uint64_t a8, char *a9, uint64_t a10, char a11, char *a12, uint64_t a13, char a14, char *a15)
{
  char v16 = *a7;
  char v17 = *a9;
  char v18 = *a12;
  char v19 = *a15;
  *(void *)(v15 + 16) = a1;
  *(unsigned char *)(v15 + 24) = a2 & 1;
  *(void *)(v15 + 32) = a3;
  *(unsigned char *)(v15 + 40) = a4 & 1;
  *(void *)(v15 + 48) = a5;
  *(unsigned char *)(v15 + 56) = a6 & 1;
  *(unsigned char *)(v15 + 57) = v16;
  *(void *)(v15 + 64) = a8;
  *(unsigned char *)(v15 + 72) = v17;
  *(void *)(v15 + 80) = a10;
  *(unsigned char *)(v15 + 88) = a11 & 1;
  *(unsigned char *)(v15 + 89) = v18;
  *(void *)(v15 + 96) = a13;
  *(unsigned char *)(v15 + 104) = a14 & 1;
  *(unsigned char *)(v15 + 105) = v19;
  return OUTLINED_FUNCTION_2_36();
}

uint64_t sub_1C66FAFF8(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 40) == 1)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 56) == 1)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 88) == 1)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 105) == 7)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 89) == 7)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 104) == 1)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 72) == 12)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 57) == 7)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(void *)(v1 + 64))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C6739EE4();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (!*(void *)(v1 + 112)) {
    return OUTLINED_FUNCTION_12_18();
  }
  OUTLINED_FUNCTION_11_21();
  swift_retain();
  sub_1C670DED8(a1);

  return swift_release();
}

BOOL static DateTime.Date.<= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return static DateTime.Date.< infix(_:_:)(a1, a2) || static DateTime.Date.== infix(_:_:)(a1, a2);
}

BOOL static DateTime.Date.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return !static DateTime.Date.<= infix(_:_:)(a1, a2);
}

BOOL static DateTime.Date.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return !static DateTime.Date.< infix(_:_:)(a1, a2);
}

uint64_t sub_1C66FB298(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7954788 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1918985593 && a2 == 0xE400000000000000;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x796164696C6F68 && a2 == 0xE700000000000000;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x59664F68746E6F6DLL && a2 == 0xEB00000000726165;
            if (v10 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6559664F6B656577 && a2 == 0xEA00000000007261;
              if (v11 || (sub_1C68ED7E8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x656557664F796164 && a2 == 0xE90000000000006BLL;
                if (v12 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001C6916BC0 || (sub_1C68ED7E8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  BOOL v13 = a1 == 0x7261646E656C6163 && a2 == 0xEB00000000617245;
                  if (v13 || (sub_1C68ED7E8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0x6E6972727563636FLL && a2 == 0xEB000000006E4967)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    char v15 = sub_1C68ED7E8();
                    swift_bridgeObjectRelease();
                    if (v15) {
                      return 10;
                    }
                    else {
                      return 11;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1C66FB734(char a1)
{
  unint64_t result = 7954788;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x68746E6F6DLL;
      break;
    case 2:
      unint64_t result = 1918985593;
      break;
    case 3:
      unint64_t result = 0x5664656E69666564;
      break;
    case 4:
      unint64_t result = 0x796164696C6F68;
      break;
    case 5:
      unint64_t result = 0x59664F68746E6F6DLL;
      break;
    case 6:
      unint64_t result = 0x6559664F6B656577;
      break;
    case 7:
      unint64_t result = 0x656557664F796164;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 10:
      unint64_t result = 0x6E6972727563636FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C66FB8A4()
{
  return sub_1C66FB734(*v0);
}

uint64_t sub_1C66FB8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C66FB298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C66FB8D4(uint64_t a1)
{
  unint64_t v2 = sub_1C66FC1B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C66FB910(uint64_t a1)
{
  unint64_t v2 = sub_1C66FC1B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C66FB94C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E30);
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_15();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66FC1B4();
  sub_1C68EDA08();
  sub_1C68ED6E8();
  if (!v1)
  {
    OUTLINED_FUNCTION_9_27(1);
    OUTLINED_FUNCTION_9_27(2);
    sub_1C66FC200();
    OUTLINED_FUNCTION_7_28();
    type metadata accessor for DateTime.Date.Holiday();
    sub_1C66FC4A8(&qword_1EA407E48, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Date.Holiday);
    OUTLINED_FUNCTION_17_18();
    sub_1C66FC24C();
    OUTLINED_FUNCTION_7_28();
    OUTLINED_FUNCTION_9_27(6);
    sub_1C66FC298();
    OUTLINED_FUNCTION_7_28();
    OUTLINED_FUNCTION_9_27(8);
    sub_1C66FC2E4();
    OUTLINED_FUNCTION_7_28();
    type metadata accessor for DateTime.DateTimeRange();
    sub_1C66FC4A8(&qword_1EA407E68, 255, (void (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_17_18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1C66FBC28()
{
  sub_1C68ED938();
  sub_1C66FAFF8((uint64_t)v1);
  return sub_1C68ED988();
}

uint64_t DateTime.Date.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DateTime.Date.init(from:)(a1);
  return v2;
}

uint64_t DateTime.Date.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E70);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_15();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C66FC1B4();
  sub_1C68ED9E8();
  if (v2)
  {
    type metadata accessor for DateTime.Date();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v1 + 16) = OUTLINED_FUNCTION_6_29();
    *(unsigned char *)(v1 + 24) = v5 & 1;
    *(void *)(v1 + 32) = OUTLINED_FUNCTION_6_29();
    *(unsigned char *)(v1 + 40) = v6 & 1;
    LOBYTE(v13) = 2;
    *(void *)(v1 + 48) = OUTLINED_FUNCTION_6_29();
    *(unsigned char *)(v1 + 56) = v7 & 1;
    sub_1C66FC330();
    OUTLINED_FUNCTION_5_28();
    *(unsigned char *)(v1 + 57) = 2;
    type metadata accessor for DateTime.Date.Holiday();
    sub_1C66FC4A8(&qword_1EA407E80, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Date.Holiday);
    OUTLINED_FUNCTION_15_20();
    *(void *)(v1 + 64) = v13;
    sub_1C66FC37C();
    OUTLINED_FUNCTION_5_28();
    *(unsigned char *)(v1 + 72) = 2;
    *(void *)(v1 + 80) = OUTLINED_FUNCTION_6_29();
    *(unsigned char *)(v1 + 88) = v9 & 1;
    sub_1C66FC3C8();
    OUTLINED_FUNCTION_5_28();
    *(unsigned char *)(v1 + 89) = 6;
    LOBYTE(v13) = 8;
    *(void *)(v1 + 96) = OUTLINED_FUNCTION_6_29();
    *(unsigned char *)(v1 + 104) = v10 & 1;
    sub_1C66FC414();
    OUTLINED_FUNCTION_5_28();
    *(unsigned char *)(v1 + 105) = 8;
    type metadata accessor for DateTime.DateTimeRange();
    sub_1C66FC4A8(&qword_1EA407EA0, 255, (void (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_15_20();
    uint64_t v11 = OUTLINED_FUNCTION_5_4();
    v12(v11);
    *(void *)(v1 + 112) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C66FC004()
{
  return sub_1C66FBC28();
}

uint64_t sub_1C66FC028(uint64_t a1)
{
  return sub_1C66FAFF8(a1);
}

uint64_t sub_1C66FC04C()
{
  sub_1C68ED938();
  sub_1C66FAFF8((uint64_t)v1);
  return sub_1C68ED988();
}

BOOL sub_1C66FC08C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.== infix(_:_:)(*a1, *a2);
}

BOOL sub_1C66FC0B0(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1C66FC0D4(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.<= infix(_:_:)(*a1, *a2);
}

BOOL sub_1C66FC0F8(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.>= infix(_:_:)(*a1, *a2);
}

BOOL sub_1C66FC11C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.> infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C66FC140@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DateTime.Date.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C66FC16C(void *a1)
{
  return sub_1C66FB94C(a1);
}

uint64_t sub_1C66FC190()
{
  return sub_1C6603F80();
}

unint64_t sub_1C66FC1B4()
{
  unint64_t result = qword_1EA407E38;
  if (!qword_1EA407E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E38);
  }
  return result;
}

unint64_t sub_1C66FC200()
{
  unint64_t result = qword_1EA407E40;
  if (!qword_1EA407E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E40);
  }
  return result;
}

unint64_t sub_1C66FC24C()
{
  unint64_t result = qword_1EA407E50;
  if (!qword_1EA407E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E50);
  }
  return result;
}

unint64_t sub_1C66FC298()
{
  unint64_t result = qword_1EA407E58;
  if (!qword_1EA407E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E58);
  }
  return result;
}

unint64_t sub_1C66FC2E4()
{
  unint64_t result = qword_1EA407E60;
  if (!qword_1EA407E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E60);
  }
  return result;
}

unint64_t sub_1C66FC330()
{
  unint64_t result = qword_1EA407E78;
  if (!qword_1EA407E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E78);
  }
  return result;
}

unint64_t sub_1C66FC37C()
{
  unint64_t result = qword_1EA407E88;
  if (!qword_1EA407E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E88);
  }
  return result;
}

unint64_t sub_1C66FC3C8()
{
  unint64_t result = qword_1EA407E90;
  if (!qword_1EA407E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E90);
  }
  return result;
}

unint64_t sub_1C66FC414()
{
  unint64_t result = qword_1EA407E98;
  if (!qword_1EA407E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407E98);
  }
  return result;
}

uint64_t sub_1C66FC460(uint64_t a1, uint64_t a2)
{
  return sub_1C66FC4A8(&qword_1EA407EA8, a2, (void (*)(uint64_t))type metadata accessor for DateTime.Date);
}

uint64_t sub_1C66FC4A8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for DateTime.Date(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DateTime.Date);
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:monthOfYear:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:monthOfYear:year:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withYear:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:year:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withMonth:year:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDefinedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withHoliday:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDayOfWeek:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDayOfWeek:dayOfWeekOrdinal:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withMonthOfYear:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withMonthOfYear:year:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, void))(v6 + 280))(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, void))(v6 + 288))(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of DateTime.Date.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DateTime.Date.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DateTime.Date.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DateTime.Date.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

unsigned char *_s4DateC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C66FC874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4DateC10CodingKeysOMa()
{
  return &_s4DateC10CodingKeysON;
}

unint64_t sub_1C66FC8B0()
{
  unint64_t result = qword_1EA407EB0;
  if (!qword_1EA407EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407EB0);
  }
  return result;
}

unint64_t sub_1C66FC900()
{
  unint64_t result = qword_1EA407EB8;
  if (!qword_1EA407EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407EB8);
  }
  return result;
}

unint64_t sub_1C66FC950()
{
  unint64_t result = qword_1EA407EC0;
  if (!qword_1EA407EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407EC0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_40@<X0>(__int16 a1@<W8>)
{
  *(_WORD *)(v1 + 88) = a1;
  *(void *)(v1 + 96) = 0;
  *(_WORD *)(v1 + 104) = a1;
  *(void *)(v1 + 112) = 0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_36()
{
  *(void *)(v0 + 112) = 0;
  return v0;
}

void OUTLINED_FUNCTION_3_31()
{
  sub_1C65C8524();
}

uint64_t OUTLINED_FUNCTION_5_28()
{
  return sub_1C68ED608();
}

uint64_t OUTLINED_FUNCTION_6_29()
{
  return sub_1C68ED5F8();
}

uint64_t OUTLINED_FUNCTION_7_28()
{
  return sub_1C68ED6F8();
}

void OUTLINED_FUNCTION_8_33()
{
  *(void *)(v0 + 16) = v1;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v3;
}

uint64_t OUTLINED_FUNCTION_9_27@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_1C68ED6E8();
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  return sub_1C68ED958();
}

uint64_t OUTLINED_FUNCTION_12_18()
{
  return sub_1C68ED958();
}

uint64_t OUTLINED_FUNCTION_14_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_20()
{
  return sub_1C68ED608();
}

uint64_t OUTLINED_FUNCTION_17_18()
{
  return sub_1C68ED6F8();
}

uint64_t OUTLINED_FUNCTION_18_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_19_17()
{
  return v0;
}

void OUTLINED_FUNCTION_22_10()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  *(void *)(v0 + 48) = 0;
  *(_WORD *)(v0 + 56) = 1793;
  *(void *)(v0 + 64) = 0;
}

uint64_t OUTLINED_FUNCTION_27_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_29()
{
  return v0;
}

void OUTLINED_FUNCTION_7_29()
{
  uint64_t v4 = *(void *)(v3 + 56) + 16 * v0;
  *(void *)uint64_t v4 = v1;
  *(unsigned char *)(v4 + 8) = v2 & 1;
}

void sub_1C66FCC74(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4, unsigned __int8 *a5)
{
  uint64_t v6 = v5;
  unsigned int v10 = *a2;
  unsigned int v11 = a2[1];
  uint64_t v12 = *((void *)a2 + 1);
  int v13 = a2[16];
  int v14 = a2[17];
  int v15 = a2[18];
  unsigned __int8 v16 = *a5;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0)
  {
    int v123 = a2[18];
    int v110 = a2[17];
    if (sub_1C68ED528()) {
      sub_1C67FAECC(MEMORY[0x1E4FBC860]);
    }
    else {
      uint64_t v17 = MEMORY[0x1E4FBC870];
    }
    int v14 = v110;
    int v15 = v123;
  }
  else
  {
    uint64_t v17 = MEMORY[0x1E4FBC870];
  }
  uint64_t v135 = v17;
  if (*(unsigned char *)(a1 + 57) == 7)
  {
    HIDWORD(v122) = v15;
    HIDWORD(v121) = v14;
    LOBYTE(v129) = 38;
    uint64_t v18 = sub_1C66FD15C(a1, (uint64_t)a2, a3, a4, 0, (char *)&v129, 1);
    if (v18)
    {
      OUTLINED_FUNCTION_2_38(v18, v19, v20, v21, v22, v23, v24, v25, v111, v112, v115, v118, v119);
      swift_release();
    }
    uint64_t v26 = *(char *)(a1 + 89);
    if (v26 != 7)
    {
      uint64_t v27 = *(void *)(a1 + 96);
      uint64_t v28 = *(unsigned __int8 *)(a1 + 104);
      uint64_t v129 = qword_1C68FA4B8[v26];
      uint64_t v130 = v27;
      uint64_t v131 = v28;
      char v132 = 2;
      LOBYTE(v133) = v16;
      type metadata accessor for DateTimeConstraint();
      OUTLINED_FUNCTION_5_30();
      uint64_t v31 = OUTLINED_FUNCTION_0_42(6, (uint64_t)&v129, v29, v30, (char *)&v133);
      OUTLINED_FUNCTION_2_38(v31, v32, v33, v34, v35, v36, v37, v38, v111, v112, v115, v118, v119);
      swift_release();
    }
    if (*(unsigned char *)(a1 + 72) != 12)
    {
      OUTLINED_FUNCTION_1_44();
      OUTLINED_FUNCTION_5_30();
      uint64_t v41 = OUTLINED_FUNCTION_0_42(9, (uint64_t)&v129, v39, v40, (char *)&v133);
      OUTLINED_FUNCTION_2_38(v41, v42, v43, v44, v45, v46, v47, v48, v111, v112, v115, v118, v119);
      swift_release();
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0)
    {
      OUTLINED_FUNCTION_1_44();
      OUTLINED_FUNCTION_5_30();
      uint64_t v51 = OUTLINED_FUNCTION_0_42(9, (uint64_t)&v129, v49, v50, (char *)&v133);
      OUTLINED_FUNCTION_2_38(v51, v52, v53, v54, v55, v56, v57, v58, v111, v112, v115, v118, v119);
      swift_release();
    }
    if ((*(unsigned char *)(a1 + 24) & 1) == 0)
    {
      OUTLINED_FUNCTION_1_44();
      OUTLINED_FUNCTION_5_30();
      uint64_t v61 = OUTLINED_FUNCTION_0_42(5, (uint64_t)&v129, v59, v60, (char *)&v133);
      OUTLINED_FUNCTION_2_38(v61, v62, v63, v64, v65, v66, v67, v68, v111, v112, v115, v118, v119);
      swift_release();
    }
    LODWORD(v122) = v13;
    if ((*(unsigned char *)(a1 + 56) & 1) == 0)
    {
      OUTLINED_FUNCTION_1_44();
      OUTLINED_FUNCTION_5_30();
      uint64_t v71 = OUTLINED_FUNCTION_0_42(11, (uint64_t)&v129, v69, v70, (char *)&v133);
      OUTLINED_FUNCTION_2_38(v71, v72, v73, v74, v75, v76, v77, v78, v111, v112, v115, v118, v119);
      swift_release();
    }
    uint64_t v79 = *(void *)(a1 + 112);
    if (v79 && (int v80 = *(unsigned __int8 *)(v79 + 56), v80 != 38))
    {
      uint64_t v120 = v12;
      if (qword_1EA405780 != -1) {
        swift_once();
      }
      uint64_t v97 = sub_1C68EC478();
      __swift_project_value_buffer(v97, (uint64_t)qword_1EA442820);
      char v98 = sub_1C68EC458();
      os_log_type_t v99 = sub_1C68ECE48();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v116 = a3;
        char v100 = (uint8_t *)swift_slowAlloc();
        uint64_t v129 = swift_slowAlloc();
        *(_DWORD *)char v100 = 136315138;
        LOBYTE(v133) = v80;
        uint64_t v101 = sub_1C68EC8F8();
        sub_1C65B4078(v101, v102, (uint64_t)&v129, v103, v104, v105, v106, v107, (uint64_t)(v100 + 4), __PAIR64__(v10, v11), v116, v6, v120, v121, v122, v124, v125, v126, v127,
          v128);
        uint64_t v133 = v108;
        LOBYTE(v11) = v113;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C65AE000, v98, v99, "generating constraints for %s", v100, 0xCu);
        swift_arrayDestroy();
        LOBYTE(v10) = v114;
        OUTLINED_FUNCTION_0();
        a3 = v117;
        OUTLINED_FUNCTION_0();
      }

      LOBYTE(v133) = v80;
      LOBYTE(v129) = v10;
      BYTE1(v129) = v11;
      uint64_t v130 = v120;
      LOBYTE(v131) = v122;
      BYTE1(v131) = BYTE4(v121);
      BYTE2(v131) = BYTE4(v122);
      unsigned __int8 v134 = v16;
      uint64_t v109 = sub_1C66FD2F8((unsigned __int8 *)&v133, a1, (char *)&v129, a3, a4, &v134);
      sub_1C65F6344(v109);
    }
    else
    {
      LOBYTE(v129) = v16;
      uint64_t v81 = sub_1C66FD748(a1);
      if (v81)
      {
        OUTLINED_FUNCTION_2_38(v81, v82, v83, v84, v85, v86, v87, v88, v111, v112, v115, v118, v119);
        swift_release();
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C68F03F0;
    uint64_t v130 = 0;
    uint64_t v131 = 0;
    char v132 = 0;
    LOBYTE(v133) = 40;
    type metadata accessor for DateTimeConstraint();
    OUTLINED_FUNCTION_5_30();
    OUTLINED_FUNCTION_9_28();
    *(void *)(inited + 32) = sub_1C65F5C08(v90, v91, v92, v93, v94, v95, 1, v96);
    uint64_t v129 = inited;
    sub_1C68ECC18();
    sub_1C6689004();
  }
}

uint64_t sub_1C66FD15C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char *a6, char a7)
{
  uint64_t v14 = sub_1C68E9DD8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_15();
  uint64_t v18 = *(void *)(a1 + 64);
  if (!v18) {
    return 0;
  }
  char v27 = a4;
  char v28 = a5;
  char v19 = *a6;
  uint64_t v21 = *(void *)(v18 + 16);
  uint64_t v20 = *(void *)(v18 + 24);
  unsigned int v22 = *(unsigned __int8 *)(v18 + 48);
  if (v22 == 12)
  {
    uint64_t v23 = a3 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v7, v23, v14);
    swift_bridgeObjectRetain();
    sub_1C664BEFC(v7, (char *)v30);
    if (LOBYTE(v30[0]) == 12) {
      unsigned int v22 = 2;
    }
    else {
      unsigned int v22 = LOBYTE(v30[0]);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v25 = *(void *)(a1 + 112);
  if (v25) {
    unint64_t v26 = (unint64_t)*(unsigned __int8 *)(v25 + 57) << 8;
  }
  else {
    unint64_t v26 = 5120;
  }
  v30[0] = v21;
  v30[1] = v20;
  v30[2] = v26 | v22;
  char v31 = 3;
  char v29 = v19;
  type metadata accessor for DateTimeConstraint();
  OUTLINED_FUNCTION_5_30();
  return sub_1C65F5C08(10, (uint64_t)v30, v27, v28, &v29, 1, a7 & 1, 0);
}

uint64_t sub_1C66FD2F8(unsigned __int8 *a1, uint64_t a2, char *a3, uint64_t a4, int a5, unsigned __int8 *a6)
{
  HIDWORD(v54) = a5;
  uint64_t v10 = sub_1C68E9C68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15();
  int v14 = *a1;
  char v15 = *a3;
  char v16 = a3[1];
  uint64_t v55 = *((void *)a3 + 1);
  char v17 = a3[16];
  char v18 = a3[17];
  char v19 = a3[18];
  HIDWORD(v53) = *a6;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0)
  {
    char v48 = a3[18];
    char v49 = a3[17];
    int v50 = v14;
    char v51 = a3[16];
    char v52 = v15;
    if (sub_1C68ED528()) {
      sub_1C67FAECC(MEMORY[0x1E4FBC860]);
    }
    else {
      uint64_t v20 = MEMORY[0x1E4FBC870];
    }
    char v15 = v52;
    char v17 = v51;
    int v14 = v50;
    char v18 = v49;
    char v19 = v48;
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC870];
  }
  uint64_t v62 = v20;
  if (v14 != 10)
  {
    LOBYTE(v58) = v14;
    char v21 = v15;
    char v22 = v17;
    LODWORD(v54) = v14;
    char v23 = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v6, a4 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language, v10);
    LOBYTE(v61) = *(unsigned char *)(a4 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere);
    uint64_t v24 = sub_1C65F08A4((unsigned __int8 *)&v58, v6, (unsigned __int8 *)&v61, v55);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v6, v10);
    LOBYTE(v14) = v54;
    if (v24)
    {
      LOBYTE(v58) = v21;
      BYTE1(v58) = v16;
      uint64_t v59 = v55;
      LOBYTE(v60) = v22;
      BYTE1(v60) = v23;
      BYTE2(v60) = v19;
      LOBYTE(v61) = v54;
      uint64_t v25 = sub_1C65F5428(v24, &v58, a4, HIDWORD(v54), &v61);
      sub_1C65F6344(v25);
      swift_release();
      LOBYTE(v14) = v54;
    }
  }
  uint64_t v26 = *(void *)(a2 + 112);
  if (!v26 || (int v27 = *(unsigned __int8 *)(v26 + 57), v27 == 20))
  {
LABEL_12:
    LOBYTE(v58) = v14;
    uint64_t v29 = sub_1C670FEFC(&v58);
    if (!v29) {
      return v62;
    }
    goto LABEL_13;
  }
  if (v27 != 6)
  {
    if (v27 != 7)
    {
      if (v27 == 3)
      {
        LOBYTE(v58) = v14;
        sub_1C670FB2C(&v58);
        sub_1C65F6344(v28);
        return v62;
      }
      LOBYTE(v58) = v14;
      LOBYTE(v61) = v27;
      uint64_t v45 = sub_1C671B5B0((unsigned __int8 *)&v61);
      if (!v45) {
        return v62;
      }
      LOBYTE(v58) = BYTE4(v53);
      uint64_t v46 = sub_1C6761F88(v45, (uint64_t)&v58, SBYTE4(v54));
      if (v46)
      {
        uint64_t v47 = v46;
        swift_retain();
        sub_1C67FCD54(&v58, v47);
        swift_release();
        swift_release();
      }
LABEL_14:
      swift_release();
      return v62;
    }
    goto LABEL_12;
  }
  char v31 = v14;
  if (qword_1EA405780 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1C68EC478();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EA442820);
  uint64_t v33 = sub_1C68EC458();
  os_log_type_t v34 = sub_1C68ECE48();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315138;
    char v36 = v31;
    LOBYTE(v61) = v31;
    uint64_t v37 = sub_1C68EC8F8();
    sub_1C65B4078(v37, v38, (uint64_t)&v58, v39, v40, v41, v42, v43, v53, v54, v55, a4, a2, v58, v59, v60, v61, v62, v63,
      v64);
    uint64_t v61 = v44;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C65AE000, v33, v34, "qualifier is .restOf, definedDateTimeRange is %s", v35, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();
  }
  else
  {

    char v36 = v31;
  }
  LOBYTE(v58) = v36;
  uint64_t v29 = sub_1C670FDCC(&v58);
  if (v29)
  {
LABEL_13:
    sub_1C67FCD54(&v58, v29);
    goto LABEL_14;
  }
  return v62;
}

uint64_t sub_1C66FD748(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 112);
  if (!v1) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(v1 + 57);
  if (v2 == 19) {
    goto LABEL_11;
  }
  if (v2 != 17) {
    return 0;
  }
  if (*(void *)(a1 + 64)
    || *(unsigned char *)(a1 + 40) != 1
    || *(unsigned char *)(a1 + 72) != 12
    || (*(unsigned char *)(a1 + 24) & 1) == 0
    || *(unsigned char *)(a1 + 89) != 7)
  {
    OUTLINED_FUNCTION_4_29();
    OUTLINED_FUNCTION_5_30();
    OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_9_28();
    return sub_1C65F5C08(v6, v4, v7, v8, v5, v9, 1, v10);
  }
LABEL_11:
  type metadata accessor for DateTimeConstraint();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_6_31();
  char v6 = 13;
  char v7 = 2;
  char v8 = 4;
  char v9 = 1;
  char v10 = 0;
  return sub_1C65F5C08(v6, v4, v7, v8, v5, v9, 1, v10);
}

uint64_t initializeWithCopy for DateConstraintGenerator(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for DateConstraintGenerator(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DateConstraintGenerator(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateConstraintGenerator(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateConstraintGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateConstraintGenerator()
{
  return &type metadata for DateConstraintGenerator;
}

uint64_t OUTLINED_FUNCTION_0_42(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  return sub_1C65F5C08(a1, a2, v5, 0, a5, 1, 1, 0);
}

uint64_t OUTLINED_FUNCTION_1_44()
{
  *(unsigned char *)(v1 - 112) = v0;
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_2_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  return sub_1C67FCD54(va, a1);
}

uint64_t OUTLINED_FUNCTION_4_29()
{
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return swift_allocObject();
}

uint64_t sub_1C66FDAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3DB8);
  MEMORY[0x1F4188790](v9 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v13 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_15();
  uint64_t v23 = v22 - v21;
  int v24 = *(unsigned __int8 *)(a3 + 52);
  sub_1C65FEC94(v12);
  sub_1C66F910C(a1, a4, v24, a2, v12, v16);
  sub_1C664B71C(v12, &qword_1EBBF3DB8);
  if (__swift_getEnumTagSinglePayload(v16, 1, v17) == 1)
  {
    sub_1C664B71C(v16, &qword_1EBBF6808);
    uint64_t v25 = sub_1C68E9358();
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, v25);
  }
  else
  {
    OUTLINED_FUNCTION_2();
    v27();
    sub_1C65FF704(v23, a2, a3, a5 & 1, a6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  }
}

uint64_t sub_1C66FDCB0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTimeConstraint();
    sub_1C6604F80((unint64_t *)&qword_1EA406760, (void (*)(uint64_t))type metadata accessor for DateTimeConstraint);
    uint64_t result = sub_1C68ECD98();
    uint64_t v1 = v21;
    uint64_t v19 = v22;
    uint64_t v3 = v23;
    int64_t v4 = v24;
    unint64_t v5 = v25;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v12 = v4;
    goto LABEL_29;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v19 + 8 * v14);
      int64_t v12 = v4 + 1;
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 3;
      if (v4 + 3 >= v9) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 4;
      if (v4 + 4 >= v9) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15)
      {
LABEL_28:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        uint64_t v13 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
        uint64_t result = swift_retain();
        if (v13)
        {
          while (1)
          {
            if (*(unsigned char *)(v13 + 16) == 9)
            {
              double v17 = *(double *)(v13 + 24);
              if (*(unsigned char *)(v13 + 48) == 2) {
                goto LABEL_37;
              }
              if (!*(unsigned char *)(v13 + 48)) {
                break;
              }
            }
LABEL_38:
            uint64_t result = swift_release();
            int64_t v4 = v12;
            unint64_t v5 = v10;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!sub_1C68ED2B8()) {
              goto LABEL_40;
            }
            type metadata accessor for DateTimeConstraint();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v13 = v20;
            uint64_t result = swift_unknownObjectRelease();
            int64_t v12 = v4;
            uint64_t v10 = v5;
            if (!v20) {
              goto LABEL_41;
            }
          }
          if ((~*(void *)&v17 & 0x7FF0000000000000) == 0) {
            goto LABEL_43;
          }
          double v18 = *(double *)(v13 + 24);
          if (v17 <= -9.22337204e18) {
            goto LABEL_44;
          }
          if (v18 >= 9.22337204e18) {
            goto LABEL_45;
          }
          *(void *)&double v17 = (uint64_t)v18;
LABEL_37:
          if (*(void *)&v17 == 2) {
            goto LABEL_41;
          }
          goto LABEL_38;
        }
        goto LABEL_41;
      }
      int64_t v12 = v4 + 5;
      if (v4 + 5 < v9)
      {
        unint64_t v15 = *(void *)(v19 + 8 * v12);
        if (!v15)
        {
          int64_t v16 = v4 + 6;
          do
          {
            if (v16 >= v9) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v19 + 8 * v16++);
          }
          while (!v15);
          int64_t v12 = v16 - 1;
        }
        goto LABEL_28;
      }
    }
LABEL_40:
    uint64_t v13 = 0;
LABEL_41:
    sub_1C6645058();
    return v13;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C66FDFDC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTimeConstraint();
    sub_1C6604F80((unint64_t *)&qword_1EA406760, (void (*)(uint64_t))type metadata accessor for DateTimeConstraint);
    uint64_t result = sub_1C68ECD98();
    uint64_t v1 = v21;
    uint64_t v19 = v22;
    uint64_t v3 = v23;
    int64_t v4 = v24;
    unint64_t v5 = v25;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v12 = v4;
    goto LABEL_29;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v19 + 8 * v14);
      int64_t v12 = v4 + 1;
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 3;
      if (v4 + 3 >= v9) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 4;
      if (v4 + 4 >= v9) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15)
      {
LABEL_28:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        uint64_t v13 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
        uint64_t result = swift_retain();
        if (v13)
        {
          while (1)
          {
            if (*(unsigned char *)(v13 + 16) == 5)
            {
              uint64_t v17 = *(uint64_t *)(v13 + 24);
              if (*(unsigned char *)(v13 + 48) == 2) {
                goto LABEL_37;
              }
              if (!*(unsigned char *)(v13 + 48)) {
                break;
              }
            }
LABEL_38:
            uint64_t result = swift_release();
            int64_t v4 = v12;
            unint64_t v5 = v10;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!sub_1C68ED2B8()) {
              goto LABEL_40;
            }
            type metadata accessor for DateTimeConstraint();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v13 = v20;
            uint64_t result = swift_unknownObjectRelease();
            int64_t v12 = v4;
            uint64_t v10 = v5;
            if (!v20) {
              goto LABEL_41;
            }
          }
          if ((~v17 & 0x7FF0000000000000) == 0) {
            goto LABEL_43;
          }
          double v18 = *(double *)(v13 + 24);
          if (*(double *)&v17 <= -9.22337204e18) {
            goto LABEL_44;
          }
          if (v18 >= 9.22337204e18) {
            goto LABEL_45;
          }
          uint64_t v17 = (uint64_t)v18;
LABEL_37:
          if (v17 >= 29) {
            goto LABEL_41;
          }
          goto LABEL_38;
        }
        goto LABEL_41;
      }
      int64_t v12 = v4 + 5;
      if (v4 + 5 < v9)
      {
        unint64_t v15 = *(void *)(v19 + 8 * v12);
        if (!v15)
        {
          int64_t v16 = v4 + 6;
          do
          {
            if (v16 >= v9) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v19 + 8 * v16++);
          }
          while (!v15);
          int64_t v12 = v16 - 1;
        }
        goto LABEL_28;
      }
    }
LABEL_40:
    uint64_t v13 = 0;
LABEL_41:
    sub_1C6645058();
    return v13;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C66FE308(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v104 = a3;
  LOBYTE(v5) = a2;
  uint64_t v121 = sub_1C68E9DB8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v123 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_1_20();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_19_2();
  uint64_t v122 = v10;
  uint64_t v11 = sub_1C68E9698();
  OUTLINED_FUNCTION_0_1();
  uint64_t v101 = v12;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1();
  uint64_t v120 = v14;
  uint64_t v100 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  char v99 = v15;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_1();
  uint64_t v103 = v17;
  unint64_t v118 = a1 & 0xC000000000000001;
  uint64_t v105 = a1;
  uint64_t v102 = v11;
  uint64_t v119 = v4;
  if ((a1 & 0xC000000000000001) == 0)
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C66FF330(v37, v5);
    goto LABEL_31;
  }
  uint64_t v97 = 0;
  uint64_t v18 = MEMORY[0x1E4FBC870];
  uint64_t v130 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  sub_1C68ED238();
  uint64_t v19 = sub_1C68ED2B8();
  if (!v19) {
    goto LABEL_29;
  }
  uint64_t v20 = v19;
  type metadata accessor for DateTimeConstraint();
  do
  {
    uint64_t v124 = v20;
    swift_dynamicCast();
    if (*(unsigned char *)(v129 + 49))
    {
      if (*(unsigned char *)(v129 + 49) == 1)
      {
        unint64_t v21 = 0xE300000000000000;
        uint64_t v22 = 6581861;
      }
      else
      {
        unint64_t v21 = 0xE600000000000000;
        uint64_t v22 = 0x746573746F6ELL;
      }
    }
    else
    {
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x7472617473;
    }
    if ((_BYTE)v5)
    {
      if (v5 == 1) {
        uint64_t v23 = 6581861;
      }
      else {
        uint64_t v23 = 0x746573746F6ELL;
      }
      if (v5 == 1) {
        unint64_t v24 = 0xE300000000000000;
      }
      else {
        unint64_t v24 = 0xE600000000000000;
      }
    }
    else
    {
      unint64_t v24 = 0xE500000000000000;
      uint64_t v23 = 0x7472617473;
    }
    if (v22 == v23 && v21 == v24)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v26 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        swift_release();
        goto LABEL_27;
      }
    }
    uint64_t v34 = v130;
    unint64_t v35 = *(void *)(v130 + 16);
    if (*(void *)(v130 + 24) <= v35)
    {
      sub_1C680082C(v35 + 1, v27, v28, v29, v30, v31, v32, v33, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
        v108,
        v109,
        v110,
        v112,
        v114,
        v116,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        v124);
      uint64_t v34 = v130;
    }
    sub_1C68ED938();
    sub_1C65F5C58();
    sub_1C68ED988();
    unint64_t v36 = sub_1C68ED218();
    *(void *)(v34 + 56 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    *(void *)(*(void *)(v34 + 48) + 8 * v36) = v129;
    ++*(void *)(v34 + 16);
LABEL_27:
    uint64_t v20 = sub_1C68ED2B8();
  }
  while (v20);
  uint64_t v18 = v130;
LABEL_29:
  swift_release();
LABEL_31:
  uint64_t v38 = sub_1C66FEF38(v18);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1C6830238();
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  if (v40 < 0 || (v40 & 0x4000000000000000) != 0) {
    goto LABEL_138;
  }
  uint64_t v41 = *(void *)(v40 + 16);
  swift_retain();
  while (1)
  {
    uint64_t v115 = v38;
    if (!v41) {
      break;
    }
    if (v41 < 1)
    {
      __break(1u);
LABEL_140:
      uint64_t result = sub_1C68ED568();
      __break(1u);
      return result;
    }
    uint64_t v42 = 0;
    uint64_t v43 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if ((v40 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87A4300](v42, v40);
      }
      else {
        swift_retain();
      }
      uint64_t v38 = sub_1C65FDCEC();
      swift_release();
      uint64_t v44 = *(void *)(v38 + 16);
      uint64_t v45 = *(void *)(v43 + 16);
      uint64_t v46 = v45 + v44;
      if (__OFADD__(v45, v44)) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v46 > *(void *)(v43 + 24) >> 1)
      {
        if (v45 <= v46) {
          uint64_t v48 = v45 + v44;
        }
        else {
          uint64_t v48 = v45;
        }
        uint64_t v43 = sub_1C65C8820(isUniquelyReferenced_nonNull_native, v48, 1, v43);
      }
      if (*(void *)(v38 + 16))
      {
        uint64_t v49 = *(void *)(v43 + 16);
        if ((*(void *)(v43 + 24) >> 1) - v49 < v44) {
          goto LABEL_134;
        }
        unint64_t v50 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
        uint64_t v51 = *(void *)(v123 + 72);
        unint64_t v52 = v43 + v50 + v51 * v49;
        if (v38 + v50 < v52 + v51 * v44 && v52 < v38 + v50 + v51 * v44) {
          goto LABEL_140;
        }
        swift_arrayInitWithCopy();
        if (v44)
        {
          uint64_t v54 = *(void *)(v43 + 16);
          BOOL v55 = __OFADD__(v54, v44);
          uint64_t v56 = v54 + v44;
          if (v55) {
            goto LABEL_135;
          }
          *(void *)(v43 + 16) = v56;
        }
      }
      else if (v44)
      {
        goto LABEL_132;
      }
      swift_bridgeObjectRelease();
      if (v41 == ++v42) {
        goto LABEL_61;
      }
    }
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    swift_retain();
    uint64_t v41 = sub_1C68ED528();
  }
  uint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_61:
  swift_release_n();
  sub_1C6688AE8(v43);
  if ((_BYTE)v5)
  {
    OUTLINED_FUNCTION_13_16();
    char v57 = OUTLINED_FUNCTION_11_22();
    swift_bridgeObjectRelease();
    if ((v57 & 1) == 0)
    {
      sub_1C68E9318();
      goto LABEL_66;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_16();
  }
  sub_1C68E9338();
LABEL_66:
  sub_1C68E9CF8();
  swift_bridgeObjectRelease();
  if (v118)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTimeConstraint();
    sub_1C6604F80((unint64_t *)&qword_1EA406760, (void (*)(uint64_t))type metadata accessor for DateTimeConstraint);
    sub_1C68ECD98();
    uint64_t v58 = v124;
    uint64_t v113 = v125;
    uint64_t v38 = v126;
    int64_t v59 = v127;
    uint64_t v5 = v128;
  }
  else
  {
    uint64_t v58 = v105;
    uint64_t v60 = -1 << *(unsigned char *)(v105 + 32);
    uint64_t v113 = v105 + 56;
    uint64_t v38 = ~v60;
    uint64_t v61 = -v60;
    if (v61 < 64) {
      uint64_t v62 = ~(-1 << v61);
    }
    else {
      uint64_t v62 = -1;
    }
    uint64_t v5 = v62 & *(void *)(v105 + 56);
    swift_bridgeObjectRetain();
    int64_t v59 = 0;
  }
  int64_t v111 = (unint64_t)(v38 + 64) >> 6;
  unint64_t v118 = v123 + 16;
  BOOL v107 = 1;
  while (2)
  {
    int64_t v63 = v59;
    uint64_t v40 = v5;
    if (v58 < 0)
    {
      if (!sub_1C68ED2B8()) {
        break;
      }
      type metadata accessor for DateTimeConstraint();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v66 = v130;
      swift_unknownObjectRelease();
      if (!v130) {
        break;
      }
      goto LABEL_91;
    }
    if (v5)
    {
      unint64_t v64 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v65 = v64 | (v59 << 6);
      goto LABEL_90;
    }
    ++v59;
    if (__OFADD__(v63, 1)) {
      goto LABEL_136;
    }
    if (v59 < v111)
    {
      unint64_t v67 = *(void *)(v113 + 8 * v59);
      if (!v67)
      {
        OUTLINED_FUNCTION_14_21();
        if (v69 == v55) {
          break;
        }
        unint64_t v67 = *(void *)(v113 + 8 * v68);
        if (v67) {
          goto LABEL_88;
        }
        OUTLINED_FUNCTION_14_21();
        if (v69 == v55) {
          break;
        }
        unint64_t v67 = *(void *)(v113 + 8 * v68);
        if (v67)
        {
LABEL_88:
          int64_t v59 = v68;
        }
        else
        {
          int64_t v59 = v63 + 4;
          if (v63 + 4 >= v111) {
            break;
          }
          unint64_t v67 = *(void *)(v113 + 8 * v59);
          if (!v67)
          {
            do
            {
              OUTLINED_FUNCTION_14_21();
              if (v69 == v55) {
                goto LABEL_125;
              }
              unint64_t v67 = *(void *)(v113 + 8 * v84);
              uint64_t v85 = v84 + 1;
            }
            while (!v67);
            int64_t v59 = v85 - 1;
          }
        }
      }
      uint64_t v5 = (v67 - 1) & v67;
      unint64_t v65 = __clz(__rbit64(v67)) + (v59 << 6);
LABEL_90:
      uint64_t v66 = *(void *)(*(void *)(v58 + 48) + 8 * v65);
      swift_retain();
      if (!v66) {
        break;
      }
LABEL_91:
      uint64_t v38 = v66;
      uint64_t v70 = sub_1C65FDCEC();
      uint64_t v71 = v70;
      uint64_t v72 = *(void *)(v70 + 16);
      if (!v72)
      {
LABEL_92:
        swift_release();
        swift_bridgeObjectRelease();
        continue;
      }
      unint64_t v73 = 0;
      unint64_t v117 = v70 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
      uint64_t v40 = v121;
      while (2)
      {
        if (v73 >= *(void *)(v71 + 16)) {
          goto LABEL_133;
        }
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v123 + 16))(v122, v117 + *(void *)(v123 + 72) * v73, v40);
        uint64_t v38 = v120;
        uint64_t v74 = sub_1C68E95B8();
        if (v75)
        {
          uint64_t v38 = v40;
          OUTLINED_FUNCTION_17_19();
        }
        else
        {
          if (*(void *)(v115 + 16))
          {
            uint64_t v40 = v74;
            uint64_t v76 = (unsigned char *)swift_retain();
            uint64_t v38 = v115;
            unint64_t v77 = sub_1C6850B2C(v76);
            if (v78)
            {
              uint64_t v38 = *(void *)(*(void *)(v115 + 56) + 8 * v77);
              swift_bridgeObjectRetain();
              swift_release();
              uint64_t v79 = *(void *)(v38 + 16);
              if (v79)
              {
                if (!v107) {
                  goto LABEL_110;
                }
                if (*(void *)(v38 + 32) == v40) {
                  goto LABEL_101;
                }
                if (v79 != 1)
                {
                  if (*(void *)(v38 + 40) != v40)
                  {
                    if (v79 != 2)
                    {
                      uint64_t v82 = 6;
                      while (1)
                      {
                        uint64_t v83 = v82 - 3;
                        if (__OFADD__(v82 - 4, 1)) {
                          goto LABEL_137;
                        }
                        BOOL v107 = *(void *)(v38 + 8 * v82) == v40;
                        if (*(void *)(v38 + 8 * v82) != v40)
                        {
                          ++v82;
                          if (v83 != v79) {
                            continue;
                          }
                        }
                        goto LABEL_111;
                      }
                    }
                    goto LABEL_110;
                  }
LABEL_101:
                  BOOL v107 = 1;
                }
                else
                {
LABEL_110:
                  BOOL v107 = 0;
                }
              }
LABEL_111:
              OUTLINED_FUNCTION_17_19();
              uint64_t v40 = v121;
              OUTLINED_FUNCTION_8_0();
              v81();
              swift_bridgeObjectRelease();
LABEL_106:
              if (++v73 == v72) {
                goto LABEL_92;
              }
              continue;
            }
            swift_release();
          }
          OUTLINED_FUNCTION_17_19();
          uint64_t v40 = v121;
        }
        break;
      }
      OUTLINED_FUNCTION_8_0();
      v80();
      goto LABEL_106;
    }
    break;
  }
LABEL_125:
  sub_1C6645058();
  swift_bridgeObjectRelease();
  if (sub_1C66F957C()
    && (uint64_t v86 = sub_1C66FDCB0(v105), swift_release(), v86)
    && (uint64_t v87 = sub_1C66FDFDC(v105), swift_release(), v87))
  {
    (*(void (**)(uint64_t, void, uint64_t))(v123 + 104))(v96, *MEMORY[0x1E4F27BF0], v121);
    uint64_t v88 = sub_1C68E9DC8();
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_8_0();
    v89();
    OUTLINED_FUNCTION_8_0();
    v90();
    OUTLINED_FUNCTION_8_0();
    v91();
    return v88 != 28 && v107;
  }
  else
  {
    OUTLINED_FUNCTION_8_0();
    v93();
    OUTLINED_FUNCTION_8_0();
    v94();
    return v107;
  }
}

uint64_t sub_1C66FEF38(uint64_t a1)
{
  type metadata accessor for DateTimeConstraint();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407ED0);
  sub_1C6604F80((unint64_t *)&qword_1EA406760, (void (*)(uint64_t))type metadata accessor for DateTimeConstraint);
  uint64_t v2 = (void *)sub_1C68EC748();
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    sub_1C68ECD98();
    a1 = v32;
    uint64_t v30 = v33;
    uint64_t v3 = v34;
    int64_t v4 = v35;
    unint64_t v5 = v36;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    int64_t v4 = 0;
  }
  int64_t v29 = (unint64_t)(v3 + 64) >> 6;
  if (a1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v12 = v4;
    goto LABEL_27;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v29) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v14);
    int64_t v12 = v4 + 1;
    if (!v15)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v29) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v12);
      if (!v15)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v29) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v12);
        if (!v15)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v29) {
            goto LABEL_38;
          }
          unint64_t v15 = *(void *)(v30 + 8 * v12);
          if (!v15)
          {
            int64_t v16 = v4 + 5;
            while (v16 < v29)
            {
              unint64_t v15 = *(void *)(v30 + 8 * v16++);
              if (v15)
              {
                int64_t v12 = v16 - 1;
                goto LABEL_26;
              }
            }
            goto LABEL_38;
          }
        }
      }
    }
LABEL_26:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_27:
    uint64_t v13 = *(void **)(*(void *)(a1 + 48) + 8 * v11);
    swift_retain();
    if (v13)
    {
      while (1)
      {
        swift_beginAccess();
        uint64_t v17 = v13[7];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v2;
        unint64_t v18 = sub_1C6850B2C(v13);
        if (__OFADD__(v2[2], (v19 & 1) == 0)) {
          break;
        }
        unint64_t v20 = v18;
        char v21 = v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407ED8);
        if (sub_1C68ED4D8())
        {
          unint64_t v22 = sub_1C6850B2C(v13);
          if ((v21 & 1) != (v23 & 1)) {
            goto LABEL_42;
          }
          unint64_t v20 = v22;
        }
        if (v21)
        {
          uint64_t v24 = v2[7];
          swift_bridgeObjectRelease();
          *(void *)(v24 + 8 * v20) = v17;
        }
        else
        {
          v2[(v20 >> 6) + 8] |= 1 << v20;
          *(void *)(v2[6] + 8 * v20) = v13;
          *(void *)(v2[7] + 8 * v20) = v17;
          uint64_t v25 = v2[2];
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26) {
            goto LABEL_40;
          }
          v2[2] = v27;
          swift_retain();
        }
        swift_release_n();
        swift_bridgeObjectRelease();
        int64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          goto LABEL_8;
        }
LABEL_10:
        if (sub_1C68ED2B8())
        {
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v13 = v31;
          swift_unknownObjectRelease();
          int64_t v12 = v4;
          uint64_t v10 = v5;
          if (v31) {
            continue;
          }
        }
        goto LABEL_38;
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_38:
    sub_1C6645058();
    return (uint64_t)v2;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_1C68ED868();
  __break(1u);
  return result;
}

uint64_t sub_1C66FF330(uint64_t isStackAllocationSafe, char a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v7 = (void *)((char *)v13 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C65F7DA0(0, v6, v7);
    sub_1C66FF4AC(v7, v6, v4, a2);
    uint64_t v9 = v8;
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (unint64_t *)swift_slowAlloc();
    sub_1C65F7DA0(0, v6, v10);
    sub_1C66FF4AC(v10, v6, v4, a2);
    uint64_t v9 = v11;
    swift_release();
    MEMORY[0x1C87A54F0](v10, -1, -1);
  }
  return v9;
}

void sub_1C66FF4AC(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_20:
    if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v12) + 49))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v12) + 49) == 1)
      {
        unint64_t v16 = 0xE300000000000000;
        uint64_t v17 = 6581861;
      }
      else
      {
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x746573746F6ELL;
      }
    }
    else
    {
      unint64_t v16 = 0xE500000000000000;
      uint64_t v17 = 0x7472617473;
    }
    if (a4)
    {
      if (a4 == 1) {
        uint64_t v18 = 6581861;
      }
      else {
        uint64_t v18 = 0x746573746F6ELL;
      }
      if (a4 == 1) {
        unint64_t v19 = 0xE300000000000000;
      }
      else {
        unint64_t v19 = 0xE600000000000000;
      }
    }
    else
    {
      unint64_t v19 = 0xE500000000000000;
      uint64_t v18 = 0x7472617473;
    }
    if (v17 == v18 && v16 == v19)
    {
      swift_bridgeObjectRelease_n();
LABEL_40:
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_43:
        swift_retain();
        sub_1C67A38E0(a1, a2, v25, a3);
        return;
      }
    }
    else
    {
      char v21 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_40;
      }
    }
  }
  int64_t v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v13 >= v26) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v13);
  ++v6;
  if (v14) {
    goto LABEL_19;
  }
  int64_t v6 = v13 + 1;
  if (v13 + 1 >= v26) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v6);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v6 = v13 + 2;
  if (v13 + 2 >= v26) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v6);
  if (v14)
  {
LABEL_19:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
    goto LABEL_20;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v26) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v15);
  if (v14)
  {
    int64_t v6 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v26) {
      goto LABEL_43;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v6);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_45:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_1_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_22()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_19_18()
{
  return sub_1C68E9DC8();
}

uint64_t OUTLINED_FUNCTION_21_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_14@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_25_14()
{
  return v0;
}

void sub_1C66FF804(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTime();
    sub_1C66FFD20();
    sub_1C68ECD98();
    uint64_t v1 = v24;
    uint64_t v23 = v25;
    uint64_t v2 = v26;
    int64_t v3 = v27;
    uint64_t v4 = v28;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_8:
  int64_t v9 = v3;
  unint64_t v10 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!sub_1C68ED2B8()) {
        goto LABEL_42;
      }
      type metadata accessor for DateTime();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v12 = v29;
      swift_unknownObjectRelease();
      int64_t v3 = v9;
      uint64_t v4 = v10;
      if (!v29) {
        goto LABEL_42;
      }
      goto LABEL_27;
    }
    if (!v10) {
      break;
    }
    uint64_t v4 = (v10 - 1) & v10;
    unint64_t v11 = __clz(__rbit64(v10)) | (v9 << 6);
    int64_t v3 = v9;
LABEL_26:
    uint64_t v12 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v12) {
      goto LABEL_42;
    }
LABEL_27:
    uint64_t v15 = *(void *)(v12 + 16);
    if (!v15)
    {
      swift_release();
      goto LABEL_8;
    }
    int v16 = *(unsigned __int8 *)(v15 + 89);
    swift_release();
    int64_t v9 = v3;
    unint64_t v10 = v4;
    if (v16 != 7)
    {
      uint64_t v18 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C65C8558();
        uint64_t v18 = v20;
      }
      unint64_t v19 = *(void *)(v18 + 16);
      if (v19 >= *(void *)(v18 + 24) >> 1)
      {
        sub_1C65C8558();
        uint64_t v18 = v21;
      }
      *(void *)(v18 + 16) = v19 + 1;
      uint64_t v22 = v18;
      *(unsigned char *)(v18 + v19 + 32) = v16;
      goto LABEL_8;
    }
  }
  int64_t v3 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v3 >= v8) {
      goto LABEL_42;
    }
    unint64_t v13 = *(void *)(v23 + 8 * v3);
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v8) {
        goto LABEL_42;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_24;
      }
      int64_t v14 = v9 + 3;
      if (v9 + 3 >= v8) {
        goto LABEL_42;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_24;
      }
      int64_t v14 = v9 + 4;
      if (v9 + 4 >= v8) {
        goto LABEL_42;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13)
      {
LABEL_24:
        int64_t v3 = v14;
      }
      else
      {
        int64_t v3 = v9 + 5;
        if (v9 + 5 >= v8) {
          goto LABEL_42;
        }
        unint64_t v13 = *(void *)(v23 + 8 * v3);
        if (!v13)
        {
          int64_t v17 = v9 + 6;
          while (v17 < v8)
          {
            unint64_t v13 = *(void *)(v23 + 8 * v17++);
            if (v13)
            {
              int64_t v3 = v17 - 1;
              goto LABEL_25;
            }
          }
LABEL_42:
          sub_1C6645058();
          return;
        }
      }
    }
LABEL_25:
    uint64_t v4 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_26;
  }
  __break(1u);
}

INDateComponentsRange __swiftcall DateTime.toINDateComponentsRange()()
{
  OUTLINED_FUNCTION_5_31();
  uint64_t v3 = sub_1C68E9E28();
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16_0();
  uint64_t v7 = sub_1C68E9DD8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_11();
  sub_1C68E9D88();
  sub_1C68E9E18();
  id v11 = sub_1C6607614(v0, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  return (INDateComponentsRange)v11;
}

uint64_t sub_1C66FFC70(uint64_t a1)
{
  sub_1C66FF804(a1);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = (char *)(v1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      v3 |= qword_1C68FA550[v5];
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1C66FFCE0()
{
  unint64_t result = qword_1EA407EE0;
  if (!qword_1EA407EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA407EE0);
  }
  return result;
}

unint64_t sub_1C66FFD20()
{
  unint64_t result = qword_1EA406E80;
  if (!qword_1EA406E80)
  {
    type metadata accessor for DateTime();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA406E80);
  }
  return result;
}

void OUTLINED_FUNCTION_1_46(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_2_40()
{
  JUMPOUT(0x1C87A54F0);
}

_WORD *OUTLINED_FUNCTION_3_32(_WORD *result)
{
  *(void *)(v2 - 96) = v1;
  *unint64_t result = 0;
  return result;
}

void OUTLINED_FUNCTION_6_33()
{
  JUMPOUT(0x1C87A54F0);
}

id OUTLINED_FUNCTION_12_20(uint64_t a1, uint64_t a2)
{
  return sub_1C6608298(a1, a2, 0, 0, 0, v2);
}

uint64_t OUTLINED_FUNCTION_13_17(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

_WORD *OUTLINED_FUNCTION_14_22(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t DateTime.RecurrencePattern.DefinedRecurrencePattern.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C68ED598();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t DateTime.RecurrencePattern.DefinedRecurrencePattern.rawValue.getter()
{
  return qword_1C68FA6C0[*v0];
}

uint64_t sub_1C66FFEDC(char *a1, char *a2)
{
  return sub_1C6616CC8(*a1, *a2);
}

uint64_t sub_1C66FFEE8()
{
  return sub_1C67024D8();
}

uint64_t sub_1C66FFEF0()
{
  return sub_1C6677EE8();
}

uint64_t sub_1C66FFEF8()
{
  return sub_1C680D840();
}

uint64_t sub_1C66FFF00@<X0>(char *a1@<X8>)
{
  return DateTime.RecurrencePattern.DefinedRecurrencePattern.init(rawValue:)(a1);
}

uint64_t sub_1C66FFF0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.RecurrencePattern.DefinedRecurrencePattern.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE800000000000000;
  return result;
}

uint64_t sub_1C66FFF38()
{
  return sub_1C68ECB98();
}

uint64_t sub_1C66FFF98()
{
  return sub_1C68ECB68();
}

unint64_t sub_1C66FFFEC()
{
  unint64_t result = qword_1EA407EE8;
  if (!qword_1EA407EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407EE8);
  }
  return result;
}

unsigned char *_s24DefinedRecurrencePatternOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6700104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.RecurrencePattern.DefinedRecurrencePattern()
{
  return &type metadata for DateTime.RecurrencePattern.DefinedRecurrencePattern;
}

unint64_t sub_1C670013C()
{
  unint64_t result = qword_1EA407EF0;
  if (!qword_1EA407EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407EF0);
  }
  return result;
}

uint64_t DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v16 = OUTLINED_FUNCTION_1_47();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t DateTime.__allocating_init(withDate:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_47();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  return OUTLINED_FUNCTION_7_31(v2);
}

uint64_t DateTime.__allocating_init(occurringIn:)(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_1_47();
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 1;
  *(unsigned char *)(result + 48) = 4;
  return result;
}

void sub_1C6700284(void *a1@<X8>)
{
  *a1 = 0;
}

BOOL static DateTime.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C67002BC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.<= infix(_:_:));
}

BOOL static DateTime.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C67002BC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.< infix(_:_:));
}

BOOL sub_1C67002BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return (a3(a1, a2) & 1) == 0;
}

uint64_t DateTime.__allocating_init(withDate:time:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_1_47();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return OUTLINED_FUNCTION_7_31(v4);
}

uint64_t DateTime.__allocating_init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t result = OUTLINED_FUNCTION_1_47();
  char v13 = *a3;
  char v14 = *a5;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = v13;
  *(void *)(result + 40) = a4;
  *(unsigned char *)(result + 48) = v14;
  *(void *)(result + 56) = a6;
  *(void *)(result + 64) = 0;
  return result;
}

uint64_t DateTime.date.getter()
{
  return swift_retain();
}

void DateTime.definedValue.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t DateTime.recurrencePattern.getter()
{
  return swift_retain();
}

void DateTime.temporalIntent.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

uint64_t DateTime.occurringIn.getter()
{
  return swift_retain();
}

uint64_t sub_1C67003DC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return sub_1C6700458(&v2);
}

uint64_t sub_1C6700414@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(void *)(v1 + 64);
  return result;
}

uint64_t sub_1C6700458(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t DateTime.init(withDate:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = 0;
  return OUTLINED_FUNCTION_4_30();
}

uint64_t DateTime.__allocating_init(withDate:time:occurringIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = (void *)OUTLINED_FUNCTION_1_47();
  v6[2] = a1;
  v6[3] = a2;
  v6[7] = a3;
  v6[8] = 0;
  return OUTLINED_FUNCTION_14_23((uint64_t)v6);
}

uint64_t DateTime.init(withDate:time:occurringIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 56) = a3;
  *(void *)(v3 + 64) = 0;
  *(unsigned char *)(v3 + 32) = 1;
  *(void *)(v3 + 40) = 0;
  return OUTLINED_FUNCTION_10_25();
}

uint64_t DateTime.__allocating_init(withDefinedValue:)()
{
  uint64_t result = OUTLINED_FUNCTION_1_47();
  *(void *)(result + 40) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  *(unsigned char *)(result + 48) = 4;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  return result;
}

uint64_t DateTime.init(withDefinedValue:)()
{
  uint64_t result = v0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 48) = 4;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  return result;
}

uint64_t DateTime.__allocating_init(withTime:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_47();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  return OUTLINED_FUNCTION_7_31(v2);
}

uint64_t DateTime.init(withTime:)(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = a1;
  return OUTLINED_FUNCTION_4_30();
}

uint64_t DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v9 = v8;
  char v16 = *a4;
  char v17 = *a8;
  *(void *)(v9 + 64) = 0;
  char v24 = v16;
  type metadata accessor for DateTime.Time();
  swift_allocObject();
  uint64_t v18 = DateTime.Time.init(withHour:minute:second:meridiem:)(a1, a2, a3, &v24);
  char v23 = v17;
  swift_allocObject();
  uint64_t v19 = DateTime.Time.init(withHour:minute:second:meridiem:)(a5, a6, a7, &v23);
  *(void *)(v9 + 24) = v18;
  type metadata accessor for DateTime();
  uint64_t v20 = OUTLINED_FUNCTION_9();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = v18;
  *(unsigned char *)(v20 + 32) = 1;
  *(void *)(v20 + 40) = 0;
  *(unsigned char *)(v20 + 48) = 4;
  *(_OWORD *)(v20 + 56) = 0u;
  uint64_t v21 = OUTLINED_FUNCTION_9();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = v19;
  *(unsigned char *)(v21 + 32) = 1;
  *(void *)(v21 + 40) = 0;
  *(unsigned char *)(v21 + 48) = 4;
  *(_OWORD *)(v21 + 56) = 0u;
  type metadata accessor for DateTime.DateTimeRange();
  swift_allocObject();
  *(void *)(v9 + 56) = DateTime.DateTimeRange.init(withStartDateTime:endDateTime:)(v20, v21);
  *(void *)(v9 + 16) = 0;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 40) = 0;
  *(unsigned char *)(v9 + 48) = 4;
  swift_retain();
  return v9;
}

uint64_t DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_47();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:)(a1, a2, a3, a4);
  return v8;
}

uint64_t DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5 = v4;
  char v9 = *a4;
  *(void *)(v5 + 64) = 0;
  char v12 = v9;
  type metadata accessor for DateTime.Time();
  swift_allocObject();
  uint64_t v10 = DateTime.Time.init(withHour:minute:second:meridiem:)(a1, a2, a3, &v12);
  *(void *)(v5 + 56) = 0;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = v10;
  *(unsigned char *)(v5 + 32) = 1;
  *(void *)(v5 + 40) = 0;
  *(unsigned char *)(v5 + 48) = 4;
  return v5;
}

uint64_t DateTime.__allocating_init(withDate:occurringIn:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)OUTLINED_FUNCTION_1_47();
  v4[7] = a2;
  v4[8] = 0;
  v4[2] = a1;
  v4[3] = 0;
  return OUTLINED_FUNCTION_14_23((uint64_t)v4);
}

uint64_t DateTime.init(withDate:occurringIn:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a2;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = 1;
  *(void *)(v2 + 40) = 0;
  return OUTLINED_FUNCTION_10_25();
}

uint64_t DateTime.init(occurringIn:)(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 1;
  return OUTLINED_FUNCTION_10_25();
}

uint64_t sub_1C6700850(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 56);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 24);
    if (v4)
    {
      uint64_t v5 = *(void *)(v4 + 24);
      swift_retain();
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v7 = *(void *)(v3 + 32);
    if (v7)
    {
      uint64_t v6 = *(void *)(v7 + 24);
      swift_retain();
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v8 = a1[2];
  type metadata accessor for DateTime();
  uint64_t v9 = OUTLINED_FUNCTION_9();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v5;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 40) = 0;
  *(unsigned char *)(v9 + 48) = 4;
  *(void *)(v9 + 56) = 0;
  *(void *)(v9 + 64) = 0;
  uint64_t v10 = a1[7];
  if (v10 && (uint64_t v11 = *(void *)(v10 + 32)) != 0)
  {
    uint64_t v12 = *(void *)(v11 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = OUTLINED_FUNCTION_9();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v6;
  *(unsigned char *)(v13 + 32) = 1;
  *(void *)(v13 + 40) = 0;
  *(unsigned char *)(v13 + 48) = 4;
  *(void *)(v13 + 56) = 0;
  *(void *)(v13 + 64) = 0;
  char v19 = 38;
  char v18 = 20;
  type metadata accessor for DateTime.DateTimeRange();
  swift_allocObject();
  uint64_t v14 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, v9, v13, 0, 0, &v19, &v18);
  uint64_t v15 = a1[5];
  uint64_t v16 = OUTLINED_FUNCTION_9();
  *(void *)(v16 + 16) = v8;
  *(void *)(v16 + 24) = v5;
  *(unsigned char *)(v16 + 32) = 1;
  *(void *)(v16 + 40) = v15;
  *(unsigned char *)(v16 + 48) = 4;
  *(void *)(v16 + 56) = v14;
  *(void *)(v16 + 64) = 0;
  swift_retain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_1C6700A10(long long *a1)
{
  if (*(void *)(v1 + 16))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C66FAFF8((uint64_t)a1);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(void *)(v1 + 24))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C68B1674((uint64_t)a1);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(void *)(v1 + 40))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C680E39C(a1);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (!*(void *)(v1 + 56)) {
    return OUTLINED_FUNCTION_12_18();
  }
  OUTLINED_FUNCTION_11_21();
  swift_retain();
  sub_1C670DED8((uint64_t)a1);

  return swift_release();
}

uint64_t sub_1C6700B34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701669236 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001C6916C40 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6C61726F706D6574 && a2 == 0xEE00746E65746E49;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6972727563636FLL && a2 == 0xEB000000006E4967;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x80000001C6916C70)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v10 = sub_1C68ED7E8();
            swift_bridgeObjectRelease();
            if (v10) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1C6700E34(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701669236;
      break;
    case 2:
      unint64_t result = 0x5664656E69666564;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6C61726F706D6574;
      break;
    case 5:
      unint64_t result = 0x6E6972727563636FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C6700F30()
{
  return sub_1C6700E34(*v0);
}

uint64_t sub_1C6700F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6700B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C6700F60(uint64_t a1)
{
  unint64_t v2 = sub_1C67018F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6700F9C(uint64_t a1)
{
  unint64_t v2 = sub_1C67018F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C6700FD8(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407EF8);
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C67018F4();
  sub_1C68EDA08();
  type metadata accessor for DateTime.Date();
  sub_1C6701B50(&qword_1EA407F08, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Date);
  OUTLINED_FUNCTION_2_41();
  if (!v1)
  {
    type metadata accessor for DateTime.Time();
    sub_1C6701B50(&qword_1EA407F10, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Time);
    OUTLINED_FUNCTION_2_41();
    sub_1C6701940();
    OUTLINED_FUNCTION_13_18();
    type metadata accessor for DateTime.RecurrencePattern();
    sub_1C6701B50(&qword_1EA407F20, 255, (void (*)(uint64_t))type metadata accessor for DateTime.RecurrencePattern);
    OUTLINED_FUNCTION_2_41();
    sub_1C670198C();
    OUTLINED_FUNCTION_13_18();
    type metadata accessor for DateTime.DateTimeRange();
    sub_1C6701B50(&qword_1EA407E68, 255, (void (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_2_41();
    swift_beginAccess();
    sub_1C67019D8();
    sub_1C68ED758();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1C67012DC()
{
  sub_1C68ED938();
  sub_1C6700A10(v1);
  return sub_1C68ED988();
}

uint64_t DateTime.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DateTime.init(from:)(a1);
  return v2;
}

uint64_t DateTime.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407F38);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v4);
  *(void *)(v1 + 64) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C67018F4();
  sub_1C68ED9E8();
  if (v2)
  {
    type metadata accessor for DateTime();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for DateTime.Date();
    sub_1C6701B50(&qword_1EA407F40, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Date);
    OUTLINED_FUNCTION_0_43();
    *(void *)(v1 + 16) = v8;
    type metadata accessor for DateTime.Time();
    sub_1C6701B50(&qword_1EA407F48, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Time);
    OUTLINED_FUNCTION_0_43();
    *(void *)(v1 + 24) = v8;
    sub_1C6701A24();
    OUTLINED_FUNCTION_17_20();
    sub_1C68ED608();
    *(unsigned char *)(v1 + 32) = v8;
    type metadata accessor for DateTime.RecurrencePattern();
    sub_1C6701B50(&qword_1EA407F58, 255, (void (*)(uint64_t))type metadata accessor for DateTime.RecurrencePattern);
    OUTLINED_FUNCTION_0_43();
    *(void *)(v1 + 40) = v8;
    sub_1C6701A70();
    OUTLINED_FUNCTION_17_20();
    sub_1C68ED608();
    *(unsigned char *)(v1 + 48) = v8;
    type metadata accessor for DateTime.DateTimeRange();
    LOBYTE(v9) = 5;
    sub_1C6701B50(&qword_1EA407EA0, 255, (void (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_0_43();
    *(void *)(v1 + 56) = v8;
    sub_1C6701ABC();
    sub_1C68ED668();
    uint64_t v6 = OUTLINED_FUNCTION_3_33();
    v7(v6);
    swift_beginAccess();
    *(void *)(v1 + 64) = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C6701768()
{
  return sub_1C67012DC();
}

uint64_t sub_1C670178C(long long *a1)
{
  return sub_1C6700A10(a1);
}

uint64_t sub_1C67017B0()
{
  sub_1C68ED938();
  sub_1C6700A10(v1);
  return sub_1C68ED988();
}

BOOL sub_1C67017F0(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.== infix(_:_:)(*a1, *a2);
}

BOOL sub_1C6701814(void **a1, void **a2)
{
  return static DateTime.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1C6701838(void **a1, void **a2)
{
  return static DateTime.<= infix(_:_:)(*a1, *a2);
}

BOOL sub_1C670185C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.>= infix(_:_:)(*a1, *a2);
}

BOOL sub_1C6701880(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.> infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C67018A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DateTime.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C67018D0(void *a1)
{
  return sub_1C6700FD8(a1);
}

unint64_t sub_1C67018F4()
{
  unint64_t result = qword_1EA407F00;
  if (!qword_1EA407F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F00);
  }
  return result;
}

unint64_t sub_1C6701940()
{
  unint64_t result = qword_1EA407F18;
  if (!qword_1EA407F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F18);
  }
  return result;
}

unint64_t sub_1C670198C()
{
  unint64_t result = qword_1EA407F28;
  if (!qword_1EA407F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F28);
  }
  return result;
}

unint64_t sub_1C67019D8()
{
  unint64_t result = qword_1EA407F30;
  if (!qword_1EA407F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F30);
  }
  return result;
}

unint64_t sub_1C6701A24()
{
  unint64_t result = qword_1EA407F50;
  if (!qword_1EA407F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F50);
  }
  return result;
}

unint64_t sub_1C6701A70()
{
  unint64_t result = qword_1EA407F60;
  if (!qword_1EA407F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F60);
  }
  return result;
}

unint64_t sub_1C6701ABC()
{
  unint64_t result = qword_1EA407F68;
  if (!qword_1EA407F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F68);
  }
  return result;
}

uint64_t sub_1C6701B08(uint64_t a1, uint64_t a2)
{
  return sub_1C6701B50(&qword_1EA407F70, a2, (void (*)(uint64_t))type metadata accessor for DateTime);
}

uint64_t sub_1C6701B50(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C6701B98@<X0>(void *a1@<X8>)
{
  return sub_1C6700414(a1);
}

uint64_t method lookup function for DateTime(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DateTime);
}

uint64_t dispatch thunk of DateTime.userDefinedProperties.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DateTime.dateComponents.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:time:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:time:occurringIn:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDefinedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withTime:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:occurringIn:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(occurringIn:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DateTime.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DateTime.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DateTime.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DateTime.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

unsigned char *storeEnumTagSinglePayload for DateTime.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6701EA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.CodingKeys()
{
  return &type metadata for DateTime.CodingKeys;
}

unint64_t sub_1C6701EDC()
{
  unint64_t result = qword_1EA407F78;
  if (!qword_1EA407F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F78);
  }
  return result;
}

unint64_t sub_1C6701F2C()
{
  unint64_t result = qword_1EA407F80;
  if (!qword_1EA407F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F80);
  }
  return result;
}

unint64_t sub_1C6701F7C()
{
  unint64_t result = qword_1EA407F88;
  if (!qword_1EA407F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F88);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_43()
{
  return sub_1C68ED608();
}

uint64_t OUTLINED_FUNCTION_1_47()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_41()
{
  return sub_1C68ED6F8();
}

uint64_t OUTLINED_FUNCTION_3_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_30()
{
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 4;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_31(uint64_t result)
{
  *(unsigned char *)(result + 32) = 1;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 4;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_25()
{
  *(unsigned char *)(v0 + 48) = 4;
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  *(void *)(v0 + 16) = v1;
  uint64_t v6 = v0 + 16 * v4;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v3;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return sub_1C68ED6F8();
}

uint64_t OUTLINED_FUNCTION_14_23(uint64_t result)
{
  *(unsigned char *)(result + 32) = 1;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 4;
  return result;
}

uint64_t OUTLINED_FUNCTION_18_17()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_19()
{
  return swift_retain();
}

unsigned char *_s5BoundOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C670220CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5BoundOMa()
{
  return &_s5BoundON;
}

uint64_t sub_1C6702244()
{
  return sub_1C680CBC4();
}

uint64_t sub_1C6702250()
{
  return sub_1C680CC28();
}

uint64_t sub_1C670225C()
{
  return sub_1C680CA10();
}

uint64_t sub_1C6702268()
{
  return sub_1C6702878();
}

uint64_t sub_1C6702284()
{
  return sub_1C680CC84();
}

uint64_t sub_1C6702290()
{
  return sub_1C6702878();
}

uint64_t sub_1C67022A8(unsigned __int8 a1)
{
  return sub_1C6702980(a1, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1C67022C0()
{
  return sub_1C680D154();
}

uint64_t sub_1C67022CC(uint64_t a1)
{
  return sub_1C680D4F4(0, a1);
}

uint64_t sub_1C67022D8(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6678C74);
}

uint64_t sub_1C67022F0(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6677DAC);
}

uint64_t sub_1C6702308(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6679A44);
}

uint64_t sub_1C6702320()
{
  return sub_1C680D2C4();
}

uint64_t sub_1C670232C()
{
  return sub_1C680CB24();
}

uint64_t sub_1C6702338(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6679324);
}

uint64_t sub_1C6702350(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C66CD478);
}

uint64_t sub_1C6702368(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C66783E0);
}

uint64_t sub_1C6702380(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C65E5AFC);
}

uint64_t sub_1C6702398(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C66798A8);
}

uint64_t sub_1C67023B0()
{
  return sub_1C6702878();
}

uint64_t sub_1C67023CC(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C66E22D8);
}

uint64_t sub_1C67023E4(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6678568);
}

uint64_t sub_1C67023FC()
{
  return sub_1C680D374();
}

uint64_t sub_1C6702408(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C66E30E4);
}

uint64_t sub_1C6702420(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6679D9C);
}

uint64_t sub_1C6702438()
{
  return sub_1C680C958();
}

uint64_t sub_1C6702444()
{
  return sub_1C680CD94();
}

uint64_t sub_1C6702450()
{
  return sub_1C680D6CC();
}

uint64_t sub_1C670245C(uint64_t a1)
{
  return sub_1C680D730(0, a1);
}

uint64_t sub_1C6702468(uint64_t a1)
{
  return sub_1C680D5E8(0, a1);
}

uint64_t sub_1C6702474(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C66799A0);
}

uint64_t sub_1C670248C()
{
  return sub_1C68ED988();
}

uint64_t sub_1C67024D8()
{
  return sub_1C680D840();
}

uint64_t sub_1C67024E4()
{
  return sub_1C680CDF8();
}

uint64_t sub_1C67024F4()
{
  return sub_1C68ED988();
}

uint64_t sub_1C6702530(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C673E854);
}

uint64_t sub_1C6702548()
{
  return sub_1C680CE90();
}

uint64_t sub_1C6702554()
{
  return sub_1C68ED988();
}

uint64_t sub_1C6702598(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C6742980);
}

uint64_t sub_1C67025B0(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6679C34);
}

uint64_t sub_1C67025C8(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C6757128);
}

uint64_t sub_1C67025E0()
{
  return sub_1C680C8B0();
}

uint64_t sub_1C67025EC(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C67B2D5C);
}

uint64_t sub_1C6702604(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6678A48);
}

uint64_t sub_1C670261C(__int16 a1)
{
  return sub_1C68ED988();
}

uint64_t sub_1C6702664(char a1)
{
  return sub_1C680C924(0, a1 & 1);
}

uint64_t sub_1C6702670()
{
  return sub_1C680CF88();
}

uint64_t sub_1C670267C()
{
  return sub_1C680CF10();
}

uint64_t sub_1C6702688()
{
  return sub_1C680D0A0();
}

uint64_t sub_1C6702694()
{
  return sub_1C680C854();
}

uint64_t sub_1C67026A0(uint64_t a1)
{
  return sub_1C680CAA0(0, a1);
}

uint64_t sub_1C67026AC(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6679754);
}

uint64_t sub_1C67026C4()
{
  return sub_1C680C83C();
}

uint64_t sub_1C67026D0()
{
  return sub_1C68ED988();
}

uint64_t sub_1C670271C(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6677D14);
}

uint64_t sub_1C6702734(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C66780F0);
}

uint64_t sub_1C6702750(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6678F64);
}

uint64_t sub_1C6702768()
{
  return sub_1C680D20C();
}

uint64_t sub_1C6702774(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C667A438);
}

uint64_t sub_1C670278C(unsigned __int8 a1)
{
  return sub_1C6702980(a1, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1C67027A4(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6678D40);
}

uint64_t sub_1C67027BC(uint64_t a1)
{
  return sub_1C680D56C(0, a1);
}

uint64_t sub_1C67027C8()
{
  return sub_1C680CCD0();
}

uint64_t sub_1C67027D4(uint64_t a1)
{
  return sub_1C67027EC(a1, (void (*)(uint64_t))sub_1C6885B34);
}

uint64_t sub_1C67027EC(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_1C68ED988();
}

uint64_t sub_1C670283C(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C667831C);
}

uint64_t sub_1C6702854()
{
  return sub_1C6702878();
}

uint64_t sub_1C6702878()
{
  return sub_1C68ED988();
}

uint64_t sub_1C67028C0(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C667A328);
}

uint64_t sub_1C67028D8()
{
  return sub_1C680C7F4();
}

uint64_t sub_1C67028E4(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6679EC4);
}

uint64_t sub_1C67028FC()
{
  return sub_1C680C80C();
}

uint64_t sub_1C6702908(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C667A1AC);
}

uint64_t sub_1C6702920(uint64_t a1)
{
  return sub_1C6702938(a1, (void (*)(unsigned char *, uint64_t))sub_1C6677F28);
}

uint64_t sub_1C6702938(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  OUTLINED_FUNCTION_53();
  a2(v5, a1);
  return sub_1C68ED988();
}

uint64_t sub_1C6702980(unsigned __int8 a1, void (*a2)(void))
{
  return sub_1C68ED988();
}

uint64_t sub_1C67029C8()
{
  return sub_1C68ED988();
}

uint64_t sub_1C6702A08()
{
  return sub_1C680CFFC();
}

uint64_t sub_1C6702A14()
{
  return sub_1C680D7B0();
}

uint64_t sub_1C6702A20()
{
  unint64_t v0 = sub_1C68ED598();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C6702A6C(char a1)
{
  if (!a1) {
    return 0x7472617473;
  }
  if (a1 == 1) {
    return 6581861;
  }
  return 0x746573746F6ELL;
}

uint64_t sub_1C6702AB4(unsigned __int8 *a1, char *a2)
{
  return sub_1C6618CAC(*a1, *a2);
}

uint64_t sub_1C6702AC0()
{
  return sub_1C67024E4();
}

uint64_t sub_1C6702AC8()
{
  return sub_1C667921C();
}

uint64_t sub_1C6702AD0()
{
  return sub_1C680CDF8();
}

uint64_t sub_1C6702AD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C6702A20();
  *a1 = result;
  return result;
}

uint64_t sub_1C6702B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C6702A6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C6702B38()
{
  unint64_t result = qword_1EA407F90;
  if (!qword_1EA407F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407F90);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_48()
{
  return sub_1C6702878();
}

uint64_t OUTLINED_FUNCTION_2_42()
{
  return sub_1C68EC7D8();
}

uint64_t sub_1C6702BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C68E9D18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_15();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = _s19ConvergenceStrategyOMa();
  MEMORY[0x1F4188790](v9 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406750);
  MEMORY[0x1F4188790](v13 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = v15 - v14 + *(int *)(v17 + 56);
  sub_1C65FEDC8(a1, v15 - v14);
  sub_1C65FEDC8(a2, v18);
  switch(__swift_getEnumTagSinglePayload(v16, 3, v4))
  {
    case 1u:
      if (OUTLINED_FUNCTION_0_44() != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (OUTLINED_FUNCTION_0_44() != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (OUTLINED_FUNCTION_0_44() != 3) {
        goto LABEL_9;
      }
LABEL_5:
      sub_1C65FEE2C(v16);
      char v20 = 1;
      break;
    default:
      sub_1C65FEDC8(v16, v12);
      if (OUTLINED_FUNCTION_0_44())
      {
        OUTLINED_FUNCTION_1_2();
        v19();
LABEL_9:
        sub_1C6702E14(v16);
        char v20 = 0;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v18, v4);
        char v20 = sub_1C68E9D08();
        uint64_t v22 = *(void (**)(void))(v5 + 8);
        OUTLINED_FUNCTION_1_2();
        v22();
        OUTLINED_FUNCTION_1_2();
        v22();
        sub_1C65FEE2C(v16);
      }
      break;
  }
  return v20 & 1;
}

uint64_t sub_1C6702E14(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1C6702E74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1C68E9D18();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_1C6702F70(uint64_t a1)
{
  uint64_t v2 = sub_1C68E9D18();
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1C6702FF8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9D18();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 3, v6);
  }
  return a1;
}

void *sub_1C67030B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9D18();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 3, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 3, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 3, v6);
  return a1;
}

void *sub_1C6703200(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9D18();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 3, v6);
  }
  return a1;
}

void *sub_1C67032C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9D18();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 3, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 3, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 3, v6);
  return a1;
}

uint64_t sub_1C6703408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C670341C);
}

uint64_t sub_1C670341C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C68E9D18();
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 4) {
    return EnumTagSinglePayload - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C6703464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C6703478);
}

uint64_t sub_1C6703478(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C68E9D18();

  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1C67034D8(uint64_t a1)
{
  uint64_t v2 = sub_1C68E9D18();

  return __swift_getEnumTagSinglePayload(a1, 3, v2);
}

uint64_t sub_1C670351C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C68E9D18();

  return __swift_storeEnumTagSinglePayload(a1, a2, 3, v4);
}

uint64_t sub_1C6703568()
{
  uint64_t result = sub_1C68E9D18();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_44()
{
  return __swift_getEnumTagSinglePayload(v1, 3, v0);
}

uint64_t _s5GrainOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 13) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v5 = v6 - 14;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s5GrainOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6703754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5GrainOMa()
{
  return &_s5GrainON;
}

BOOL sub_1C670378C(char a1, unsigned __int8 a2)
{
  char v2 = sub_1C6743094(a2, a1);
  return OUTLINED_FUNCTION_20_17(v2);
}

BOOL sub_1C67037B4(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1C67037C8(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

uint64_t sub_1C67037D8()
{
  OUTLINED_FUNCTION_19_20();
  char v4 = v3;
  uint64_t v5 = 0x5453494844445542;
  switch(v6)
  {
    case 1:
      uint64_t v5 = OUTLINED_FUNCTION_8_34();
      break;
    case 2:
      uint64_t v5 = OUTLINED_FUNCTION_14_24();
      break;
    case 3:
      uint64_t v5 = OUTLINED_FUNCTION_12_21();
      break;
    case 4:
      uint64_t v5 = OUTLINED_FUNCTION_13_19();
      break;
    case 5:
      uint64_t v5 = OUTLINED_FUNCTION_26_13();
      break;
    case 6:
      uint64_t v5 = OUTLINED_FUNCTION_6_34();
      break;
    case 7:
      uint64_t v5 = OUTLINED_FUNCTION_0_45();
      break;
    case 8:
      uint64_t v5 = OUTLINED_FUNCTION_16_17();
      break;
    case 9:
      uint64_t v5 = OUTLINED_FUNCTION_15_21();
      break;
    case 10:
      uint64_t v5 = OUTLINED_FUNCTION_7_32();
      break;
    case 11:
      uint64_t v5 = OUTLINED_FUNCTION_22_11();
      break;
    default:
      break;
  }
  switch(v4)
  {
    case 1:
      OUTLINED_FUNCTION_5_32();
      break;
    case 2:
      OUTLINED_FUNCTION_9_29();
      break;
    case 3:
      OUTLINED_FUNCTION_17_21();
      break;
    case 4:
      OUTLINED_FUNCTION_18_18();
      break;
    case 5:
      OUTLINED_FUNCTION_23_15();
      break;
    case 6:
      OUTLINED_FUNCTION_3_34();
      break;
    case 7:
      OUTLINED_FUNCTION_1_49();
      break;
    case 8:
      OUTLINED_FUNCTION_11_24();
      break;
    case 9:
      OUTLINED_FUNCTION_10_26();
      break;
    case 10:
      OUTLINED_FUNCTION_4_31();
      break;
    case 11:
      OUTLINED_FUNCTION_24_14();
      break;
    default:
      break;
  }
  if (v5 == v2 && v0 == 0xE800000000000000)
  {
    OUTLINED_FUNCTION_27_9();
    char v8 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_2_43();
    OUTLINED_FUNCTION_28_9();
    swift_bridgeObjectRelease();
    char v8 = v1 ^ 1;
  }
  return v8 & 1;
}

uint64_t sub_1C67039A0(char a1, char a2)
{
  if (a2) {
    unint64_t v4 = 0xD000000000000012;
  }
  else {
    unint64_t v4 = 0x697375427478656ELL;
  }
  if (a2) {
    unint64_t v5 = 0x80000001C6911F10;
  }
  else {
    unint64_t v5 = 0xEF7961447373656ELL;
  }
  if (a1) {
    unint64_t v6 = 0xD000000000000012;
  }
  else {
    unint64_t v6 = 0x697375427478656ELL;
  }
  if (a1) {
    unint64_t v7 = 0x80000001C6911F10;
  }
  else {
    unint64_t v7 = 0xEF7961447373656ELL;
  }
  if (v4 == v6 && v5 == v7)
  {
    OUTLINED_FUNCTION_27_9();
    char v9 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_2_43();
    OUTLINED_FUNCTION_28_9();
    swift_bridgeObjectRelease();
    char v9 = v2 ^ 1;
  }
  return v9 & 1;
}

BOOL sub_1C6703A48()
{
  OUTLINED_FUNCTION_25_15();
  char v0 = sub_1C68E9AC8();
  return OUTLINED_FUNCTION_20_17(v0);
}

BOOL sub_1C6703A7C()
{
  char v0 = static Contact.< infix(_:_:)();
  return OUTLINED_FUNCTION_20_17(v0);
}

BOOL sub_1C6703AA4(unsigned __int8 a1, char a2)
{
  char v2 = sub_1C6743094(a1, a2);
  return OUTLINED_FUNCTION_20_17(v2);
}

BOOL sub_1C6703AC0(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1C6703AD4(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

uint64_t sub_1C6703AE4(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x5453494844445542;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x5453494844445542;
  switch(v5)
  {
    case 1:
      uint64_t v6 = OUTLINED_FUNCTION_8_34();
      break;
    case 2:
      uint64_t v6 = OUTLINED_FUNCTION_14_24();
      break;
    case 3:
      uint64_t v6 = OUTLINED_FUNCTION_12_21();
      break;
    case 4:
      uint64_t v6 = OUTLINED_FUNCTION_13_19();
      break;
    case 5:
      unint64_t v4 = 0x80000001C6911E60;
      uint64_t v6 = 0xD000000000000010;
      break;
    case 6:
      uint64_t v6 = OUTLINED_FUNCTION_6_34();
      break;
    case 7:
      uint64_t v6 = OUTLINED_FUNCTION_0_45();
      break;
    case 8:
      uint64_t v6 = OUTLINED_FUNCTION_16_17();
      break;
    case 9:
      uint64_t v6 = OUTLINED_FUNCTION_15_21();
      break;
    case 10:
      uint64_t v6 = OUTLINED_FUNCTION_7_32();
      break;
    case 11:
      uint64_t v6 = OUTLINED_FUNCTION_22_11();
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_5_32();
      break;
    case 2:
      OUTLINED_FUNCTION_9_29();
      break;
    case 3:
      OUTLINED_FUNCTION_17_21();
      break;
    case 4:
      OUTLINED_FUNCTION_18_18();
      break;
    case 5:
      OUTLINED_FUNCTION_23_15();
      break;
    case 6:
      OUTLINED_FUNCTION_3_34();
      break;
    case 7:
      OUTLINED_FUNCTION_1_49();
      break;
    case 8:
      OUTLINED_FUNCTION_11_24();
      break;
    case 9:
      OUTLINED_FUNCTION_10_26();
      break;
    case 10:
      OUTLINED_FUNCTION_4_31();
      break;
    case 11:
      OUTLINED_FUNCTION_24_14();
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == 0xE800000000000000)
  {
    OUTLINED_FUNCTION_27_9();
    char v8 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_2_43();
    OUTLINED_FUNCTION_28_9();
    swift_bridgeObjectRelease();
    char v8 = v2 ^ 1;
  }
  return v8 & 1;
}

uint64_t sub_1C6703CC8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD000000000000012;
  }
  else {
    unint64_t v4 = 0x697375427478656ELL;
  }
  if (v3) {
    unint64_t v5 = 0xEF7961447373656ELL;
  }
  else {
    unint64_t v5 = 0x80000001C6911F10;
  }
  if (a2) {
    unint64_t v6 = 0xD000000000000012;
  }
  else {
    unint64_t v6 = 0x697375427478656ELL;
  }
  if (a2) {
    unint64_t v7 = 0x80000001C6911F10;
  }
  else {
    unint64_t v7 = 0xEF7961447373656ELL;
  }
  if (v4 == v6 && v5 == v7)
  {
    OUTLINED_FUNCTION_27_9();
    char v9 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_2_43();
    OUTLINED_FUNCTION_28_9();
    swift_bridgeObjectRelease();
    char v9 = v2 ^ 1;
  }
  return v9 & 1;
}

BOOL sub_1C6703D6C()
{
  OUTLINED_FUNCTION_25_15();
  char v0 = sub_1C68E9AC8();
  return OUTLINED_FUNCTION_20_17(v0);
}

BOOL sub_1C6703DA0()
{
  char v0 = static Contact.< infix(_:_:)();
  return OUTLINED_FUNCTION_20_17(v0);
}

uint64_t sub_1C6703DBC(char a1, unsigned __int8 a2)
{
  return sub_1C6743094(a2, a1);
}

BOOL sub_1C6703DCC(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1C6703DE0(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

uint64_t sub_1C6703DF0()
{
  OUTLINED_FUNCTION_19_20();
  char v3 = v2;
  uint64_t v4 = 0x5453494844445542;
  switch(v5)
  {
    case 1:
      uint64_t v4 = OUTLINED_FUNCTION_8_34();
      break;
    case 2:
      uint64_t v4 = OUTLINED_FUNCTION_14_24();
      break;
    case 3:
      uint64_t v4 = OUTLINED_FUNCTION_12_21();
      break;
    case 4:
      uint64_t v4 = OUTLINED_FUNCTION_13_19();
      break;
    case 5:
      uint64_t v4 = OUTLINED_FUNCTION_26_13();
      break;
    case 6:
      uint64_t v4 = OUTLINED_FUNCTION_6_34();
      break;
    case 7:
      uint64_t v4 = OUTLINED_FUNCTION_0_45();
      break;
    case 8:
      uint64_t v4 = OUTLINED_FUNCTION_16_17();
      break;
    case 9:
      uint64_t v4 = OUTLINED_FUNCTION_15_21();
      break;
    case 10:
      uint64_t v4 = OUTLINED_FUNCTION_7_32();
      break;
    case 11:
      uint64_t v4 = OUTLINED_FUNCTION_22_11();
      break;
    default:
      break;
  }
  switch(v3)
  {
    case 1:
      OUTLINED_FUNCTION_5_32();
      break;
    case 2:
      OUTLINED_FUNCTION_9_29();
      break;
    case 3:
      OUTLINED_FUNCTION_17_21();
      break;
    case 4:
      OUTLINED_FUNCTION_18_18();
      break;
    case 5:
      OUTLINED_FUNCTION_23_15();
      break;
    case 6:
      OUTLINED_FUNCTION_3_34();
      break;
    case 7:
      OUTLINED_FUNCTION_1_49();
      break;
    case 8:
      OUTLINED_FUNCTION_11_24();
      break;
    case 9:
      OUTLINED_FUNCTION_10_26();
      break;
    case 10:
      OUTLINED_FUNCTION_4_31();
      break;
    case 11:
      OUTLINED_FUNCTION_24_14();
      break;
    default:
      break;
  }
  if (v4 == v1 && v0 == 0xE800000000000000) {
    char v7 = 0;
  }
  else {
    char v7 = OUTLINED_FUNCTION_2_43();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C6703FBC(char a1, char a2)
{
  if (a2) {
    unint64_t v3 = 0xD000000000000012;
  }
  else {
    unint64_t v3 = 0x697375427478656ELL;
  }
  if (a2) {
    unint64_t v4 = 0x80000001C6911F10;
  }
  else {
    unint64_t v4 = 0xEF7961447373656ELL;
  }
  if (a1) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 0x697375427478656ELL;
  }
  if (a1) {
    unint64_t v6 = 0x80000001C6911F10;
  }
  else {
    unint64_t v6 = 0xEF7961447373656ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = OUTLINED_FUNCTION_2_43();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C6704068()
{
  OUTLINED_FUNCTION_25_15();

  return sub_1C68E9AC8();
}

BOOL sub_1C67040A4()
{
  sub_1C65C74BC();
  uint64_t v0 = OUTLINED_FUNCTION_83_0();
  if (v0 == -1) {
    return 1;
  }
  if (v0 == 1) {
    return 0;
  }
  return OUTLINED_FUNCTION_83_0() == -1;
}

void sub_1C6704140()
{
  qword_1EA442780 = (uint64_t)&unk_1F2170020;
}

void sub_1C6704154()
{
  qword_1EA442788 = (uint64_t)&unk_1F2170048;
}

BOOL sub_1C6704168(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t sub_1C6704178(uint64_t result)
{
  return result;
}

unint64_t sub_1C6704180(unint64_t result)
{
  if (result >= 0xE) {
    return 14;
  }
  return result;
}

unint64_t sub_1C6704190@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1C6704180(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C67041BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C6704178(*v1);
  *a1 = result;
  return result;
}

BOOL sub_1C67041E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C6704168(*a1, *a2);
}

BOOL sub_1C67041F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C67037C8(*a1, *a2);
}

BOOL sub_1C6704200(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C6703AD4(*a1, *a2);
}

BOOL sub_1C670420C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C6703DE0(*a1, *a2);
}

unint64_t sub_1C670421C()
{
  unint64_t result = qword_1EA407FA8;
  if (!qword_1EA407FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407FA8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_45()
{
  return 0x4149524F47455247;
}

uint64_t OUTLINED_FUNCTION_2_43()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_6_34()
{
  return 0x43494D414C5349;
}

uint64_t OUTLINED_FUNCTION_7_32()
{
  return 0x4E414953524550;
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  return 0x4553454E494843;
}

uint64_t OUTLINED_FUNCTION_12_21()
{
  return 0x49524A4948;
}

uint64_t OUTLINED_FUNCTION_13_19()
{
  return 0x55444E4948;
}

uint64_t OUTLINED_FUNCTION_14_24()
{
  return 0x574552424548;
}

uint64_t OUTLINED_FUNCTION_15_21()
{
  return 0x4E41494C554ALL;
}

uint64_t OUTLINED_FUNCTION_16_17()
{
  return 0x4553454E4150414ALL;
}

BOOL OUTLINED_FUNCTION_20_17(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t OUTLINED_FUNCTION_22_11()
{
  return 4411218;
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  return type metadata accessor for LearnedDisambiguation();
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return swift_bridgeObjectRelease_n();
}

unsigned char *_s7MeasureOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6704578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7MeasureOMa()
{
  return &_s7MeasureON;
}

unint64_t sub_1C67045B4()
{
  unint64_t result = qword_1EA407FB0;
  if (!qword_1EA407FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407FB0);
  }
  return result;
}

uint64_t _s6SourceOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD7)
  {
    unsigned int v2 = a2 + 41;
    if (a2 + 41 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 41;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 41;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C67046B0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 41;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 0x26) {
    unsigned int v8 = v7 - 37;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 5) {
    return v8 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *_s6SourceOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 41;
  if (a3 + 41 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xD7) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xD6)
  {
    unsigned int v7 = ((a2 - 215) >> 8) + 1;
    *unint64_t result = a2 + 41;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C6704798);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 41;
        break;
    }
  }
  return result;
}

uint64_t sub_1C67047C0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x26) {
    return v1 - 37;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1C67047D4(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 37;
  }
  return result;
}

ValueMetadata *_s6SourceOMa()
{
  return &_s6SourceON;
}

BOOL sub_1C67047F4(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case '&':
      if (v2 == 38) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case '\'':
      if (v2 != 39) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case '(':
      if (v2 != 40) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case ')':
      if (v2 != 41) {
        goto LABEL_11;
      }
LABEL_9:
      BOOL result = 1;
      break;
    default:
      if ((v2 - 38) >= 4) {
        BOOL result = *a1 == v2;
      }
      else {
LABEL_11:
      }
        BOOL result = 0;
      break;
  }
  return result;
}

uint64_t _s5ValueOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C65F94D4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C65F950C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s5ValueOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C65F950C(v5, v7, v6, v8);
  return a1;
}

uint64_t _s5ValueOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFA && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 6) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s5ValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C67049EC(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 6;
  if (a2 >= 6)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 6;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *_s5ValueOMa()
{
  return &_s5ValueON;
}

unint64_t sub_1C6704A1C()
{
  unint64_t result = qword_1EA407FB8;
  if (!qword_1EA407FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407FB8);
  }
  return result;
}

uint64_t sub_1C6704A68(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 24);
  double v5 = *(double *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  double v8 = *(double *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  int v11 = *(unsigned __int8 *)(a2 + 24);
  switch(v2)
  {
    case 0:
      if (v11) {
        return 0;
      }
      return v5 == v8;
    case 1:
      if (v11 != 1) {
        return 0;
      }
      return ((LODWORD(v8) ^ LODWORD(v5)) & 1) == 0;
    case 2:
      if (v11 != 2) {
        return 0;
      }
      BOOL v15 = (v10 & 1) == 0 && v6 == v9;
      if (*(void *)&v5 == *(void *)&v8 && (v7 & 1) == 0) {
        return v15;
      }
      else {
        return (*(void *)&v5 == *(void *)&v8) & v10;
      }
    case 3:
      if (v11 != 3) {
        return 0;
      }
      if (*(void *)&v5 == *(void *)&v8 && v6 == v9)
      {
        if (v10 != v7) {
          return 0;
        }
      }
      else
      {
        char v18 = sub_1C68ED7E8();
        uint64_t result = 0;
        if ((v18 & 1) == 0 || v10 != v7) {
          return result;
        }
      }
      uint64_t result = (v10 & 0xFF00) == 0x1400 && (v7 & 0xFF00) == 5120;
      if ((v7 & 0xFF00) != 0x1400 && (v10 & 0xFF00) != 5120) {
        return ((v10 ^ v7) & 0xFF00) == 0;
      }
      return result;
    case 4:
      if (v11 != 4) {
        return 0;
      }
      return sub_1C6616B74(LOBYTE(v5), SLOBYTE(v8));
    case 5:
      if (v11 != 5) {
        return 0;
      }
      if (v5 != v8 || (v9 ^ v6) != 0) {
        return 0;
      }
      uint64_t v20 = *(void *)(a1 + 16);
      return sub_1C680DF88(v20, v10);
    case 6:
      if (v6 | *(void *)&v5 | v7) {
        BOOL v21 = 0;
      }
      else {
        BOOL v21 = v11 == 6;
      }
      return v21 && (v9 | *(void *)&v8 | v10) == 0;
    default:
      return 0;
  }
}

uint64_t sub_1C6704C78()
{
  return sub_1C68ED988();
}

uint64_t sub_1C6704CE0()
{
  return sub_1C68ED988();
}

int64_t sub_1C6704D38(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v45 = a3;
  uint64_t v44 = sub_1C68E9358();
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v42 = (char *)v37 - v10;
  uint64_t v41 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1_15();
  uint64_t v46 = v15 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!v16) {
    return v17;
  }
  v37[0] = v3;
  uint64_t v47 = MEMORY[0x1E4FBC860];
  sub_1C669FD24(0, v16, 0);
  int64_t result = sub_1C66014C8(a1);
  int64_t v19 = result;
  uint64_t v20 = v6;
  int v22 = v21;
  char v24 = v23 & 1;
  uint64_t v39 = v20;
  uint64_t v40 = a1 + 56;
  v37[3] = v20 + 32;
  v37[4] = v20 + 16;
  v37[1] = v12 + 32;
  v37[2] = v20 + 8;
  uint64_t v25 = a1;
  uint64_t v38 = a1;
  uint64_t v26 = v20;
  while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(unsigned char *)(v25 + 32))
  {
    if (((*(void *)(v40 + (((unint64_t)v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v25 + 36) != v22) {
      goto LABEL_16;
    }
    uint64_t v27 = v12;
    int64_t v28 = *(void *)(v25 + 48) + *(void *)(v26 + 72) * v19;
    uint64_t v29 = v42;
    uint64_t v30 = v44;
    (*(void (**)(char *, int64_t, uint64_t))(v26 + 16))(v42, v28, v44);
    uint64_t v31 = v43;
    uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v43, v29, v30);
    v45(v32);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v30);
    uint64_t v17 = v47;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C669FD24(0, *(void *)(v17 + 16) + 1, 1);
      uint64_t v17 = v47;
    }
    unint64_t v34 = *(void *)(v17 + 16);
    unint64_t v33 = *(void *)(v17 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1C669FD24(v33 > 1, v34 + 1, 1);
      uint64_t v17 = v47;
    }
    *(void *)(v17 + 16) = v34 + 1;
    uint64_t v12 = v27;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v17+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v34, v46, v41);
    uint64_t v47 = v17;
    uint64_t v25 = v38;
    int64_t result = sub_1C66014CC(v19, v22, v24 & 1, v38);
    int64_t v19 = result;
    int v22 = v35;
    char v24 = v36 & 1;
    if (!--v16)
    {
      sub_1C6621BBC(result, v35, v36 & 1);
      return v17;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C6705068(uint64_t a1, unsigned char *a2)
{
  if (*(unsigned __int8 *)(a1 + 16) == a2[16]
    && *(unsigned __int8 *)(a1 + 50) == a2[50]
    && (uint64_t v4 = *(void *)(a1 + 40),
        char v5 = *(unsigned char *)(a1 + 48),
        long long v9 = *(_OWORD *)(a1 + 24),
        uint64_t v10 = v4,
        char v11 = v5,
        OUTLINED_FUNCTION_22_12(),
        (sub_1C6704A68((uint64_t)&v9, (uint64_t)&v8) & 1) != 0)
    && (sub_1C6618CAC(*(unsigned char *)(a1 + 49), a2[49]) & 1) != 0)
  {
    char v6 = *(unsigned char *)(a1 + 54) ^ a2[54] ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C6705190()
{
  return sub_1C68ED988();
}

uint64_t sub_1C67051D0()
{
  return sub_1C6705190();
}

uint64_t sub_1C67051F4()
{
  return sub_1C65F5C58();
}

uint64_t sub_1C6705218()
{
  return sub_1C68ED988();
}

uint64_t sub_1C6705258(uint64_t *a1, unsigned char **a2)
{
  return sub_1C6705068(*a1, *a2) & 1;
}

uint64_t OUTLINED_FUNCTION_2_44()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_4_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return sub_1C68E9E28();
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_12_22()
{
  return sub_1C68E9648();
}

uint64_t OUTLINED_FUNCTION_13_20(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1C68E9DD8();
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  return sub_1C68ED4C8();
}

uint64_t OUTLINED_FUNCTION_16_18()
{
  return sub_1C68E9DB8();
}

char *OUTLINED_FUNCTION_17_22(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  return sub_1C68E9698();
}

__n128 OUTLINED_FUNCTION_22_12()
{
  return *(__n128 *)(v0 + 24);
}

double OUTLINED_FUNCTION_24_15()
{
  return 9.22337204e18;
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_30_11()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t sub_1C670564C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0xC000000000000001) != 0)
  {
    sub_1C68ED238();
    type metadata accessor for DateTime();
    sub_1C65F5EF0((unint64_t *)&qword_1EA406E80, (void (*)(uint64_t))type metadata accessor for DateTime);
    sub_1C68ECD98();
    int64_t result = v10;
    uint64_t v3 = v11;
    long long v4 = v12;
    uint64_t v5 = v13;
  }
  else
  {
    uint64_t v6 = -1;
    uint64_t v7 = -1 << *(unsigned char *)(result + 32);
    uint64_t v8 = ~v7;
    uint64_t v3 = result + 56;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v6 = ~(-1 << v9);
    }
    uint64_t v5 = v6 & *(void *)(result + 56);
    long long v4 = (unint64_t)v8;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1C670573C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C676B1A0();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1C6705B08(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C67057A8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTimeConstraint();
    sub_1C65F5EF0((unint64_t *)&qword_1EA406760, (void (*)(uint64_t))type metadata accessor for DateTimeConstraint);
    uint64_t result = sub_1C68ECD98();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    int64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v12 = v4;
    goto LABEL_29;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v17 + 8 * v14);
      int64_t v12 = v4 + 1;
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 2;
      if (v4 + 2 < v9)
      {
        unint64_t v15 = *(void *)(v17 + 8 * v12);
        if (v15) {
          goto LABEL_28;
        }
        int64_t v12 = v4 + 3;
        if (v4 + 3 < v9)
        {
          unint64_t v15 = *(void *)(v17 + 8 * v12);
          if (v15) {
            goto LABEL_28;
          }
          int64_t v12 = v4 + 4;
          if (v4 + 4 < v9)
          {
            unint64_t v15 = *(void *)(v17 + 8 * v12);
            if (v15) {
              goto LABEL_28;
            }
            int64_t v12 = v4 + 5;
            if (v4 + 5 < v9)
            {
              unint64_t v15 = *(void *)(v17 + 8 * v12);
              if (!v15)
              {
                int64_t v16 = v4 + 6;
                while (v16 < v9)
                {
                  unint64_t v15 = *(void *)(v17 + 8 * v16++);
                  if (v15)
                  {
                    int64_t v12 = v16 - 1;
                    goto LABEL_28;
                  }
                }
                goto LABEL_33;
              }
LABEL_28:
              uint64_t v10 = (v15 - 1) & v15;
              unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
              uint64_t v13 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
              swift_retain();
              if (v13)
              {
                do
                {
                  if (*(unsigned char *)(v13 + 50) == 3) {
                    break;
                  }
                  uint64_t result = swift_release();
                  int64_t v4 = v12;
                  unint64_t v5 = v10;
                  if ((v1 & 0x8000000000000000) == 0) {
                    goto LABEL_8;
                  }
LABEL_10:
                  if (!sub_1C68ED2B8()) {
                    goto LABEL_33;
                  }
                  type metadata accessor for DateTimeConstraint();
                  swift_unknownObjectRetain();
                  swift_dynamicCast();
                  uint64_t v13 = v23;
                  swift_unknownObjectRelease();
                  int64_t v12 = v4;
                  uint64_t v10 = v5;
                }
                while (v23);
              }
              goto LABEL_34;
            }
          }
        }
      }
    }
LABEL_33:
    uint64_t v13 = 0;
LABEL_34:
    sub_1C6645058();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C6705A70(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1C670564C(v3, (uint64_t)&v7);
  sub_1C681601C();
  if (v4)
  {
    do
    {
      a2();
      swift_release();
      sub_1C681601C();
    }
    while (v5);
  }
  return sub_1C6645058();
}

uint64_t sub_1C6705B08(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C68ED798();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1C6706108(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1C666E5F8(v3 / 2);
  uint64_t v81 = a1;
  uint64_t v82 = result;
  uint64_t v84 = v3;
  uint64_t v85 = v6;
  if (v3 <= 0)
  {
    uint64_t v86 = MEMORY[0x1E4FBC860];
    unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v20 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v84 >= -1)
      {
        *(void *)(v82 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v74 = *v81;
    while (1)
    {
      unint64_t v75 = v20 - 2;
      if (v20 < 2) {
        break;
      }
      if (!v74) {
        goto LABEL_133;
      }
      uint64_t v76 = v86;
      uint64_t v77 = *(void *)(v86 + 32 + 16 * v75);
      uint64_t v78 = *(void *)(v86 + 32 + 16 * (v20 - 1) + 8);
      uint64_t result = sub_1C6706178((char *)(v74 + v77), (char *)(v74 + *(void *)(v86 + 32 + 16 * (v20 - 1))), v74 + v78, v85);
      if (v1) {
        goto LABEL_86;
      }
      if (v78 < v77) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C676B0EC();
        uint64_t v76 = result;
      }
      if (v75 >= *(void *)(v76 + 16)) {
        goto LABEL_120;
      }
      uint64_t v79 = (void *)(v76 + 32 + 16 * v75);
      *uint64_t v79 = v77;
      v79[1] = v78;
      unint64_t v80 = *(void *)(v76 + 16);
      if (v20 > v80) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v76 + 32 + 16 * (v20 - 1)), (const void *)(v76 + 32 + 16 * v20), 16 * (v80 - v20));
      uint64_t v86 = v76;
      *(void *)(v76 + 16) = v80 - 1;
      unint64_t v20 = v80 - 1;
      if (v80 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = MEMORY[0x1E4FBC860];
  uint64_t v83 = v5;
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 < v3)
    {
      uint64_t v10 = *(char *)(v8 + v7);
      unint64_t v11 = qword_1C68FAFD0[v10];
      unint64_t v12 = qword_1C68FAFD0[*(char *)(v8 + v9)];
      uint64_t v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        while (v11 < v12 != qword_1C68FAFD0[*(char *)(v8 + v7)] >= qword_1C68FAFD0[(char)v10])
        {
          LOBYTE(v10) = *(unsigned char *)(v8 + v7++);
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v9) {
          goto LABEL_126;
        }
        if (v9 < v7)
        {
          uint64_t v13 = v7 - 1;
          uint64_t v14 = v9;
          do
          {
            if (v14 != v13)
            {
              if (!v8) {
                goto LABEL_132;
              }
              char v15 = *(unsigned char *)(v8 + v14);
              *(unsigned char *)(v8 + v14) = *(unsigned char *)(v8 + v13);
              *(unsigned char *)(v8 + v13) = v15;
            }
            BOOL v51 = ++v14 < v13--;
          }
          while (v51);
        }
      }
    }
    if (v7 >= v3) {
      goto LABEL_25;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_123;
    }
    if (v7 - v9 >= v5) {
      goto LABEL_25;
    }
    uint64_t v16 = v9 + v5;
    if (__OFADD__(v9, v5)) {
      goto LABEL_127;
    }
    if (v16 >= v3) {
      uint64_t v16 = v3;
    }
    if (v16 < v9) {
      goto LABEL_128;
    }
    if (v7 == v16)
    {
LABEL_25:
      uint64_t v17 = v86;
    }
    else
    {
      int64_t v68 = (unsigned char *)(v8 + v7);
      uint64_t v17 = v86;
      do
      {
        char v69 = *(unsigned char *)(v8 + v7);
        unint64_t v70 = qword_1C68FAFD0[v69];
        uint64_t v71 = v9;
        uint64_t v72 = v68;
        do
        {
          uint64_t v73 = (char)*(v72 - 1);
          if (v70 >= qword_1C68FAFD0[v73]) {
            break;
          }
          if (!v8) {
            goto LABEL_130;
          }
          *uint64_t v72 = v73;
          *--uint64_t v72 = v69;
          ++v71;
        }
        while (v7 != v71);
        ++v7;
        ++v68;
      }
      while (v7 != v16);
      uint64_t v7 = v16;
    }
    if (v7 < v9) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C65C8578(0, *(void *)(v17 + 16) + 1, 1, (char *)v17);
      uint64_t v17 = result;
    }
    unint64_t v19 = *(void *)(v17 + 16);
    unint64_t v18 = *(void *)(v17 + 24);
    unint64_t v20 = v19 + 1;
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C65C8578((char *)(v18 > 1), v19 + 1, 1, (char *)v17);
      uint64_t v17 = result;
    }
    *(void *)(v17 + 16) = v20;
    uint64_t v21 = v17 + 32;
    unint64_t v22 = (uint64_t *)(v17 + 32 + 16 * v19);
    uint64_t *v22 = v9;
    v22[1] = v7;
    uint64_t v86 = v17;
    if (v19) {
      break;
    }
    unint64_t v20 = 1;
LABEL_74:
    uint64_t v5 = v83;
    uint64_t v3 = v84;
    if (v7 >= v84) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v23 = v20 - 1;
    if (v20 >= 4)
    {
      unint64_t v28 = v21 + 16 * v20;
      uint64_t v29 = *(void *)(v28 - 64);
      uint64_t v30 = *(void *)(v28 - 56);
      BOOL v34 = __OFSUB__(v30, v29);
      uint64_t v31 = v30 - v29;
      if (v34) {
        goto LABEL_107;
      }
      uint64_t v33 = *(void *)(v28 - 48);
      uint64_t v32 = *(void *)(v28 - 40);
      BOOL v34 = __OFSUB__(v32, v33);
      uint64_t v26 = v32 - v33;
      char v27 = v34;
      if (v34) {
        goto LABEL_108;
      }
      unint64_t v35 = v20 - 2;
      char v36 = (uint64_t *)(v21 + 16 * (v20 - 2));
      uint64_t v38 = *v36;
      uint64_t v37 = v36[1];
      BOOL v34 = __OFSUB__(v37, v38);
      uint64_t v39 = v37 - v38;
      if (v34) {
        goto LABEL_109;
      }
      BOOL v34 = __OFADD__(v26, v39);
      uint64_t v40 = v26 + v39;
      if (v34) {
        goto LABEL_111;
      }
      if (v40 >= v31)
      {
        uint64_t v58 = (uint64_t *)(v21 + 16 * v23);
        uint64_t v60 = *v58;
        uint64_t v59 = v58[1];
        BOOL v34 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v34) {
          goto LABEL_117;
        }
        BOOL v51 = v26 < v61;
        goto LABEL_63;
      }
    }
    else
    {
      if (v20 != 3)
      {
        uint64_t v52 = *(void *)(v17 + 32);
        uint64_t v53 = *(void *)(v17 + 40);
        BOOL v34 = __OFSUB__(v53, v52);
        uint64_t v45 = v53 - v52;
        char v46 = v34;
        goto LABEL_57;
      }
      uint64_t v25 = *(void *)(v17 + 32);
      uint64_t v24 = *(void *)(v17 + 40);
      BOOL v34 = __OFSUB__(v24, v25);
      uint64_t v26 = v24 - v25;
      char v27 = v34;
    }
    if (v27) {
      goto LABEL_110;
    }
    unint64_t v35 = v20 - 2;
    uint64_t v41 = (uint64_t *)(v21 + 16 * (v20 - 2));
    uint64_t v43 = *v41;
    uint64_t v42 = v41[1];
    BOOL v44 = __OFSUB__(v42, v43);
    uint64_t v45 = v42 - v43;
    char v46 = v44;
    if (v44) {
      goto LABEL_112;
    }
    uint64_t v47 = (uint64_t *)(v21 + 16 * v23);
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    BOOL v34 = __OFSUB__(v48, v49);
    uint64_t v50 = v48 - v49;
    if (v34) {
      goto LABEL_114;
    }
    if (__OFADD__(v45, v50)) {
      goto LABEL_116;
    }
    if (v45 + v50 >= v26)
    {
      BOOL v51 = v26 < v50;
LABEL_63:
      if (v51) {
        unint64_t v23 = v35;
      }
      goto LABEL_65;
    }
LABEL_57:
    if (v46) {
      goto LABEL_113;
    }
    uint64_t v54 = (uint64_t *)(v21 + 16 * v23);
    uint64_t v56 = *v54;
    uint64_t v55 = v54[1];
    BOOL v34 = __OFSUB__(v55, v56);
    uint64_t v57 = v55 - v56;
    if (v34) {
      goto LABEL_115;
    }
    if (v57 < v45) {
      goto LABEL_74;
    }
LABEL_65:
    unint64_t v62 = v23 - 1;
    if (v23 - 1 >= v20)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    int64_t v63 = (uint64_t *)(v21 + 16 * v62);
    uint64_t v64 = *v63;
    unint64_t v65 = (void *)(v21 + 16 * v23);
    uint64_t v66 = v65[1];
    uint64_t result = sub_1C6706178((char *)(v8 + *v63), (char *)(v8 + *v65), v8 + v66, v85);
    if (v1) {
      break;
    }
    if (v66 < v64) {
      goto LABEL_104;
    }
    if (v23 > *(void *)(v86 + 16)) {
      goto LABEL_105;
    }
    *int64_t v63 = v64;
    *(void *)(v21 + 16 * v62 + 8) = v66;
    unint64_t v67 = *(void *)(v86 + 16);
    if (v23 >= v67) {
      goto LABEL_106;
    }
    uint64_t v17 = v86;
    unint64_t v20 = v67 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v21 + 16 * v23), v65 + 2, 16 * (v67 - 1 - v23));
    *(void *)(v86 + 16) = v67 - 1;
    if (v67 <= 2) {
      goto LABEL_74;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v84 < -1) {
    goto LABEL_125;
  }
  *(void *)(v82 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C6706108(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = (unsigned char *)(*a4 + a3);
    while (2)
    {
      char v6 = *(unsigned char *)(v4 + a3);
      unint64_t v7 = qword_1C68FAFD0[v6];
      uint64_t v8 = result;
      uint64_t v9 = v5;
      do
      {
        uint64_t v10 = (char)*(v9 - 1);
        if (v7 >= qword_1C68FAFD0[v10]) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        unsigned char *v9 = v10;
        *--uint64_t v9 = v6;
        ++v8;
      }
      while (a3 != v8);
      ++a3;
      ++v5;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C6706178(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  char v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = a3 - (void)a2;
  if (a2 - a1 >= (uint64_t)(a3 - (void)a2))
  {
    sub_1C669C554(a2, a3 - (void)a2, a4);
    uint64_t v10 = &v4[v9];
    if (v7 >= v6 || v9 < 1) {
      goto LABEL_43;
    }
    char v15 = (char *)(a3 - 1);
    while (1)
    {
      uint64_t v16 = *(v10 - 1);
      uint64_t v17 = v15 + 1;
      if (qword_1C68FAFD0[v16] >= qword_1C68FAFD0[*(v6 - 1)])
      {
        if (v17 != v10 || v15 >= v10)
        {
          --v10;
          goto LABEL_38;
        }
        --v10;
      }
      else
      {
        if (v17 != v6 || v15 >= v6)
        {
          LOBYTE(v16) = *--v6;
LABEL_38:
          *char v15 = v16;
          goto LABEL_39;
        }
        --v6;
      }
LABEL_39:
      --v15;
      if (v6 <= v7 || v10 <= v4) {
        goto LABEL_43;
      }
    }
  }
  sub_1C669C554(a1, a2 - a1, a4);
  uint64_t v10 = &v4[v8];
  if ((unint64_t)v6 < a3 && v8 >= 1)
  {
    do
    {
      uint64_t v12 = *v6;
      if (qword_1C68FAFD0[v12] >= qword_1C68FAFD0[*v4])
      {
        if (v7 == v4)
        {
          ++v4;
          goto LABEL_14;
        }
        LOBYTE(v12) = *v4++;
      }
      else
      {
        if (v7 == v6)
        {
          ++v6;
          goto LABEL_14;
        }
        ++v6;
      }
      char *v7 = v12;
LABEL_14:
      ++v7;
    }
    while (v4 < v10 && (unint64_t)v6 < a3);
  }
  char v6 = v7;
LABEL_43:
  sub_1C669C554(v4, v10 - v4, v6);
  return 1;
}

uint64_t sub_1C6706320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v23 = &type metadata for DefinedTimeStore;
  uint64_t v24 = &off_1F2179A78;
  uint64_t v7 = MEMORY[0x1E4FBC870];
  uint64_t v21 = MEMORY[0x1E4FBC870];
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0)
  {
    if (!sub_1C68ED528()) {
      goto LABEL_10;
    }
    sub_1C67FAECC(MEMORY[0x1E4FBC860]);
  }
  while (1)
  {
    uint64_t v20 = v7;
    MEMORY[0x1F4188790](v7);
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1C6705A70(v8, (void (*)(void))sub_1C6707614);
    swift_bridgeObjectRelease();
    uint64_t v9 = v21;
    if (!*(void *)(v21 + 16)) {
      break;
    }
    swift_bridgeObjectRetain_n();
    sub_1C68301B4();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    *(void *)unint64_t v18 = v11;
    sub_1C670573C((uint64_t *)v18);
    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)v18 + 16))
    {
      uint64_t v12 = *(char *)(*(void *)v18 + 32);
      swift_release();
      *(void *)unint64_t v18 = qword_1C68FAFD0[v12];
      *(_OWORD *)&v18[8] = xmmword_1C68EF950;
      char v19 = 2;
      char v17 = a6;
      type metadata accessor for DateTimeConstraint();
      swift_allocObject();
      uint64_t v13 = sub_1C65F5C08(6, (uint64_t)v18, 0, 0, &v17, 1, 1, 0);
      sub_1C67FCD54(v18, v13);
      swift_release();
      *(_OWORD *)unint64_t v18 = xmmword_1C68FAF80;
      *(void *)&v18[16] = v9;
      char v19 = 5;
      char v17 = a6;
      swift_allocObject();
      uint64_t v14 = sub_1C65F5C08(13, (uint64_t)v18, 2, 3, &v17, 1, 1, 0);
      swift_bridgeObjectRetain();
      sub_1C67FCD54(v18, v14);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_6;
    }
    __break(1u);
LABEL_10:
    uint64_t v7 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v15 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15;
}

uint64_t sub_1C67065F4(char a1, __int16 a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1C68E9C68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0) + 56;
  v37[3] = &type metadata for DefinedTimeStore;
  v37[4] = &off_1F2179A78;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C68ED528()) {
    sub_1C67FAECC(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v36 = v16;
  if (!a1)
  {
    unint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    LOBYTE(v35) = 6;
    v29[0] = 41;
    type metadata accessor for DateTimeConstraint();
    swift_allocObject();
    uint64_t v18 = sub_1C65F5C08(12, (uint64_t)&v32, a6, 0, v29, 1, 1, 0);
    sub_1C67FCD54(&v32, v18);
    goto LABEL_9;
  }
  if (a1 != 1)
  {
    uint64_t v28 = a3;
    __swift_project_boxed_opaque_existential_1(v37, (uint64_t)&type metadata for DefinedTimeStore);
    LOBYTE(v32) = 2;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language, v12);
    v29[0] = *(unsigned char *)(a5 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere);
    uint64_t v19 = sub_1C671CB7C((unsigned __int8 *)&v32);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (!v19) {
      goto LABEL_10;
    }
    sub_1C65C0368((uint64_t)v37, (uint64_t)&v32);
    uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v32, v35);
    MEMORY[0x1F4188790](v20);
    (*(void (**)(void))(v21 + 16))();
    uint64_t v30 = &type metadata for DefinedTimeStore;
    uint64_t v31 = &off_1F2179A78;
    type metadata accessor for DateTimeConstraintGenerator();
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, (uint64_t)&type metadata for DefinedTimeStore);
    MEMORY[0x1F4188790](v23);
    (*(void (**)(void))(v24 + 16))();
    *(void *)(v22 + 40) = &type metadata for DefinedTimeStore;
    *(void *)(v22 + 48) = &off_1F2179A78;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    LOWORD(v32) = a2 & 0x1FF;
    uint64_t v33 = v28;
    LOWORD(v34) = a4 & 0x101;
    BYTE2(v34) = BYTE2(a4) & 1;
    v29[0] = 41;
    uint64_t v25 = sub_1C65F5428(v19, &v32, a5, a6, v29);
    swift_release();
    sub_1C65F6344(v25);
LABEL_9:
    swift_release();
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68FAF90;
  unint64_t v32 = 0;
  uint64_t v33 = 0;
  LOBYTE(v35) = 0;
  uint64_t v34 = 0;
  v29[0] = 41;
  type metadata accessor for DateTimeConstraint();
  swift_allocObject();
  *(void *)(inited + 32) = sub_1C65F5C08(4, (uint64_t)&v32, a6, 0, v29, 1, 1, 0);
  unint64_t v32 = 0;
  uint64_t v33 = 0;
  LOBYTE(v35) = 0;
  uint64_t v34 = 0;
  v29[0] = 41;
  swift_allocObject();
  *(void *)(inited + 40) = sub_1C65F5C08(2, (uint64_t)&v32, a6, 0, v29, 1, 1, 0);
  unint64_t v32 = 0;
  uint64_t v33 = 0;
  LOBYTE(v35) = 0;
  uint64_t v34 = 0;
  v29[0] = 41;
  swift_allocObject();
  *(void *)(inited + 48) = sub_1C65F5C08(1, (uint64_t)&v32, a6, 0, v29, 1, 1, 0);
  unint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  LOBYTE(v35) = 1;
  v29[0] = 41;
  swift_allocObject();
  *(void *)(inited + 56) = sub_1C65F5C08(3, (uint64_t)&v32, a6, 5, v29, 1, 1, 0);
  unint64_t v32 = inited;
  sub_1C68ECC18();
  sub_1C65F6664(v32);
LABEL_10:
  uint64_t v26 = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v26;
}

uint64_t sub_1C6706B98(uint64_t a1, __int16 a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6)
{
  uint64_t v86 = sub_1C68E9C68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1();
  uint64_t v85 = v14;
  v91[3] = &type metadata for DefinedTimeStore;
  v91[4] = &off_1F2179A78;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C68ED528()) {
    sub_1C67FAECC(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v15 = MEMORY[0x1E4FBC870];
  }
  uint64_t v90 = v15;
  int v16 = *(unsigned __int8 *)(a1 + 58);
  if (v16 != 3)
  {
    if (v16 == 2 && (*(unsigned char *)(a1 + 24) & 1) == 0 && *(unsigned char *)(a1 + 57) == 2)
    {
      uint64_t v17 = *(void *)(a1 + 16);
      BOOL v19 = v17 > 11 || (unint64_t)(v17 - 1) < 6;
      OUTLINED_FUNCTION_9_31(v19);
      OUTLINED_FUNCTION_5_30();
      uint64_t v20 = OUTLINED_FUNCTION_3_36();
      OUTLINED_FUNCTION_5_34(v20);
      swift_release();
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v91, (uint64_t)&type metadata for DefinedTimeStore);
      uint64_t v21 = sub_1C67065F4(v16, a2 & 0x1FF, a3, a4 & 0x10101, a5, a6);
      sub_1C65F6344(v21);
    }
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v80 = *(void *)(a1 + 16);
    uint64_t v81 = OUTLINED_FUNCTION_6_36((double)v80);
    OUTLINED_FUNCTION_5_30();
    OUTLINED_FUNCTION_15_23();
    uint64_t v24 = OUTLINED_FUNCTION_4_33(4, v22, a6, 0, v23);
    OUTLINED_FUNCTION_5_34(v24);
    swift_release();
    if (qword_1EA405780 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C68EC478();
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EA442820);
    swift_retain_n();
    uint64_t v78 = v26;
    char v27 = sub_1C68EC458();
    os_log_type_t v28 = sub_1C68ECE48();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v88[0] = v76;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v73 = a5 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat;
      uint64_t v71 = *(void (**)(uint64_t))(v12 + 16);
      uint64_t v31 = v85;
      v71(v85);
      sub_1C65F5EF0((unint64_t *)&qword_1EA407720, MEMORY[0x1E4F27A78]);
      uint64_t v32 = sub_1C68ED7B8();
      uint64_t v34 = v33;
      LODWORD(v74) = v29;
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v35(v85, v86);
      sub_1C65B4078(v32, v34, (uint64_t)v88, v36, v37, v38, v39, v40, v68, v30 + 4, (uint64_t)v71, v73, v74, v76, v78, v80, v81, v12, a5,
        v85);
      sub_1C68ED0C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 1024;
      v70(v31, v72, v86);
      a5 = v84;
      sub_1C65F6054();
      uint64_t v12 = v82;
      v35(v31, v86);
      swift_release();
      sub_1C68ED0C8();
      swift_release();
      _os_log_impl(&dword_1C65AE000, v27, v75, "context.regionFormat: %s, follows 24 hour clock: %{BOOL}d", (uint8_t *)v30, 0x12u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }
    else
    {

      swift_release_n();
    }
    if (*(unsigned char *)(a1 + 57) == 2)
    {
      uint64_t v41 = a5 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat;
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      v42(v85, a5 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat, v86);
      char v43 = sub_1C65F6054();
      BOOL v44 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v44(v85, v86);
      if (v43)
      {
        swift_retain_n();
        uint64_t v45 = sub_1C68EC458();
        os_log_type_t v46 = sub_1C68ECE48();
        int v47 = v46;
        if (os_log_type_enabled(v45, v46))
        {
          LODWORD(v82) = v47;
          uint64_t v48 = (_DWORD *)swift_slowAlloc();
          uint64_t v79 = swift_slowAlloc();
          v88[0] = v79;
          _DWORD *v48 = 136315138;
          v42(v85, v41, v86);
          sub_1C65F5EF0((unint64_t *)&qword_1EA407720, MEMORY[0x1E4F27A78]);
          uint64_t v49 = sub_1C68ED7B8();
          uint64_t v51 = v50;
          v44(v85, v86);
          sub_1C65B4078(v49, v51, (uint64_t)v88, v52, v53, v54, v55, v56, v68, v69, (uint64_t)v70, v72, (uint64_t)(v48 + 1), (uint64_t)v48, v79, v80, v81, v82, a5,
            v85);
          sub_1C68ED0C8();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C65AE000, v45, v83, "locale: %s follows 24 hour clock", v77, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0();
          OUTLINED_FUNCTION_0();
        }
        else
        {

          swift_release_n();
        }
        v88[1] = 0;
        v88[2] = 0;
        v88[0] = v80 > 11;
        char v89 = 1;
        OUTLINED_FUNCTION_5_30();
        uint64_t v57 = OUTLINED_FUNCTION_3_36();
        OUTLINED_FUNCTION_5_34(v57);
        swift_release();
      }
    }
  }
  int v58 = *(unsigned __int8 *)(a1 + 57);
  if (v58 != 2)
  {
    OUTLINED_FUNCTION_9_31(v58 & 1);
    OUTLINED_FUNCTION_5_30();
    uint64_t v59 = OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_5_34(v59);
    swift_release();
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    OUTLINED_FUNCTION_6_36((double)*(uint64_t *)(a1 + 32));
    OUTLINED_FUNCTION_5_30();
    OUTLINED_FUNCTION_15_23();
    uint64_t v62 = OUTLINED_FUNCTION_4_33(2, v60, a6, 0, v61);
    OUTLINED_FUNCTION_5_34(v62);
    swift_release();
  }
  if ((*(unsigned char *)(a1 + 56) & 1) == 0)
  {
    OUTLINED_FUNCTION_6_36((double)*(uint64_t *)(a1 + 48));
    OUTLINED_FUNCTION_5_30();
    OUTLINED_FUNCTION_15_23();
    uint64_t v65 = OUTLINED_FUNCTION_4_33(1, v63, a6, 0, v64);
    OUTLINED_FUNCTION_5_34(v65);
    swift_release();
  }
  uint64_t v66 = v90;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  return v66;
}

uint64_t sub_1C67072F0(uint64_t a1, __int16 a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  v37[3] = &type metadata for DefinedTimeStore;
  v37[4] = &off_1F2179A78;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C68ED528()) {
    sub_1C67FAECC(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC870];
  }
  uint64_t v36 = v12;
  uint64_t v13 = *(void *)(a1 + 48);
  if ((sub_1C6602A30(v13) & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(v37, (uint64_t)&type metadata for DefinedTimeStore);
    uint64_t v14 = sub_1C6706320(v13, a2 & 0x1FF, a3, a4 & 0x10101, a5, a6);
    sub_1C65F6344(v14);
  }
  uint64_t v15 = *(void *)(a1 + 56);
  if (v15)
  {
    uint64_t v16 = *(void *)(a1 + 64);
    if (v16)
    {
      LOBYTE(v34[0]) = a6;
      swift_retain();
      swift_retain();
      uint64_t v17 = sub_1C680BCF4(v15, v16, (char *)v34, 0.0);
      sub_1C65F6344(v17);
      swift_release();
      swift_release();
    }
  }
  if (*(unsigned char *)(a1 + 72) != 3)
  {
    char v33 = *(unsigned char *)(a1 + 72);
    char v32 = a6;
    uint64_t v18 = sub_1C680BEEC(&v33, (uint64_t)v34, &v32);
    sub_1C67FCD54(v34, v18);
    swift_release();
  }
  uint64_t v19 = *(void *)(a1 + 24);
  if (v19)
  {
    LOBYTE(v34[0]) = a6;
    uint64_t v20 = sub_1C680BF90(v19, (char *)v34);
    if (v20)
    {
      uint64_t v21 = v20;
      swift_retain();
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C67057A8(v22);
      swift_bridgeObjectRelease();
      if (v23)
      {
        if (*(unsigned char *)(v23 + 48) == 5)
        {
          uint64_t v24 = *(void *)(v23 + 24);
          uint64_t v25 = *(void *)(v23 + 32);
          uint64_t v26 = *(void *)(v23 + 40);
          if (*(unsigned char *)(v21 + 48) != 5
            || (uint64_t v27 = *(void *)(v23 + 32), v27 != *(unsigned __int8 *)(v21 + 32)))
          {
            sub_1C65F94D4(*(void *)(v23 + 24), *(void *)(v23 + 32), *(void *)(v23 + 40), 5);
            swift_release();
            swift_release();
            swift_release();
            sub_1C65F950C(v24, v25, v26, 5);
            goto LABEL_20;
          }
          uint64_t v28 = *(void *)(v21 + 24);
          swift_bridgeObjectRetain();
          sub_1C6813000((unsigned char *)v23);
          swift_release();
          v34[0] = v28;
          v34[1] = v27;
          v34[2] = v26;
          char v35 = 5;
          char v33 = 38;
          type metadata accessor for DateTimeConstraint();
          swift_allocObject();
          uint64_t v29 = sub_1C65F5C08(13, (uint64_t)v34, 2, 3, &v33, 1, 1, 0);
          sub_1C67FCD54(v34, v29);
          swift_release();
        }
      }
      else
      {
        swift_retain();
        sub_1C67FCD54(v34, v21);
      }
      swift_release();
      swift_release();
      swift_release();
    }
  }
LABEL_20:
  uint64_t v30 = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v30;
}

void sub_1C6707614(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(v2 + 41)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  if (*(unsigned char *)(v2 + 57)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  int v5 = v4 | *(unsigned __int8 *)(v2 + 56);
  if (*(unsigned char *)(v2 + 58)) {
    int v6 = 0x10000;
  }
  else {
    int v6 = 0;
  }
  sub_1C680C018(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), v3 | *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48), v5 | v6, *(void *)(v2 + 64), *(void **)(v2 + 72));
}

uint64_t OUTLINED_FUNCTION_1_50()
{
  *(unsigned char *)(v2 - 176) = *(_DWORD *)(v2 - 184);
  *(unsigned char *)(v2 - 175) = *(_DWORD *)(v2 - 196);
  *(void *)(v2 - 168) = *(void *)(v2 - 208);
  *(unsigned char *)(v2 - 160) = *(_DWORD *)(v2 - 188);
  *(unsigned char *)(v2 - 159) = *(_DWORD *)(v2 - 192);
  *(unsigned char *)(v2 - 158) = v1;
  *(unsigned char *)(v2 - 177) = v0;
  return swift_retain();
}

void *OUTLINED_FUNCTION_2_45()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_3_36()
{
  int v3 = *(_DWORD *)(v1 - 180);
  return sub_1C65F5C08(3, v1 - 168, v3, 5, (char *)(v1 - 176), v0, 1, 0);
}

uint64_t OUTLINED_FUNCTION_4_33(char a1, uint64_t a2, char a3, char a4, char *a5)
{
  return sub_1C65F5C08(a1, a2, a3, a4, a5, v5, 1, 0);
}

uint64_t OUTLINED_FUNCTION_5_34(uint64_t a1)
{
  return sub_1C67FCD54(v1 - 168, a1);
}

uint64_t OUTLINED_FUNCTION_6_36(double a1)
{
  *(double *)(v1 - 168) = a1;
  *(void *)(v1 - 160) = 0;
  *(void *)(v1 - 152) = 0;
  *(unsigned char *)(v1 - 144) = 0;
  *(unsigned char *)(v1 - 176) = *(_DWORD *)(v1 - 184);
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_8_36(uint64_t a1)
{
  return sub_1C67FCD54(v1 - 176, a1);
}

uint64_t OUTLINED_FUNCTION_9_31@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 160) = 0;
  *(void *)(v1 - 152) = 0;
  *(void *)(v1 - 168) = a1;
  *(unsigned char *)(v1 - 144) = 1;
  *(unsigned char *)(v1 - 176) = *(_DWORD *)(v1 - 184);
  return type metadata accessor for DateTimeConstraint();
}

void OUTLINED_FUNCTION_11_26(char a1@<W8>)
{
  *(unsigned char *)(v2 - 175) = a1;
  *(void *)(v2 - 168) = v1;
  *(unsigned char *)(v2 - 160) = *(_DWORD *)(v2 - 188);
  *(unsigned char *)(v2 - 159) = *(_DWORD *)(v2 - 192);
}

uint64_t OUTLINED_FUNCTION_12_23(uint64_t a1)
{
  *(unsigned char *)(v2 - 176) = v1;
  int v4 = *(_DWORD *)(v2 - 200);
  return sub_1C6761F88(a1, v2 - 176, v4);
}

uint64_t OUTLINED_FUNCTION_13_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C65F5428(v5, v6 - 176, v4, a4, v6 - 177);
}

void OUTLINED_FUNCTION_14_26(uint64_t a1)
{
  int v4 = *(_DWORD *)(v2 - 200);
  sub_1C66FCC74(a1, (unsigned __int8 *)(v2 - 176), v1, v4, (unsigned __int8 *)(v2 - 177));
}

void sub_1C67078B0(uint64_t a1)
{
  unint64_t v20 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = sub_1C68ED278();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  if (v2)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C66A0488(0, v2 & ~(v2 >> 63), 0);
    if (v20)
    {
      uint64_t v3 = sub_1C68ED228();
      char v5 = 1;
    }
    else
    {
      uint64_t v3 = sub_1C66014C8(a1);
      char v5 = v6 & 1;
    }
    uint64_t v22 = v3;
    uint64_t v23 = v4;
    char v24 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        int64_t v8 = v22;
        uint64_t v7 = v23;
        char v9 = v24;
        char v10 = *(unsigned char *)(sub_1C67E6AA8(v22, v23, v24, a1) + 16);
        swift_release();
        uint64_t v11 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C66A0488(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v25;
        }
        unint64_t v13 = *(void *)(v11 + 16);
        unint64_t v12 = *(void *)(v11 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1C66A0488(v12 > 1, v13 + 1, 1);
          uint64_t v11 = v25;
        }
        *(void *)(v11 + 16) = v13 + 1;
        *(unsigned char *)(v11 + v13 + 32) = v10;
        if (v20)
        {
          if ((v9 & 1) == 0) {
            goto LABEL_23;
          }
          if (sub_1C68ED248()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407FD0);
          uint64_t v19 = (void (*)(unsigned char *, void))sub_1C68ECD88();
          sub_1C68ED2D8();
          v19(v21, 0);
        }
        else
        {
          int64_t v14 = sub_1C66014CC(v8, v7, v9, a1);
          uint64_t v16 = v15;
          char v18 = v17;
          sub_1C6621BBC(v8, v7, v9);
          uint64_t v22 = v14;
          uint64_t v23 = v16;
          char v24 = v18 & 1;
        }
        --v2;
      }
      while (v2);
      sub_1C6621BBC(v22, v23, v24);
    }
  }
}

uint64_t sub_1C6707B00(uint64_t *a1)
{
  uint64_t v3 = *a1;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C676B1B0();
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v7[0] = v3 + 32;
  v7[1] = v5;
  swift_retain();
  sub_1C67089EC(v7);
  sub_1C68ED438();
  if (!v1) {
    return swift_release_n();
  }
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C6707BC4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTimeConstraint();
    sub_1C65F9424();
    uint64_t result = sub_1C68ECD98();
    uint64_t v1 = v24;
    uint64_t v23 = v25;
    uint64_t v3 = v26;
    int64_t v4 = v27;
    unint64_t v5 = v28;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v22 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    int64_t v9 = v4;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1C68ED2B8()) {
      goto LABEL_42;
    }
    type metadata accessor for DateTimeConstraint();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    unint64_t v12 = v29;
    swift_unknownObjectRelease();
    if (!v29) {
      goto LABEL_43;
    }
LABEL_31:
    int v16 = v12[51];
    unsigned int v17 = v16 - 42;
    unsigned int v18 = v16 & 0xFFFFFFF7;
    BOOL v19 = v17 <= 0xFFFFFFFB && v18 == 16;
    if (v19 && v12[48] == 1 && (v12[24] & 1) != 0)
    {
      int v20 = v12[49];
      if (v20 != 1 && v20 != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      char v21 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_43;
      }
    }
    uint64_t result = swift_release();
  }
  if (v5)
  {
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_30:
    unint64_t v12 = *(unsigned char **)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v12) {
      goto LABEL_43;
    }
    goto LABEL_31;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v22) {
      goto LABEL_42;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v9 + 2;
      if (v9 + 2 >= v22) {
        goto LABEL_42;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v9 + 3;
        if (v9 + 3 >= v22) {
          goto LABEL_42;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v4);
        if (!v14)
        {
          int64_t v4 = v9 + 4;
          if (v9 + 4 >= v22) {
            goto LABEL_42;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v4);
          if (!v14)
          {
            int64_t v4 = v9 + 5;
            if (v9 + 5 >= v22) {
              goto LABEL_42;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v4);
            if (!v14)
            {
              int64_t v15 = v9 + 6;
              while (v15 < v22)
              {
                unint64_t v14 = *(void *)(v23 + 8 * v15++);
                if (v14)
                {
                  int64_t v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_42:
              unint64_t v12 = 0;
LABEL_43:
              sub_1C6645058();
              return (uint64_t)v12;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C6707F04(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    type metadata accessor for DateTimeConstraint();
    sub_1C65F9424();
    sub_1C68ECD98();
    uint64_t v1 = v19;
    uint64_t v18 = v20;
    uint64_t v2 = v21;
    int64_t v3 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v17 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    int64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1C68ED2B8()) {
      goto LABEL_42;
    }
    type metadata accessor for DateTimeConstraint();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v11 = v24;
    swift_unknownObjectRelease();
    if (!v24) {
      goto LABEL_43;
    }
LABEL_31:
    if (*(unsigned char *)(v11 + 51) == 24
      && !*(unsigned char *)(v11 + 48)
      && *(double *)(v11 + 24) == 0.0
      && *(unsigned char *)(v11 + 16) == 5)
    {
      if (*(unsigned char *)(v11 + 49))
      {
        char v15 = sub_1C68ED7E8();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          goto LABEL_33;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (*(unsigned char *)(v11 + 50) == 1) {
        goto LABEL_43;
      }
    }
LABEL_33:
    swift_release();
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
    goto LABEL_30;
  }
  int64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x1C6708250);
  }
  if (v12 >= v17) {
    goto LABEL_42;
  }
  unint64_t v13 = *(void *)(v18 + 8 * v12);
  ++v3;
  if (v13) {
    goto LABEL_29;
  }
  int64_t v3 = v8 + 2;
  if (v8 + 2 >= v17) {
    goto LABEL_42;
  }
  unint64_t v13 = *(void *)(v18 + 8 * v3);
  if (v13) {
    goto LABEL_29;
  }
  int64_t v3 = v8 + 3;
  if (v8 + 3 >= v17) {
    goto LABEL_42;
  }
  unint64_t v13 = *(void *)(v18 + 8 * v3);
  if (v13) {
    goto LABEL_29;
  }
  int64_t v3 = v8 + 4;
  if (v8 + 4 >= v17) {
    goto LABEL_42;
  }
  unint64_t v13 = *(void *)(v18 + 8 * v3);
  if (v13) {
    goto LABEL_29;
  }
  int64_t v3 = v8 + 5;
  if (v8 + 5 >= v17) {
    goto LABEL_42;
  }
  unint64_t v13 = *(void *)(v18 + 8 * v3);
  if (v13)
  {
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_30:
    uint64_t v11 = *(void *)(*(void *)(v1 + 48) + 8 * v10);
    swift_retain();
    if (!v11) {
      goto LABEL_43;
    }
    goto LABEL_31;
  }
  int64_t v14 = v8 + 6;
  while (v14 < v17)
  {
    unint64_t v13 = *(void *)(v18 + 8 * v14++);
    if (v13)
    {
      int64_t v3 = v14 - 1;
      goto LABEL_29;
    }
  }
LABEL_42:
  uint64_t v11 = 0;
LABEL_43:
  sub_1C6645058();
  return v11;
}

void sub_1C6708264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int64_t a23,unint64_t a24)
{
  OUTLINED_FUNCTION_11_27();
  char v63 = v25;
  unsigned __int8 v27 = v26;
  OUTLINED_FUNCTION_7_7();
  uint64_t v28 = *(void *)(v24 + 16);
  if ((v28 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_44_8();
    swift_bridgeObjectRetain();
    sub_1C68ED238();
    OUTLINED_FUNCTION_14_27();
    sub_1C65F9424();
    sub_1C68ECD98();
    uint64_t v28 = a20;
  }
  else
  {
    a21 = v28 + 56;
    a22 = ~(-1 << *(unsigned char *)(v28 + 32));
    OUTLINED_FUNCTION_22_13();
    a24 = v32 & v33;
    swift_bridgeObjectRetain();
    a23 = 0;
  }
  int v61 = v27;
  int64_t v62 = (unint64_t)(a22 + 64) >> 6;
  while (1)
  {
    int64_t v34 = a23;
    if (v28 < 0)
    {
      if (!sub_1C68ED2B8()) {
        goto LABEL_47;
      }
      type metadata accessor for DateTimeConstraint();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v37 = a16;
      swift_unknownObjectRelease();
      if (!a16) {
        goto LABEL_47;
      }
    }
    else
    {
      if (a24)
      {
        unint64_t v35 = __clz(__rbit64(a24));
        a24 &= a24 - 1;
        unint64_t v36 = v35 | (a23 << 6);
      }
      else
      {
        if (__OFADD__(a23, 1))
        {
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        if (a23 + 1 >= v62) {
          goto LABEL_47;
        }
        OUTLINED_FUNCTION_39_6();
        a23 = v38;
        if (!v39)
        {
          a23 = v38 + 1;
          if (v38 + 1 >= v62) {
            goto LABEL_47;
          }
          if (!*(void *)(a21 + 8 * a23))
          {
            a23 = v38 + 2;
            if (v38 + 2 >= v62) {
              goto LABEL_47;
            }
            if (!*(void *)(a21 + 8 * a23))
            {
              a23 = v38 + 3;
              if (v38 + 3 >= v62) {
                goto LABEL_47;
              }
              if (!*(void *)(a21 + 8 * a23))
              {
                int64_t v40 = v34 + 5;
                while (v40 < v62)
                {
                  OUTLINED_FUNCTION_40_8();
                  if (v41)
                  {
                    a23 = v40 - 1;
                    goto LABEL_24;
                  }
                }
LABEL_47:
                OUTLINED_FUNCTION_42_9();
LABEL_48:
                OUTLINED_FUNCTION_13_22();
                return;
              }
            }
          }
        }
LABEL_24:
        OUTLINED_FUNCTION_38_4();
        a24 = v43 & v42;
        unint64_t v36 = v44 + (a23 << 6);
      }
      uint64_t v37 = *(void *)(*(void *)(v28 + 48) + 8 * v36);
      swift_retain();
      if (!v37) {
        goto LABEL_47;
      }
    }
    if (*(unsigned char *)(v37 + 51) != 38) {
      goto LABEL_46;
    }
    if (*(unsigned char *)(v37 + 49))
    {
      if (*(unsigned char *)(v37 + 49) == 1)
      {
        unint64_t v45 = 0xE300000000000000;
        OUTLINED_FUNCTION_35_8();
      }
      else
      {
        unint64_t v45 = 0xE600000000000000;
        OUTLINED_FUNCTION_3_37();
      }
    }
    else
    {
      unint64_t v45 = 0xE500000000000000;
      OUTLINED_FUNCTION_2_46();
    }
    if (v63)
    {
      if (v63 == 1)
      {
        unint64_t v46 = 0xE300000000000000;
        OUTLINED_FUNCTION_47_7();
      }
      else
      {
        unint64_t v46 = 0xE600000000000000;
        OUTLINED_FUNCTION_20_19();
      }
    }
    else
    {
      unint64_t v46 = 0xE500000000000000;
      OUTLINED_FUNCTION_6_37();
    }
    if (v47 == v48 && v45 == v46)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v50 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v50 & 1) == 0) {
        goto LABEL_46;
      }
    }
    if (*(unsigned __int8 *)(v37 + 16) == v61 && !*(unsigned char *)(v37 + 50)) {
      break;
    }
LABEL_46:
    swift_release();
  }
  OUTLINED_FUNCTION_42_9();
  double v51 = *(double *)(v37 + 24);
  int v52 = *(unsigned __int8 *)(v37 + 48);
  uint64_t v53 = OUTLINED_FUNCTION_53_6();
  sub_1C65F94D4(v53, v54, v55, v56);
  swift_release();
  if (v52 == 2) {
    goto LABEL_48;
  }
  if (v52)
  {
    uint64_t v57 = OUTLINED_FUNCTION_53_6();
    sub_1C65F950C(v57, v58, v59, v60);
    goto LABEL_48;
  }
  if ((~*(void *)&v51 & 0x7FF0000000000000) == 0) {
    goto LABEL_58;
  }
  if (v51 <= -9.22337204e18)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v51 < 9.22337204e18) {
    goto LABEL_48;
  }
LABEL_60:
  __break(1u);
}

#error "1C67086F0: call analysis failed (funcsize=103)"

uint64_t sub_1C67087B4(unsigned __int8 *a1, uint64_t a2)
{
  int v5 = a1[49];
  unsigned int v6 = *(unsigned __int8 *)(a2 + 49);
  if (sub_1C6618CAC(a1[49], *(unsigned char *)(a2 + 49)))
  {
    unsigned int v7 = a1[16];
    unsigned int v8 = *(unsigned __int8 *)(a2 + 16);
    if (v7 == v8)
    {
      int v9 = a1[50];
      if (v9 == *(unsigned __int8 *)(a2 + 50)) {
        char v10 = a1[54] ^ 1;
      }
      else {
        char v10 = v9 == 0;
      }
    }
    else
    {
      char v10 = v8 < v7;
    }
    return v10 & 1;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_25_17();
    OUTLINED_FUNCTION_50_5();
    if ((v2 & 1) == 0) {
      goto LABEL_16;
    }
    if (v6) {
      goto LABEL_8;
    }
LABEL_12:
    OUTLINED_FUNCTION_2_46();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_12;
  }
LABEL_8:
  if (v6 == 1) {
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_3_37();
LABEL_15:
  OUTLINED_FUNCTION_15_24();
  OUTLINED_FUNCTION_50_5();
  if (v2)
  {
LABEL_33:
    char v10 = 1;
    return v10 & 1;
  }
LABEL_16:
  if (v5)
  {
    OUTLINED_FUNCTION_25_17();
    OUTLINED_FUNCTION_50_5();
    if ((v2 & 1) == 0) {
      goto LABEL_24;
    }
    if (v6) {
      goto LABEL_19;
    }
LABEL_22:
    OUTLINED_FUNCTION_2_46();
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_22;
  }
LABEL_19:
  if (v6 != 1)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_35_8();
LABEL_23:
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_50_5();
  if (v2) {
    goto LABEL_33;
  }
LABEL_24:
  if (v5)
  {
    if (v5 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_3_37();
  }
  else
  {
    OUTLINED_FUNCTION_2_46();
  }
  char v11 = OUTLINED_FUNCTION_15_24();
  swift_bridgeObjectRelease();
  char v10 = 0;
  if (v11)
  {
LABEL_30:
    if (v6 <= 1)
    {
      char v12 = OUTLINED_FUNCTION_34_7();
      swift_bridgeObjectRelease();
      return v12 & 1;
    }
    goto LABEL_32;
  }
  return v10 & 1;
}

uint64_t sub_1C67089EC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  swift_retain_n();
  uint64_t v5 = sub_1C68ED798();
  if (v5 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
      {
        swift_retain();
        sub_1C6709194(0, v4, 1, a1);
      }
      swift_release_n();
      return swift_release_n();
    }
    goto LABEL_133;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C666E5E0(v4 / 2);
  int64_t v111 = v8;
  uint64_t v120 = v7;
  uint64_t v109 = v4;
  uint64_t v106 = a1;
  if (v4 <= 0)
  {
    char v11 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v43 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_97:
    if (v43 < 2)
    {
LABEL_108:
      swift_bridgeObjectRelease();
      if (v109 >= -1) {
        goto LABEL_109;
      }
      goto LABEL_138;
    }
    uint64_t v94 = *v106;
    uint64_t v116 = *v106;
    while (1)
    {
      unint64_t v95 = v43 - 2;
      if (v43 < 2) {
        break;
      }
      if (!v94) {
        goto LABEL_142;
      }
      uint64_t v96 = v2;
      uint64_t v97 = v11;
      uint64_t v98 = *(void *)&v11[16 * v95 + 32];
      uint64_t v99 = *(void *)&v11[16 * v43 + 24];
      uint64_t v119 = (unsigned __int8 **)(v94 + 8 * v98);
      uint64_t v100 = (unsigned __int8 **)(v94 + 8 * *(void *)&v11[16 * v43 + 16]);
      unint64_t v101 = v94 + 8 * v99;
      swift_retain();
      sub_1C670929C(v119, v100, v101, v111);
      uint64_t v2 = v96;
      if (v96) {
        goto LABEL_94;
      }
      if (v99 < v98) {
        goto LABEL_128;
      }
      char v11 = v97;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v11 = sub_1C676B0EC();
      }
      if (v95 >= *((void *)v11 + 2)) {
        goto LABEL_129;
      }
      uint64_t v102 = &v11[16 * v95 + 32];
      *(void *)uint64_t v102 = v98;
      *((void *)v102 + 1) = v99;
      unint64_t v103 = *((void *)v11 + 2);
      if (v43 > v103) {
        goto LABEL_130;
      }
      memmove(&v11[16 * v43 + 16], &v11[16 * v43 + 32], 16 * (v103 - v43));
      *((void *)v11 + 2) = v103 - 1;
      unint64_t v43 = v103 - 1;
      uint64_t v94 = v116;
      if (v103 <= 2) {
        goto LABEL_108;
      }
    }
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    swift_release_n();
    __break(1u);
LABEL_140:
    swift_release_n();
    __break(1u);
LABEL_141:
    swift_release_n();
    __break(1u);
LABEL_142:
    uint64_t result = swift_release_n();
    __break(1u);
    return result;
  }
  uint64_t v107 = v6;
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v105 = *a1 - 8;
  char v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v4;
  uint64_t v110 = *a1;
  while (1)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v9 + 1;
    if (v9 + 1 < v12)
    {
      char v15 = v11;
      int v16 = *(unsigned __int8 **)(v10 + 8 * v14);
      uint64_t v17 = *(void *)(v10 + 8 * v9);
      swift_retain();
      swift_retain();
      int v18 = sub_1C67087B4(v16, v17);
      swift_release();
      swift_release();
      if (v13 + 2 >= v12)
      {
        uint64_t v26 = v13 + 2;
      }
      else
      {
        uint64_t v19 = v2;
        uint64_t v20 = v13;
        while (1)
        {
          uint64_t v21 = v10 + 8 * v20;
          uint64_t v23 = *(void *)(v21 + 8);
          int64_t v22 = *(unsigned __int8 **)(v21 + 16);
          swift_retain();
          swift_retain();
          int v24 = sub_1C67087B4(v22, v23);
          swift_release();
          swift_release();
          if ((v18 ^ v24)) {
            break;
          }
          uint64_t v25 = v20 + 3;
          ++v20;
          if (v25 >= v109)
          {
            uint64_t v26 = v109;
            goto LABEL_12;
          }
        }
        uint64_t v26 = v20 + 2;
LABEL_12:
        uint64_t v2 = v19;
      }
      char v11 = v15;
      if (v18)
      {
        if (v26 < v13) {
          goto LABEL_135;
        }
        uint64_t v14 = v26;
        if (v13 >= v26)
        {
          uint64_t v12 = v109;
        }
        else
        {
          unsigned __int8 v27 = (uint64_t *)(v105 + 8 * v26);
          uint64_t v28 = v14;
          uint64_t v29 = v13;
          uint64_t v30 = (uint64_t *)(v10 + 8 * v13);
          uint64_t v12 = v109;
          do
          {
            if (v29 != --v28)
            {
              if (!v10) {
                goto LABEL_141;
              }
              uint64_t v31 = *v30;
              *uint64_t v30 = *v27;
              *unsigned __int8 v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
      else
      {
        uint64_t v12 = v109;
        uint64_t v14 = v26;
      }
    }
    if (v14 < v12)
    {
      if (__OFSUB__(v14, v13)) {
        goto LABEL_132;
      }
      if (v14 - v13 < v107)
      {
        if (__OFADD__(v13, v107)) {
          goto LABEL_136;
        }
        if (v13 + v107 >= v12) {
          uint64_t v32 = v12;
        }
        else {
          uint64_t v32 = v13 + v107;
        }
        if (v32 < v13) {
          goto LABEL_137;
        }
        if (v14 != v32)
        {
          uint64_t v114 = v11;
          uint64_t v117 = v13;
          uint64_t v112 = v2;
          uint64_t v33 = (uint64_t *)(v105 + 8 * v14);
          do
          {
            uint64_t v34 = v14;
            unint64_t v35 = *(unsigned __int8 **)(v10 + 8 * v14);
            uint64_t v36 = v117;
            uint64_t v37 = v33;
            do
            {
              uint64_t v38 = *v37;
              swift_retain();
              swift_retain();
              char v39 = sub_1C67087B4(v35, v38);
              swift_release();
              swift_release();
              if ((v39 & 1) == 0) {
                break;
              }
              if (!v10) {
                goto LABEL_139;
              }
              uint64_t v40 = *v37;
              unint64_t v35 = (unsigned __int8 *)v37[1];
              *uint64_t v37 = (uint64_t)v35;
              v37[1] = v40;
              --v37;
              ++v36;
            }
            while (v34 != v36);
            uint64_t v14 = v34 + 1;
            ++v33;
          }
          while (v34 + 1 != v32);
          uint64_t v14 = v32;
          uint64_t v2 = v112;
          char v11 = v114;
          uint64_t v13 = v117;
        }
      }
    }
    if (v14 < v13) {
      goto LABEL_131;
    }
    uint64_t v108 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_1C65C8578(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v42 = *((void *)v11 + 2);
    unint64_t v41 = *((void *)v11 + 3);
    unint64_t v43 = v42 + 1;
    if (v42 >= v41 >> 1) {
      char v11 = sub_1C65C8578((char *)(v41 > 1), v42 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v43;
    uint64_t v44 = v11 + 32;
    unint64_t v45 = &v11[16 * v42 + 32];
    *(void *)unint64_t v45 = v13;
    *((void *)v45 + 1) = v108;
    if (v42) {
      break;
    }
    unint64_t v43 = 1;
LABEL_88:
    uint64_t v9 = v108;
    uint64_t v12 = v109;
    if (v108 >= v109) {
      goto LABEL_97;
    }
  }
  while (1)
  {
    unint64_t v46 = v43 - 1;
    if (v43 >= 4)
    {
      double v51 = &v44[16 * v43];
      uint64_t v52 = *((void *)v51 - 8);
      uint64_t v53 = *((void *)v51 - 7);
      BOOL v57 = __OFSUB__(v53, v52);
      uint64_t v54 = v53 - v52;
      if (v57) {
        goto LABEL_116;
      }
      uint64_t v56 = *((void *)v51 - 6);
      uint64_t v55 = *((void *)v51 - 5);
      BOOL v57 = __OFSUB__(v55, v56);
      uint64_t v49 = v55 - v56;
      char v50 = v57;
      if (v57) {
        goto LABEL_117;
      }
      unint64_t v58 = v43 - 2;
      uint64_t v59 = &v44[16 * v43 - 32];
      uint64_t v61 = *(void *)v59;
      uint64_t v60 = *((void *)v59 + 1);
      BOOL v57 = __OFSUB__(v60, v61);
      uint64_t v62 = v60 - v61;
      if (v57) {
        goto LABEL_118;
      }
      BOOL v57 = __OFADD__(v49, v62);
      uint64_t v63 = v49 + v62;
      if (v57) {
        goto LABEL_120;
      }
      if (v63 >= v54)
      {
        uint64_t v81 = &v44[16 * v46];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v57 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v57) {
          goto LABEL_126;
        }
        BOOL v74 = v49 < v84;
        goto LABEL_77;
      }
    }
    else
    {
      if (v43 != 3)
      {
        uint64_t v75 = *((void *)v11 + 4);
        uint64_t v76 = *((void *)v11 + 5);
        BOOL v57 = __OFSUB__(v76, v75);
        uint64_t v68 = v76 - v75;
        char v69 = v57;
        goto LABEL_71;
      }
      uint64_t v48 = *((void *)v11 + 4);
      uint64_t v47 = *((void *)v11 + 5);
      BOOL v57 = __OFSUB__(v47, v48);
      uint64_t v49 = v47 - v48;
      char v50 = v57;
    }
    if (v50) {
      goto LABEL_119;
    }
    unint64_t v58 = v43 - 2;
    uint64_t v64 = &v44[16 * v43 - 32];
    uint64_t v66 = *(void *)v64;
    uint64_t v65 = *((void *)v64 + 1);
    BOOL v67 = __OFSUB__(v65, v66);
    uint64_t v68 = v65 - v66;
    char v69 = v67;
    if (v67) {
      goto LABEL_121;
    }
    unint64_t v70 = &v44[16 * v46];
    uint64_t v72 = *(void *)v70;
    uint64_t v71 = *((void *)v70 + 1);
    BOOL v57 = __OFSUB__(v71, v72);
    uint64_t v73 = v71 - v72;
    if (v57) {
      goto LABEL_123;
    }
    if (__OFADD__(v68, v73)) {
      goto LABEL_125;
    }
    if (v68 + v73 >= v49)
    {
      BOOL v74 = v49 < v73;
LABEL_77:
      if (v74) {
        unint64_t v46 = v58;
      }
      goto LABEL_79;
    }
LABEL_71:
    if (v69) {
      goto LABEL_122;
    }
    uint64_t v77 = &v44[16 * v46];
    uint64_t v79 = *(void *)v77;
    uint64_t v78 = *((void *)v77 + 1);
    BOOL v57 = __OFSUB__(v78, v79);
    uint64_t v80 = v78 - v79;
    if (v57) {
      goto LABEL_124;
    }
    if (v80 < v68) {
      goto LABEL_88;
    }
LABEL_79:
    unint64_t v85 = v46 - 1;
    if (v46 - 1 >= v43)
    {
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    if (!v10) {
      goto LABEL_140;
    }
    uint64_t v86 = v2;
    uint64_t v87 = v10;
    uint64_t v88 = &v44[16 * v85];
    uint64_t v89 = *(void *)v88;
    unint64_t v90 = v46;
    uint64_t v91 = &v44[16 * v46];
    uint64_t v92 = *((void *)v91 + 1);
    uint64_t v115 = (unsigned __int8 **)(v87 + 8 * *(void *)v91);
    unint64_t v118 = (unsigned __int8 **)(v87 + 8 * *(void *)v88);
    unint64_t v113 = v87 + 8 * v92;
    swift_retain();
    sub_1C670929C(v118, v115, v113, v111);
    if (v86) {
      break;
    }
    if (v92 < v89) {
      goto LABEL_113;
    }
    if (v90 > *((void *)v11 + 2)) {
      goto LABEL_114;
    }
    *(void *)uint64_t v88 = v89;
    *(void *)&v44[16 * v85 + 8] = v92;
    unint64_t v93 = *((void *)v11 + 2);
    if (v90 >= v93) {
      goto LABEL_115;
    }
    unint64_t v43 = v93 - 1;
    memmove(v91, v91 + 16, 16 * (v93 - 1 - v90));
    *((void *)v11 + 2) = v93 - 1;
    uint64_t v10 = v110;
    uint64_t v2 = 0;
    if (v93 <= 2) {
      goto LABEL_88;
    }
  }
LABEL_94:
  swift_bridgeObjectRelease();
  if (v109 < -1) {
    goto LABEL_134;
  }
LABEL_109:
  *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1C68ECC18();
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1C6709194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    swift_retain();
    uint64_t v7 = v6 + 8 * v4 - 8;
    while (2)
    {
      unsigned int v8 = *(unsigned __int8 **)(v6 + 8 * v4);
      uint64_t v9 = a1;
      uint64_t v10 = (uint64_t *)v7;
      do
      {
        uint64_t v11 = *v10;
        swift_retain();
        swift_retain();
        char v12 = sub_1C67087B4(v8, v11);
        swift_release();
        swift_release();
        if ((v12 & 1) == 0) {
          break;
        }
        if (!v6)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v13 = *v10;
        unsigned int v8 = (unsigned __int8 *)v10[1];
        *uint64_t v10 = (uint64_t)v8;
        v10[1] = v13;
        --v10;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C670929C(unsigned __int8 **a1, unsigned __int8 **a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  swift_retain();
  unint64_t v35 = a4;
  if (v9 >= v11)
  {
    sub_1C669C220(v6, v11, a4);
    unint64_t v12 = (unint64_t)&a4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      char v15 = a4;
      goto LABEL_41;
    }
    uint64_t v23 = (unsigned __int8 **)(a3 - 8);
    while (1)
    {
      uint64_t v36 = v23 + 1;
      int v24 = (unsigned __int8 **)(v12 - 8);
      uint64_t v25 = *(unsigned __int8 **)(v12 - 8);
      uint64_t v26 = v6 - 1;
      uint64_t v27 = (uint64_t)*(v6 - 1);
      uint64_t v28 = v6;
      unint64_t v29 = v12;
      swift_retain();
      swift_retain();
      char v30 = sub_1C67087B4(v25, v27);
      swift_release();
      swift_release();
      if (v30)
      {
        BOOL v31 = v36 != v28 || v23 >= v28;
        char v15 = v35;
        unint64_t v12 = v29;
        uint64_t v6 = v26;
        if (!v31) {
          goto LABEL_37;
        }
      }
      else
      {
        BOOL v32 = v36 != (unsigned __int8 **)v29 || (unint64_t)v23 >= v29;
        uint64_t v26 = v24;
        unint64_t v12 = (unint64_t)v24;
        char v15 = v35;
        uint64_t v6 = v28;
        if (!v32) {
          goto LABEL_37;
        }
      }
      *uint64_t v23 = *v26;
LABEL_37:
      --v23;
      if (v6 <= v7 || v12 <= (unint64_t)v15) {
        goto LABEL_41;
      }
    }
  }
  sub_1C669C220(v7, v9, a4);
  unint64_t v12 = (unint64_t)&a4[v9];
  if ((unint64_t)v6 >= a3 || v8 < 8)
  {
    uint64_t v6 = v7;
    char v15 = a4;
  }
  else
  {
    char v15 = a4;
    do
    {
      unint64_t v16 = v12;
      uint64_t v17 = *v6;
      uint64_t v18 = *v15;
      swift_retain();
      swift_retain();
      char v19 = sub_1C67087B4(v17, v18);
      swift_release();
      swift_release();
      if (v19)
      {
        uint64_t v20 = v6;
        BOOL v21 = v7 == v6++;
      }
      else
      {
        uint64_t v20 = (unsigned __int8 **)v15;
        BOOL v21 = v7 == (unsigned __int8 **)v15++;
      }
      unint64_t v12 = v16;
      if (!v21) {
        char *v7 = *v20;
      }
      ++v7;
    }
    while ((unint64_t)v15 < v16 && (unint64_t)v6 < a3);
    uint64_t v6 = v7;
  }
LABEL_41:
  sub_1C669C220(v15, (uint64_t)(v12 - (void)v15) / 8, v6);
  swift_release_n();
  return 1;
}

#error "1C67096A0: call analysis failed (funcsize=166)"

#error "1C6709980: call analysis failed (funcsize=167)"

uint64_t sub_1C6709A78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C68E9C68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_retain();
    uint64_t v9 = sub_1C670A90C(a1, a2, (uint64_t (*)(uint64_t))sub_1C670BEEC);
    swift_release();
    return v9;
  }
  uint64_t v9 = MEMORY[0x1E4FBC870];
  uint64_t v46 = MEMORY[0x1E4FBC870];
  swift_retain();
  sub_1C68ED238();
  uint64_t v10 = sub_1C68ED2B8();
  if (!v10)
  {
LABEL_40:
    swift_release_n();
    swift_release();
    return v9;
  }
  uint64_t v11 = v10;
  uint64_t v35 = a2;
  uint64_t v33 = v2;
  type metadata accessor for DateTimeConstraint();
  uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  while (1)
  {
    uint64_t v36 = v11;
    uint64_t result = swift_dynamicCast();
    uint64_t v20 = v45;
    int v21 = *(unsigned __int8 *)(v45 + 16);
    if (v21 == 12 || v21 == 3)
    {
      if (*(unsigned char *)(v45 + 53)) {
        goto LABEL_10;
      }
      if (v21 == 3)
      {
        (*v34)(v8, *(void *)(v35 + 24) + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat, v5);
        char v24 = sub_1C65F6054();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        if ((v24 & 1) != 0 && *(unsigned char *)(v20 + 51) == 39)
        {
          int v21 = *(unsigned __int8 *)(v20 + 16);
LABEL_10:
          char v23 = 1;
          goto LABEL_27;
        }
      }
    }
    if (qword_1EA4056F0 != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v25 = *(void *)(qword_1EA442788 + 16);
    int v21 = *(unsigned __int8 *)(v20 + 16);
    if (!v25) {
      goto LABEL_26;
    }
    if (*(unsigned __int8 *)(qword_1EA442788 + 32) != v21) {
      break;
    }
LABEL_19:
    if (*(unsigned char *)(v20 + 50) != 1) {
      goto LABEL_26;
    }
    char v23 = *(unsigned char *)(v20 + 53);
LABEL_27:
    if (v21 == 4 && !*(unsigned char *)(v20 + 48))
    {
      if (*(double *)(v20 + 24) > 12.0) {
        char v32 = 1;
      }
      else {
        char v32 = v23;
      }
      if (v32)
      {
LABEL_30:
        uint64_t v29 = v45;
        uint64_t v28 = v46;
        unint64_t v30 = *(void *)(v46 + 16);
        if (*(void *)(v46 + 24) <= v30)
        {
          sub_1C680082C(v30 + 1, v13, v14, v15, v16, v17, v18, v19, v33, (uint64_t)v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
            v44,
            v45,
            v46,
            v47,
            v48,
            v49,
            v50,
            v51,
            v52,
            v53,
            v54,
            v55,
            v56);
          uint64_t v28 = v46;
        }
        sub_1C68ED938();
        sub_1C65F5C58();
        sub_1C68ED988();
        unint64_t v31 = sub_1C68ED218();
        *(void *)(v28 + 56 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
        *(void *)(*(void *)(v28 + 48) + 8 * v31) = v29;
        ++*(void *)(v28 + 16);
        goto LABEL_38;
      }
    }
    else if (v23)
    {
      goto LABEL_30;
    }
    swift_release();
LABEL_38:
    uint64_t v11 = sub_1C68ED2B8();
    if (!v11)
    {
      uint64_t v9 = v46;
      goto LABEL_40;
    }
  }
  if (v25 == 1)
  {
LABEL_26:
    char v23 = 0;
    goto LABEL_27;
  }
  uint64_t v26 = 33;
  while (1)
  {
    uint64_t v27 = v26 - 31;
    if (__OFADD__(v26 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(qword_1EA442788 + v26) == v21) {
      goto LABEL_19;
    }
    ++v26;
    if (v27 == v25) {
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

#error "1C6709F64: call analysis failed (funcsize=129)"

uint64_t sub_1C670A058(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_retain();
    uint64_t v6 = sub_1C670A90C(a1, a2, (uint64_t (*)(uint64_t))sub_1C670C67C);
    goto LABEL_42;
  }
  uint64_t v6 = MEMORY[0x1E4FBC870];
  uint64_t v47 = MEMORY[0x1E4FBC870];
  swift_retain();
  uint64_t v35 = sub_1C68ED238();
  uint64_t v7 = sub_1C68ED2B8();
  if (!v7) {
    goto LABEL_40;
  }
  uint64_t v8 = v7;
  uint64_t v34 = v3;
  type metadata accessor for DateTimeConstraint();
  do
  {
    uint64_t v36 = v8;
    swift_dynamicCast();
    int v9 = *(unsigned __int8 *)(v45 + 49);
    int v10 = *(unsigned __int8 *)(a2 + 49);
    if (v9 == 1) {
      uint64_t v11 = 6581861;
    }
    else {
      uint64_t v11 = 0x746573746F6ELL;
    }
    if (v9 == 1) {
      unint64_t v12 = 0xE300000000000000;
    }
    else {
      unint64_t v12 = 0xE600000000000000;
    }
    if (*(unsigned char *)(v45 + 49)) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = 0x7472617473;
    }
    if (*(unsigned char *)(v45 + 49)) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = 0xE500000000000000;
    }
    uint64_t v15 = a2;
    if (v10 == 1) {
      uint64_t v16 = 6581861;
    }
    else {
      uint64_t v16 = 0x746573746F6ELL;
    }
    if (v10 == 1) {
      unint64_t v17 = 0xE300000000000000;
    }
    else {
      unint64_t v17 = 0xE600000000000000;
    }
    if (*(unsigned char *)(a2 + 49)) {
      uint64_t v18 = v16;
    }
    else {
      uint64_t v18 = 0x7472617473;
    }
    if (*(unsigned char *)(a2 + 49)) {
      unint64_t v19 = v17;
    }
    else {
      unint64_t v19 = 0xE500000000000000;
    }
    if (v13 == v18 && v14 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        swift_release();
        goto LABEL_38;
      }
    }
    uint64_t v29 = v45;
    uint64_t v30 = v47;
    unint64_t v31 = *(void *)(v47 + 16);
    if (*(void *)(v47 + 24) <= v31)
    {
      sub_1C680082C(v31 + 1, v22, v23, v24, v25, v26, v27, v28, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        vars0,
        vars8);
      uint64_t v30 = v47;
    }
    sub_1C68ED938();
    sub_1C65F5C58();
    sub_1C68ED988();
    unint64_t v32 = sub_1C68ED218();
    *(void *)(v30 + 56 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    *(void *)(*(void *)(v30 + 48) + 8 * v32) = v29;
    ++*(void *)(v30 + 16);
LABEL_38:
    a2 = v15;
    uint64_t v8 = sub_1C68ED2B8();
  }
  while (v8);
  uint64_t v6 = v47;
LABEL_40:
  swift_release_n();
LABEL_42:
  swift_release();
  return v6;
}

uint64_t sub_1C670A2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_retain();
    uint64_t v6 = sub_1C670A90C(a1, a2, (uint64_t (*)(uint64_t))sub_1C670CAD0);
    goto LABEL_33;
  }
  uint64_t v6 = MEMORY[0x1E4FBC870];
  uint64_t v41 = MEMORY[0x1E4FBC870];
  swift_retain();
  sub_1C68ED238();
  uint64_t v7 = sub_1C68ED2B8();
  if (!v7) {
    goto LABEL_31;
  }
  uint64_t v8 = v7;
  uint64_t v29 = v3;
  type metadata accessor for DateTimeConstraint();
  do
  {
    uint64_t v30 = v8;
    swift_dynamicCast();
    if (*(unsigned char *)(v39 + 49))
    {
      if (*(unsigned char *)(v39 + 49) == 1)
      {
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 6581861;
      }
      else
      {
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x746573746F6ELL;
      }
    }
    else
    {
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x7472617473;
    }
    int v11 = (0x20001u >> (8 * *(unsigned char *)(a2 + 49)));
    if ((0x20001u >> (8 * *(unsigned char *)(a2 + 49))))
    {
      if (v11 == 1) {
        uint64_t v12 = 6581861;
      }
      else {
        uint64_t v12 = 0x746573746F6ELL;
      }
      if (v11 == 1) {
        unint64_t v13 = 0xE300000000000000;
      }
      else {
        unint64_t v13 = 0xE600000000000000;
      }
    }
    else
    {
      unint64_t v13 = 0xE500000000000000;
      uint64_t v12 = 0x7472617473;
    }
    if (v10 == v12 && v9 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_28;
      }
    }
    if ((*(unsigned char *)(v39 + 55) & 1) == 0)
    {
LABEL_28:
      swift_release();
      goto LABEL_29;
    }
    uint64_t v23 = v39;
    uint64_t v24 = v41;
    unint64_t v25 = *(void *)(v41 + 16);
    if (*(void *)(v41 + 24) <= v25)
    {
      sub_1C680082C(v25 + 1, v16, v17, v18, v19, v20, v21, v22, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        vars0,
        vars8);
      uint64_t v24 = v41;
    }
    sub_1C68ED938();
    sub_1C65F5C58();
    sub_1C68ED988();
    unint64_t v26 = sub_1C68ED218();
    *(void *)(v24 + 56 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(void *)(*(void *)(v24 + 48) + 8 * v26) = v23;
    ++*(void *)(v24 + 16);
LABEL_29:
    uint64_t v8 = sub_1C68ED2B8();
  }
  while (v8);
  uint64_t v6 = v41;
LABEL_31:
  swift_release_n();
LABEL_33:
  swift_release();
  return v6;
}

uint64_t sub_1C670A5B8()
{
  v8[1] = *MEMORY[0x1E4F143B8];
  OUTLINED_FUNCTION_17_24();
  uint64_t v3 = v2 >> 6;
  uint64_t v4 = 8 * (v2 >> 6);
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    sub_1C65F7DA0(0, v3, (void *)((char *)v8 - ((v4 + 15) & 0x3FFFFFFFFFFFFFF0)));
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_9_32();
    if (v0) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v6 = (void *)swift_slowAlloc();
    sub_1C65F7DA0(0, v3, v6);
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_9_32();
    OUTLINED_FUNCTION_0();
  }
  return v3;
}

uint64_t sub_1C670A6D8(uint64_t a1, void (*a2)(uint64_t))
{
  v13[1] = *MEMORY[0x1E4F143B8];
  OUTLINED_FUNCTION_17_24();
  uint64_t v6 = v5 >> 6;
  uint64_t v7 = 8 * (v5 >> 6);
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    sub_1C65F7DA0(0, v6, (void *)((char *)v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)));
    uint64_t v9 = OUTLINED_FUNCTION_32_12();
    a2(v9);
    OUTLINED_FUNCTION_9_32();
    if (a2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    sub_1C65F7DA0(0, v6, v10);
    uint64_t v11 = OUTLINED_FUNCTION_32_12();
    a2(v11);
    OUTLINED_FUNCTION_9_32();
    OUTLINED_FUNCTION_0();
  }
  return v2;
}

uint64_t sub_1C670A804(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_17_24();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v7 = MEMORY[0x1F4188790](isStackAllocationSafe);
    OUTLINED_FUNCTION_18_20(v7, v8, v9, v10, v11, v12, v13, v14, v19);
    uint64_t v15 = OUTLINED_FUNCTION_27_10();
    a3(v15);
    OUTLINED_FUNCTION_9_32();
    if (a3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v16 = (void *)swift_slowAlloc();
    OUTLINED_FUNCTION_52_4(v16);
    uint64_t v17 = OUTLINED_FUNCTION_27_10();
    a3(v17);
    OUTLINED_FUNCTION_9_32();
    OUTLINED_FUNCTION_0();
  }
  return v3;
}

uint64_t sub_1C670A90C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = *(unsigned char *)(a1 + 32) & 0x3F;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v4 <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v6 = MEMORY[0x1F4188790](isStackAllocationSafe);
    OUTLINED_FUNCTION_18_20(v6, v7, v8, v9, v10, v11, v12, v13, v19);
    swift_retain();
    uint64_t v14 = OUTLINED_FUNCTION_28_11();
    uint64_t v15 = a3(v14);
    swift_release();
    if (v4) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v16 = (void *)swift_slowAlloc();
    OUTLINED_FUNCTION_52_4(v16);
    swift_retain();
    uint64_t v17 = OUTLINED_FUNCTION_28_11();
    uint64_t v15 = a3(v17);
    swift_release();
    OUTLINED_FUNCTION_0();
    swift_release_n();
  }
  swift_release();
  return v15;
}

void sub_1C670AA94(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  unint64_t v12 = 0x1EA405000uLL;
LABEL_4:
  uint64_t v37 = v5;
  while (1)
  {
    while (1)
    {
      do
      {
        if (v10)
        {
          unint64_t v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v14 = v13 | (v6 << 6);
        }
        else
        {
          if (__OFADD__(v6++, 1)) {
            goto LABEL_63;
          }
          if (v6 >= v11) {
            goto LABEL_61;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v6);
          if (!v16)
          {
            int64_t v17 = v6 + 1;
            if (v6 + 1 >= v11) {
              goto LABEL_61;
            }
            unint64_t v16 = *(void *)(v7 + 8 * v17);
            if (!v16)
            {
              int64_t v17 = v6 + 2;
              if (v6 + 2 >= v11) {
                goto LABEL_61;
              }
              unint64_t v16 = *(void *)(v7 + 8 * v17);
              if (!v16)
              {
                int64_t v17 = v6 + 3;
                if (v6 + 3 >= v11) {
                  goto LABEL_61;
                }
                unint64_t v16 = *(void *)(v7 + 8 * v17);
                if (!v16)
                {
                  while (1)
                  {
                    int64_t v6 = v17 + 1;
                    if (__OFADD__(v17, 1)) {
                      goto LABEL_64;
                    }
                    if (v6 >= v11) {
                      goto LABEL_61;
                    }
                    unint64_t v16 = *(void *)(v7 + 8 * v6);
                    ++v17;
                    if (v16) {
                      goto LABEL_17;
                    }
                  }
                }
              }
            }
            int64_t v6 = v17;
          }
LABEL_17:
          unint64_t v10 = (v16 - 1) & v16;
          unint64_t v14 = __clz(__rbit64(v16)) + (v6 << 6);
        }
        uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
      }
      while (!sub_1C65F8044());
      uint64_t v19 = *(void *)(v12 + 1776);
      swift_retain();
      if (v19 != -1) {
        swift_once();
      }
      uint64_t v20 = *(void *)(qword_1EA442788 + 16);
      if (v20) {
        break;
      }
LABEL_45:
      swift_release();
    }
    int v21 = *(unsigned __int8 *)(v18 + 16);
    if (*(unsigned __int8 *)(qword_1EA442788 + 32) != v21) {
      break;
    }
LABEL_23:
    int v22 = *(unsigned __int8 *)(v18 + 49);
    uint64_t v23 = 0x746573746F6ELL;
    if (v22 == 1) {
      uint64_t v23 = 6581861;
    }
    unint64_t v24 = 0xE300000000000000;
    if (v22 != 1) {
      unint64_t v24 = 0xE600000000000000;
    }
    if (*(unsigned char *)(v18 + 49)) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = 0x7472617473;
    }
    if (*(unsigned char *)(v18 + 49)) {
      unint64_t v26 = v24;
    }
    else {
      unint64_t v26 = 0xE500000000000000;
    }
    uint64_t v27 = v7;
    int64_t v28 = v11;
    if (a4)
    {
      if (a4 == 1) {
        uint64_t v29 = 6581861;
      }
      else {
        uint64_t v29 = 0x746573746F6ELL;
      }
      if (a4 == 1) {
        unint64_t v30 = 0xE300000000000000;
      }
      else {
        unint64_t v30 = 0xE600000000000000;
      }
    }
    else
    {
      unint64_t v30 = 0xE500000000000000;
      uint64_t v29 = 0x7472617473;
    }
    if (v25 == v29 && v26 == v30)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      int64_t v11 = v28;
      uint64_t v7 = v27;
      uint64_t v4 = a3;
      unint64_t v12 = 0x1EA405000;
LABEL_58:
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v5 = v37 + 1;
      if (!__OFADD__(v37, 1)) {
        goto LABEL_4;
      }
      __break(1u);
LABEL_61:
      swift_retain();
      sub_1C67A38E0(a1, a2, v37, v4);
      return;
    }
    char v34 = sub_1C68ED7E8();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v11 = v28;
    uint64_t v7 = v27;
    uint64_t v4 = a3;
    unint64_t v12 = 0x1EA405000;
    if (v34) {
      goto LABEL_58;
    }
  }
  if (v20 == 1) {
    goto LABEL_45;
  }
  uint64_t v31 = 33;
  while (1)
  {
    uint64_t v32 = v31 - 31;
    if (__OFADD__(v31 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(qword_1EA442788 + v31) == v21) {
      goto LABEL_23;
    }
    ++v31;
    if (v32 == v20) {
      goto LABEL_45;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

void sub_1C670ADD8(unint64_t *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v8 << 6);
      goto LABEL_17;
    }
    BOOL v16 = __OFADD__(v8++, 1);
    if (v16)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v8 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v8);
    if (!v17) {
      break;
    }
LABEL_16:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v19 + (v8 << 6);
LABEL_17:
    uint64_t v20 = *(void *)(*(void *)(a3 + 48) + 8 * v15);
    if (!*(unsigned char *)(v20 + 48)
      && *(double *)(v20 + 24) == 0.0
      && *(unsigned __int8 *)(v20 + 16) == a4
      && *(unsigned char *)(v20 + 50) == 1)
    {
      *(unint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      BOOL v16 = __OFADD__(v7++, 1);
      if (v16) {
        goto LABEL_31;
      }
    }
  }
  int64_t v18 = v8 + 1;
  if (v8 + 1 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v8 + 2;
  if (v8 + 2 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v8 + 3;
  if (v8 + 3 >= v13)
  {
LABEL_28:
    swift_retain();
    sub_1C67A38E0(a1, a2, v7, a3);
    return;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v8 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1C670AF74(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  uint64_t v28 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v6++, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v6 >= v11) {
      goto LABEL_47;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_18:
    uint64_t v17 = *(void *)(*(void *)(a3 + 48) + 8 * v13);
    int v18 = *(unsigned __int8 *)(v17 + 51);
    if ((v18 - 42) <= 0xFFFFFFFB && (v18 & 0xFFFFFFF7) == 0x10)
    {
      int v19 = *(unsigned __int8 *)(v17 + 49);
      if (v19)
      {
        if (v19 == 1)
        {
          unint64_t v20 = 0xE300000000000000;
          uint64_t v21 = 6581861;
        }
        else
        {
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x746573746F6ELL;
        }
      }
      else
      {
        unint64_t v20 = 0xE500000000000000;
        uint64_t v21 = 0x7472617473;
      }
      if (a4)
      {
        if (a4 == 1) {
          uint64_t v22 = 6581861;
        }
        else {
          uint64_t v22 = 0x746573746F6ELL;
        }
        if (a4 == 1) {
          unint64_t v23 = 0xE300000000000000;
        }
        else {
          unint64_t v23 = 0xE600000000000000;
        }
      }
      else
      {
        unint64_t v23 = 0xE500000000000000;
        uint64_t v22 = 0x7472617473;
      }
      if (v21 == v22 && v20 == v23)
      {
        swift_bridgeObjectRelease_n();
LABEL_44:
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        uint64_t v5 = v28 + 1;
        if (!__OFADD__(v28, 1)) {
          goto LABEL_4;
        }
        __break(1u);
LABEL_47:
        swift_retain();
        sub_1C67A38E0(a1, a2, v28, a3);
        return;
      }
      char v25 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_44;
      }
    }
  }
  int64_t v16 = v6 + 1;
  if (v6 + 1 >= v11) {
    goto LABEL_47;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v6 + 2;
  if (v6 + 2 >= v11) {
    goto LABEL_47;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v6 + 3;
  if (v6 + 3 >= v11) {
    goto LABEL_47;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v6 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_47;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_49:
  __break(1u);
}

void sub_1C670B1FC(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v25 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v27 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v5 << 6);
LABEL_17:
    unint64_t v15 = *(unsigned __int8 **)(*(void *)(a3 + 48) + 8 * v11);
    if (v15[51] == 38)
    {
      if (v15[49])
      {
        if (v15[49] == 1)
        {
          unint64_t v16 = 0xE300000000000000;
          uint64_t v17 = 6581861;
        }
        else
        {
          unint64_t v16 = 0xE600000000000000;
          uint64_t v17 = 0x746573746F6ELL;
        }
      }
      else
      {
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x7472617473;
      }
      if (a4)
      {
        if (a4 == 1) {
          uint64_t v18 = 6581861;
        }
        else {
          uint64_t v18 = 0x746573746F6ELL;
        }
        if (a4 == 1) {
          unint64_t v19 = 0xE300000000000000;
        }
        else {
          unint64_t v19 = 0xE600000000000000;
        }
      }
      else
      {
        unint64_t v19 = 0xE500000000000000;
        uint64_t v18 = 0x7472617473;
      }
      if (v17 == v18 && v16 == v19)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_38:
        int v22 = v15[16];
        swift_release();
        if (v22 == 4)
        {
          *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
          BOOL v12 = __OFADD__(v25++, 1);
          if (v12) {
            goto LABEL_49;
          }
        }
      }
      else
      {
        char v21 = sub_1C68ED7E8();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_38;
        }
        swift_release();
      }
    }
  }
  BOOL v12 = __OFADD__(v5++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v5 >= v27) {
    goto LABEL_46;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v5);
  if (v13)
  {
LABEL_16:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
    goto LABEL_17;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v27) {
    goto LABEL_46;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v5 + 2;
  if (v5 + 2 >= v27) {
    goto LABEL_46;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v5 + 3;
  if (v5 + 3 >= v27)
  {
LABEL_46:
    swift_retain();
    sub_1C67A38E0(a1, a2, v25, a3);
    return;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v5 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v27) {
      goto LABEL_46;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

void sub_1C670B4BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v14) + 50) == 1)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C67A38E0(a1, a2, v6, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_1C670B634(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v14) + 51) == 38)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C67A38E0(a1, a2, v6, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1C670B7AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v30 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  uint64_t v31 = v6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v7 << 6);
LABEL_18:
    unint64_t v16 = *(unsigned __int8 **)(*(void *)(a3 + 48) + 8 * v12);
    if (v16[16] == *(unsigned __int8 *)(a4 + 16))
    {
      if (v16[49])
      {
        if (v16[49] == 1)
        {
          unint64_t v17 = 0xE300000000000000;
          uint64_t v18 = 6581861;
        }
        else
        {
          unint64_t v17 = 0xE600000000000000;
          uint64_t v18 = 0x746573746F6ELL;
        }
      }
      else
      {
        unint64_t v17 = 0xE500000000000000;
        uint64_t v18 = 0x7472617473;
      }
      int v19 = *(unsigned __int8 *)(a4 + 49);
      uint64_t v20 = 0x746573746F6ELL;
      if (v19 == 1) {
        uint64_t v20 = 6581861;
      }
      unint64_t v21 = 0xE300000000000000;
      if (v19 != 1) {
        unint64_t v21 = 0xE600000000000000;
      }
      if (*(unsigned char *)(a4 + 49)) {
        uint64_t v22 = v20;
      }
      else {
        uint64_t v22 = 0x7472617473;
      }
      if (*(unsigned char *)(a4 + 49)) {
        unint64_t v23 = v21;
      }
      else {
        unint64_t v23 = 0xE500000000000000;
      }
      if (v18 == v22 && v17 == v23)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
        goto LABEL_41;
      }
      char v25 = sub_1C68ED7E8();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_41:
        int v26 = v16[51];
        uint64_t result = swift_release();
        if (v26 != 39)
        {
          *(unint64_t *)((char *)v30 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
          uint64_t v6 = v31 + 1;
          if (!__OFADD__(v31, 1)) {
            goto LABEL_4;
          }
          __break(1u);
LABEL_50:
          swift_retain();
          sub_1C67A38E0(v30, a2, v31, a3);
          uint64_t v28 = v27;
          swift_release();
          return v28;
        }
      }
      else
      {
        uint64_t result = swift_release();
      }
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v7 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v7);
  if (v14)
  {
LABEL_17:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_18;
  }
  int64_t v15 = v7 + 1;
  if (v7 + 1 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v7 + 2;
  if (v7 + 2 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v7 + 3;
  if (v7 + 3 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14)
  {
LABEL_16:
    int64_t v7 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v33) {
      goto LABEL_50;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1C670BA8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v30 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  uint64_t v31 = v6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v7 << 6);
LABEL_18:
    unint64_t v16 = *(unsigned __int8 **)(*(void *)(a3 + 48) + 8 * v12);
    if (v16[16] == *(unsigned __int8 *)(a4 + 16))
    {
      if (v16[49])
      {
        if (v16[49] == 1)
        {
          unint64_t v17 = 0xE300000000000000;
          uint64_t v18 = 6581861;
        }
        else
        {
          unint64_t v17 = 0xE600000000000000;
          uint64_t v18 = 0x746573746F6ELL;
        }
      }
      else
      {
        unint64_t v17 = 0xE500000000000000;
        uint64_t v18 = 0x7472617473;
      }
      int v19 = *(unsigned __int8 *)(a4 + 49);
      uint64_t v20 = 0x746573746F6ELL;
      if (v19 == 1) {
        uint64_t v20 = 6581861;
      }
      unint64_t v21 = 0xE300000000000000;
      if (v19 != 1) {
        unint64_t v21 = 0xE600000000000000;
      }
      if (*(unsigned char *)(a4 + 49)) {
        uint64_t v22 = v20;
      }
      else {
        uint64_t v22 = 0x7472617473;
      }
      if (*(unsigned char *)(a4 + 49)) {
        unint64_t v23 = v21;
      }
      else {
        unint64_t v23 = 0xE500000000000000;
      }
      if (v18 == v22 && v17 == v23)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
        goto LABEL_41;
      }
      char v25 = sub_1C68ED7E8();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_41:
        int v26 = v16[51];
        uint64_t result = swift_release();
        if (v26 == 38)
        {
          *(unint64_t *)((char *)v30 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
          uint64_t v6 = v31 + 1;
          if (!__OFADD__(v31, 1)) {
            goto LABEL_4;
          }
          __break(1u);
LABEL_50:
          swift_retain();
          sub_1C67A38E0(v30, a2, v31, a3);
          uint64_t v28 = v27;
          swift_release();
          return v28;
        }
      }
      else
      {
        uint64_t result = swift_release();
      }
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v7 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v7);
  if (v14)
  {
LABEL_17:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_18;
  }
  int64_t v15 = v7 + 1;
  if (v7 + 1 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v7 + 2;
  if (v7 + 2 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v7 + 3;
  if (v7 + 3 >= v33) {
    goto LABEL_50;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14)
  {
LABEL_16:
    int64_t v7 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v33) {
      goto LABEL_50;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

void sub_1C670BD6C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_17;
    }
    BOOL v15 = __OFADD__(v7++, 1);
    if (v15)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v7 >= v12) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = v18 + (v7 << 6);
LABEL_17:
    uint64_t v19 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    if (*(unsigned char *)(v19 + 51) != 38 && (*(unsigned char *)(v19 + 54) & 1) == 0)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v6++, 1);
      if (v15) {
        goto LABEL_29;
      }
    }
  }
  int64_t v17 = v7 + 1;
  if (v7 + 1 >= v12) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 2;
  if (v7 + 2 >= v12) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 3;
  if (v7 + 3 >= v12)
  {
LABEL_26:
    swift_retain();
    sub_1C67A38E0(a1, a2, v6, a3);
    return;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v7 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1C670BEEC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a2;
  uint64_t v44 = a4;
  uint64_t v38 = a1;
  uint64_t v43 = sub_1C68E9C68();
  uint64_t result = MEMORY[0x1F4188790](v43);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v10 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v42 = a3;
  uint64_t v39 = 0;
  uint64_t v40 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
    }
    else
    {
      int64_t v17 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_58;
      }
      if (v17 >= v14)
      {
LABEL_56:
        swift_retain();
        sub_1C67A38E0(v38, v37, v39, a3);
        uint64_t v36 = v35;
        swift_release();
        return v36;
      }
      unint64_t v18 = *(void *)(v10 + 8 * v17);
      ++v9;
      if (!v18)
      {
        int64_t v9 = v17 + 1;
        if (v17 + 1 >= v14) {
          goto LABEL_56;
        }
        unint64_t v18 = *(void *)(v10 + 8 * v9);
        if (!v18)
        {
          int64_t v9 = v17 + 2;
          if (v17 + 2 >= v14) {
            goto LABEL_56;
          }
          unint64_t v18 = *(void *)(v10 + 8 * v9);
          if (!v18)
          {
            int64_t v19 = v17 + 3;
            if (v19 >= v14) {
              goto LABEL_56;
            }
            unint64_t v18 = *(void *)(v10 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                int64_t v9 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_59;
                }
                if (v9 >= v14) {
                  goto LABEL_56;
                }
                unint64_t v18 = *(void *)(v10 + 8 * v9);
                ++v19;
                if (v18) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v9 = v19;
          }
        }
      }
LABEL_19:
      unint64_t v13 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
    }
    uint64_t v20 = *(void *)(*(void *)(a3 + 48) + 8 * v16);
    int v21 = *(unsigned __int8 *)(v20 + 16);
    if (v21 != 12 && v21 != 3) {
      goto LABEL_32;
    }
    if (*(unsigned char *)(v20 + 53) == 1)
    {
      swift_retain();
LABEL_27:
      char v23 = 1;
      goto LABEL_45;
    }
    if (v21 == 3)
    {
      uint64_t v24 = v10;
      int64_t v25 = v14;
      uint64_t v26 = v43;
      (*v41)(v8, *(void *)(v44 + 24) + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat, v43);
      swift_retain();
      char v27 = sub_1C65F6054();
      uint64_t v28 = v26;
      int64_t v14 = v25;
      uint64_t v10 = v24;
      a3 = v42;
      uint64_t result = (*v40)(v8, v28);
      if ((v27 & 1) != 0 && *(unsigned char *)(v20 + 51) == 39)
      {
        int v21 = *(unsigned __int8 *)(v20 + 16);
        goto LABEL_27;
      }
    }
    else
    {
LABEL_32:
      uint64_t result = swift_retain();
    }
    if (qword_1EA4056F0 != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v29 = *(void *)(qword_1EA442788 + 16);
    int v21 = *(unsigned __int8 *)(v20 + 16);
    if (!v29) {
      goto LABEL_44;
    }
    if (*(unsigned __int8 *)(qword_1EA442788 + 32) != v21) {
      break;
    }
LABEL_37:
    if (*(unsigned char *)(v20 + 50) == 1)
    {
      char v23 = *(unsigned char *)(v20 + 53);
      goto LABEL_45;
    }
LABEL_44:
    char v23 = 0;
LABEL_45:
    if (v21 == 4 && !*(unsigned char *)(v20 + 48))
    {
      double v33 = *(double *)(v20 + 24);
      uint64_t result = swift_release();
      if (v33 > 12.0) {
        char v34 = 1;
      }
      else {
        char v34 = v23;
      }
      if (v34) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t result = swift_release();
      if (v23)
      {
LABEL_48:
        *(unint64_t *)((char *)v38 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        if (__OFADD__(v39++, 1)) {
          goto LABEL_60;
        }
      }
    }
  }
  if (v29 == 1) {
    goto LABEL_44;
  }
  uint64_t v30 = 33;
  while (1)
  {
    uint64_t v31 = v30 - 31;
    if (__OFADD__(v30 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(qword_1EA442788 + v30) == v21) {
      goto LABEL_37;
    }
    ++v30;
    if (v31 == v29) {
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

void sub_1C670C2C8(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v11;
LABEL_4:
  uint64_t v39 = v5;
  while (1)
  {
    do
    {
      if (v10)
      {
        unint64_t v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v13 = v12 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6++, 1)) {
          goto LABEL_75;
        }
        if (v6 >= v11) {
          goto LABEL_72;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15)
        {
          int64_t v16 = v6 + 1;
          if (v6 + 1 >= v11) {
            goto LABEL_72;
          }
          unint64_t v15 = *(void *)(v7 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v6 + 2;
            if (v6 + 2 >= v11) {
              goto LABEL_72;
            }
            unint64_t v15 = *(void *)(v7 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v6 + 3;
              if (v6 + 3 >= v11) {
                goto LABEL_72;
              }
              unint64_t v15 = *(void *)(v7 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v6 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_76;
                  }
                  if (v6 >= v11) {
                    goto LABEL_72;
                  }
                  unint64_t v15 = *(void *)(v7 + 8 * v6);
                  ++v16;
                  if (v15) {
                    goto LABEL_17;
                  }
                }
              }
            }
          }
          int64_t v6 = v16;
        }
LABEL_17:
        unint64_t v10 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
      }
      int64_t v17 = *(unsigned __int8 **)(*(void *)(a3 + 48) + 8 * v13);
    }
    while (!sub_1C65F8044());
    uint64_t v18 = qword_1EA4056E8;
    swift_retain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = *(void *)(qword_1EA442780 + 16);
    if (v19)
    {
      int v20 = v17[16];
      if (*(unsigned __int8 *)(qword_1EA442780 + 32) == v20) {
        goto LABEL_32;
      }
      if (v19 != 1) {
        break;
      }
    }
LABEL_28:
    if (qword_1EA4056F0 != -1) {
      swift_once();
    }
    uint64_t v23 = *(void *)(qword_1EA442788 + 16);
    if (!v23) {
      goto LABEL_68;
    }
    int v24 = v17[16];
    if (*(unsigned __int8 *)(qword_1EA442788 + 32) == v24)
    {
LABEL_32:
      int v25 = v17[49];
      uint64_t v26 = 0x746573746F6ELL;
      if (v25 == 1) {
        uint64_t v26 = 6581861;
      }
      unint64_t v27 = 0xE300000000000000;
      if (v25 != 1) {
        unint64_t v27 = 0xE600000000000000;
      }
      if (v17[49]) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = 0x7472617473;
      }
      if (v17[49]) {
        unint64_t v29 = v27;
      }
      else {
        unint64_t v29 = 0xE500000000000000;
      }
      if (a4)
      {
        if (a4 == 1) {
          uint64_t v30 = 6581861;
        }
        else {
          uint64_t v30 = 0x746573746F6ELL;
        }
        if (a4 == 1) {
          unint64_t v31 = 0xE300000000000000;
        }
        else {
          unint64_t v31 = 0xE600000000000000;
        }
      }
      else
      {
        unint64_t v31 = 0xE500000000000000;
        uint64_t v30 = 0x7472617473;
      }
      if (v28 == v30 && v29 == v31)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_61;
      }
      char v33 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v33)
      {
LABEL_61:
        unsigned __int8 v34 = v17[53];
        swift_release();
        int64_t v11 = v40;
        if (v34)
        {
          *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          uint64_t v5 = v39 + 1;
          if (!__OFADD__(v39, 1)) {
            goto LABEL_4;
          }
          __break(1u);
LABEL_72:
          swift_retain();
          sub_1C67A38E0(a1, a2, v39, a3);
          return;
        }
      }
      else
      {
        swift_release();
        int64_t v11 = v40;
      }
    }
    else
    {
      if (v23 != 1)
      {
        uint64_t v35 = 33;
        do
        {
          uint64_t v36 = v35 - 31;
          if (__OFADD__(v35 - 32, 1)) {
            goto LABEL_74;
          }
          if (*(unsigned __int8 *)(qword_1EA442788 + v35) == v24) {
            goto LABEL_32;
          }
          ++v35;
        }
        while (v36 != v23);
      }
LABEL_68:
      swift_release();
    }
  }
  uint64_t v21 = 33;
  while (1)
  {
    uint64_t v22 = v21 - 31;
    if (__OFADD__(v21 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(qword_1EA442780 + v21) == v20) {
      goto LABEL_32;
    }
    ++v21;
    if (v22 == v19) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

uint64_t sub_1C670C67C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v29 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_20:
    if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v12) + 49))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v12) + 49) == 1)
      {
        unint64_t v16 = 0xE300000000000000;
        uint64_t v17 = 6581861;
      }
      else
      {
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x746573746F6ELL;
      }
    }
    else
    {
      unint64_t v16 = 0xE500000000000000;
      uint64_t v17 = 0x7472617473;
    }
    int v18 = *(unsigned __int8 *)(a4 + 49);
    uint64_t v19 = 0x746573746F6ELL;
    if (v18 == 1) {
      uint64_t v19 = 6581861;
    }
    unint64_t v20 = 0xE300000000000000;
    if (v18 != 1) {
      unint64_t v20 = 0xE600000000000000;
    }
    if (*(unsigned char *)(a4 + 49)) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = 0x7472617473;
    }
    if (*(unsigned char *)(a4 + 49)) {
      unint64_t v22 = v20;
    }
    else {
      unint64_t v22 = 0xE500000000000000;
    }
    if (v17 == v21 && v16 == v22)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_42:
      *(unint64_t *)((char *)v29 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
LABEL_45:
        swift_retain();
        sub_1C67A38E0(v29, a2, v30, a3);
        uint64_t v27 = v26;
        swift_release();
        return v27;
      }
    }
    else
    {
      char v24 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_42;
      }
    }
  }
  int64_t v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v13 >= v31) {
    goto LABEL_45;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v13);
  ++v6;
  if (v14) {
    goto LABEL_19;
  }
  int64_t v6 = v13 + 1;
  if (v13 + 1 >= v31) {
    goto LABEL_45;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v6);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v6 = v13 + 2;
  if (v13 + 2 >= v31) {
    goto LABEL_45;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v6);
  if (v14)
  {
LABEL_19:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
    goto LABEL_20;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v31) {
    goto LABEL_45;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v15);
  if (v14)
  {
    int64_t v6 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v31) {
      goto LABEL_45;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v6);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

BOOL sub_1C670C908(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v24 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_20:
    uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    uint64_t result = sub_1C65F8044();
    if (result)
    {
      unsigned int v19 = *(unsigned __int8 *)(v18 + 16);
      if ((v19 == 11 || *(unsigned __int8 *)(a4 + 16) < v19) && (*(unsigned char *)(v18 + 54) & 1) == 0)
      {
        *(unint64_t *)((char *)v24 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_27:
          swift_retain();
          sub_1C67A38E0(v24, a2, v6, a3);
          uint64_t v22 = v21;
          swift_release();
          return v22;
        }
      }
    }
  }
  int64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v15 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  ++v7;
  if (v16) {
    goto LABEL_19;
  }
  int64_t v7 = v15 + 1;
  if (v15 + 1 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v7);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v7 = v15 + 2;
  if (v15 + 2 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v7);
  if (v16)
  {
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_20;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C670CAD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = (unint64_t *)result;
  uint64_t v28 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v30 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v6 << 6);
LABEL_17:
    uint64_t v15 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    if (*(unsigned char *)(v15 + 49))
    {
      if (*(unsigned char *)(v15 + 49) == 1)
      {
        unint64_t v16 = 0xE300000000000000;
        uint64_t v17 = 6581861;
      }
      else
      {
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x746573746F6ELL;
      }
    }
    else
    {
      unint64_t v16 = 0xE500000000000000;
      uint64_t v17 = 0x7472617473;
    }
    int v18 = (0x20001u >> (8 * *(unsigned char *)(a4 + 49)));
    if ((0x20001u >> (8 * *(unsigned char *)(a4 + 49))))
    {
      if (v18 == 1) {
        uint64_t v19 = 6581861;
      }
      else {
        uint64_t v19 = 0x746573746F6ELL;
      }
      if (v18 == 1) {
        unint64_t v20 = 0xE300000000000000;
      }
      else {
        unint64_t v20 = 0xE600000000000000;
      }
    }
    else
    {
      unint64_t v20 = 0xE500000000000000;
      uint64_t v19 = 0x7472617473;
    }
    if (v17 == v19 && v16 == v20)
    {
      swift_retain();
      swift_bridgeObjectRelease_n();
LABEL_37:
      char v23 = *(unsigned char *)(v15 + 55);
      uint64_t result = swift_release();
      if (v23)
      {
        *(unint64_t *)((char *)v27 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v28++, 1);
        if (v12) {
          goto LABEL_48;
        }
      }
    }
    else
    {
      char v22 = sub_1C68ED7E8();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_37;
      }
      uint64_t result = swift_release();
    }
  }
  BOOL v12 = __OFADD__(v6++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v6 >= v30) {
    goto LABEL_45;
  }
  unint64_t v13 = *(void *)(v29 + 8 * v6);
  if (v13)
  {
LABEL_16:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_17;
  }
  int64_t v14 = v6 + 1;
  if (v6 + 1 >= v30) {
    goto LABEL_45;
  }
  unint64_t v13 = *(void *)(v29 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v6 + 2;
  if (v6 + 2 >= v30) {
    goto LABEL_45;
  }
  unint64_t v13 = *(void *)(v29 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v6 + 3;
  if (v6 + 3 >= v30)
  {
LABEL_45:
    swift_retain();
    sub_1C67A38E0(v27, a2, v28, a3);
    uint64_t v25 = v24;
    swift_release();
    return v25;
  }
  unint64_t v13 = *(void *)(v29 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v30) {
      goto LABEL_45;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C670CDAC(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_1C68ED278();
    if (!result) {
      return result;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C68ED238();
      type metadata accessor for DateTimeConstraint();
      sub_1C65F9424();
      uint64_t result = sub_1C68ECD98();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v4 = v22;
      int64_t v5 = v23;
      unint64_t v6 = v24;
    }
    else
    {
      uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v4 = ~v7;
      uint64_t v8 = -v7;
      if (v8 < 64) {
        uint64_t v9 = ~(-1 << v8);
      }
      else {
        uint64_t v9 = -1;
      }
      unint64_t v6 = v9 & *(void *)(a1 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v5 = 0;
    }
    int64_t v10 = (unint64_t)(v4 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v6)
      {
        uint64_t v11 = (v6 - 1) & v6;
        unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
        int64_t v13 = v5;
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          return sub_1C6645058();
        }
        unint64_t v16 = *(void *)(v18 + 8 * v15);
        int64_t v13 = v5 + 1;
        if (!v16)
        {
          int64_t v13 = v5 + 2;
          if (v5 + 2 >= v10) {
            return sub_1C6645058();
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            int64_t v13 = v5 + 3;
            if (v5 + 3 >= v10) {
              return sub_1C6645058();
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              int64_t v13 = v5 + 4;
              if (v5 + 4 >= v10) {
                return sub_1C6645058();
              }
              unint64_t v16 = *(void *)(v18 + 8 * v13);
              if (!v16)
              {
                int64_t v13 = v5 + 5;
                if (v5 + 5 >= v10) {
                  return sub_1C6645058();
                }
                unint64_t v16 = *(void *)(v18 + 8 * v13);
                if (!v16)
                {
                  int64_t v17 = v5 + 6;
                  while (v17 < v10)
                  {
                    unint64_t v16 = *(void *)(v18 + 8 * v17++);
                    if (v16)
                    {
                      int64_t v13 = v17 - 1;
                      goto LABEL_32;
                    }
                  }
                  return sub_1C6645058();
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v11 = (v16 - 1) & v16;
        unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      int64_t v14 = *(unsigned char **)(*(void *)(a1 + 48) + 8 * v12);
      swift_retain();
      if (!v14) {
        return sub_1C6645058();
      }
      while (1)
      {
        sub_1C6813000(v14);
        swift_release();
        uint64_t result = swift_release();
        int64_t v5 = v13;
        unint64_t v6 = v11;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_1C68ED2B8())
        {
          type metadata accessor for DateTimeConstraint();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          int64_t v14 = v19;
          swift_unknownObjectRelease();
          int64_t v13 = v5;
          uint64_t v11 = v6;
          if (v19) {
            continue;
          }
        }
        return sub_1C6645058();
      }
    }
  }
  uint64_t result = *(void *)(*(void *)v1 + 16);
  if (result) {
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1C670D078(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      uint64_t v6 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C68ED528();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v6 < v2)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v2 - v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (!(*v3 >> 62))
  {
    uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C68ED528();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C68ED528();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_17;
  }
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_20;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_38;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x1C87A4310](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = v11 + 32 + 8 * v4;
  type metadata accessor for DateTimeConstraint();
  swift_arrayDestroy();
  if (!v5) {
    goto LABEL_28;
  }
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C68ED528();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(v15, v2))
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = sub_1C669C220(v13 + 8 * v2, v15 - v2, v14);
  if (*v3 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C68ED528();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_26:
  if (__OFADD__(v17, v5))
  {
    __break(1u);
    return result;
  }
  *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17 + v5;
LABEL_28:

  return sub_1C68ECC18();
}

uint64_t sub_1C670D308(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407FD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C670D368(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = a1 - a2;
  if (__OFSUB__(0, v6))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = v5 - v6;
  if (__OFADD__(v5, v7))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v8) {
      uint64_t v10 = v5 + v7;
    }
    else {
      uint64_t v10 = v5;
    }
    uint64_t v4 = sub_1C65C7CD4(isUniquelyReferenced_nonNull_native, v10, 1, v4);
  }
  uint64_t v11 = *(void *)(sub_1C68E9BF8() - 8);
  unint64_t v12 = v4 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v13 = *(void *)(v11 + 72);
  swift_arrayDestroy();
  if (!v6) {
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)(v4 + 16);
  if (__OFSUB__(v14, a2)) {
    goto LABEL_22;
  }
  sub_1C669C53C(v12 + v13 * a2, v14 - a2);
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v16 = __OFADD__(v15, v7);
  uint64_t v17 = v15 - v6;
  if (!v16)
  {
    *(void *)(v4 + 16) = v17;
LABEL_16:
    uint64_t *v2 = v4;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_47()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_46()
{
  return 0x7472617473;
}

uint64_t OUTLINED_FUNCTION_3_37()
{
  return 0x746573746F6ELL;
}

unint64_t OUTLINED_FUNCTION_4_34(unint64_t result)
{
  *(void *)(v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_35()
{
  return sub_1C68ED218();
}

void OUTLINED_FUNCTION_8_37(uint64_t a1@<X8>)
{
  *(void *)(a1 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v1;
  *(void *)(*(void *)(v2 + 48) + 8 * v1) = v3;
  ++*(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_9_32()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_28()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_15_24()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_18_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1C65F7DA0(0, v9, (uint64_t *)((char *)&a9 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)));
}

uint64_t OUTLINED_FUNCTION_19_21()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_24_16(unint64_t result)
{
  *(void *)(v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= v2 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_17()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  return sub_1C68ED7E8();
}

uint64_t OUTLINED_FUNCTION_35_8()
{
  return 6581861;
}

uint64_t OUTLINED_FUNCTION_41_11()
{
  return sub_1C68ED238();
}

uint64_t OUTLINED_FUNCTION_42_9()
{
  return sub_1C6645058();
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return v0;
}

uint64_t TerminalElement.DateTimePeriod.toDefinedDate()@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C670D924((void (*)(void))sub_1C67D4718, 7, a1);
}

uint64_t sub_1C670D8A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TerminalElement.DateTimePeriod.toDefinedTime()@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C670D924((void (*)(void))sub_1C67D4864, 3, a1);
}

uint64_t sub_1C670D924@<X0>(void (*a1)(void)@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C68EAA88();
  uint64_t v9 = sub_1C68EABD8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    uint64_t result = sub_1C670D8A8((uint64_t)v8);
    *a3 = a2;
  }
  else
  {
    a1();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  return result;
}

uint64_t TerminalElement.DateTimePeriod.toDefinedDateTimeRange(qualifier:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C68EAA88();
  uint64_t v7 = sub_1C68EABD8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    uint64_t result = sub_1C670D8A8((uint64_t)v6);
    *a2 = 38;
  }
  else
  {
    sub_1C67D4954(a1, 0, a2);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

uint64_t DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)OUTLINED_FUNCTION_6_38();
  v4[2] = 0;
  v4[3] = a1;
  v4[5] = 0;
  v4[6] = 0;
  v4[4] = a2;
  return OUTLINED_FUNCTION_19_22((uint64_t)v4);
}

uint64_t DateTime.DateTimeRange.__allocating_init(at:start:end:duration:interval:definedValue:qualifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7)
{
  uint64_t result = OUTLINED_FUNCTION_6_38();
  char v15 = *a6;
  char v16 = *a7;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(unsigned char *)(result + 56) = v15;
  *(unsigned char *)(result + 57) = v16;
  return result;
}

uint64_t static DateTime.DateTimeRange.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C670E1F8(a1, a2, static DateTime.< infix(_:_:));
}

uint64_t DateTime.DateTimeRange.at.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.start.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.end.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.duration.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.interval.getter()
{
  return swift_retain();
}

void DateTime.DateTimeRange.definedValue.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

void DateTime.DateTimeRange.qualifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 57);
}

uint64_t DateTime.DateTimeRange.__allocating_init(withDateTime:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_6_38();
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  return OUTLINED_FUNCTION_19_22(v2);
}

uint64_t DateTime.DateTimeRange.init(withDateTime:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return OUTLINED_FUNCTION_5_36();
}

uint64_t DateTime.DateTimeRange.__allocating_init(withStartDateTime:)(uint64_t a1)
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_6_38();
  v2[2] = 0;
  v2[3] = a1;
  v2[5] = 0;
  v2[6] = 0;
  v2[4] = 0;
  return OUTLINED_FUNCTION_19_22((uint64_t)v2);
}

uint64_t DateTime.DateTimeRange.init(withStartDateTime:)(uint64_t a1)
{
  v1[2] = 0;
  v1[3] = a1;
  v1[5] = 0;
  v1[6] = 0;
  long long v1[4] = 0;
  return OUTLINED_FUNCTION_5_36();
}

uint64_t DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:interval:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)OUTLINED_FUNCTION_6_38();
  v6[5] = 0;
  v6[6] = a3;
  uint64_t v6[2] = 0;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_19_22((uint64_t)v6);
}

uint64_t DateTime.DateTimeRange.init(withStartDateTime:endDateTime:interval:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = 0;
  v3[6] = a3;
  void v3[2] = 0;
  v3[3] = a1;
  v3[4] = a2;
  return OUTLINED_FUNCTION_5_36();
}

uint64_t DateTime.DateTimeRange.__allocating_init(withStartDateTime:duration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)OUTLINED_FUNCTION_6_38();
  v4[2] = 0;
  v4[3] = a1;
  v4[4] = 0;
  v4[5] = a2;
  v4[6] = 0;
  return OUTLINED_FUNCTION_19_22((uint64_t)v4);
}

uint64_t DateTime.DateTimeRange.init(withStartDateTime:duration:)(uint64_t a1, uint64_t a2)
{
  v2[2] = 0;
  v2[3] = a1;
  v2[4] = 0;
  v2[5] = a2;
  v2[6] = 0;
  return OUTLINED_FUNCTION_5_36();
}

double DateTime.DateTimeRange.__allocating_init(withDefinedValue:)(unsigned char *a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_6_38();
  *(unsigned char *)(v2 + 56) = *a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 57) = 20;
  return result;
}

uint64_t DateTime.DateTimeRange.init(withDefinedValue:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 56) = *a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 57) = 20;
  return OUTLINED_FUNCTION_13_23();
}

double DateTime.DateTimeRange.__allocating_init(withDefinedValue:qualifier:)(unsigned char *a1, char *a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_6_38();
  char v5 = *a2;
  *(unsigned char *)(v4 + 56) = *a1;
  *(unsigned char *)(v4 + 57) = v5;
  double result = 0.0;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(void *)(v4 + 48) = 0;
  return result;
}

uint64_t DateTime.DateTimeRange.init(withDefinedValue:qualifier:)(unsigned char *a1, char *a2)
{
  char v3 = *a2;
  *(unsigned char *)(v2 + 56) = *a1;
  *(unsigned char *)(v2 + 57) = v3;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return OUTLINED_FUNCTION_13_23();
}

uint64_t DateTime.DateTimeRange.__allocating_init(withInterval:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_6_38();
  *(void *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return OUTLINED_FUNCTION_19_22(v2);
}

uint64_t DateTime.DateTimeRange.init(withInterval:)(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  return OUTLINED_FUNCTION_5_36();
}

uint64_t DateTime.DateTimeRange.__allocating_init(withDuration:)(uint64_t a1)
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_6_38();
  v2[5] = a1;
  v2[6] = 0;
  v2[2] = 0;
  v2[3] = 0;
  v2[4] = 0;
  return OUTLINED_FUNCTION_19_22((uint64_t)v2);
}

uint64_t DateTime.DateTimeRange.init(withDuration:)(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = 0;
  v1[2] = 0;
  v1[3] = 0;
  long long v1[4] = 0;
  return OUTLINED_FUNCTION_5_36();
}

uint64_t DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7)
{
  char v8 = *a6;
  char v9 = *a7;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(unsigned char *)(v7 + 56) = v8;
  *(unsigned char *)(v7 + 57) = v9;
  return OUTLINED_FUNCTION_13_23();
}

uint64_t sub_1C670DED8(uint64_t a1)
{
  if (*(void *)(v1 + 16))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C6700A10(a1);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(void *)(v1 + 32))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C6700A10(a1);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(void *)(v1 + 24))
  {
    OUTLINED_FUNCTION_11_21();
    swift_retain();
    sub_1C6700A10(a1);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(void *)(v1 + 40))
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C6760F88();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(void *)(v1 + 48))
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C6760F88();
  }
  else
  {
    OUTLINED_FUNCTION_12_18();
  }
  if (*(unsigned char *)(v1 + 56) == 38)
  {
    OUTLINED_FUNCTION_12_18();
  }
  else
  {
    OUTLINED_FUNCTION_11_21();
    sub_1C68ED948();
  }
  if (*(unsigned char *)(v1 + 57) == 20) {
    return OUTLINED_FUNCTION_12_18();
  }
  OUTLINED_FUNCTION_11_21();
  return sub_1C68ED948();
}

BOOL static DateTime.DateTimeRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (!v4) {
      return 0;
    }
    type metadata accessor for DateTime();
    swift_retain();
    uint64_t v5 = swift_retain();
    BOOL v6 = static DateTime.== infix(_:_:)(v5, v4);
    swift_release();
    swift_release();
    if (!v6) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (!v7) {
      return 0;
    }
    type metadata accessor for DateTime();
    swift_retain();
    uint64_t v8 = swift_retain();
    BOOL v9 = static DateTime.== infix(_:_:)(v8, v7);
    swift_release();
    swift_release();
    if (!v9) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (!v10) {
      return 0;
    }
    type metadata accessor for DateTime();
    swift_retain();
    uint64_t v11 = swift_retain();
    BOOL v12 = static DateTime.== infix(_:_:)(v11, v10);
    swift_release();
    swift_release();
    if (!v12) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v13 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (!v13) {
      return 0;
    }
    type metadata accessor for DateTime.Interval();
    if (!OUTLINED_FUNCTION_37_8()) {
      return 0;
    }
  }
  else if (v13)
  {
    return 0;
  }
  uint64_t v14 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (!v14) {
      return 0;
    }
    type metadata accessor for DateTime.Interval();
    if (!OUTLINED_FUNCTION_37_8()) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  int v15 = *(unsigned __int8 *)(a1 + 56);
  int v16 = *(unsigned __int8 *)(a2 + 56);
  if (v15 == 38)
  {
    if (v16 == 38) {
      goto LABEL_28;
    }
    return 0;
  }
  if (v16 == 38 || v15 != v16) {
    return 0;
  }
LABEL_28:
  int v17 = *(unsigned __int8 *)(a1 + 57);
  int v18 = *(unsigned __int8 *)(a2 + 57);
  BOOL v19 = v18 == 20;
  BOOL v21 = v18 != 20 && v17 == v18;
  if (v17 == 20) {
    return v19;
  }
  else {
    return v21;
  }
}

uint64_t static DateTime.DateTimeRange.<= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C670E1F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.<= infix(_:_:));
}

uint64_t sub_1C670E1F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      type metadata accessor for DateTime();
      swift_retain();
      swift_retain();
      char v8 = static DateTime.< infix(_:_:)(v3, v5);
      swift_release();
      swift_release();
      if (v8) {
        return 1;
      }
      swift_retain();
      swift_retain();
      if (static DateTime.== infix(_:_:)(v3, v5)
        && (uint64_t v10 = *(void *)(a1 + 32)) != 0
        && (uint64_t v11 = *(void *)(a2 + 32)) != 0)
      {
        swift_retain();
        swift_retain();
        char v12 = a3(v10, v11);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v12) {
          return 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
  }
  return 0;
}

uint64_t static DateTime.DateTimeRange.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C670E35C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.<= infix(_:_:));
}

uint64_t static DateTime.DateTimeRange.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C670E35C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.< infix(_:_:));
}

uint64_t sub_1C670E35C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void **)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = *(void **)(a2 + 24);
    if (v5)
    {
      type metadata accessor for DateTime();
      swift_retain();
      swift_retain();
      BOOL v8 = static DateTime.<= infix(_:_:)(v3, v5);
      swift_release();
      swift_release();
      if (!v8) {
        return 1;
      }
      swift_retain();
      swift_retain();
      if (static DateTime.== infix(_:_:)((uint64_t)v3, (uint64_t)v5)
        && (uint64_t v9 = *(void *)(a1 + 32)) != 0
        && (uint64_t v10 = *(void *)(a2 + 32)) != 0)
      {
        swift_retain();
        swift_retain();
        char v11 = a3(v9, v10);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if ((v11 & 1) == 0) {
          return 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
  }
  return 0;
}

uint64_t sub_1C670E48C()
{
  if (*(void *)(v0 + 24) && *(void *)(v0 + 32))
  {
    swift_retain();
    uint64_t v1 = swift_retain();
    uint64_t v5 = sub_1C65F4D44(v1);
    uint64_t v2 = sub_1C68ECA18();
    sub_1C65F4D44(v2);
    sub_1C68ECA18();
    swift_release();
    swift_release();
  }
  else
  {
    if (*(unsigned char *)(v0 + 56) != 38)
    {
      uint64_t v5 = 0;
      sub_1C68ECA18();
      sub_1C68ED4C8();
      return v5;
    }
    if (*(void *)(v0 + 16))
    {
      uint64_t v5 = 4027489;
      uint64_t v3 = swift_retain();
      sub_1C65F4D44(v3);
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      swift_release();
      return v5;
    }
    if (!*(void *)(v0 + 40)) {
      return 0;
    }
    uint64_t v5 = 0x6E6F697461727564;
    swift_retain();
    sub_1C67610AC();
    sub_1C68ECA18();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C670E644(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 29793 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 6581861 && a2 == 0xE300000000000000;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61;
            if (v10 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x656966696C617571 && a2 == 0xE900000000000072)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_1C68ED7E8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C670E910(char a1)
{
  uint64_t result = 29793;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7472617473;
      break;
    case 2:
      uint64_t result = 6581861;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      uint64_t result = 0x6C61767265746E69;
      break;
    case 5:
      uint64_t result = 0x5664656E69666564;
      break;
    case 6:
      uint64_t result = 0x656966696C617571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C670E9EC()
{
  return sub_1C670E910(*v0);
}

uint64_t sub_1C670E9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C670E644(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C670EA1C(uint64_t a1)
{
  unint64_t v2 = sub_1C670F2B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C670EA58(uint64_t a1)
{
  unint64_t v2 = sub_1C670F2B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C670EA94(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407FE0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  BOOL v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C670F2B4();
  sub_1C68EDA08();
  uint64_t v13 = *(void *)(v3 + 16);
  HIBYTE(v12) = 0;
  type metadata accessor for DateTime();
  sub_1C670F818(&qword_1EA407FF0, 255, (void (*)(uint64_t))type metadata accessor for DateTime);
  OUTLINED_FUNCTION_3_38();
  if (!v2)
  {
    uint64_t v13 = *(void *)(v3 + 24);
    HIBYTE(v12) = 1;
    OUTLINED_FUNCTION_3_38();
    uint64_t v13 = *(void *)(v3 + 32);
    HIBYTE(v12) = 2;
    OUTLINED_FUNCTION_3_38();
    uint64_t v13 = *(void *)(v3 + 40);
    HIBYTE(v12) = 3;
    type metadata accessor for DateTime.Interval();
    sub_1C670F818(&qword_1EA407FF8, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Interval);
    OUTLINED_FUNCTION_3_38();
    uint64_t v13 = *(void *)(v3 + 48);
    HIBYTE(v12) = 4;
    OUTLINED_FUNCTION_3_38();
    LOBYTE(v13) = *(unsigned char *)(v3 + 56);
    HIBYTE(v12) = 5;
    sub_1C670F300();
    OUTLINED_FUNCTION_32_13();
    LOBYTE(v13) = *(unsigned char *)(v3 + 57);
    HIBYTE(v12) = 6;
    sub_1C670F34C();
    OUTLINED_FUNCTION_32_13();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_1C670ECF0()
{
  sub_1C68ED938();
  sub_1C670DED8((uint64_t)v1);
  return sub_1C68ED988();
}

uint64_t DateTime.DateTimeRange.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DateTime.DateTimeRange.init(from:)(a1);
  return v2;
}

uint64_t DateTime.DateTimeRange.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408010);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C670F2B4();
  sub_1C68ED9E8();
  if (v2)
  {
    type metadata accessor for DateTime.DateTimeRange();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for DateTime();
    sub_1C670F818(&qword_1EA408018, 255, (void (*)(uint64_t))type metadata accessor for DateTime);
    OUTLINED_FUNCTION_4_35();
    *(void *)(v1 + 16) = v8;
    OUTLINED_FUNCTION_4_35();
    *(void *)(v1 + 24) = v8;
    sub_1C68ED608();
    *(void *)(v1 + 32) = v8;
    type metadata accessor for DateTime.Interval();
    sub_1C670F818(&qword_1EA408020, 255, (void (*)(uint64_t))type metadata accessor for DateTime.Interval);
    OUTLINED_FUNCTION_4_35();
    *(void *)(v1 + 40) = v8;
    OUTLINED_FUNCTION_4_35();
    *(void *)(v1 + 48) = v8;
    sub_1C670F398();
    OUTLINED_FUNCTION_24_17();
    *(unsigned char *)(v1 + 56) = v8;
    sub_1C670F3E4();
    OUTLINED_FUNCTION_24_17();
    uint64_t v6 = OUTLINED_FUNCTION_2_47();
    v7(v6);
    *(unsigned char *)(v1 + 57) = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C670F104()
{
  return sub_1C670ECF0();
}

uint64_t sub_1C670F128(uint64_t a1)
{
  return sub_1C670DED8(a1);
}

uint64_t sub_1C670F14C()
{
  sub_1C68ED938();
  sub_1C670DED8((uint64_t)v1);
  return sub_1C68ED988();
}

BOOL sub_1C670F18C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.DateTimeRange.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C670F1B0(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.DateTimeRange.< infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1C670F1D4(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.DateTimeRange.<= infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1C670F1F8(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.DateTimeRange.>= infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1C670F21C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.DateTimeRange.> infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1C670F240@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DateTime.DateTimeRange.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C670F26C(void *a1)
{
  return sub_1C670EA94(a1);
}

uint64_t sub_1C670F290()
{
  return sub_1C670E48C();
}

unint64_t sub_1C670F2B4()
{
  unint64_t result = qword_1EA407FE8;
  if (!qword_1EA407FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA407FE8);
  }
  return result;
}

unint64_t sub_1C670F300()
{
  unint64_t result = qword_1EA408000;
  if (!qword_1EA408000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408000);
  }
  return result;
}

unint64_t sub_1C670F34C()
{
  unint64_t result = qword_1EA408008;
  if (!qword_1EA408008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408008);
  }
  return result;
}

unint64_t sub_1C670F398()
{
  unint64_t result = qword_1EA408028;
  if (!qword_1EA408028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408028);
  }
  return result;
}

unint64_t sub_1C670F3E4()
{
  unint64_t result = qword_1EA408030;
  if (!qword_1EA408030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408030);
  }
  return result;
}

uint64_t sub_1C670F430(uint64_t a1, uint64_t a2)
{
  return sub_1C670F818(&qword_1EA408038, a2, (void (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange);
}

uint64_t method lookup function for DateTime.DateTimeRange(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DateTime.DateTimeRange);
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDateTime:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:interval:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:duration:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDefinedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDefinedValue:qualifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(at:start:end:duration:interval:definedValue:qualifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

unsigned char *_s13DateTimeRangeC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C670F6F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13DateTimeRangeC10CodingKeysOMa()
{
  return &_s13DateTimeRangeC10CodingKeysON;
}

unint64_t sub_1C670F72C()
{
  unint64_t result = qword_1EA408040;
  if (!qword_1EA408040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408040);
  }
  return result;
}

unint64_t sub_1C670F77C()
{
  unint64_t result = qword_1EA408048;
  if (!qword_1EA408048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408048);
  }
  return result;
}

unint64_t sub_1C670F7CC()
{
  unint64_t result = qword_1EA408050;
  if (!qword_1EA408050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408050);
  }
  return result;
}

uint64_t sub_1C670F818(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_38()
{
  return sub_1C68ED6F8();
}

uint64_t OUTLINED_FUNCTION_4_35()
{
  return sub_1C68ED608();
}

uint64_t OUTLINED_FUNCTION_5_36()
{
  *(_WORD *)(v0 + 56) = 5158;
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_11_28()
{
  return *(void *)(v0 - 648);
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  return *(void *)(v0 - 664);
}

uint64_t OUTLINED_FUNCTION_13_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_25()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_19_22(uint64_t result)
{
  *(_WORD *)(result + 56) = 5158;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  return sub_1C68ED608();
}

uint64_t OUTLINED_FUNCTION_25_18(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, *(void *)(v1 - 296));
}

BOOL OUTLINED_FUNCTION_27_11(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  return sub_1C68ED6F8();
}

BOOL OUTLINED_FUNCTION_37_8()
{
  return static DateTime.Interval.== infix(_:_:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_40_9(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return v1 - 280;
}

uint64_t OUTLINED_FUNCTION_42_10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 - 320);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

uint64_t OUTLINED_FUNCTION_3_39()
{
  return sub_1C68ECA18();
}

void sub_1C670FB2C(unsigned char *a1)
{
  int v1 = *a1;
  switch(*a1)
  {
    case 8:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
      uint64_t inited = (__n128 *)swift_initStackObject();
      OUTLINED_FUNCTION_2_48(inited, (__n128)xmmword_1C68F8F50);
      OUTLINED_FUNCTION_7_35();
      OUTLINED_FUNCTION_5_30();
      char v3 = OUTLINED_FUNCTION_15_26();
      uint64_t v8 = OUTLINED_FUNCTION_4_36(v3, v4, v5, v6, v7);
      OUTLINED_FUNCTION_0_48(v8);
      char v9 = OUTLINED_FUNCTION_16_21();
      goto LABEL_11;
    case 9:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
      uint64_t inited = (__n128 *)swift_initStackObject();
      OUTLINED_FUNCTION_2_48(inited, (__n128)xmmword_1C68F8F50);
      OUTLINED_FUNCTION_7_35();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_39();
      char v24 = 9;
      goto LABEL_9;
    case 0xA:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
      uint64_t inited = (__n128 *)swift_initStackObject();
      OUTLINED_FUNCTION_2_48(inited, (__n128)xmmword_1C68F8F50);
      OUTLINED_FUNCTION_7_35();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_39();
      char v24 = 8;
      goto LABEL_9;
    case 0xB:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
      uint64_t inited = (__n128 *)swift_initStackObject();
      OUTLINED_FUNCTION_2_48(inited, (__n128)xmmword_1C68F8F50);
      OUTLINED_FUNCTION_7_35();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_39();
      char v24 = 11;
LABEL_9:
      uint64_t v25 = OUTLINED_FUNCTION_4_36(v24, v20, v21, v22, v23);
      OUTLINED_FUNCTION_0_48(v25);
      char v9 = OUTLINED_FUNCTION_15_26();
      goto LABEL_11;
    default:
      if (v1 == 31)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
        uint64_t inited = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_2_48(inited, (__n128)xmmword_1C68F8F50);
        OUTLINED_FUNCTION_7_35();
        OUTLINED_FUNCTION_5_30();
        char v26 = OUTLINED_FUNCTION_16_21();
        uint64_t v31 = OUTLINED_FUNCTION_4_36(v26, v27, v28, v29, v30);
        OUTLINED_FUNCTION_0_48(v31);
        char v9 = OUTLINED_FUNCTION_17_26();
        goto LABEL_11;
      }
      if (v1 == 32)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
        uint64_t inited = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_2_48(inited, (__n128)xmmword_1C68F8F50);
        OUTLINED_FUNCTION_7_35();
        OUTLINED_FUNCTION_5_30();
        char v14 = OUTLINED_FUNCTION_17_26();
        uint64_t v19 = OUTLINED_FUNCTION_4_36(v14, v15, v16, v17, v18);
        OUTLINED_FUNCTION_0_48(v19);
        OUTLINED_FUNCTION_6_39();
        char v9 = 1;
LABEL_11:
        inited[2].n128_u64[1] = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13);
        sub_1C68ECC18();
        sub_1C6689004();
        return;
      }
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C68ED528())
      {
        unint64_t v32 = MEMORY[0x1E4FBC860];
        sub_1C67FAECC(v32);
      }
      return;
  }
}

uint64_t sub_1C670FDCC(unsigned char *a1)
{
  int v1 = *a1;
  switch(*a1)
  {
    case 8:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_9_33();
      return sub_1C65F5C08(v2, v3, 0, 1, v4, 1, 0, 0);
    case 9:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_10_29();
      return sub_1C65F5C08(v2, v3, 0, 1, v4, 1, 0, 0);
    case 0xA:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_12_26();
      return sub_1C65F5C08(v2, v3, 0, 1, v4, 1, 0, 0);
    case 0xB:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_14_28();
      return sub_1C65F5C08(v2, v3, 0, 1, v4, 1, 0, 0);
    default:
      if (v1 == 31)
      {
        OUTLINED_FUNCTION_3_40();
        OUTLINED_FUNCTION_5_30();
        char v2 = OUTLINED_FUNCTION_11_29();
      }
      else
      {
        if (v1 != 32) {
          return 0;
        }
        OUTLINED_FUNCTION_3_40();
        OUTLINED_FUNCTION_5_30();
        char v2 = OUTLINED_FUNCTION_13_24();
      }
      return sub_1C65F5C08(v2, v3, 0, 1, v4, 1, 0, 0);
  }
}

uint64_t sub_1C670FEFC(unsigned char *a1)
{
  int v1 = *a1;
  switch(*a1)
  {
    case 8:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_9_33();
      return OUTLINED_FUNCTION_8_39(v2, v3, v4, v5, v6);
    case 9:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_10_29();
      return OUTLINED_FUNCTION_8_39(v2, v3, v4, v5, v6);
    case 0xA:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_12_26();
      return OUTLINED_FUNCTION_8_39(v2, v3, v4, v5, v6);
    case 0xB:
      OUTLINED_FUNCTION_5_37();
      OUTLINED_FUNCTION_5_30();
      char v2 = OUTLINED_FUNCTION_14_28();
      return OUTLINED_FUNCTION_8_39(v2, v3, v4, v5, v6);
    default:
      if (v1 == 31)
      {
        OUTLINED_FUNCTION_3_40();
        OUTLINED_FUNCTION_5_30();
        char v2 = OUTLINED_FUNCTION_11_29();
      }
      else
      {
        if (v1 != 32) {
          return 0;
        }
        OUTLINED_FUNCTION_3_40();
        OUTLINED_FUNCTION_5_30();
        char v2 = OUTLINED_FUNCTION_13_24();
      }
      return OUTLINED_FUNCTION_8_39(v2, v3, v4, v5, v6);
  }
}

uint64_t OUTLINED_FUNCTION_0_48(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  *(void *)(v3 - 120) = 0;
  *(void *)(v3 - 112) = 0;
  *(void *)(v3 - 128) = 0xBFF0000000000000;
  *(unsigned char *)(v3 - 104) = 0;
  *(unsigned char *)(v3 - 129) = v2;
  return swift_allocObject();
}

__n128 *OUTLINED_FUNCTION_2_48(__n128 *result, __n128 a2)
{
  result[1] = a2;
  *(void *)(v2 - 120) = 0;
  *(void *)(v2 - 112) = 0;
  *(void *)(v2 - 128) = 0x3FF0000000000000;
  *(unsigned char *)(v2 - 104) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_40()
{
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_4_36(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  return sub_1C65F5C08(a1, a2, 0, 1, a5, 1, 1, 1);
}

uint64_t OUTLINED_FUNCTION_5_37()
{
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_7_35()
{
  *(unsigned char *)(v1 - 129) = v0;
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_8_39(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  return sub_1C65F5C08(a1, a2, 0, 1, a5, 1, 1, 0);
}

uint64_t OUTLINED_FUNCTION_9_33()
{
  return 5;
}

uint64_t OUTLINED_FUNCTION_10_29()
{
  return 9;
}

uint64_t OUTLINED_FUNCTION_11_29()
{
  return 4;
}

uint64_t OUTLINED_FUNCTION_12_26()
{
  return 8;
}

uint64_t OUTLINED_FUNCTION_13_24()
{
  return 2;
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return 11;
}

uint64_t OUTLINED_FUNCTION_15_26()
{
  return 5;
}

uint64_t OUTLINED_FUNCTION_16_21()
{
  return 4;
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return 2;
}

SiriInference::DateTimeResolutionContext::Hemisphere_optional __swiftcall DateTimeResolutionContext.Hemisphere.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (SiriInference::DateTimeResolutionContext::Hemisphere_optional)rawValue;
}

uint64_t DateTimeResolutionContext.Hemisphere.rawValue.getter()
{
  return *v0;
}

BOOL sub_1C67101E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C661BC50(*a1, *a2);
}

uint64_t sub_1C67101F4()
{
  return sub_1C67024F0(*v0);
}

uint64_t sub_1C67101FC(uint64_t a1)
{
  return sub_1C66883E4(a1, *v1);
}

uint64_t sub_1C6710204(uint64_t a1)
{
  return sub_1C680D208(a1, *v1);
}

SiriInference::DateTimeResolutionContext::Hemisphere_optional sub_1C671020C(Swift::Int *a1)
{
  return DateTimeResolutionContext.Hemisphere.init(rawValue:)(*a1);
}

uint64_t sub_1C6710214@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTimeResolutionContext.Hemisphere.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C671023C()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C671029C()
{
  return sub_1C68ECB78();
}

uint64_t DateTimeResolutionContext.__allocating_init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  DateTimeResolutionContext.init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t sub_1C6710374(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F466E6F69676572 && a2 == 0xEC00000074616D72;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001C6916F10 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x65687073696D6568 && a2 == 0xEA00000000006572;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 1702125924 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = sub_1C68ED7E8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1C6710654(char a1)
{
  unint64_t result = 0x65676175676E616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F466E6F69676572;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x656E6F5A656D6974;
      break;
    case 4:
      unint64_t result = 0x65687073696D6568;
      break;
    case 5:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 6:
      unint64_t result = 1702125924;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C671073C()
{
  return sub_1C6710654(*v0);
}

uint64_t sub_1C6710744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6710374(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C671076C(uint64_t a1)
{
  unint64_t v2 = sub_1C6710EFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C67107A8(uint64_t a1)
{
  unint64_t v2 = sub_1C6710EFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C67107E4(void *a1)
{
  sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  v45[1] = v3;
  v45[2] = v2;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_1();
  v45[0] = v4;
  sub_1C68E9DD8();
  OUTLINED_FUNCTION_0_1();
  v45[4] = v6;
  v45[5] = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1();
  v45[3] = v7;
  sub_1C68E9E28();
  OUTLINED_FUNCTION_0_1();
  v45[7] = v9;
  v45[8] = v8;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_7_36(v10, v45[0]);
  uint64_t v11 = sub_1C68E9C68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v49 = (char *)v45 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v45 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408078);
  OUTLINED_FUNCTION_0_1();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_1_15();
  uint64_t v27 = v26 - v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C6710EFC();
  sub_1C68EDA08();
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v48(v20, v51 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language, v11);
  char v52 = 0;
  uint64_t v28 = (char *)v21;
  uint64_t v47 = sub_1C65F5FC4(&qword_1EA407128, MEMORY[0x1E4F27A78]);
  uint64_t v29 = v27;
  uint64_t v30 = v50;
  sub_1C68ED758();
  if (v30)
  {
    OUTLINED_FUNCTION_6_40();
    v31();
    return (*(uint64_t (**)(uint64_t, char *))(v23 + 8))(v27, v28);
  }
  else
  {
    uint64_t v50 = v23;
    char v33 = *(void (**)(void))(v13 + 8);
    ((void (*)(char *, uint64_t))v33)(v20, v11);
    uint64_t v34 = v51;
    v48(v49, v51 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat, v11);
    char v52 = 1;
    uint64_t v35 = v29;
    sub_1C68ED758();
    OUTLINED_FUNCTION_6_40();
    v33();
    uint64_t v36 = v46;
    v48(v46, v34 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionAwareLanguage, v11);
    char v52 = 2;
    uint64_t v49 = v28;
    sub_1C68ED758();
    ((void (*)(char *, uint64_t))v33)(v36, v11);
    OUTLINED_FUNCTION_10_3();
    v37();
    char v52 = 3;
    sub_1C65F5FC4(&qword_1EA408088, MEMORY[0x1E4F27D68]);
    uint64_t v38 = v49;
    sub_1C68ED758();
    OUTLINED_FUNCTION_3_15();
    v39();
    char v52 = *(unsigned char *)(v34 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere);
    char v53 = 4;
    sub_1C6710F48();
    sub_1C68ED758();
    swift_beginAccess();
    OUTLINED_FUNCTION_10_3();
    v40();
    char v53 = 5;
    sub_1C65F5FC4(&qword_1EA408098, MEMORY[0x1E4F27CA0]);
    sub_1C68ED758();
    OUTLINED_FUNCTION_6_40();
    v41();
    OUTLINED_FUNCTION_10_3();
    v42();
    char v53 = 6;
    sub_1C65F5FC4(&qword_1EBBF3D90, MEMORY[0x1E4F27928]);
    sub_1C68ED758();
    uint64_t v43 = v50;
    OUTLINED_FUNCTION_6_40();
    v44();
    return (*(uint64_t (**)(uint64_t, char *))(v43 + 8))(v35, v38);
  }
}

unint64_t sub_1C6710EFC()
{
  unint64_t result = qword_1EA408080;
  if (!qword_1EA408080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408080);
  }
  return result;
}

unint64_t sub_1C6710F48()
{
  unint64_t result = qword_1EA408090;
  if (!qword_1EA408090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408090);
  }
  return result;
}

uint64_t DateTimeResolutionContext.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DateTimeResolutionContext.init(from:)(a1);
  return v2;
}

uint64_t DateTimeResolutionContext.init(from:)(void *a1)
{
  sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v51 = v3;
  uint64_t v52 = v2;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_1();
  uint64_t v53 = v4;
  sub_1C68E9DD8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v55 = v6;
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_7_36(v7, v47[0]);
  sub_1C68E9E28();
  OUTLINED_FUNCTION_0_1();
  uint64_t v57 = v9;
  uint64_t v58 = v8;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v12 = v11 - v10;
  sub_1C68E9C68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v59 = v13;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)v47 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v60 = (char *)v47 - v21;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4080A0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_1_15();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = a1[3];
  uint64_t v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1C6710EFC();
  uint64_t v61 = v27;
  uint64_t v29 = v65;
  sub_1C68ED9E8();
  if (v29)
  {
    uint64_t v30 = (uint64_t)v63;
    uint64_t v46 = v64;
    type metadata accessor for DateTimeResolutionContext();
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1(v30);
  }
  else
  {
    uint64_t v49 = v17;
    uint64_t v50 = v20;
    uint64_t v48 = v12;
    uint64_t v65 = v23;
    char v73 = 0;
    sub_1C65F5FC4(&qword_1EA407158, MEMORY[0x1E4F27A78]);
    sub_1C68ED668();
    uint64_t v32 = v64;
    char v33 = *(void (**)(void))(v59 + 32);
    v47[1] = v64 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language;
    uint64_t v34 = v33;
    v33();
    char v72 = 1;
    OUTLINED_FUNCTION_13_25();
    sub_1C68ED668();
    uint64_t v35 = OUTLINED_FUNCTION_10_30(OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat);
    ((void (*)(uint64_t))v34)(v35);
    char v71 = 2;
    OUTLINED_FUNCTION_13_25();
    uint64_t v60 = 0;
    sub_1C68ED668();
    uint64_t v36 = OUTLINED_FUNCTION_10_30(OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionAwareLanguage);
    ((void (*)(uint64_t))v34)(v36);
    char v70 = 3;
    sub_1C65F5FC4(&qword_1EA4080A8, MEMORY[0x1E4F27D68]);
    uint64_t v37 = v48;
    uint64_t v38 = v58;
    sub_1C68ED668();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v32 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_timeZone, v37, v38);
    char v68 = 4;
    sub_1C6711714();
    sub_1C68ED668();
    *(unsigned char *)(v32 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere) = v69;
    char v67 = 5;
    sub_1C65F5FC4(&qword_1EA4080B8, MEMORY[0x1E4F27CA0]);
    uint64_t v39 = v54;
    uint64_t v40 = v32;
    uint64_t v41 = v56;
    OUTLINED_FUNCTION_16_22();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v40 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar, v39, v41);
    char v66 = 6;
    sub_1C65F5FC4(&qword_1EBBF3D98, MEMORY[0x1E4F27928]);
    uint64_t v42 = v52;
    uint64_t v43 = v53;
    OUTLINED_FUNCTION_16_22();
    uint64_t v44 = OUTLINED_FUNCTION_4_37();
    v45(v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v40 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_date, v43, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    return v40;
  }
  return v46;
}

unint64_t sub_1C6711714()
{
  unint64_t result = qword_1EA4080B0;
  if (!qword_1EA4080B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4080B0);
  }
  return result;
}

unint64_t sub_1C6711764()
{
  unint64_t result = qword_1EA4080C0;
  if (!qword_1EA4080C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4080C0);
  }
  return result;
}

uint64_t sub_1C67117B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DateTimeResolutionContext.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C67117DC(void *a1)
{
  return sub_1C67107E4(a1);
}

uint64_t sub_1C6711800()
{
  return type metadata accessor for DateTimeResolutionContext();
}

uint64_t sub_1C6711808()
{
  uint64_t result = sub_1C68E9C68();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C68E9E28();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C68E9DD8();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1C68E9B78();
        if (v4 <= 0x3F) {
          return swift_updateClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t method lookup function for DateTimeResolutionContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DateTimeResolutionContext);
}

uint64_t dispatch thunk of DateTimeResolutionContext.__allocating_init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of DateTimeResolutionContext.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DateTimeResolutionContext.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

unsigned char *storeEnumTagSinglePayload for DateTimeResolutionContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6711ADCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTimeResolutionContext.CodingKeys()
{
  return &type metadata for DateTimeResolutionContext.CodingKeys;
}

unint64_t sub_1C6711B18()
{
  unint64_t result = qword_1EA4080D8;
  if (!qword_1EA4080D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4080D8);
  }
  return result;
}

unint64_t sub_1C6711B68()
{
  unint64_t result = qword_1EA4080E0;
  if (!qword_1EA4080E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4080E0);
  }
  return result;
}

unint64_t sub_1C6711BB8()
{
  unint64_t result = qword_1EA4080E8;
  if (!qword_1EA4080E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4080E8);
  }
  return result;
}

unint64_t sub_1C6711C04()
{
  unint64_t result = qword_1EA4080F0;
  if (!qword_1EA4080F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4080F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  return *(void *)(v0 - 120);
}

uint64_t OUTLINED_FUNCTION_7_36@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_30@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_13_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_29@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_22()
{
  return sub_1C68ED668();
}

ValueMetadata *type metadata accessor for DateTimeResolutionInfo()
{
  return &type metadata for DateTimeResolutionInfo;
}

SiriInference::DateTimeResolutionSpec::ExpandToType_optional __swiftcall DateTimeResolutionSpec.ExpandToType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (SiriInference::DateTimeResolutionSpec::ExpandToType_optional)rawValue;
}

uint64_t DateTimeResolutionSpec.ExpandToType.rawValue.getter()
{
  return *v0;
}

SiriInference::DateTimeResolutionSpec::ExpandToType_optional sub_1C6711D3C(Swift::Int *a1)
{
  return DateTimeResolutionSpec.ExpandToType.init(rawValue:)(*a1);
}

uint64_t sub_1C6711D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTimeResolutionSpec.ExpandToType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C6711D6C()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C6711DCC()
{
  return sub_1C68ECB78();
}

SiriInference::DateTimeResolutionSpec::DateTimeConvergenceStrategy_optional __swiftcall DateTimeResolutionSpec.DateTimeConvergenceStrategy.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_3_29(v1);
  return result;
}

uint64_t DateTimeResolutionSpec.DateTimeConvergenceStrategy.rawValue.getter()
{
  return *v0;
}

SiriInference::DateTimeResolutionSpec::DateTimeConvergenceStrategy_optional sub_1C6711E3C(Swift::Int *a1)
{
  return DateTimeResolutionSpec.DateTimeConvergenceStrategy.init(rawValue:)(*a1);
}

uint64_t sub_1C6711E44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTimeResolutionSpec.DateTimeConvergenceStrategy.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C6711E6C()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C6711ECC()
{
  return sub_1C68ECB78();
}

void DateTimeResolutionSpec.expandToType.getter(unsigned char *a1@<X8>)
{
}

void DateTimeResolutionSpec.dateTimeConvergenceStrategy.getter(unsigned char *a1@<X8>)
{
}

uint64_t DateTimeResolutionSpec.overridesForDefinedDateTimeRanges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DateTimeResolutionSpec.witchingHourRoundOffEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DateTimeResolutionSpec.convergeToOperatingHours.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t DateTimeResolutionSpec.inferDurationAsInterval.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

unsigned char *DateTimeResolutionSpec.init(expandToType:dateTimeConvergenceStrategy:overridesForDefinedDateTimeRanges:witchingHourRoundOffEnabled:convergeToOperatingHours:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v6 = *a2;
  *(unsigned char *)a6 = *result;
  *(unsigned char *)(a6 + 1) = v6;
  *(void *)(a6 + 8) = a3;
  *(unsigned char *)(a6 + 16) = a4;
  *(unsigned char *)(a6 + 17) = a5;
  *(unsigned char *)(a6 + 18) = 1;
  return result;
}

uint64_t sub_1C6711F74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F54646E61707865 && a2 == 0xEC00000065707954;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C6916F50 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001C6916F70 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C6916FA0 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C6916FC0 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C6916FE0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C68ED7E8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1C67121DC(char a1)
{
  unint64_t result = 0x6F54646E61707865;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C67122B0()
{
  return sub_1C67121DC(*v0);
}

uint64_t sub_1C67122B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6711F74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C67122E0(uint64_t a1)
{
  unint64_t v2 = sub_1C6712564();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C671231C(uint64_t a1)
{
  unint64_t v2 = sub_1C6712564();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DateTimeResolutionSpec.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4080F8);
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *v1;
  int v17 = v1[1];
  uint64_t v15 = *((void *)v1 + 1);
  int v11 = v1[16];
  v14[2] = v1[17];
  v14[3] = v11;
  v14[1] = v1[18];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C6712564();
  sub_1C68EDA08();
  LOBYTE(v16) = v10;
  char v18 = 0;
  sub_1C67125B0();
  OUTLINED_FUNCTION_5_38();
  if (!v2)
  {
    uint64_t v12 = v15;
    LOBYTE(v16) = v17;
    char v18 = 1;
    sub_1C67125FC();
    OUTLINED_FUNCTION_5_38();
    uint64_t v16 = v12;
    char v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408118);
    sub_1C6712648();
    sub_1C68ED758();
    LOBYTE(v16) = 3;
    OUTLINED_FUNCTION_43_4();
    LOBYTE(v16) = 4;
    OUTLINED_FUNCTION_43_4();
    LOBYTE(v16) = 5;
    OUTLINED_FUNCTION_43_4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_1C6712564()
{
  unint64_t result = qword_1EA408100;
  if (!qword_1EA408100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408100);
  }
  return result;
}

unint64_t sub_1C67125B0()
{
  unint64_t result = qword_1EA408108;
  if (!qword_1EA408108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408108);
  }
  return result;
}

unint64_t sub_1C67125FC()
{
  unint64_t result = qword_1EA408110;
  if (!qword_1EA408110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408110);
  }
  return result;
}

unint64_t sub_1C6712648()
{
  unint64_t result = qword_1EA408120;
  if (!qword_1EA408120)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA408118);
    sub_1C670F300();
    sub_1C6712A8C(&qword_1EA407FF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408120);
  }
  return result;
}

uint64_t DateTimeResolutionSpec.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408128);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C6712564();
  sub_1C68ED9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1C671295C();
  OUTLINED_FUNCTION_2_49();
  sub_1C67129A8();
  OUTLINED_FUNCTION_2_49();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408118);
  sub_1C67129F4();
  sub_1C68ED668();
  swift_bridgeObjectRetain();
  char v11 = OUTLINED_FUNCTION_1_52();
  char v10 = OUTLINED_FUNCTION_1_52();
  char v7 = OUTLINED_FUNCTION_1_52();
  uint64_t v8 = OUTLINED_FUNCTION_3_41();
  v9(v8);
  *(unsigned char *)a2 = v12;
  *(unsigned char *)(a2 + 1) = v12;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(unsigned char *)(a2 + 17) = v10 & 1;
  *(unsigned char *)(a2 + 18) = v7 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C671295C()
{
  unint64_t result = qword_1EA408130;
  if (!qword_1EA408130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408130);
  }
  return result;
}

unint64_t sub_1C67129A8()
{
  unint64_t result = qword_1EA408138;
  if (!qword_1EA408138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408138);
  }
  return result;
}

unint64_t sub_1C67129F4()
{
  unint64_t result = qword_1EA408140;
  if (!qword_1EA408140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA408118);
    sub_1C670F398();
    sub_1C6712A8C(&qword_1EA408018);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408140);
  }
  return result;
}

uint64_t sub_1C6712A8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DateTime();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C6712AD4()
{
  unint64_t result = qword_1EA408148;
  if (!qword_1EA408148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408148);
  }
  return result;
}

unint64_t sub_1C6712B24()
{
  unint64_t result = qword_1EA408150;
  if (!qword_1EA408150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408150);
  }
  return result;
}

uint64_t sub_1C6712B70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DateTimeResolutionSpec.init(from:)(a1, a2);
}

uint64_t sub_1C6712B88(void *a1)
{
  return DateTimeResolutionSpec.encode(to:)(a1);
}

uint64_t sub_1C6712BA4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DateTimeResolutionSpec(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DateTimeResolutionSpec(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateTimeResolutionSpec(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 19))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateTimeResolutionSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DateTimeResolutionSpec.ExpandToType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6712E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DateTimeResolutionSpec.DateTimeConvergenceStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6712F1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DateTimeResolutionSpec.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6713010);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTimeResolutionSpec.CodingKeys()
{
  return &type metadata for DateTimeResolutionSpec.CodingKeys;
}

unint64_t sub_1C671304C()
{
  unint64_t result = qword_1EA408158;
  if (!qword_1EA408158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408158);
  }
  return result;
}

unint64_t sub_1C671309C()
{
  unint64_t result = qword_1EA408160;
  if (!qword_1EA408160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408160);
  }
  return result;
}

unint64_t sub_1C67130EC()
{
  unint64_t result = qword_1EA408168;
  if (!qword_1EA408168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408168);
  }
  return result;
}

unint64_t sub_1C6713138()
{
  unint64_t result = qword_1EA408170;
  if (!qword_1EA408170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408170);
  }
  return result;
}

unint64_t sub_1C6713184()
{
  unint64_t result = qword_1EA408178;
  if (!qword_1EA408178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408178);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_52()
{
  return sub_1C68ED628();
}

uint64_t OUTLINED_FUNCTION_2_49()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_3_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return sub_1C68ED758();
}

uint64_t sub_1C6713254(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1C68ED458();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 80;
      swift_retain();
      sub_1C68ED428();
      sub_1C68ED468();
      sub_1C68ED478();
      sub_1C68ED438();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

char *static DateTimeResolver.name.getter()
{
  return off_1EA408180;
}

uint64_t static DateTimeResolver.name.setter(char *a1, uint64_t a2, char a3)
{
  uint64_t result = swift_beginAccess();
  off_1EA408180 = a1;
  unk_1EA408188 = a2;
  byte_1EA408190 = a3;
  return result;
}

uint64_t (*static DateTimeResolver.name.modify())()
{
  return j__swift_endAccess_0;
}

uint64_t sub_1C6713400(unint64_t *a1, uint64_t *a2, char *a3)
{
  return DateTimeResolver.findMatches(value:context:spec:)(*a1, *a2, a3);
}

uint64_t sub_1C6713420@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return DateTimeResolver.makeRecommendation(value:context:spec:)(*a1, *a2, a3, a4);
}

uint64_t sub_1C6713444(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SELFLoggingService();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C67134A0(uint64_t a1)
{
  unint64_t result = sub_1C67134C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C67134C8()
{
  unint64_t result = qword_1EA408198;
  if (!qword_1EA408198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408198);
  }
  return result;
}

uint64_t sub_1C6713514()
{
  return sub_1C65E274C(&qword_1EA408018, (void (*)(uint64_t))type metadata accessor for DateTime);
}

uint64_t sub_1C671355C()
{
  return sub_1C65E274C(&qword_1EA407FF0, (void (*)(uint64_t))type metadata accessor for DateTime);
}

uint64_t sub_1C67135A4()
{
  return sub_1C65E274C(&qword_1EA4081A0, (void (*)(uint64_t))type metadata accessor for DateTimeResolutionContext);
}

uint64_t sub_1C67135EC()
{
  return sub_1C65E274C(&qword_1EA4081A8, (void (*)(uint64_t))type metadata accessor for DateTimeResolutionContext);
}

unint64_t sub_1C6713638()
{
  unint64_t result = qword_1EA4081B0;
  if (!qword_1EA4081B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4081B0);
  }
  return result;
}

unint64_t sub_1C6713688()
{
  unint64_t result = qword_1EA4081B8;
  if (!qword_1EA4081B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4081B8);
  }
  return result;
}

unint64_t sub_1C67136D8()
{
  unint64_t result = qword_1EA4081C0;
  if (!qword_1EA4081C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4081C0);
  }
  return result;
}

unint64_t sub_1C6713728()
{
  unint64_t result = qword_1EA4081C8;
  if (!qword_1EA4081C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4081C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_41()
{
  return sub_1C6606DA8(v2, v0, v1);
}

uint64_t BoundsOfRangeSignal.version.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t BoundsOfRangeSignal.version.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*BoundsOfRangeSignal.version.modify())(void)
{
  return nullsub_1;
}

uint64_t BoundsOfRangeSignal.startBoundIsSet.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BoundsOfRangeSignal.endBoundIsSet.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

SiriInference::BoundsOfRangeSignal __swiftcall BoundsOfRangeSignal.init()()
{
  *(unsigned char *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 1;
  *(_WORD *)(v0 + 16) = 0;
  return result;
}

SiriInference::BoundsOfRangeSignal __swiftcall BoundsOfRangeSignal.init(startBoundIsSet:endBoundIsSet:)(Swift::Bool startBoundIsSet, Swift::Bool endBoundIsSet)
{
  *(unsigned char *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 1;
  *(unsigned char *)(v2 + 16) = startBoundIsSet;
  *(unsigned char *)(v2 + 17) = endBoundIsSet;
  LOBYTE(result.version) = endBoundIsSet;
  result.isError = startBoundIsSet;
  return result;
}

BOOL static BoundsOfRangeSignal.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (((*(unsigned char *)a1 ^ *(unsigned char *)a2) | (*(unsigned char *)(a1 + 16) ^ *(unsigned char *)(a2 + 16))) & 1 | (*(void *)(a1 + 8) != *(void *)(a2 + 8)) | (*(unsigned char *)(a2 + 17) ^ *(unsigned char *)(a1 + 17)) & 1) == 0;
}

uint64_t sub_1C6713864(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F7272457369 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x756F427472617473 && a2 == 0xEF7465537349646ELL;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x646E756F42646E65 && a2 == 0xED00007465537349)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1C68ED7E8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1C6713A64(char a1)
{
  uint64_t result = 0x726F7272457369;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      uint64_t result = 0x756F427472617473;
      break;
    case 3:
      uint64_t result = 0x646E756F42646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C6713B0C()
{
  return sub_1C6713A64(*v0);
}

uint64_t sub_1C6713B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6713864(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C6713B3C(uint64_t a1)
{
  unint64_t v2 = sub_1C6713D1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6713B78(uint64_t a1)
{
  unint64_t v2 = sub_1C6713D1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void BoundsOfRangeSignal.encode(to:)()
{
  OUTLINED_FUNCTION_63();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4081D0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_9_34();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C6713D1C();
  sub_1C68EDA08();
  OUTLINED_FUNCTION_43_4();
  if (!v0)
  {
    sub_1C68ED748();
    OUTLINED_FUNCTION_43_4();
    OUTLINED_FUNCTION_43_4();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_54_0();
}

unint64_t sub_1C6713D1C()
{
  unint64_t result = qword_1EA4081D8;
  if (!qword_1EA4081D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4081D8);
  }
  return result;
}

void BoundsOfRangeSignal.init(from:)()
{
  OUTLINED_FUNCTION_63();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4081E0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = v2[3];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  sub_1C6713D1C();
  OUTLINED_FUNCTION_14_30();
  if (!v0)
  {
    OUTLINED_FUNCTION_3_42();
    uint64_t v7 = OUTLINED_FUNCTION_7_37();
    char v11 = OUTLINED_FUNCTION_3_42();
    char v8 = OUTLINED_FUNCTION_3_42();
    uint64_t v9 = OUTLINED_FUNCTION_2_50();
    v10(v9);
    *(unsigned char *)uint64_t v4 = v6 & 1;
    *(void *)(v4 + 8) = v7;
    *(unsigned char *)(v4 + 16) = v11 & 1;
    *(unsigned char *)(v4 + 17) = v8 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_54_0();
}

void sub_1C6713EC4()
{
}

void sub_1C6713EDC()
{
}

uint64_t (*TemporalIntentSignal.version.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C6713F1C(uint64_t a1)
{
  unint64_t v2 = sub_1C6713FD0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6713F58(uint64_t a1)
{
  unint64_t v2 = sub_1C6713FD0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TemporalIntentSignal.encode(to:)()
{
}

unint64_t sub_1C6713FD0()
{
  unint64_t result = qword_1EA4081F0;
  if (!qword_1EA4081F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4081F0);
  }
  return result;
}

void TemporalIntentSignal.init(from:)()
{
}

void sub_1C6714058()
{
}

void sub_1C6714070()
{
}

uint64_t MeridiemSignal.version.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MeridiemSignal.version.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*MeridiemSignal.version.modify())(void)
{
  return nullsub_1;
}

uint64_t MeridiemSignal.setByUser.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

SiriInference::MeridiemSignal __swiftcall MeridiemSignal.init()()
{
  *(unsigned char *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 1;
  *(unsigned char *)(v0 + 16) = 0;
  return result;
}

SiriInference::MeridiemSignal __swiftcall MeridiemSignal.init(setByUser:)(Swift::Bool setByUser)
{
  *(unsigned char *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 1;
  *(unsigned char *)(v1 + 16) = setByUser;
  result.isError = setByUser;
  return result;
}

uint64_t _s13SiriInference20TemporalIntentSignalV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1)) {
    char v3 = a2[16] ^ a1[16] ^ 1;
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C671412C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F7272457369 && a2 == 0xE700000000000000;
  if (v2 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v6 || (OUTLINED_FUNCTION_8_27() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6573557942746573 && a2 == 0xE900000000000072)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = OUTLINED_FUNCTION_8_27();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C671426C(char a1)
{
  if (!a1) {
    return 0x726F7272457369;
  }
  if (a1 == 1) {
    return 0x6E6F6973726576;
  }
  return 0x6573557942746573;
}

uint64_t sub_1C67142C8()
{
  return sub_1C671426C(*v0);
}

uint64_t sub_1C67142D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C671412C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C67142F8(uint64_t a1)
{
  unint64_t v2 = sub_1C6714510();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6714334(uint64_t a1)
{
  unint64_t v2 = sub_1C6714510();

  return MEMORY[0x1F41862B0](a1, v2);
}

void MeridiemSignal.encode(to:)()
{
}

void sub_1C67143AC()
{
  OUTLINED_FUNCTION_63();
  uint64_t v14 = v2;
  uint64_t v15 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_0_1();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *(void *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v14();
  sub_1C68EDA08();
  uint64_t v12 = v15;
  sub_1C68ED718();
  if (!v12)
  {
    sub_1C68ED748();
    OUTLINED_FUNCTION_43_4();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  OUTLINED_FUNCTION_54_0();
}

unint64_t sub_1C6714510()
{
  unint64_t result = qword_1EA408208;
  if (!qword_1EA408208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408208);
  }
  return result;
}

void MeridiemSignal.init(from:)()
{
}

void sub_1C6714598()
{
  OUTLINED_FUNCTION_63();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v12 = v5;
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v7);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  sub_1C68ED9E8();
  if (!v0)
  {
    OUTLINED_FUNCTION_3_42();
    uint64_t v8 = OUTLINED_FUNCTION_7_37();
    char v9 = OUTLINED_FUNCTION_3_42();
    uint64_t v10 = OUTLINED_FUNCTION_2_50();
    v11(v10);
    *(unsigned char *)uint64_t v12 = 0;
    *(void *)(v12 + 8) = v8;
    *(unsigned char *)(v12 + 16) = v9 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  OUTLINED_FUNCTION_54_0();
}

void sub_1C67146EC()
{
}

void sub_1C6714704()
{
}

void DateTimeSignalSet.temporalIntent.getter(uint64_t a1@<X8>)
{
}

void DateTimeSignalSet.boundsOfRange.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 41);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
}

void DateTimeSignalSet.meridiem.getter(uint64_t a1@<X8>)
{
}

void __swiftcall DateTimeSignalSet.init()(SiriInference::DateTimeSignalSet *__return_ptr retstr)
{
  retstr->temporalIntent.isError = 0;
  retstr->temporalIntent.version = 1;
  retstr->temporalIntent.setByUser = 0;
  retstr->boundsOfRange.isError = 0;
  retstr->boundsOfRange.version = 1;
  *(_WORD *)&retstr->boundsOfRange.startBoundIsSet = 0;
  retstr->meridiem.isError = 0;
  OUTLINED_FUNCTION_15_28((uint64_t)retstr);
}

void __swiftcall DateTimeSignalSet.init(withTemporalIntent:boundsOfRange:)(SiriInference::DateTimeSignalSet *__return_ptr retstr, SiriInference::TemporalIntentSignal withTemporalIntent, SiriInference::BoundsOfRangeSignal boundsOfRange)
{
  Swift::UInt v3 = *(void *)(*(void *)&withTemporalIntent.isError + 8);
  char v4 = *(unsigned char *)(*(void *)&withTemporalIntent.isError + 16);
  char v5 = *(unsigned char *)withTemporalIntent.version;
  Swift::UInt v6 = *(void *)(withTemporalIntent.version + 8);
  char v7 = *(unsigned char *)(withTemporalIntent.version + 16);
  char v8 = *(unsigned char *)(withTemporalIntent.version + 17);
  retstr->temporalIntent.isError = **(unsigned char **)&withTemporalIntent.isError;
  retstr->temporalIntent.version = v3;
  retstr->temporalIntent.setByUser = v4;
  retstr->boundsOfRange.isError = v5;
  retstr->boundsOfRange.version = v6;
  retstr->boundsOfRange.startBoundIsSet = v7;
  retstr->boundsOfRange.endBoundIsSet = v8;
  retstr->meridiem.isError = 0;
  OUTLINED_FUNCTION_15_28((uint64_t)retstr);
}

void __swiftcall DateTimeSignalSet.init(withTemporalIntent:boundsOfRange:meridiem:)(SiriInference::DateTimeSignalSet *__return_ptr retstr, SiriInference::TemporalIntentSignal withTemporalIntent, SiriInference::BoundsOfRangeSignal boundsOfRange, SiriInference::MeridiemSignal meridiem)
{
  char v4 = **(unsigned char **)&withTemporalIntent.isError;
  Swift::UInt v5 = *(void *)(*(void *)&withTemporalIntent.isError + 8);
  char v6 = *(unsigned char *)(*(void *)&withTemporalIntent.isError + 16);
  char v7 = *(unsigned char *)withTemporalIntent.version;
  Swift::UInt v8 = *(void *)(withTemporalIntent.version + 8);
  char v9 = *(unsigned char *)(withTemporalIntent.version + 16);
  char v10 = *(unsigned char *)(withTemporalIntent.version + 17);
  char v11 = **(unsigned char **)&withTemporalIntent.setByUser;
  Swift::UInt v12 = *(void *)(*(void *)&withTemporalIntent.setByUser + 8);
  char v13 = *(unsigned char *)(*(void *)&withTemporalIntent.setByUser + 16);
  retstr->temporalIntent.isError = v4;
  retstr->temporalIntent.version = v5;
  retstr->temporalIntent.setByUser = v6;
  retstr->boundsOfRange.isError = v7;
  retstr->boundsOfRange.version = v8;
  retstr->boundsOfRange.startBoundIsSet = v9;
  retstr->boundsOfRange.endBoundIsSet = v10;
  retstr->meridiem.isError = v11;
  retstr->meridiem.version = v12;
  retstr->meridiem.setByUser = v13;
}

uint64_t sub_1C671481C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61726F706D6574 && a2 == 0xEE00746E65746E49;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x664F73646E756F62 && a2 == 0xED000065676E6152;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6D6569646972656DLL && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1C68ED7E8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C67149B4(char a1)
{
  if (!a1) {
    return 0x6C61726F706D6574;
  }
  if (a1 == 1) {
    return 0x664F73646E756F62;
  }
  return 0x6D6569646972656DLL;
}

uint64_t sub_1C6714A24()
{
  return sub_1C67149B4(*v0);
}

uint64_t sub_1C6714A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C671481C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C6714A54(uint64_t a1)
{
  unint64_t v2 = sub_1C6714C98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6714A90(uint64_t a1)
{
  unint64_t v2 = sub_1C6714C98();

  return MEMORY[0x1F41862B0](a1, v2);
}

void DateTimeSignalSet.encode(to:)()
{
  OUTLINED_FUNCTION_63();
  Swift::UInt v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408218);
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_9_34();
  uint64_t v7 = v3[3];
  char v8 = v3;
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v8, v7);
  sub_1C6714C98();
  sub_1C68EDA08();
  sub_1C6714CE4();
  sub_1C68ED758();
  if (!v0)
  {
    sub_1C6714D30();
    OUTLINED_FUNCTION_12_27();
    sub_1C6714D7C();
    OUTLINED_FUNCTION_12_27();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v10);
  OUTLINED_FUNCTION_54_0();
}

unint64_t sub_1C6714C98()
{
  unint64_t result = qword_1EA408220;
  if (!qword_1EA408220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408220);
  }
  return result;
}

unint64_t sub_1C6714CE4()
{
  unint64_t result = qword_1EA408228;
  if (!qword_1EA408228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408228);
  }
  return result;
}

unint64_t sub_1C6714D30()
{
  unint64_t result = qword_1EA408230;
  if (!qword_1EA408230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408230);
  }
  return result;
}

unint64_t sub_1C6714D7C()
{
  unint64_t result = qword_1EA408238;
  if (!qword_1EA408238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408238);
  }
  return result;
}

void DateTimeSignalSet.init(from:)()
{
  OUTLINED_FUNCTION_63();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C6714C98();
  OUTLINED_FUNCTION_14_30();
  if (!v0)
  {
    sub_1C6714F88();
    OUTLINED_FUNCTION_1_53();
    sub_1C6714FD4();
    OUTLINED_FUNCTION_1_53();
    sub_1C6715020();
    OUTLINED_FUNCTION_1_53();
    uint64_t v6 = OUTLINED_FUNCTION_2_50();
    v7(v6);
    *(unsigned char *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v9;
    *(unsigned char *)(v4 + 16) = v10;
    *(unsigned char *)(v4 + 24) = v8;
    *(void *)(v4 + 32) = v9;
    *(unsigned char *)(v4 + 40) = v10;
    *(unsigned char *)(v4 + 41) = v11;
    *(unsigned char *)(v4 + 48) = v8;
    *(void *)(v4 + 56) = v9;
    *(unsigned char *)(v4 + 64) = v10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_54_0();
}

unint64_t sub_1C6714F88()
{
  unint64_t result = qword_1EA408248;
  if (!qword_1EA408248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408248);
  }
  return result;
}

unint64_t sub_1C6714FD4()
{
  unint64_t result = qword_1EA408250;
  if (!qword_1EA408250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408250);
  }
  return result;
}

unint64_t sub_1C6715020()
{
  unint64_t result = qword_1EA408258;
  if (!qword_1EA408258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408258);
  }
  return result;
}

_UNKNOWN **sub_1C671506C()
{
  return &off_1F2179098;
}

unint64_t sub_1C6715084()
{
  unint64_t result = qword_1EA408260;
  if (!qword_1EA408260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408260);
  }
  return result;
}

uint64_t sub_1C67150D0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C6715258(a1, a2, a3, (uint64_t (*)(void))sub_1C6714FD4, (uint64_t (*)(void))sub_1C6714D30, (uint64_t (*)(void))sub_1C6715084);
}

_UNKNOWN **sub_1C6715110()
{
  return &off_1F21790B8;
}

unint64_t sub_1C6715128()
{
  unint64_t result = qword_1EA408268;
  if (!qword_1EA408268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408268);
  }
  return result;
}

uint64_t sub_1C6715174(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C6715258(a1, a2, a3, (uint64_t (*)(void))sub_1C6714F88, (uint64_t (*)(void))sub_1C6714CE4, (uint64_t (*)(void))sub_1C6715128);
}

_UNKNOWN **sub_1C67151B4()
{
  return &off_1F21790D8;
}

unint64_t sub_1C67151CC()
{
  unint64_t result = qword_1EA408270;
  if (!qword_1EA408270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408270);
  }
  return result;
}

uint64_t sub_1C6715218(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C6715258(a1, a2, a3, (uint64_t (*)(void))sub_1C6715020, (uint64_t (*)(void))sub_1C6714D7C, (uint64_t (*)(void))sub_1C67151CC);
}

uint64_t sub_1C6715258(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[2] = a4();
  a1[3] = a5();
  uint64_t result = a6();
  a1[4] = result;
  return result;
}

void sub_1C67152AC()
{
}

void sub_1C67152C4()
{
}

uint64_t getEnumTagSinglePayload for BoundsOfRangeSignal(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[18])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BoundsOfRangeSignal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t _s13SiriInference20TemporalIntentSignalVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[17])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s13SiriInference20TemporalIntentSignalVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DateTimeSignalSet(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[65])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateTimeSignalSet(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for DateTimeSignalSet()
{
}

ValueMetadata *type metadata accessor for DateTimeSignalSet.CodingKeys()
{
  return &type metadata for DateTimeSignalSet.CodingKeys;
}

ValueMetadata *type metadata accessor for MeridiemSignal.CodingKeys()
{
  return &type metadata for MeridiemSignal.CodingKeys;
}

unsigned char *_s13SiriInference17DateTimeSignalSetV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C67155A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemporalIntentSignal.CodingKeys()
{
  return &type metadata for TemporalIntentSignal.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BoundsOfRangeSignal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C67156A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoundsOfRangeSignal.CodingKeys()
{
  return &type metadata for BoundsOfRangeSignal.CodingKeys;
}

unint64_t sub_1C67156E4()
{
  unint64_t result = qword_1EA408278;
  if (!qword_1EA408278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408278);
  }
  return result;
}

unint64_t sub_1C6715734()
{
  unint64_t result = qword_1EA408280;
  if (!qword_1EA408280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408280);
  }
  return result;
}

unint64_t sub_1C6715784()
{
  unint64_t result = qword_1EA408288;
  if (!qword_1EA408288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408288);
  }
  return result;
}

unint64_t sub_1C67157D4()
{
  unint64_t result = qword_1EA408290;
  if (!qword_1EA408290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408290);
  }
  return result;
}

unint64_t sub_1C6715824()
{
  unint64_t result = qword_1EA408298;
  if (!qword_1EA408298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408298);
  }
  return result;
}

unint64_t sub_1C6715874()
{
  unint64_t result = qword_1EA4082A0;
  if (!qword_1EA4082A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082A0);
  }
  return result;
}

unint64_t sub_1C67158C4()
{
  unint64_t result = qword_1EA4082A8;
  if (!qword_1EA4082A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082A8);
  }
  return result;
}

unint64_t sub_1C6715914()
{
  unint64_t result = qword_1EA4082B0;
  if (!qword_1EA4082B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082B0);
  }
  return result;
}

unint64_t sub_1C6715964()
{
  unint64_t result = qword_1EA4082B8;
  if (!qword_1EA4082B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082B8);
  }
  return result;
}

unint64_t sub_1C67159B4()
{
  unint64_t result = qword_1EA4082C0;
  if (!qword_1EA4082C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082C0);
  }
  return result;
}

unint64_t sub_1C6715A04()
{
  unint64_t result = qword_1EA4082C8;
  if (!qword_1EA4082C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082C8);
  }
  return result;
}

unint64_t sub_1C6715A54()
{
  unint64_t result = qword_1EA4082D0;
  if (!qword_1EA4082D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4082D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  return sub_1C68ED668();
}

uint64_t OUTLINED_FUNCTION_2_50()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_42()
{
  return sub_1C68ED628();
}

uint64_t OUTLINED_FUNCTION_7_37()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_1C68ED658();
}

void OUTLINED_FUNCTION_10_31(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
}

uint64_t OUTLINED_FUNCTION_12_27()
{
  return sub_1C68ED758();
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return sub_1C68ED9E8();
}

void OUTLINED_FUNCTION_15_28(uint64_t a1@<X8>)
{
  *(void *)(a1 + 56) = v1;
  *(unsigned char *)(a1 + 64) = 0;
}

uint64_t DateTimeSlotResolutionTask.init(query:context:spec:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  char v5 = a3[1];
  uint64_t v6 = *((void *)a3 + 1);
  char v7 = a3[16];
  char v8 = a3[17];
  char v9 = a3[18];
  *(void *)(a4 + 40) = result;
  *(void *)(a4 + 48) = a2;
  *(unsigned char *)(a4 + 56) = v4;
  *(unsigned char *)(a4 + 57) = v5;
  *(void *)(a4 + 64) = v6;
  *(unsigned char *)(a4 + 72) = v7;
  *(unsigned char *)(a4 + 73) = v8;
  *(unsigned char *)(a4 + 74) = v9;
  *(void *)(a4 + 24) = &type metadata for DateTimeResolver;
  *(void *)(a4 + 32) = &off_1F2179068;
  return result;
}

uint64_t DateTimeSlotResolutionTask.run(withAlreadyResolvedSlots:)@<X0>(uint64_t a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)v1, *(void *)(v1 + 24));
  unint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  char v6 = *(unsigned char *)(v1 + 57);
  uint64_t v7 = *(void *)(v1 + 64);
  char v8 = *(unsigned char *)(v1 + 72);
  char v9 = *(unsigned char *)(v1 + 73);
  char v10 = *(unsigned char *)(v1 + 74);
  LOBYTE(v32) = *(unsigned char *)(v1 + 56);
  BYTE1(v32) = v6;
  uint64_t v33 = v7;
  LOBYTE(v34) = v8;
  BYTE1(v34) = v9;
  BYTE2(v34) = v10;
  swift_bridgeObjectRetain();
  DateTimeResolver.makeRecommendation(value:context:spec:)(v4, v5, (unsigned __int8 *)&v32, (uint64_t)&v35);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v12 = v35;
    char v13 = v36;
    if (qword_1EA405780 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C68EC478();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EA442820);
    sub_1C6606D60(v12, v13);
    sub_1C6606D60(v12, v13);
    uint64_t v15 = sub_1C68EC458();
    os_log_type_t v16 = sub_1C68ECE48();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v38 = a1;
      int v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v32 = v30;
      *(_DWORD *)int v17 = 136315138;
      sub_1C6606D60(v12, v13);
      uint64_t v18 = sub_1C671611C(v12, v13);
      uint64_t v20 = v19;
      OUTLINED_FUNCTION_13_26();
      uint64_t v21 = v18;
      a1 = v38;
      sub_1C65B4078(v21, v20, (uint64_t)&v32, v22, v23, v24, v25, v26, v29, (unint64_t)(v17 + 4), v30, v32, v33, v34, v35, v36, v37, v38, v39,
        v40);
      uint64_t v35 = v27;
      sub_1C68ED0C8();
      swift_bridgeObjectRelease();
      sub_1C6606D84(v12, v13);
      OUTLINED_FUNCTION_13_26();
      _os_log_impl(&dword_1C65AE000, v15, v16, "DateTime recommendations: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87A54F0](v31, -1, -1);
      MEMORY[0x1C87A54F0](v17, -1, -1);
    }
    else
    {
      sub_1C6606D84(v12, v13);
      OUTLINED_FUNCTION_13_26();
    }

    sub_1C66EA58C();
    uint64_t result = OUTLINED_FUNCTION_13_26();
    char v28 = v33;
    *(void *)a1 = v32;
    *(unsigned char *)(a1 + 8) = v28;
  }
  return result;
}

uint64_t sub_1C6715EBC@<X0>(uint64_t a1@<X8>)
{
  return DateTimeSlotResolutionTask.run(withAlreadyResolvedSlots:)(a1);
}

uint64_t sub_1C6715ED4()
{
  uint64_t v1 = type metadata accessor for Contact();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF4628);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C65D999C(v0, (uint64_t)v10);
  uint64_t v11 = 1701736302;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C65BBE04((uint64_t)v10, (uint64_t)v7);
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      uint64_t v14 = OUTLINED_FUNCTION_11_30(0xD000000000000012);
      sub_1C65DF464(v14, (uint64_t)v5);
      sub_1C68EC8F8();
      goto LABEL_4;
    case 2u:
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_43();
      uint64_t v16 = OUTLINED_FUNCTION_11_30(v15);
      MEMORY[0x1C87A3B40](v16, v1);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_10_32();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      uint64_t v11 = v18;
      break;
    case 3u:
      return v11;
    default:
      sub_1C65BBE04((uint64_t)v10, (uint64_t)v7);
      OUTLINED_FUNCTION_0_49();
      uint64_t v18 = v12;
      unint64_t v19 = v13;
      sub_1C65DF464((uint64_t)v7, (uint64_t)v5);
      sub_1C68EC8F8();
LABEL_4:
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      uint64_t v11 = v18;
      sub_1C6677940((uint64_t)v7);
      break;
  }
  return v11;
}

uint64_t sub_1C671611C(uint64_t a1, char a2)
{
  uint64_t result = 1701736302;
  switch(a2)
  {
    case 1:
      swift_retain();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000012;
      type metadata accessor for DateTime();
      swift_retain();
      sub_1C68EC8F8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      uint64_t v5 = a1;
      unsigned __int8 v6 = 1;
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRetain();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_43();
      unint64_t v9 = v7;
      uint64_t v8 = type metadata accessor for DateTime();
      MEMORY[0x1C87A3B40](a1, v8);
      sub_1C6606D84(a1, 2u);
      OUTLINED_FUNCTION_10_32();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      return v9;
    case 3:
      return result;
    default:
      OUTLINED_FUNCTION_0_49();
      unint64_t v9 = v4;
      sub_1C6606D60(a1, 0);
      type metadata accessor for DateTime();
      swift_retain();
      sub_1C68EC8F8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      uint64_t v5 = a1;
      unsigned __int8 v6 = 0;
LABEL_4:
      sub_1C6606D84(v5, v6);
      return v9;
  }
}

uint64_t sub_1C6716300(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1F4188790](a1);
  uint64_t v3 = v1;
  OUTLINED_FUNCTION_12_28(v2, (uint64_t)v21);
  uint64_t v4 = sub_1C65D3C68((uint64_t)v21, (uint64_t)v23, &qword_1EA407B40);
  OUTLINED_FUNCTION_12_28(v4, (uint64_t)v22);
  sub_1C66EB9AC((uint64_t)v22);
  uint64_t result = OUTLINED_FUNCTION_4_39();
  switch(v6)
  {
    case 1:
      OUTLINED_FUNCTION_9_35();
      uint64_t v12 = (const void *)nullsub_1(v19);
      OUTLINED_FUNCTION_6_42();
      uint64_t v13 = nullsub_1(v20);
      sub_1C66EB9F4(v13);
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v17 = 0xD000000000000012;
      unint64_t v18 = 0x80000001C6917060;
      memcpy(__dst, v12, sizeof(__dst));
      uint64_t v11 = (uint64_t)v12;
      goto LABEL_4;
    case 2:
      OUTLINED_FUNCTION_9_35();
      uint64_t v14 = *(void *)nullsub_1(v19);
      OUTLINED_FUNCTION_6_42();
      nullsub_1(v20);
      swift_bridgeObjectRetain();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_43();
      __dst[0] = v15;
      MEMORY[0x1C87A3B40](v14, &type metadata for Location);
      sub_1C6716BC8(v1);
      OUTLINED_FUNCTION_10_32();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      uint64_t result = __dst[0];
      break;
    case 3:
      return result;
    default:
      OUTLINED_FUNCTION_9_35();
      nullsub_1(v19);
      OUTLINED_FUNCTION_0_49();
      unint64_t v17 = v7;
      unint64_t v18 = v8;
      memcpy(__dst, v9, sizeof(__dst));
      sub_1C65D3C68((uint64_t)v23, (uint64_t)v20, &qword_1EA407B40);
      uint64_t v10 = nullsub_1(v20);
      sub_1C6716BC8(v3);
      uint64_t v11 = v10;
LABEL_4:
      sub_1C66EB9F4(v11);
      sub_1C68EC8F8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      sub_1C6716BC8(v3);
      uint64_t result = v17;
      break;
  }
  return result;
}

uint64_t sub_1C6716580(uint64_t a1)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_12_28(a1, (uint64_t)v61);
  uint64_t v3 = sub_1C65D3C68((uint64_t)v61, (uint64_t)v63, &qword_1EA407B30);
  OUTLINED_FUNCTION_12_28(v3, (uint64_t)v62);
  sub_1C66EB78C((uint64_t)v62);
  uint64_t result = OUTLINED_FUNCTION_4_39();
  switch(v12)
  {
    case 1:
      OUTLINED_FUNCTION_8_41(result, v5, v6, v7, v8, v9, v10, v11, v37, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v41,
        v42,
        v43);
      unint64_t v18 = (const void *)nullsub_1(&v43);
      OUTLINED_FUNCTION_7_38((uint64_t)v18, v19, v20, v21, v22, v23, v24, v25, v38, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60[0]);
      uint64_t v26 = nullsub_1(v60);
      sub_1C66EB7C4(v26);
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      uint64_t v41 = 0xD000000000000012;
      uint64_t v42 = 0x80000001C6917060;
      memcpy(__dst, v18, sizeof(__dst));
      uint64_t v17 = (uint64_t)v18;
      goto LABEL_4;
    case 2:
      OUTLINED_FUNCTION_8_41(result, v5, v6, v7, v8, v9, v10, v11, v37, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v41,
        v42,
        v43);
      uint64_t v27 = (uint64_t *)nullsub_1(&v43);
      uint64_t v28 = *v27;
      OUTLINED_FUNCTION_7_38((uint64_t)v27, v29, v30, v31, v32, v33, v34, v35, v39, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60[0]);
      nullsub_1(v60);
      swift_bridgeObjectRetain();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_43();
      __dst[0] = v36;
      MEMORY[0x1C87A3B40](v28, &type metadata for SportsItem);
      sub_1C6716AA8(v1);
      OUTLINED_FUNCTION_10_32();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      uint64_t result = __dst[0];
      break;
    case 3:
      return result;
    default:
      OUTLINED_FUNCTION_8_41(result, v5, v6, v7, v8, v9, v10, v11, v37, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        v41,
        v42,
        v43);
      nullsub_1(&v43);
      OUTLINED_FUNCTION_0_49();
      uint64_t v41 = v13;
      uint64_t v42 = v14;
      memcpy(__dst, v15, sizeof(__dst));
      sub_1C65D3C68((uint64_t)v63, (uint64_t)v60, &qword_1EA407B30);
      uint64_t v16 = nullsub_1(v60);
      sub_1C6716AA8(v2);
      uint64_t v17 = v16;
LABEL_4:
      sub_1C66EB7C4(v17);
      sub_1C68EC8F8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      sub_1C6716AA8(v2);
      uint64_t result = v41;
      break;
  }
  return result;
}

uint64_t destroy for DateTimeSlotResolutionTask(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DateTimeSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DateTimeSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

void *__swift_memcpy75_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4BuLL);
}

uint64_t assignWithTake for DateTimeSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateTimeSlotResolutionTask(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 75))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateTimeSlotResolutionTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 74) = 0;
    *(_WORD *)(result + 72) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 75) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 75) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTimeSlotResolutionTask()
{
  return &type metadata for DateTimeSlotResolutionTask;
}

uint64_t sub_1C6716AA8(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_2_51(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1C6716AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  if (a17 >= 2u)
  {
    if (a17 != 2) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C6716BC8(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_2_51(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1C6716D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v66 = LOBYTE(STACK[0x598]);
  if (v66 == 2)
  {
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t result = a11;
    if (v66 <= 1)
    {
      uint64_t v68 = STACK[0x588];
      unint64_t v69 = STACK[0x590];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C66EBCAC(a12, a13);
      sub_1C66EBCF0(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
      swift_bridgeObjectRetain();
      sub_1C66EC094(a52, a53);
      sub_1C66EC108(a65, a66);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1C66EC170(v68, v69);
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_51(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return 1701736302;
}

uint64_t OUTLINED_FUNCTION_6_42()
{
  return sub_1C65D3C68((uint64_t)&STACK[0xE20], (uint64_t)&STACK[0x5B0], v0);
}

uint64_t OUTLINED_FUNCTION_7_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  return sub_1C65D3C68(v46 - 184, (uint64_t)&a45, v45);
}

uint64_t OUTLINED_FUNCTION_8_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  return sub_1C65D3C68(v29 - 184, (uint64_t)&a28, v28);
}

uint64_t OUTLINED_FUNCTION_9_35()
{
  return sub_1C65D3C68((uint64_t)&STACK[0xE20], (uint64_t)&STACK[0x2E0], v0);
}

uint64_t OUTLINED_FUNCTION_10_32()
{
  return sub_1C68ECA18();
}

uint64_t OUTLINED_FUNCTION_11_30@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 64) = a1;
  *(void *)(v3 - 56) = (v1 - 32) | 0x8000000000000000;
  return v2;
}

uint64_t OUTLINED_FUNCTION_12_28(uint64_t a1, uint64_t a2)
{
  return sub_1C65D3C68(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_13_26()
{
  return sub_1C6606D84(v0, v1);
}

uint64_t initializeWithCopy for DateTimeSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = a2 + 32;
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v7(a1 + 32, v4, v6);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72);
  return a1;
}

uint64_t assignWithCopy for DateTimeSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for DateTimeSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateTimeSuggestionGenerator(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateTimeSuggestionGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTimeSuggestionGenerator()
{
  return &type metadata for DateTimeSuggestionGenerator;
}

uint64_t sub_1C6717564(uint64_t a1)
{
  unint64_t v20 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = sub_1C68ED278();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C66A0500(0, v2 & ~(v2 >> 63), 0);
    if (v20)
    {
      uint64_t result = sub_1C68ED228();
      char v5 = 1;
    }
    else
    {
      uint64_t result = sub_1C66014C8(a1);
      char v5 = v6 & 1;
    }
    uint64_t v22 = result;
    uint64_t v23 = v4;
    char v24 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        int64_t v8 = v22;
        uint64_t v7 = v23;
        char v9 = v24;
        char v10 = *(unsigned char *)(sub_1C67E6AA8(v22, v23, v24, a1) + 51);
        swift_release();
        uint64_t v11 = v25;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C66A0500(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v25;
        }
        unint64_t v13 = *(void *)(v11 + 16);
        unint64_t v12 = *(void *)(v11 + 24);
        if (v13 >= v12 >> 1)
        {
          uint64_t result = (uint64_t)sub_1C66A0500((char *)(v12 > 1), v13 + 1, 1);
          uint64_t v11 = v25;
        }
        *(void *)(v11 + 16) = v13 + 1;
        *(unsigned char *)(v11 + v13 + 32) = v10;
        if (v20)
        {
          if ((v9 & 1) == 0) {
            goto LABEL_23;
          }
          if (sub_1C68ED248()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407FD0);
          uint64_t v19 = (void (*)(unsigned char *, void))sub_1C68ECD88();
          sub_1C68ED2D8();
          v19(v21, 0);
        }
        else
        {
          int64_t v14 = sub_1C66014CC(v8, v7, v9, a1);
          uint64_t v16 = v15;
          char v18 = v17;
          sub_1C6621BBC(v8, v7, v9);
          uint64_t v22 = v14;
          uint64_t v23 = v16;
          char v24 = v18 & 1;
        }
        --v2;
      }
      while (v2);
      sub_1C6621BBC(v22, v23, v24);
      return v25;
    }
  }
  return result;
}

uint64_t sub_1C67177B4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C67177EC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

#error "1C67178E4: call analysis failed (funcsize=101)"

uint64_t sub_1C67179B8(uint64_t isStackAllocationSafe)
{
  v9[1] = *MEMORY[0x1E4F143B8];
  char v2 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v3 = (unint64_t)((1 << v2) + 63) >> 6;
  if ((v2 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    sub_1C65F7DA0(0, v3, (void *)((char *)v9 - ((8 * v3 + 15) & 0x3FFFFFFFFFFFFFF0)));
    OUTLINED_FUNCTION_2_52();
    uint64_t v5 = v4;
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    char v6 = (void *)swift_slowAlloc();
    sub_1C65F7DA0(0, v3, v6);
    OUTLINED_FUNCTION_2_52();
    uint64_t v5 = v7;
    swift_release();
    MEMORY[0x1C87A54F0](v6, -1, -1);
  }
  return v5;
}

void sub_1C6717B08(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(unsigned char *)(*(void *)(*(void *)(a3 + 48) + 8 * v14) + 53) == 1)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C67A38E0(a1, a2, v6, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

char *OUTLINED_FUNCTION_1_54@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_2_52()
{
  sub_1C6717B08(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_0_51()
{
  return swift_allocObject();
}

uint64_t TerminalElement.DateTimeValue.toDateTime()()
{
  uint64_t v87 = sub_1C68EAAA8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v84 = v0;
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_1();
  uint64_t v83 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4082F0);
  uint64_t v4 = OUTLINED_FUNCTION_3(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1();
  uint64_t v86 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E18);
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1();
  uint64_t v80 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4082F8);
  uint64_t v10 = OUTLINED_FUNCTION_3(v9);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v79 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v82 = (char *)&v79 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v85 = (char *)&v79 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  uint64_t v17 = OUTLINED_FUNCTION_3(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_1();
  uint64_t v81 = v18;
  uint64_t v19 = sub_1C68EAB68();
  OUTLINED_FUNCTION_0_1();
  uint64_t v89 = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408300);
  uint64_t v25 = OUTLINED_FUNCTION_3(v24);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408308);
  uint64_t v29 = OUTLINED_FUNCTION_3(v28);
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v79 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v79 - v36;
  sub_1C68EAA18();
  uint64_t v38 = sub_1C6718554((uint64_t)v37, 1);
  sub_1C66FA5E8((uint64_t)v37, &qword_1EA408308);
  sub_1C68EAA28();
  uint64_t v39 = sub_1C671889C((uint64_t)v27);
  sub_1C66FA5E8((uint64_t)v27, &qword_1EA408300);
  sub_1C68EA9F8();
  sub_1C6719FFC((uint64_t)v35, (uint64_t)v32, &qword_1EA408308);
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v19) == 1)
  {
    sub_1C66FA5E8((uint64_t)v32, &qword_1EA408308);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v23, v32, v19);
    if (sub_1C66FA0A4())
    {
      uint64_t v40 = sub_1C66F98DC();
      uint64_t v41 = OUTLINED_FUNCTION_4_40();
      v42(v41);
      goto LABEL_7;
    }
    uint64_t v43 = OUTLINED_FUNCTION_4_40();
    v44(v43);
  }
  uint64_t v40 = 0;
LABEL_7:
  uint64_t v45 = v38;
  sub_1C66FA5E8((uint64_t)v35, &qword_1EA408308);
  sub_1C68EAA08();
  uint64_t v46 = sub_1C671889C((uint64_t)v27);
  sub_1C66FA5E8((uint64_t)v27, &qword_1EA408300);
  uint64_t v89 = sub_1C6718A44(v45, v39);
  uint64_t v88 = sub_1C6718A44(v40, v46);
  if (v45 | v39) {
    goto LABEL_23;
  }
  uint64_t v47 = (uint64_t)v85;
  sub_1C68EAA38();
  uint64_t v48 = sub_1C68EA9E8();
  OUTLINED_FUNCTION_5_39(v47);
  if (v49)
  {
    uint64_t v50 = &qword_1EA4082F8;
    uint64_t v51 = v47;
  }
  else
  {
    uint64_t v52 = v81;
    sub_1C68EA9C8();
    OUTLINED_FUNCTION_59_1();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v47, v48);
    uint64_t v54 = sub_1C68EABD8();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v52, 1, v54);
    if (EnumTagSinglePayload != 1)
    {
      uint64_t v62 = sub_1C68EAC78();
      uint64_t v63 = v80;
      __swift_storeEnumTagSinglePayload(v80, 1, 1, v62);
      sub_1C67D4954(v63, 1, &v94);
      sub_1C66FA5E8(v63, &qword_1EA407E18);
      OUTLINED_FUNCTION_59_1();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v54);
      if (v94 != 38) {
        goto LABEL_23;
      }
      goto LABEL_14;
    }
    uint64_t v50 = &qword_1EA407E08;
    uint64_t v51 = v52;
  }
  sub_1C66FA5E8(v51, v50);
LABEL_14:
  uint64_t v56 = (uint64_t)v82;
  sub_1C68EAA38();
  OUTLINED_FUNCTION_5_39(v56);
  if (v49)
  {
    sub_1C66FA5E8(v56, &qword_1EA4082F8);
  }
  else
  {
    uint64_t v57 = TerminalElement.Recurrence.toRecurrence()();
    OUTLINED_FUNCTION_59_1();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v59(v56, v48);
    if (v57)
    {
      uint64_t v60 = *(void *)(v57 + 24);
      swift_retain();
      swift_release();
      if (v60)
      {
        char v91 = 1;
        uint64_t v61 = (uint64_t)v79;
        sub_1C68EAA38();
        OUTLINED_FUNCTION_5_39(v61);
        if (v49)
        {
          sub_1C66FA5E8(v61, &qword_1EA4082F8);
          uint64_t v77 = 0;
        }
        else
        {
          uint64_t v75 = TerminalElement.Recurrence.toRecurrence()();
          uint64_t v76 = v61;
          uint64_t v77 = v75;
          v59(v76, v48);
        }
        char v90 = 4;
        type metadata accessor for DateTime.DateTimeRange();
        swift_allocObject();
        uint64_t v78 = DateTime.DateTimeRange.init(withInterval:)(v60);
        type metadata accessor for DateTime();
        swift_allocObject();
        uint64_t v73 = DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(0, 0, &v91, v77, &v90, v78);
        swift_release();
        goto LABEL_34;
      }
    }
  }
LABEL_23:
  char v93 = 1;
  uint64_t v65 = sub_1C6718AE4();
  uint64_t v66 = v86;
  sub_1C68EAA48();
  uint64_t v67 = v87;
  if (__swift_getEnumTagSinglePayload(v66, 1, v87) == 1)
  {
    sub_1C66FA5E8(v66, &qword_1EA4082F0);
    char v68 = 4;
  }
  else
  {
    uint64_t v69 = v83;
    uint64_t v70 = v84;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v66, v67);
    int v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 88))(v69, v67);
    if (v71 == *MEMORY[0x1E4FA2D68])
    {
      char v68 = 0;
    }
    else if (v71 == *MEMORY[0x1E4FA2D78])
    {
      char v68 = 1;
    }
    else if (v71 == *MEMORY[0x1E4FA2D70])
    {
      char v68 = 2;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v67);
      char v68 = 4;
    }
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v66, v67);
  }
  char v92 = v68;
  uint64_t v72 = sub_1C6718EB8(v89, v88);
  type metadata accessor for DateTime();
  swift_allocObject();
  uint64_t v73 = DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(v45, v39, &v93, v65, &v92, v72);
  swift_release();
LABEL_34:
  swift_release();
  swift_release();
  swift_release();
  return v73;
}

uint64_t sub_1C6718554(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4082F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408308);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C68EAB68();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C6719FFC(a1, (uint64_t)v12, &qword_1EA408308);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C66FA5E8((uint64_t)v12, &qword_1EA408308);
    if ((a2 & 1) == 0) {
      return 0;
    }
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if ((sub_1C66FA0A4() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if ((a2 & 1) == 0) {
      return 0;
    }
LABEL_7:
    sub_1C68EAA38();
    uint64_t v18 = sub_1C68EA9E8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v18) == 1)
    {
      uint64_t v19 = &qword_1EA4082F8;
      uint64_t v20 = (uint64_t)v6;
    }
    else
    {
      sub_1C68EA9C8();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
      uint64_t v21 = sub_1C68EABD8();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v21) != 1)
      {
        uint64_t v17 = sub_1C67D526C();
        (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v9, v21);
        return v17;
      }
      uint64_t v19 = &qword_1EA407E08;
      uint64_t v20 = (uint64_t)v9;
    }
    sub_1C66FA5E8(v20, v19);
    return 0;
  }
  uint64_t v17 = sub_1C66F98DC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

uint64_t sub_1C671889C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408300);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C68EABC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C6719FFC(a1, (uint64_t)v4, &qword_1EA408300);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1C66FA5E8((uint64_t)v4, &qword_1EA408300);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (!TerminalElement.Time.canConvertToTime()())
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  uint64_t v9 = TerminalElement.Time.toTime()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1C6718A44(uint64_t a1, uint64_t a2)
{
  if (!(a1 | a2)) {
    return 0;
  }
  char v7 = 1;
  char v6 = 4;
  type metadata accessor for DateTime();
  swift_allocObject();
  uint64_t v2 = DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(a1, a2, &v7, 0, &v6, 0);
  swift_retain();
  swift_retain();
  return v2;
}

uint64_t sub_1C6718AE4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4082F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C68EA9E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C68EAA38();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    sub_1C66FA5E8((uint64_t)v5, &qword_1EA4082F8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  sub_1C68EA9C8();
  uint64_t v11 = sub_1C68EABD8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v11) == 1)
  {
    sub_1C66FA5E8((uint64_t)v2, &qword_1EA407E08);
LABEL_12:
    uint64_t v10 = TerminalElement.Recurrence.toRecurrence()();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v10;
  }
  uint64_t v12 = sub_1C67D526C();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v2, v11);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = sub_1C68EA9D8();
  if (v14)
  {
    swift_release();
    goto LABEL_12;
  }
  double v15 = (double)v13;
  LOBYTE(v23) = 11;
  type metadata accessor for DateTime.Interval();
  swift_allocObject();
  uint64_t v16 = DateTime.Interval.init(withQuantity:timeUnit:)((char *)&v23, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F03F0;
  type metadata accessor for DateTime();
  swift_allocObject();
  *(void *)(inited + 32) = DateTime.init(withDate:)(v12);
  unint64_t v23 = inited;
  swift_retain();
  swift_retain();
  sub_1C68ECC18();
  unint64_t v18 = v23;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C68ED528();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19)
  {
    sub_1C67FB014(v18);
    uint64_t v21 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC870];
  }
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v23) = 3;
  type metadata accessor for DateTime.RecurrencePattern();
  swift_allocObject();
  return DateTime.RecurrencePattern.init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(0, v16, 0, 1, v21, 0, 0, (char *)&v23);
}

uint64_t sub_1C6718EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v129 = a2;
  uint64_t v134 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4082F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v126 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408310);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v133 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408318);
  MEMORY[0x1F4188790](v7 - 8);
  char v132 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E00);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v123 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C68EAB68();
  uint64_t v137 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v124 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v138 = (char *)&v119 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v121 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v125 = (char *)&v119 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v122 = (char *)&v119 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E10);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v130 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v119 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408300);
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  uint64_t v29 = (char *)&v119 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v119 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408308);
  uint64_t v33 = MEMORY[0x1F4188790](v32 - 8);
  uint64_t v136 = (uint64_t)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v119 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v119 - v38;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E18);
  uint64_t v41 = MEMORY[0x1F4188790](v40 - 8);
  uint64_t v120 = (uint64_t)&v119 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v131 = (uint64_t)&v119 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v128 = (uint64_t)&v119 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  char v49 = (char *)&v119 - v48;
  uint64_t v50 = MEMORY[0x1F4188790](v47);
  uint64_t v52 = (char *)&v119 - v51;
  uint64_t v53 = MEMORY[0x1F4188790](v50);
  uint64_t v141 = (uint64_t)&v119 - v54;
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (char *)&v119 - v55;
  uint64_t v140 = v2;
  sub_1C68EAA18();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v11);
  uint64_t v139 = v56;
  if (EnumTagSinglePayload == 1)
  {
    sub_1C66FA5E8((uint64_t)v39, &qword_1EA408308);
    uint64_t v58 = sub_1C68EAC78();
    __swift_storeEnumTagSinglePayload((uint64_t)v56, 1, 1, v58);
  }
  else
  {
    sub_1C68EAB58();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v39, v11);
  }
  sub_1C68EAA28();
  uint64_t v59 = sub_1C68EABC8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v59) == 1)
  {
    sub_1C66FA5E8((uint64_t)v31, &qword_1EA408300);
    uint64_t v60 = sub_1C68EAC78();
    __swift_storeEnumTagSinglePayload(v141, 1, 1, v60);
  }
  else
  {
    sub_1C68EABB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v31, v59);
  }
  sub_1C6719FFC((uint64_t)v139, (uint64_t)v52, &qword_1EA407E18);
  uint64_t v61 = sub_1C68EAC78();
  if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v61) == 1)
  {
    sub_1C66FA5E8((uint64_t)v52, &qword_1EA407E18);
    int v62 = 0;
  }
  else
  {
    int v62 = sub_1C67F64C8();
    (*(void (**)(char *, uint64_t))(*(void *)(v61 - 8) + 8))(v52, v61);
  }
  uint64_t v63 = v138;
  sub_1C6719FFC(v141, (uint64_t)v49, &qword_1EA407E18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v61) == 1)
  {
    sub_1C66FA5E8((uint64_t)v49, &qword_1EA407E18);
    int v127 = 0;
  }
  else
  {
    int v127 = sub_1C67F64C8();
    (*(void (**)(char *, uint64_t))(*(void *)(v61 - 8) + 8))(v49, v61);
  }
  sub_1C68EAA18();
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v11) == 1)
  {
    sub_1C66FA5E8((uint64_t)v37, &qword_1EA408308);
    uint64_t v64 = (uint64_t)v133;
    uint64_t v65 = (uint64_t)v130;
LABEL_17:
    int v67 = 38;
    v152[0] = 38;
    goto LABEL_22;
  }
  sub_1C66F9FC8((uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v37, v11);
  uint64_t v66 = sub_1C68EAA98();
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v66) == 1)
  {
    sub_1C66FA5E8((uint64_t)v25, &qword_1EA407E10);
    uint64_t v64 = (uint64_t)v133;
    uint64_t v65 = (uint64_t)v130;
    uint64_t v63 = v138;
    goto LABEL_17;
  }
  char v68 = v122;
  sub_1C68EAA88();
  uint64_t v69 = (uint64_t)v68;
  uint64_t v70 = sub_1C68EABD8();
  if (__swift_getEnumTagSinglePayload(v69, 1, v70) == 1)
  {
    sub_1C66FA5E8(v69, &qword_1EA407E08);
    v152[0] = 38;
  }
  else
  {
    sub_1C67D4954((uint64_t)v139, 0, v152);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v69, v70);
  }
  uint64_t v65 = (uint64_t)v130;
  (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v25, v66);
  int v67 = v152[0];
  uint64_t v64 = (uint64_t)v133;
  uint64_t v63 = v138;
LABEL_22:
  int v135 = v62;
  if ((v62 & (v67 == 38)) != 1) {
    goto LABEL_34;
  }
  sub_1C68EAA18();
  uint64_t v71 = v136;
  if (__swift_getEnumTagSinglePayload(v136, 1, v11) == 1)
  {
    sub_1C66FA5E8(v71, &qword_1EA408308);
    goto LABEL_34;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v63, v71, v11);
  sub_1C68EAB18();
  if ((v72 & 1) == 0) {
    v152[0] = 11;
  }
  uint64_t v136 = v61;
  sub_1C68EAB28();
  if ((v73 & 1) == 0) {
    v152[0] = 9;
  }
  uint64_t v74 = (uint64_t)v123;
  sub_1C68EAB48();
  uint64_t v75 = sub_1C68EAC58();
  int v76 = __swift_getEnumTagSinglePayload(v74, 1, v75);
  sub_1C66FA5E8(v74, &qword_1EA407E00);
  uint64_t v77 = v137;
  uint64_t v78 = v124;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v124, v63, v11);
  if (v76 != 1)
  {
    uint64_t v81 = *(void (**)(char *, uint64_t))(v77 + 8);
    v81(v78, v11);
    v81(v63, v11);
    uint64_t v61 = v136;
    goto LABEL_33;
  }
  sub_1C68EAAE8();
  LODWORD(v133) = v79;
  uint64_t v80 = *(void (**)(char *, uint64_t))(v77 + 8);
  v80(v78, v11);
  v80(v138, v11);
  uint64_t v61 = v136;
  if ((v133 & 1) == 0) {
LABEL_33:
  }
    v152[0] = 8;
LABEL_34:
  sub_1C68EAA28();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v59) == 1)
  {
    uint64_t v82 = &qword_1EA408300;
    uint64_t v83 = (uint64_t)v29;
LABEL_38:
    sub_1C66FA5E8(v83, v82);
    int v85 = 38;
    uint64_t v86 = v134;
    uint64_t v87 = (uint64_t)v139;
    goto LABEL_43;
  }
  sub_1C68EAB88();
  (*(void (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v29, v59);
  uint64_t v84 = sub_1C68EAA98();
  if (__swift_getEnumTagSinglePayload(v65, 1, v84) == 1)
  {
    uint64_t v82 = &qword_1EA407E10;
    uint64_t v83 = v65;
    goto LABEL_38;
  }
  uint64_t v88 = v125;
  sub_1C68EAA88();
  uint64_t v89 = (uint64_t)v88;
  uint64_t v90 = sub_1C68EABD8();
  int v91 = __swift_getEnumTagSinglePayload(v89, 1, v90);
  uint64_t v86 = v134;
  uint64_t v87 = (uint64_t)v139;
  if (v91 == 1)
  {
    sub_1C66FA5E8(v89, &qword_1EA407E08);
    unsigned __int8 v151 = 38;
  }
  else
  {
    sub_1C67D4954(v141, 0, (char *)&v151);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 8))(v89, v90);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v65, v84);
  int v85 = v151;
LABEL_43:
  uint64_t v92 = (uint64_t)v132;
  sub_1C68EAA68();
  uint64_t v93 = sub_1C68EAC48();
  if (__swift_getEnumTagSinglePayload(v92, 1, v93) == 1)
  {
    sub_1C66FA5E8(v92, &qword_1EA408318);
    uint64_t v94 = 0;
  }
  else
  {
    uint64_t v95 = TerminalElement.Interval.toInterval()();
    uint64_t v96 = v92;
    uint64_t v94 = v95;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v96, v93);
  }
  sub_1C68EAA58();
  uint64_t v97 = sub_1C68EAC08();
  if (__swift_getEnumTagSinglePayload(v64, 1, v97) == 1)
  {
    sub_1C66FA5E8(v64, &qword_1EA408310);
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v98 = TerminalElement.Duration.toInterval()();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v97 - 8) + 8))(v64, v97);
  }
  uint64_t v99 = v131;
  if (!(v135 & 1 | (v152[0] != 38)))
  {
    if ((v127 & 1) == 0)
    {
LABEL_55:
      int v100 = 20;
      goto LABEL_56;
    }
    sub_1C6719FFC(v141, v131, &qword_1EA407E18);
    if (__swift_getEnumTagSinglePayload(v99, 1, v61) != 1)
    {
      TerminalElement.Qualifier.toQualifier()((char *)&v143);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v99, v61);
      int v100 = v143;
      goto LABEL_56;
    }
LABEL_54:
    sub_1C66FA5E8(v99, &qword_1EA407E18);
    goto LABEL_55;
  }
  uint64_t v99 = v128;
  sub_1C6719FFC(v87, v128, &qword_1EA407E18);
  if (__swift_getEnumTagSinglePayload(v99, 1, v61) == 1) {
    goto LABEL_54;
  }
  TerminalElement.Qualifier.toQualifier()((char *)&v142);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v99, v61);
  int v100 = v142;
LABEL_56:
  int v101 = v152[0];
  if (v152[0] != 38 || v85 != 38 || v94 || v100 != 20 || v98)
  {
    sub_1C66FA5E8(v141, &qword_1EA407E18);
    sub_1C66FA5E8(v87, &qword_1EA407E18);
    uint64_t v105 = v129;
    if (v129) {
      swift_retain();
    }
    else {
      uint64_t v86 = 0;
    }
    if (v101 == 38) {
      char v106 = v85;
    }
    else {
      char v106 = v101;
    }
    char v145 = v106;
    char v144 = v100;
    type metadata accessor for DateTime.DateTimeRange();
    swift_allocObject();
    uint64_t v107 = &v145;
    uint64_t v108 = &v144;
    uint64_t v109 = v86;
    uint64_t v110 = v105;
    uint64_t v111 = v98;
    uint64_t v112 = v94;
    goto LABEL_70;
  }
  uint64_t v102 = (uint64_t)v126;
  sub_1C68EAA38();
  uint64_t v103 = sub_1C68EA9E8();
  if (__swift_getEnumTagSinglePayload(v102, 1, v103) != 1)
  {
    if (!v86 || !*(void *)(v86 + 16))
    {
      uint64_t v115 = (uint64_t)v121;
      sub_1C68EA9C8();
      uint64_t v116 = sub_1C68EABD8();
      if (__swift_getEnumTagSinglePayload(v115, 1, v116) != 1)
      {
        uint64_t v117 = v120;
        __swift_storeEnumTagSinglePayload(v120, 1, 1, v61);
        sub_1C67D4954(v117, 1, &v150);
        sub_1C66FA5E8(v117, &qword_1EA407E18);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v116 - 8) + 8))(v115, v116);
        goto LABEL_80;
      }
      sub_1C66FA5E8(v115, &qword_1EA407E08);
    }
    char v150 = 38;
LABEL_80:
    uint64_t v104 = v129;
    sub_1C66FA5E8(v141, &qword_1EA407E18);
    sub_1C66FA5E8(v87, &qword_1EA407E18);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v103 - 8) + 8))(v102, v103);
    char v118 = v150;
    if (v150 == 38) {
      goto LABEL_81;
    }
    if (v104) {
      swift_retain();
    }
    else {
      uint64_t v86 = 0;
    }
    char v147 = v118;
    char v146 = 20;
    type metadata accessor for DateTime.DateTimeRange();
    swift_allocObject();
    uint64_t v107 = &v147;
    uint64_t v108 = &v146;
    uint64_t v109 = v86;
    uint64_t v110 = v104;
    uint64_t v111 = 0;
    uint64_t v112 = 0;
LABEL_70:
    uint64_t v113 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, v109, v110, v111, v112, v107, v108);
    goto LABEL_71;
  }
  sub_1C66FA5E8(v141, &qword_1EA407E18);
  sub_1C66FA5E8(v87, &qword_1EA407E18);
  sub_1C66FA5E8(v102, &qword_1EA4082F8);
  uint64_t v104 = v129;
LABEL_81:
  if (!v104) {
    return 0;
  }
  char v149 = 38;
  char v148 = 20;
  type metadata accessor for DateTime.DateTimeRange();
  swift_allocObject();
  uint64_t v113 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, v86, v104, 0, 0, &v149, &v148);
  swift_retain();
LABEL_71:
  swift_retain();
  return v113;
}

uint64_t sub_1C6719FFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_59_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_39(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t sub_1C671A0A4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F1550;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  __int16 v33 = 0;
  type metadata accessor for DateTime();
  swift_allocObject();
  uint64_t v1 = OUTLINED_FUNCTION_2_53();
  *(void *)(inited + 56) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(v1, v2, v3, v4, 6, 0, 0, v5);
  *(_OWORD *)(inited + 64) = xmmword_1C68EFF00;
  *(unsigned char *)(inited + 80) = 0;
  OUTLINED_FUNCTION_1_19();
  *(void *)(inited + 88) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(0, 0, 0, (char *)&v33 + 1, 7, 59, 59, (char *)&v33);
  *(_OWORD *)(inited + 96) = xmmword_1C68EFF20;
  *(unsigned char *)(inited + 112) = 0;
  uint64_t v6 = OUTLINED_FUNCTION_1_19();
  *(void *)(inited + 120) = OUTLINED_FUNCTION_1_55(v6, v7, v8, v9, v10, v11, v12, v13, v28, *(int *)v30, *(__int16 *)&v30[4], v33, SHIBYTE(v33));
  *(_OWORD *)(inited + 128) = xmmword_1C68EFF60;
  *(unsigned char *)(inited + 144) = 0;
  OUTLINED_FUNCTION_1_19();
  uint64_t v14 = OUTLINED_FUNCTION_2_53();
  *(void *)(inited + 152) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(v14, v15, v16, v17, 5, 59, 59, v18);
  *(_OWORD *)(inited + 160) = xmmword_1C68FC220;
  *(unsigned char *)(inited + 176) = 0;
  OUTLINED_FUNCTION_1_19();
  *(void *)(inited + 184) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, (char *)&v33 + 1, 6, 0, 0, (char *)&v33);
  *(_OWORD *)(inited + 192) = xmmword_1C68EFF80;
  *(unsigned char *)(inited + 208) = 0;
  uint64_t v19 = OUTLINED_FUNCTION_1_19();
  *(void *)(inited + 216) = OUTLINED_FUNCTION_1_55(v19, v20, v21, v22, v23, v24, v25, v26, v29, v31, v32, v33, SHIBYTE(v33));
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_1_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, &a13, 6, 59, 59, &a12);
}

uint64_t OUTLINED_FUNCTION_2_53()
{
  return 4;
}

uint64_t sub_1C671A284@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C68EAC58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (result == *MEMORY[0x1E4FA2F38])
  {
    *a1 = 0;
    return result;
  }
  if (result == *MEMORY[0x1E4FA2F48])
  {
    char v9 = 1;
  }
  else if (result == *MEMORY[0x1E4FA2F60])
  {
    char v9 = 2;
  }
  else if (result == *MEMORY[0x1E4FA2F58])
  {
    char v9 = 3;
  }
  else if (result == *MEMORY[0x1E4FA2F30])
  {
    char v9 = 4;
  }
  else if (result == *MEMORY[0x1E4FA2F50])
  {
    char v9 = 5;
  }
  else
  {
    if (result != *MEMORY[0x1E4FA2F40])
    {
      *a1 = 7;
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    char v9 = 6;
  }
  *a1 = v9;
  return result;
}

unint64_t DateTime.Date.DayOfWeek.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 7;
  if (result < 7) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.DayOfWeek.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C671A478()
{
  unint64_t result = qword_1EA408320;
  if (!qword_1EA408320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408320);
  }
  return result;
}

unint64_t sub_1C671A4C4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.DayOfWeek.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C671A4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.Date.DayOfWeek.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C671A4F4()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C671A554()
{
  return sub_1C68ECB78();
}

unsigned char *_s9DayOfWeekOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C671A670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.DayOfWeek()
{
  return &type metadata for DateTime.Date.DayOfWeek;
}

unint64_t sub_1C671A6A8()
{
  unint64_t result = qword_1EA408328;
  if (!qword_1EA408328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408328);
  }
  return result;
}

uint64_t sub_1C671A6F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0C10;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  char v24 = 0;
  char v23 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  *(void *)(inited + 56) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, &v24, 7, 0, 0, &v23);
  *(_OWORD *)(inited + 64) = xmmword_1C68EFF00;
  *(unsigned char *)(inited + 80) = 0;
  uint64_t v1 = OUTLINED_FUNCTION_1_56();
  *(void *)(inited + 88) = OUTLINED_FUNCTION_0_53(v1, v2, v3, v4, v5, v6, v7, v8, v18, *(int *)v20, *(__int16 *)&v20[4], v23, v24);
  *(_OWORD *)(inited + 96) = xmmword_1C68EFF20;
  *(unsigned char *)(inited + 112) = 0;
  uint64_t v9 = OUTLINED_FUNCTION_1_56();
  *(void *)(inited + 120) = OUTLINED_FUNCTION_0_53(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, v22, v23, v24);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_0_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &a13, 5, 59, 59, &a12);
}

uint64_t OUTLINED_FUNCTION_1_56()
{
  return swift_allocObject();
}

unint64_t sub_1C671A84C()
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  BOOL v0 = CommsAppResolutionFeature.isMessage.getter();
  id v1 = objc_msgSend(self, sel_defaultWorkspace);
  if (!v1) {
    __break(1u);
  }
  uint64_t v2 = v1;
  if (v0) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 4;
  }
  id v40 = 0;
  id v4 = objc_msgSend(v1, sel_defaultApplicationForCategory_error_, v3, &v40);

  if (v4)
  {
    id v5 = v40;
    uint64_t v6 = sub_1C671B05C(v4);
    uint64_t v8 = v7;
    if (qword_1EA405788 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C68EC478();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EA442838);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_1C68EC458();
    os_log_type_t v11 = sub_1C68ECE48();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      id v40 = v13;
      if (v8) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 0;
      }
      if (v8) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1C65B4078(v14, v15, (uint64_t)&v40, v16, v17, v18, v19, v20, v38, v39, (uint64_t)v40, v41, v42, v43, v44, v45, v46, v47, v48,
        v49);
      sub_1C68ED0C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C65AE000, v10, v11, "#DefaultAppProvider#getDefaultAppId: DefaultApp: %s", v12, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();

      if (!v8) {
        return v6;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (!v8) {
        return v6;
      }
    }
    if (v6 == 0xD000000000000015 && v8 == 0x80000001C6917120 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0xD000000000000017;
    }
  }
  else
  {
    id v21 = v40;
    __int16 v22 = (void *)sub_1C68E9878();

    swift_willThrow();
    if (qword_1EA405788 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1C68EC478();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EA442838);
    id v24 = v22;
    id v25 = v22;
    uint64_t v26 = sub_1C68EC458();
    os_log_type_t v27 = sub_1C68ECE58();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      id v40 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      id v29 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6650);
      uint64_t v30 = sub_1C68EC8F8();
      sub_1C65B4078(v30, v31, (uint64_t)&v40, v32, v33, v34, v35, v36, (uint64_t)v22, v39, (uint64_t)v40, v41, v42, v43, v44, v45, v46, v47, v48,
        v49);
      sub_1C68ED0C8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C65AE000, v26, v27, "#DefaultAppProvider#getDefaultAppId: got an exception when fetching default app error: %s", v28, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }
    else
    {
    }
    return 0;
  }
  return v6;
}

uint64_t sub_1C671ACE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    id v5 = (uint64_t *)(v3 + 40);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C65C8524();
        uint64_t v6 = v11;
      }
      unint64_t v9 = v6[2];
      if (v9 >= v6[3] >> 1)
      {
        sub_1C65C8524();
        uint64_t v6 = v12;
      }
      v5 += 3;
      uint64_t v6[2] = v9 + 1;
      uint64_t v10 = &v6[2 * v9];
      v10[4] = v8;
      v10[5] = v7;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  BOOL v13 = CommsAppResolutionFeature.isMessage.getter();
  BOOL v14 = CommsAppResolutionFeature.isPhone.getter();
  if (!CommsAppResolutionFeature.isRequestByContactLabel()() && !CommsAppResolutionFeature.isRequestByHandleType()())
  {
    if (v13 && (sub_1C6633268() & 1) != 0 || v14 && (sub_1C6633268() & 1) != 0)
    {
      if (qword_1EA405788 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C68EC478();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EA442838);
      uint64_t v18 = sub_1C68EC458();
      os_log_type_t v19 = sub_1C68ECE48();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_1C65AE000, v18, v19, "#DefaultAppProvider#getFallBackAppResult Default app experience turned on", v20, 2u);
        OUTLINED_FUNCTION_0();
      }

      unint64_t v21 = sub_1C671A84C();
      uint64_t v23 = v22;
      if (!v22)
      {
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v24 = 0;
        goto LABEL_28;
      }
      unint64_t v24 = v21;
      char v25 = sub_1C681455C(v21, v22, v6);
      uint64_t result = swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_30:
        char v16 = 0;
        goto LABEL_31;
      }
      if (sub_1C68EC918() == 0xD000000000000012 && v26 == 0x80000001C6913AD0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      char v27 = sub_1C68ED7E8();
      uint64_t result = swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_30;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v24 = 0;
    uint64_t v23 = 0;
LABEL_28:
    char v16 = 3;
LABEL_31:
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v23;
    goto LABEL_32;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  char v16 = 3;
LABEL_32:
  *(unsigned char *)(a2 + 16) = v16;
  return result;
}

uint64_t sub_1C671AFDC()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C671B004()
{
  sub_1C671AFDC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultAppProvider()
{
  return self;
}

uint64_t sub_1C671B05C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C68EC898();

  return v3;
}

unint64_t DateTime.Date.DefinedDate.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 7;
  if (result < 7) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.DefinedDate.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C671B0EC()
{
  unint64_t result = qword_1EA408330;
  if (!qword_1EA408330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408330);
  }
  return result;
}

unint64_t sub_1C671B138@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.DefinedDate.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C671B140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.Date.DefinedDate.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C671B168()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C671B1C8()
{
  return sub_1C68ECB78();
}

unsigned char *_s11DefinedDateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C671B2E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.DefinedDate()
{
  return &type metadata for DateTime.Date.DefinedDate;
}

unint64_t sub_1C671B31C()
{
  unint64_t result = qword_1EA408338;
  if (!qword_1EA408338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408338);
  }
  return result;
}

uint64_t DateTime.DefinedDateTime.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t DateTime.DefinedDateTime.rawValue.getter()
{
  return 0;
}

unint64_t sub_1C671B384()
{
  unint64_t result = qword_1EA408340;
  if (!qword_1EA408340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408340);
  }
  return result;
}

uint64_t sub_1C671B3D8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return DateTime.DefinedDateTime.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C671B3E0()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C671B440()
{
  return sub_1C68ECB78();
}

unsigned char *_s15DefinedDateTimeOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C671B52CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.DefinedDateTime()
{
  return &type metadata for DateTime.DefinedDateTime;
}

unint64_t sub_1C671B564()
{
  unint64_t result = qword_1EA408348;
  if (!qword_1EA408348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408348);
  }
  return result;
}

uint64_t sub_1C671B5B0(unsigned __int8 *a1)
{
  int v2 = *a1;
  switch(v2)
  {
    case 19:
      uint64_t v3 = 0xBFF0000000000000;
      break;
    case 17:
      uint64_t v3 = 0x3FF0000000000000;
      break;
    case 16:
      uint64_t v3 = 0;
      break;
    default:
      return 0;
  }
  uint64_t result = 0;
  switch(*v1)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x16:
    case 0x17:
      char v12 = 1;
      char v11 = v2;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_0_54();
      uint64_t v5 = &v12;
      unsigned int v6 = &v11;
      goto LABEL_15;
    case 1:
    case 0xB:
    case 0x11:
    case 0x12:
    case 0x14:
      char v18 = 12;
      char v17 = v2;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_0_54();
      uint64_t v5 = &v18;
      unsigned int v6 = &v17;
      goto LABEL_15;
    case 9:
      char v16 = 7;
      char v15 = v2;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_0_54();
      uint64_t v5 = &v16;
      unsigned int v6 = &v15;
      goto LABEL_15;
    case 0xA:
    case 0x13:
      char v14 = 11;
      char v13 = v2;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_0_54();
      uint64_t v5 = &v14;
      unsigned int v6 = &v13;
      goto LABEL_15;
    case 0x1F:
      char v10 = 4;
      char v9 = v2;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_0_54();
      uint64_t v5 = &v10;
      unsigned int v6 = &v9;
      goto LABEL_15;
    case 0x20:
      char v8 = 6;
      char v7 = v2;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_0_54();
      uint64_t v5 = &v8;
      unsigned int v6 = &v7;
LABEL_15:
      uint64_t result = DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(v3, 0, v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  return swift_allocObject();
}

uint64_t DateTime.DateTimeRange.DefinedDateTimeRange.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 0;
  char v3 = 20;
  switch(result)
  {
    case 0:
      goto LABEL_22;
    case 1:
      char v2 = 1;
      goto LABEL_22;
    case 2:
      char v2 = 2;
      goto LABEL_22;
    case 3:
      char v2 = 3;
      goto LABEL_22;
    case 4:
      char v2 = 4;
      goto LABEL_22;
    case 5:
      char v2 = 5;
      goto LABEL_22;
    case 6:
      char v2 = 6;
      goto LABEL_22;
    case 7:
      char v2 = 7;
      goto LABEL_22;
    case 8:
      char v2 = 8;
      goto LABEL_22;
    case 9:
      char v2 = 9;
      goto LABEL_22;
    case 10:
      char v2 = 10;
      goto LABEL_22;
    case 11:
      char v2 = 11;
      goto LABEL_22;
    case 12:
      char v2 = 12;
      goto LABEL_22;
    case 13:
      char v2 = 13;
      goto LABEL_22;
    case 14:
      char v2 = 14;
      goto LABEL_22;
    case 15:
      char v2 = 15;
      goto LABEL_22;
    case 16:
      char v2 = 16;
      goto LABEL_22;
    case 17:
      char v2 = 17;
      goto LABEL_22;
    case 18:
      char v2 = 18;
      goto LABEL_22;
    case 19:
      char v2 = 19;
LABEL_22:
      char v3 = v2;
      break;
    case 20:
      break;
    case 21:
      char v3 = 21;
      break;
    case 22:
      char v3 = 22;
      break;
    case 23:
      char v3 = 23;
      break;
    case 24:
      char v3 = 24;
      break;
    case 25:
      char v3 = 25;
      break;
    case 26:
      char v3 = 26;
      break;
    case 27:
      char v3 = 27;
      break;
    case 28:
      char v3 = 28;
      break;
    case 29:
      char v3 = 29;
      break;
    case 30:
      char v3 = 30;
      break;
    case 31:
      char v3 = 31;
      break;
    case 32:
      char v3 = 32;
      break;
    case 33:
      char v3 = 33;
      break;
    case 34:
      char v3 = 34;
      break;
    case 35:
      char v3 = 35;
      break;
    case 36:
      char v3 = 36;
      break;
    case 37:
      char v3 = 37;
      break;
    default:
      char v3 = 38;
      break;
  }
  *a2 = v3;
  return result;
}

uint64_t DateTime.DateTimeRange.DefinedDateTimeRange.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C671B9D8()
{
  unint64_t result = qword_1EA408350;
  if (!qword_1EA408350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408350);
  }
  return result;
}

uint64_t sub_1C671BA24@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.DateTimeRange.DefinedDateTimeRange.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C671BA2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.DateTimeRange.DefinedDateTimeRange.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C671BA54()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C671BAB4()
{
  return sub_1C68ECB78();
}

uint64_t _s20DefinedDateTimeRangeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDB)
  {
    if (a2 + 37 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 37) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 38;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x26;
  int v5 = v6 - 38;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s20DefinedDateTimeRangeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 37 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 37) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDA)
  {
    unsigned int v6 = ((a2 - 219) >> 8) + 1;
    *uint64_t result = a2 + 37;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C671BC58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 37;
        break;
    }
  }
  return result;
}

unint64_t sub_1C671BC80()
{
  unint64_t result = qword_1EA408358;
  if (!qword_1EA408358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408358);
  }
  return result;
}

uint64_t sub_1C671BCCC()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1) {
      sub_1C68ED948();
    }
    return sub_1C68ED948();
  }
  else
  {
    sub_1C68ED948();
    return sub_1C68EC7D8();
  }
}

uint64_t sub_1C671BD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        uint64_t v8 = OUTLINED_FUNCTION_0_55();
        sub_1C65F09FC(v8, v9, 1);
        sub_1C65F09FC(v5, v6, 1);
        char v10 = ((v5 ^ v2) & 1) == 0;
        return v10 & 1;
      }
    }
    else if (v7 == 2 && (v6 | v5) == 0)
    {
      uint64_t v14 = OUTLINED_FUNCTION_0_55();
      sub_1C65F09FC(v14, v15, 2);
      sub_1C65F09FC(0, 0, 2);
      char v10 = 1;
      return v10 & 1;
    }
LABEL_11:
    sub_1C65F09E8(v5, v6, v7);
    uint64_t v12 = OUTLINED_FUNCTION_0_55();
    sub_1C65F09FC(v12, v13, v4);
    sub_1C65F09FC(v5, v6, v7);
    char v10 = 0;
    return v10 & 1;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v2 == v5 && v3 == v6)
  {
    char v10 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_0_55();
    char v10 = sub_1C68ED7E8();
  }
  sub_1C65F09E8(v5, v6, 0);
  sub_1C65F09E8(v2, v3, 0);
  sub_1C65F09FC(v2, v3, 0);
  sub_1C65F09FC(v5, v6, 0);
  return v10 & 1;
}

uint64_t sub_1C671BECC()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C68ED938();
  if (v1)
  {
    if (v1 == 1) {
      sub_1C68ED948();
    }
    sub_1C68ED948();
  }
  else
  {
    sub_1C68ED948();
    sub_1C68EC7D8();
  }
  return sub_1C68ED988();
}

uint64_t sub_1C671BF70()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C68ED938();
  if (v1)
  {
    if (v1 == 1) {
      sub_1C68ED948();
    }
    sub_1C68ED948();
  }
  else
  {
    sub_1C68ED948();
    sub_1C68EC7D8();
  }
  return sub_1C68ED988();
}

uint64_t _s3KeyOwxx(uint64_t a1)
{
  return sub_1C65F09FC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s3KeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C65F09E8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s3KeyOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C65F09E8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C65F09FC(v6, v7, v8);
  return a1;
}

uint64_t _s3KeyOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C65F09FC(v4, v5, v6);
  return a1;
}

uint64_t _s3KeyOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s3KeyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C671C190(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C671C1A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_1C671C1D4()
{
  unint64_t result = qword_1EA408360;
  if (!qword_1EA408360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408360);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_55()
{
  return v0;
}

void *sub_1C671C248()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408380);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68FC7C0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 40) = sub_1C6647DB0();
  *(unsigned char *)(inited + 48) = 0;
  *(void *)(inited + 56) = sub_1C661BE70();
  *(unsigned char *)(inited + 64) = 3;
  *(void *)(inited + 72) = sub_1C6647F00();
  *(unsigned char *)(inited + 80) = 4;
  *(void *)(inited + 88) = sub_1C671A0A4();
  *(unsigned char *)(inited + 96) = 5;
  *(void *)(inited + 104) = sub_1C671A6F4();
  *(unsigned char *)(inited + 112) = 6;
  *(void *)(inited + 120) = sub_1C67205D4();
  *(unsigned char *)(inited + 128) = 7;
  *(void *)(inited + 136) = sub_1C67278F8();
  *(unsigned char *)(inited + 144) = 12;
  *(void *)(inited + 152) = sub_1C6732E8C();
  *(unsigned char *)(inited + 160) = 13;
  *(void *)(inited + 168) = sub_1C6735F90();
  *(unsigned char *)(inited + 176) = 14;
  *(void *)(inited + 184) = sub_1C679F9E8();
  *(unsigned char *)(inited + 192) = 15;
  *(void *)(inited + 200) = sub_1C67BF61C();
  *(unsigned char *)(inited + 208) = 16;
  *(void *)(inited + 216) = sub_1C67C113C();
  *(unsigned char *)(inited + 224) = 22;
  *(void *)(inited + 232) = sub_1C6737CA8();
  *(unsigned char *)(inited + 240) = 23;
  *(void *)(inited + 248) = sub_1C663CA48();
  *(unsigned char *)(inited + 256) = 24;
  *(void *)(inited + 264) = sub_1C68B30B8();
  *(unsigned char *)(inited + 272) = 19;
  *(void *)(inited + 280) = sub_1C68E2CAC();
  *(unsigned char *)(inited + 288) = 10;
  *(void *)(inited + 296) = sub_1C67315BC();
  *(unsigned char *)(inited + 304) = 21;
  *(void *)(inited + 312) = sub_1C68E3238();
  *(unsigned char *)(inited + 320) = 36;
  *(void *)(inited + 328) = sub_1C67D1A44();
  *(unsigned char *)(inited + 336) = 37;
  *(void *)(inited + 344) = sub_1C68E3178();
  *(unsigned char *)(inited + 352) = 17;
  *(void *)(inited + 360) = sub_1C6876278();
  *(unsigned char *)(inited + 368) = 18;
  *(void *)(inited + 376) = sub_1C68A4018();
  *(unsigned char *)(inited + 384) = 1;
  *(void *)(inited + 392) = sub_1C6638F28();
  *(unsigned char *)(inited + 400) = 20;
  *(void *)(inited + 408) = sub_1C68E2E84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408388);
  sub_1C668DAB8();
  unint64_t result = (void *)sub_1C68EC748();
  off_1EA408368 = result;
  return result;
}

void DefinedDateTimeRangeStore.getDefinedDateTimeRangesFor(_:calendar:locale:ranges:hemisphere:overrides:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v9 = a1;
  char v10 = *a5;
  if (a4)
  {
    uint64_t v11 = a4;
  }
  else
  {
    if (qword_1EA4056F8 != -1) {
      swift_once();
    }
    uint64_t v12 = swift_bridgeObjectRetain();
    a1 = sub_1C668929C(v12);
    uint64_t v11 = a1;
  }
  MEMORY[0x1F4188790](a1);
  void v13[2] = v9;
  v13[3] = a2;
  v13[4] = a3;
  char v14 = v10;
  uint64_t v15 = a6;
  swift_bridgeObjectRetain();
  sub_1C671C588(sub_1C671C818, (uint64_t)v13, v11);
}

uint64_t sub_1C671C548(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = *a1;
  return DefinedDateTimeRangeStore.isDateInDefinedDateTimeRange(_:dateTimeRange:calendar:locale:hemisphere:overrides:)(a2, &v7, a3, a4, a5, a6) & 1;
}

void sub_1C671C588(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  int64_t v6 = 0;
  uint64_t v22 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v6++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v6 >= v23) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v6);
    if (!v14) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_19:
    char v16 = *(unsigned char *)(*(void *)(v4 + 48) + v12);
    char v24 = v16;
    char v17 = a1(&v24);
    if (v3)
    {
      swift_release();
LABEL_31:
      swift_release();
      return;
    }
    if (v17)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v25 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C66A0520(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v25;
      }
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1C66A0520(v19 > 1, v20 + 1, 1);
        uint64_t v10 = v25;
      }
      *(void *)(v10 + 16) = v20 + 1;
      *(unsigned char *)(v10 + v20 + 32) = v16;
      uint64_t v4 = a3;
    }
  }
  int64_t v15 = v6 + 1;
  if (v6 + 1 >= v23) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v6 + 2;
  if (v6 + 2 >= v23) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v6 + 3;
  if (v6 + 3 >= v23) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v6 + 4;
  if (v6 + 4 >= v23) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v6 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v23) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v6);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_33:
  __break(1u);
}

unint64_t sub_1C671C7C8()
{
  unint64_t result = qword_1EA408378;
  if (!qword_1EA408378)
  {
    sub_1C68E9B78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408378);
  }
  return result;
}

uint64_t sub_1C671C818(char *a1)
{
  return sub_1C671C548(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48)) & 1;
}

unint64_t DateTime.Time.DefinedTime.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 3;
  if (result < 3) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t DateTime.Time.DefinedTime.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C671C864()
{
  unint64_t result = qword_1EA408390;
  if (!qword_1EA408390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408390);
  }
  return result;
}

unint64_t sub_1C671C8B0@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Time.DefinedTime.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C671C8B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.Time.DefinedTime.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C671C8E0()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C671C940()
{
  return sub_1C68ECB78();
}

unsigned char *_s11DefinedTimeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C671CA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Time.DefinedTime()
{
  return &type metadata for DateTime.Time.DefinedTime;
}

unint64_t sub_1C671CA94()
{
  unint64_t result = qword_1EA408398;
  if (!qword_1EA408398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408398);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefinedTimeStore()
{
  return &type metadata for DefinedTimeStore;
}

void *sub_1C671CAF0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 40) = sub_1C67C8890();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083B0);
  sub_1C671CC7C();
  unint64_t result = (void *)sub_1C68EC748();
  off_1EA4083A0 = result;
  return result;
}

uint64_t sub_1C671CB7C(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  if (qword_1EA405700 != -1) {
    swift_once();
  }
  char v2 = off_1EA4083A0;
  if (!*((void *)off_1EA4083A0 + 2)) {
    return 0;
  }
  uint64_t v3 = sub_1C6850AC8(v1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(v2[7] + 8 * v3);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C68E9C28();
  if (v7)
  {
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0x746C7561666564;
    uint64_t v8 = 0xE700000000000000;
  }
  uint64_t v9 = sub_1C68334E8(v6, v8, v5);
  swift_bridgeObjectRelease();
  if (!v9) {
    uint64_t v9 = sub_1C68334E8(0x746C7561666564, 0xE700000000000000, v5);
  }
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1C671CC7C()
{
  unint64_t result = qword_1EA4083B8;
  if (!qword_1EA4083B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4083B8);
  }
  return result;
}

uint64_t sub_1C671CCC8()
{
  sub_1C68E92A8();
  swift_allocObject();
  sub_1C68E9298();
  sub_1C671E270();
  swift_retain();
  id v0 = sub_1C671CE48();
  if (v0)
  {
    uint64_t v1 = (uint64_t)v0;
    swift_release();
  }
  else
  {
    type metadata accessor for InferenceError();
    swift_allocObject();
    uint64_t v1 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD000000000000066, 0x80000001C69171E0, 0x292874696E69, 0xE600000000000000, 24, MEMORY[0x1E4FBC860], 2);
    sub_1C675786C(0, 0xE000000000000000);
    sub_1C671E2B0((unint64_t *)&qword_1EBBF6340, (void (*)(uint64_t))type metadata accessor for InferenceError);
    swift_allocError();
    uint64_t *v2 = v1;
    swift_willThrow();
    swift_release_n();
  }
  return v1;
}

id sub_1C671CE48()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1C68EC868();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_, v1);

  return v2;
}

uint64_t sub_1C671CEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68EC8E8();
  MEMORY[0x1F4188790](v6 - 8);
  type metadata accessor for ContactResolverDESRecord();
  sub_1C671E2B0(&qword_1EA4083C0, (void (*)(uint64_t))type metadata accessor for ContactResolverDESRecord);
  uint64_t result = sub_1C68E9288();
  if (!v3)
  {
    uint64_t v9 = result;
    uint64_t v10 = v8;
    uint64_t v45 = a2;
    sub_1C68EC8D8();
    uint64_t v11 = sub_1C68EC8B8();
    if (v12)
    {
      uint64_t v13 = v11;
      uint64_t v14 = v12;
      if (qword_1EBBF5DA0 != -1) {
        swift_once();
      }
      uint64_t v43 = (void *)a3;
      uint64_t v15 = sub_1C68EC478();
      __swift_project_value_buffer(v15, (uint64_t)&unk_1EBBF7A68);
      swift_bridgeObjectRetain();
      char v16 = sub_1C68EC458();
      os_log_type_t v17 = sub_1C68ECE48();
      uint64_t v44 = v10;
      if (os_log_type_enabled(v16, v17))
      {
        char v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = v13;
        uint64_t v20 = swift_slowAlloc();
        uint64_t aBlock = v20;
        *(_DWORD *)char v18 = 136315138;
        swift_bridgeObjectRetain();
        sub_1C65B4078(v19, v14, (uint64_t)&aBlock, v21, v22, v23, v24, v25, v40, v42, a3, v10, v45, aBlock, v47, (uint64_t)v48, (uint64_t)v49, (uint64_t)v50, v51,
          v52);
        uint64_t v53 = v26;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C65AE000, v16, v17, "DES Record: %s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87A54F0](v20, -1, -1);
        MEMORY[0x1C87A54F0](v18, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      dispatch_semaphore_t v41 = dispatch_semaphore_create(0);
      uint64_t v29 = OUTLINED_FUNCTION_18_12();
      *(void *)(v29 + 16) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
      *(void *)(inited + 32) = 1702125924;
      *(void *)(inited + 40) = 0xE400000000000000;
      *(void *)(inited + 48) = sub_1C65E7578();
      sub_1C68EC748();
      uint64_t v31 = (void *)sub_1C68E9A08();
      sub_1C677D670();
      swift_bridgeObjectRelease();
      uint64_t v32 = (void *)sub_1C68EC708();
      swift_bridgeObjectRelease();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v29;
      *(void *)(v33 + 24) = v41;
      uint64_t v50 = sub_1C671E33C;
      uint64_t v51 = v33;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v47 = 1107296256;
      uint64_t v48 = sub_1C671D4C4;
      uint64_t v49 = &block_descriptor_20;
      uint64_t v34 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v35 = v41;
      swift_release();
      objc_msgSend(v43, sel_saveRecordWithData_recordInfo_completion_, v31, v32, v34);
      _Block_release(v34);

      sub_1C68ECFB8();
      OUTLINED_FUNCTION_7_7();
      uint64_t v36 = *(void **)(v29 + 16);
      if (!v36)
      {

        swift_release();
        uint64_t v38 = v9;
        unint64_t v39 = v44;
        return sub_1C65B64F8(v38, v39);
      }
      id v37 = v36;
      swift_willThrow();

      swift_release();
      uint64_t v10 = v44;
    }
    else
    {
      type metadata accessor for InferenceError();
      swift_allocObject();
      uint64_t v27 = sub_1C6757C90(66, 0, 0xE000000000000000, 0xD000000000000066, 0x80000001C69171E0, 0xD000000000000011, 0x80000001C6917250, 33, MEMORY[0x1E4FBC860], 2);
      sub_1C675786C(0, 0xE000000000000000);
      sub_1C671E2B0((unint64_t *)&qword_1EBBF6340, (void (*)(uint64_t))type metadata accessor for InferenceError);
      swift_allocError();
      *uint64_t v28 = v27;
      swift_willThrow();
    }
    uint64_t v38 = v9;
    unint64_t v39 = v10;
    return sub_1C65B64F8(v38, v39);
  }
  return result;
}

uint64_t sub_1C671D45C(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a2;
  id v6 = a2;

  return sub_1C68ECFC8();
}

uint64_t sub_1C671D4C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1C68E9BD8();
    uint64_t v10 = sub_1C68E9BF8();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C68E9BF8();
    uint64_t v11 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v8, v11, 1, v10);
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1C65EA728((uint64_t)v8, &qword_1EBBF6510);
}

uint64_t sub_1C671D5C8(void *a1, uint64_t a2)
{
  swift_beginAccess();
  char v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  id v5 = a1;
  return sub_1C68ECFC8();
}

void sub_1C671D62C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1C671D694(uint64_t a1, void *a2)
{
  uint64_t v64 = a1;
  uint64_t v4 = sub_1C68E9BF8();
  uint64_t v61 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3DA8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v47 - v11;
  uint64_t result = sub_1C671DD4C(a2);
  if (v2) {
    return result;
  }
  uint64_t v50 = 0;
  id v53 = a2;
  uint64_t v56 = 0;
  int64_t v14 = 0;
  uint64_t v60 = result;
  uint64_t v16 = *(void *)(result + 64);
  result += 64;
  uint64_t v15 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(result - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v15;
  uint64_t v59 = v61 + 16;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v61 + 32);
  uint64_t v63 = v61 + 8;
  uint64_t v52 = &v67;
  int64_t v58 = (unint64_t)(v17 + 63) >> 6;
  int64_t v48 = v58 - 1;
  uint64_t v57 = result;
  uint64_t v49 = result + 40;
  uint64_t v62 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v51 = v6;
  while (1)
  {
    while (1)
    {
      if (v19)
      {
        unint64_t v20 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        int64_t v21 = v14;
        unint64_t v22 = v20 | (v14 << 6);
        goto LABEL_7;
      }
      int64_t v26 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_49;
      }
      if (v26 >= v58)
      {
        int64_t v21 = v14;
      }
      else
      {
        unint64_t v27 = *(void *)(v57 + 8 * v26);
        if (v27) {
          goto LABEL_11;
        }
        int64_t v21 = v14 + 1;
        if (v14 + 2 < v58)
        {
          unint64_t v27 = *(void *)(v57 + 8 * (v14 + 2));
          if (v27)
          {
            int64_t v26 = v14 + 2;
            goto LABEL_11;
          }
          int64_t v21 = v14 + 2;
          if (v14 + 3 < v58)
          {
            unint64_t v27 = *(void *)(v57 + 8 * (v14 + 3));
            if (v27)
            {
              int64_t v26 = v14 + 3;
LABEL_11:
              unint64_t v19 = (v27 - 1) & v27;
              unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
              int64_t v21 = v26;
LABEL_7:
              uint64_t v23 = v60;
              (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v10, *(void *)(v60 + 48) + *(void *)(v61 + 72) * v22, v4);
              uint64_t v24 = *(void *)(v23 + 56);
              uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3DA0);
              *(void *)&v10[*(int *)(v25 + 48)] = *(void *)(v24 + 8 * v22);
              __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v25);
              swift_bridgeObjectRetain();
              goto LABEL_14;
            }
            int64_t v26 = v14 + 4;
            int64_t v21 = v14 + 3;
            if (v14 + 4 < v58)
            {
              unint64_t v27 = *(void *)(v57 + 8 * v26);
              if (v27) {
                goto LABEL_11;
              }
              while (v14 + 5 < v58)
              {
                unint64_t v27 = *(void *)(v49 + 8 * v14++);
                if (v27)
                {
                  int64_t v26 = v14 + 4;
                  goto LABEL_11;
                }
              }
              int64_t v21 = v48;
            }
          }
        }
      }
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3DA0);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v28);
      unint64_t v19 = 0;
LABEL_14:
      sub_1C671DF18((uint64_t)v10, (uint64_t)v12);
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3DA0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v29) == 1)
      {
        swift_release();
        return v56;
      }
      uint64_t v30 = *(void *)&v12[*(int *)(v29 + 48)];
      (*v65)(v6, v12, v4);
      if (*(void *)(v30 + 16) && (unint64_t v31 = sub_1C68506A0(1702125924, 0xE400000000000000), (v32 & 1) != 0))
      {
        sub_1C65B429C(*(void *)(v30 + 56) + 32 * v31, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v67 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v67 + 1))
      {
        sub_1C65EA728((uint64_t)&aBlock, &qword_1EBBF6320);
        goto LABEL_30;
      }
      if (swift_dynamicCast()) {
        break;
      }
LABEL_30:
      uint64_t v36 = OUTLINED_FUNCTION_18_12();
      *(void *)(v36 + 16) = 0;
      uint64_t v55 = (id *)(v36 + 16);
      dispatch_semaphore_t v37 = dispatch_semaphore_create(0);
      uint64_t v54 = sub_1C68E9BB8();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v36;
      *(void *)(v38 + 24) = v37;
      char v68 = sub_1C671E1C4;
      uint64_t v69 = v38;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v67 = sub_1C671D62C;
      *((void *)&v67 + 1) = &block_descriptor_7;
      unint64_t v39 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v40 = v37;
      swift_release();
      dispatch_semaphore_t v41 = (void *)v54;
      objc_msgSend(v53, sel_deleteSavedRecordWithIdentfier_completion_, v54, v39);
      _Block_release(v39);

      sub_1C68ECFB8();
      unint64_t v42 = v55;
      OUTLINED_FUNCTION_7_7();
      if (*v42)
      {
        id v45 = *v42;
        swift_willThrow();
        swift_release();

        OUTLINED_FUNCTION_0_56();
        v46();
        return swift_release();
      }
      swift_release();

      uint64_t v6 = v51;
      OUTLINED_FUNCTION_0_56();
      uint64_t result = v43();
      BOOL v44 = __OFADD__(v56++, 1);
      int64_t v14 = v21;
      if (v44) {
        goto LABEL_50;
      }
    }
    uint64_t v33 = v70;
    uint64_t result = sub_1C68E9B18();
    if ((~*(void *)&v34 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v34 <= -9.22337204e18) {
      goto LABEL_47;
    }
    if (v34 >= 9.22337204e18) {
      goto LABEL_48;
    }
    if (v33 < (uint64_t)v34) {
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_0_56();
    uint64_t result = v35();
    int64_t v14 = v21;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1C671DD4C(void *a1)
{
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = OUTLINED_FUNCTION_18_12();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = OUTLINED_FUNCTION_18_12();
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v5 = v4 + 16;
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v4;
  v6[3] = v3;
  v6[4] = v2;
  aBlock[4] = sub_1C671E264;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C671E0A4;
  aBlock[3] = &block_descriptor_13;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v8 = v2;
  swift_release();
  objc_msgSend(a1, sel_fetchSavedRecordInfoWithCompletion_, v7);
  _Block_release(v7);
  sub_1C68ECFB8();
  OUTLINED_FUNCTION_7_7();
  uint64_t v9 = *(void **)(v3 + 16);
  if (v9)
  {
    id v10 = v9;
    swift_willThrow();
  }
  else
  {

    OUTLINED_FUNCTION_7_7();
    uint64_t v5 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1C671DF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C671DF80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    uint64_t v7 = a1;
  }
  else
  {
    sub_1C68E9BF8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3D50);
    sub_1C671E2B0((unint64_t *)&qword_1EBBF3B98, MEMORY[0x1E4F27990]);
    uint64_t v7 = sub_1C68EC748();
  }
  swift_beginAccess();
  *(void *)(a3 + 16) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = *(void **)(a4 + 16);
  *(void *)(a4 + 16) = a2;
  id v9 = a2;

  return sub_1C68ECFC8();
}

uint64_t sub_1C671E0A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C68E9BF8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF3D50);
    sub_1C671E2B0((unint64_t *)&qword_1EBBF3B98, MEMORY[0x1E4F27990]);
    uint64_t v4 = sub_1C68EC718();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C671E188()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C671E1C4(void *a1)
{
  return sub_1C671D5C8(a1, *(void *)(v1 + 16));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1C671E1E4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C671E21C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C671E264(uint64_t a1, void *a2)
{
  return sub_1C671DF80(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1C671E270()
{
  unint64_t result = qword_1EBBF5D80;
  if (!qword_1EBBF5D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBBF5D80);
  }
  return result;
}

uint64_t sub_1C671E2B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C671E33C(uint64_t a1, void *a2)
{
  return sub_1C671D45C(a1, a2, *(void *)(v2 + 16));
}

void *initializeBufferWithCopyOfBuffer for DESStore(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for DESStore(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for DESStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for DESStore(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DESStore(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DESStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DESStore()
{
  return &type metadata for DESStore;
}

uint64_t DeviceSelectionIntent.memorableParameters()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DeviceSelectionEntity();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1C6638BE8(v1, (SEL *)&selRef_intentType);
  if (!v9)
  {
    if (qword_1EBBF6748 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C68EC478();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBBF7AB0);
    int64_t v26 = sub_1C68EC458();
    os_log_type_t v27 = sub_1C68ECE48();
    if (!os_log_type_enabled(v26, v27)) {
      goto LABEL_14;
    }
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    uint64_t v29 = "DeviceSelectionIntent is missing intentType. skipping.";
    goto LABEL_13;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  uint64_t v12 = sub_1C6638BE8(v1, (SEL *)&selRef_remoteDeviceID);
  if (v13)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v16 = sub_1C6638BE8(v1, (SEL *)&selRef_voiceID);
    uint64_t v39 = v17;
    uint64_t v40 = v16;
    uint64_t v18 = sub_1C6638BE8(v1, (SEL *)&selRef_roomName);
    uint64_t v37 = v19;
    uint64_t v38 = v18;
    id v20 = objc_msgSend(v1, sel_interactionType);
    id v21 = objc_msgSend(v1, sel_requestTime);
    if (v21)
    {
      unint64_t v22 = v21;
      sub_1C68E94F8();

      uint64_t v23 = sub_1C68E9698();
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v23 = sub_1C68E9698();
      uint64_t v24 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v4, v24, 1, v23);
    void *v7 = 0x6553656369766544;
    v7[1] = 0xEF6E6F697463656CLL;
    uint64_t v7[2] = v14;
    v7[3] = v15;
    v7[4] = v10;
    v7[5] = v11;
    uint64_t v32 = v39;
    v7[6] = v40;
    v7[7] = v32;
    uint64_t v33 = v37;
    v7[8] = v38;
    v7[9] = v33;
    v7[10] = v20;
    sub_1C671FA1C((uint64_t)v4, (uint64_t)v7 + *(int *)(v5 + 40));
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF3B48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
    *(void *)(inited + 32) = 0x6553656369766564;
    *(void *)(inited + 40) = 0xEF6E6F697463656CLL;
    *(void *)(inited + 72) = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
    sub_1C671FA84((uint64_t)v7, (uint64_t)boxed_opaque_existential_1);
    uint64_t v36 = sub_1C68EC748();
    sub_1C671FAE8((uint64_t)v7);
    return v36;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBBF6748 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C68EC478();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EBBF7AB0);
  int64_t v26 = sub_1C68EC458();
  os_log_type_t v27 = sub_1C68ECE48();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    uint64_t v29 = "DeviceSelectionIntent is missing remoteDeviceID. skipping.";
LABEL_13:
    _os_log_impl(&dword_1C65AE000, v26, v27, v29, v28, 2u);
    MEMORY[0x1C87A54F0](v28, -1, -1);
  }
LABEL_14:

  return sub_1C68EC748();
}

uint64_t type metadata accessor for DeviceSelectionEntity()
{
  uint64_t result = qword_1EA4083D0;
  if (!qword_1EA4083D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C671E964()
{
  return DeviceSelectionIntent.memorableParameters()();
}

uint64_t sub_1C671E988()
{
  uint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  sub_1C68ED7B8();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C671EA40()
{
  sub_1C68ED398();
  sub_1C68ECA18();
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_57();
  if (*(void *)(v0 + 56))
  {
    sub_1C68ECA18();
    OUTLINED_FUNCTION_0_57();
  }
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72))
  {
    sub_1C68ECA18();
    OUTLINED_FUNCTION_0_57();
  }
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  sub_1C68ED7B8();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_57();
  sub_1C671EC5C();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C671EC5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406728);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C68E9E28();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v75 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406730);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C68E9C88();
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v73 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C68E9698();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = 0;
  unint64_t v82 = 0xE000000000000000;
  uint64_t v23 = type metadata accessor for DeviceSelectionEntity();
  sub_1C6684204(v1 + *(int *)(v23 + 40), (uint64_t)v18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1)
  {
    sub_1C65EA728((uint64_t)v18, &qword_1EBBF43C8);
    return 0;
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v73 = v19;
    v25(v22, v18, v19);
    sub_1C68E9658();
    uint64_t v26 = sub_1C68E9DD8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v26) == 1)
    {
      sub_1C65EA728((uint64_t)v9, &qword_1EA406730);
    }
    else
    {
      sub_1C68E9CA8();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v9, v26);
      uint64_t v27 = v74;
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v15, v13, v10);
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      sub_1C68ECA18();
      sub_1C68ED4C8();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v10);
    }
    sub_1C68E9678();
    uint64_t v28 = v77;
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v77) == 1)
    {
      sub_1C65EA728((uint64_t)v4, &qword_1EA406728);
    }
    else
    {
      uint64_t v30 = v75;
      uint64_t v29 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v4, v28);
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000015;
      unint64_t v80 = 0x80000001C6917470;
      sub_1C672056C();
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
    uint64_t v31 = sub_1C68E9528();
    if ((v32 & 1) == 0)
    {
      uint64_t v33 = v31;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000010;
      unint64_t v80 = 0x80000001C6917450;
      uint64_t v78 = v33;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v34 = sub_1C68E9578();
    if ((v35 & 1) == 0)
    {
      uint64_t v36 = v34;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000011;
      unint64_t v80 = 0x80000001C6917430;
      uint64_t v78 = v36;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v37 = sub_1C68E94C8();
    if ((v38 & 1) == 0)
    {
      uint64_t v39 = v37;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD00000000000001ELL;
      unint64_t v80 = 0x80000001C6917410;
      uint64_t v78 = v39;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v40 = sub_1C68E9608();
    if ((v41 & 1) == 0)
    {
      uint64_t v42 = v40;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000014;
      unint64_t v80 = 0x80000001C69173F0;
      uint64_t v78 = v42;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = sub_1C68E9598();
    if ((v44 & 1) == 0)
    {
      uint64_t v45 = v43;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000012;
      unint64_t v80 = 0x80000001C69173D0;
      uint64_t v78 = v45;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v46 = sub_1C68E9508();
    if ((v47 & 1) == 0)
    {
      uint64_t v48 = v46;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000010;
      unint64_t v80 = 0x80000001C69173B0;
      uint64_t v78 = v48;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v49 = sub_1C68E9558();
    if ((v50 & 1) == 0)
    {
      uint64_t v51 = v49;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000011;
      unint64_t v80 = 0x80000001C6917390;
      uint64_t v78 = v51;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v52 = sub_1C68E95C8();
    if ((v53 & 1) == 0)
    {
      uint64_t v54 = v52;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000013;
      unint64_t v80 = 0x80000001C6917370;
      uint64_t v78 = v54;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v55 = sub_1C68E95E8();
    if ((v56 & 1) == 0)
    {
      uint64_t v57 = v55;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000013;
      unint64_t v80 = 0x80000001C6917350;
      uint64_t v78 = v57;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v58 = sub_1C68E9448();
    if ((v59 & 1) == 0)
    {
      uint64_t v60 = v58;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000017;
      unint64_t v80 = 0x80000001C6917330;
      uint64_t v78 = v60;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v61 = sub_1C68E9468();
    if ((v62 & 1) == 0)
    {
      uint64_t v63 = v61;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000017;
      unint64_t v80 = 0x80000001C6917310;
      uint64_t v78 = v63;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v64 = sub_1C68E9488();
    if ((v65 & 1) == 0)
    {
      uint64_t v66 = v64;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000018;
      unint64_t v80 = 0x80000001C69172F0;
      uint64_t v78 = v66;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v67 = sub_1C68E9628();
    if ((v68 & 1) == 0)
    {
      uint64_t v69 = v67;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000014;
      unint64_t v80 = 0x80000001C69172D0;
      uint64_t v78 = v69;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    uint64_t v70 = sub_1C68E94A8();
    if ((v71 & 1) == 0)
    {
      uint64_t v72 = v70;
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD00000000000001BLL;
      unint64_t v80 = 0x80000001C69172B0;
      uint64_t v78 = v72;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v73);
    return v81;
  }
}

uint64_t sub_1C671FA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C671FA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceSelectionEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C671FAE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeviceSelectionEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1C671FB44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = *(int *)(a3 + 40);
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = (char *)a1 + v10;
    a1[10] = a2[10];
    uint64_t v13 = sub_1C68E9698();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
      memcpy(v12, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v13);
    }
  }
  return v3;
}

uint64_t sub_1C671FCD4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1C68E9698();
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1C671FD90(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a2 + v9;
  uint64_t v11 = (char *)a1 + v9;
  a1[10] = a2[10];
  uint64_t v12 = sub_1C68E9698();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v11, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
  }
  return a1;
}

void *sub_1C671FED0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C68E9698();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C67200D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v9 = sub_1C68E9698();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v8, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
  }
  return a1;
}

void *sub_1C67201C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C68E9698();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1C6720380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C6720394);
}

uint64_t sub_1C6720394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_1C6720420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C6720434);
}

uint64_t sub_1C6720434(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF43C8);
    uint64_t v8 = v5 + *(int *)(a4 + 40);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_1C67204B8()
{
  sub_1C6685C04();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1C672056C()
{
  unint64_t result = qword_1EA4083E0;
  if (!qword_1EA4083E0)
  {
    sub_1C68E9E28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4083E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_57()
{
  return sub_1C68ECA18();
}

uint64_t sub_1C67205D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0410;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  char v13 = 1;
  char v12 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  *(void *)(inited + 56) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &v13, 9, 0, 0, &v12);
  *(_OWORD *)(inited + 64) = xmmword_1C68EFF00;
  *(unsigned char *)(inited + 80) = 0;
  OUTLINED_FUNCTION_0_3();
  uint64_t v1 = OUTLINED_FUNCTION_1_57();
  *(void *)(inited + 88) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(v1, v2, v3, v4, 9, 0, 0, v5);
  *(_OWORD *)(inited + 96) = xmmword_1C68EFF40;
  *(unsigned char *)(inited + 112) = 0;
  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = OUTLINED_FUNCTION_1_57();
  *(void *)(inited + 120) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(v6, v7, v8, v9, 10, 0, 0, v10);
  *(_OWORD *)(inited + 128) = xmmword_1C68EFF80;
  *(unsigned char *)(inited + 144) = 0;
  OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 152) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(8, 0, 0, &v13, 10, 30, 0, &v12);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_1_57()
{
  return 7;
}

uint64_t sub_1C6720750(uint64_t a1)
{
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
    sub_1C65C2B80();
    sub_1C68EC818();
  }
  sub_1C68ECA18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C67207DC()
{
  sub_1C68ECA18();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C6720910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v6 = sub_1C68ECCE8();
  OUTLINED_FUNCTION_4(v3, 1, v6);
  if (v7)
  {
    sub_1C65C117C(v3, &qword_1EBBF5A30);
  }
  else
  {
    sub_1C68ECCD8();
    OUTLINED_FUNCTION_8_0();
    v8();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C68ECC98();
    swift_unknownObjectRelease();
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  return swift_task_create();
}

uint64_t DisambiguationEntityResolution.useCase.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C6720AA4(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t sub_1C6720AB4()
{
  sub_1C68ED398();
  sub_1C68ECA18();
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  __swift_project_boxed_opaque_existential_1(v0 + 12, v0[15]);
  sub_1C68ED7C8();
  sub_1C68ECA18();
  uint64_t v1 = v0[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C6720750(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  return 0;
}

void DisambiguationEntityResolution.__allocating_init(useCase:)()
{
  OUTLINED_FUNCTION_15_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083E8);
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_4_14();
  uint64_t v50 = type metadata accessor for LearnedDisambiguationPersistentStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_37_9();
  uint64_t v12 = type metadata accessor for PervasiveConfiguration();
  uint64_t v13 = OUTLINED_FUNCTION_3(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_20();
  uint64_t v48 = v14;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v43 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v43 - v19;
  sub_1C67DBF60((uint64_t)v55);
  sub_1C67DA218((uint64_t)v55, (uint64_t)v20);
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C68EC478();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EA442868);
  sub_1C6726188((uint64_t)v20, (uint64_t)v18);
  uint64_t v49 = v22;
  uint64_t v23 = sub_1C68EC458();
  os_log_type_t v24 = sub_1C68ECE48();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = OUTLINED_FUNCTION_30();
    uint64_t v46 = v1;
    uint64_t v26 = (uint8_t *)v25;
    uint64_t v27 = OUTLINED_FUNCTION_39();
    uint64_t v44 = v0;
    v54[0] = v27;
    uint64_t v47 = v5;
    uint64_t v45 = v20;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v28 = sub_1C67DAAC0();
    sub_1C65B4078(v28, v29, (uint64_t)v54, v30, v31, v32, v33, v34, v43, v44, (uint64_t)v45, v46, v47, v48, v49, v50, v51, *((uint64_t *)&v51 + 1), v52,
      v53);
    *(void *)&long long v51 = v35;
    uint64_t v20 = v45;
    uint64_t v5 = v47;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    sub_1C67260CC((uint64_t)v18, (void (*)(void))type metadata accessor for PervasiveConfiguration);
    _os_log_impl(&dword_1C65AE000, v23, v24, "DisambiguationEntityResolution: configured %s", v26, 0xCu);
    swift_arrayDestroy();
    uint64_t v0 = v44;
    OUTLINED_FUNCTION_0();
    uint64_t v1 = v46;
    OUTLINED_FUNCTION_0();
  }
  else
  {
    sub_1C67260CC((uint64_t)v18, (void (*)(void))type metadata accessor for PervasiveConfiguration);
  }

  swift_bridgeObjectRetain();
  sub_1C677740C(v5, v3, v0);
  OUTLINED_FUNCTION_4(v0, 1, v50);
  if (v36)
  {
    swift_bridgeObjectRelease();
    sub_1C65C117C(v0, &qword_1EA4083E8);
    uint64_t v37 = sub_1C68EC458();
    os_log_type_t v38 = sub_1C68ECE58();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_17();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_1C65AE000, v37, v38, "DisambiguationEntityResolution: Could not be created", v39, 2u);
      OUTLINED_FUNCTION_0();
    }

    sub_1C67260CC((uint64_t)v20, (void (*)(void))type metadata accessor for PervasiveConfiguration);
  }
  else
  {
    sub_1C67269B0(v0, v1);
    sub_1C67DA610((uint64_t *)&v51);
    if (v53)
    {
      sub_1C65C490C(&v51, (uint64_t)v54);
      sub_1C65C0368((uint64_t)v54, (uint64_t)&v51);
      uint64_t v40 = type metadata accessor for LoggingDataEmitter();
      sub_1C679BE30();
      OUTLINED_FUNCTION_28_0();
      type metadata accessor for ExperimentationTriggerLogger();
      uint64_t v41 = swift_allocObject();
      uint64_t v42 = v48;
      sub_1C6726188((uint64_t)v20, v48);
      sub_1C6726188(v1, (uint64_t)v11);
      sub_1C6725AC8(v5, v3, v42, (uint64_t)v11, (uint64_t)&v51, v40, v41);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      sub_1C67260CC(v1, (void (*)(void))type metadata accessor for LearnedDisambiguationPersistentStorage);
      sub_1C67260CC((uint64_t)v20, (void (*)(void))type metadata accessor for PervasiveConfiguration);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C67260CC(v1, (void (*)(void))type metadata accessor for LearnedDisambiguationPersistentStorage);
      sub_1C67260CC((uint64_t)v20, (void (*)(void))type metadata accessor for PervasiveConfiguration);
      sub_1C65C117C((uint64_t)&v51, &qword_1EA4083F0);
    }
  }
  OUTLINED_FUNCTION_10();
}

void sub_1C672111C()
{
  OUTLINED_FUNCTION_15_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083F8);
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1();
  uint64_t v135 = v8;
  sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v132 = v10;
  uint64_t v133 = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_1();
  uint64_t v131 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A30);
  uint64_t v13 = OUTLINED_FUNCTION_3(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1();
  uint64_t v139 = v14;
  type metadata accessor for LearningResult();
  OUTLINED_FUNCTION_0_1();
  uint64_t v136 = v15;
  uint64_t v137 = v16;
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v15);
  uint64_t v138 = (uint64_t)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v122 - v20;
  uint64_t v22 = sub_1C68EA4A8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_1_15();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408400);
  uint64_t v27 = OUTLINED_FUNCTION_3(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_20();
  uint64_t v134 = v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (uint64_t *)((char *)&v122 - v30);
  uint64_t v32 = type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_0_1();
  uint64_t v128 = v33;
  uint64_t v35 = MEMORY[0x1F4188790](v34);
  uint64_t v129 = (uint64_t)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v130 = (uint64_t *)((char *)&v122 - v38);
  uint64_t v127 = v39;
  MEMORY[0x1F4188790](v37);
  uint64_t v40 = *v3;
  uint64_t v41 = v1[10];
  uint64_t v42 = v1[3];
  uint64_t v140 = (void *)v1[2];
  uint64_t v141 = (uint64_t (*)())v42;
  uint64_t v142 = (uint64_t)&v122 - v43;
  if (sub_1C68D9CC0((uint64_t)v140, v42, v41))
  {
    uint64_t v125 = v21;
    uint64_t v126 = (uint64_t *)v5;
    __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
    unint64_t v123 = v40;
    sub_1C6773338(v40);
    swift_bridgeObjectRetain();
    sub_1C68EA4C8();
    int v44 = sub_1C68EA498();
    uint64_t v45 = *(void (**)(void))(v24 + 8);
    uint64_t v124 = v22;
    uint64_t v46 = v45;
    OUTLINED_FUNCTION_44_9();
    v47();
    swift_bridgeObjectRelease();
    sub_1C677833C(v44, v31);
    OUTLINED_FUNCTION_4((uint64_t)v31, 1, v32);
    if (v48)
    {
      sub_1C65C117C((uint64_t)v31, &qword_1EA408400);
      if (qword_1EA4057A0 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1C68EC478();
      __swift_project_value_buffer(v49, (uint64_t)qword_1EA442868);
      swift_retain();
      uint64_t v50 = (void *)sub_1C68EC458();
      os_log_type_t v51 = sub_1C68ECE48();
      if (OUTLINED_FUNCTION_7_0(v51))
      {
        uint64_t v52 = (_DWORD *)OUTLINED_FUNCTION_30();
        v143[0] = OUTLINED_FUNCTION_39();
        *uint64_t v52 = 136315138;
        uint64_t v53 = (uint64_t)v141;
        swift_bridgeObjectRetain();
        sub_1C65B4078((uint64_t)v140, v53, (uint64_t)v143, v54, v55, v56, v57, v58, v122, v123, v124, (uint64_t)v125, (uint64_t)v126, v127, v128, v129, (uint64_t)v130, v131, v132,
          v133);
        OUTLINED_FUNCTION_33_13(v59);
        sub_1C68ED0C8();
        swift_release();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_26_17(&dword_1C65AE000, v60, v61, "DisambiguationEntityResolution: No history found for %s, bypassing pervasive");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_0();
      }
      else
      {

        swift_release();
      }
    }
    else
    {
      uint64_t v75 = v142;
      sub_1C67269B0((uint64_t)v31, v142);
      char v76 = sub_1C672226C();
      if ((v76 & 1) == 0)
      {
        uint64_t v81 = v32;
        sub_1C6773338(v123);
        swift_bridgeObjectRetain();
        sub_1C68EA4C8();
        int v82 = sub_1C68EA498();
        OUTLINED_FUNCTION_44_9();
        v46();
        swift_bridgeObjectRelease();
        uint64_t v83 = (uint64_t)v125;
        sub_1C672259C(v82);
        uint64_t v84 = sub_1C68ECCE8();
        uint64_t v85 = v139;
        __swift_storeEnumTagSinglePayload(v139, 1, 1, v84);
        uint64_t v86 = v138;
        sub_1C6726188(v83, v138);
        unint64_t v87 = (*(unsigned __int8 *)(v137 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
        uint64_t v88 = (void *)swift_allocObject();
        v88[2] = 0;
        void v88[3] = 0;
        v88[4] = v1;
        sub_1C67269B0(v86, (uint64_t)v88 + v87);
        swift_retain();
        sub_1C6720910(v85, (uint64_t)&unk_1EA408410, (uint64_t)v88);
        swift_release();
        sub_1C67242FC(2uLL);
        if (__swift_project_boxed_opaque_existential_1(v1 + 17, v1[20])[3])
        {
          if (qword_1EA4057A0 != -1) {
            swift_once();
          }
          uint64_t v89 = sub_1C68EC478();
          uint64_t v90 = OUTLINED_FUNCTION_5_5(v89, (uint64_t)qword_1EA442868);
          os_log_type_t v91 = sub_1C68ECE48();
          if (os_log_type_enabled(v90, v91))
          {
            uint64_t v92 = (_WORD *)OUTLINED_FUNCTION_17();
            OUTLINED_FUNCTION_23(v92);
            OUTLINED_FUNCTION_41_13(&dword_1C65AE000, v90, v91, "DisambiguationEntityResolution: Forcing disambiguation");
            OUTLINED_FUNCTION_0();
          }

          uint64_t v93 = v135;
          sub_1C6726188(v83, v135);
          __swift_storeEnumTagSinglePayload(v93, 0, 1, v136);
          uint64_t v94 = (uint64_t)v1 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
          swift_beginAccess();
          sub_1C6726120(v93, v94);
          swift_endAccess();
          uint64_t v95 = v83;
        }
        else
        {
          uint64_t v96 = v134;
          sub_1C65BB124(v83, v134, &qword_1EA408400);
          uint64_t v97 = (int *)v81;
          OUTLINED_FUNCTION_4(v96, 1, v81);
          if (!v48)
          {
            uint64_t v141 = type metadata accessor for LearnedDisambiguation;
            uint64_t v105 = v126;
            sub_1C67269B0(v96, (uint64_t)v126);
            uint64_t v107 = *v105;
            uint64_t v106 = v105[1];
            swift_bridgeObjectRetain();
            sub_1C68E9BE8();
            uint64_t v108 = sub_1C68E9B98();
            uint64_t v140 = v1;
            uint64_t v110 = v109;
            OUTLINED_FUNCTION_8_0();
            v111();
            uint64_t v112 = v130;
            sub_1C68E9B68();
            uint64_t v113 = *(uint64_t *)((char *)v105 + v97[7]);
            int v114 = *(_DWORD *)((char *)v105 + v97[8]);
            *uint64_t v112 = v107;
            v112[1] = v106;
            v112[2] = v108;
            v112[3] = v110;
            *(void *)((char *)v112 + v97[7]) = v113;
            *(_DWORD *)((char *)v112 + v97[8]) = v114;
            uint64_t v115 = (void *)((char *)v112 + v97[9]);
            *uint64_t v115 = 0;
            v115[1] = 0xE000000000000000;
            uint64_t v116 = (void *)((char *)v112 + v97[10]);
            v116[1] = -1;
            v116[2] = -1;
            *uint64_t v116 = -1;
            uint64_t v117 = v139;
            __swift_storeEnumTagSinglePayload(v139, 1, 1, v84);
            uint64_t v118 = v129;
            sub_1C6726188((uint64_t)v112, v129);
            unint64_t v119 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
            unint64_t v120 = (v127 + v119 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v121 = swift_allocObject();
            *(void *)(v121 + 16) = 0;
            *(void *)(v121 + 24) = 0;
            sub_1C67269B0(v118, v121 + v119);
            *(void *)(v121 + v120) = v140;
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1C6720910(v117, (uint64_t)&unk_1EA408428, v121);
            swift_release();
            sub_1C67260CC((uint64_t)v112, (void (*)(void))type metadata accessor for LearnedDisambiguation);
            sub_1C67260CC((uint64_t)v125, (void (*)(void))type metadata accessor for LearningResult);
            sub_1C67260CC(v142, (void (*)(void))type metadata accessor for LearnedDisambiguation);
            uint64_t v77 = (uint64_t)v105;
            uint64_t v78 = 0;
            uint64_t v79 = 1;
            uint64_t v80 = (uint64_t)v97;
            goto LABEL_34;
          }
          sub_1C65C117C(v96, &qword_1EA408400);
          if (qword_1EA4057A0 != -1) {
            swift_once();
          }
          uint64_t v98 = sub_1C68EC478();
          uint64_t v99 = OUTLINED_FUNCTION_5_5(v98, (uint64_t)qword_1EA442868);
          os_log_type_t v100 = sub_1C68ECE48();
          if (os_log_type_enabled(v99, v100))
          {
            int v101 = (_WORD *)OUTLINED_FUNCTION_17();
            OUTLINED_FUNCTION_23(v101);
            OUTLINED_FUNCTION_41_13(&dword_1C65AE000, v99, v100, "DisambiguationEntityResolution: No confident prediction");
            OUTLINED_FUNCTION_0();
          }

          uint64_t v102 = v136;
          if (*(unsigned char *)(v83 + *(int *)(v136 + 24)) == 1)
          {
            uint64_t v103 = v135;
            sub_1C6726188(v83, v135);
            __swift_storeEnumTagSinglePayload(v103, 0, 1, v102);
            uint64_t v104 = (uint64_t)v1 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
            swift_beginAccess();
            sub_1C6726120(v103, v104);
            swift_endAccess();
          }
          uint64_t v95 = v83;
        }
        sub_1C67260CC(v95, (void (*)(void))type metadata accessor for LearningResult);
        sub_1C67260CC(v142, (void (*)(void))type metadata accessor for LearnedDisambiguation);
        OUTLINED_FUNCTION_39_7();
        uint64_t v80 = v81;
        goto LABEL_34;
      }
      sub_1C67260CC(v75, (void (*)(void))type metadata accessor for LearnedDisambiguation);
    }
    uint64_t v77 = (uint64_t)v126;
    uint64_t v78 = 1;
    uint64_t v79 = 1;
    uint64_t v80 = v32;
  }
  else
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_1C68EC478();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EA442868);
    swift_retain();
    uint64_t v63 = (void *)sub_1C68EC458();
    os_log_type_t v64 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_7_0(v64))
    {
      char v65 = (_DWORD *)OUTLINED_FUNCTION_30();
      v143[0] = OUTLINED_FUNCTION_39();
      *char v65 = 136315138;
      uint64_t v66 = (uint64_t)v141;
      swift_bridgeObjectRetain();
      sub_1C65B4078((uint64_t)v140, v66, (uint64_t)v143, v67, v68, v69, v70, v71, v122, v123, v124, (uint64_t)v125, (uint64_t)v126, v127, v128, v129, (uint64_t)v130, v131, v132,
        v133);
      OUTLINED_FUNCTION_33_13(v72);
      sub_1C68ED0C8();
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26_17(&dword_1C65AE000, v73, v74, "DisambiguationEntityResolution: Unsupported use case: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }
    else
    {

      swift_release();
    }
    OUTLINED_FUNCTION_39_7();
  }
LABEL_34:
  __swift_storeEnumTagSinglePayload(v77, v78, v79, v80);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C6721D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C6721D30, 0, 0);
}

uint64_t sub_1C6721D30()
{
  OUTLINED_FUNCTION_27_12();
  sub_1C6723BF8(*(void *)(v0 + 24));
  OUTLINED_FUNCTION_18_21();
  return v1();
}

uint64_t sub_1C6721D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = sub_1C68EBDA8();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  type metadata accessor for LearnedDisambiguation();
  v5[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C6721E74, 0, 0);
}

uint64_t sub_1C6721E74()
{
  uint64_t v30 = v0;
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[8];
  uint64_t v3 = sub_1C68EC478();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EA442868);
  sub_1C6726188(v1, v2);
  uint64_t v5 = sub_1C68EC458();
  os_log_type_t v6 = sub_1C68ECE48();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[8];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_30();
    v29[0] = OUTLINED_FUNCTION_39();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = LearnedDisambiguation.description.getter();
    sub_1C65B4078(v10, v11, (uint64_t)v29, v12, v13, v14, v15, v16, v27, (unint64_t)(v9 + 4), (uint64_t)(v0 + 2), v4, v29[0], v29[1], v29[2], v29[3], v29[4], v29[5], v29[6],
      v29[7]);
    *uint64_t v28 = v17;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    sub_1C67260CC(v8, (void (*)(void))type metadata accessor for LearnedDisambiguation);
    _os_log_impl(&dword_1C65AE000, v5, v6, "DisambiguationEntityResolution: Storing current learning to memory now: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();
  }
  else
  {
    sub_1C67260CC(v0[8], (void (*)(void))type metadata accessor for LearnedDisambiguation);
  }

  uint64_t v18 = sub_1C68EC458();
  os_log_type_t v19 = sub_1C68ECE48();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_23(v20);
    OUTLINED_FUNCTION_41_13(&dword_1C65AE000, v18, v19, "DisambiguationEntityResolution: Saving as an outgoing interaction");
    OUTLINED_FUNCTION_0();
  }

  uint64_t v21 = OUTLINED_FUNCTION_31_12();
  v22(v21);
  uint64_t v23 = (void *)swift_task_alloc();
  v0[9] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1C672212C;
  uint64_t v24 = v0[7];
  uint64_t v25 = v0[3];
  return sub_1C6723FB8(v25, v24);
}

uint64_t sub_1C672212C()
{
  OUTLINED_FUNCTION_36_13();
  OUTLINED_FUNCTION_0_4();
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[5];
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_6_43();
  *os_log_type_t v6 = v5;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_21();
  return v7();
}

uint64_t sub_1C672226C()
{
  v24[3] = &type metadata for PERFeatures;
  v24[4] = sub_1C6726964();
  os_log_type_t v1 = sub_1C68EA508();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if ((v1 & 1) == 0)
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C68EC478();
    uint64_t v4 = OUTLINED_FUNCTION_5_5(v8, (uint64_t)qword_1EA442868);
    os_log_type_t v9 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_17_27(v9))
    {
      uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_13_27(v10);
      BOOL v7 = "DisambiguationEntityResolution: restatement is disabled";
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  uint64_t v2 = (double *)__swift_project_boxed_opaque_existential_1((void *)(v0 + 136), *(void *)(v0 + 160));
  if (((_BYTE)v2[7] & 1) == 0)
  {
    double v13 = v2[6];
    type metadata accessor for LearnedDisambiguation();
    sub_1C68E9AF8();
    if (qword_1EA4057A0 != -1)
    {
      double v23 = v14;
      swift_once();
      double v14 = v23;
    }
    double v15 = -v14;
    uint64_t v16 = sub_1C68EC478();
    uint64_t v17 = OUTLINED_FUNCTION_5_5(v16, (uint64_t)qword_1EA442868);
    os_log_type_t v18 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_17_27(v18))
    {
      *(_DWORD *)OUTLINED_FUNCTION_30() = 134217984;
      *(double *)uint64_t v24 = v15;
      OUTLINED_FUNCTION_34_8();
      OUTLINED_FUNCTION_115(&dword_1C65AE000, v17, v1, "DisambiguationEntityResolution: last occurrence of this disambiguation was %f seconds ago");
      OUTLINED_FUNCTION_0();
    }

    os_log_type_t v19 = sub_1C68EC458();
    os_log_type_t v20 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_17_27(v20))
    {
      *(_DWORD *)OUTLINED_FUNCTION_30() = 134217984;
      *(double *)uint64_t v24 = v13;
      OUTLINED_FUNCTION_34_8();
      OUTLINED_FUNCTION_115(&dword_1C65AE000, v19, v1, "DisambiguationEntityResolution: restatement window is set to %f seconds");
      OUTLINED_FUNCTION_0();
    }

    if (v13 <= v15) {
      return 0;
    }
    uint64_t v4 = sub_1C68EC458();
    os_log_type_t v21 = sub_1C68ECE48();
    if (!OUTLINED_FUNCTION_17_27(v21))
    {
      uint64_t v11 = 1;
      goto LABEL_14;
    }
    uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_30();
    *(_DWORD *)uint64_t v22 = 134217984;
    *(double *)uint64_t v24 = v15;
    OUTLINED_FUNCTION_34_8();
    _os_log_impl(&dword_1C65AE000, v4, v1, "DisambiguationEntityResolution: Restatement detected because last occurrence of this disambiguation was %f seconds ago ", v22, 0xCu);
    uint64_t v11 = 1;
    goto LABEL_12;
  }
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C68EC478();
  uint64_t v4 = OUTLINED_FUNCTION_5_5(v3, (uint64_t)qword_1EA442868);
  os_log_type_t v5 = sub_1C68ECE48();
  if (!OUTLINED_FUNCTION_17_27(v5)) {
    goto LABEL_13;
  }
  os_log_type_t v6 = (_WORD *)OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_13_27(v6);
  BOOL v7 = "DisambiguationEntityResolution: bypassing the restatement check";
LABEL_11:
  _os_log_impl(&dword_1C65AE000, v4, v1, v7, (uint8_t *)v0, 2u);
  uint64_t v11 = 0;
LABEL_12:
  OUTLINED_FUNCTION_0();
LABEL_14:

  return v11;
}

uint64_t sub_1C672259C(int a1)
{
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v3);
  __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
  uint64_t v5 = sub_1C6777A88(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v3, v4);

  return swift_bridgeObjectRelease();
}

void sub_1C6722638(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = v1;
    uint64_t v4 = a1[1];
    uint64_t v5 = qword_1EA4057A0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C68EC478();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EA442868);
    sub_1C67262AC(v2);
    sub_1C67262AC(v2);
    sub_1C67262AC(v2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    BOOL v7 = sub_1C68EC458();
    os_log_type_t v8 = sub_1C68ECE48();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      os_log_t osloga = (os_log_t)swift_slowAlloc();
      uint64_t v42 = (uint64_t)osloga;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      uint64_t v12 = MEMORY[0x1C87A3B40](v10, MEMORY[0x1E4FBB1A0]);
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      sub_1C65B4078(v12, v14, (uint64_t)&v42, v15, v16, v17, v18, v19, (uint64_t)osloga, v40, v42, v43, v44, v45, v46, v47, v48, v49, v50,
        v51);
      unint64_t v41 = v20;
      sub_1C68ED0C8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_28_13();
      OUTLINED_FUNCTION_28_13();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v22 = MEMORY[0x1C87A3B40](v21, v11);
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      sub_1C65B4078(v22, v24, (uint64_t)&v42, v25, v26, v27, v28, v29, (uint64_t)oslogb, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50,
        v51);
      sub_1C68ED0C8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_28_13();
      OUTLINED_FUNCTION_28_13();
      _os_log_impl(&dword_1C65AE000, v7, v8, "DisambiguationEntityResolution: PervasiveEntityResolution extracted choices (%s)\n and associated identifiers: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }
    else
    {
      OUTLINED_FUNCTION_28_13();
      OUTLINED_FUNCTION_28_13();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v34 = *(void *)(v3 + 16);
    uint64_t v35 = *(void *)(v3 + 24);
    uint64_t v42 = v2;
    uint64_t v43 = v4;
    type metadata accessor for OngoingLearning();
    uint64_t v36 = swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1C67247E4(v34, v35, &v42);
    sub_1C6720AA4(v36);
  }
  else
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C68EC478();
    oslog = OUTLINED_FUNCTION_5_5(v30, (uint64_t)qword_1EA442868);
    os_log_type_t v31 = sub_1C68ECE58();
    if (os_log_type_enabled(oslog, v31))
    {
      uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_13_27(v32);
      OUTLINED_FUNCTION_9_36(&dword_1C65AE000, oslog, v33, "DisambiguationEntityResolution: PervasiveEntityResolution no choices extracted");
      OUTLINED_FUNCTION_0();
    }
  }
}

void sub_1C67229B4()
{
  OUTLINED_FUNCTION_15_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A30);
  uint64_t v5 = OUTLINED_FUNCTION_3(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4_14();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408400);
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_15();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_0_1();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = *((void *)v3 + 4);
  if (!v21)
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C68EC478();
    uint64_t v43 = OUTLINED_FUNCTION_5_5(v25, (uint64_t)qword_1EA442868);
    os_log_type_t v26 = sub_1C68ECE58();
    if (!os_log_type_enabled(v43, v26)) {
      goto LABEL_15;
    }
    uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_13_27(v27);
    uint64_t v29 = "DisambiguationEntityResolution: PervasiveEntityResolution no user select found";
    goto LABEL_14;
  }
  if (*(void *)(v0 + 32))
  {
    uint64_t v23 = *((void *)v3 + 2);
    uint64_t v22 = *((void *)v3 + 3);
    long long v44 = *v3;
    char v45 = v23;
    uint64_t v46 = v22;
    uint64_t v47 = v21;
    swift_retain();
    sub_1C6724A4C();
    OUTLINED_FUNCTION_4(v10, 1, v11);
    if (v24)
    {
      swift_release();
      sub_1C65C117C(v10, &qword_1EA408400);
    }
    else
    {
      sub_1C67269B0(v10, (uint64_t)v20);
      sub_1C68ECCE8();
      OUTLINED_FUNCTION_39_7();
      __swift_storeEnumTagSinglePayload(v35, v36, v37, v38);
      sub_1C6726188((uint64_t)v20, (uint64_t)v18);
      unint64_t v39 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      unint64_t v40 = (v15 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = 0;
      *(void *)(v41 + 24) = 0;
      sub_1C67269B0((uint64_t)v18, v41 + v39);
      *(void *)(v41 + v40) = v0;
      swift_retain();
      sub_1C6720910(v1, (uint64_t)&unk_1EA408438, v41);
      swift_release();
      swift_release();
      sub_1C67260CC((uint64_t)v20, (void (*)(void))type metadata accessor for LearnedDisambiguation);
    }
    OUTLINED_FUNCTION_10();
    return;
  }
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C68EC478();
  uint64_t v43 = OUTLINED_FUNCTION_5_5(v30, (uint64_t)qword_1EA442868);
  os_log_type_t v31 = sub_1C68ECE58();
  if (os_log_type_enabled(v43, v31))
  {
    uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_13_27(v32);
    uint64_t v29 = "DisambiguationEntityResolution: PervasiveEntityResolution got the user selection but did not capture the choices";
LABEL_14:
    OUTLINED_FUNCTION_9_36(&dword_1C65AE000, v43, v28, v29);
    OUTLINED_FUNCTION_0();
  }
LABEL_15:
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C6722D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_1C68EBDA8();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v7 = sub_1C68E9BF8();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for LearnedDisambiguation();
  v5[18] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[19] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1C6722ED4;
  return sub_1C677218C((uint64_t)(v5 + 2));
}

uint64_t sub_1C6722ED4()
{
  OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_0_4();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_6_43();
  void *v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C6722FA0, 0, 0);
}

uint64_t sub_1C6722FA0()
{
  uint64_t v55 = v0;
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C68EC478();
  uint64_t v53 = __swift_project_value_buffer(v4, (uint64_t)qword_1EA442868);
  uint64_t v5 = (void *)sub_1C68EC458();
  os_log_type_t v6 = sub_1C68ECE48();
  uint64_t v51 = v2;
  uint64_t v52 = v1;
  uint64_t v50 = v3;
  if (OUTLINED_FUNCTION_7_0(v6))
  {
    uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_30();
    uint64_t v8 = OUTLINED_FUNCTION_39();
    _DWORD *v7 = 136315138;
    v54[0] = v8;
    v0[5] = v1;
    v0[6] = v2;
    v0[7] = v3;
    uint64_t v9 = sub_1C68EC8F8();
    sub_1C65B4078(v9, v10, (uint64_t)v54, v11, v12, v13, v14, v15, v42, v43, v45, v47, (uint64_t)(v0 + 5), (uint64_t)(v0 + 8), v3, v2, v1, v53, v54[0],
      v54[1]);
    v0[8] = v16;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_17(&dword_1C65AE000, v17, v18, "Collected signal values: %s");
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();
  }

  unint64_t v20 = (int *)v0[17];
  uint64_t v19 = (void *)v0[18];
  uint64_t v22 = v0[15];
  uint64_t v21 = v0[16];
  uint64_t v23 = (uint64_t *)v0[9];
  uint64_t v24 = v23[1];
  uint64_t v44 = v0[14];
  uint64_t v46 = *v23;
  uint64_t v25 = *(uint64_t *)((char *)v23 + v20[7]);
  int v49 = *(_DWORD *)((char *)v23 + v20[8]);
  os_log_type_t v26 = (uint64_t *)((char *)v23 + v20[9]);
  uint64_t v27 = v26[1];
  uint64_t v48 = *v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C68E9BE8();
  uint64_t v28 = sub_1C68E9B98();
  uint64_t v30 = v29;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v44);
  sub_1C68E9B68();
  *uint64_t v19 = v46;
  v19[1] = v24;
  void v19[2] = v28;
  v19[3] = v30;
  *(void *)((char *)v19 + v20[7]) = v25;
  *(_DWORD *)((char *)v19 + v20[8]) = v49;
  os_log_type_t v31 = (void *)((char *)v19 + v20[9]);
  *os_log_type_t v31 = v48;
  v31[1] = v27;
  uint64_t v32 = (void *)((char *)v19 + v20[10]);
  *uint64_t v32 = v52;
  v32[1] = v51;
  v32[2] = v50;
  sub_1C6723494(v19);
  sub_1C6723D3C();
  uint64_t v33 = sub_1C68EC458();
  os_log_type_t v34 = sub_1C68ECE48();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (_WORD *)OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_23(v35);
    OUTLINED_FUNCTION_41_13(&dword_1C65AE000, v33, v34, "DisambiguationEntityResolution: Saving as an incoming interaction");
    OUTLINED_FUNCTION_0();
  }

  uint64_t v36 = OUTLINED_FUNCTION_31_12();
  v37(v36);
  uint64_t v38 = (void *)swift_task_alloc();
  v0[20] = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_1C67232D8;
  uint64_t v39 = v0[18];
  uint64_t v40 = v0[13];
  return sub_1C6723FB8(v39, v40);
}

uint64_t sub_1C67232D8()
{
  OUTLINED_FUNCTION_36_13();
  OUTLINED_FUNCTION_0_4();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_6_43();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_44_9();
  v3();
  return MEMORY[0x1F4188298](sub_1C67233FC, 0, 0);
}

uint64_t sub_1C67233FC()
{
  OUTLINED_FUNCTION_36_13();
  sub_1C67260CC(*(void *)(v0 + 144), (void (*)(void))type metadata accessor for LearnedDisambiguation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_21();
  return v1();
}

#error "1C67236B4: call analysis failed (funcsize=440)"

void sub_1C6723BF8(uint64_t a1)
{
  if (qword_1EA4057E8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_35_10();
  if (v3)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 22, v1[25]);
    uint64_t v4 = __swift_project_boxed_opaque_existential_1(v1 + 17, v1[20]);
    sub_1C679DBBC(a1, *((unsigned char *)v4 + 24));
  }
  else
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C68EC478();
    oslog = OUTLINED_FUNCTION_5_5(v5, (uint64_t)qword_1EA442868);
    os_log_type_t v6 = sub_1C68ECE48();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_13_27(v7);
      OUTLINED_FUNCTION_9_36(&dword_1C65AE000, oslog, v8, "DisambiguationEntityResolution: Skipping model triggered emission because D&U not allowed.");
      OUTLINED_FUNCTION_0();
    }
  }
}

void sub_1C6723D3C()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083F8);
  uint64_t v3 = OUTLINED_FUNCTION_3(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1_15();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for LearningResult();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_4_14();
  if (qword_1EA4057E8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_35_10();
  if (v9)
  {
    uint64_t v10 = v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
    swift_beginAccess();
    sub_1C65BB124(v10, v6, &qword_1EA4083F8);
    OUTLINED_FUNCTION_4(v6, 1, v7);
    if (v9)
    {
      sub_1C65C117C(v6, &qword_1EA4083F8);
    }
    else
    {
      sub_1C67269B0(v6, v1);
      if (*(void *)(v1 + *(int *)(v7 + 20) + 8))
      {
        swift_bridgeObjectRetain();
        sub_1C67242FC(3uLL);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), *(void *)(v0 + 200));
        sub_1C679D878();
        swift_bridgeObjectRelease();
      }
      sub_1C67260CC(v1, (void (*)(void))type metadata accessor for LearningResult);
    }
  }
  else
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C68EC478();
    uint64_t v15 = OUTLINED_FUNCTION_5_5(v11, (uint64_t)qword_1EA442868);
    os_log_type_t v12 = sub_1C68ECE48();
    if (os_log_type_enabled(v15, v12))
    {
      uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_13_27(v13);
      OUTLINED_FUNCTION_9_36(&dword_1C65AE000, v15, v14, "DisambiguationEntityResolution: Skipping model evaluation emission because D&U not allowed.");
      OUTLINED_FUNCTION_0();
    }
  }
}

uint64_t sub_1C6723FB8(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C6723FDC, 0, 0);
}

uint64_t sub_1C6723FDC()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  if (sub_1C68D9CC0(v3, v2, v1[10]))
  {
    __swift_project_boxed_opaque_existential_1((void *)(v0[5] + 40), *(void *)(v0[5] + 64));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C672423C;
    uint64_t v6 = v0[3];
    uint64_t v5 = v0[4];
    return sub_1C6778ED4(v6, v5);
  }
  else
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C68EC478();
    os_log_type_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EA442868);
    swift_retain();
    uint64_t v10 = sub_1C68EC458();
    os_log_type_t v11 = sub_1C68ECE48();
    if (OUTLINED_FUNCTION_7_0(v11))
    {
      os_log_type_t v12 = (uint8_t *)OUTLINED_FUNCTION_30();
      v21[0] = OUTLINED_FUNCTION_39();
      *(_DWORD *)os_log_type_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_1C65B4078(v3, v2, (uint64_t)v21, v13, v14, v15, v16, v17, v20, (unint64_t)(v0 + 2), v21[0], v21[1], v21[2], v21[3], v21[4], v21[5], v21[6], v21[7], v21[8],
        (uint64_t)v22);
      v0[2] = v18;
      sub_1C68ED0C8();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_1C65AE000, v10, v9, "Unsupported use case %s, not storing.", v12, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }
    else
    {
      swift_release();
    }

    OUTLINED_FUNCTION_18_21();
    return v19();
  }
}

uint64_t sub_1C672423C()
{
  OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_0_4();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_6_43();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_21();
  return v3();
}

void sub_1C67242FC(unint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EA4057E8 != -1) {
    swift_once();
  }
  if (byte_1EA4428C8 == 1)
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C68EC478();
    uint64_t v5 = OUTLINED_FUNCTION_5_5(v4, (uint64_t)qword_1EA442868);
    os_log_type_t v6 = sub_1C68ECE48();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_30();
      v26[0] = OUTLINED_FUNCTION_39();
      _DWORD *v7 = 136315138;
      unint64_t v13 = 0x80000001C6917690;
      switch((char)a1)
      {
        case 1:
          uint64_t v14 = "23B24C08-F87F-4992-A728-FDC9D43DEDB6";
          goto LABEL_18;
        case 2:
          uint64_t v14 = "28AD56FC-E9DA-11ED-A05B-0242AC120003";
          goto LABEL_18;
        case 3:
          uint64_t v14 = "920A9A12-BBD0-42FB-A11C-7B1AE2C709B4";
LABEL_18:
          unint64_t v13 = (unint64_t)(v14 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      sub_1C65B4078(0xD000000000000024, v13, (uint64_t)v26, v8, v9, v10, v11, v12, v22, (unint64_t)oslog, v25, v26[0], v26[1], v26[2], v27, v28, v29, v30, v31,
        v32);
      sub_1C68ED0C8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_115(&dword_1C65AE000, v5, v6, "DisambiguationEntityResolution: Emitting Triggered Logging for: %s");
      OUTLINED_FUNCTION_52_3();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
    }

    sub_1C65BB124(v2 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_triggerLogger, (uint64_t)v26, &qword_1EA406870);
    if (v27)
    {
      __swift_project_boxed_opaque_existential_1(v26, v27);
      sub_1C68EBEB8();
      if (sub_1C68EBE98())
      {
        sub_1C68EBE78();
        swift_release();
        uint64_t v19 = sub_1C68EC1B8();
        uint64_t v21 = v20;
        swift_release();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v21 = 0;
      }
      sub_1C65C597C(a1, v19, v21);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    else
    {
      sub_1C65C117C((uint64_t)v26, &qword_1EA406870);
    }
  }
  else
  {
    if (qword_1EA4057A0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C68EC478();
    os_log_t osloga = OUTLINED_FUNCTION_5_5(v15, (uint64_t)qword_1EA442868);
    os_log_type_t v16 = sub_1C68ECE48();
    if (os_log_type_enabled(osloga, v16))
    {
      uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_13_27(v17);
      OUTLINED_FUNCTION_9_36(&dword_1C65AE000, osloga, v18, "DisambiguationEntityResolution: Skipping trigger logging because D&U not allowed.");
      OUTLINED_FUNCTION_0();
    }
  }
}

uint64_t DisambiguationEntityResolution.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1C65C117C(v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction, &qword_1EA4083F8);
  sub_1C65C117C(v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_triggerLogger, &qword_1EA406870);
  return v0;
}

uint64_t DisambiguationEntityResolution.__deallocating_deinit()
{
  DisambiguationEntityResolution.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C6724730()
{
  return DisambiguationEntityResolution.useCase.getter();
}

void sub_1C6724754()
{
}

void sub_1C6724778(uint64_t *a1)
{
}

void sub_1C672479C()
{
}

uint64_t sub_1C67247C0()
{
  return sub_1C6720AB4();
}

uint64_t sub_1C67247E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = a3[1];
  void v3[2] = a1;
  v3[3] = a2;
  v3[4] = v4;
  v3[5] = v5;
  if (*(void *)(v5 + 16) != *(void *)(v4 + 16))
  {
    os_log_type_t v6 = (void *)sub_1C68EC748();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  os_log_type_t v6 = (void *)sub_1C68EC748();
  unint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_17:
    v3[6] = v6;
    return (uint64_t)v3;
  }
  if (v7 <= *(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v25 = v5;
    uint64_t v26 = v4;
    while (1)
    {
      uint64_t v10 = *(void *)(v5 + v8 + 32);
      uint64_t v9 = *(void *)(v5 + v8 + 40);
      uint64_t v11 = *(void *)(v4 + v8 + 40);
      uint64_t v27 = *(void *)(v4 + v8 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v12 = sub_1C68506A0(v10, v9);
      if (__OFADD__(v6[2], (v13 & 1) == 0)) {
        break;
      }
      unint64_t v14 = v12;
      char v15 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408468);
      if (sub_1C68ED4D8())
      {
        unint64_t v16 = sub_1C68506A0(v10, v9);
        if ((v15 & 1) != (v17 & 1)) {
          goto LABEL_21;
        }
        unint64_t v14 = v16;
      }
      if (v15)
      {
        uint64_t v18 = (void *)(v6[7] + 16 * v14);
        swift_bridgeObjectRelease();
        *uint64_t v18 = v27;
        v18[1] = v11;
      }
      else
      {
        v6[(v14 >> 6) + 8] |= 1 << v14;
        uint64_t v19 = (uint64_t *)(v6[6] + 16 * v14);
        *uint64_t v19 = v10;
        v19[1] = v9;
        uint64_t v20 = (void *)(v6[7] + 16 * v14);
        *uint64_t v20 = v27;
        v20[1] = v11;
        uint64_t v21 = v6[2];
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22) {
          goto LABEL_19;
        }
        uint64_t v6[2] = v23;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
      uint64_t v5 = v25;
      uint64_t v4 = v26;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C68ED868();
  __break(1u);
  return result;
}

void sub_1C6724A4C()
{
  OUTLINED_FUNCTION_15_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C68E9B78();
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_15();
  uint64_t v10 = v9 - v8;
  sub_1C68E9BF8();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_19_12();
  unint64_t v14 = *(void *)v3;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t v16 = *(void *)(v3 + 32);
  if (*(unsigned char *)(v3 + 16))
  {
    uint64_t v17 = *(void *)(v3 + 8);
    if (*(unsigned char *)(v3 + 16) == 1)
    {
      uint64_t v105 = v13;
      uint64_t v108 = v12;
      uint64_t v18 = v0[6];
      sub_1C6726848(v14, v17, 1u);
      swift_bridgeObjectRetain();
      uint64_t v101 = sub_1C6833340(v14, v17, v18);
      uint64_t v20 = v19;
      OUTLINED_FUNCTION_21_13();
      if (v20)
      {
        OUTLINED_FUNCTION_21_13();
        uint64_t v21 = v1[3];
        uint64_t v98 = v1[2];
        uint64_t v22 = v1[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C68E9BE8();
        uint64_t v23 = sub_1C68E9B98();
        uint64_t v24 = v16;
        uint64_t v26 = v25;
        OUTLINED_FUNCTION_8_0();
        v27();
        sub_1C68E9B68();
        uint64_t v83 = v15;
        uint64_t v84 = v24;
        uint64_t v28 = v98;
        uint64_t v29 = v101;
        uint64_t v30 = v21;
        uint64_t v31 = v23;
        uint64_t v32 = v26;
        uint64_t v33 = v10;
        uint64_t v34 = v22;
        uint64_t v35 = v20;
LABEL_8:
        LearnedDisambiguation.init(useCase:id:timestamp:choices:selection:encodedPayload:)(v28, v30, v31, v32, v33, v34, v29, v35, v83, v84, v85, v88, v91, v94, v98, v101, v105, v108, v111,
          v114,
          v117,
          v118);
        uint64_t v45 = type metadata accessor for LearnedDisambiguation();
        uint64_t v46 = v5;
LABEL_23:
        uint64_t v82 = 0;
LABEL_27:
        __swift_storeEnumTagSinglePayload(v46, v82, 1, v45);
        OUTLINED_FUNCTION_10();
        return;
      }
      uint64_t v103 = v5;
      uint64_t v57 = sub_1C68EC728();
      uint64_t v59 = v58;
      if (qword_1EA4057A0 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1C68EC478();
      __swift_project_value_buffer(v60, (uint64_t)qword_1EA442868);
      sub_1C6726848(v14, v17, 1u);
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1C68EC458();
      os_log_type_t v62 = sub_1C68ECE58();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v117 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315394;
        swift_bridgeObjectRetain();
        sub_1C65B4078(v14, v17, (uint64_t)&v117, v64, v65, v66, v67, v68, v85, v88, v91, v94, v97, v103, v105, v108, v111, v114, v117,
          v118);
        uint64_t v113 = v69;
        sub_1C68ED0C8();
        sub_1C6726864(v14, v17, 1u);
        OUTLINED_FUNCTION_21_13();
        swift_bridgeObjectRelease();
        *(_WORD *)(v63 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_1C65B4078(v57, v59, (uint64_t)&v117, v70, v71, v72, v73, v74, v87, v90, v93, v96, v100, v104, v107, v110, v113, v116, v117,
          v118);
        sub_1C68ED0C8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C65AE000, v61, v62, "DisambiguationEntityResolution: PervasiveEntityResolution No match to identifier [%s] in %s.", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_0();
      }
      else
      {
        sub_1C6726864(v14, v17, 1u);
        OUTLINED_FUNCTION_21_13();

        swift_bridgeObjectRelease_n();
      }
      uint64_t v45 = type metadata accessor for LearnedDisambiguation();
      uint64_t v46 = v103;
    }
    else
    {
      uint64_t v95 = v10;
      uint64_t v47 = v0[4];
      uint64_t v48 = *(void *)(v47 + 16);
      if (v48)
      {
        uint64_t v86 = (uint64_t)v0;
        uint64_t v89 = v16;
        uint64_t v106 = v13;
        uint64_t v109 = v12;
        uint64_t v99 = v15;
        uint64_t v102 = v5;
        swift_bridgeObjectRetain();
        sub_1C6726848(v14, v17, 2u);
        swift_bridgeObjectRetain();
        sub_1C65C74BC();
        uint64_t v92 = v47;
        int v49 = (uint64_t *)(v47 + 40);
        while (1)
        {
          uint64_t v51 = *(v49 - 1);
          uint64_t v50 = *v49;
          uint64_t v117 = v51;
          uint64_t v118 = v50;
          uint64_t v112 = v14;
          uint64_t v115 = v17;
          swift_bridgeObjectRetain();
          if (!sub_1C68ED148()) {
            break;
          }
          v49 += 2;
          swift_bridgeObjectRelease();
          if (!--v48)
          {
            swift_bridgeObjectRelease_n();
            sub_1C6726864(v14, v17, 2u);
            uint64_t v5 = v102;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease_n();
        sub_1C6726864(v14, v17, 2u);
        uint64_t v75 = v0[2];
        uint64_t v76 = v0[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C68E9BE8();
        uint64_t v77 = sub_1C68E9B98();
        uint64_t v79 = v78;
        OUTLINED_FUNCTION_8_0();
        v80();
        sub_1C68E9B68();
        uint64_t v81 = v102;
        LearnedDisambiguation.init(useCase:id:timestamp:choices:selection:encodedPayload:)(v75, v76, v77, v79, v95, v92, v51, v50, v99, v89, v86, v89, v92, v95, v99, v102, v106, v109, v112,
          v115,
          v117,
          v118);
        uint64_t v45 = type metadata accessor for LearnedDisambiguation();
        uint64_t v46 = v81;
        goto LABEL_23;
      }
LABEL_14:
      uint64_t v45 = type metadata accessor for LearnedDisambiguation();
      uint64_t v46 = v5;
    }
    uint64_t v82 = 1;
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v36 = v0[4];
    if (v14 < *(void *)(v36 + 16))
    {
      unint64_t v37 = v36 + 16 * v14;
      uint64_t v38 = *(void *)(v37 + 40);
      uint64_t v105 = *(void *)(v37 + 32);
      uint64_t v108 = v12;
      uint64_t v39 = v0[3];
      uint64_t v98 = v15;
      uint64_t v101 = v0[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C68E9BE8();
      uint64_t v40 = sub_1C68E9B98();
      uint64_t v41 = v16;
      uint64_t v43 = v42;
      OUTLINED_FUNCTION_44_9();
      v44();
      sub_1C68E9B68();
      uint64_t v84 = v41;
      uint64_t v83 = v15;
      uint64_t v28 = v101;
      uint64_t v29 = v105;
      uint64_t v30 = v39;
      uint64_t v31 = v40;
      uint64_t v32 = v43;
      uint64_t v33 = v10;
      uint64_t v34 = v36;
      uint64_t v35 = v38;
      goto LABEL_8;
    }
  }
  type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_10();
  __swift_storeEnumTagSinglePayload(v52, v53, v54, v55);
}

uint64_t sub_1C67250A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C67250E0()
{
  sub_1C67250A0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C6725114(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C67251F0;
  return v6(a1);
}

uint64_t sub_1C67251F0()
{
  OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_0_4();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_6_43();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_21();
  return v3();
}

uint64_t sub_1C67252B4(uint64_t a1)
{
  uint64_t v46 = type metadata accessor for PervasiveConfiguration();
  uint64_t v47 = &off_1F217F398;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
  sub_1C67269B0(a1, (uint64_t)boxed_opaque_existential_1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6308);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68FCA00;
  *(void *)(inited + 32) = 0xD000000000000012;
  *(void *)(inited + 40) = 0x80000001C69176C0;
  *(void *)(inited + 48) = 0xD000000000000014;
  *(void *)(inited + 56) = 0x80000001C69176E0;
  *(void *)(inited + 64) = 0xD000000000000011;
  *(void *)(inited + 72) = 0x80000001C6917700;
  *(void *)(inited + 80) = 0xD00000000000001ALL;
  *(void *)(inited + 88) = 0x80000001C6917720;
  *(void *)(inited + 96) = 0xD000000000000014;
  *(void *)(inited + 104) = 0x80000001C6917740;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1C669F7F0();
  uint64_t v5 = v44;
  uint64_t v6 = sub_1C68EC918();
  uint64_t v8 = v7;
  unint64_t v9 = *(void *)(v44 + 16);
  if (v9 >= *(void *)(v44 + 24) >> 1)
  {
    sub_1C669F7F0();
    uint64_t v5 = v44;
  }
  *(void *)(v5 + 16) = v9 + 1;
  uint64_t v10 = v5 + 16 * v9;
  *(void *)(v10 + 32) = v6;
  *(void *)(v10 + 40) = v8;
  uint64_t v11 = sub_1C68EC918();
  uint64_t v13 = v12;
  unint64_t v14 = *(void *)(v5 + 16);
  if (v14 >= *(void *)(v5 + 24) >> 1)
  {
    sub_1C669F7F0();
    uint64_t v5 = v44;
  }
  *(void *)(v5 + 16) = v14 + 1;
  uint64_t v15 = v5 + 16 * v14;
  *(void *)(v15 + 32) = v11;
  *(void *)(v15 + 40) = v13;
  uint64_t v16 = sub_1C68EC918();
  uint64_t v18 = v17;
  unint64_t v19 = *(void *)(v5 + 16);
  if (v19 >= *(void *)(v5 + 24) >> 1) {
    sub_1C669F7F0();
  }
  uint64_t v20 = v44;
  *(void *)(v44 + 16) = v19 + 1;
  uint64_t v21 = v44 + 16 * v19;
  *(void *)(v21 + 32) = v16;
  *(void *)(v21 + 40) = v18;
  uint64_t v22 = sub_1C68EC918();
  uint64_t v24 = v23;
  unint64_t v25 = *(void *)(v44 + 16);
  if (v25 >= *(void *)(v44 + 24) >> 1)
  {
    sub_1C669F7F0();
    uint64_t v20 = v44;
  }
  *(void *)(v20 + 16) = v25 + 1;
  uint64_t v26 = v20 + 16 * v25;
  *(void *)(v26 + 32) = v22;
  *(void *)(v26 + 40) = v24;
  uint64_t v27 = sub_1C68EC918();
  uint64_t v29 = v28;
  unint64_t v30 = *(void *)(v20 + 16);
  if (v30 >= *(void *)(v20 + 24) >> 1)
  {
    sub_1C669F7F0();
    uint64_t v20 = v44;
  }
  *(void *)(v20 + 16) = v30 + 1;
  uint64_t v31 = v20 + 16 * v30;
  *(void *)(v31 + 32) = v27;
  *(void *)(v31 + 40) = v29;
  swift_setDeallocating();
  sub_1C65C7028();
  uint64_t v32 = __swift_project_boxed_opaque_existential_1(v45, v46);
  BOOL v33 = v32[4] == 5000257 && v32[5] == 0xE300000000000000;
  if (v33 || (sub_1C68ED7E8() & 1) != 0)
  {
    uint64_t v34 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v45, v46);
    sub_1C65C74BC();
    uint64_t v36 = sub_1C68ED0F8();
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      sub_1C669F7F0();
      uint64_t v34 = v4;
      uint64_t v38 = v36 + 40;
      do
      {
        uint64_t v39 = sub_1C68EC918();
        uint64_t v41 = v40;
        unint64_t v42 = *(void *)(v4 + 16);
        if (v42 >= *(void *)(v4 + 24) >> 1) {
          sub_1C669F7F0();
        }
        v38 += 16;
        *(void *)(v4 + 16) = v42 + 1;
        uint64_t v43 = v4 + 16 * v42;
        *(void *)(v43 + 32) = v39;
        *(void *)(v43 + 40) = v41;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = MEMORY[0x1E4FBC860];
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return v34;
}

void *sub_1C67256D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  v52[3] = type metadata accessor for PervasiveConfiguration();
  v52[4] = (uint64_t)&off_1F217F398;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  sub_1C67269B0(a3, (uint64_t)boxed_opaque_existential_1);
  v51[3] = type metadata accessor for LearnedDisambiguationPersistentStorage();
  v51[4] = (uint64_t)&off_1F217C678;
  uint64_t v17 = __swift_allocate_boxed_opaque_existential_1(v51);
  sub_1C67269B0(a4, (uint64_t)v17);
  v50[3] = type metadata accessor for LoggingDataEmitter();
  v50[4] = &off_1F217D368;
  v50[0] = a6;
  uint64_t v48 = type metadata accessor for ExperimentationTriggerLogger();
  int v49 = &off_1F2185BC8;
  v47[0] = a7;
  a8[4] = 0;
  uint64_t v18 = (uint64_t)a8 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
  uint64_t v19 = type metadata accessor for LearningResult();
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  a8[2] = a1;
  a8[3] = a2;
  sub_1C65C0368((uint64_t)v51, (uint64_t)(a8 + 5));
  sub_1C65C0368((uint64_t)v52, (uint64_t)v44);
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v44, v45);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  uint64_t v24 = sub_1C67252B4((uint64_t)v22);
  uint64_t v26 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  a8[10] = v24;
  a8[11] = v26;
  sub_1C65C0368(a5, (uint64_t)(a8 + 12));
  sub_1C65C0368((uint64_t)v52, (uint64_t)(a8 + 17));
  sub_1C65C0368((uint64_t)v50, (uint64_t)(a8 + 22));
  sub_1C65C0368((uint64_t)v47, (uint64_t)a8 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_triggerLogger);
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C68EC478();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EA442868);
  swift_retain_n();
  uint64_t v28 = sub_1C68EC458();
  os_log_type_t v29 = sub_1C68ECE48();
  if (os_log_type_enabled(v28, v29))
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v44[0] = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    swift_retain();
    uint64_t v32 = sub_1C6720AB4();
    uint64_t v34 = v33;
    swift_release();
    sub_1C65B4078(v32, v34, (uint64_t)v44, v35, v36, v37, v38, v39, v42, v43, v44[0], v44[1], v44[2], v45, v46, v47[0], v47[1], v47[2], v48,
      (uint64_t)v49);
    unint64_t v43 = v40;
    sub_1C68ED0C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C65AE000, v28, v29, "DisambiguationEntityResolution: processing with %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87A54F0](v31, -1, -1);
    MEMORY[0x1C87A54F0](v30, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return a8;
}

void *sub_1C6725AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v44 = type metadata accessor for PervasiveConfiguration();
  uint64_t v45 = &off_1F217F398;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  sub_1C67269B0(a3, (uint64_t)boxed_opaque_existential_1);
  uint64_t v41 = type metadata accessor for LearnedDisambiguationPersistentStorage();
  uint64_t v42 = &off_1F217C678;
  uint64_t v15 = __swift_allocate_boxed_opaque_existential_1(v40);
  sub_1C67269B0(a4, (uint64_t)v15);
  uint64_t v16 = type metadata accessor for LoggingDataEmitter();
  v39[3] = v16;
  v39[4] = &off_1F217D368;
  v39[0] = a6;
  uint64_t v37 = type metadata accessor for ExperimentationTriggerLogger();
  uint64_t v38 = &off_1F2185BC8;
  v36[0] = a7;
  type metadata accessor for DisambiguationEntityResolution();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v24);
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v16);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (void *)((char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (void *)((char *)v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  uint64_t v34 = sub_1C67256D0(a1, a2, (uint64_t)v20, (uint64_t)v24, a5, *v28, *v32, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return v34;
}

uint64_t sub_1C6725E94()
{
  uint64_t v1 = *(void *)(type metadata accessor for LearningResult() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = type metadata accessor for LearnedDisambiguation();
  if (!__swift_getEnumTagSinglePayload(v0 + v3, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C68E9B78();
    OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_8_0();
    v6();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1C6725FEC()
{
  type metadata accessor for LearningResult();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_22_15(v0);
  void *v1 = v2;
  v1[1] = sub_1C6726A0C;
  uint64_t v3 = OUTLINED_FUNCTION_12_29();
  return sub_1C6721D10(v3, v4, v5, v6, v7);
}

uint64_t sub_1C67260CC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_8_0();
  v3();
  return a1;
}

uint64_t sub_1C6726120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4083F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C6726188(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_28_0();
  v4(v3);
  OUTLINED_FUNCTION_1_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_0();
  v6(v5);
  return a2;
}

uint64_t sub_1C67261DC()
{
  uint64_t v0 = type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_23_2(v0);
  OUTLINED_FUNCTION_29_13();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_22_15(v1);
  void *v2 = v3;
  v2[1] = sub_1C6726A0C;
  uint64_t v4 = OUTLINED_FUNCTION_12_29();
  return sub_1C6721D88(v4, v5, v6, v7, v8);
}

uint64_t sub_1C67262AC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C67262EC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for OngoingLearning()
{
  return self;
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for LearnedDisambiguation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = ((*(void *)(v1 + 64) + ((v2 + 32) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C68E9B78();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_8_0();
  v5();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, v4, v3);
}

uint64_t sub_1C6726484()
{
  uint64_t v0 = type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_23_2(v0);
  OUTLINED_FUNCTION_29_13();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_22_15(v1);
  void *v2 = v3;
  v2[1] = sub_1C6726554;
  uint64_t v4 = OUTLINED_FUNCTION_12_29();
  return sub_1C6722D50(v4, v5, v6, v7, v8);
}

uint64_t sub_1C6726554()
{
  OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_0_4();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_6_43();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_21();
  return v3();
}

uint64_t sub_1C6726614()
{
  return type metadata accessor for DisambiguationEntityResolution();
}

uint64_t type metadata accessor for DisambiguationEntityResolution()
{
  uint64_t result = qword_1EA408448;
  if (!qword_1EA408448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C6726664()
{
  sub_1C67267F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DisambiguationEntityResolution(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DisambiguationEntityResolution);
}

uint64_t dispatch thunk of DisambiguationEntityResolution.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.learnedSelection(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.beginLearning(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.finishLearning(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

void sub_1C67267F0()
{
  if (!qword_1EA408460)
  {
    type metadata accessor for LearningResult();
    unint64_t v0 = sub_1C68ED098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA408460);
    }
  }
}

uint64_t sub_1C6726848(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C6726864(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C6726880()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C67268B8()
{
  OUTLINED_FUNCTION_36_13();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_22_15(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C6726554;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA408470 + dword_1EA408470);
  return v7(v2, v3);
}

unint64_t sub_1C6726964()
{
  unint64_t result = qword_1EA408480;
  if (!qword_1EA408480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408480);
  }
  return result;
}

uint64_t sub_1C67269B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_28_0();
  v5(v4);
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a2, v2);
  return a2;
}

void OUTLINED_FUNCTION_9_36(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return v0;
}

_WORD *OUTLINED_FUNCTION_13_27(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

BOOL OUTLINED_FUNCTION_17_27(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_18_21()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  return sub_1C6726864(v0, v1, 1u);
}

uint64_t OUTLINED_FUNCTION_22_15(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  return sub_1C68ED0C8();
}

uint64_t OUTLINED_FUNCTION_37_9()
{
  return 0;
}

void OUTLINED_FUNCTION_41_13(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.useCase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.learnedSelection(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.beginLearning(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.finishLearning(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t TerminalElement.Duration.toInterval()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA407E08);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C68EA9D8();
  char v5 = v4;
  sub_1C68EA9C8();
  uint64_t v6 = sub_1C68EABD8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v6) == 1)
  {
    sub_1C670D8A8((uint64_t)v2);
    char v7 = 13;
  }
  else
  {
    sub_1C67D54A8();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v2, v6);
    char v7 = v11[1];
  }
  if (v5) {
    uint64_t v3 = 0;
  }
  v11[0] = v7;
  char v10 = 20;
  type metadata accessor for DateTime.Interval();
  swift_allocObject();
  return DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(v3, 0, v11, &v10);
}

uint64_t sub_1C6726CCC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    return 0;
  }
  uint64_t result = 0;
  switch(*(unsigned char *)(a1 + 25))
  {
    case 1:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 5;
      goto LABEL_11;
    case 4:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 4;
      goto LABEL_11;
    case 6:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 2;
      goto LABEL_11;
    case 7:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 9;
      goto LABEL_11;
    case 0xA:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 1;
      goto LABEL_11;
    case 0xB:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 7;
      goto LABEL_11;
    case 0xC:
      OUTLINED_FUNCTION_0_58();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_6_31();
      char v5 = 11;
LABEL_11:
      uint64_t result = sub_1C65F5C08(v5, v3, 2, 2, v4, 1, 1, 0);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_58()
{
  return type metadata accessor for DateTimeConstraint();
}

ValueMetadata *type metadata accessor for DurationConstraintSolver()
{
  return &type metadata for DurationConstraintSolver;
}

BOOL sub_1C6726E44(uint64_t a1)
{
  return *(unsigned char *)(a1 + 50) == 2 && *(unsigned char *)(a1 + 48) == 0;
}

void sub_1C6726E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v98[0] = a6;
  uint64_t v138 = a3;
  uint64_t v104 = a1;
  uint64_t v139 = sub_1C68E9358();
  OUTLINED_FUNCTION_0_1();
  uint64_t v107 = v6;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v115 = (char *)v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v116 = (char *)v98 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v98 - v12;
  uint64_t v14 = sub_1C68E9DD8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v134 = v15;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_1_15();
  uint64_t v19 = (uint64_t *)(v18 - v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v20 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v26 = v25;
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v33 = (char *)v98 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)v98 - v34;
  sub_1C68E9DB8();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_1_15();
  uint64_t v42 = (uint64_t *)(v41 - v40);
  if (*(unsigned char *)(v38 + 48)) {
    return;
  }
  uint64_t v132 = v42;
  uint64_t v133 = v26;
  uint64_t v102 = v39;
  uint64_t v127 = v37;
  uint64_t v113 = v35;
  uint64_t v137 = v33;
  uint64_t v114 = v30;
  uint64_t v124 = v24;
  uint64_t v125 = v23;
  double v126 = *(double *)&v14;
  uint64_t v128 = v19;
  uint64_t v136 = v13;
  double v43 = *(double *)(v38 + 24);
  uint64_t v141 = MEMORY[0x1E4FBC870];
  unint64_t v103 = *(void *)v98[0];
  if (v103 >> 62) {
    goto LABEL_42;
  }
  uint64_t v44 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v45 = v127;
    uint64_t v46 = v128;
    uint64_t v47 = v137;
    uint64_t v48 = v139;
    if (v44)
    {
      double v49 = v43;
      uint64_t v131 = v138 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar;
      unint64_t v106 = v103 & 0xC000000000000001;
      uint64_t v100 = v103 & 0xFFFFFFFFFFFFFF8;
      unint64_t v99 = v103 + 32;
      uint64_t v101 = *(void *)&v43 & 0x7FF0000000000000;
      uint64_t v123 = (uint64_t)v43;
      uint64_t v122 = v102 + 16;
      uint64_t v121 = v134 + 16;
      uint64_t v135 = (char **)(v107 + 16);
      uint64_t v137 = (char *)(v107 + 8);
      unint64_t v120 = (char **)(v133 + 8);
      uint64_t v119 = v134 + 8;
      uint64_t v112 = v133 + 32;
      uint64_t v111 = v133 + 16;
      uint64_t v118 = v102 + 8;
      uint64_t v50 = v136;
      double v43 = v126;
      uint64_t v105 = v44;
      unint64_t v51 = 0;
      while (1)
      {
        if (v106)
        {
          uint64_t v52 = MEMORY[0x1C87A4300](v51, v103);
        }
        else
        {
          if (v51 >= *(void *)(v100 + 16)) {
            goto LABEL_41;
          }
          uint64_t v52 = *(void *)(v99 + 8 * v51);
          swift_retain();
        }
        BOOL v53 = __OFADD__(v51, 1);
        unint64_t v54 = v51 + 1;
        if (v53) {
          break;
        }
        unint64_t v110 = v54;
        uint64_t v55 = sub_1C65FDCEC();
        if (*(void *)(v55 + 16))
        {
          if (v101 == 0x7FF0000000000000) {
            goto LABEL_38;
          }
          if (v49 <= -9.22337204e18) {
            goto LABEL_39;
          }
          if (v49 >= 9.22337204e18) {
            goto LABEL_40;
          }
          uint64_t v138 = *(void *)(v55 + 16);
          uint64_t v109 = v52;
          uint64_t v134 = v52 + OBJC_IVAR____TtC13SiriInference21RecurringDateInterval_interval;
          uint64_t v56 = v102;
          unint64_t v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          uint64_t v108 = v55;
          unint64_t v58 = v55 + v57;
          swift_beginAccess();
          uint64_t v59 = *(void *)(v56 + 72);
          uint64_t v129 = *(void (**)(uint64_t *, unint64_t, char *))(v56 + 16);
          uint64_t v130 = v59;
          uint64_t v60 = v132;
          uint64_t v61 = v135;
          do
          {
            v129(v60, v58, v45);
            OUTLINED_FUNCTION_50();
            v62(v46, v131, *(void *)&v43);
            uint64_t v133 = *v61;
            ((void (*)(char *, uint64_t, uint64_t))v133)(v50, v134, v48);
            sub_1C68E9338();
            uint64_t v63 = v47;
            double v64 = v43;
            uint64_t v60 = v46;
            uint64_t v45 = *(char **)v137;
            (*(void (**)(char *, uint64_t))v137)(v50, v48);
            uint64_t v65 = v125;
            sub_1C68E9D68();
            uint64_t v66 = *v120;
            uint64_t v67 = v124;
            ((void (*)(char *, uint64_t))*v120)(v63, v124);
            OUTLINED_FUNCTION_50();
            v68(v60, *(void *)&v64);
            if (__swift_getEnumTagSinglePayload(v65, 1, v67) == 1)
            {
              uint64_t v69 = OUTLINED_FUNCTION_1_58();
              v70(v69);
              sub_1C6645080(v65);
            }
            else
            {
              OUTLINED_FUNCTION_50();
              uint64_t v71 = v113;
              v72(v113, v65, v67);
              uint64_t v73 = v115;
              uint64_t v74 = v139;
              ((void (*)(char *, uint64_t, uint64_t))v133)(v115, v134, v139);
              sub_1C68E9338();
              uint64_t v133 = v66;
              ((void (*)(char *, uint64_t))v45)(v73, v74);
              OUTLINED_FUNCTION_50();
              v75(v114, v71, v67);
              uint64_t v117 = v45;
              uint64_t v45 = v116;
              sub_1C68E9328();
              uint64_t v60 = &v141;
              uint64_t v76 = v136;
              sub_1C67FBF00();
              ((void (*)(char *, uint64_t))v117)(v76, v139);
              ((void (*)(char *, uint64_t))v133)(v71, v67);
              uint64_t v77 = OUTLINED_FUNCTION_1_58();
              v78(v77);
            }
            uint64_t v47 = v63;
            v58 += v130;
            uint64_t v48 = v139;
            --v138;
            uint64_t v61 = v135;
            uint64_t v50 = v136;
            double v43 = v126;
            uint64_t v46 = v128;
          }
          while (v138);
        }
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v51 = v110;
        if (v110 == v105)
        {
          swift_bridgeObjectRelease();
          uint64_t v79 = v141;
          goto LABEL_23;
        }
      }
      __break(1u);
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
    uint64_t v79 = MEMORY[0x1E4FBC870];
LABEL_23:
    uint64_t v80 = *(void *)(v79 + 16);
    uint64_t v81 = v107;
    if (!v80) {
      break;
    }
    uint64_t v140 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C68ED458();
    int64_t v82 = sub_1C66014C8(v79);
    int v84 = v83;
    int v86 = v85 & 1;
    uint64_t v137 = (char *)(v79 + 56);
    uint64_t v134 = v81 + 32;
    uint64_t v135 = (char **)(v81 + 16);
    uint64_t v133 = (char *)(v81 + 8);
    uint64_t v87 = v107;
    *(void *)&double v43 = v81 + 16;
    while ((v82 & 0x8000000000000000) == 0 && v82 < 1 << *(unsigned char *)(v79 + 32))
    {
      if (((*(void *)&v137[((unint64_t)v82 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v82) & 1) == 0) {
        goto LABEL_36;
      }
      if (*(_DWORD *)(v79 + 36) != v84) {
        goto LABEL_37;
      }
      int64_t v88 = *(void *)(v79 + 48) + *(void *)(v87 + 72) * v82;
      uint64_t v89 = *(void (**)(char *, int64_t, uint64_t))(v87 + 16);
      unint64_t v90 = v136;
      uint64_t v91 = v139;
      LODWORD(v138) = v86;
      v89(v136, v88, v139);
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v116, v90, v91);
      uint64_t v92 = (uint64_t)v115;
      v89(v115, (int64_t)v116, v91);
      type metadata accessor for RecurringDateInterval();
      swift_allocObject();
      sub_1C65F6FB0(v92, 0);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v116, v91);
      sub_1C68ED428();
      sub_1C68ED468();
      sub_1C68ED478();
      sub_1C68ED438();
      int64_t v93 = sub_1C66014CC(v82, v84, v138 & 1, v79);
      int64_t v82 = v93;
      int v84 = v94;
      int v86 = v95 & 1;
      if (!--v80)
      {
        sub_1C6621BBC(v93, v94, v86);
        uint64_t v96 = v140;
        goto LABEL_32;
      }
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C68ED528();
  }
  swift_bridgeObjectRetain();
  uint64_t v96 = MEMORY[0x1E4FBC860];
LABEL_32:
  uint64_t v97 = (void *)v98[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v97 = v96;
}

void sub_1C67278B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t OUTLINED_FUNCTION_1_58()
{
  return *(void *)(v0 - 200);
}

uint64_t sub_1C67278F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  char v3 = 1;
  char v2 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  *(void *)(inited + 56) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, &v3, 7, 0, 0, &v2);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t sub_1C67279C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C65EA404(a1, v19);
  uint64_t v5 = v19[0];
  uint64_t v6 = v19[1];
  int64_t v7 = v19[3];
  unint64_t v8 = v19[4];
  int64_t v9 = (unint64_t)(v19[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v13 >= v9) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    int64_t v15 = v7 + 1;
    if (!v14)
    {
      int64_t v15 = v7 + 2;
      if (v7 + 2 >= v9) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v7 + 3;
        if (v7 + 3 >= v9) {
          goto LABEL_26;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v7 + 4;
          if (v7 + 4 >= v9) {
            goto LABEL_26;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v7 + 5;
            if (v7 + 5 >= v9) {
              goto LABEL_26;
            }
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v7 + 6;
              while (v16 < v9)
              {
                unint64_t v14 = *(void *)(v6 + 8 * v16++);
                if (v14)
                {
                  int64_t v15 = v16 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_bridgeObjectRelease();
              swift_release();
              return 0;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v7 = v15;
LABEL_20:
    uint64_t v17 = (void *)(*(void *)(v5 + 48) + 16 * v12);
    if (*v17 != a2 || v17[1] != a3)
    {
      uint64_t result = sub_1C68ED7E8();
      if ((result & 1) == 0) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C6727B54(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

void (*sub_1C6727BD8(void *a1, uint64_t a2, uint64_t a3))(void **a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C672B478(v6, a2, a3);
  return sub_1C6727C58;
}

void sub_1C6727C58(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_12_30();
  v3(v2);
  swift_bridgeObjectRelease();

  free(v1);
}

unint64_t sub_1C6727CA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      char v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v5 < v2) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_1C6727CF8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0;
  }
  uint64_t result = a1[4];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    float v5 = a1 + 5;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if (v7 < result) {
        uint64_t result = v6;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1C6727D3C(void *a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C68ECA48();
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v3;
    do
    {
      if ((sub_1C68EC7E8() & 1) == 0) {
        MEMORY[0x1C87A3940](v4, v5);
      }
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_1C68ECA48();
      uint64_t v5 = v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1C6727E20(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = a2;
  uint64_t v48 = *(void *)(a1 + 16);
  if (v48)
  {
    uint64_t v9 = a1 + 32;
    float v10 = a3;
    float v11 = a4;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v47 = v9;
    while (1)
    {
      uint64_t v50 = v12;
      unint64_t v14 = (uint64_t *)(v9 + 16 * v12);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      uint64_t v51 = sub_1C68EC918();
      uint64_t v52 = v17;
      uint64_t v18 = a6[3];
      uint64_t v19 = a6[4];
      __swift_project_boxed_opaque_existential_1(a6, v18);
      swift_bridgeObjectRetain();
      uint64_t v20 = (void *)sub_1C689BA74(v15, v16, v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C6727D3C(&v51);
      uint64_t v21 = v7;
      uint64_t v23 = v51;
      uint64_t v22 = v52;
      LOBYTE(v19) = sub_1C681455C(v51, v52, v20);
      swift_bridgeObjectRelease();
      if (v19)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C65C8524();
          uint64_t v20 = v41;
        }
        unint64_t v24 = v20[2];
        if (v24 >= v20[3] >> 1)
        {
          sub_1C65C8524();
          uint64_t v20 = v42;
        }
        void v20[2] = v24 + 1;
        uint64_t v25 = &v20[2 * v24];
        v25[4] = v23;
        v25[5] = v22;
      }
      uint64_t v26 = sub_1C6729F24();
      uint64_t v7 = v21;
      if (v21)
      {
        uint64_t v43 = a1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v43;
      }
      uint64_t v27 = (uint64_t)v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_1C6728574(v27);
      swift_bridgeObjectRelease();
      uint64_t v53 = v28;
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29) {
        break;
      }
LABEL_29:
      uint64_t v12 = v50 + 1;
      swift_bridgeObjectRelease();
      uint64_t v9 = v47;
      if (v50 + 1 == v48)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = a2;
        goto LABEL_32;
      }
    }
    uint64_t v30 = 0;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C6729604(v10, v11);
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(v31 + 16);
      uint64_t v33 = *(void *)(v13 + 16);
      if (__OFADD__(v33, v32)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v33 + v32 > *(void *)(v13 + 24) >> 1)
      {
        sub_1C662E748();
        uint64_t v13 = v34;
      }
      if (*(void *)(v31 + 16))
      {
        uint64_t v35 = *(void *)(v13 + 16);
        if ((*(void *)(v13 + 24) >> 1) - v35 < v32) {
          goto LABEL_39;
        }
        unint64_t v36 = v13 + 40 * v35 + 32;
        if (v31 + 32 < v36 + 40 * v32 && v36 < v31 + 32 + 40 * v32) {
          goto LABEL_42;
        }
        swift_arrayInitWithCopy();
        if (v32)
        {
          uint64_t v38 = *(void *)(v13 + 16);
          BOOL v39 = __OFADD__(v38, v32);
          uint64_t v40 = v38 + v32;
          if (v39) {
            goto LABEL_40;
          }
          *(void *)(v13 + 16) = v40;
        }
      }
      else if (v32)
      {
        goto LABEL_38;
      }
      ++v30;
      swift_bridgeObjectRelease();
      if (v29 == v30) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_32:
    uint64_t v43 = sub_1C6728218(v13);
    swift_bridgeObjectRelease();
    if (*(void *)(v43 + 16) <= v8) {
      return v43;
    }
    if ((v8 & 0x8000000000000000) == 0) {
      return sub_1C682B8E8(v43, v43 + 32, 0, (2 * v8) | 1);
    }
  }
  __break(1u);
LABEL_42:
  OUTLINED_FUNCTION_0_8();
  uint64_t result = sub_1C68ED568();
  __break(1u);
  return result;
}

uint64_t sub_1C6728218(uint64_t a1)
{
  uint64_t v81 = sub_1C68EC748();
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_22:
    swift_bridgeObjectRetain_n();
    sub_1C682FD8C();
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    uint64_t v79 = v67;
    sub_1C6727B54(&v79, (uint64_t (*)(uint64_t))sub_1C676B11C, sub_1C672A360);
    swift_bridgeObjectRelease();
    uint64_t v68 = v79;
    swift_bridgeObjectRelease();
    return v68;
  }
  uint64_t v76 = (long long *)&v84;
  swift_bridgeObjectRetain();
  uint64_t v73 = a1;
  uint64_t v3 = (float *)(a1 + 64);
  while (1)
  {
    uint64_t v4 = *((void *)v3 - 3);
    uint64_t v5 = *((void *)v3 - 2);
    float v6 = *(v3 - 2);
    uint64_t v7 = *(void *)v3;
    v88[0] = *((void *)v3 - 4);
    v88[1] = v4;
    v88[2] = v5;
    float v89 = v6;
    uint64_t v90 = v7;
    uint64_t v8 = v81;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_bridgeObjectRetain();
    char v10 = sub_1C67279C0(v9, v4, v5);
    swift_bridgeObjectRelease();
    if (v10) {
      break;
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v8;
    sub_1C68525B4((uint64_t)v88, v4, v5);
    uint64_t v81 = v79;
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    v3 += 10;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain();
  sub_1C68332B0();
  swift_bridgeObjectRelease();
  sub_1C65CDEF4((uint64_t)v82, (uint64_t)&v79, &qword_1EA408498);
  sub_1C65CDEF4((uint64_t)v82, (uint64_t)&v83, &qword_1EA408498);
  if (v83)
  {
    long long v85 = *v76;
    uint64_t v86 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C6676838((uint64_t)&v86);
    long long v87 = v85;
    sub_1C6620378((uint64_t)&v87);
    float v11 = *(float *)&v80;
    sub_1C672B8A0(v79);
  }
  else
  {
    float v11 = 3.4028e38;
  }
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v15 = OUTLINED_FUNCTION_7_39(v12, v13, v14);
  if (*(void *)v16)
  {
    if (v6 >= v11) {
      float v23 = v11;
    }
    else {
      float v23 = v6;
    }
    *(float *)(v16 + 24) = v23;
  }
  unint64_t v24 = OUTLINED_FUNCTION_6_44((uint64_t)v15, v16, v17, v18, v19, v20, v21, v22, v70, v73, (uint64_t)v76, v79);
  v25(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v29 = OUTLINED_FUNCTION_7_39(v26, v27, v28);
  if (*v30)
  {
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1C68BDC3C(v31);
    uint64_t v40 = OUTLINED_FUNCTION_6_44(v32, v33, v34, v35, v36, v37, v38, v39, v71, v74, v77, v79);
    v29((void **)v40);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = swift_bridgeObjectRelease();
    double v49 = OUTLINED_FUNCTION_6_44(v41, v42, v43, v44, v45, v46, v47, v48, v71, v74, v77, v79);
    v29((void **)v49);
  }
  uint64_t v50 = swift_bridgeObjectRelease();
  uint64_t v53 = OUTLINED_FUNCTION_7_39(v50, v51, v52);
  if (!*v54)
  {
LABEL_19:
    double v64 = OUTLINED_FUNCTION_6_44((uint64_t)v53, (uint64_t)v54, v55, v56, v57, v58, v59, v60, v72, v75, v78, v79);
    v65(v64);
    goto LABEL_20;
  }
  uint64_t v61 = v54[4];
  BOOL v62 = __OFADD__(v61, 1);
  uint64_t v63 = v61 + 1;
  if (!v62)
  {
    v54[4] = v63;
    goto LABEL_19;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C6728574(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1C669FA30();
  uint64_t v4 = 0;
  uint64_t v5 = v18;
  uint64_t v16 = v1;
  uint64_t v17 = a1 + 32;
  do
  {
    uint64_t v6 = *(void *)(v17 + 8 * v4);
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = v2;
      swift_bridgeObjectRetain();
      sub_1C669FA60();
      uint64_t v9 = 0;
      uint64_t v10 = v2;
      unint64_t v11 = *(void *)(v2 + 16);
      do
      {
        double v12 = *(double *)(v6 + 8 * v9 + 32);
        if (v11 >= *(void *)(v10 + 24) >> 1) {
          sub_1C669FA60();
        }
        ++v9;
        float v13 = v12;
        *(void *)(v10 + 16) = v11 + 1;
        *(float *)(v10 + 4 * v11++ + 32) = v13;
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
      uint64_t v2 = v8;
      uint64_t v1 = v16;
    }
    else
    {
      uint64_t v10 = v2;
    }
    unint64_t v14 = *(void *)(v18 + 16);
    if (v14 >= *(void *)(v18 + 24) >> 1) {
      sub_1C669FA30();
    }
    ++v4;
    *(void *)(v18 + 16) = v14 + 1;
    *(void *)(v18 + 8 * v14 + 32) = v10;
  }
  while (v4 != v1);
  return v5;
}

uint64_t sub_1C672870C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v48 = v6 - v5;
  uint64_t v7 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_15();
  uint64_t v10 = v9 - v8;
  unint64_t v11 = *(void *)(a1 + 16);
  if (HIDWORD(v11))
  {
    OUTLINED_FUNCTION_0_8();
    uint64_t result = sub_1C68ED508();
    __break(1u);
  }
  else
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v49 = MEMORY[0x1E4FBC860];
    int v46 = *(void *)(a1 + 16);
    uint64_t v47 = a2;
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = 32;
      unint64_t v14 = v11;
      do
      {
        uint64_t v15 = swift_bridgeObjectRetain();
        sub_1C68BCCAC(v15);
        v13 += 40;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v16 = v49;
      uint64_t v17 = v12;
      sub_1C669FA60();
      uint64_t v18 = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      uint64_t v20 = (int *)(a1 + 56);
      do
      {
        int v21 = *v20;
        if (v19 >= *(void *)(v18 + 24) >> 1) {
          sub_1C669FA60();
        }
        *(void *)(v18 + 16) = v19 + 1;
        *(_DWORD *)(v18 + 4 * v19 + 32) = v21;
        v20 += 10;
        ++v19;
        --v11;
      }
      while (v11);
      uint64_t v12 = v17;
    }
    else
    {
      uint64_t v18 = MEMORY[0x1E4FBC860];
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    uint64_t v22 = sub_1C68E9BF8();
    __swift_storeEnumTagSinglePayload(v48, 1, 1, v22);
    unint64_t v23 = sub_1C6727CA0(v18);
    unint64_t v24 = sub_1C6769784(v18);
    sub_1C6728B00(v18);
    unsigned int v26 = v25;
    double v27 = sub_1C6728BE8(v18);
    int v28 = LODWORD(v27);
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1C672A174();
    uint64_t v44 = v30;
    uint64_t v45 = v29;
    int64_t v31 = *(void *)(v16 + 16);
    if (v31)
    {
      unint64_t v43 = v23;
      sub_1C669FAB0(0, v31, 0);
      uint64_t v32 = 0;
      uint64_t v33 = v12;
      unint64_t v34 = *(void *)(v12 + 16);
      do
      {
        uint64_t v35 = *(void *)(v16 + 8 * v32 + 32);
        unint64_t v36 = *(void *)(v33 + 24);
        if (v34 >= v36 >> 1) {
          sub_1C669FAB0((char *)(v36 > 1), v34 + 1, 1);
        }
        ++v32;
        *(void *)(v33 + 16) = v34 + 1;
        *(void *)(v33 + 8 * v34++ + 32) = v35;
      }
      while (v31 != v32);
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x1E4FBC860];
      unint64_t v23 = v43;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x1E4FBC860];
    }
    uint64_t v37 = sub_1C6729A10();
    sub_1C65CDEF4(v48, v10, &qword_1EBBF6510);
    *(void *)(v10 + v7[5]) = v12;
    uint64_t v38 = v10 + v7[6];
    *(void *)uint64_t v38 = v23 & 0x1FFFFFFFFLL;
    *(void *)(v38 + 8) = v24 & 0x1FFFFFFFFLL;
    *(void *)(v38 + 16) = v26;
    *(_WORD *)(v38 + 28) = 0;
    *(_DWORD *)(v38 + 24) = v28;
    uint64_t v39 = v10 + v7[7];
    *(void *)uint64_t v39 = v45;
    *(void *)(v39 + 8) = v44;
    *(void *)(v39 + 16) = 0x100000000;
    *(unsigned char *)(v39 + 28) = 1;
    *(_DWORD *)(v39 + 24) = 0;
    *(void *)(v10 + v7[8]) = v33;
    *(unsigned char *)(v10 + v7[9]) = 2;
    *(void *)(v10 + v7[10]) = v12;
    uint64_t v40 = v10 + v7[11];
    *(_DWORD *)uint64_t v40 = v37;
    *(unsigned char *)(v40 + 4) = BYTE4(v37) & 1;
    *(unsigned char *)uint64_t v47 = 1;
    *(_DWORD *)(v47 + 4) = v46;
    *(unsigned char *)(v47 + 8) = 0;
    uint64_t v41 = type metadata accessor for InferenceEuclidLog(0);
    return sub_1C672A2FC(v10, v47 + *(int *)(v41 + 20));
  }
  return result;
}

uint64_t sub_1C6728B00(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v3 = result;
    swift_bridgeObjectRetain();
    sub_1C6727B54(&v3, (uint64_t (*)(uint64_t))sub_1C676B12C, sub_1C672AA58);
    unint64_t v2 = *(void *)(v3 + 16);
    if (v1)
    {
      if (v1 >> 1 < v2) {
        return swift_release();
      }
    }
    else
    {
      if (v1 >> 1 < v2)
      {
        if (v1 >= 2) {
          return swift_release();
        }
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

double sub_1C6728BE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0.0;
  }
  uint64_t v2 = 0;
  double result = 0.0;
  do
  {
    float v4 = *(float *)(a1 + 32 + 4 * v2++);
    *(float *)&double result = *(float *)&result + v4;
  }
  while (v1 != v2);
  *(float *)&double result = *(float *)&result / (float)v1;
  return result;
}

uint64_t sub_1C6728C24()
{
  sub_1C671AFDC();
  OUTLINED_FUNCTION_1_23();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E3Orchestrator()
{
  return self;
}

uint64_t sub_1C6728C74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7954797469746E65 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x79546C616E676973 && a2 == 0xEA00000000006570;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C69179B0 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 1682531437 && a2 == 0xE400000000000000;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7361696C61 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_1C68ED7E8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_1C6728E80(char a1)
{
  unint64_t result = 0x7954797469746E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x79546C616E676973;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 1682531437;
      break;
    case 4:
      unint64_t result = 0x7361696C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C6728F28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4084A8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C672BDA0();
  sub_1C68ED9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v6 = OUTLINED_FUNCTION_11_31();
  uint64_t v8 = v7;
  uint64_t v23 = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = OUTLINED_FUNCTION_11_31();
  uint64_t v24 = v10;
  uint64_t v21 = v9;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C68ED618();
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C68ED678();
  uint64_t v13 = OUTLINED_FUNCTION_11_31();
  uint64_t v15 = v14;
  uint64_t v22 = v13;
  uint64_t v16 = OUTLINED_FUNCTION_1_59();
  v17(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v8;
  a2[2] = v21;
  a2[3] = v24;
  a2[4] = v20;
  a2[5] = v12;
  a2[6] = v19;
  a2[7] = v22;
  a2[8] = v15;
  return result;
}

unint64_t sub_1C6729250()
{
  return sub_1C6728E80(*v0);
}

uint64_t sub_1C6729258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6728C74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C6729280(uint64_t a1)
{
  unint64_t v2 = sub_1C672BDA0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C67292BC(uint64_t a1)
{
  unint64_t v2 = sub_1C672BDA0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C67292F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1C6728F28(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x48uLL);
  }
  return result;
}

uint64_t sub_1C6729344()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C68E9238();
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  uint64_t v8 = v7 - v6;
  *(void *)(v0 + 16) = 0;
  sub_1C68E9278();
  swift_allocObject();
  uint64_t v9 = sub_1C68E9268();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = v9;
  swift_release();
  sub_1C68EC218();
  uint64_t v10 = (void *)sub_1C68EC208();
  uint64_t v11 = sub_1C68EC1F8();

  *(void *)(v1 + 16) = v11;
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E4F26C70], v2);
  sub_1C68E9248();
  return v1;
}

uint64_t sub_1C6729604(float a1, float a2)
{
  uint64_t v7 = sub_1C68EB9E8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_11();
  uint64_t v11 = *(void *)(v2 + 16);
  if (!v11) {
    return MEMORY[0x1E4FBC860];
  }
  swift_retain();
  uint64_t v12 = sub_1C68EB9B8();
  swift_release();
  if (v3) {
    return v11;
  }
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
  uint64_t v15 = v9 + 16;
  uint64_t v42 = v16;
  unint64_t v17 = v13 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
  uint64_t v41 = *(void *)(v15 + 56);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v38 = v7;
  while (1)
  {
    v42(v4, v17, v7);
    sub_1C68EB9C8();
    if (v18 > a1) {
      break;
    }
    sub_1C68EB9C8();
    if (v19 >= a2)
    {
      uint64_t v20 = sub_1C68EB9D8();
      if (v21 >> 60 != 15)
      {
        unint64_t v22 = v21;
        uint64_t v23 = v20;
        sub_1C672A2B0();
        uint64_t v40 = v23;
        unint64_t v24 = v22;
        sub_1C68E9258();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4063E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
        *(void *)(inited + 32) = sub_1C6729BB0(v43);
        sub_1C67FA84C();
        uint64_t v39 = v26;
        swift_bridgeObjectRetain();
        sub_1C68EB9C8();
        int v28 = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C662E748();
          uint64_t v11 = v33;
        }
        unint64_t v29 = *(void *)(v11 + 16);
        if (v29 >= *(void *)(v11 + 24) >> 1)
        {
          sub_1C662E748();
          uint64_t v11 = v34;
        }
        *(void *)(v11 + 16) = v29 + 1;
        uint64_t v30 = v11 + 40 * v29;
        *(void *)(v30 + 32) = v39;
        *(void *)(v30 + 40) = v44;
        *(void *)(v30 + 48) = v45;
        *(_DWORD *)(v30 + 56) = v28;
        *(void *)(v30 + 64) = 1;
        sub_1C66ECB90(v40, v24);
      }
    }
    uint64_t v31 = OUTLINED_FUNCTION_13_28();
    v32(v31);
    v17 += v41;
    if (!--v14) {
      goto LABEL_18;
    }
  }
  uint64_t v35 = OUTLINED_FUNCTION_13_28();
  v36(v35);
LABEL_18:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C6729A10()
{
  if (!*(void *)(v0 + 16))
  {
    unint64_t v1 = 0;
    LOBYTE(v2) = 1;
    return v1 | ((unint64_t)v2 << 32);
  }
  swift_retain();
  unint64_t v1 = sub_1C68EB9A8();
  swift_release();
  if ((v1 & 0x8000000000000000) == 0)
  {
    unint64_t v2 = HIDWORD(v1);
    if (!HIDWORD(v1)) {
      return v1 | ((unint64_t)v2 << 32);
    }
  }
  OUTLINED_FUNCTION_0_8();
  uint64_t result = sub_1C68ED508();
  __break(1u);
  return result;
}

uint64_t sub_1C6729BB0(uint64_t a1)
{
  if (a1 == 0xD000000000000014)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 1;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 1;
  }
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 2;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 2;
  }
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 128;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 128;
  }
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 64;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 64;
  }
  if (a1 == 0xD00000000000001ELL)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 128;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 128;
  }
  if (a1 == 0xD000000000000012)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 64;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 64;
  }
  if (a1 == 0xD000000000000017)
  {
    OUTLINED_FUNCTION_3_44();
    if (v2) {
      return 16;
    }
  }
  if (OUTLINED_FUNCTION_8_27()) {
    return 16;
  }
  return 0;
}

uint64_t type metadata accessor for EuclidVectorDb()
{
  return self;
}

uint64_t sub_1C6729D78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C68EC568();
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1C68EC548();
  OUTLINED_FUNCTION_0_1();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1_15();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_1C68E9C68();
  MEMORY[0x1F4188790](v16 - 8);
  OUTLINED_FUNCTION_11();
  sub_1C68E9C08();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v15, *MEMORY[0x1E4F3C148], v9);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E4F3C158], v2);
  sub_1C68EC588();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1C68EC578();
  return v1;
}

void *sub_1C6729F24()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408488);
  uint64_t v3 = swift_allocObject();
  *(void *)(v2 + 16) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1C68F0550;
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC860];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = (void **)(v4 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_1C68EC538();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_beginAccess();
    uint64_t v1 = *v5;
    if (*v5)
    {
      id v7 = v1;
      swift_willThrow();
    }
    else
    {
      swift_beginAccess();
      uint64_t v1 = *(void **)(v2 + 16);
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_release();
  }
  return v1;
}

void sub_1C672A0D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v8 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a2;
  id v9 = a2;

  if (a1)
  {
    swift_beginAccess();
    *(void *)(a4 + 16) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C672A174()
{
  return sub_1C68ED7B8();
}

uint64_t sub_1C672A1BC()
{
  swift_release();
  OUTLINED_FUNCTION_15_14();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EuclidEmbeddingApi()
{
  return self;
}

uint64_t sub_1C672A210()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_15_14();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1C672A240()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_14();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1C672A270()
{
  swift_release();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_1_23();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

void sub_1C672A2A8(uint64_t a1, void *a2)
{
  sub_1C672A0D4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1C672A2B0()
{
  unint64_t result = qword_1EA408490;
  if (!qword_1EA408490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408490);
  }
  return result;
}

uint64_t sub_1C672A2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferenceEuclidDebugMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C672A360(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C68ED798();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1C672B03C(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_148;
  }
  uint64_t v5 = result;
  uint64_t v108 = v1;
  uint64_t result = sub_1C666E4B4(v3 / 2);
  uint64_t v104 = result;
  uint64_t v105 = v3;
  uint64_t v107 = v6;
  uint64_t v102 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v46 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_114:
    uint64_t result = v9;
    if (v46 < 2)
    {
LABEL_125:
      uint64_t result = swift_bridgeObjectRelease();
      if (v105 >= -1)
      {
        *(void *)(v104 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_154;
    }
    uint64_t v95 = *v102;
    while (1)
    {
      unint64_t v96 = v46 - 2;
      if (v46 < 2) {
        break;
      }
      if (!v95) {
        goto LABEL_157;
      }
      uint64_t v97 = result;
      uint64_t v98 = *(void *)(result + 32 + 16 * v96);
      uint64_t v99 = *(void *)(result + 32 + 16 * (v46 - 1) + 8);
      uint64_t result = sub_1C672B130((char *)(v95 + 40 * v98), (char *)(v95 + 40 * *(void *)(result + 32 + 16 * (v46 - 1))), v95 + 40 * v99, v107);
      if (v108) {
        goto LABEL_110;
      }
      if (v99 < v98) {
        goto LABEL_143;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C676B0EC();
        uint64_t v97 = result;
      }
      if (v96 >= *(void *)(v97 + 16)) {
        goto LABEL_144;
      }
      uint64_t v100 = (void *)(v97 + 32 + 16 * v96);
      *uint64_t v100 = v98;
      v100[1] = v99;
      unint64_t v101 = *(void *)(v97 + 16);
      if (v46 > v101) {
        goto LABEL_145;
      }
      memmove((void *)(v97 + 32 + 16 * (v46 - 1)), (const void *)(v97 + 32 + 16 * v46), 16 * (v101 - v46));
      uint64_t result = v97;
      *(void *)(v97 + 16) = v101 - 1;
      unint64_t v46 = v101 - 1;
      if (v101 <= 2) {
        goto LABEL_125;
      }
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    return result;
  }
  uint64_t v103 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v106 = *a1;
  while (1)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v7 + 1;
    if (v7 + 1 >= v3)
    {
      ++v7;
      goto LABEL_37;
    }
    uint64_t v12 = *(void *)(v8 + 40 * v11 + 32);
    uint64_t v13 = *(void *)(v8 + 40 * v7 + 32);
    if (v13 >= v12)
    {
      float v14 = *(float *)(v8 + 40 * v7 + 24);
      v7 += 2;
      if (v12 != v13 || *(float *)(v8 + 40 * v11 + 24) >= v14)
      {
        if (v7 >= v3) {
          goto LABEL_37;
        }
        char v16 = 0;
        goto LABEL_16;
      }
    }
    else
    {
      v7 += 2;
    }
    if (v7 >= v3) {
      goto LABEL_31;
    }
    char v16 = 1;
LABEL_16:
    uint64_t v17 = v7;
    while (1)
    {
      while (1)
      {
        uint64_t v18 = *(void *)(v8 + 40 * v17 + 32);
        if (v12 >= v18 && (v18 != v12 || *(float *)(v8 + 40 * v17 + 24) >= *(float *)(v8 + 40 * v11 + 24))) {
          break;
        }
        if ((v16 & 1) == 0)
        {
          uint64_t v7 = v17;
          goto LABEL_37;
        }
        uint64_t v7 = v17 + 1;
        uint64_t v12 = *(void *)(v8 + 40 * v17 + 32);
        uint64_t v11 = v17;
        uint64_t v17 = v7;
        if (v7 >= v3) {
          goto LABEL_30;
        }
      }
      if (v16) {
        break;
      }
      uint64_t v7 = v17 + 1;
      uint64_t v12 = *(void *)(v8 + 40 * v17 + 32);
      uint64_t v11 = v17;
      uint64_t v17 = v7;
      if (v7 >= v3) {
        goto LABEL_37;
      }
    }
    uint64_t v7 = v17;
LABEL_30:
    if (v7 < v10) {
      goto LABEL_149;
    }
LABEL_31:
    if (v10 < v7)
    {
      uint64_t v20 = 40 * v7;
      uint64_t v21 = 40 * v10;
      uint64_t v22 = v7;
      uint64_t v23 = v10;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_156;
          }
          uint64_t v24 = v8 + v21;
          long long v25 = *(_OWORD *)(v8 + v21);
          uint64_t v26 = v8 + v20;
          uint64_t v27 = *(void *)(v8 + v21 + 16);
          int v28 = *(_DWORD *)(v8 + v21 + 24);
          uint64_t v29 = *(void *)(v8 + v21 + 32);
          uint64_t v30 = *(void *)(v8 + v20 - 8);
          long long v31 = *(_OWORD *)(v8 + v20 - 24);
          *(_OWORD *)uint64_t v24 = *(_OWORD *)(v8 + v20 - 40);
          *(_OWORD *)(v24 + 16) = v31;
          *(void *)(v24 + 32) = v30;
          *(_OWORD *)(v26 - 40) = v25;
          *(void *)(v26 - 24) = v27;
          *(_DWORD *)(v26 - 16) = v28;
          *(void *)(v26 - 8) = v29;
        }
        ++v23;
        v20 -= 40;
        v21 += 40;
      }
      while (v23 < v22);
    }
LABEL_37:
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_147;
      }
      if (v7 - v10 < v103)
      {
        uint64_t v32 = v10 + v103;
        if (__OFADD__(v10, v103)) {
          goto LABEL_151;
        }
        if (v32 >= v3) {
          uint64_t v32 = v3;
        }
        if (v32 < v10) {
          goto LABEL_152;
        }
        if (v7 != v32)
        {
          uint64_t v33 = v8 + 40 * v7;
          do
          {
            uint64_t v34 = *(void *)(v8 + 40 * v7 + 32);
            uint64_t v35 = v33;
            uint64_t v36 = v10;
            do
            {
              uint64_t v37 = *(void *)(v35 - 8);
              if (v37 >= v34 && (v34 != v37 || *(float *)(v35 + 24) >= *(float *)(v35 - 16))) {
                break;
              }
              if (!v8) {
                goto LABEL_153;
              }
              uint64_t v39 = *(void *)v35;
              uint64_t v40 = *(void *)(v35 + 8);
              uint64_t v41 = *(void *)(v35 + 16);
              int v42 = *(_DWORD *)(v35 + 24);
              long long v43 = *(_OWORD *)(v35 - 24);
              *(_OWORD *)uint64_t v35 = *(_OWORD *)(v35 - 40);
              *(_OWORD *)(v35 + 16) = v43;
              *(void *)(v35 + 32) = *(void *)(v35 - 8);
              *(void *)(v35 - 32) = v40;
              *(void *)(v35 - 24) = v41;
              *(_DWORD *)(v35 - 16) = v42;
              *(void *)(v35 - 8) = v34;
              *(void *)(v35 - 40) = v39;
              v35 -= 40;
              ++v36;
            }
            while (v7 != v36);
            ++v7;
            v33 += 40;
          }
          while (v7 != v32);
          uint64_t v7 = v32;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_146;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C65C8578(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v45 = *(void *)(v9 + 16);
    unint64_t v44 = *(void *)(v9 + 24);
    unint64_t v46 = v45 + 1;
    uint64_t v8 = v106;
    if (v45 >= v44 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C65C8578((char *)(v44 > 1), v45 + 1, 1, (char *)v9);
      uint64_t v8 = v106;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v46;
    uint64_t v47 = v9 + 32;
    uint64_t v48 = (uint64_t *)(v9 + 32 + 16 * v45);
    uint64_t *v48 = v10;
    v48[1] = v7;
    if (v45) {
      break;
    }
    unint64_t v46 = 1;
LABEL_105:
    uint64_t v3 = v105;
    if (v7 >= v105) {
      goto LABEL_114;
    }
  }
  while (1)
  {
    unint64_t v49 = v46 - 1;
    if (v46 >= 4)
    {
      unint64_t v54 = v47 + 16 * v46;
      uint64_t v55 = *(void *)(v54 - 64);
      uint64_t v56 = *(void *)(v54 - 56);
      BOOL v60 = __OFSUB__(v56, v55);
      uint64_t v57 = v56 - v55;
      if (v60) {
        goto LABEL_131;
      }
      uint64_t v59 = *(void *)(v54 - 48);
      uint64_t v58 = *(void *)(v54 - 40);
      BOOL v60 = __OFSUB__(v58, v59);
      uint64_t v52 = v58 - v59;
      char v53 = v60;
      if (v60) {
        goto LABEL_132;
      }
      unint64_t v61 = v46 - 2;
      BOOL v62 = (uint64_t *)(v47 + 16 * (v46 - 2));
      uint64_t v64 = *v62;
      uint64_t v63 = v62[1];
      BOOL v60 = __OFSUB__(v63, v64);
      uint64_t v65 = v63 - v64;
      if (v60) {
        goto LABEL_133;
      }
      BOOL v60 = __OFADD__(v52, v65);
      uint64_t v66 = v52 + v65;
      if (v60) {
        goto LABEL_135;
      }
      if (v66 >= v57)
      {
        uint64_t v84 = (uint64_t *)(v47 + 16 * v49);
        uint64_t v86 = *v84;
        uint64_t v85 = v84[1];
        BOOL v60 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v60) {
          goto LABEL_141;
        }
        BOOL v77 = v52 < v87;
        goto LABEL_94;
      }
    }
    else
    {
      if (v46 != 3)
      {
        uint64_t v78 = *(void *)(v9 + 32);
        uint64_t v79 = *(void *)(v9 + 40);
        BOOL v60 = __OFSUB__(v79, v78);
        uint64_t v71 = v79 - v78;
        char v72 = v60;
        goto LABEL_88;
      }
      uint64_t v51 = *(void *)(v9 + 32);
      uint64_t v50 = *(void *)(v9 + 40);
      BOOL v60 = __OFSUB__(v50, v51);
      uint64_t v52 = v50 - v51;
      char v53 = v60;
    }
    if (v53) {
      goto LABEL_134;
    }
    unint64_t v61 = v46 - 2;
    uint64_t v67 = (uint64_t *)(v47 + 16 * (v46 - 2));
    uint64_t v69 = *v67;
    uint64_t v68 = v67[1];
    BOOL v70 = __OFSUB__(v68, v69);
    uint64_t v71 = v68 - v69;
    char v72 = v70;
    if (v70) {
      goto LABEL_136;
    }
    uint64_t v73 = (uint64_t *)(v47 + 16 * v49);
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    BOOL v60 = __OFSUB__(v74, v75);
    uint64_t v76 = v74 - v75;
    if (v60) {
      goto LABEL_138;
    }
    if (__OFADD__(v71, v76)) {
      goto LABEL_140;
    }
    if (v71 + v76 >= v52)
    {
      BOOL v77 = v52 < v76;
LABEL_94:
      if (v77) {
        unint64_t v49 = v61;
      }
      goto LABEL_96;
    }
LABEL_88:
    if (v72) {
      goto LABEL_137;
    }
    uint64_t v80 = (uint64_t *)(v47 + 16 * v49);
    uint64_t v82 = *v80;
    uint64_t v81 = v80[1];
    BOOL v60 = __OFSUB__(v81, v82);
    uint64_t v83 = v81 - v82;
    if (v60) {
      goto LABEL_139;
    }
    if (v83 < v71) {
      goto LABEL_105;
    }
LABEL_96:
    unint64_t v88 = v49 - 1;
    if (v49 - 1 >= v46)
    {
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    if (!v8) {
      goto LABEL_155;
    }
    float v89 = (uint64_t *)(v47 + 16 * v88);
    uint64_t v90 = *v89;
    uint64_t v91 = v47;
    uint64_t v92 = (void *)(v47 + 16 * v49);
    uint64_t v93 = v92[1];
    uint64_t result = sub_1C672B130((char *)(v8 + 40 * *v89), (char *)(v8 + 40 * *v92), v8 + 40 * v93, v107);
    if (v108) {
      break;
    }
    if (v93 < v90) {
      goto LABEL_128;
    }
    if (v49 > *(void *)(v9 + 16)) {
      goto LABEL_129;
    }
    *float v89 = v90;
    *(void *)(v91 + 16 * v88 + 8) = v93;
    unint64_t v94 = *(void *)(v9 + 16);
    if (v49 >= v94) {
      goto LABEL_130;
    }
    unint64_t v46 = v94 - 1;
    uint64_t result = (uint64_t)memmove(v92, v92 + 2, 16 * (v94 - 1 - v49));
    uint64_t v47 = v91;
    *(void *)(v9 + 16) = v94 - 1;
    uint64_t v8 = v106;
    if (v94 <= 2) {
      goto LABEL_105;
    }
  }
LABEL_110:
  uint64_t result = swift_bridgeObjectRelease();
  if (v105 < -1) {
    goto LABEL_150;
  }
  *(void *)(v104 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C672AA58(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C68ED798();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1C672B0D8(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1C666E4A8(v3 / 2);
  uint64_t v85 = a1;
  uint64_t v86 = result;
  uint64_t v90 = v6;
  uint64_t v88 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v28 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v28 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v88 >= -1)
      {
        *(void *)(v86 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v78 = *v85;
    while (1)
    {
      unint64_t v79 = v28 - 2;
      if (v28 < 2) {
        break;
      }
      if (!v78) {
        goto LABEL_133;
      }
      uint64_t v80 = *(void *)(v9 + 32 + 16 * v79);
      uint64_t v81 = *(void *)(v9 + 32 + 16 * (v28 - 1) + 8);
      uint64_t result = sub_1C672B2FC((char *)(v78 + 4 * v80), (char *)(v78 + 4 * *(void *)(v9 + 32 + 16 * (v28 - 1))), v78 + 4 * v81, v90);
      if (v1) {
        goto LABEL_86;
      }
      if (v81 < v80) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C676B0EC();
        uint64_t v9 = result;
      }
      if (v79 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v82 = (void *)(v9 + 32 + 16 * v79);
      *uint64_t v82 = v80;
      v82[1] = v81;
      unint64_t v83 = *(void *)(v9 + 16);
      if (v28 > v83) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v28 - 1)), (const void *)(v9 + 32 + 16 * v28), 16 * (v83 - v28));
      *(void *)(v9 + 16) = v83 - 1;
      unint64_t v28 = v83 - 1;
      if (v83 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v84 = *a1 - 4;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v87 = v5;
  uint64_t v89 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      float v11 = *(float *)(v8 + 4 * v7);
      float v12 = *(float *)(v8 + 4 * v10);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        float v13 = v11;
        while (1)
        {
          float v14 = v13;
          float v13 = *(float *)(v8 + 4 * v7);
          if (v11 < v12 == v13 >= v14) {
            break;
          }
          if (++v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v15 = (int *)(v84 + 4 * v7);
          uint64_t v16 = v7;
          uint64_t v17 = v10;
          uint64_t v18 = (int *)(v8 + 4 * v10);
          do
          {
            if (v17 != --v16)
            {
              if (!v8) {
                goto LABEL_132;
              }
              int v19 = *v18;
              *uint64_t v18 = *v15;
              *uint64_t v15 = v19;
            }
            ++v17;
            --v15;
            ++v18;
          }
          while (v17 < v16);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v20 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v20 >= v3) {
          uint64_t v20 = v3;
        }
        if (v20 < v10) {
          goto LABEL_128;
        }
        if (v7 != v20)
        {
          uint64_t v21 = (float *)(v84 + 4 * v7);
          do
          {
            float v22 = *(float *)(v8 + 4 * v7);
            uint64_t v23 = v10;
            uint64_t v24 = v21;
            do
            {
              float v25 = *v24;
              if (v22 >= *v24) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              *uint64_t v24 = v22;
              v24[1] = v25;
              --v24;
              ++v23;
            }
            while (v7 != v23);
            ++v7;
            ++v21;
          }
          while (v7 != v20);
          uint64_t v7 = v20;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C65C8578(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v27 = *(void *)(v9 + 16);
    unint64_t v26 = *(void *)(v9 + 24);
    unint64_t v28 = v27 + 1;
    uint64_t v8 = v89;
    if (v27 >= v26 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C65C8578((char *)(v26 > 1), v27 + 1, 1, (char *)v9);
      uint64_t v8 = v89;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v28;
    uint64_t v29 = v9 + 32;
    uint64_t v30 = (uint64_t *)(v9 + 32 + 16 * v27);
    *uint64_t v30 = v10;
    v30[1] = v7;
    if (v27) {
      break;
    }
    unint64_t v28 = 1;
LABEL_81:
    uint64_t v5 = v87;
    uint64_t v3 = v88;
    if (v7 >= v88) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v31 = v28 - 1;
    if (v28 >= 4)
    {
      unint64_t v36 = v29 + 16 * v28;
      uint64_t v37 = *(void *)(v36 - 64);
      uint64_t v38 = *(void *)(v36 - 56);
      BOOL v42 = __OFSUB__(v38, v37);
      uint64_t v39 = v38 - v37;
      if (v42) {
        goto LABEL_107;
      }
      uint64_t v41 = *(void *)(v36 - 48);
      uint64_t v40 = *(void *)(v36 - 40);
      BOOL v42 = __OFSUB__(v40, v41);
      uint64_t v34 = v40 - v41;
      char v35 = v42;
      if (v42) {
        goto LABEL_108;
      }
      unint64_t v43 = v28 - 2;
      unint64_t v44 = (uint64_t *)(v29 + 16 * (v28 - 2));
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      BOOL v42 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      if (v42) {
        goto LABEL_109;
      }
      BOOL v42 = __OFADD__(v34, v47);
      uint64_t v48 = v34 + v47;
      if (v42) {
        goto LABEL_111;
      }
      if (v48 >= v39)
      {
        uint64_t v66 = (uint64_t *)(v29 + 16 * v31);
        uint64_t v68 = *v66;
        uint64_t v67 = v66[1];
        BOOL v42 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v42) {
          goto LABEL_117;
        }
        BOOL v59 = v34 < v69;
        goto LABEL_70;
      }
    }
    else
    {
      if (v28 != 3)
      {
        uint64_t v60 = *(void *)(v9 + 32);
        uint64_t v61 = *(void *)(v9 + 40);
        BOOL v42 = __OFSUB__(v61, v60);
        uint64_t v53 = v61 - v60;
        char v54 = v42;
        goto LABEL_64;
      }
      uint64_t v33 = *(void *)(v9 + 32);
      uint64_t v32 = *(void *)(v9 + 40);
      BOOL v42 = __OFSUB__(v32, v33);
      uint64_t v34 = v32 - v33;
      char v35 = v42;
    }
    if (v35) {
      goto LABEL_110;
    }
    unint64_t v43 = v28 - 2;
    unint64_t v49 = (uint64_t *)(v29 + 16 * (v28 - 2));
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    BOOL v52 = __OFSUB__(v50, v51);
    uint64_t v53 = v50 - v51;
    char v54 = v52;
    if (v52) {
      goto LABEL_112;
    }
    uint64_t v55 = (uint64_t *)(v29 + 16 * v31);
    uint64_t v57 = *v55;
    uint64_t v56 = v55[1];
    BOOL v42 = __OFSUB__(v56, v57);
    uint64_t v58 = v56 - v57;
    if (v42) {
      goto LABEL_114;
    }
    if (__OFADD__(v53, v58)) {
      goto LABEL_116;
    }
    if (v53 + v58 >= v34)
    {
      BOOL v59 = v34 < v58;
LABEL_70:
      if (v59) {
        unint64_t v31 = v43;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v54) {
      goto LABEL_113;
    }
    BOOL v62 = (uint64_t *)(v29 + 16 * v31);
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v42 = __OFSUB__(v63, v64);
    uint64_t v65 = v63 - v64;
    if (v42) {
      goto LABEL_115;
    }
    if (v65 < v53) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v70 = v9;
    unint64_t v71 = v31 - 1;
    if (v31 - 1 >= v28)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    char v72 = (uint64_t *)(v29 + 16 * v71);
    uint64_t v73 = *v72;
    uint64_t v74 = v29;
    uint64_t v75 = (void *)(v29 + 16 * v31);
    uint64_t v76 = v75[1];
    uint64_t result = sub_1C672B2FC((char *)(v8 + 4 * *v72), (char *)(v8 + 4 * *v75), v8 + 4 * v76, v90);
    if (v1) {
      break;
    }
    if (v76 < v73) {
      goto LABEL_104;
    }
    if (v31 > *(void *)(v70 + 16)) {
      goto LABEL_105;
    }
    *char v72 = v73;
    *(void *)(v74 + 16 * v71 + 8) = v76;
    unint64_t v77 = *(void *)(v70 + 16);
    if (v31 >= v77) {
      goto LABEL_106;
    }
    uint64_t v9 = v70;
    unint64_t v28 = v77 - 1;
    uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v31));
    uint64_t v29 = v74;
    *(void *)(v70 + 16) = v77 - 1;
    uint64_t v8 = v89;
    if (v77 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v88 < -1) {
    goto LABEL_125;
  }
  *(void *)(v86 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C672B03C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 40 * a3;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 40 * a3 + 32);
      uint64_t v7 = v5;
      uint64_t v8 = result;
      do
      {
        uint64_t v9 = *(void *)(v7 - 8);
        if (v9 >= v6 && (v6 != v9 || *(float *)(v7 + 24) >= *(float *)(v7 - 16))) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = *(void *)v7;
        uint64_t v12 = *(void *)(v7 + 8);
        uint64_t v13 = *(void *)(v7 + 16);
        int v14 = *(_DWORD *)(v7 + 24);
        long long v15 = *(_OWORD *)(v7 - 24);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 40);
        *(_OWORD *)(v7 + 16) = v15;
        *(void *)(v7 + 32) = *(void *)(v7 - 8);
        *(void *)(v7 - 32) = v12;
        *(void *)(v7 - 24) = v13;
        *(_DWORD *)(v7 - 16) = v14;
        *(void *)(v7 - 8) = v6;
        *(void *)(v7 - 40) = v11;
        v7 -= 40;
        ++v8;
      }
      while (a3 != v8);
      ++a3;
      v5 += 40;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C672B0D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 4 * a3 - 4;
    while (2)
    {
      float v6 = *(float *)(v4 + 4 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (float *)v5;
      do
      {
        float v9 = *v8;
        if (v6 >= *v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *uint64_t v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 4;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C672B130(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  float v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  if (v9 >= v11)
  {
    sub_1C669C470(a2, (uint64_t)(a3 - (void)a2) / 40, a4);
    uint64_t v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_49;
    }
    unint64_t v23 = a3 - 40;
    while (1)
    {
      uint64_t v24 = (char *)(v23 + 40);
      uint64_t v25 = *((void *)v12 - 1);
      uint64_t v26 = *((void *)v6 - 1);
      if (v26 < v25 || (v25 == v26 ? (BOOL v27 = *((float *)v12 - 4) < *((float *)v6 - 4)) : (BOOL v27 = 0), v27))
      {
        unint64_t v28 = v6 - 40;
        BOOL v30 = v24 != v6 || v23 >= (unint64_t)v6;
        v6 -= 40;
        if (!v30) {
          goto LABEL_45;
        }
      }
      else
      {
        unint64_t v28 = v12 - 40;
        BOOL v29 = v24 != v12 || v23 >= (unint64_t)v12;
        v12 -= 40;
        if (!v29) {
          goto LABEL_45;
        }
      }
      long long v31 = *(_OWORD *)v28;
      long long v32 = *((_OWORD *)v28 + 1);
      *(void *)(v23 + 32) = *((void *)v28 + 4);
      *(_OWORD *)unint64_t v23 = v31;
      *(_OWORD *)(v23 + 16) = v32;
LABEL_45:
      v23 -= 40;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_49;
      }
    }
  }
  sub_1C669C470(a1, (a2 - a1) / 40, a4);
  uint64_t v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    do
    {
      uint64_t v13 = *((void *)v6 + 4);
      uint64_t v14 = *((void *)v4 + 4);
      if (v14 < v13 || (v13 == v14 ? (BOOL v15 = *((float *)v6 + 6) < *((float *)v4 + 6)) : (BOOL v15 = 0), v15))
      {
        BOOL v16 = v7 == v6;
        uint64_t v17 = v6;
        v6 += 40;
        if (v16 && v7 < v6) {
          goto LABEL_20;
        }
      }
      else
      {
        BOOL v16 = v7 == v4;
        uint64_t v17 = v4;
        v4 += 40;
        if (v16 && v7 < v4) {
          goto LABEL_20;
        }
      }
      long long v20 = *(_OWORD *)v17;
      long long v21 = *((_OWORD *)v17 + 1);
      *((void *)v7 + 4) = *((void *)v17 + 4);
      *(_OWORD *)uint64_t v7 = v20;
      *((_OWORD *)v7 + 1) = v21;
LABEL_20:
      v7 += 40;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  float v6 = v7;
LABEL_49:
  sub_1C669C470(v4, (v12 - v4) / 40, v6);
  return 1;
}

uint64_t sub_1C672B2FC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  float v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 4;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 4;
  if (v9 >= v11)
  {
    sub_1C669C414(a2, (uint64_t)(a3 - (void)a2) / 4, a4);
    uint64_t v12 = &v4[4 * v11];
    if (v7 >= v6 || v10 < 4) {
      goto LABEL_39;
    }
    uint64_t v18 = (float *)(a3 - 4);
    while (1)
    {
      int v19 = (char *)(v18 + 1);
      float v20 = *((float *)v6 - 1);
      if (*((float *)v12 - 1) >= v20)
      {
        BOOL v22 = v19 != v12 || v18 >= (float *)v12;
        float v20 = *((float *)v12 - 1);
        v12 -= 4;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= (float *)v6;
        v6 -= 4;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *uint64_t v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_1C669C414(a1, (a2 - a1) / 4, a4);
  uint64_t v12 = &v4[4 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      float v14 = *(float *)v6;
      if (*(float *)v6 < *(float *)v4) {
        break;
      }
      float v14 = *(float *)v4;
      BOOL v15 = v7 == v4;
      v4 += 4;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 4;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6;
    v6 += 4;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *(float *)uint64_t v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  float v6 = v7;
LABEL_39:
  sub_1C669C414(v4, (v12 - v4) / 4, v6);
  return 1;
}

void (*sub_1C672B478(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  float v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C672B744(v6);
  v6[10] = sub_1C672B58C(v6 + 4, a2, a3);
  return sub_1C672B524;
}

void sub_1C672B524(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  uint64_t v3 = OUTLINED_FUNCTION_12_30();
  v2(v3);

  free(v1);
}

void (*sub_1C672B58C(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x50uLL);
  *a1 = v8;
  v8[6] = a3;
  v8[7] = v3;
  v8[5] = a2;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_1C68506A0(a2, a3);
  *((unsigned char *)v8 + 72) = v11 & 1;
  if (__OFADD__(*(void *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4084A0);
  if (sub_1C68ED4D8())
  {
    unint64_t v14 = sub_1C68506A0(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      unint64_t v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **))sub_1C68ED868();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[8] = v12;
  if (v13)
  {
    uint64_t v16 = *(void *)(*v4 + 56) + 40 * v12;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(unsigned int *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  *uint64_t v8 = v17;
  v8[1] = v18;
  void v8[2] = v19;
  v8[3] = v20;
  v8[4] = v21;
  return sub_1C672B6EC;
}

void sub_1C672B6EC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1C672B780(*a1, *((unsigned char *)*a1 + 72), (void **)(*a1)[7], (*a1)[8], (*a1)[5], (*a1)[6]);
  sub_1C672B8A0(*v1);

  free(v1);
}

uint64_t (*sub_1C672B744(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1C672B774;
}

uint64_t sub_1C672B774(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1C672B780(uint64_t *a1, char a2, void **a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v10 = a1[4];
  if (*a1)
  {
    *(void *)&long long v14 = *a1;
    *((void *)&v14 + 1) = v7;
    *(void *)&long long v15 = v9;
    DWORD2(v15) = v8;
    uint64_t v16 = v10;
    if (a2)
    {
      uint64_t v11 = (*a3)[7] + 40 * a4;
      long long v12 = v15;
      *(_OWORD *)uint64_t v11 = v14;
      *(_OWORD *)(v11 + 16) = v12;
      *(void *)(v11 + 32) = v16;
    }
    else
    {
      sub_1C6853CE8(a4, a5, a6, (uint64_t)&v14, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1C68ED4F8();
  }

  return sub_1C672B8E0(v6);
}

uint64_t sub_1C672B8A0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C672B8E0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for VectorDbPayload()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VectorDbPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VectorDbPayload(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for VectorDbPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VectorDbPayload(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VectorDbPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VectorDbPayload()
{
  return &type metadata for VectorDbPayload;
}

uint64_t destroy for RetrievalResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RetrievalResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RetrievalResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RetrievalResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RetrievalResult(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RetrievalResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RetrievalResult()
{
  return &type metadata for RetrievalResult;
}

unint64_t sub_1C672BDA0()
{
  unint64_t result = qword_1EA4084B0;
  if (!qword_1EA4084B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4084B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VectorDbPayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C672BEB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VectorDbPayload.CodingKeys()
{
  return &type metadata for VectorDbPayload.CodingKeys;
}

unint64_t sub_1C672BEF4()
{
  unint64_t result = qword_1EA4084B8;
  if (!qword_1EA4084B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4084B8);
  }
  return result;
}

unint64_t sub_1C672BF44()
{
  unint64_t result = qword_1EA4084C0;
  if (!qword_1EA4084C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4084C0);
  }
  return result;
}

unint64_t sub_1C672BF94()
{
  unint64_t result = qword_1EA4084C8;
  if (!qword_1EA4084C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4084C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_59()
{
  return v0;
}

char *OUTLINED_FUNCTION_6_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

void (*OUTLINED_FUNCTION_7_39(uint64_t a1, uint64_t a2, uint64_t a3, ...))(void **a1)
{
  va_start(va, a3);
  return sub_1C6727BD8(va, v4, v3);
}

uint64_t OUTLINED_FUNCTION_11_31()
{
  return sub_1C68ED618();
}

uint64_t OUTLINED_FUNCTION_12_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_28()
{
  return v0;
}

void *sub_1C672C07C(unint64_t a1, char a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA05B0]), sel_init);
  uint64_t v5 = v4;
  if (a1 != 2) {
    objc_msgSend(v4, sel_setIsAsrE3Invoked_, a1 & 1);
  }
  if ((a2 & 1) == 0) {
    objc_msgSend(v5, sel_setNumEuclidCandidates_, HIDWORD(a1));
  }
  return v5;
}

id sub_1C672C100()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C68E9BF8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  long long v12 = (char *)v59 - v11;
  MEMORY[0x1F4188790](v10);
  long long v14 = (char *)v59 - v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA05A0]), sel_init);
  sub_1C65BB0BC(v1, (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1C65BB174((uint64_t)v4);
    if (!v15) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  if (v15)
  {
    sub_1C65BAD10(0, (unint64_t *)&qword_1EA406208);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v14, v5);
    id v16 = v15;
    id v17 = sub_1C65BAD8C((uint64_t)v12);
    objc_msgSend(v16, sel_setTemplateId_, v17);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  if (v15)
  {
LABEL_7:
    uint64_t v18 = *(void *)(v1 + *(int *)(type metadata accessor for InferenceEuclidDebugMetrics(0) + 20));
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v60 = v1;
      uint64_t v68 = MEMORY[0x1E4FBC860];
      id v61 = v15;
      id v20 = v15;
      swift_bridgeObjectRetain();
      sub_1C68ED458();
      uint64_t v21 = sub_1C65BAD10(0, (unint64_t *)&qword_1EA406208);
      unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      uint64_t v22 = v6 + 16;
      uint64_t v63 = v23;
      uint64_t v64 = v21;
      uint64_t v24 = *(unsigned __int8 *)(v22 + 64);
      v59[1] = v18;
      uint64_t v25 = (char *)(v18 + ((v24 + 32) & ~v24));
      uint64_t v62 = *(void *)(v22 + 56);
      do
      {
        uint64_t v26 = v63;
        v63(v12, v25, v5);
        v26(v9, v12, v5);
        sub_1C65BAD8C((uint64_t)v9);
        (*(void (**)(char *, uint64_t))(v22 - 8))(v12, v5);
        sub_1C68ED428();
        sub_1C68ED468();
        sub_1C68ED478();
        sub_1C68ED438();
        v25 += v62;
        --v19;
      }
      while (v19);
      uint64_t v27 = v68;
      swift_bridgeObjectRelease();
      uint64_t v1 = v60;
      id v15 = v61;
    }
    else
    {
      id v28 = v15;
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    sub_1C672C958(v27, v15, (unint64_t *)&qword_1EA406208, 0x1E4FA1370, (SEL *)&selRef_setMatchedTemplateIds_);
  }
LABEL_13:
  uint64_t v29 = type metadata accessor for InferenceEuclidDebugMetrics(0);
  BOOL v30 = (int *)v29;
  if (v15)
  {
    uint64_t v31 = v1 + *(int *)(v29 + 24);
    if ((*(unsigned char *)(v31 + 29) & 1) == 0)
    {
      char v32 = *(unsigned char *)(v31 + 28);
      uint64_t v34 = *(void *)(v31 + 8);
      uint64_t v33 = *(void *)(v31 + 16);
      uint64_t v35 = *(void *)v31;
      id v36 = v15;
      LOBYTE(v68) = BYTE4(v35) & 1;
      char v67 = BYTE4(v34) & 1;
      char v66 = BYTE4(v33) & 1;
      char v65 = v32 & 1;
      uint64_t v37 = sub_1C672C79C();
      objc_msgSend(v36, sel_setEuclidScoreStatistics_, v37);
    }
  }
  if (v15)
  {
    uint64_t v38 = v1 + v30[7];
    if (*(void *)(v38 + 8) != 1)
    {
      char v39 = *(unsigned char *)(v38 + 28);
      uint64_t v40 = *(void *)(v38 + 16);
      id v41 = v15;
      LOBYTE(v68) = BYTE4(v40) & 1;
      char v67 = v39 & 1;
      BOOL v42 = sub_1C672C85C();
      objc_msgSend(v41, sel_setEuclidTrialParameters_, v42);
    }
  }
  uint64_t v43 = *(void *)(v1 + v30[8]);
  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v44; ++i)
    {
      if (v15)
      {
        uint64_t v46 = *(void *)(v43 + 8 * i + 32);
        unsigned int v47 = v46 == 1;
        if (v46 == 2) {
          unsigned int v47 = 2;
        }
        if (v46 == 32) {
          uint64_t v48 = 3;
        }
        else {
          uint64_t v48 = v47;
        }
        objc_msgSend(v15, sel_addEuclidEntityTypeMatched_, v48);
      }
    }
    swift_bridgeObjectRelease();
  }
  int v49 = *(unsigned __int8 *)(v1 + v30[9]);
  if (v49 != 2) {
    objc_msgSend(v15, sel_setIsLmePresent_, v49 & 1);
  }
  if (v15)
  {
    uint64_t v50 = *(void *)(v1 + v30[10]);
    uint64_t v51 = *(void *)(v50 + 16);
    if (v51)
    {
      uint64_t v68 = MEMORY[0x1E4FBC860];
      id v61 = v15;
      id v52 = v15;
      swift_bridgeObjectRetain();
      sub_1C68ED458();
      uint64_t v53 = 0;
      do
      {
        uint64_t v54 = v53 + 1;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, *(unsigned int *)(v50 + 4 * v53 + 32));
        sub_1C68ED428();
        sub_1C68ED468();
        sub_1C68ED478();
        sub_1C68ED438();
        uint64_t v53 = v54;
      }
      while (v51 != v54);
      uint64_t v55 = v68;
      swift_bridgeObjectRelease();
      id v15 = v61;
    }
    else
    {
      id v56 = v15;
      uint64_t v55 = MEMORY[0x1E4FBC860];
    }
    sub_1C672C958(v55, v15, (unint64_t *)&qword_1EBBF6090, 0x1E4F28ED0, (SEL *)&selRef_setTokenWiseAsrConfidences_);
  }
  uint64_t v57 = (unsigned int *)(v1 + v30[11]);
  if ((v57[1] & 1) == 0) {
    objc_msgSend(v15, sel_setNumRowsVectorDb_, *v57);
  }
  return v15;
}

uint64_t type metadata accessor for InferenceEuclidDebugMetrics(uint64_t a1)
{
  return sub_1C65B1F9C(a1, (uint64_t *)&unk_1EA4084D0);
}

void *sub_1C672C79C()
{
  OUTLINED_FUNCTION_2_54();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA05A8]), sel_init);
  uint64_t v6 = v4;
  if ((v3 & 0x100000000) != 0)
  {
    if ((v2 & 0x100000000) != 0) {
      goto LABEL_3;
    }
  }
  else
  {
    LODWORD(v5) = v3;
    objc_msgSend(v4, sel_setMinScore_, v5);
    if ((v2 & 0x100000000) != 0)
    {
LABEL_3:
      if ((v1 & 0x100000000) != 0) {
        goto LABEL_4;
      }
LABEL_9:
      LODWORD(v5) = v1;
      objc_msgSend(v6, sel_setMedianScore_, v5);
      if ((v0 & 0x100000000) != 0) {
        return v6;
      }
      goto LABEL_5;
    }
  }
  LODWORD(v5) = v2;
  objc_msgSend(v6, sel_setMaxScore_, v5);
  if ((v1 & 0x100000000) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v0 & 0x100000000) == 0)
  {
LABEL_5:
    LODWORD(v5) = v0;
    objc_msgSend(v6, sel_setMeanScore_, v5);
  }
  return v6;
}

void *sub_1C672C85C()
{
  OUTLINED_FUNCTION_2_54();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA05B8]), sel_init);
  uint64_t v6 = v4;
  if (v2 && v4)
  {
    id v7 = v4;
    sub_1C672C900(v3, v2, v7);
  }
  if ((v1 & 0x100000000) == 0)
  {
    LODWORD(v5) = v1;
    objc_msgSend(v6, sel_setEuclidScoreThreshold_, v5);
  }
  if ((v0 & 0x100000000) == 0)
  {
    LODWORD(v5) = v0;
    objc_msgSend(v6, sel_setEuclidAsrConfidenceThreshold_, v5);
  }
  return v6;
}

void sub_1C672C900(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C68EC868();
  objc_msgSend(a3, sel_setEuclidModelVersion_, v4);
}

void sub_1C672C958(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  sub_1C65BAD10(0, a3);
  id v7 = (id)sub_1C68ECBD8();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a5, v7);
}

void type metadata accessor for EuclidEntityTypeMatched()
{
}

uint64_t *sub_1C672C9E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C68E9BF8();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v11 = (_OWORD *)((char *)a1 + v10);
    long long v12 = (_OWORD *)((char *)a2 + v10);
    *uint64_t v11 = *v12;
    *(_OWORD *)((char *)v11 + 14) = *(_OWORD *)((char *)v12 + 14);
    uint64_t v13 = a3[7];
    long long v14 = (char *)a1 + v13;
    id v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v16 == 1)
    {
      *(_OWORD *)long long v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
    }
    else
    {
      *(void *)long long v14 = *(void *)v15;
      *((void *)v14 + 1) = v16;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      v14[20] = v15[20];
      *((_DWORD *)v14 + 6) = *((_DWORD *)v15 + 6);
      v14[28] = v15[28];
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v18 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v19 = (char *)a1 + v18;
    id v20 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C672CBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C68E9BF8();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_1C672CC98(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C68E9BF8();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 14) = *(_OWORD *)(v10 + 14);
  uint64_t v11 = a3[7];
  long long v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)&a2[v11 + 8];
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    *(_OWORD *)long long v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 13) = *(_OWORD *)(v13 + 13);
  }
  else
  {
    *(void *)long long v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v12[20] = v13[20];
    *((_DWORD *)v12 + 6) = *((_DWORD *)v13 + 6);
    v12[28] = v13[28];
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  a1[v15] = a2[v15];
  uint64_t v16 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1C672CE34(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C68E9BF8();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  long long v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 14) = *(_OWORD *)(v13 + 14);
  *(_OWORD *)long long v12 = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (uint64_t)&a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)&a1[v15 + 8];
  uint64_t v19 = *(void *)&a2[v15 + 8];
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      long long v20 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 13) = *(_OWORD *)(v17 + 13);
      *(_OWORD *)uint64_t v16 = v20;
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      int v22 = *((_DWORD *)v17 + 4);
      *(unsigned char *)(v16 + 20) = v17[20];
      *(_DWORD *)(v16 + 16) = v22;
      int v23 = *((_DWORD *)v17 + 6);
      *(unsigned char *)(v16 + 28) = v17[28];
      *(_DWORD *)(v16 + 24) = v23;
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1C6620378(v16);
    long long v21 = *(_OWORD *)(v17 + 13);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 13) = v21;
  }
  else
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    int v24 = *((_DWORD *)v17 + 4);
    *(unsigned char *)(v16 + 20) = v17[20];
    *(_DWORD *)(v16 + 16) = v24;
    int v25 = *((_DWORD *)v17 + 6);
    *(unsigned char *)(v16 + 28) = v17[28];
    *(_DWORD *)(v16 + 24) = v25;
  }
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v26];
  id v28 = &a2[v26];
  int v29 = *(_DWORD *)v28;
  v27[4] = v28[4];
  *(_DWORD *)uint64_t v27 = v29;
  return a1;
}

char *sub_1C672D0F0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C68E9BF8();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 14) = *(_OWORD *)(v10 + 14);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v11];
  long long v14 = &a2[v11];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 13) = *(_OWORD *)(v14 + 13);
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v15 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  v17[4] = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  return a1;
}

char *sub_1C672D234(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C68E9BF8();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v11];
  long long v14 = &a2[v11];
  *(_OWORD *)(v13 + 14) = *(_OWORD *)(v14 + 14);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  uint64_t v15 = &a1[v12];
  uint64_t v16 = &a2[v12];
  if (*(void *)&a1[v12 + 8] != 1)
  {
    uint64_t v17 = *((void *)v16 + 1);
    if (v17 != 1)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v17;
      swift_bridgeObjectRelease();
      *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
      v15[20] = v16[20];
      *((_DWORD *)v15 + 6) = *((_DWORD *)v16 + 6);
      v15[28] = v16[28];
      goto LABEL_12;
    }
    sub_1C6620378((uint64_t)&a1[v12]);
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 13) = *(_OWORD *)(v16 + 13);
LABEL_12:
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[11];
  long long v20 = &a1[v19];
  long long v21 = &a2[v19];
  *(_DWORD *)long long v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  return a1;
}

uint64_t sub_1C672D46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C672D480);
}

uint64_t sub_1C672D480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1C672D510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C672D524);
}

void sub_1C672D524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1C672D5B0()
{
  sub_1C672D674();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C672D674()
{
  if (!qword_1EA407940)
  {
    sub_1C68E9BF8();
    unint64_t v0 = sub_1C68ED098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA407940);
    }
  }
}

uint64_t sub_1C672D6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C672D71C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  int v5 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C672D7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t sub_1C672D7F8(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 29))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C672D84C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for EuclidTrialParameters()
{
}

void *sub_1C672D8B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C68E9BF8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
    *(void *)&v6[v11[5]] = *(void *)&v7[v11[5]];
    uint64_t v12 = v11[6];
    uint64_t v13 = &v6[v12];
    long long v14 = &v7[v12];
    *(_OWORD *)(v13 + 14) = *(_OWORD *)(v14 + 14);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    uint64_t v15 = v11[7];
    uint64_t v16 = &v6[v15];
    uint64_t v17 = &v7[v15];
    uint64_t v18 = *(void *)&v7[v15 + 8];
    swift_bridgeObjectRetain();
    if (v18 == 1)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 13) = *(_OWORD *)(v17 + 13);
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
      v16[20] = v17[20];
      *((_DWORD *)v16 + 6) = *((_DWORD *)v17 + 6);
      v16[28] = v17[28];
      swift_bridgeObjectRetain();
    }
    *(void *)&v6[v11[8]] = *(void *)&v7[v11[8]];
    v6[v11[9]] = v7[v11[9]];
    *(void *)&v6[v11[10]] = *(void *)&v7[v11[10]];
    uint64_t v19 = v11[11];
    long long v20 = &v6[v19];
    long long v21 = &v7[v19];
    *(_DWORD *)long long v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1C672DAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1C68E9BF8();
  if (!__swift_getEnumTagSinglePayload(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  }
  uint64_t v4 = type metadata accessor for InferenceEuclidDebugMetrics(0);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + *(int *)(v4 + 28) + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C672DB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = sub_1C68E9BF8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  uint64_t v9 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(void *)&v5[v9[5]] = *(void *)&v6[v9[5]];
  uint64_t v10 = v9[6];
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  *(_OWORD *)(v11 + 14) = *(_OWORD *)(v12 + 14);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  uint64_t v13 = v9[7];
  long long v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  uint64_t v16 = *(void *)&v6[v13 + 8];
  swift_bridgeObjectRetain();
  if (v16 == 1)
  {
    *(_OWORD *)long long v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
  }
  else
  {
    *(void *)long long v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
    v14[20] = v15[20];
    *((_DWORD *)v14 + 6) = *((_DWORD *)v15 + 6);
    v14[28] = v15[28];
    swift_bridgeObjectRetain();
  }
  *(void *)&v5[v9[8]] = *(void *)&v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  *(void *)&v5[v9[10]] = *(void *)&v6[v9[10]];
  uint64_t v17 = v9[11];
  uint64_t v18 = &v5[v17];
  uint64_t v19 = &v6[v17];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C672DD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  uint64_t v8 = sub_1C68E9BF8();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  int v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v8 - 8);
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v8);
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v6, v7, v8);
LABEL_7:
  uint64_t v13 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(void *)&v6[v13[5]] = *(void *)&v7[v13[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13[6];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  long long v17 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 14) = *(_OWORD *)(v16 + 14);
  *(_OWORD *)uint64_t v15 = v17;
  uint64_t v18 = v13[7];
  uint64_t v19 = (uint64_t)&v6[v18];
  long long v20 = &v7[v18];
  uint64_t v21 = *(void *)&v6[v18 + 8];
  uint64_t v22 = *(void *)&v7[v18 + 8];
  if (v21 == 1)
  {
    if (v22 == 1)
    {
      long long v23 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 13) = *(_OWORD *)(v20 + 13);
      *(_OWORD *)uint64_t v19 = v23;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      int v25 = *((_DWORD *)v20 + 4);
      *(unsigned char *)(v19 + 20) = v20[20];
      *(_DWORD *)(v19 + 16) = v25;
      int v26 = *((_DWORD *)v20 + 6);
      *(unsigned char *)(v19 + 28) = v20[28];
      *(_DWORD *)(v19 + 24) = v26;
      swift_bridgeObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_1C6620378(v19);
    long long v24 = *(_OWORD *)(v20 + 13);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 13) = v24;
  }
  else
  {
    *(void *)uint64_t v19 = *(void *)v20;
    *(void *)(v19 + 8) = *((void *)v20 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    int v27 = *((_DWORD *)v20 + 4);
    *(unsigned char *)(v19 + 20) = v20[20];
    *(_DWORD *)(v19 + 16) = v27;
    int v28 = *((_DWORD *)v20 + 6);
    *(unsigned char *)(v19 + 28) = v20[28];
    *(_DWORD *)(v19 + 24) = v28;
  }
  *(void *)&v6[v13[8]] = *(void *)&v7[v13[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v13[9]] = v7[v13[9]];
  *(void *)&v6[v13[10]] = *(void *)&v7[v13[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v13[11];
  BOOL v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  int v32 = *(_DWORD *)v31;
  v30[4] = v31[4];
  *(_DWORD *)BOOL v30 = v32;
  return a1;
}

uint64_t sub_1C672E058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = sub_1C68E9BF8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  uint64_t v9 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(void *)&v5[v9[5]] = *(void *)&v6[v9[5]];
  uint64_t v10 = v9[6];
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  *(_OWORD *)(v11 + 14) = *(_OWORD *)(v12 + 14);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  uint64_t v13 = v9[7];
  uint64_t v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)&v5[v9[8]] = *(void *)&v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  *(void *)&v5[v9[10]] = *(void *)&v6[v9[10]];
  uint64_t v16 = v9[11];
  long long v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  v17[4] = v18[4];
  *(_DWORD *)long long v17 = *(_DWORD *)v18;
  return a1;
}

uint64_t sub_1C672E1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = sub_1C68E9BF8();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  int v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(v7 - 8);
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6510);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v5, v6, v7);
LABEL_7:
  uint64_t v12 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(void *)&v5[v12[5]] = *(void *)&v6[v12[5]];
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[6];
  uint64_t v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  *(_OWORD *)(v14 + 14) = *(_OWORD *)(v15 + 14);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  uint64_t v16 = v12[7];
  uint64_t v17 = (uint64_t)&v5[v16];
  uint64_t v18 = &v6[v16];
  if (*(void *)&v5[v16 + 8] != 1)
  {
    uint64_t v19 = *((void *)v18 + 1);
    if (v19 != 1)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *(void *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v17 + 16) = *((_DWORD *)v18 + 4);
      *(unsigned char *)(v17 + 20) = v18[20];
      *(_DWORD *)(v17 + 24) = *((_DWORD *)v18 + 6);
      *(unsigned char *)(v17 + 28) = v18[28];
      goto LABEL_12;
    }
    sub_1C6620378(v17);
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 13) = *(_OWORD *)(v18 + 13);
LABEL_12:
  *(void *)&v5[v12[8]] = *(void *)&v6[v12[8]];
  swift_bridgeObjectRelease();
  v5[v12[9]] = v6[v12[9]];
  *(void *)&v5[v12[10]] = *(void *)&v6[v12[10]];
  swift_bridgeObjectRelease();
  uint64_t v20 = v12[11];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  return a1;
}

uint64_t sub_1C672E42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C672E440);
}

uint64_t sub_1C672E440(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      int v5 = ((v4 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v5 = -2;
    }
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for InferenceEuclidDebugMetrics(0);
    uint64_t v10 = (uint64_t)&a1[*(int *)(a3 + 20)];
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

uint64_t sub_1C672E4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C672E4F0);
}

unsigned char *sub_1C672E4F0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 253)
  {
    *__n128 result = a2 + 2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for InferenceEuclidDebugMetrics(0);
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 20)];
    return (unsigned char *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for InferenceEuclidLog(uint64_t a1)
{
  return sub_1C65B1F9C(a1, (uint64_t *)&unk_1EA4084E0);
}

uint64_t sub_1C672E58C()
{
  uint64_t result = type metadata accessor for InferenceEuclidDebugMetrics(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy29_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C672E638(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C672E658(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 29) = v3;
  return result;
}

void type metadata accessor for EuclidScoreStatistics()
{
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_1C672E6AC(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && a1[9])
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *a1;
      if (v3 >= 2) {
        int v2 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
      }
      else {
        int v2 = -2;
      }
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C672E704(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

void type metadata accessor for InferenceEuclidServiceMetrics()
{
}

uint64_t initializeWithCopy for E3TrialFactors(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for E3TrialFactors(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for E3TrialFactors(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for E3TrialFactors(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for E3TrialFactors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E3TrialFactors()
{
  return &type metadata for E3TrialFactors;
}

uint64_t sub_1C672E94C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    goto LABEL_12;
  }
  BOOL v4 = *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
  if (v4 || (char v5 = sub_1C68ED7E8(), v6 = 0, (v5 & 1) != 0))
  {
    if (*((void *)a1 + 3) == *((void *)a2 + 3)
      && *((void *)a1 + 4) == *((void *)a2 + 4)
      && *((double *)a1 + 5) == *((double *)a2 + 5)
      && *((double *)a1 + 6) == *((double *)a2 + 6))
    {
      char v6 = ((a1[56] & 1) == 0) ^ a2[56];
      return v6 & 1;
    }
LABEL_12:
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C672EA08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4533457273417369 && a2 == 0xEE0064656C62616ELL;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C6915C90 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C6915CB0 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C6915CD0 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C6915CF0 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C6915D10 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C6915D30)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C68ED7E8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_1C672ECC8(char a1)
{
  unint64_t result = 0x4533457273417369;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C672EDBC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408500);
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C672F388();
  sub_1C68EDA08();
  v10[15] = 0;
  sub_1C68ED718();
  if (!v1)
  {
    v10[14] = 1;
    sub_1C68ED708();
    v10[13] = 2;
    sub_1C68ED768();
    v10[12] = 3;
    sub_1C68ED768();
    v10[11] = 4;
    sub_1C68ED728();
    v10[10] = 5;
    sub_1C68ED728();
    v10[9] = 6;
    sub_1C68ED718();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1C672EFBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4084F0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C672F388();
  sub_1C68ED9E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v6 = sub_1C68ED628();
  uint64_t v7 = sub_1C68ED618();
  uint64_t v9 = v8;
  uint64_t v20 = v7;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C68ED678();
  uint64_t v18 = sub_1C68ED678();
  sub_1C68ED638();
  uint64_t v11 = v10;
  sub_1C68ED638();
  uint64_t v13 = v12;
  char v14 = sub_1C68ED628();
  uint64_t v15 = OUTLINED_FUNCTION_1_60();
  v16(v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v6 & 1;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v13;
  *(unsigned char *)(a2 + 56) = v14 & 1;
  return result;
}

unint64_t sub_1C672F278()
{
  return sub_1C672ECC8(*v0);
}

uint64_t sub_1C672F280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C672EA08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C672F2A8(uint64_t a1)
{
  unint64_t v2 = sub_1C672F388();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C672F2E4(uint64_t a1)
{
  unint64_t v2 = sub_1C672F388();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C672F320@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C672EFBC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1C672F36C(void *a1)
{
  return sub_1C672EDBC(a1);
}

unint64_t sub_1C672F388()
{
  unint64_t result = qword_1EA4084F8;
  if (!qword_1EA4084F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4084F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for E3TrialFactors.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C672F4A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E3TrialFactors.CodingKeys()
{
  return &type metadata for E3TrialFactors.CodingKeys;
}

unint64_t sub_1C672F4DC()
{
  unint64_t result = qword_1EA408508;
  if (!qword_1EA408508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408508);
  }
  return result;
}

unint64_t sub_1C672F52C()
{
  unint64_t result = qword_1EA408510;
  if (!qword_1EA408510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408510);
  }
  return result;
}

unint64_t sub_1C672F57C()
{
  unint64_t result = qword_1EA408518;
  if (!qword_1EA408518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408518);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_60()
{
  return v0;
}

uint64_t *sub_1C672F5E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C68E9C68();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v12 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    uint64_t v13 = &v10[v12];
    char v14 = &v11[v12];
    swift_retain();
    v8((uint64_t *)v13, (uint64_t *)v14, v7);
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
    id v17 = v16;
  }
  return a1;
}

void sub_1C672F714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C68E9C68();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  swift_release();
  uint64_t v7 = type metadata accessor for StringTokenizer();
  v5(v6 + *(int *)(v7 + 20), v4);
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1C672F7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9C68();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v11 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = v10 + v11;
  swift_retain();
  v7(v12, v13, v6);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  id v16 = v15;
  return a1;
}

uint64_t sub_1C672F8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9C68();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_retain();
  swift_release();
  uint64_t v11 = type metadata accessor for StringTokenizer();
  v7(v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = *(void **)(a2 + v12);
  uint64_t v14 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = v13;
  id v15 = v13;

  return a1;
}

uint64_t sub_1C672F99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9C68();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for StringTokenizer();
  v7(v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C672FA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C68E9C68();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_release();
  uint64_t v11 = type metadata accessor for StringTokenizer();
  v7(v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  return a1;
}

uint64_t sub_1C672FB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C672FB50);
}

uint64_t sub_1C672FB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C68E9C68();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  type metadata accessor for StringTokenizer();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1C672FC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C672FC18);
}

void sub_1C672FC18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C68E9C68();
  OUTLINED_FUNCTION_0_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for StringTokenizer();
    OUTLINED_FUNCTION_0_6();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t type metadata accessor for EmojiQueryExpander()
{
  uint64_t result = qword_1EA408520;
  if (!qword_1EA408520) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C672FD10()
{
  uint64_t result = sub_1C68E9C68();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StringTokenizer();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1C672FDE4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C669F7F0();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v4 = (id)MEMORY[0x1C87A4300](v3, a1);
      }
      else {
        id v4 = *(id *)(a1 + 8 * v3 + 32);
      }
      id v5 = v4;
      id v6 = objc_msgSend(v5, sel_string);
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = sub_1C68EC898();
        uint64_t v10 = v9;
      }
      else
      {
        uint64_t v8 = 0;
        uint64_t v10 = 0;
      }

      if (!v10) {
        goto LABEL_19;
      }
      unint64_t v11 = *(void *)(v13 + 16);
      if (v11 >= *(void *)(v13 + 24) >> 1) {
        sub_1C669F7F0();
      }
      ++v3;
      *(void *)(v13 + 16) = v11 + 1;
      uint64_t v12 = v13 + 16 * v11;
      *(void *)(v12 + 32) = v8;
      *(void *)(v12 + 40) = v10;
      if (v2 == v3) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C68ED528();
    swift_bridgeObjectRelease();
  }
}

id sub_1C672FF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C68E9C68();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a1, v6);
  uint64_t Expander = type metadata accessor for EmojiQueryExpander();
  sub_1C6730FE0(a2, a3 + *(int *)(Expander + 20));
  sub_1C65BAD10(0, &qword_1EA406E98);
  uint64_t v9 = sub_1C68E9C18();
  id result = sub_1C67303AC(v9, v10);
  if (result)
  {
    id v12 = result;
    sub_1C6731044(a2);
    id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    *(void *)(a3 + *(int *)(Expander + 24)) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C67300A8(const void *a1)
{
  uint64_t v3 = type metadata accessor for StringTokenizer();
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (uint64_t)a1;
  memcpy(v39, a1, 0x108uLL);
  uint64_t v6 = *(int *)(type metadata accessor for EmojiQueryExpander() + 20);
  uint64_t v34 = v1;
  sub_1C6730FE0(v1 + v6, (uint64_t)v5);
  memcpy(v38, v39, sizeof(v38));
  sub_1C65B537C(v39);
  uint64_t v7 = sub_1C65C6D90();
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v36 = v7;
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 40);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      swift_bridgeObjectRetain();
      uint64_t v13 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v11, v12, 1, 1);
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v10 + 16);
      if (__OFADD__(v15, v14)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(void *)(v10 + 24) >> 1)
      {
        sub_1C65C8524();
        uint64_t v10 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v17 < v14) {
          goto LABEL_27;
        }
        unint64_t v18 = v10 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14) {
          goto LABEL_29;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v10 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_28;
          }
          *(void *)(v10 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_26;
      }
      v9 += 2;
      swift_bridgeObjectRelease();
      if (!--v8) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = sub_1C68ED568();
    __break(1u);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1C65B6550(v39);
    sub_1C6731044((uint64_t)v5);
    if (*(void *)(v10 + 16))
    {
      uint64_t v23 = sub_1C673041C(v10);
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      uint64_t v33 = v35;
      sub_1C6815268((uint64_t)sub_1C67310A0, (uint64_t)v32, v23, (uint64_t)&v37, v25, v26, v27, v28, v34, v35);
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    return v30;
  }
  return result;
}

id sub_1C67303AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_1C68EC868();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_emojiLocaleDataWithLocaleIdentifier_, v2);

  return v3;
}

uint64_t sub_1C673041C(uint64_t a1)
{
  uint64_t v114 = MEMORY[0x1E4FBC870];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v1 = a1;
    uint64_t v3 = 0;
    uint64_t v102 = (2 * v2) | 1;
    uint64_t v95 = v2 - 1;
    uint64_t v87 = MEMORY[0x1E4FBC860];
    uint64_t v97 = *(void *)(a1 + 16);
    uint64_t v4 = a1 + 32;
    do
    {
      uint64_t v99 = v3 + 1;
      uint64_t v5 = v95;
      uint64_t v6 = v102;
      do
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408530);
        sub_1C6731128();
        uint64_t v106 = OUTLINED_FUNCTION_1_61();
        uint64_t v104 = v7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v103 = OUTLINED_FUNCTION_1_61();
        uint64_t v9 = v8;
        swift_bridgeObjectRelease();
        uint64_t aBlock = v1;
        uint64_t v109 = v4;
        unint64_t v110 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 1);
        uint64_t v111 = (void *)v102;
        swift_bridgeObjectRetain();
        uint64_t v10 = OUTLINED_FUNCTION_1_61();
        uint64_t v12 = v11;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C65C819C();
          uint64_t v87 = v16;
        }
        unint64_t v13 = *(void *)(v87 + 16);
        if (v13 >= *(void *)(v87 + 24) >> 1)
        {
          sub_1C65C819C();
          uint64_t v87 = v17;
        }
        *(void *)(v87 + 16) = v13 + 1;
        uint64_t v14 = (void *)(v87 + 48 * v13);
        _DWORD v14[4] = v106;
        v14[5] = v104;
        v14[6] = v103;
        v14[7] = v9;
        v14[8] = v10;
        v14[9] = v12;
        v6 -= 2;
        if (v5) {
          BOOL v15 = v5 <= v3;
        }
        else {
          BOOL v15 = 1;
        }
        --v5;
      }
      while (!v15);
      ++v3;
    }
    while (v99 != v97);
    uint64_t v80 = v13 + 1;
  }
  else
  {
    uint64_t v87 = MEMORY[0x1E4FBC860];
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_58;
    }
    uint64_t v80 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  }
  uint64_t Expander = type metadata accessor for EmojiQueryExpander();
  unint64_t v19 = 0;
  uint64_t v82 = v87 + 32;
  uint64_t v83 = *(int *)(Expander + 24);
  uint64_t v81 = &v110;
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  while (2)
  {
    if (v19 >= *(void *)(v87 + 16))
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    BOOL v21 = (uint64_t *)(v82 + 48 * v19);
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    uint64_t v92 = *v21;
    uint64_t v24 = v21[2];
    uint64_t v25 = v21[3];
    uint64_t v26 = v21[4];
    unint64_t v27 = v21[5];
    uint64_t v86 = v19 + 1;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = MEMORY[0x1E4FBC868];
    uint64_t v107 = *(void **)(v84 + v83);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_1C68EC9C8();
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = v22;
    v29[3] = v23;
    v29[4] = v24;
    v29[5] = v25;
    v29[6] = v26;
    v29[7] = v27;
    uint64_t v29[8] = v28;
    uint64_t v112 = sub_1C67312A8;
    uint64_t v113 = v29;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v109 = 1107296256;
    unint64_t v110 = sub_1C6730E50;
    uint64_t v111 = &block_descriptor_8;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v85 = v28;
    swift_retain();
    uint64_t v31 = v24;
    swift_release();
    sub_1C673117C(v24, v25, 0, v105, 0, 1, (uint64_t)v30, v107);
    _Block_release(v30);
    swift_beginAccess();
    uint64_t v1 = *(void *)(v28 + 16);
    uint64_t v93 = v1 + 64;
    uint64_t v32 = 1 << *(unsigned char *)(v1 + 32);
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    unint64_t v34 = v33 & *(void *)(v1 + 64);
    int64_t v94 = (unint64_t)(v32 + 63) >> 6;
    uint64_t v91 = v23;
    if ((v23 & 0x2000000000000000) != 0) {
      uint64_t v35 = HIBYTE(v23) & 0xF;
    }
    else {
      uint64_t v35 = v92 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v36 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0) {
      uint64_t v36 = v26 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v88 = v36;
    uint64_t v89 = v35;
    swift_bridgeObjectRetain();
    int64_t v37 = 0;
    uint64_t v90 = v1;
    if (v34)
    {
LABEL_28:
      unint64_t v38 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      unint64_t v39 = v38 | (v37 << 6);
      goto LABEL_43;
    }
    while (1)
    {
      int64_t v40 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_58;
      }
      if (v40 >= v94) {
        break;
      }
      unint64_t v41 = *(void *)(v93 + 8 * v40);
      ++v37;
      if (v41) {
        goto LABEL_42;
      }
      int64_t v37 = v40 + 1;
      if (v40 + 1 >= v94) {
        break;
      }
      unint64_t v41 = *(void *)(v93 + 8 * v37);
      if (v41) {
        goto LABEL_42;
      }
      int64_t v37 = v40 + 2;
      if (v40 + 2 >= v94) {
        break;
      }
      unint64_t v41 = *(void *)(v93 + 8 * v37);
      if (v41) {
        goto LABEL_42;
      }
      int64_t v42 = v40 + 3;
      if (v42 >= v94) {
        break;
      }
      unint64_t v41 = *(void *)(v93 + 8 * v42);
      if (!v41)
      {
        while (1)
        {
          int64_t v37 = v42 + 1;
          if (__OFADD__(v42, 1)) {
            break;
          }
          if (v37 >= v94) {
            goto LABEL_57;
          }
          unint64_t v41 = *(void *)(v93 + 8 * v37);
          ++v42;
          if (v41) {
            goto LABEL_42;
          }
        }
        __break(1u);
        goto LABEL_66;
      }
      int64_t v37 = v42;
LABEL_42:
      unint64_t v34 = (v41 - 1) & v41;
      unint64_t v39 = __clz(__rbit64(v41)) + (v37 << 6);
LABEL_43:
      uint64_t v43 = v1;
      uint64_t v44 = *(void *)(*(void *)(v1 + 48) + 16 * v39);
      uint64_t v45 = *(void *)(*(void *)(v1 + 56) + 8 * v39);
      uint64_t aBlock = v31;
      uint64_t v109 = v25;
      uint64_t v100 = v44;
      unint64_t v46 = sub_1C65C74BC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_1C68ED198())
      {
        if (v89)
        {
          uint64_t aBlock = v92;
          uint64_t v109 = v91;
          swift_bridgeObjectRetain();
          sub_1C68ECA18();
          uint64_t v48 = aBlock;
          uint64_t v47 = v109;
        }
        else
        {
          uint64_t v48 = v92;
          uint64_t v47 = swift_bridgeObjectRetain();
        }
        unint64_t v96 = v34;
        int64_t v98 = v37;
        if (v88)
        {
          uint64_t aBlock = 32;
          uint64_t v109 = 0xE100000000000000;
          sub_1C68ECA18();
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v49 = *(void *)(v45 + 16);
        uint64_t v50 = v100;
        if (v49)
        {
          uint64_t v51 = v45 + 40;
          unint64_t v101 = v46;
          do
          {
            uint64_t aBlock = v31;
            uint64_t v109 = v25;
            uint64_t v77 = v46;
            uint64_t v78 = v46;
            uint64_t v76 = v46;
            uint64_t v52 = v50;
            sub_1C68ED138();
            uint64_t aBlock = v48;
            uint64_t v109 = v47;
            swift_bridgeObjectRetain();
            sub_1C68ECA18();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1C68ECA18();
            swift_bridgeObjectRelease();
            sub_1C67FB8C8((uint64_t)&aBlock, aBlock, v109, v53, v54, v55, v56, v57, v20, v76);
            swift_bridgeObjectRelease();
            uint64_t v50 = v52;
            unint64_t v46 = v101;
            v51 += 16;
            --v49;
          }
          while (v49);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v90;
        unint64_t v34 = v96;
        int64_t v37 = v98;
      }
      else
      {
        uint64_t v1 = v43;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_28;
      }
    }
LABEL_57:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v19 = v86;
    if (v86 != v80) {
      continue;
    }
    break;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_1C683012C();
  uint64_t v1 = v58;
  swift_bridgeObjectRelease();
  if (qword_1EBBF5DA0 != -1) {
LABEL_67:
  }
    swift_once();
  uint64_t v59 = sub_1C68EC478();
  __swift_project_value_buffer(v59, (uint64_t)&unk_1EBBF7A68);
  swift_retain_n();
  uint64_t v60 = sub_1C68EC458();
  os_log_type_t v61 = sub_1C68ECE48();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t aBlock = v63;
    *(_DWORD *)uint64_t v62 = 136315138;
    uint64_t v64 = swift_retain();
    uint64_t v65 = MEMORY[0x1C87A3B40](v64, MEMORY[0x1E4FBB1A0]);
    uint64_t v67 = v66;
    swift_release();
    sub_1C65B4078(v65, v67, (uint64_t)&aBlock, v68, v69, v70, v71, v72, v74, v75, v77, v78, v79, v80, (uint64_t)v81, v82, v83, v84, v85,
      v86);
    sub_1C68ED0C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C65AE000, v60, v61, "Expansions generated by the EmojiResolver: %s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87A54F0](v63, -1, -1);
    MEMORY[0x1C87A54F0](v62, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_1C6730D68(unint64_t a1)
{
  uint64_t result = sub_1C68ECDF8();
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = sub_1C68ECB18();
    MEMORY[0x1C87A3880](v4);
    swift_bridgeObjectRelease();
    if (a1) {
      unint64_t v5 = a1;
    }
    else {
      unint64_t v5 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRetain();
    sub_1C672FDE4(v5);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1C6852068();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C6730E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a2;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1C65BAD10(0, &qword_1EA408540);
    uint64_t v8 = sub_1C68ECBF8();
  }
  swift_retain();
  v9(v8, a3, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C6730EFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  sub_1C67310C0(a2, (uint64_t)a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a3[3] = v5;
  a3[4] = v4;
  swift_bridgeObjectRelease();
  a3[5] = 0;
  a3[6] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[7] = 0;
  a3[8] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[9] = 0;
  a3[10] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[11] = 0;
  a3[12] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[13] = 0;
  a3[14] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[15] = 0;
  a3[16] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[17] = 0;
  a3[18] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[19] = 0;
  a3[20] = 0xE000000000000000;
  uint64_t v6 = (char *)a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5200) + 36);
  uint64_t result = type metadata accessor for ContactResolver.SignalSet(0);
  v6[*(int *)(result + 156)] = 1;
  return result;
}

uint64_t sub_1C6730FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StringTokenizer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C6731044(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringTokenizer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C67310A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C6730EFC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C67310C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C6731128()
{
  unint64_t result = qword_1EA408538;
  if (!qword_1EA408538)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA408530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408538);
  }
  return result;
}

void sub_1C673117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v14 = (id)sub_1C68EC868();
  swift_bridgeObjectRelease();
  objc_msgSend(a8, sel_enumerateSearchResultsInText_range_options_searchType_usingBlock_, v14, a3, a4, a5, a6, a7);
}

uint64_t sub_1C6731220()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C6731258()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C67312A8(unint64_t a1)
{
  return sub_1C6730D68(a1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_61()
{
  return sub_1C68EC818();
}

uint64_t DateTime.Date.Holiday.Emotion.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.Holiday.Emotion.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C6731340()
{
  unint64_t result = qword_1EA408548;
  if (!qword_1EA408548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408548);
  }
  return result;
}

uint64_t sub_1C673138C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.Holiday.Emotion.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C6731394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.Date.Holiday.Emotion.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C67313BC()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C673141C()
{
  return sub_1C68ECB78();
}

unsigned char *_s7EmotionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6731538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.Holiday.Emotion()
{
  return &type metadata for DateTime.Date.Holiday.Emotion;
}

unint64_t sub_1C6731570()
{
  unint64_t result = qword_1EA408550;
  if (!qword_1EA408550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408550);
  }
  return result;
}

uint64_t sub_1C67315BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  char v17 = 6;
  type metadata accessor for DateTime.Date();
  swift_allocObject();
  DateTime.Date.init(withDayOfWeek:)(&v17);
  char v17 = 0;
  type metadata accessor for DateTime.Time();
  swift_allocObject();
  OUTLINED_FUNCTION_0_59();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(0, 0, 0, 0, 0, 0, v1, v2, v13, v15);
  type metadata accessor for DateTime();
  swift_allocObject();
  uint64_t v3 = OUTLINED_FUNCTION_2_55();
  DateTime.init(withDate:time:)(v3, v4);
  char v17 = 5;
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = DateTime.Date.init(withDayOfWeek:)(&v17);
  char v17 = 1;
  swift_allocObject();
  OUTLINED_FUNCTION_0_59();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(11, 0, 59, 0, 59, 0, v7, v8, v14, v16);
  OUTLINED_FUNCTION_0_15();
  uint64_t v9 = DateTime.init(withDate:time:)(v6, v5);
  type metadata accessor for DateTime.DateTimeRange();
  swift_allocObject();
  uint64_t v10 = OUTLINED_FUNCTION_2_55();
  DateTime.DateTimeRange.init(withStartDateTime:endDateTime:)(v10, v11);
  OUTLINED_FUNCTION_0_15();
  *(void *)(inited + 56) = DateTime.init(occurringIn:)(v9);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_2_55()
{
  return v0;
}

void sub_1C67317C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v65 = a8;
  uint64_t v58 = a7;
  uint64_t v59 = a5;
  uint64_t v60 = a3;
  uint64_t v61 = a12;
  uint64_t v62 = a11;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v19 - 8);
  BOOL v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C68E9B78();
  uint64_t v57 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_11();
  if ((a4 & 1) == 0)
  {
    if (a6) {
      goto LABEL_3;
    }
    goto LABEL_13;
  }
  uint64_t v25 = sub_1C6833168(25705, 0xE200000000000000, a1);
  if (v26)
  {
    swift_bridgeObjectRetain();
    sub_1C682FC10();
    OUTLINED_FUNCTION_6_45();
    sub_1C65CF634();
    OUTLINED_FUNCTION_3_45();
    char v36 = 1;
LABEL_27:
    *(_OWORD *)uint64_t v35 = xmmword_1C68FD170;
    *(void *)(v35 + 16) = v22;
    *(unsigned char *)(v35 + 24) = v36;
    swift_willThrow();
    sub_1C6645080(v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_47:
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if (v25 < 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  OUTLINED_FUNCTION_9_37();
  if (v28)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v29 = OUTLINED_FUNCTION_2_56(v27);
  OUTLINED_FUNCTION_8_42(v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5950);
  if ((OUTLINED_FUNCTION_0_60() & 1) == 0)
  {
    sub_1C65CF634();
    OUTLINED_FUNCTION_3_45();
    uint64_t v22 = 0;
    char v36 = 3;
    goto LABEL_27;
  }
  uint64_t v60 = v63;
  if (a6) {
    goto LABEL_3;
  }
LABEL_13:
  uint64_t v30 = sub_1C6833168(1701869940, 0xE400000000000000, a1);
  uint64_t v31 = v61;
  if (v32)
  {
    swift_bridgeObjectRetain();
    sub_1C682FC10();
    OUTLINED_FUNCTION_6_45();
LABEL_46:
    sub_1C65CF634();
    uint64_t v54 = OUTLINED_FUNCTION_3_45();
    OUTLINED_FUNCTION_1_62((__n128)xmmword_1C68FD1A0, v54, v55);
    sub_1C6645080(v31);
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if (v30 < 0) {
    goto LABEL_52;
  }
  OUTLINED_FUNCTION_9_37();
  if (v28)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v34 = OUTLINED_FUNCTION_2_56(v33);
  OUTLINED_FUNCTION_8_42(v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5950);
  if ((OUTLINED_FUNCTION_0_60() & 1) == 0)
  {
    OUTLINED_FUNCTION_7_40();
    goto LABEL_46;
  }
  a6 = v64;
  if (!v64)
  {
    OUTLINED_FUNCTION_7_40();
    uint64_t v31 = v61;
    goto LABEL_46;
  }
  uint64_t v59 = v63;
LABEL_3:
  if (v65) {
    goto LABEL_4;
  }
  uint64_t v37 = sub_1C6833168(1684632949, 0xE400000000000000, a1);
  if (v38)
  {
    swift_bridgeObjectRetain();
    sub_1C682FC10();
    OUTLINED_FUNCTION_6_45();
LABEL_39:
    sub_1C65CF634();
    uint64_t v46 = OUTLINED_FUNCTION_3_45();
    OUTLINED_FUNCTION_1_62((__n128)xmmword_1C68FD190, v46, v47);
    sub_1C6645080(v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_48:
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  if (v37 < 0) {
    goto LABEL_54;
  }
  OUTLINED_FUNCTION_9_37();
  if (v28)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v40 = OUTLINED_FUNCTION_2_56(v39);
  OUTLINED_FUNCTION_8_42(v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5950);
  if ((OUTLINED_FUNCTION_0_60() & 1) == 0 || (uint64_t v65 = v64) == 0)
  {
    OUTLINED_FUNCTION_7_40();
    goto LABEL_39;
  }
  uint64_t v58 = v63;
LABEL_4:
  if (!v62)
  {
    uint64_t v41 = sub_1C6833168(0x736E656B6F74, 0xE600000000000000, a1);
    if (v42)
    {
      swift_bridgeObjectRetain();
      sub_1C682FC10();
      OUTLINED_FUNCTION_6_45();
LABEL_42:
      sub_1C65CF634();
      uint64_t v48 = OUTLINED_FUNCTION_3_45();
      OUTLINED_FUNCTION_1_62((__n128)xmmword_1C68FD180, v48, v49);
      sub_1C6645080(v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_49:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v41 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_9_37();
      if (!v28)
      {
        uint64_t v44 = OUTLINED_FUNCTION_2_56(v43);
        OUTLINED_FUNCTION_8_42(v44);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5950);
        if (OUTLINED_FUNCTION_0_60())
        {
          uint64_t v62 = v64;
          if (v64)
          {
            a10 = v63;
            goto LABEL_5;
          }
        }
        OUTLINED_FUNCTION_7_40();
        goto LABEL_42;
      }
LABEL_57:
      __break(1u);
      return;
    }
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_5:
  uint64_t v56 = a10;
  uint64_t v24 = v61;
  sub_1C65CE694(v61, (uint64_t)v21, &qword_1EBBF6808);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22) == 1)
  {
    sub_1C661188C(0x5F64657461647075, 0xEA00000000007461, a1, a2, v13);
    if (v12)
    {
      sub_1C6645080(v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C6645080((uint64_t)v21);
      return;
    }
    sub_1C6645080(v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C6645080((uint64_t)v21);
    uint64_t v45 = v57;
  }
  else
  {
    sub_1C6645080(v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v13, v21, v22);
  }
  uint64_t v50 = v59;
  *(void *)a9 = v60;
  *((void *)a9 + 1) = v50;
  uint64_t v51 = v58;
  *((void *)a9 + 2) = a6;
  *((void *)a9 + 3) = v51;
  uint64_t v52 = v56;
  *((void *)a9 + 4) = v65;
  *((void *)a9 + 5) = v52;
  *((void *)a9 + 6) = v62;
  uint64_t v53 = type metadata accessor for Entity();
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(&a9[*(int *)(v53 + 32)], v13, v22);
}

void sub_1C6731DD8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0710;
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 64) = &off_1F2186408;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(void *)(inited + 96) = v14;
  *(void *)(inited + 104) = &off_1F2186408;
  *(void *)(inited + 72) = a3;
  *(void *)(inited + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C6675B44(0xD000000000000079, 0x80000001C6917BA0, inited);
  if (v5)
  {
    swift_setDeallocating();
    sub_1C65C7004();
  }
  else
  {
    uint64_t v17 = v15;
    uint64_t v23 = v16;
    swift_setDeallocating();
    sub_1C65C7004();
    if (v17)
    {
      uint64_t v18 = sub_1C68E9B78();
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = v24;
      sub_1C67317C0(v17, v23, 0, 1, a3, a4, a1, a2, v24, 0, 0, (uint64_t)v12);
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = 1;
      uint64_t v19 = v24;
    }
    uint64_t v21 = type metadata accessor for Entity();
    __swift_storeEnumTagSinglePayload((uint64_t)v19, v20, 1, v21);
  }
}

uint64_t sub_1C6731FD0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
  uint64_t v4 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 64) = &off_1F2186408;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1C65E2E30(0xD000000000000041, 0x80000001C6917A00, inited);
  if (v1) {
    goto LABEL_3;
  }
  swift_release();
  swift_setDeallocating();
  sub_1C65C7004();
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C68F0410;
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 64) = &off_1F2186408;
  *(void *)(v6 + 72) = v4;
  uint64_t v24 = v7;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 96) = v5;
  *(void *)(v6 + 104) = &off_1F2186408;
  *(void *)(v6 + 80) = v3;
  uint64_t v9 = v5;
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  *(void *)(v6 + 136) = v9;
  *(void *)(v6 + 144) = &off_1F2186408;
  *(void *)(v6 + 112) = v10;
  *(void *)(v6 + 120) = v11;
  type metadata accessor for Entity();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C65E7578();
  *(void *)(v6 + 176) = MEMORY[0x1E4FBC1C8];
  *(void *)(v6 + 184) = &off_1F2186400;
  *(void *)(v6 + 152) = v12;
  OUTLINED_FUNCTION_4_41();
  sub_1C65E2E30(v13, v14, v15);
  swift_release();
  swift_setDeallocating();
  sub_1C65C7004();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C68F0710;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = &off_1F2186408;
  *(void *)(v16 + 72) = v4;
  *(void *)(v16 + 32) = v24;
  *(void *)(v16 + 40) = v8;
  *(void *)(v16 + 96) = v17;
  *(void *)(v16 + 104) = &off_1F2186408;
  *(void *)(v16 + 80) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_41();
  uint64_t v21 = sub_1C65CD3F0(v18, v19, v20);
  if (v8)
  {
LABEL_3:
    swift_setDeallocating();
    return sub_1C65C7004();
  }
  else
  {
    uint64_t v23 = v21;
    swift_setDeallocating();
    uint64_t result = sub_1C65C7004();
    uint64_t *v0 = v23;
  }
  return result;
}

uint64_t type metadata accessor for Entity()
{
  uint64_t result = qword_1EBBF6158;
  if (!qword_1EBBF6158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1C6732270(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[6] = a2[6];
    uint64_t v10 = sub_1C68E9B78();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1C6732388(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1C68E9B78();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1C6732410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = sub_1C68E9B78();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *sub_1C67324D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C68E9B78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C67325BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C68E9B78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C6732650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C68E9B78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1C6732704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C6732718);
}

uint64_t sub_1C6732718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C68E9B78();
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_1C67327A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C67327B4);
}

uint64_t sub_1C67327B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C68E9B78();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C6732834()
{
  uint64_t result = sub_1C68E9B78();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_60()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_62(__n128 a1, uint64_t a2, __n128 *a3)
{
  *a3 = a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_2_56(uint64_t a1)
{
  return v1 + 40 * a1 + 32;
}

uint64_t OUTLINED_FUNCTION_3_45()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_42(uint64_t a1)
{
  return sub_1C65CE694(a1, v2 - 120, v1);
}

uint64_t sub_1C67329A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_1C67329D4(uint64_t a1, uint64_t a2)
{
  return sub_1C67329A0(a1, a2, *(void *)(v2 + 16));
}

ValueMetadata *type metadata accessor for EntityRejectionIntentEvent()
{
  return &type metadata for EntityRejectionIntentEvent;
}

uint64_t sub_1C67329EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    if (((1 << a4) & 0x19) == 0) {
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t initializeWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C67329EC(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C67329EC(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C65CF694(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C65CF694(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C6732BFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C6732C04(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

unint64_t sub_1C6732C1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      OUTLINED_FUNCTION_1_63();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_61();
      sub_1C68ECA18();
      MEMORY[0x1C87A3B40](a3, MEMORY[0x1E4FBB1A0]);
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      return v7;
    case 2:
      OUTLINED_FUNCTION_1_63();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_61();
      sub_1C68ECA18();
      MEMORY[0x1C87A3B40](a3, MEMORY[0x1E4FBB1A0]);
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 3:
      OUTLINED_FUNCTION_1_63();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_61();
      goto LABEL_9;
    case 4:
      OUTLINED_FUNCTION_1_63();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000001ALL;
      goto LABEL_8;
    default:
      OUTLINED_FUNCTION_1_63();
      sub_1C68ED398();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0x2068637573206F4ELL;
LABEL_8:
      unint64_t v7 = v5;
LABEL_9:
      sub_1C68ECA18();
      return v7;
  }
}

unint64_t sub_1C6732E44()
{
  return sub_1C6732C1C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_0_61()
{
  return sub_1C68ECA18();
}

uint64_t sub_1C6732E8C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68FD290;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  type metadata accessor for DateTime();
  uint64_t v1 = swift_allocObject();
  *(void *)(inited + 56) = OUTLINED_FUNCTION_1_64(v1, v2, v3, v4, v5, v6, v7, v8, v44, *(int *)v48, *(__int16 *)&v48[4], 1, 1);
  *(_OWORD *)(inited + 64) = xmmword_1C68EFF00;
  *(unsigned char *)(inited + 80) = 0;
  uint64_t v9 = OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 88) = OUTLINED_FUNCTION_2_57(v9, v10, v11, v12, v13, v14, v15, v16, v45, v49, v52, v55, v56);
  *(_OWORD *)(inited + 96) = xmmword_1C68FD2A0;
  *(unsigned char *)(inited + 112) = 0;
  OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 120) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(7, 0, 0, &v56, 11, 59, 59, &v55);
  *(_OWORD *)(inited + 128) = xmmword_1C68EFF20;
  *(unsigned char *)(inited + 144) = 0;
  OUTLINED_FUNCTION_0_3();
  uint64_t v17 = OUTLINED_FUNCTION_3_46();
  *(void *)(inited + 152) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(v17, v18, v19, v20, 8, 59, 59, v21);
  *(_OWORD *)(inited + 160) = xmmword_1C68EFF40;
  *(unsigned char *)(inited + 176) = 0;
  uint64_t v22 = OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 184) = OUTLINED_FUNCTION_1_64(v22, v23, v24, v25, v26, v27, v28, v29, v46, v50, v53, v55, v56);
  *(_OWORD *)(inited + 192) = xmmword_1C68EFF50;
  *(unsigned char *)(inited + 208) = 0;
  OUTLINED_FUNCTION_0_3();
  uint64_t v30 = OUTLINED_FUNCTION_3_46();
  *(void *)(inited + 216) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(v30, v31, v32, v33, 7, 0, 0, v34);
  *(_OWORD *)(inited + 224) = xmmword_1C68EFF60;
  *(unsigned char *)(inited + 240) = 0;
  OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 248) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(2, 0, 0, &v56, 6, 59, 59, &v55);
  *(_OWORD *)(inited + 256) = xmmword_1C68EFF70;
  *(unsigned char *)(inited + 272) = 0;
  uint64_t v35 = OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 280) = OUTLINED_FUNCTION_2_57(v35, v36, v37, v38, v39, v40, v41, v42, v47, v51, v54, v55, v56);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_1_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &a13, 10, 0, 0, &a12);
}

uint64_t OUTLINED_FUNCTION_2_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &a13, 11, 59, 59, &a12);
}

uint64_t OUTLINED_FUNCTION_3_46()
{
  return 6;
}

uint64_t sub_1C67330E8()
{
  uint64_t v20 = &type metadata for ContactFeatures;
  unint64_t v21 = sub_1C65B7B98();
  v19[0] = 0;
  char v0 = sub_1C68EA508();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v1 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v2 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v3 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v4 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v5 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v6 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  char v7 = OUTLINED_FUNCTION_1_65();
  OUTLINED_FUNCTION_3_47((uint64_t)v19);
  OUTLINED_FUNCTION_1_65();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t v8 = 256;
  if ((v1 & 1) == 0) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL | v0 & 1;
  uint64_t v10 = 0x10000;
  if ((v2 & 1) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 0x1000000;
  if ((v3 & 1) == 0) {
    uint64_t v11 = 0;
  }
  unint64_t v12 = v9 | v10 | v11;
  uint64_t v13 = 0x100000000;
  if ((v4 & 1) == 0) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x10000000000;
  if ((v5 & 1) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = 0x1000000000000;
  if ((v6 & 1) == 0) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v13 | v14;
  uint64_t v17 = 0x100000000000000;
  if ((v7 & 1) == 0) {
    uint64_t v17 = 0;
  }
  return v12 | v16 | v15 | v17;
}

uint64_t FeatureFlagsKey<>.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  LOBYTE(v3) = sub_1C68EA508();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3 & 1;
}

void LocationFeatures.domain.getter()
{
}

void LocationFeatures.feature.getter()
{
}

uint64_t sub_1C6733314()
{
  return SiriSignalsFeatures.hashValue.getter();
}

uint64_t sub_1C673332C()
{
  return SiriSignalsFeatures.hash(into:)();
}

const char *sub_1C6733344()
{
  return "memorable_location_recommendation";
}

void PERFeatures.domain.getter()
{
}

void PERFeatures.feature.getter()
{
}

const char *sub_1C6733384()
{
  return "per_restatement";
}

void SiriSignalsFeatures.domain.getter()
{
}

void SiriSignalsFeatures.feature.getter()
{
}

uint64_t SiriSignalsFeatures.hash(into:)()
{
  return sub_1C68ED948();
}

const char *sub_1C67333EC()
{
  return "nowplaying_signals_homepod";
}

void ContactFeatures.domain.getter()
{
}

BOOL static ContactFeatures.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ContactFeatures.hash(into:)()
{
  return sub_1C68ED948();
}

uint64_t ContactFeatures.hashValue.getter()
{
  return sub_1C68ED988();
}

unint64_t sub_1C67334D8()
{
  unint64_t result = qword_1EA408560;
  if (!qword_1EA408560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408560);
  }
  return result;
}

unint64_t sub_1C6733528()
{
  unint64_t result = qword_1EA408568;
  if (!qword_1EA408568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408568);
  }
  return result;
}

unint64_t sub_1C6733578()
{
  unint64_t result = qword_1EA408570;
  if (!qword_1EA408570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA408570);
  }
  return result;
}

uint64_t sub_1C67335C8()
{
  return sub_1C684AF70(*v0);
}

void type metadata accessor for LocationFeatures()
{
}

void type metadata accessor for PERFeatures()
{
}

unsigned char *_s13SiriInference16LocationFeaturesOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C673368CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SiriSignalsFeatures()
{
}

unsigned char *storeEnumTagSinglePayload for ContactFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C673378CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContactFeatures()
{
}

uint64_t dispatch thunk of FeatureToggle.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t __swift_memcpy9_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t sub_1C67337E8(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[9])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C6733834(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for ContactFeatureSet()
{
}

uint64_t OUTLINED_FUNCTION_1_65()
{
  return sub_1C68EA508();
}

uint64_t OUTLINED_FUNCTION_3_47(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void static FetchInteractions.metricName.getter()
{
}

id sub_1C67338D0(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_init);
  uint64_t v4 = (uint64_t)v3 + OBJC_IVAR____TtC13SiriInference17FetchInteractions_databaseUrl;
  swift_beginAccess();
  sub_1C664168C(a1, v4);
  swift_endAccess();
  return v3;
}

id sub_1C6733950()
{
  swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF67F0);
  MEMORY[0x1F4188790](v2 - 8);
  OUTLINED_FUNCTION_16_0();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13SiriInference17FetchInteractions_databaseUrl;
  swift_beginAccess();
  sub_1C65CE694(v3, v1, &qword_1EBBF67F0);
  return sub_1C67338D0(v1);
}

Swift::Void __swiftcall FetchInteractions.main()()
{
  uint64_t ObjectType = swift_getObjectType();
  if ((objc_msgSend(v0, sel_isCancelled) & 1) == 0)
  {
    sub_1C68ED3B8();
    id v2 = v0;
    sub_1C68E1C74(v2, ObjectType, v3);
    swift_bridgeObjectRelease();
  }
}

void sub_1C6733AAC(void *a1)
{
  uint64_t v16 = sub_1C68EC448();
  OUTLINED_FUNCTION_0_1();
  uint64_t v15 = v3;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  if (qword_1EBBF68D0 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBBF7B08;
  sub_1C68EC438();
  sub_1C68ECF98();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF6640);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C68F0550;
  uint64_t v7 = sub_1C68ED3B8();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1C66246B0();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  sub_1C68EC418();
  swift_bridgeObjectRelease();
  id v10 = a1;
  sub_1C6733D9C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6618);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0710;
  strcpy((char *)(inited + 32), "fetchedCount");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = sub_1C68ECDA8();
  strcpy((char *)(inited + 56), "skippedCount");
  *(unsigned char *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  *(void *)(inited + 72) = sub_1C68ECDA8();
  sub_1C67350CC();
  sub_1C68EC748();
  sub_1C677D440();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  sub_1C679ABA8(v14, v14 != 0, v13, 2);
  swift_bridgeObjectRelease();
  sub_1C66416F4(v14, v14 != 0);
  sub_1C68ECF88();
  sub_1C68EC428();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v16);
}

uint64_t sub_1C6733D9C()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_11();
  uint64_t v6 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v18 = type metadata accessor for SiriRemembersDB();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)objc_msgSend(v4, sel_isCancelled);
  if ((result & 1) == 0)
  {
    int v50 = (void (*)(uint64_t))v2;
    uint64_t v47 = v12;
    if (qword_1EBBF6748 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C68EC478();
    os_log_t v48 = (os_log_t)__swift_project_value_buffer(v22, (uint64_t)qword_1EBBF7AB0);
    uint64_t v23 = sub_1C68EC458();
    os_log_type_t v24 = sub_1C68ECE48();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      int v49 = v4;
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1C65AE000, v23, v24, "fetching interactions", v25, 2u);
      uint64_t v3 = v1;
      uint64_t v4 = v49;
      OUTLINED_FUNCTION_0();
    }

    uint64_t result = sub_1C6734300((unint64_t)v20);
    uint64_t v26 = v50;
    if (!v3)
    {
      if ((objc_msgSend(v4, sel_isCancelled) & 1) == 0)
      {
        sub_1C68E9B68();
        sub_1C663F988(1, (uint64_t)v26);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v6);
        int v49 = v4;
        if (EnumTagSinglePayload == 1)
        {
          sub_1C68E9A58();
          sub_1C65EA728((uint64_t)v26, &qword_1EBBF6808);
        }
        else
        {
          (*(void (**)(char *, void (*)(uint64_t), uint64_t))(v8 + 32))(v15, v26, v6);
        }
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        int v50 = (void (*)(uint64_t))v15;
        v28(v47, v15, v6);
        uint64_t v29 = sub_1C68EC458();
        os_log_type_t v30 = sub_1C68ECE48();
        if (os_log_type_enabled(v29, v30))
        {
          os_log_t v48 = v29;
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          uint64_t v47 = (char *)swift_slowAlloc();
          v53[0] = (uint64_t)v47;
          uint64_t v32 = v31;
          uint64_t v46 = v31;
          *(_DWORD *)uint64_t v31 = 136315138;
          uint64_t v26 = (void (*)(uint64_t))(v31 + 12);
          uint64_t v45 = v32 + 4;
          sub_1C6605058();
          uint64_t v33 = sub_1C68ED7B8();
          sub_1C65B4078(v33, v34, (uint64_t)v53, v35, v36, v37, v38, v39, v44, (unint64_t)v45, (uint64_t)v46, (uint64_t)v47, (uint64_t)v48, (uint64_t)v49, (uint64_t)v50, v51, v52, v53[0], v53[1],
            v53[2]);
          uint64_t v51 = v40;
          sub_1C68ED0C8();
          swift_bridgeObjectRelease();
          uint64_t v41 = OUTLINED_FUNCTION_4_42();
          v26(v41);
          uint64_t v29 = v48;
          _os_log_impl(&dword_1C65AE000, v48, v30, "fetching interactions with date >= %s", v46, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0();
          OUTLINED_FUNCTION_0();
        }
        else
        {
          uint64_t v42 = OUTLINED_FUNCTION_4_42();
          v26(v42);
        }

        uint64_t v43 = (uint64_t)v50;
        sub_1C67346B4(1, (uint64_t)v50, (uint64_t)v20, (uint64_t (*)(void))sub_1C67346B0, 0);
        sub_1C685BBEC(1, (unint64_t)v17);
        objc_msgSend(self, sel__resetCache);
        ((void (*)(uint64_t, uint64_t))v26)(v43, v6);
        ((void (*)(char *, uint64_t))v26)(v17, v6);
      }
      return sub_1C66110E4((uint64_t)v20);
    }
  }
  return result;
}

uint64_t sub_1C6734300@<X0>(unint64_t a1@<X8>)
{
  unint64_t v28 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6888);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF67F0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C68E9968();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v27 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v26 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v20 = v1 + OBJC_IVAR____TtC13SiriInference17FetchInteractions_databaseUrl;
  swift_beginAccess();
  sub_1C65CE694(v20, (uint64_t)v7, &qword_1EBBF67F0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v19, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v19, v8);
    SiriRemembersDB.init(url:readOnly:)((uint64_t)v17, 0, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v19, v8);
  }
  unint64_t v22 = v28;
  uint64_t v21 = v29;
  sub_1C65EA728((uint64_t)v7, &qword_1EBBF67F0);
  if (qword_1EBBF68B8 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBBF6810);
  swift_beginAccess();
  sub_1C65CE694(v23, (uint64_t)v4, &qword_1EBBF6888);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = *v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6650);
    return swift_willThrowTypedImpl();
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v14, v4, v8);
  uint64_t v25 = (uint64_t)v27;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v27, v14, v8);
  SiriRemembersDB.init(url:readOnly:)(v25, 0, v22);
  if (!v21)
  {
    uint64_t v19 = v14;
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v19, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

void sub_1C67346B4(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8 = v5;
  __int16 v53 = a4;
  uint64_t v55 = a5;
  uint64_t v51 = a3;
  swift_getObjectType();
  uint64_t v11 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_1();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_11();
  if (qword_1EBBF6748 != -1) {
LABEL_22:
  }
    swift_once();
  uint64_t v15 = sub_1C68EC478();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBBF7AB0);
  (*(void (**)(void *, uint64_t, uint64_t))(v13 + 16))(v7, a2, v11);
  uint64_t v16 = sub_1C68EC458();
  HIDWORD(v46) = sub_1C68ECE48();
  if (os_log_type_enabled(v16, BYTE4(v46)))
  {
    uint64_t v48 = v11;
    uint64_t v41 = (uint64_t)v16;
    uint64_t v17 = 0xEA00000000007365;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v59 = v38;
    *(_DWORD *)uint64_t v11 = 136315394;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v23 = 0x7645746E65746E69;
      }
      else {
        uint64_t v23 = 0x6E6F7473626D6F74;
      }
      if (a1 == 1) {
        uint64_t v17 = 0xEC00000073746E65;
      }
    }
    else
    {
      uint64_t v17 = 0xEA00000000007374;
      uint64_t v23 = 0x6E65746E49707061;
    }
    sub_1C65B4078(v23, v17, (uint64_t)&v59, v18, v19, v20, v21, v22, v35, v37, v38, (uint64_t)v7, v41, v13, v46, v48, v51, (uint64_t)v53, v55,
      v57);
    uint64_t v58 = v24;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1C6605058();
    uint64_t v25 = v40;
    uint64_t v26 = sub_1C68ED7B8();
    sub_1C65B4078(v26, v27, (uint64_t)&v59, v28, v29, v30, v31, v32, v36, v11 + 14, v39, v40, v42, v44, v47, v49, v52, v54, v56,
      v58);
    uint64_t v57 = v33;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v25, v50);
    uint64_t v16 = v43;
    _os_log_impl(&dword_1C65AE000, v43, BYTE4(v46), "fetching %s interactions with date >= %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v7, v11);
  }

  uint64_t v13 = v51;
  uint64_t v34 = 0;
  uint64_t v7 = &_swift_FORCE_LOAD___swiftXPC___SiriInference;
  while (1)
  {
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (objc_msgSend(v8, sel_isCancelled)) {
      return;
    }
    uint64_t v11 = MEMORY[0x1C87A4AB0]();
    sub_1C6734A20(a1, a2, v34, v53, v55, v51, (uint64_t)v8, (BOOL *)&v59);
    if (v6) {
      break;
    }
    ++v34;
    if (v59) {
      return;
    }
  }
}

void sub_1C6734A20(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, BOOL *a8@<X8>)
{
  uint64_t v53 = a7;
  uint64_t v54 = a5;
  uint64_t v15 = type metadata accessor for SiriRemembersDB();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = a1;
  uint64_t v19 = (uint64_t (*)(void))a3;
  sub_1C66F1E6C(v18, a2, 1, a3);
  if (!v8)
  {
    unint64_t v21 = v20;
    uint64_t v50 = v17;
    uint64_t v51 = v15;
    uint64_t v52 = a4;
    uint64_t v57 = 0;
    uint64_t v48 = a8;
    if (qword_1EBBF6748 != -1) {
      goto LABEL_30;
    }
    while (1)
    {
      uint64_t v22 = sub_1C68EC478();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EBBF7AB0);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_1C68EC458();
      os_log_type_t v24 = sub_1C68ECE48();
      unint64_t v25 = v21 >> 62;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = (_DWORD *)swift_slowAlloc();
        uint64_t v27 = v19;
        uint64_t v28 = v26;
        *uint64_t v26 = 134218240;
        uint64_t v58 = (uint64_t)v27;
        sub_1C68ED0C8();
        *((_WORD *)v28 + 6) = 2048;
        if (v25)
        {
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_1C68ED528();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v29 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        uint64_t v58 = v29;
        sub_1C68ED0C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C65AE000, v23, v24, "fetched batch %ld: %ld interactions", (uint8_t *)v28, 0x16u);
        MEMORY[0x1C87A54F0](v28, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v19 = v52;
      if (v25)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1C68ED528();
      }
      else
      {
        uint64_t v30 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      unint64_t v47 = v21 >> 62;
      if (!v30) {
        break;
      }
      uint64_t v49 = OBJC_IVAR____TtC13SiriInference17FetchInteractions_fetchedCount;
      uint64_t v55 = v30;
      unint64_t v56 = v21 & 0xC000000000000001;
      uint64_t v31 = 4;
      while (1)
      {
        id v32 = v56 ? (id)MEMORY[0x1C87A4300](v31 - 4, v21) : *(id *)(v21 + 8 * v31);
        uint64_t v33 = v32;
        uint64_t v34 = v31 - 3;
        if (__OFADD__(v31 - 4, 1)) {
          break;
        }
        uint64_t v35 = a6;
        uint64_t v36 = v19(v32);
        if (v36)
        {
          uint64_t v38 = (void *)v36;
          a6 = v37;
          uint64_t v19 = (uint64_t (*)(void))v21;
          uint64_t v39 = (uint64_t)v50;
          sub_1C66202D4(v35, (uint64_t)v50);
          unint64_t v21 = *(void *)(v39 + *(int *)(v51 + 20));
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C66110E4(v39);
          uint64_t v40 = v57;
          sub_1C675ECE4(v21, v38, a6);
          if (v40)
          {

            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            return;
          }
          swift_release();

          swift_bridgeObjectRelease_n();
          swift_release_n();
          uint64_t v41 = *(void *)(v53 + v49);
          BOOL v42 = __OFADD__(v41, 1);
          uint64_t v43 = v41 + 1;
          if (v42) {
            goto LABEL_29;
          }
          uint64_t v57 = 0;
          *(void *)(v53 + v49) = v43;
          unint64_t v21 = (unint64_t)v19;
          uint64_t v19 = v52;
        }
        else
        {
        }
        ++v31;
        a6 = v35;
        if (v34 == v55) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_once();
    }
LABEL_22:
    swift_bridgeObjectRelease();
    if (v47)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C68ED528();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v45 = v48;
    swift_bridgeObjectRelease();
    *uint64_t v45 = v44 < 1;
  }
}

id FetchInteractions.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id FetchInteractions.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC13SiriInference17FetchInteractions_fetchedCount] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13SiriInference17FetchInteractions_skippedCount] = 0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC13SiriInference17FetchInteractions_databaseUrl];
  uint64_t v3 = sub_1C68E9968();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id FetchInteractions.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C6734FD0()
{
}

uint64_t sub_1C6734FDC()
{
  return type metadata accessor for FetchInteractions();
}

uint64_t type metadata accessor for FetchInteractions()
{
  uint64_t result = qword_1EBBF64B0;
  if (!qword_1EBBF64B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C673502C()
{
  sub_1C6641300();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_1C67350CC()
{
  unint64_t result = qword_1EBBF6090;
  if (!qword_1EBBF6090)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBBF6090);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_42()
{
  return v0;
}

BOOL sub_1C6735130(uint64_t a1)
{
  return (unint64_t)(a1 - 1900) < 0xC9;
}

uint64_t sub_1C6735140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a3;
  uint64_t v59 = a2;
  uint64_t v57 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_15();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406728);
  uint64_t v12 = OUTLINED_FUNCTION_3(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1_15();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406730);
  uint64_t v17 = OUTLINED_FUNCTION_3(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_1_15();
  uint64_t v20 = v19 - v18;
  uint64_t v58 = sub_1C68E9698();
  OUTLINED_FUNCTION_0_50();
  uint64_t v22 = v21;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v56 - v27;
  uint64_t v29 = v4 + OBJC_IVAR____TtC13SiriInference11FirstAdvent_calendar;
  uint64_t v30 = sub_1C68E9DD8();
  OUTLINED_FUNCTION_1_0();
  id v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  v56[0] = v29;
  v32(v20, v29, v30);
  __swift_storeEnumTagSinglePayload(v20, 0, 1, v30);
  uint64_t v33 = sub_1C68E9E28();
  OUTLINED_FUNCTION_1_0();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  v56[2] = a4;
  uint64_t v36 = a4;
  uint64_t v37 = v59;
  v35(v15, v36, v33);
  __swift_storeEnumTagSinglePayload(v15, 0, 1, v33);
  sub_1C68E9648();
  sub_1C68E9548();
  uint64_t v38 = sub_1C68E9B78();
  if (__swift_getEnumTagSinglePayload(v10, 1, v38) == 1)
  {
    sub_1C6645080(v10);
    sub_1C6735C20();
    OUTLINED_FUNCTION_3_45();
    *(void *)uint64_t v39 = v37;
    *(unsigned char *)(v39 + 8) = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v58);
  }
  else
  {
    OUTLINED_FUNCTION_0_50();
    uint64_t v41 = v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v57, v10, v38);
    sub_1C68E9CE8();
    uint64_t v43 = sub_1C68E9598();
    uint64_t v37 = v44;
    unint64_t v47 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v45 = v22 + 8;
    uint64_t v46 = v47;
    uint64_t v48 = v26;
    uint64_t v49 = v58;
    v47(v48, v58);
    if (v37)
    {
      sub_1C6735C20();
      OUTLINED_FUNCTION_3_45();
      *(void *)uint64_t v54 = 0;
      *(unsigned char *)(v54 + 8) = 2;
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v57, v38);
      v46(v28, v49);
    }
    else
    {
      uint64_t v60 = v45;
      uint64_t v50 = v57;
      uint64_t v51 = sub_1C673B88C(v43);
      if (v51 == 12)
      {
        sub_1C6735C20();
        OUTLINED_FUNCTION_3_45();
        *(void *)uint64_t v52 = v43;
        *(unsigned char *)(v52 + 8) = 1;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v50, v38);
      }
      else
      {
        uint64_t v37 = v51;
      }
      uint64_t v53 = OUTLINED_FUNCTION_2_58();
      ((void (*)(uint64_t))v46)(v53);
    }
  }
  return v37;
}

uint64_t sub_1C67355E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  sub_1C68E9DB8();
  OUTLINED_FUNCTION_0_50();
  uint64_t v49 = v6;
  uint64_t v50 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  uint64_t v48 = v8 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6808);
  uint64_t v10 = OUTLINED_FUNCTION_3(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1_15();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_1C68E9B78();
  OUTLINED_FUNCTION_0_50();
  uint64_t v51 = v15;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v44 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = a1;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = v52;
  uint64_t result = sub_1C6735140((uint64_t)&v44 - v23, 5, v26, a2);
  if (!v28)
  {
    uint64_t v45 = v19;
    uint64_t v46 = v13;
    uint64_t v30 = v50;
    if (result == 10)
    {
      uint64_t v52 = 0;
      uint64_t v44 = v27;
      uint64_t v31 = v24;
    }
    else
    {
      sub_1C6735140((uint64_t)v22, 4, v25, v27);
      uint64_t v32 = v51;
      uint64_t v31 = v24;
      uint64_t v52 = 0;
      uint64_t v44 = v27;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v14);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v24, v22, v14);
    }
    uint64_t v34 = v48;
    uint64_t v33 = v49;
    uint64_t v35 = v30;
    (*(void (**)(uint64_t, void, uint64_t))(v49 + 104))(v48, *MEMORY[0x1E4F27BF0], v30);
    uint64_t v36 = v46;
    sub_1C68E9D68();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
    if (__swift_getEnumTagSinglePayload(v36, 1, v14) == 1)
    {
      sub_1C6645080(v36);
      sub_1C6735C20();
      uint64_t v37 = OUTLINED_FUNCTION_3_45();
      *(void *)uint64_t v38 = 1;
      *(unsigned char *)(v38 + 8) = 2;
      uint64_t v52 = v37;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v31, v14);
    }
    else
    {
      uint64_t v39 = v51;
      uint64_t v40 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v45, v36, v14);
      uint64_t v41 = swift_retain();
      uint64_t v42 = sub_1C676B9A4(v41);
      swift_release();
      sub_1C664AC88(v42, v40, v47);
      swift_bridgeObjectRelease();
      uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v43(v40, v14);
      return ((uint64_t (*)(char *, uint64_t))v43)(v31, v14);
    }
  }
  return result;
}

uint64_t sub_1C6735990()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SiriInference11FirstAdvent_calendar;
  sub_1C68E9DD8();
  OUTLINED_FUNCTION_1_0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  return swift_deallocClassInstance();
}

uint64_t sub_1C6735A28()
{
  return type metadata accessor for FirstAdvent();
}

uint64_t type metadata accessor for FirstAdvent()
{
  uint64_t result = qword_1EA408590;
  if (!qword_1EA408590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C6735A78()
{
  uint64_t result = sub_1C68E9DD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C6735B08()
{
  uint64_t v1 = sub_1C68E9C88();
  OUTLINED_FUNCTION_0_50();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_15();
  uint64_t v7 = v6 - v5;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v6 - v5, *MEMORY[0x1E4F27B20], v1);
  sub_1C68E9C98();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v0;
}

BOOL sub_1C6735BE0(uint64_t a1)
{
  return sub_1C6735130(a1);
}

uint64_t sub_1C6735BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C67355E4(a1, a2, a3);
}

unint64_t sub_1C6735C20()
{
  unint64_t result = qword_1EA4085A0;
  if (!qword_1EA4085A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FirstAdventError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FirstAdventError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C6735CF0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C6735D08(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FirstAdventError()
{
  return &type metadata for FirstAdventError;
}

uint64_t OUTLINED_FUNCTION_2_58()
{
  return v0;
}

uint64_t getEnumTagSinglePayload for PLUSTrialFactors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ForcePromptingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6735EACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForcePromptingStrategy()
{
  return &type metadata for ForcePromptingStrategy;
}

uint64_t sub_1C6735EE4(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = 0;
  unint64_t result = MEMORY[0x1C87A5510](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3) {
    return sub_1C6735EE4(v6, a2, a3);
  }
  return result;
}

uint64_t sub_1C6735F90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0C10;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  type metadata accessor for DateTime();
  swift_allocObject();
  OUTLINED_FUNCTION_1_66();
  *(void *)(inited + 56) = OUTLINED_FUNCTION_0_63(9, v1, v2, v3, v4, v5, v6, v7);
  *(_OWORD *)(inited + 64) = xmmword_1C68FD720;
  *(unsigned char *)(inited + 80) = 0;
  OUTLINED_FUNCTION_2_59();
  OUTLINED_FUNCTION_1_66();
  *(void *)(inited + 88) = OUTLINED_FUNCTION_0_63(10, v8, v9, v10, v11, v12, v13, v14);
  *(_OWORD *)(inited + 96) = xmmword_1C68FC220;
  *(unsigned char *)(inited + 112) = 0;
  OUTLINED_FUNCTION_2_59();
  OUTLINED_FUNCTION_1_66();
  *(void *)(inited + 120) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(12, 0, 0, v15, 2, 0, 0, v16);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_0_63(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  return DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(a1, 0, 0, a4, 12, 0, 0, a8);
}

uint64_t OUTLINED_FUNCTION_2_59()
{
  return swift_allocObject();
}

_UNKNOWN **sub_1C67360F4()
{
  return &off_1F2186430;
}

_UNKNOWN **sub_1C6736100()
{
  return &off_1F2186400;
}

uint64_t DateTime.Date.Holiday.Frequency.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.Holiday.Frequency.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C6736134()
{
  unint64_t result = qword_1EA4085A8;
  if (!qword_1EA4085A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085A8);
  }
  return result;
}

uint64_t sub_1C6736180@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.Holiday.Frequency.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C6736188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateTime.Date.Holiday.Frequency.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C67361B0()
{
  return sub_1C68ECBA8();
}

uint64_t sub_1C6736210()
{
  return sub_1C68ECB78();
}

unsigned char *_s9FrequencyOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C673632CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.Holiday.Frequency()
{
  return &type metadata for DateTime.Date.Holiday.Frequency;
}

unint64_t sub_1C6736364()
{
  unint64_t result = qword_1EA4085B0;
  if (!qword_1EA4085B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085B0);
  }
  return result;
}

uint64_t sub_1C67363B0()
{
  return 1;
}

uint64_t static GetSuggestionsIntent.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1C67363C0()
{
  return 1;
}

uint64_t static GetSuggestionsIntentResponse.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1C67363D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406728);
  MEMORY[0x1F4188790](v2 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA406730);
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_1_15();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1C68E9C88();
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1_15();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1C68E9DD8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_15();
  uint64_t v23 = v22 - v21;
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v16, *MEMORY[0x1E4F27B20], v10);
  sub_1C68E9C98();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v9, v23, v17);
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v17);
  uint64_t v24 = sub_1C68E9E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v5, a2, v24);
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v24);
  sub_1C68E9648();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
}

uint64_t type metadata accessor for GregorianEasterHoliday()
{
  return self;
}

uint64_t sub_1C67367C0(uint64_t a1, uint64_t a2)
{
  return sub_1C67363D0(a1, a2);
}

uint64_t sub_1C67367D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1C669F7F0();
    uint64_t v3 = v8;
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      sub_1C68ED7B8();
      sub_1C68ECA18();
      swift_bridgeObjectRelease();
      sub_1C68ECA18();
      unint64_t v5 = *(void *)(v8 + 16);
      if (v5 >= *(void *)(v8 + 24) >> 1) {
        sub_1C669F7F0();
      }
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = 40;
      *(void *)(v6 + 40) = 0xE100000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C673696C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v7[0] = a1;
    v7[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C6736EA8(v7, a3, &v6, &v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1C6736A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C669F7F0();
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = sub_1C68ED7B8();
      uint64_t v6 = v5;
      unint64_t v7 = *(void *)(v11 + 16);
      if (v7 >= *(void *)(v11 + 24) >> 1) {
        sub_1C669F7F0();
      }
      ++v3;
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v6;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
  sub_1C65C2B80();
  uint64_t v9 = sub_1C68EC818();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C6736B80(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  sub_1C65C74BC();
  uint64_t v2 = sub_1C68ED1A8();
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = (unint64_t *)(v2 + 56);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v7 = *(v4 - 3);
    unint64_t v6 = *(v4 - 2);
    if ((v6 ^ v7) < 0x4000) {
      goto LABEL_15;
    }
    unint64_t v9 = *(v4 - 1);
    unint64_t v8 = *v4;
    if ((*v4 & 0x1000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = (uint64_t)sub_1C67374A4(v7, v6, v9, v8, 10);
      char v16 = v15;
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_15;
      }
    }
    else
    {
      if ((v8 & 0x2000000000000000) != 0)
      {
        uint64_t v11 = HIBYTE(v8) & 0xF;
        uint64_t v20 = *(v4 - 1);
        uint64_t v21 = v8 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v10 = &v20;
      }
      else if ((v9 & 0x1000000000000000) != 0)
      {
        uint64_t v10 = (uint64_t *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v10 = (uint64_t *)sub_1C68ED408();
      }
      uint64_t v12 = sub_1C6737814((uint64_t)v10, v11, v7, v6, v9, v8, 10);
      if (v13) {
        goto LABEL_15;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C65C80A4();
      uint64_t v5 = v17;
    }
    unint64_t v14 = *(void *)(v5 + 16);
    if (v14 >= *(void *)(v5 + 24) >> 1)
    {
      sub_1C65C80A4();
      uint64_t v5 = v18;
    }
    *(void *)(v5 + 16) = v14 + 1;
    *(void *)(v5 + 8 * v14 + 32) = v12;
LABEL_15:
    v4 += 4;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C6736D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C6736B80(a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0550;
  *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 64) = &off_1F2186408;
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C6675B44(0xD000000000000032, 0x80000001C6918130, inited);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    uint64_t v10 = inited;
    sub_1C65C7004();
  }
  else
  {
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    swift_setDeallocating();
    sub_1C65C7004();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C673696C(v11, v12, v6);
    sub_1C67262EC(v11);
    swift_bridgeObjectRelease();
  }
  return v10;
}

unint64_t sub_1C6736EA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C6833168(25705, 0xE200000000000000, v7);
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_1C682FC10();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1C65CF634();
    uint64_t v14 = swift_allocError();
    char v15 = 1;
LABEL_8:
    *(_OWORD *)uint64_t v13 = xmmword_1C68FD170;
    *(void *)(v13 + 16) = v12;
    *(unsigned char *)(v13 + 24) = v15;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    *a3 = v14;
    return result;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v8 + 16))
  {
    sub_1C65CE6F8(v8 + 40 * result + 32, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5950);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      *a4 = v16;
      a4[1] = a2;
      return result;
    }
    sub_1C65CF634();
    uint64_t v14 = swift_allocError();
    uint64_t v12 = 0;
    char v15 = 3;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C6737038()
{
  uint64_t v2 = v0[1];
  if (*(void *)(v2 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5A68);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C68F0710;
    uint64_t v4 = sub_1C6736A30(inited, v2);
    uint64_t v5 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 64) = &off_1F2186408;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v6;
    uint64_t v7 = *(void *)(v2 + 16);
    *(void *)(inited + 96) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 104) = &off_1F2186428;
    *(void *)(inited + 72) = v7;
    sub_1C65E2E30(0xD000000000000069, 0x80000001C69180C0, inited);
    if (v1)
    {
      swift_setDeallocating();
      return sub_1C65C7004();
    }
    else
    {
      swift_release();
      swift_setDeallocating();
      sub_1C65C7004();
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C68F0550;
      uint64_t v11 = sub_1C6736A30(v10, v2);
      *(void *)(v10 + 56) = v5;
      *(void *)(v10 + 64) = &off_1F2186408;
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v12;
      sub_1C65CD5E4(0xD000000000000032, 0x80000001C6918130, v10, (uint64_t)&v14);
      swift_setDeallocating();
      uint64_t result = sub_1C65C7004();
      if (v15)
      {
        sub_1C65C490C(&v14, (uint64_t)v16);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF5948);
        uint64_t result = swift_dynamicCast();
        void *v0 = v17;
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    type metadata accessor for InferenceError();
    swift_allocObject();
    uint64_t v8 = sub_1C6757C90(61, 0, 0xE000000000000000, 0xD000000000000069, 0x80000001C6918030, 0x5F28747265737075, 0xEA0000000000293ALL, 51, MEMORY[0x1E4FBC860], 1);
    sub_1C669521C();
    OUTLINED_FUNCTION_1_67();
    uint64_t *v9 = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C67372B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_1C67367D8(v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
    sub_1C65C2B80();
    sub_1C68EC818();
    swift_bridgeObjectRelease();
    sub_1C68ED398();
    sub_1C68ECA18();
    sub_1C68ECA18();
    swift_bridgeObjectRelease();
    sub_1C68ECA18();
    sub_1C65E2E30(0, 0xE000000000000000, MEMORY[0x1E4FBC860]);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v3) {
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for InferenceError();
    swift_allocObject();
    uint64_t v6 = sub_1C6757C90(61, 0, 0xE000000000000000, 0xD000000000000069, 0x80000001C6918030, 0xD000000000000017, 0x80000001C69180A0, 64, MEMORY[0x1E4FBC860], 1);
    sub_1C669521C();
    OUTLINED_FUNCTION_1_67();
    uint64_t *v7 = v6;
    return swift_willThrow();
  }
  return result;
}

unsigned __int8 *sub_1C67374A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1C6737C10();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C68ECB08();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1C679EE9C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_1C68ED408();
  }
LABEL_7:
  uint64_t v13 = sub_1C6737598(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1C6737598(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          uint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C6737814(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  unint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    uint64_t result = sub_1C68D3238(a3, a5, a6);
    unint64_t v16 = result;
  }
  uint64_t v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    unint64_t v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_95;
    }
    uint64_t result = sub_1C68ECA88();
    uint64_t v18 = result;
    uint64_t v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    uint64_t v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    uint64_t v20 = v17;
    uint64_t result = sub_1C68D3238(v11, a5, a6);
    uint64_t v17 = v20;
    unint64_t v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    unint64_t v21 = a4;
    uint64_t v22 = v17;
    uint64_t result = sub_1C68D3238(v21, a5, a6);
    uint64_t v17 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    uint64_t result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  unint64_t v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    unint64_t v23 = v17;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_91;
  }
  if (v23 < a4 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_1C68ECA88();
LABEL_22:
  uint64_t v24 = v18 + result;
  if (__OFADD__(v18, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v24 < v18)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  unsigned __int8 v25 = (unsigned __int8 *)(v12 + v18);
  if (!v12) {
    unsigned __int8 v25 = 0;
  }
  int v26 = *v25;
  if (v26 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        OUTLINED_FUNCTION_0_64();
        if (v38)
        {
          OUTLINED_FUNCTION_2_60();
          do
          {
            unsigned int v44 = *v39;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                uint64_t v36 = 0;
                if (v44 < 0x61 || v44 >= v40) {
                  return v36;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v33 * a7;
            if ((unsigned __int128)(v33 * (__int128)a7) >> 64 != (v33 * a7) >> 63) {
              return 0;
            }
            uint64_t v33 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45))) {
              return 0;
            }
            ++v39;
            --v43;
          }
          while (v43);
          return v33;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v26 != 45)
  {
    if (v24 != v18)
    {
      OUTLINED_FUNCTION_0_64();
      if (v48 ^ v49 | v47) {
        unsigned __int8 v52 = v55;
      }
      if (v48 ^ v49 | v47) {
        unsigned __int8 v53 = 65;
      }
      if (!(v48 ^ v49 | v47)) {
        unsigned __int8 v54 = 58;
      }
      if (v51)
      {
        uint64_t v56 = 0;
        do
        {
          unsigned int v57 = *v51;
          if (v57 < 0x30 || v57 >= v54)
          {
            if (v57 < 0x41 || v57 >= v53)
            {
              uint64_t v36 = 0;
              if (v57 < 0x61 || v57 >= v52) {
                return v36;
              }
              char v58 = -87;
            }
            else
            {
              char v58 = -55;
            }
          }
          else
          {
            char v58 = -48;
          }
          uint64_t v59 = v56 * a7;
          if ((unsigned __int128)(v56 * (__int128)a7) >> 64 != (v56 * a7) >> 63) {
            return 0;
          }
          uint64_t v56 = v59 + (v57 + v58);
          if (__OFADD__(v59, (v57 + v58))) {
            return 0;
          }
          ++v51;
          --v50;
        }
        while (v50);
        return v59 + (v57 + v58);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      OUTLINED_FUNCTION_0_64();
      if (v27)
      {
        OUTLINED_FUNCTION_2_60();
        while (1)
        {
          unsigned int v34 = *v28;
          if (v34 < 0x30 || v34 >= v31)
          {
            if (v34 < 0x41 || v34 >= v30)
            {
              uint64_t v36 = 0;
              if (v34 < 0x61 || v34 >= v29) {
                return v36;
              }
              char v35 = -87;
            }
            else
            {
              char v35 = -55;
            }
          }
          else
          {
            char v35 = -48;
          }
          uint64_t v37 = v33 * a7;
          if ((unsigned __int128)(v33 * (__int128)a7) >> 64 != (v33 * a7) >> 63) {
            return 0;
          }
          uint64_t v33 = v37 - (v34 + v35);
          if (__OFSUB__(v37, (v34 + v35))) {
            return 0;
          }
          ++v28;
          if (!--v32) {
            return v33;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

unint64_t sub_1C6737C10()
{
  unint64_t result = qword_1EA4085B8;
  if (!qword_1EA4085B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085B8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_67()
{
  return swift_allocError();
}

uint64_t sub_1C6737CA8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA405F80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C68F0C10;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 2;
  char v24 = 1;
  char v23 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  *(void *)(inited + 56) = DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(4, 0, 0, &v24, 6, 0, 0, &v23);
  *(_OWORD *)(inited + 64) = xmmword_1C68FD8B0;
  *(unsigned char *)(inited + 80) = 0;
  uint64_t v1 = OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 88) = OUTLINED_FUNCTION_0_65(v1, v2, v3, v4, v5, v6, v7, v8, v18, *(int *)v20, *(__int16 *)&v20[4], v23, v24);
  *(_OWORD *)(inited + 96) = xmmword_1C68EFF40;
  *(unsigned char *)(inited + 112) = 0;
  uint64_t v9 = OUTLINED_FUNCTION_0_3();
  *(void *)(inited + 120) = OUTLINED_FUNCTION_0_65(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, v22, v23, v24);
  sub_1C661C0B4();
  return sub_1C68EC748();
}

uint64_t OUTLINED_FUNCTION_0_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, &a13, 7, 0, 0, &a12);
}

void sub_1C6737DDC()
{
  qword_1EBBF7A38 = -1;
}

uint64_t sub_1C6737DEC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C676B1E0();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1C6739174(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C6737E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5();
  uint64_t v10 = v8 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v28 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v28[1] = a2;
    uint64_t v32 = MEMORY[0x1E4FBC860];
    sub_1C66A0598();
    uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
    v28[0] = a1;
    uint64_t v16 = a1 + ((v15 + 32) & ~v15);
    uint64_t v29 = *(void *)(v6 + 72);
    unsigned __int8 v30 = v13;
    uint64_t v31 = v4;
    while (1)
    {
      sub_1C67390B4(v16, (uint64_t)v13);
      sub_1C67390B4((uint64_t)v13, v10);
      uint64_t result = sub_1C68E9A48();
      double v19 = round(v18);
      if ((~*(void *)&v19 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v19 <= -9.22337204e18) {
        goto LABEL_15;
      }
      if (v19 >= 9.22337204e18) {
        goto LABEL_16;
      }
      int v20 = *(_DWORD *)(v10 + *(int *)(v4 + 32));
      int v21 = (uint64_t *)(v10 + *(int *)(v4 + 40));
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      uint64_t v24 = v21[2];
      sub_1C6739118(v10);
      sub_1C6739118((uint64_t)v13);
      uint64_t v25 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C66A0598();
        uint64_t v25 = v32;
      }
      unint64_t v26 = *(void *)(v25 + 16);
      if (v26 >= *(void *)(v25 + 24) >> 1)
      {
        sub_1C66A0598();
        uint64_t v25 = v32;
      }
      *(void *)(v25 + 16) = v26 + 1;
      uint64_t v27 = v25 + 40 * v26;
      *(void *)(v27 + 32) = (uint64_t)v19;
      *(_DWORD *)(v27 + 40) = v20;
      *(void *)(v27 + 48) = v22;
      *(void *)(v27 + 56) = v23;
      *(void *)(v27 + 64) = v24;
      uint64_t v13 = v30;
      v16 += v29;
      --v14;
      uint64_t v4 = v31;
      if (!v14)
      {
        swift_bridgeObjectRelease();
        return sub_1C67380AC(v25);
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    return sub_1C67380AC(v25);
  }
  return result;
}

uint64_t sub_1C67380AC(uint64_t a1)
{
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  sub_1C6737DEC(&v3);
  swift_bridgeObjectRelease();
  uint64_t v1 = v3;
  sub_1C6738124(v3);
  return v1;
}

uint64_t sub_1C6738124(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1C68EC748();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = (unsigned int *)(a1 + 40);
  uint64_t v5 = 1;
  while (1)
  {
    uint64_t v6 = *((void *)v4 - 1);
    unsigned int v7 = *v4;
    if (v2[2])
    {
      sub_1C6850B90(*v4);
      if (v8) {
        goto LABEL_14;
      }
    }
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v9 = sub_1C6850B90(v7);
    if (__OFADD__(v2[2], (v10 & 1) == 0)) {
      break;
    }
    unint64_t v11 = v9;
    char v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4085C0);
    if (sub_1C68ED4D8())
    {
      unint64_t v13 = sub_1C6850B90(v7);
      if ((v12 & 1) != (v14 & 1)) {
        goto LABEL_20;
      }
      unint64_t v11 = v13;
    }
    if (v12)
    {
      uint64_t v15 = v2[7] + 24 * v11;
      *(_DWORD *)uint64_t v15 = v7;
      *(void *)(v15 + 8) = v6;
      *(void *)(v15 + 16) = v5;
    }
    else
    {
      v2[(v11 >> 6) + 8] |= 1 << v11;
      *(_DWORD *)(v2[6] + 4 * v11) = v7;
      uint64_t v16 = v2[7] + 24 * v11;
      *(_DWORD *)uint64_t v16 = v7;
      *(void *)(v16 + 8) = v6;
      *(void *)(v16 + 16) = v5;
      uint64_t v17 = v2[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_19;
      }
      v2[2] = v19;
    }
    swift_bridgeObjectRelease();
    BOOL v18 = __OFADD__(v5++, 1);
    if (v18) {
      goto LABEL_18;
    }
LABEL_14:
    v4 += 10;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1C68ED868();
  __break(1u);
  return result;
}

double sub_1C67382F0(int a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0.0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)(a2 + 64);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v13 = v2;
  do
  {
    if (*((_DWORD *)v5 - 6) == a1)
    {
      uint64_t v7 = *(v5 - 4);
      long long v14 = *((_OWORD *)v5 - 1);
      uint64_t v8 = *v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C66A0598();
      }
      unint64_t v9 = *(void *)(v6 + 16);
      if (v9 >= *(void *)(v6 + 24) >> 1) {
        sub_1C66A0598();
      }
      *(void *)(v6 + 16) = v9 + 1;
      uint64_t v10 = v6 + 40 * v9;
      *(void *)(v10 + 32) = v7;
      *(_DWORD *)(v10 + 40) = a1;
      *(_OWORD *)(v10 + 48) = v14;
      *(void *)(v10 + 64) = v8;
    }
    v5 += 5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v6 + 16);
  swift_release();
  *(float *)&double result = (float)v11 / (float)v13;
  return result;
}

uint64_t sub_1C6738430(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return -1;
  }
  unint64_t v6 = sub_1C6850B90(a1);
  if ((v7 & 1) == 0) {
    return -1;
  }
  uint64_t v8 = *(void *)(*(void *)(a4 + 56) + 24 * v6 + 8);
  uint64_t result = a3 - v8;
  if (__OFSUB__(a3, v8))
  {
    __break(1u);
    return -1;
  }
  return result;
}

uint64_t sub_1C6738484(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16) && (unint64_t v5 = sub_1C6850B90(a1), (v6 & 1) != 0)) {
    return *(void *)(*(void *)(a4 + 56) + 24 * v5 + 16);
  }
  else {
    return -1;
  }
}

uint64_t sub_1C67384CC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return -1;
  }
  if (*(_DWORD *)(a2 + 40) == result)
  {
    unint64_t i = 0;
    goto LABEL_4;
  }
  if (v2 == 1) {
    return -1;
  }
  char v7 = (int *)(a2 + 80);
  for (unint64_t i = 1; ; ++i)
  {
    int v8 = *v7;
    v7 += 10;
    if (v8 == result) {
      break;
    }
    unint64_t v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v9 == v2) {
      return -1;
    }
  }
LABEL_4:
  if (i >= v2)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  unint64_t v5 = (_DWORD *)(a2 + 40);
  while (*((void *)v5 - 1) >= *(void *)(a2 + 32 + 40 * i) || *v5 == result)
  {
    v5 += 10;
    if (v2 == ++v4)
    {
      uint64_t v4 = *(void *)(a2 + 16);
      break;
    }
  }
  uint64_t result = v4 - i;
  if (__OFSUB__(v4, i)) {
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1C673857C()
{
  return 91;
}

uint64_t sub_1C67386D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v57 = a2;
  char v58 = a3;
  uint64_t v4 = sub_1C68EA2D8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA40A0C0);
  MEMORY[0x1F4188790](v10 - 8);
  OUTLINED_FUNCTION_5();
  uint64_t v56 = v11 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v55 - v15;
  MEMORY[0x1F4188790](v14);
  BOOL v18 = (char *)&v55 - v17;
  uint64_t v19 = *MEMORY[0x1E4FA40F8];
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v59(v9, v19, v4);
  uint64_t v20 = sub_1C68EA2E8();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(uint64_t))(v6 + 8);
  uint64_t v24 = OUTLINED_FUNCTION_2_61();
  v23(v24);
  uint64_t v60 = a1;
  sub_1C68335F8(v20, v22, a1);
  swift_bridgeObjectRelease();
  sub_1C68E9FF8();
  OUTLINED_FUNCTION_10_33((uint64_t)v18);
  if (v25)
  {
    sub_1C6738A1C((uint64_t)v18);
LABEL_5:
    uint64_t v26 = -1;
    goto LABEL_6;
  }
  uint64_t v26 = sub_1C68E9FE8();
  char v28 = v27;
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_4_43();
  v29();
  if (v28) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v30 = OUTLINED_FUNCTION_6_46();
  v31(v30);
  uint64_t v32 = sub_1C68EA2E8();
  uint64_t v34 = v33;
  uint64_t v35 = OUTLINED_FUNCTION_2_61();
  v23(v35);
  sub_1C68335F8(v32, v34, v60);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_33((uint64_t)v16);
  if (v25)
  {
    sub_1C6738A1C((uint64_t)v16);
  }
  else
  {
    uint64_t v36 = sub_1C68E9FE8();
    char v38 = v37;
    OUTLINED_FUNCTION_8_43();
    OUTLINED_FUNCTION_4_43();
    v39();
    if ((v38 & 1) == 0)
    {
      uint64_t v55 = v36;
      uint64_t v40 = v26;
      goto LABEL_12;
    }
  }
  uint64_t v40 = v26;
  uint64_t v55 = -1;
LABEL_12:
  uint64_t v41 = OUTLINED_FUNCTION_6_46();
  v42(v41);
  uint64_t v43 = sub_1C68EA2E8();
  uint64_t v45 = v44;
  uint64_t v46 = OUTLINED_FUNCTION_2_61();
  v23(v46);
  uint64_t v47 = v56;
  sub_1C68335F8(v43, v45, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_33(v47);
  if (v25)
  {
    uint64_t result = sub_1C6738A1C(v47);
LABEL_16:
    uint64_t v48 = -1;
    goto LABEL_17;
  }
  uint64_t v48 = sub_1C68E9FE8();
  char v50 = v49;
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_4_43();
  uint64_t result = v51();
  if (v50) {
    goto LABEL_16;
  }
LABEL_17:
  unsigned __int8 v53 = v58;
  *char v58 = v57;
  *((_DWORD *)v53 + 2) = 0;
  uint64_t v54 = v55;
  v53[2] = v40;
  uint64_t v53[3] = v54;
  v53[4] = v48;
  return result;
}

uint64_t sub_1C6738A1C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA40A0C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1C6738A7C(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1C6738A90()
{
  uint64_t v1 = sub_1C68EA2D8();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_5();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = *(void (**)(void))(v3 + 16);
  OUTLINED_FUNCTION_11_32();
  v8();
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v1);
  if (v9 == *MEMORY[0x1E4FA40F8]) {
    return v0[2];
  }
  if (v9 == *MEMORY[0x1E4FA4108]) {
    return v0[3];
  }
  if (v9 == *MEMORY[0x1E4FA4100]) {
    return v0[4];
  }
  if (qword_1EA4057A0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C68EC478();
  uint64_t v12 = (void (*)(uint64_t))__swift_project_value_buffer(v11, (uint64_t)qword_1EA442868);
  OUTLINED_FUNCTION_11_32();
  v8();
  uint64_t v13 = sub_1C68EC458();
  os_log_type_t v14 = sub_1C68ECE58();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    unint64_t v28 = swift_slowAlloc();
    v30[0] = v28;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v16 = sub_1C68EA2C8();
    uint64_t v12 = (void (*)(uint64_t))v17;
    sub_1C65B4078(v16, v17, (uint64_t)v30, v18, v19, v20, v21, v22, v27, v28, v29, v30[0], v30[1], v30[2], v30[3], v30[4], v30[5], v30[6], v30[7],
      v30[8]);
    uint64_t v29 = v23;
    sub_1C68ED0C8();
    swift_bridgeObjectRelease();
    uint64_t v24 = OUTLINED_FUNCTION_3_48();
    v12(v24);
    _os_log_impl(&dword_1C65AE000, v13, v14, "Unexpected granularity: %s", v15, 0xCu);
    unint64_t v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x1C87A54F0](v25, -1, -1);
    MEMORY[0x1C87A54F0](v15, -1, -1);
  }
  else
  {
    uint64_t v26 = OUTLINED_FUNCTION_3_48();
    v12(v26);
  }

  ((void (*)(char *, uint64_t))v12)(v7, v1);
  return -1;
}

BOOL sub_1C6738D3C(uint64_t a1, uint64_t a2)
{
  return !memcmp((const void *)a1, (const void *)a2, 0xCuLL)
      && memcmp((const void *)(a1 + 16), (const void *)(a2 + 16), 0x18uLL) == 0;
}

BOOL sub_1C6738D90(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1C67037B4(v5, v7);
}

BOOL sub_1C6738DDC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1C6703AC0(v5, v7);
}

BOOL sub_1C6738E28(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1C6703DCC(v5, v7);
}

BOOL sub_1C6738E7C()
{
  uint64_t v0 = sub_1C6738A90();
  return v0 == sub_1C6738A90();
}

uint64_t sub_1C6738EDC(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = (void *)(a1 + 64);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    do
    {
      if (*((_DWORD *)v4 - 6) == a2)
      {
        uint64_t v6 = *(v4 - 4);
        long long v12 = *((_OWORD *)v4 - 1);
        uint64_t v7 = *v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C66A0598();
        }
        unint64_t v8 = *(void *)(v5 + 16);
        if (v8 >= *(void *)(v5 + 24) >> 1) {
          sub_1C66A0598();
        }
        *(void *)(v5 + 16) = v8 + 1;
        uint64_t v9 = v5 + 40 * v8;
        *(void *)(v9 + 32) = v6;
        *(_DWORD *)(v9 + 40) = a2;
        *(_OWORD *)(v9 + 48) = v12;
        *(void *)(v9 + 64) = v7;
      }
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(v5 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

float sub_1C6739020(unsigned int a1, uint64_t a2, uint64_t a3)
{
  float v3 = -1.0;
  if (*(void *)(a3 + 16))
  {
    unint64_t v5 = sub_1C6850B90(a1);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(a3 + 56) + 8 * v5);
      if (*(void *)(v7 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C6850BD8();
        if (v9) {
          float v3 = *(float *)(*(void *)(v7 + 56) + 16 * v8 + 8);
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  return v3;
}

uint64_t sub_1C67390B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LearnedDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C6739118(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LearnedDisambiguation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C6739174(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C68ED798();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1C67397E0(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_125;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1C666E610(v3 / 2);
  unint64_t v96 = a1;
  uint64_t v97 = result;
  uint64_t v99 = v3;
  uint64_t v100 = v6;
  if (v3 <= 0)
  {
    uint64_t v101 = MEMORY[0x1E4FBC860];
    unint64_t v32 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_91:
    if (v32 < 2)
    {
LABEL_102:
      uint64_t result = swift_bridgeObjectRelease();
      if (v99 >= -1)
      {
        *(void *)(v97 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_130;
    }
    uint64_t v89 = *v96;
    while (1)
    {
      unint64_t v90 = v32 - 2;
      if (v32 < 2) {
        break;
      }
      if (!v89) {
        goto LABEL_134;
      }
      uint64_t v91 = v101;
      uint64_t v92 = *(void *)(v101 + 32 + 16 * v90);
      uint64_t v93 = *(void *)(v101 + 32 + 16 * (v32 - 1) + 8);
      uint64_t result = sub_1C6739870((char *)(v89 + 40 * v92), (char *)(v89 + 40 * *(void *)(v101 + 32 + 16 * (v32 - 1))), v89 + 40 * v93, v100);
      if (v1) {
        goto LABEL_87;
      }
      if (v93 < v92) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C676B0EC();
        uint64_t v91 = result;
      }
      if (v90 >= *(void *)(v91 + 16)) {
        goto LABEL_121;
      }
      int64_t v94 = (void *)(v91 + 32 + 16 * v90);
      *int64_t v94 = v92;
      v94[1] = v93;
      unint64_t v95 = *(void *)(v91 + 16);
      if (v32 > v95) {
        goto LABEL_122;
      }
      uint64_t result = (uint64_t)memmove((void *)(v91 + 32 + 16 * (v32 - 1)), (const void *)(v91 + 32 + 16 * v32), 16 * (v95 - v32));
      uint64_t v101 = v91;
      *(void *)(v91 + 16) = v95 - 1;
      unint64_t v32 = v95 - 1;
      if (v95 <= 2) {
        goto LABEL_102;
      }
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v101 = MEMORY[0x1E4FBC860];
  uint64_t v98 = v5;
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 < v3)
    {
      uint64_t v10 = *(void *)(v8 + 40 * v7);
      uint64_t v11 = *(void *)(v8 + 40 * v9);
      uint64_t v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        long long v12 = (uint64_t *)(v8 + 80 + 40 * v9);
        uint64_t v13 = v10;
        while (1)
        {
          uint64_t v15 = *v12;
          v12 += 5;
          uint64_t v14 = v15;
          if (v11 < v10 == v13 >= v15) {
            break;
          }
          ++v7;
          uint64_t v13 = v14;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v10)
      {
        if (v7 < v9) {
          goto LABEL_127;
        }
        if (v9 < v7)
        {
          uint64_t v16 = 40 * v7;
          uint64_t v17 = 40 * v9;
          uint64_t v18 = v7;
          uint64_t v19 = v9;
          do
          {
            if (v19 != --v18)
            {
              if (!v8) {
                goto LABEL_133;
              }
              uint64_t v20 = v8 + v17;
              uint64_t v21 = *(void *)(v8 + v17);
              uint64_t v22 = v8 + v16;
              int v23 = *(_DWORD *)(v8 + v17 + 8);
              uint64_t v24 = *(void *)(v8 + v17 + 32);
              long long v25 = *(_OWORD *)(v8 + v17 + 16);
              uint64_t v26 = *(void *)(v8 + v16 - 8);
              long long v27 = *(_OWORD *)(v8 + v16 - 24);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)(v8 + v16 - 40);
              *(_OWORD *)(v20 + 16) = v27;
              *(void *)(v20 + 32) = v26;
              *(void *)(v22 - 40) = v21;
              *(_DWORD *)(v22 - 32) = v23;
              *(_OWORD *)(v22 - 24) = v25;
              *(void *)(v22 - 8) = v24;
            }
            ++v19;
            v16 -= 40;
            v17 += 40;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 >= v3) {
      goto LABEL_26;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_124;
    }
    if (v7 - v9 >= v5) {
      goto LABEL_26;
    }
    uint64_t v28 = v9 + v5;
    if (__OFADD__(v9, v5)) {
      goto LABEL_128;
    }
    if (v28 >= v3) {
      uint64_t v28 = v3;
    }
    if (v28 < v9) {
      goto LABEL_129;
    }
    if (v7 == v28)
    {
LABEL_26:
      uint64_t v29 = v101;
    }
    else
    {
      uint64_t v80 = v8 + 32 + 40 * v7;
      uint64_t v29 = v101;
      do
      {
        uint64_t v81 = *(void *)(v8 + 40 * v7);
        uint64_t v82 = v9;
        uint64_t v83 = v80;
        do
        {
          uint64_t v84 = v83 - 72;
          if (*(void *)(v83 - 72) >= v81) {
            break;
          }
          if (!v8) {
            goto LABEL_131;
          }
          uint64_t v85 = *(void *)(v83 - 40);
          *(void *)(v83 - 40) = *(void *)v83;
          v83 -= 40;
          int v86 = *(_DWORD *)(v83 + 16);
          long long v87 = *(_OWORD *)(v83 + 24);
          long long v88 = *(_OWORD *)(v84 + 16);
          *(_OWORD *)(v84 + 40) = *(_OWORD *)v84;
          *(_OWORD *)(v84 + 56) = v88;
          *(void *)(v84 + 72) = v85;
          *(void *)(v83 - 32) = v81;
          *(_DWORD *)(v83 - 24) = v86;
          *(_OWORD *)(v83 - 16) = v87;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v80 += 40;
      }
      while (v7 != v28);
      uint64_t v7 = v28;
    }
    if (v7 < v9) {
      goto LABEL_123;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C65C8578(0, *(void *)(v29 + 16) + 1, 1, (char *)v29);
      uint64_t v29 = result;
    }
    unint64_t v31 = *(void *)(v29 + 16);
    unint64_t v30 = *(void *)(v29 + 24);
    unint64_t v32 = v31 + 1;
    if (v31 >= v30 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C65C8578((char *)(v30 > 1), v31 + 1, 1, (char *)v29);
      uint64_t v29 = result;
    }
    *(void *)(v29 + 16) = v32;
    uint64_t v33 = v29 + 32;
    uint64_t v34 = (uint64_t *)(v29 + 32 + 16 * v31);
    *uint64_t v34 = v9;
    v34[1] = v7;
    uint64_t v101 = v29;
    if (v31) {
      break;
    }
    unint64_t v32 = 1;
LABEL_75:
    uint64_t v5 = v98;
    uint64_t v3 = v99;
    if (v7 >= v99) {
      goto LABEL_91;
    }
  }
  while (1)
  {
    unint64_t v35 = v32 - 1;
    if (v32 >= 4)
    {
      unint64_t v40 = v33 + 16 * v32;
      uint64_t v41 = *(void *)(v40 - 64);
      uint64_t v42 = *(void *)(v40 - 56);
      BOOL v46 = __OFSUB__(v42, v41);
      uint64_t v43 = v42 - v41;
      if (v46) {
        goto LABEL_108;
      }
      uint64_t v45 = *(void *)(v40 - 48);
      uint64_t v44 = *(void *)(v40 - 40);
      BOOL v46 = __OFSUB__(v44, v45);
      uint64_t v38 = v44 - v45;
      char v39 = v46;
      if (v46) {
        goto LABEL_109;
      }
      unint64_t v47 = v32 - 2;
      uint64_t v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      uint64_t v50 = *v48;
      uint64_t v49 = v48[1];
      BOOL v46 = __OFSUB__(v49, v50);
      uint64_t v51 = v49 - v50;
      if (v46) {
        goto LABEL_110;
      }
      BOOL v46 = __OFADD__(v38, v51);
      uint64_t v52 = v38 + v51;
      if (v46) {
        goto LABEL_112;
      }
      if (v52 >= v43)
      {
        uint64_t v70 = (uint64_t *)(v33 + 16 * v35);
        uint64_t v72 = *v70;
        uint64_t v71 = v70[1];
        BOOL v46 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v46) {
          goto LABEL_118;
        }
        BOOL v63 = v38 < v73;
        goto LABEL_64;
      }
    }
    else
    {
      if (v32 != 3)
      {
        uint64_t v64 = *(void *)(v29 + 32);
        uint64_t v65 = *(void *)(v29 + 40);
        BOOL v46 = __OFSUB__(v65, v64);
        uint64_t v57 = v65 - v64;
        char v58 = v46;
        goto LABEL_58;
      }
      uint64_t v37 = *(void *)(v29 + 32);
      uint64_t v36 = *(void *)(v29 + 40);
      BOOL v46 = __OFSUB__(v36, v37);
      uint64_t v38 = v36 - v37;
      char v39 = v46;
    }
    if (v39) {
      goto LABEL_111;
    }
    unint64_t v47 = v32 - 2;
    unsigned __int8 v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    BOOL v56 = __OFSUB__(v54, v55);
    uint64_t v57 = v54 - v55;
    char v58 = v56;
    if (v56) {
      goto LABEL_113;
    }
    uint64_t v59 = (uint64_t *)(v33 + 16 * v35);
    uint64_t v61 = *v59;
    uint64_t v60 = v59[1];
    BOOL v46 = __OFSUB__(v60, v61);
    uint64_t v62 = v60 - v61;
    if (v46) {
      goto LABEL_115;
    }
    if (__OFADD__(v57, v62)) {
      goto LABEL_117;
    }
    if (v57 + v62 >= v38)
    {
      BOOL v63 = v38 < v62;
LABEL_64:
      if (v63) {
        unint64_t v35 = v47;
      }
      goto LABEL_66;
    }
LABEL_58:
    if (v58) {
      goto LABEL_114;
    }
    uint64_t v66 = (uint64_t *)(v33 + 16 * v35);
    uint64_t v68 = *v66;
    uint64_t v67 = v66[1];
    BOOL v46 = __OFSUB__(v67, v68);
    uint64_t v69 = v67 - v68;
    if (v46) {
      goto LABEL_116;
    }
    if (v69 < v57) {
      goto LABEL_75;
    }
LABEL_66:
    unint64_t v74 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v8) {
      goto LABEL_132;
    }
    unint64_t v75 = (uint64_t *)(v33 + 16 * v74);
    uint64_t v76 = *v75;
    uint64_t v77 = (void *)(v33 + 16 * v35);
    uint64_t v78 = v77[1];
    uint64_t result = sub_1C6739870((char *)(v8 + 40 * *v75), (char *)(v8 + 40 * *v77), v8 + 40 * v78, v100);
    if (v1) {
      break;
    }
    if (v78 < v76) {
      goto LABEL_105;
    }
    if (v35 > *(void *)(v101 + 16)) {
      goto LABEL_106;
    }
    *unint64_t v75 = v76;
    *(void *)(v33 + 16 * v74 + 8) = v78;
    unint64_t v79 = *(void *)(v101 + 16);
    if (v35 >= v79) {
      goto LABEL_107;
    }
    uint64_t v29 = v101;
    unint64_t v32 = v79 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v33 + 16 * v35), v77 + 2, 16 * (v79 - 1 - v35));
    *(void *)(v101 + 16) = v79 - 1;
    if (v79 <= 2) {
      goto LABEL_75;
    }
  }
LABEL_87:
  uint64_t result = swift_bridgeObjectRelease();
  if (v99 < -1) {
    goto LABEL_126;
  }
  *(void *)(v97 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C67397E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 40 * a3 + 32;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 40 * a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        uint64_t v9 = v8 - 72;
        if (*(void *)(v8 - 72) >= v6) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v10 = *(void *)(v8 - 40);
        *(void *)(v8 - 40) = *(void *)v8;
        v8 -= 40;
        int v11 = *(_DWORD *)(v8 + 16);
        long long v12 = *(_OWORD *)(v8 + 24);
        long long v13 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)v9;
        *(_OWORD *)(v9 + 56) = v13;
        *(void *)(v9 + 72) = v10;
        *(void *)(v8 - 32) = v6;
        *(_DWORD *)(v8 - 24) = v11;
        *(_OWORD *)(v8 - 16) = v12;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 40;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C6739870(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  if (v9 >= v11)
  {
    sub_1C669C470(a2, (uint64_t)(a3 - (void)a2) / 40, a4);
    long long v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_35;
    }
    unint64_t v18 = a3 - 40;
    while (1)
    {
      uint64_t v19 = (char *)(v18 + 40);
      uint64_t v20 = v6 - 40;
      if (*((void *)v6 - 5) >= *((void *)v12 - 5))
      {
        BOOL v22 = v19 != v12 || v18 >= (unint64_t)v12;
        uint64_t v20 = v12 - 40;
        v12 -= 40;
        if (!v22) {
          goto LABEL_31;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= (unint64_t)v6;
        v6 -= 40;
        if (!v21) {
          goto LABEL_31;
        }
      }
      long long v23 = *(_OWORD *)v20;
      long long v24 = *((_OWORD *)v20 + 1);
      *(void *)(v18 + 32) = *((void *)v20 + 4);
      *(_OWORD *)unint64_t v18 = v23;
      *(_OWORD *)(v18 + 16) = v24;
LABEL_31:
      v18 -= 40;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_35;
      }
    }
  }
  sub_1C669C470(a1, (a2 - a1) / 40, a4);
  long long v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (*(void *)v4 >= *(void *)v6)
    {
      long long v13 = v4;
      BOOL v14 = v7 == v4;
      v4 += 40;
      if (!v14) {
        goto LABEL_9;
      }
LABEL_10:
      v7 += 40;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_15;
      }
    }
    long long v13 = v6;
    BOOL v14 = v7 == v6;
    v6 += 40;
    if (v14) {
      goto LABEL_10;
    }
LABEL_9:
    long long v15 = *(_OWORD *)v13;
    long long v16 = *((_OWORD *)v13 + 1);
    *((void *)v7 + 4) = *((void *)v13 + 4);
    *(_OWORD *)uint64_t v7 = v15;
    *((_OWORD *)v7 + 1) = v16;
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v6 = v7;
LABEL_35:
  sub_1C669C470(v4, (v12 - v4) / 40, v6);
  return 1;
}

uint64_t getEnumTagSinglePayload for LearnedDisambiguationMetaData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LearnedDisambiguationMetaData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for RecencyRank()
{
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_1C6739A84(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C6739AA4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for LocationValues()
{
}

uint64_t sub_1C6739ADC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C6739AFC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

void type metadata accessor for HistoricalRecord()
{
}

unint64_t sub_1C6739B40()
{
  unint64_t result = qword_1EA4085C8;
  if (!qword_1EA4085C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_68()
{
  return sub_1C68ED7B8();
}

uint64_t OUTLINED_FUNCTION_2_61()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_41()
{
  return sub_1C68ECA18();
}

uint64_t OUTLINED_FUNCTION_6_46()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_33(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

double DateTime.Date.Holiday.__allocating_init(with:name:calendarSystem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  OUTLINED_FUNCTION_10_34();
  uint64_t v10 = swift_allocObject();
  char v11 = *a5;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(unsigned char *)(v10 + 48) = v11;
  *(void *)&double result = 117703170;
  *(_DWORD *)(v10 + 49) = 117703170;
  *(unsigned char *)(v10 + 53) = 2;
  return result;
}

uint64_t DateTime.Date.Holiday.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DateTime.Date.Holiday.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void DateTime.Date.Holiday.calendarSystem.getter(unsigned char *a1@<X8>)
{
}

void DateTime.Date.Holiday.frequency.getter(unsigned char *a1@<X8>)
{
}

void DateTime.Date.Holiday.observanceType.getter(unsigned char *a1@<X8>)
{
}

void DateTime.Date.Holiday.dateType.getter(unsigned char *a1@<X8>)
{
}

void DateTime.Date.Holiday.associatedReligion.getter(unsigned char *a1@<X8>)
{
}

void DateTime.Date.Holiday.emotion.getter(unsigned char *a1@<X8>)
{
}

uint64_t DateTime.Date.Holiday.init(with:name:calendarSystem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  char v6 = *a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(unsigned char *)(v5 + 48) = v6;
  *(_DWORD *)(v5 + 49) = 117703170;
  *(unsigned char *)(v5 + 53) = 2;
  return v5;
}

BOOL static DateTime.Date.Holiday.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (v5 = sub_1C68ED7E8(), BOOL result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
    if (v7 || (v8 = sub_1C68ED7E8(), BOOL result = 0, (v8 & 1) != 0))
    {
      int v9 = *(unsigned __int8 *)(a1 + 48);
      int v10 = *(unsigned __int8 *)(a2 + 48);
      if (v9 == 12)
      {
        if (v10 != 12) {
          return 0;
        }
      }
      else if (v10 == 12 || v9 != v10)
      {
        return 0;
      }
      int v12 = *(unsigned __int8 *)(a1 + 49);
      int v13 = *(unsigned __int8 *)(a2 + 49);
      if (v12 == 2)
      {
        if (v13 != 2) {
          return 0;
        }
      }
      else
      {
        BOOL result = 0;
        if (v13 == 2 || ((v13 ^ v12) & 1) != 0) {
          return result;
        }
      }
      int v14 = *(unsigned __int8 *)(a1 + 50);
      int v15 = *(unsigned __int8 *)(a2 + 50);
      if (v14 == 2)
      {
        if (v15 != 2) {
          return 0;
        }
      }
      else
      {
        BOOL result = 0;
        if (v15 == 2 || ((v15 ^ v14) & 1) != 0) {
          return result;
        }
      }
      int v16 = *(unsigned __int8 *)(a1 + 52);
      int v17 = *(unsigned __int8 *)(a2 + 52);
      if (v16 == 7)
      {
        if (v17 != 7) {
          return 0;
        }
      }
      else if (v17 == 7 || v16 != v17)
      {
        return 0;
      }
      int v18 = *(unsigned __int8 *)(a1 + 53);
      int v19 = *(unsigned __int8 *)(a2 + 53);
      BOOL result = v19 == 2 && v18 == 2;
      if (v18 != 2 && v19 != 2) {
        return ((v19 ^ v18) & 1) == 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C6739EE4()
{
  swift_bridgeObjectRetain();
  sub_1C68EC7D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C68EC7D8();
  swift_bridgeObjectRelease();
  if (v0[48] == 12)
  {
    sub_1C68ED958();
  }
  else
  {
    sub_1C68ED958();
    sub_1C68ED948();
  }
  if (v0[49] == 2)
  {
    sub_1C68ED958();
  }
  else
  {
    sub_1C68ED958();
    sub_1C68ED948();
  }
  if (v0[50] == 2)
  {
    sub_1C68ED958();
  }
  else
  {
    sub_1C68ED958();
    sub_1C68ED948();
  }
  if (v0[51] == 4)
  {
    sub_1C68ED958();
  }
  else
  {
    sub_1C68ED958();
    sub_1C68ED948();
  }
  if (v0[52] == 7)
  {
    sub_1C68ED958();
  }
  else
  {
    sub_1C68ED958();
    sub_1C68ED948();
  }
  if (v0[53] == 2) {
    return sub_1C68ED958();
  }
  sub_1C68ED958();
  return sub_1C68ED948();
}

uint64_t sub_1C673A054()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6308);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C68F0710;
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = 4023401;
  *(void *)(v1 + 40) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0x3D656D616ELL;
  *(void *)(v1 + 56) = 0xE500000000000000;
  if (v0[48] != 12)
  {
    OUTLINED_FUNCTION_11_33();
    sub_1C68ECA18();
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_2_62();
    if (v2)
    {
      OUTLINED_FUNCTION_3_31();
      uint64_t v1 = v6;
    }
    OUTLINED_FUNCTION_8_33();
  }
  if (v0[49] != 2)
  {
    OUTLINED_FUNCTION_21_11();
    sub_1C68ECA18();
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_2_62();
    if (v2)
    {
      OUTLINED_FUNCTION_3_31();
      uint64_t v1 = v7;
    }
    OUTLINED_FUNCTION_8_33();
  }
  if (v0[50] != 2)
  {
    OUTLINED_FUNCTION_11_33();
    sub_1C68ECA18();
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_2_62();
    if (v2)
    {
      OUTLINED_FUNCTION_3_31();
      uint64_t v1 = v8;
    }
    OUTLINED_FUNCTION_8_33();
  }
  if (v0[51] != 4)
  {
    OUTLINED_FUNCTION_21_11();
    sub_1C68ECA18();
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_2_62();
    if (v2)
    {
      OUTLINED_FUNCTION_3_31();
      uint64_t v1 = v9;
    }
    OUTLINED_FUNCTION_8_33();
  }
  if (v0[52] != 7)
  {
    OUTLINED_FUNCTION_21_11();
    sub_1C68ED398();
    sub_1C68ECA18();
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_2_62();
    if (v2)
    {
      OUTLINED_FUNCTION_3_31();
      uint64_t v1 = v10;
    }
    OUTLINED_FUNCTION_8_33();
  }
  if (v0[53] != 2)
  {
    OUTLINED_FUNCTION_21_11();
    sub_1C68ECA18();
    OUTLINED_FUNCTION_9_38();
    unint64_t v3 = *(void *)(v1 + 16);
    if (v3 >= *(void *)(v1 + 24) >> 1)
    {
      OUTLINED_FUNCTION_3_31();
      uint64_t v1 = v11;
    }
    *(void *)(v1 + 16) = v3 + 1;
    uint64_t v4 = v1 + 16 * v3;
    *(void *)(v4 + 32) = 0x3D656D616ELL;
    *(void *)(v4 + 40) = 0xE500000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF6840);
  sub_1C65C2B80();
  sub_1C68EC818();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  swift_bridgeObjectRelease();
  sub_1C68ECA18();
  return 0x5B796164696C6F48;
}

uint64_t sub_1C673A464(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C68ED7E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C68ED7E8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7261646E656C6163 && a2 == 0xEE006D6574737953;
      if (v7 || (sub_1C68ED7E8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x636E657571657266 && a2 == 0xE900000000000079;
        if (v8 || (sub_1C68ED7E8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6176726573626FLL && a2 == 0xEE00657079546563;
          if (v9 || (sub_1C68ED7E8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6570795465746164 && a2 == 0xE800000000000000;
            if (v10 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001C6918200 || (sub_1C68ED7E8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0x6E6F69746F6D65 && a2 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              char v12 = sub_1C68ED7E8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 7;
              }
              else {
                return 8;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1C673A7BC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 3:
      unint64_t result = 0x636E657571657266;
      break;
    case 4:
      unint64_t result = 0x6E6176726573626FLL;
      break;
    case 5:
      unint64_t result = 0x6570795465746164;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6D65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C673A8CC()
{
  return sub_1C673A7BC(*v0);
}

uint64_t sub_1C673A8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C673A464(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C673A8FC(uint64_t a1)
{
  unint64_t v2 = sub_1C673B0D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C673A938(uint64_t a1)
{
  unint64_t v2 = sub_1C673B0D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DateTime.Date.Holiday.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DateTime.Date.Holiday.__deallocating_deinit()
{
  DateTime.Date.Holiday.deinit();
  OUTLINED_FUNCTION_10_34();

  return swift_deallocClassInstance();
}

uint64_t sub_1C673A9C8(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA4085D0);
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  BOOL v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C673B0D8();
  sub_1C68EDA08();
  v12[15] = 0;
  sub_1C68ED708();
  if (!v2)
  {
    v12[14] = 1;
    sub_1C68ED708();
    v12[13] = v3[48];
    v12[12] = 2;
    sub_1C673B124();
    OUTLINED_FUNCTION_3_49();
    v12[11] = v3[49];
    v12[10] = 3;
    sub_1C673B170();
    OUTLINED_FUNCTION_3_49();
    v12[9] = v3[50];
    v12[8] = 4;
    sub_1C673B1BC();
    OUTLINED_FUNCTION_3_49();
    v12[7] = v3[51];
    v12[6] = 5;
    sub_1C673B208();
    OUTLINED_FUNCTION_3_49();
    v12[5] = v3[52];
    v12[4] = 6;
    sub_1C673B254();
    OUTLINED_FUNCTION_3_49();
    v12[3] = v3[53];
    v12[2] = 7;
    sub_1C673B2A0();
    OUTLINED_FUNCTION_3_49();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_1C673AC38()
{
  return sub_1C68ED988();
}

uint64_t DateTime.Date.Holiday.__allocating_init(from:)(void *a1)
{
  OUTLINED_FUNCTION_10_34();
  uint64_t v2 = swift_allocObject();
  DateTime.Date.Holiday.init(from:)(a1);
  return v2;
}

uint64_t DateTime.Date.Holiday.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA408610);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C673B0D8();
  sub_1C68ED9E8();
  if (v2)
  {
    type metadata accessor for DateTime.Date.Holiday();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v1 + 16) = sub_1C68ED618();
    *(void *)(v1 + 24) = v5;
    *(void *)(v1 + 32) = sub_1C68ED618();
    *(void *)(v1 + 40) = v6;
    sub_1C673B310();
    sub_1C68ED608();
    *(unsigned char *)(v1 + 48) = v15;
    sub_1C673B35C();
    OUTLINED_FUNCTION_4_26();
    *(unsigned char *)(v1 + 49) = v14;
    sub_1C673B3A8();
    OUTLINED_FUNCTION_4_26();
    *(unsigned char *)(v1 + 50) = v13;
    sub_1C673B3F4();
    OUTLINED_FUNCTION_4_26();
    *(unsigned char *)(v1 + 51) = v12;
    sub_1C673B440();
    OUTLINED_FUNCTION_4_26();
    *(unsigned char *)(v1 + 52) = v11;
    sub_1C673B48C();
    OUTLINED_FUNCTION_4_26();
    uint64_t v8 = OUTLINED_FUNCTION_18_0();
    v9(v8);
    *(unsigned char *)(v1 + 53) = v10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

BOOL sub_1C673AFB8(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.Holiday.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C673AFDC()
{
  return sub_1C673AC38();
}

uint64_t sub_1C673B000()
{
  return sub_1C6739EE4();
}

uint64_t sub_1C673B024()
{
  return sub_1C68ED988();
}

uint64_t sub_1C673B064@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DateTime.Date.Holiday.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C673B090(void *a1)
{
  return sub_1C673A9C8(a1);
}

uint64_t sub_1C673B0B4()
{
  return sub_1C673A054();
}

unint64_t sub_1C673B0D8()
{
  unint64_t result = qword_1EA4085D8;
  if (!qword_1EA4085D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085D8);
  }
  return result;
}

unint64_t sub_1C673B124()
{
  unint64_t result = qword_1EA4085E0;
  if (!qword_1EA4085E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA4085E0);
  }
  return result;
}