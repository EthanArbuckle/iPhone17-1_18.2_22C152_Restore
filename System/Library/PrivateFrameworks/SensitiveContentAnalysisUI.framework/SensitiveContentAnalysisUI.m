void sub_25C01E984(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x238], 8);
  _Unwind_Resume(a1);
}

void __getIMMessagePartChatItemClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("IMMessagePartChatItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getIMMessagePartChatItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getIMMessagePartChatItemClass_block_invoke_cold_1();
    ChatKitLibrary();
  }
}

void ChatKitLibrary()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  v1[0] = 0;
  if (!ChatKitLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x263EF8330];
    v1[2] = 3221225472;
    v1[3] = __ChatKitLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_2654AB488;
    uint64_t v3 = 0;
    ChatKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  v0 = (void *)v1[0];
  if (!ChatKitLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ChatKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ChatKitLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getIMAssociatedStickerChatItemClass_block_invoke(uint64_t a1)
{
  ChatKitLibrary();
  Class result = objc_getClass("IMAssociatedStickerChatItem");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getIMAssociatedStickerChatItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = __getIMAssociatedStickerChatItemClass_block_invoke_cold_1();
    return (Class)__getIMAggregateAcknowledgmentChatItemClass_block_invoke(v3);
  }
  return result;
}

Class __getIMAggregateAcknowledgmentChatItemClass_block_invoke(uint64_t a1)
{
  ChatKitLibrary();
  Class result = objc_getClass("IMAggregateAcknowledgmentChatItem");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getIMAggregateAcknowledgmentChatItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)__getIMAggregateAcknowledgmentChatItemClass_block_invoke_cold_1();
    return (Class)+[SCUIScreenTimePasscodeController _isScreenTimePasscodeSet:v5];
  }
  return result;
}

void sub_25C01EDE8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

Class __getSTCommunicationClientClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  v4[0] = 0;
  if (!ScreenTimeCoreLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x263EF8330];
    v4[2] = 3221225472;
    v4[3] = __ScreenTimeCoreLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_2654AB4E8;
    uint64_t v6 = 0;
    ScreenTimeCoreLibraryCore_frameworkLibrary = _sl_dlopen();
    long long v2 = (void *)v4[0];
    if (!ScreenTimeCoreLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("STCommunicationClient");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    long long v2 = (void *)__getSTCommunicationClientClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getSTCommunicationClientClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ScreenTimeCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ScreenTimeCoreLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t SCUIIsRunningInMacCatalyst()
{
  return 0;
}

uint64_t SCUICurrentInterventionType()
{
  v0 = [MEMORY[0x263F17668] currentScanningPolicy];
  unint64_t v1 = [v0 policy];

  if (v1 < 2) {
    return 2;
  }
  uint64_t v3 = [MEMORY[0x263F17668] currentInterventionType];
  uint64_t v2 = [v3 isEqualToString:*MEMORY[0x263F53E88]];

  return v2;
}

void sub_25C021C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location)
{
}

void sub_25C022AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  objc_destroyWeak((id *)(v37 - 256));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_25C023508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
}

uint64_t type metadata accessor for SCLocalizedStringKey.StringInterpolation()
{
  uint64_t result = qword_26A58A9A0;
  if (!qword_26A58A9A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return sub_25C0EB7E8();
}

Swift::Void __swiftcall SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

uint64_t sub_25C0263C4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  return a4(a1, a2);
}

uint64_t SCLocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:formatter:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EAB68();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  id v9 = objc_msgSend(a2, sel_stringForObjectValue_, sub_25C0EC258());
  swift_unknownObjectRelease();
  if (v9)
  {
    sub_25C0EB858();

    type metadata accessor for SCLocalizedStringKey.StringInterpolation();
    sub_25C0EB7C8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
  }
  else
  {
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_25C0EBF78();
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000027;
    unint64_t v14 = 0x800000025C0F5420;
    id v11 = a2;
    id v12 = objc_msgSend(v11, sel_description);
    sub_25C0EB858();

    sub_25C0EB8E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25C0EC078();
    __break(1u);
  }
  return result;
}

uint64_t SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)()
{
  return sub_25C0EB7C8();
}

uint64_t SCLocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:)()
{
  sub_25C0EC248();
  sub_25C0EAB88();
  swift_bridgeObjectRelease();
  sub_25C0EC248();
  type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  sub_25C0EB7C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C026758()
{
  return sub_25C0EB7E8();
}

uint64_t sub_25C0267A4()
{
  return sub_25C0EB7D8();
}

uint64_t SCLocalizedStringKey.localizedStringKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SCLocalizedStringKey.init(stringInterpolation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25C0EABB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_25C0EA3C8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_25C0EB7F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_25C0EB818();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, a1 + *(int *)(v14 + 20), v9);
  sub_25C0EB808();
  id v15 = objc_msgSend(self, sel_mainBundle);
  sub_25C0EA3B8();
  uint64_t v16 = sub_25C0EB8A8();
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v19 = sub_25C0EABC8();
  uint64_t v21 = v20;
  LOBYTE(v12) = v22;
  uint64_t v24 = v23;
  uint64_t result = sub_25C026AF0(a1);
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v21;
  *(unsigned char *)(a2 + 32) = v12 & 1;
  *(void *)(a2 + 40) = v24;
  return result;
}

uint64_t sub_25C026AF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SCLocalizedStringKey.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25C0EA3C8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_25C0EB818();
  MEMORY[0x270FA5388](v3 - 8);
  swift_bridgeObjectRetain();
  sub_25C0EB7B8();
  id v4 = objc_msgSend(self, sel_mainBundle);
  sub_25C0EA3B8();
  uint64_t v5 = sub_25C0EB8A8();
  uint64_t v7 = v6;
  uint64_t result = sub_25C0EABD8();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10 & 1;
  *(void *)(a1 + 40) = v11;
  return result;
}

uint64_t sub_25C026CB4@<X0>(uint64_t a1@<X8>)
{
  return SCLocalizedStringKey.init(stringLiteral:)(a1);
}

uint64_t SCLocalizedStringKey.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SCLocalizedStringKey.init(rawValue:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25C0EA3C8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_25C0EB818();
  MEMORY[0x270FA5388](v3 - 8);
  swift_bridgeObjectRetain();
  sub_25C0EB7B8();
  id v4 = objc_msgSend(self, sel_mainBundle);
  sub_25C0EA3B8();
  uint64_t v5 = sub_25C0EB8A8();
  uint64_t v7 = v6;
  uint64_t result = sub_25C0EABD8();
  *a1 = v5;
  a1[1] = v7;
  a1[2] = result;
  a1[3] = v10;
  a1[4] = v9 & 1;
  a1[5] = v11;
  return result;
}

uint64_t sub_25C026E58@<X0>(uint64_t *a1@<X8>)
{
  return SCLocalizedStringKey.init(rawValue:)(a1);
}

uint64_t sub_25C026E64@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25C026E70()
{
  return sub_25C0EC368();
}

uint64_t sub_25C026ECC()
{
  swift_bridgeObjectRetain();
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C026F24()
{
  return sub_25C0EC368();
}

uint64_t sub_25C026F7C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_25C0EC268();
  }
}

uint64_t sub_25C026FAC()
{
  sub_25C027054();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_25C0EB048();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_25C027054()
{
  unint64_t result = qword_26A589540;
  if (!qword_26A589540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589540);
  }
  return result;
}

uint64_t sub_25C0270A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25C027148()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25C027208()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_25C027218()
{
  unint64_t result = qword_26A5882D0;
  if (!qword_26A5882D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5882D0);
  }
  return result;
}

unint64_t sub_25C027270()
{
  unint64_t result = qword_26A5882D8;
  if (!qword_26A5882D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5882D8);
  }
  return result;
}

unint64_t sub_25C0272C8()
{
  unint64_t result = qword_26A5882E0;
  if (!qword_26A5882E0)
  {
    type metadata accessor for SCLocalizedStringKey.StringInterpolation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5882E0);
  }
  return result;
}

unint64_t sub_25C027324()
{
  unint64_t result = qword_26A5882E8;
  if (!qword_26A5882E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5882E8);
  }
  return result;
}

uint64_t sub_25C027378()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_25C027384()
{
  return MEMORY[0x263F8D390];
}

unint64_t sub_25C027394()
{
  unint64_t result = qword_26A5882F0;
  if (!qword_26A5882F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5882F0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SCLocalizedStringKey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SCLocalizedStringKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SCLocalizedStringKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SCLocalizedStringKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SCLocalizedStringKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SCLocalizedStringKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SCLocalizedStringKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SCLocalizedStringKey()
{
  return &type metadata for SCLocalizedStringKey;
}

uint64_t *initializeBufferWithCopyOfBuffer for SCLocalizedStringKey.StringInterpolation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25C0EABB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25C0EB7F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EABB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_25C0EB7F8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EABB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB7F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EABB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB7F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EABB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB7F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EABB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB7F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C027B0C);
}

uint64_t sub_25C027B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EABB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_25C0EB7F8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SCLocalizedStringKey.StringInterpolation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C027C18);
}

uint64_t sub_25C027C18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25C0EABB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_25C0EB7F8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_25C027D1C()
{
  uint64_t result = sub_25C0EABB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25C0EB7F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_25C027DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB24(v2, (uint64_t)v10, type metadata accessor for Report.Authority);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    uint64_t result = SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v18);
    uint64_t v13 = v18[0];
    uint64_t v12 = v18[1];
    uint64_t v15 = v18[2];
    uint64_t v14 = v18[3];
    char v16 = v19;
    uint64_t v17 = v20;
  }
  else
  {
    sub_25C02BE78((uint64_t)v10, (uint64_t)v7, type metadata accessor for Report.Authority.DirectAuthorityDetails);
    uint64_t v13 = *(void *)v7;
    uint64_t v12 = *((void *)v7 + 1);
    uint64_t v15 = *((void *)v7 + 2);
    uint64_t v14 = *((void *)v7 + 3);
    char v16 = v7[32];
    uint64_t v17 = *((void *)v7 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_25C028464((uint64_t)v7, type metadata accessor for Report.Authority.DirectAuthorityDetails);
  }
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v12;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v17;
  return result;
}

uint64_t type metadata accessor for Report.Authority.DirectAuthorityDetails(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58B190);
}

uint64_t type metadata accessor for Report.Authority(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58B180);
}

uint64_t sub_25C028010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB24(v2, (uint64_t)v13, type metadata accessor for Report.Authority);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    sub_25C0EA218();
    uint64_t v14 = sub_25C0EA238();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14);
    if (result == 1) {
      __break(1u);
    }
    else {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v6, v14);
    }
  }
  else
  {
    sub_25C02BE78((uint64_t)v13, (uint64_t)v10, type metadata accessor for Report.Authority.DirectAuthorityDetails);
    uint64_t v17 = &v10[*(int *)(v7 + 28)];
    uint64_t v18 = sub_25C0EA238();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, v17, v18);
    return sub_25C028464((uint64_t)v10, type metadata accessor for Report.Authority.DirectAuthorityDetails);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

double sub_25C028300@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB24(v2, (uint64_t)v6, type metadata accessor for Report.Authority);
  uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v13);
  }
  else
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v13);
    sub_25C028464((uint64_t)v6, type metadata accessor for Report.Authority);
  }
  double result = *(double *)&v13;
  uint64_t v9 = v14;
  uint64_t v10 = v15;
  char v11 = v16;
  uint64_t v12 = v17;
  *(_OWORD *)a1 = v13;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  return result;
}

uint64_t sub_25C028464(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_25C0284C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v11 - 8);
  long long v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB24(v2, (uint64_t)v13, type metadata accessor for Report.Authority);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v25);
  }
  else
  {
    sub_25C02BE78((uint64_t)v13, (uint64_t)v10, type metadata accessor for Report.Authority.DirectAuthorityDetails);
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._object = (void *)0x800000025C0F54C0;
    v14._countAndFlagsBits = 0xD000000000000011;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v15 = *((void *)v10 + 2);
    uint64_t v16 = *((void *)v10 + 3);
    char v17 = v10[32];
    uint64_t v18 = *((void *)v10 + 5);
    long long v25 = *(_OWORD *)v10;
    uint64_t v26 = v15;
    uint64_t v27 = v16;
    char v28 = v17;
    uint64_t v29 = v18;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
    SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v6, (uint64_t)&v25);
    sub_25C028464((uint64_t)v10, type metadata accessor for Report.Authority.DirectAuthorityDetails);
  }
  double result = *(double *)&v25;
  uint64_t v21 = v26;
  uint64_t v22 = v27;
  char v23 = v28;
  uint64_t v24 = v29;
  *(_OWORD *)a1 = v25;
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v22;
  *(unsigned char *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v24;
  return result;
}

uint64_t sub_25C02873C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a2;
  v91 = a1;
  uint64_t v89 = a3;
  uint64_t v3 = sub_25C0EA398();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  MEMORY[0x270FA5388](v3);
  v79 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883E0);
  MEMORY[0x270FA5388](v80);
  v83 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883E8);
  MEMORY[0x270FA5388](v6 - 8);
  v81 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v84 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25C0EA3C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Report.TestingOptions(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  char v23 = (char *)&v73 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v73 - v25;
  MEMORY[0x270FA5388](v24);
  char v28 = (char *)&v73 - v27;
  uint64_t v29 = type metadata accessor for Report.Authority(0);
  uint64_t v87 = *(void *)(v29 - 8);
  uint64_t v88 = v29;
  MEMORY[0x270FA5388](v29);
  v31 = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v90 & 0x20) != 0)
  {
    v76 = v9;
    v78 = v23;
    v74 = v20;
    uint64_t v90 = (uint64_t)v28;
    v77 = v31;
    v32 = v83;
    uint64_t v33 = sub_25C08AE48();
    swift_beginAccess();
    sub_25C02FB24(v33, (uint64_t)v16, type metadata accessor for Report.TestingOptions);
    sub_25C02FB8C((uint64_t)&v16[*(int *)(v14 + 24)], (uint64_t)v26, &qword_26A5894D0);
    sub_25C028464((uint64_t)v16, type metadata accessor for Report.TestingOptions);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v91, v10);
    uint64_t v34 = v85;
    uint64_t v35 = v86;
    v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
    uint64_t v36 = v11;
    if (v75(v26, 1, v86) == 1)
    {
      uint64_t v37 = v34;
      sub_25C0EA3A8();
      v38 = *(void (**)(char *, uint64_t))(v36 + 8);
      v38(v13, v10);
      uint64_t v39 = sub_25C02FBF0((uint64_t)v26, &qword_26A5894D0);
    }
    else
    {
      v38 = *(void (**)(char *, uint64_t))(v11 + 8);
      v38(v13, v10);
      uint64_t v40 = v90;
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v90, v26, v35);
      uint64_t v37 = v34;
      uint64_t v39 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v35);
    }
    uint64_t v41 = v84;
    char v92 = 1;
    uint64_t v42 = SCAUIFeatures.isEnabled.getter(v39);
    if (v42)
    {
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      uint64_t v45 = (uint64_t)v81;
      uint64_t v44 = v82;
      v43(v81, 1, 1, v82);
      v38(v91, v10);
      sub_25C02FBF0(v90, &qword_26A5894D0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v45, 1, v44) == 1)
      {
        v46 = &qword_26A5883E8;
        uint64_t v47 = v45;
LABEL_15:
        sub_25C02FBF0(v47, v46);
        goto LABEL_16;
      }
      uint64_t v60 = (uint64_t)v76;
      sub_25C02BE78(v45, (uint64_t)v76, type metadata accessor for Report.Authority.DirectAuthorityDetails);
      uint64_t v61 = v60;
      uint64_t v62 = (uint64_t)v77;
      sub_25C02BE78(v61, (uint64_t)v77, type metadata accessor for Report.Authority.DirectAuthorityDetails);
      v43((char *)v62, 0, 1, v44);
      uint64_t v63 = v62;
      uint64_t v59 = v88;
      uint64_t v58 = v89;
      uint64_t v57 = v87;
LABEL_23:
      sub_25C02BE78(v63, v58, type metadata accessor for Report.Authority);
      uint64_t v64 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, v64, 1, v59);
    }
    char v92 = 0;
    if ((SCAUIFeatures.isEnabled.getter(v42) & 1) == 0)
    {
      v38(v91, v10);
      v46 = &qword_26A5894D0;
      uint64_t v47 = v90;
      goto LABEL_15;
    }
    uint64_t v48 = (uint64_t)v78;
    sub_25C0EA388();
    uint64_t v49 = v86;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v48, 0, 1, v86);
    uint64_t v50 = (uint64_t)v32;
    uint64_t v51 = (uint64_t)&v32[*(int *)(v80 + 48)];
    uint64_t v52 = v90;
    sub_25C02FB8C(v90, v50, &qword_26A5894D0);
    v83 = (char *)v51;
    uint64_t v53 = v49;
    sub_25C02FB8C(v48, v51, &qword_26A5894D0);
    uint64_t v54 = v49;
    v55 = (uint64_t (*)(char *, uint64_t, uint64_t))v75;
    if (v75((char *)v50, 1, v54) == 1)
    {
      v38(v91, v10);
      sub_25C02FBF0(v48, &qword_26A5894D0);
      sub_25C02FBF0(v52, &qword_26A5894D0);
      int v56 = v55(v83, 1, v53);
      uint64_t v57 = v87;
      if (v56 == 1)
      {
        sub_25C02FBF0(v50, &qword_26A5894D0);
        uint64_t v59 = v88;
        uint64_t v58 = v89;
LABEL_22:
        uint64_t v72 = (uint64_t)v77;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v77, 1, 1, v82);
        uint64_t v63 = v72;
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v66 = v85;
      uint64_t v67 = (uint64_t)v74;
      sub_25C02FB8C(v50, (uint64_t)v74, &qword_26A5894D0);
      v68 = v83;
      if (v55(v83, 1, v53) != 1)
      {
        v69 = v79;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v79, v68, v53);
        sub_25C02D580(&qword_26A5883F0, MEMORY[0x263F07598]);
        char v70 = sub_25C0EB7A8();
        v38(v91, v10);
        v71 = *(void (**)(char *, uint64_t))(v66 + 8);
        v71(v69, v53);
        sub_25C02FBF0((uint64_t)v78, &qword_26A5894D0);
        sub_25C02FBF0(v90, &qword_26A5894D0);
        v71((char *)v67, v53);
        sub_25C02FBF0(v50, &qword_26A5894D0);
        uint64_t v59 = v88;
        uint64_t v58 = v89;
        uint64_t v57 = v87;
        if ((v70 & 1) == 0)
        {
          uint64_t v64 = 1;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, v64, 1, v59);
        }
        goto LABEL_22;
      }
      v38(v91, v10);
      sub_25C02FBF0((uint64_t)v78, &qword_26A5894D0);
      sub_25C02FBF0(v90, &qword_26A5894D0);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v53);
      uint64_t v57 = v87;
    }
    sub_25C02FBF0(v50, &qword_26A5883E0);
    uint64_t v64 = 1;
    uint64_t v59 = v88;
    uint64_t v58 = v89;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, v64, 1, v59);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v91, v10);
LABEL_16:
  uint64_t v64 = 1;
  uint64_t v59 = v88;
  uint64_t v58 = v89;
  uint64_t v57 = v87;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, v64, 1, v59);
}

uint64_t Report.Authority.DirectAuthorityDetails.hash(into:)()
{
  sub_25C02BB44();
  sub_25C0EB768();
  id v1 = *(id *)(v0 + 48);
  sub_25C0EBCF8();

  sub_25C0EB768();
  type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  sub_25C0EA238();
  sub_25C02D580(&qword_26A588300, MEMORY[0x263F06EA8]);
  sub_25C0EB768();
  return sub_25C0EB768();
}

uint64_t Report.Authority.DirectAuthorityDetails.hashValue.getter()
{
  sub_25C0EC348();
  sub_25C02BB44();
  sub_25C0EB768();
  id v1 = *(id *)(v0 + 48);
  sub_25C0EBCF8();

  sub_25C0EB768();
  type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  sub_25C0EA238();
  sub_25C02D580(&qword_26A588300, MEMORY[0x263F06EA8]);
  sub_25C0EB768();
  sub_25C0EB768();
  return sub_25C0EC368();
}

uint64_t sub_25C0293CC()
{
  sub_25C02BB44();
  sub_25C0EB768();
  id v1 = *(id *)(v0 + 48);
  sub_25C0EBCF8();

  sub_25C0EB768();
  sub_25C0EA238();
  sub_25C02D580(&qword_26A588300, MEMORY[0x263F06EA8]);
  sub_25C0EB768();
  return sub_25C0EB768();
}

uint64_t sub_25C029510()
{
  sub_25C0EC348();
  sub_25C02BB44();
  sub_25C0EB768();
  id v1 = *(id *)(v0 + 48);
  sub_25C0EBCF8();

  sub_25C0EB768();
  sub_25C0EA238();
  sub_25C02D580(&qword_26A588300, MEMORY[0x263F06EA8]);
  sub_25C0EB768();
  sub_25C0EB768();
  return sub_25C0EC368();
}

uint64_t Report.Authority.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB24(v1, (uint64_t)v8, type metadata accessor for Report.Authority);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_25C0EC358();
  }
  sub_25C02BE78((uint64_t)v8, (uint64_t)v5, type metadata accessor for Report.Authority.DirectAuthorityDetails);
  sub_25C0EC358();
  uint64_t v10 = *((void *)v5 + 2);
  uint64_t v11 = *((void *)v5 + 3);
  char v12 = v5[32];
  uint64_t v13 = *((void *)v5 + 5);
  long long v19 = *(_OWORD *)v5;
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  char v22 = v12;
  uint64_t v23 = v13;
  sub_25C02BB44();
  sub_25C0EB768();
  id v14 = *((id *)v5 + 6);
  sub_25C0EBCF8();

  uint64_t v15 = *((void *)v5 + 9);
  uint64_t v16 = *((void *)v5 + 10);
  char v17 = v5[88];
  uint64_t v18 = *((void *)v5 + 12);
  long long v19 = *(_OWORD *)(v5 + 56);
  uint64_t v20 = v15;
  uint64_t v21 = v16;
  char v22 = v17;
  uint64_t v23 = v18;
  sub_25C0EB768();
  sub_25C0EA238();
  sub_25C02D580(&qword_26A588300, MEMORY[0x263F06EA8]);
  sub_25C0EB768();
  sub_25C0EB768();
  return sub_25C028464((uint64_t)v5, type metadata accessor for Report.Authority.DirectAuthorityDetails);
}

uint64_t Report.Authority.hashValue.getter()
{
  return sub_25C0EC368();
}

uint64_t sub_25C02993C()
{
  return sub_25C0EC368();
}

uint64_t sub_25C029980()
{
  return sub_25C0EC368();
}

BOOL Report.AuthorityWrapper.Kind.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_25C0299E4(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25C0299F8()
{
  return sub_25C0EC368();
}

uint64_t sub_25C029A40()
{
  return sub_25C0EC358();
}

uint64_t sub_25C029A6C()
{
  return sub_25C0EC368();
}

void *sub_25C029AB0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_25C029AE0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25C029BE8()
{
  uint64_t v1 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB24(v0 + OBJC_IVAR___SCUIReportAuthority_authority, (uint64_t)v3, type metadata accessor for Report.Authority);
  uint64_t v4 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v5 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    sub_25C028464((uint64_t)v3, type metadata accessor for Report.Authority);
    return 0;
  }
  return v5;
}

id sub_25C029CE0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588308);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Report.Authority(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone(v1);
  sub_25C02FB8C(a1, (uint64_t)v5, &qword_26A588308);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_25C02FBF0(a1, &qword_26A588308);
    sub_25C02FBF0((uint64_t)v5, &qword_26A588308);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    sub_25C02BE78((uint64_t)v5, (uint64_t)v9, type metadata accessor for Report.Authority);
    sub_25C02BE78((uint64_t)v9, (uint64_t)v10 + OBJC_IVAR___SCUIReportAuthority_authority, type metadata accessor for Report.Authority);
    v13.receiver = v10;
    v13.super_class = v1;
    id v11 = objc_msgSendSuper2(&v13, sel_init);
    sub_25C02FBF0(a1, &qword_26A588308);
  }
  return v11;
}

uint64_t Report.AuthorityWrapper.__allocating_init(locale:moreHelpMenuOptions:interventionType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25C0EA3C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588308);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_allocWithZone(v3);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_25C02873C(v9, a2, (uint64_t)v12);
  uint64_t v14 = (*(uint64_t (**)(char *))(ObjectType + 96))(v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  swift_deallocPartialClassInstance();
  return v14;
}

uint64_t Report.AuthorityWrapper.init(locale:moreHelpMenuOptions:interventionType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EA3C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588308);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_25C02873C(v7, a2, (uint64_t)v10);
  uint64_t v12 = (*(uint64_t (**)(char *))(ObjectType + 96))(v10);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_deallocPartialClassInstance();
  return v12;
}

id Report.AuthorityWrapper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void Report.AuthorityWrapper.init()()
{
}

id Report.AuthorityWrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Report.AuthorityWrapper(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25C02A580@<X0>(uint64_t a1@<X8>)
{
  return SCLocalizedStringKey.init(stringLiteral:)(a1);
}

uint64_t sub_25C02A6A4()
{
  return 0;
}

uint64_t sub_25C02A6B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_25C02A6E0()
{
  return 0;
}

void sub_25C02A6EC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25C02A6F8(uint64_t a1)
{
  unint64_t v2 = sub_25C02C824();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02A734(uint64_t a1)
{
  unint64_t v2 = sub_25C02C824();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25C02A770(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874756F5377656ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x616C736E65657571;
      break;
    case 4:
      unint64_t result = 0x7375416874756F73;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x6169726F74636976;
      break;
    case 7:
      unint64_t result = 0x61696E616D736174;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_25C02A8A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25C02A8B4()
{
  return sub_25C0EC368();
}

uint64_t sub_25C02A8FC()
{
  return sub_25C0EC358();
}

uint64_t sub_25C02A928()
{
  return sub_25C0EC368();
}

unint64_t sub_25C02A96C()
{
  return sub_25C02A770(*v0);
}

uint64_t sub_25C02A974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C02C878(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C02A99C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_25C02A9A8(uint64_t a1)
{
  unint64_t v2 = sub_25C02C584();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02A9E4(uint64_t a1)
{
  unint64_t v2 = sub_25C02C584();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AA20(uint64_t a1)
{
  unint64_t v2 = sub_25C02C7D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02AA5C(uint64_t a1)
{
  unint64_t v2 = sub_25C02C7D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AA98(uint64_t a1)
{
  unint64_t v2 = sub_25C02C77C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02AAD4(uint64_t a1)
{
  unint64_t v2 = sub_25C02C77C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AB10(uint64_t a1)
{
  unint64_t v2 = sub_25C02C728();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02AB4C(uint64_t a1)
{
  unint64_t v2 = sub_25C02C728();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AB88(uint64_t a1)
{
  unint64_t v2 = sub_25C02C6D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02ABC4(uint64_t a1)
{
  unint64_t v2 = sub_25C02C6D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AC00(uint64_t a1)
{
  unint64_t v2 = sub_25C02C5D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02AC3C(uint64_t a1)
{
  unint64_t v2 = sub_25C02C5D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AC78(uint64_t a1)
{
  unint64_t v2 = sub_25C02C62C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02ACB4(uint64_t a1)
{
  unint64_t v2 = sub_25C02C62C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02ACF0(uint64_t a1)
{
  unint64_t v2 = sub_25C02C680();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C02AD2C(uint64_t a1)
{
  unint64_t v2 = sub_25C02C680();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C02AD68(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588310);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588318);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v44 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588320);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588328);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x270FA5388](v9);
  v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588330);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588338);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588340);
  uint64_t v32 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588348);
  uint64_t v31 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588350);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C02C584();
  sub_25C0EC388();
  switch((char)v50)
  {
    case 1:
      char v54 = 1;
      sub_25C02C7D0();
      uint64_t v26 = v51;
      sub_25C0EC188();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 2:
      char v55 = 2;
      sub_25C02C77C();
      uint64_t v26 = v51;
      sub_25C0EC188();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 3:
      char v56 = 3;
      sub_25C02C728();
      uint64_t v27 = v35;
      uint64_t v26 = v51;
      sub_25C0EC188();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_10;
    case 4:
      char v57 = 4;
      sub_25C02C6D4();
      uint64_t v27 = v38;
      uint64_t v26 = v51;
      sub_25C0EC188();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_10;
    case 5:
      char v58 = 5;
      sub_25C02C680();
      uint64_t v27 = v41;
      uint64_t v26 = v51;
      sub_25C0EC188();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_10;
    case 6:
      char v59 = 6;
      sub_25C02C62C();
      uint64_t v27 = v44;
      uint64_t v26 = v51;
      sub_25C0EC188();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
      goto LABEL_10;
    case 7:
      char v60 = 7;
      sub_25C02C5D8();
      uint64_t v27 = v47;
      uint64_t v26 = v51;
      sub_25C0EC188();
      uint64_t v29 = v48;
      uint64_t v28 = v49;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v53 = 0;
      sub_25C02C824();
      uint64_t v26 = v51;
      sub_25C0EC188();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
}

uint64_t sub_25C02B4DC()
{
  sub_25C02A580((uint64_t)v3);
  sub_25C02A580((uint64_t)&v2);
  sub_25C027394();
  char v0 = sub_25C0EB7A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_25C02B58C()
{
  sub_25C0EC348();
  sub_25C02A580((uint64_t)v1);
  sub_25C02BB44();
  sub_25C0EB768();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_25C0EC368();
}

uint64_t sub_25C02B610()
{
  sub_25C02A580((uint64_t)&v1);
  sub_25C02BB44();
  sub_25C0EB768();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25C02B680()
{
  sub_25C0EC348();
  sub_25C02A580((uint64_t)v1);
  sub_25C02BB44();
  sub_25C0EB768();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_25C0EC368();
}

uint64_t sub_25C02B700@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C02BF38();
  *a1 = result;
  return result;
}

uint64_t sub_25C02B728@<X0>(uint64_t a1@<X8>)
{
  return sub_25C02A580(a1);
}

void sub_25C02B730(void *a1@<X8>)
{
  *a1 = &unk_27097CB38;
}

uint64_t sub_25C02B740@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25C02CC04(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25C02B76C(void *a1)
{
  return sub_25C02AD68(a1, *v1);
}

uint64_t sub_25C02B788@<X0>(void *a1@<X8>)
{
  sub_25C02A580((uint64_t)v5);
  uint64_t v2 = v5[0];
  uint64_t v3 = v5[1];
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v3;
  return result;
}

uint64_t _s26SensitiveContentAnalysisUI6ReportC9AuthorityO06DirectF7DetailsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_25C02FC4C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25C0EB938();
  sub_25C0EB938();
  if (v11 == v9 && v12 == v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v4 & 1) == 0) {
      return v5 & 1;
    }
  }
  sub_25C02FCA0();
  if ((sub_25C0EBCE8() & 1) == 0) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25C0EB938();
  sub_25C0EB938();
  if (v11 == v9 && v12 == v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v6 = sub_25C0EC268();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v6)
  {
LABEL_10:
    uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    if (MEMORY[0x26117BB50](a1 + *(int *)(v7 + 28), a2 + *(int *)(v7 + 28)))
    {
      char v5 = MEMORY[0x26117BB50](a1 + *(int *)(v7 + 32), a2 + *(int *)(v7 + 32));
      return v5 & 1;
    }
LABEL_12:
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_25C02BB44()
{
  unint64_t result = qword_26A5882F8;
  if (!qword_26A5882F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5882F8);
  }
  return result;
}

uint64_t _s26SensitiveContentAnalysisUI6ReportC9AuthorityO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883F8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_25C02FB24(a1, (uint64_t)v14, type metadata accessor for Report.Authority);
  sub_25C02FB24(a2, v15, type metadata accessor for Report.Authority);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_25C02FB24((uint64_t)v14, (uint64_t)v10, type metadata accessor for Report.Authority);
    if (v16(v15, 1, v4) != 1)
    {
      sub_25C02BE78(v15, (uint64_t)v7, type metadata accessor for Report.Authority.DirectAuthorityDetails);
      char v17 = _s26SensitiveContentAnalysisUI6ReportC9AuthorityO06DirectF7DetailsV2eeoiySbAG_AGtFZ_0((uint64_t)v10, (uint64_t)v7);
      sub_25C028464((uint64_t)v7, type metadata accessor for Report.Authority.DirectAuthorityDetails);
      sub_25C028464((uint64_t)v10, type metadata accessor for Report.Authority.DirectAuthorityDetails);
      sub_25C028464((uint64_t)v14, type metadata accessor for Report.Authority);
      return v17 & 1;
    }
    sub_25C028464((uint64_t)v10, type metadata accessor for Report.Authority.DirectAuthorityDetails);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_25C02FBF0((uint64_t)v14, &qword_26A5883F8);
    char v17 = 0;
    return v17 & 1;
  }
  sub_25C028464((uint64_t)v14, type metadata accessor for Report.Authority);
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_25C02BE78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Report.AuthorityWrapper(uint64_t a1)
{
  return sub_25C02BF00(a1, qword_26A58B1A0);
}

uint64_t sub_25C02BF00(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25C02BF38()
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
  sub_25C027394();
  char v0 = sub_25C0EB7A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
    char v2 = sub_25C0EB7A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
      char v3 = sub_25C0EB7A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
        char v4 = sub_25C0EB7A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
          char v5 = sub_25C0EB7A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v5)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
            char v6 = sub_25C0EB7A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v6)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
              char v7 = sub_25C0EB7A8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v7)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v9);
                char v8 = sub_25C0EB7A8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v8) {
                  return 7;
                }
                else {
                  return 8;
                }
              }
            }
          }
        }
      }
    }
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25C02C584()
{
  unint64_t result = qword_26A58A9B0;
  if (!qword_26A58A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9B0);
  }
  return result;
}

unint64_t sub_25C02C5D8()
{
  unint64_t result = qword_26A58A9B8;
  if (!qword_26A58A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9B8);
  }
  return result;
}

unint64_t sub_25C02C62C()
{
  unint64_t result = qword_26A58A9C0;
  if (!qword_26A58A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9C0);
  }
  return result;
}

unint64_t sub_25C02C680()
{
  unint64_t result = qword_26A58A9C8;
  if (!qword_26A58A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9C8);
  }
  return result;
}

unint64_t sub_25C02C6D4()
{
  unint64_t result = qword_26A58A9D0;
  if (!qword_26A58A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9D0);
  }
  return result;
}

unint64_t sub_25C02C728()
{
  unint64_t result = qword_26A58A9D8;
  if (!qword_26A58A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9D8);
  }
  return result;
}

unint64_t sub_25C02C77C()
{
  unint64_t result = qword_26A58A9E0;
  if (!qword_26A58A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9E0);
  }
  return result;
}

unint64_t sub_25C02C7D0()
{
  unint64_t result = qword_26A58A9E8;
  if (!qword_26A58A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A9E8);
  }
  return result;
}

unint64_t sub_25C02C824()
{
  unint64_t result = qword_26A58A9F0[0];
  if (!qword_26A58A9F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58A9F0);
  }
  return result;
}

uint64_t sub_25C02C878(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x800000025C0F55C0 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874756F5377656ELL && a2 == 0xED000073656C6157 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025C0F55E0 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616C736E65657571 && a2 == 0xEA0000000000646ELL || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7375416874756F73 && a2 == 0xEE0061696C617274 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025C0F5600 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6169726F74636976 && a2 == 0xE800000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x61696E616D736174 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_25C02CC04(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588390);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  MEMORY[0x270FA5388](v2);
  char v59 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588398);
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v62 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883A0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883A8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v8);
  char v60 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883B0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v11);
  char v58 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883B8);
  uint64_t v48 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  char v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883C0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883C8);
  uint64_t v44 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883D0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_25C02C584();
  uint64_t v26 = v64;
  sub_25C0EC378();
  if (v26) {
    goto LABEL_16;
  }
  uint64_t v41 = v20;
  uint64_t v40 = v18;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v62;
  uint64_t v64 = v22;
  uint64_t v30 = v24;
  uint64_t v31 = sub_25C0EC178();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = sub_25C0EBFE8();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5883D8);
    *uint64_t v34 = &type metadata for AustralianState;
    sub_25C0EC108();
    sub_25C0EBFD8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
LABEL_16:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v66 = 1;
      sub_25C02C7D0();
      sub_25C0EC0F8();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v47);
      break;
    case 2:
      char v67 = 2;
      sub_25C02C77C();
      uint64_t v35 = v57;
      sub_25C0EC0F8();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v45);
      break;
    case 3:
      char v68 = 3;
      sub_25C02C728();
      uint64_t v27 = v58;
      sub_25C0EC0F8();
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      goto LABEL_11;
    case 4:
      char v69 = 4;
      sub_25C02C6D4();
      sub_25C0EC0F8();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v51);
      break;
    case 5:
      char v70 = 5;
      sub_25C02C680();
      sub_25C0EC0F8();
      uint64_t v36 = v53;
      uint64_t v37 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
      break;
    case 6:
      char v71 = 6;
      sub_25C02C62C();
      sub_25C0EC0F8();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
      break;
    case 7:
      char v72 = 7;
      sub_25C02C5D8();
      v38 = v59;
      sub_25C0EC0F8();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      break;
    default:
      char v65 = 0;
      sub_25C02C824();
      uint64_t v32 = v41;
      sub_25C0EC0F8();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v40);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  return v24;
}

uint64_t sub_25C02D538()
{
  return sub_25C02D580(&qword_26A588358, (void (*)(uint64_t))type metadata accessor for Report.Authority.DirectAuthorityDetails);
}

uint64_t sub_25C02D580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C02D5C8()
{
  return sub_25C02D580(&qword_26A588360, (void (*)(uint64_t))type metadata accessor for Report.Authority);
}

unint64_t sub_25C02D614()
{
  unint64_t result = qword_26A588368;
  if (!qword_26A588368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588368);
  }
  return result;
}

unint64_t sub_25C02D66C()
{
  unint64_t result = qword_26A588370;
  if (!qword_26A588370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588370);
  }
  return result;
}

unint64_t sub_25C02D6C0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25C02D66C();
  unint64_t result = sub_25C02D6F0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_25C02D6F0()
{
  unint64_t result = qword_26A588378;
  if (!qword_26A588378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588378);
  }
  return result;
}

unint64_t sub_25C02D748()
{
  unint64_t result = qword_26A588380;
  if (!qword_26A588380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588380);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25C02D7EC()
{
  return MEMORY[0x263F8D320];
}

uint64_t *_s14descr27097BA99O9AuthorityOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v22 = v8;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v19 = (void *)a2[6];
      a1[5] = a2[5];
      a1[6] = (uint64_t)v19;
      uint64_t v12 = a2[8];
      a1[7] = a2[7];
      a1[8] = v12;
      uint64_t v13 = a2[10];
      a1[9] = a2[9];
      a1[10] = v13;
      *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
      a1[12] = a2[12];
      uint64_t v14 = *(int *)(v7 + 28);
      uint64_t v20 = (char *)a2 + v14;
      uint64_t v21 = (char *)a1 + v14;
      uint64_t v15 = sub_25C0EA238();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v21, v20, v15);
      v18((char *)a1 + *(int *)(v7 + 32), (char *)a2 + *(int *)(v7 + 32), v15);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityOwxx(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 28);
    uint64_t v5 = sub_25C0EA238();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v5 - 8), v4, v5);
    uint64_t v6 = a1 + *(int *)(v2 + 32);
    return v7(v6, v5);
  }
  return result;
}

void *_s14descr27097BA99O9AuthorityOwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v20 = v7;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    char v17 = (void *)a2[6];
    a1[5] = a2[5];
    a1[6] = v17;
    uint64_t v10 = a2[8];
    a1[7] = a2[7];
    a1[8] = v10;
    uint64_t v11 = a2[10];
    a1[9] = a2[9];
    a1[10] = v11;
    *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
    a1[12] = a2[12];
    uint64_t v12 = *(int *)(v6 + 28);
    uint64_t v18 = (char *)a2 + v12;
    uint64_t v19 = (char *)a1 + v12;
    uint64_t v13 = sub_25C0EA238();
    id v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v19, v18, v13);
    v16((char *)a1 + *(int *)(v6 + 32), (char *)a2 + *(int *)(v6 + 32), v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityOwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void **)(a2 + 48);
      id v16 = *(void **)(a1 + 48);
      *(void *)(a1 + 48) = v15;
      id v17 = v15;

      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(int *)(v6 + 28);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      uint64_t v21 = sub_25C0EA238();
      uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24);
      v22(v19, v20, v21);
      v22(a1 + *(int *)(v6 + 32), a2 + *(int *)(v6 + 32), v21);
      return a1;
    }
    sub_25C028464(a1, type metadata accessor for Report.Authority.DirectAuthorityDetails);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v24 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v11 = *(int *)(v6 + 28);
  uint64_t v25 = a2 + v11;
  uint64_t v26 = a1 + v11;
  uint64_t v12 = sub_25C0EA238();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v26, v25, v12);
  v23(a1 + *(int *)(v6 + 32), a2 + *(int *)(v6 + 32), v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

_OWORD *_s14descr27097BA99O9AuthorityOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    *((void *)a1 + 6) = *((void *)a2 + 6);
    *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    uint64_t v9 = *(int *)(v6 + 28);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25C0EA238();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    v13((char *)a1 + *(int *)(v6 + 32), (char *)a2 + *(int *)(v6 + 32), v12);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityOwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v7 = *(void *)(v6 - 8);
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v18 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v19;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void **)(a1 + 48);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);

      uint64_t v21 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v22;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v6 + 28);
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v26 = sub_25C0EA238();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40);
      v27(v24, v25, v26);
      v27(a1 + *(int *)(v6 + 32), a2 + *(int *)(v6 + 32), v26);
      return a1;
    }
    sub_25C028464(a1, type metadata accessor for Report.Authority.DirectAuthorityDetails);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v12 = *(int *)(v6 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25C0EA238();
  id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(v6 + 32), a2 + *(int *)(v6 + 32), v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C02E564);
}

uint64_t sub_25C02E564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t _s14descr27097BA99O9AuthorityOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C02E5E4);
}

uint64_t sub_25C02E5E4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_25C02E664(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_25C02E6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_25C02E740()
{
  uint64_t result = type metadata accessor for Report.Authority.DirectAuthorityDetails(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *_s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    id v17 = (void *)a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v17;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v18 = (uint64_t)a2 + v11;
    uint64_t v19 = a1 + v11;
    *(void *)(a1 + 96) = a2[12];
    uint64_t v12 = sub_25C0EA238();
    id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v19, v18, v12);
    v16((uint64_t)v4 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v12);
  }
  return v4;
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_25C0EA238();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  return v8(v6, v5);
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v15 = a2 + v10;
  uint64_t v16 = a1 + v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v11 = sub_25C0EA238();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v16, v15, v11);
  v14(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v11);
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a2 + 48);
  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v6;
  id v8 = v6;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_25C0EA238();
  id v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v12);
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = sub_25C0EA238();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v10);
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_25C0EA238();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v14);
  return a1;
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C02EEF8);
}

uint64_t sub_25C02EEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25C0EA238();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t _s14descr27097BA99O9AuthorityO22DirectAuthorityDetailsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C02EFBC);
}

uint64_t sub_25C02EFBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25C0EA238();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25C02F064()
{
  uint64_t result = sub_25C0EA238();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25C02F10C()
{
  return type metadata accessor for Report.AuthorityWrapper(0);
}

uint64_t sub_25C02F114()
{
  uint64_t result = type metadata accessor for Report.Authority(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Report.AuthorityWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Report.AuthorityWrapper);
}

uint64_t dispatch thunk of Report.AuthorityWrapper.kind.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

ValueMetadata *type metadata accessor for Report.AuthorityWrapper.Kind()
{
  return &type metadata for Report.AuthorityWrapper.Kind;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AustralianState()
{
  return &type metadata for AustralianState;
}

uint64_t _s26SensitiveContentAnalysisUI15AustralianStateOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s26SensitiveContentAnalysisUI15AustralianStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C02F384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_25C02F3AC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25C02F3B4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AustralianState.CodingKeys()
{
  return &type metadata for AustralianState.CodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.AustralianCapitalTerritoryCodingKeys()
{
  return &type metadata for AustralianState.AustralianCapitalTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.NewSouthWalesCodingKeys()
{
  return &type metadata for AustralianState.NewSouthWalesCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.NorthernTerritoryCodingKeys()
{
  return &type metadata for AustralianState.NorthernTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.QueenslandCodingKeys()
{
  return &type metadata for AustralianState.QueenslandCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.SouthAustraliaCodingKeys()
{
  return &type metadata for AustralianState.SouthAustraliaCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.WesternAustraliaCodingKeys()
{
  return &type metadata for AustralianState.WesternAustraliaCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.VictoriaCodingKeys()
{
  return &type metadata for AustralianState.VictoriaCodingKeys;
}

ValueMetadata *type metadata accessor for AustralianState.TasmaniaCodingKeys()
{
  return &type metadata for AustralianState.TasmaniaCodingKeys;
}

unint64_t sub_25C02F450()
{
  unint64_t result = qword_26A58BAB0[0];
  if (!qword_26A58BAB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BAB0);
  }
  return result;
}

unint64_t sub_25C02F4A8()
{
  unint64_t result = qword_26A58BBC0;
  if (!qword_26A58BBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BBC0);
  }
  return result;
}

unint64_t sub_25C02F500()
{
  unint64_t result = qword_26A58BBC8[0];
  if (!qword_26A58BBC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BBC8);
  }
  return result;
}

unint64_t sub_25C02F558()
{
  unint64_t result = qword_26A58BC50;
  if (!qword_26A58BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BC50);
  }
  return result;
}

unint64_t sub_25C02F5B0()
{
  unint64_t result = qword_26A58BC58[0];
  if (!qword_26A58BC58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BC58);
  }
  return result;
}

unint64_t sub_25C02F608()
{
  unint64_t result = qword_26A58BCE0;
  if (!qword_26A58BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BCE0);
  }
  return result;
}

unint64_t sub_25C02F660()
{
  unint64_t result = qword_26A58BCE8[0];
  if (!qword_26A58BCE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BCE8);
  }
  return result;
}

unint64_t sub_25C02F6B8()
{
  unint64_t result = qword_26A58BD70;
  if (!qword_26A58BD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BD70);
  }
  return result;
}

unint64_t sub_25C02F710()
{
  unint64_t result = qword_26A58BD78;
  if (!qword_26A58BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BD78);
  }
  return result;
}

unint64_t sub_25C02F768()
{
  unint64_t result = qword_26A58BE00;
  if (!qword_26A58BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BE00);
  }
  return result;
}

unint64_t sub_25C02F7C0()
{
  unint64_t result = qword_26A58BE08[0];
  if (!qword_26A58BE08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BE08);
  }
  return result;
}

unint64_t sub_25C02F818()
{
  unint64_t result = qword_26A58BE90;
  if (!qword_26A58BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BE90);
  }
  return result;
}

unint64_t sub_25C02F870()
{
  unint64_t result = qword_26A58BE98[0];
  if (!qword_26A58BE98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BE98);
  }
  return result;
}

unint64_t sub_25C02F8C8()
{
  unint64_t result = qword_26A58BF20;
  if (!qword_26A58BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BF20);
  }
  return result;
}

unint64_t sub_25C02F920()
{
  unint64_t result = qword_26A58BF28[0];
  if (!qword_26A58BF28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BF28);
  }
  return result;
}

unint64_t sub_25C02F978()
{
  unint64_t result = qword_26A58BFB0;
  if (!qword_26A58BFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58BFB0);
  }
  return result;
}

unint64_t sub_25C02F9D0()
{
  unint64_t result = qword_26A58BFB8[0];
  if (!qword_26A58BFB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58BFB8);
  }
  return result;
}

unint64_t sub_25C02FA28()
{
  unint64_t result = qword_26A58C040;
  if (!qword_26A58C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58C040);
  }
  return result;
}

unint64_t sub_25C02FA80()
{
  unint64_t result = qword_26A58C048[0];
  if (!qword_26A58C048[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58C048);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_25C02FB24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C02FB8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C02FBF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25C02FC4C()
{
  unint64_t result = qword_26A588400;
  if (!qword_26A588400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588400);
  }
  return result;
}

unint64_t sub_25C02FCA0()
{
  unint64_t result = qword_26A588408;
  if (!qword_26A588408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A588408);
  }
  return result;
}

uint64_t ShowContentButton.isShowingContent.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  MEMORY[0x26117CDA0](&v2, v0);
  return v2;
}

void *sub_25C02FD3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  unint64_t result = MEMORY[0x26117CDA0](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_25C02FD94()
{
  return sub_25C0EB448();
}

uint64_t ShowContentButton.isShowingContent.setter()
{
  return sub_25C0EB448();
}

uint64_t (*ShowContentButton.isShowingContent.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  v3[3] = *v1;
  v3[4] = v5;
  char v6 = *((unsigned char *)v1 + 16);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  MEMORY[0x26117CDA0]();
  return sub_25C02FEE0;
}

uint64_t ShowContentButton.$isShowingContent.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  sub_25C0EB468();
  return v1;
}

double ShowContentButton.body.getter@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  sub_25C0EB468();
  sub_25C0EB538();
  sub_25C0EA818();
  char v2 = sub_25C0EAED8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = v2;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(unsigned char *)(a1 + 112) = 1;
  return result;
}

uint64_t sub_25C030024@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_25C030038()
{
  return sub_25C0EB0B8();
}

double sub_25C030054@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  sub_25C0EB468();
  sub_25C0EB538();
  sub_25C0EA818();
  char v2 = sub_25C0EAED8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = v2;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(unsigned char *)(a1 + 112) = 1;
  return result;
}

void sub_25C030140(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  *uint64_t v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_25C0EB448();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_25C0301B0(uint64_t a1)
{
  return sub_25C030308(a1, qword_26A58C0D8);
}

unint64_t sub_25C0301C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589840);
  uint64_t v2 = sub_25C0EC0B8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25C02FB8C(v6, (uint64_t)&v13, &qword_26A588478);
    uint64_t v7 = v13;
    unint64_t result = sub_25C031D14(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_25C031DA8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25C0302F4(uint64_t a1)
{
  return sub_25C030308(a1, qword_26A58C0F8);
}

uint64_t sub_25C030308(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_25C0EA098();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588468);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_25C0EED70;
  uint64_t v6 = *v5;
  *(void *)(inited + 32) = *v5;
  uint64_t v7 = self;
  uint64_t v8 = *MEMORY[0x263F83570];
  id v9 = v6;
  id v10 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v8);
  *(void *)(inited + 64) = sub_25C031870(0, (unint64_t *)&unk_26A589830);
  *(void *)(inited + 40) = v10;
  sub_25C0301C4(inited);
  id v11 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v12 = (void *)sub_25C0EB828();
  type metadata accessor for Key();
  sub_25C031FCC(&qword_26A588470);
  uint64_t v13 = (void *)sub_25C0EB738();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_initWithString_attributes_, v12, v13);

  return sub_25C0EA0A8();
}

id sub_25C0304B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v54 = a4;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588418);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v51 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588420);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_25C0EBD38();
  uint64_t v8 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  id v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25C0EA668();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v47 - v16;
  uint64_t v18 = sub_25C0EBDC8();
  uint64_t v49 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EBDB8();
  sub_25C0EA658();
  id v21 = objc_msgSend(self, sel_configurationWithScale_, 1);
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_secondarySystemFillColor);
  sub_25C0EA648();
  uint64_t v52 = v12;
  uint64_t v53 = v11;
  uint64_t v24 = v12;
  uint64_t v25 = v17;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v15, v17, v11);
  sub_25C0EBD28();
  id v26 = v21;
  uint64_t v27 = (void *)sub_25C0EB828();
  id v28 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v27, v26);

  sub_25C0EBDA8();
  sub_25C0EBD78();
  id v29 = objc_msgSend(v22, sel_labelColor);
  sub_25C0EBD98();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F821B8], v48);
  sub_25C0EBD48();
  sub_25C0EBD58();
  if (qword_26A58C0D0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_25C0EA098();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_26A58C0D8);
  uint64_t v32 = *(void *)(v30 - 8);
  uint64_t v33 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v50, v31, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v30);
  sub_25C0EBD88();
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824E8]), sel_init);
  uint64_t v35 = v49;
  uint64_t v36 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v20, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v18);
  sub_25C0EBDE8();
  id v37 = objc_msgSend(v34, sel_titleLabel);
  uint64_t v38 = v18;
  if (v37)
  {
    uint64_t v39 = v37;
    objc_msgSend(v37, sel__setOverrideUserInterfaceStyle_, 2);
  }
  id v40 = objc_msgSend(v34, sel_imageView);
  if (v40)
  {
    uint64_t v41 = v40;
    objc_msgSend(v40, sel__setOverrideUserInterfaceStyle_, 2);
  }
  sub_25C031870(0, (unint64_t *)&qword_26A588428);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v56;
  *(void *)(v42 + 16) = v55;
  *(void *)(v42 + 24) = v43;
  *(unsigned char *)(v42 + 32) = v54 & 1;
  *(void *)(v42 + 40) = v34;
  swift_retain();
  swift_retain();
  id v44 = v34;
  uint64_t v45 = (void *)sub_25C0EBD18();
  objc_msgSend(v44, sel_addAction_forControlEvents_, v45, 64);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v38);
  return v44;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_25C030B44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588420);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588418);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v22[-v13];
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  char v25 = a3;
  swift_retain();
  swift_retain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
  MEMORY[0x26117CDA0](&v26);
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  char v25 = a3;
  v22[7] = (v26 & 1) == 0;
  sub_25C0EB448();
  swift_release();
  swift_release();
  sub_25C0EBDD8();
  uint64_t v16 = sub_25C0EBDC8();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16))
  {
    sub_25C02FB8C((uint64_t)v14, (uint64_t)v12, &qword_26A588418);
    sub_25C0EBDE8();
    return sub_25C031174((uint64_t)v14);
  }
  else
  {
    uint64_t v23 = a1;
    uint64_t v24 = a2;
    char v25 = a3 & 1;
    MEMORY[0x26117CDA0](&v26, v15);
    if (v26 == 1)
    {
      if (qword_26A58C0F0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_25C0EA098();
      uint64_t v19 = v18;
      uint64_t v20 = qword_26A58C0F8;
    }
    else
    {
      if (qword_26A58C0D0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_25C0EA098();
      uint64_t v19 = v18;
      uint64_t v20 = qword_26A58C0D8;
    }
    uint64_t v21 = __swift_project_value_buffer(v18, (uint64_t)v20);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v21, v19);
    sub_25C0EA098();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
    sub_25C0EBD88();
    return sub_25C0EBDE8();
  }
}

uint64_t sub_25C030E64()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25C030EAC()
{
  return sub_25C030B44(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_25C030EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588420);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588418);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v24 - v15;
  sub_25C0EBDD8();
  uint64_t v17 = sub_25C0EBDC8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    sub_25C02FB8C((uint64_t)v16, (uint64_t)v14, &qword_26A588418);
    sub_25C0EBDE8();
    return sub_25C031174((uint64_t)v16);
  }
  else
  {
    v24[1] = a3;
    v24[2] = a4;
    char v25 = a5 & 1;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588410);
    MEMORY[0x26117CDA0](&v26, v19);
    if (v26 == 1)
    {
      if (qword_26A58C0F0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_25C0EA098();
      uint64_t v21 = v20;
      uint64_t v22 = qword_26A58C0F8;
    }
    else
    {
      if (qword_26A58C0D0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_25C0EA098();
      uint64_t v21 = v20;
      uint64_t v22 = qword_26A58C0D8;
    }
    uint64_t v23 = __swift_project_value_buffer(v20, (uint64_t)v22);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v10, v23, v21);
    sub_25C0EA098();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
    sub_25C0EBD88();
    return sub_25C0EBDE8();
  }
}

uint64_t sub_25C031174(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25C0311D4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_25C0311F0(uint64_t a1)
{
  return sub_25C0304B4(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_25C0311FC(uint64_t a1, uint64_t a2)
{
  return sub_25C030EBC(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
}

unint64_t sub_25C031208(uint64_t a1)
{
  unint64_t result = sub_25C031230();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25C031230()
{
  unint64_t result = qword_26A588430;
  if (!qword_26A588430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588430);
  }
  return result;
}

unint64_t sub_25C031288()
{
  unint64_t result = qword_26A588438;
  if (!qword_26A588438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588438);
  }
  return result;
}

uint64_t sub_25C0312DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25C0317B8();

  return sub_25C0630F0(a1, a2, v4);
}

uint64_t sub_25C031328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C0317B8();

  return sub_25C063104(a1, a2, a3, v6);
}

uint64_t sub_25C03138C()
{
  return sub_25C0EAC78();
}

uint64_t sub_25C0313D0()
{
  return MEMORY[0x263F1BB58];
}

uint64_t sub_25C0313DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C031230();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_25C031440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C031230();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_25C0314A4()
{
}

uint64_t destroy for ShowContentButton()
{
  swift_release();

  return swift_release();
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ShowContentButton()
{
  return &type metadata for ShowContentButton;
}

uint64_t _s26SensitiveContentAnalysisUI17ShowContentButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s26SensitiveContentAnalysisUI17ShowContentButtonVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s26SensitiveContentAnalysisUI17ShowContentButtonVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s26SensitiveContentAnalysisUI17ShowContentButtonVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25C031678(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ShowContentButton()
{
  return &type metadata for _ShowContentButton;
}

uint64_t sub_25C0316C8()
{
  return sub_25C03173C(&qword_26A588440, &qword_26A588448, (void (*)(void))sub_25C03170C);
}

uint64_t sub_25C03170C()
{
  return sub_25C03173C(&qword_26A588450, &qword_26A588458, (void (*)(void))sub_25C031288);
}

uint64_t sub_25C03173C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C0317B8()
{
  unint64_t result = qword_26A588460;
  if (!qword_26A588460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588460);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_25C031870(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for Key()
{
  if (!qword_26A588480)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A588480);
    }
  }
}

uint64_t sub_25C031904(uint64_t a1, uint64_t a2)
{
  return sub_25C031A70(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_25C03191C(uint64_t a1, id *a2)
{
  uint64_t result = sub_25C0EB838();
  *a2 = 0;
  return result;
}

uint64_t sub_25C031994(uint64_t a1, id *a2)
{
  char v3 = sub_25C0EB848();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25C031A14@<X0>(uint64_t *a1@<X8>)
{
  sub_25C0EB858();
  uint64_t v2 = sub_25C0EB828();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25C031A58(uint64_t a1, uint64_t a2)
{
  return sub_25C031A70(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_25C031A70(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_25C0EB858();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25C031AB4()
{
  sub_25C0EB858();
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C031B08()
{
  sub_25C0EB858();
  sub_25C0EC348();
  sub_25C0EB8C8();
  uint64_t v0 = sub_25C0EC368();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25C031B7C()
{
  uint64_t v0 = sub_25C0EB858();
  uint64_t v2 = v1;
  if (v0 == sub_25C0EB858() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25C0EC268();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_25C031C08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25C0EB828();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25C031C50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25C0EB858();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25C031C7C(uint64_t a1)
{
  uint64_t v2 = sub_25C031FCC(&qword_26A588470);
  uint64_t v3 = sub_25C031FCC(&qword_26A588490);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

unint64_t sub_25C031D14(uint64_t a1)
{
  sub_25C0EB858();
  sub_25C0EC348();
  sub_25C0EB8C8();
  uint64_t v2 = sub_25C0EC368();
  swift_bridgeObjectRelease();

  return sub_25C031DB8(a1, v2);
}

_OWORD *sub_25C031DA8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_25C031DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_25C0EB858();
    uint64_t v8 = v7;
    if (v6 == sub_25C0EB858() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_25C0EB858();
          uint64_t v15 = v14;
          if (v13 == sub_25C0EB858() && v15 == v16) {
            break;
          }
          char v18 = sub_25C0EC268();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_25C031F30()
{
  return sub_25C031FCC((unint64_t *)&unk_26A589940);
}

uint64_t sub_25C031F64()
{
  return sub_25C031FCC(&qword_26A588488);
}

uint64_t sub_25C031F98()
{
  return sub_25C031FCC((unint64_t *)&unk_26A589950);
}

uint64_t sub_25C031FCC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Key();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C032018()
{
  uint64_t v1 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (id *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C032240(v0, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25C0EC358();
      return sub_25C0322A4((uint64_t)v6, type metadata accessor for ReportScreen);
    case 2u:

      goto LABEL_6;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 4u:
LABEL_6:
      uint64_t result = sub_25C0EC358();
      break;
    default:
      sub_25C039664((uint64_t)v6, (uint64_t)v3, type metadata accessor for Report.Authority);
      sub_25C034858(&qword_26A588498, (void (*)(uint64_t))type metadata accessor for Report.Authority);
      sub_25C0EB768();
      sub_25C0EC358();
      uint64_t result = sub_25C0322A4((uint64_t)v3, type metadata accessor for Report.Authority);
      break;
  }
  return result;
}

uint64_t type metadata accessor for ReportScreen(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58C640);
}

uint64_t sub_25C032240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportScreen(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C0322A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C032304()
{
  return sub_25C0EC368();
}

uint64_t sub_25C032348()
{
  return sub_25C0EC368();
}

void sub_25C032388(uint64_t a1)
{
}

void sub_25C0323AC(uint64_t a1)
{
}

void sub_25C0323D0(uint64_t a1)
{
}

void sub_25C0323F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = (void *)sub_25C0EB828();
  id v6 = objc_msgSend(self, sel_systemImageNamed_, v5);

  *a4 = v6;
}

void sub_25C03245C()
{
  uint64_t v0 = (void *)sub_25C0EB828();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895B0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_25C0EF050;
    *(void *)(v2 + 32) = objc_msgSend(self, sel_systemGreenColor);
    sub_25C0EB9E8();
    sub_25C031870(0, &qword_26A5884B8);
    uint64_t v3 = (void *)sub_25C0EB9B8();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(self, sel_configurationWithPaletteColors_, v3);

    id v5 = objc_msgSend(v1, sel_imageWithSymbolConfiguration_, v4);
  }
  else
  {
    id v5 = 0;
  }
  qword_26A595600 = (uint64_t)v5;
}

double sub_25C0325C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v4);
  id v6 = (id *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C032240(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v14);
      uint64_t v8 = type metadata accessor for ReportScreen;
      goto LABEL_9;
    case 2u:

      goto LABEL_3;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 4u:
      goto LABEL_3;
    default:
      uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
      {
LABEL_3:
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v14);
      }
      else
      {
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v14);
        uint64_t v8 = type metadata accessor for Report.Authority;
LABEL_9:
        sub_25C0322A4((uint64_t)v6, v8);
      }
      double result = *(double *)&v14;
      uint64_t v10 = v15;
      uint64_t v11 = v16;
      char v12 = v17;
      uint64_t v13 = v18;
      *(_OWORD *)a1 = v14;
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = v11;
      *(unsigned char *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      return result;
  }
}

uint64_t sub_25C032864@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C032240(v3, (uint64_t)v11);
  uint64_t result = swift_getEnumCaseMultiPayload();
  unsigned int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  switch((int)result)
  {
    case 1:
    case 2:
      uint64_t result = sub_25C0322A4((uint64_t)v11, type metadata accessor for ReportScreen);
      goto LABEL_3;
    case 3:
      sub_25C0322A4((uint64_t)v11, type metadata accessor for ReportScreen);
      switch(a1)
      {
        case 0:
          SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
          uint64_t v19 = "CHILD_SUBMITTED_TO_AUTHORITY ";
          goto LABEL_11;
        case 1:
          SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
          unint64_t v22 = 0xD00000000000001CLL;
          unint64_t v21 = 0x800000025C0F56D0;
          goto LABEL_13;
        case 2:
          SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
          uint64_t v19 = "ADULT_SUBMITTED_TO_AUTHORITY ";
LABEL_11:
          unint64_t v21 = (unint64_t)(v19 - 32) | 0x8000000000000000;
          unint64_t v22 = 0xD00000000000001DLL;
LABEL_13:
          SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v22);
          v23._countAndFlagsBits = 0x656C707041;
          v23._object = (void *)0xE500000000000000;
          SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v23);
          v24._countAndFlagsBits = 0;
          v24._object = (void *)0xE000000000000000;
          SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
          uint64_t result = SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v8, (uint64_t)&v25);
          goto LABEL_15;
      }
      uint64_t result = SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v25);
LABEL_15:
      uint64_t v14 = v25;
      uint64_t v15 = v26;
      uint64_t v16 = v27;
      uint64_t v17 = v28;
      unsigned int v13 = v29;
      uint64_t v18 = v30;
LABEL_16:
      *a2 = v14;
      a2[1] = v15;
      a2[2] = v16;
      a2[3] = v17;
      a2[4] = v13;
      a2[5] = v18;
      return result;
    case 4:
      goto LABEL_16;
    default:
      uint64_t v20 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v11, 1, v20);
      if (result == 1)
      {
LABEL_3:
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        unsigned int v13 = 0;
        uint64_t v18 = 0;
      }
      else
      {
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v25);
        uint64_t v14 = v25;
        uint64_t v15 = v26;
        uint64_t v16 = v27;
        uint64_t v17 = v28;
        unsigned int v13 = v29;
        uint64_t v18 = v30;
        uint64_t result = sub_25C0322A4((uint64_t)v11, type metadata accessor for Report.Authority);
      }
      goto LABEL_16;
  }
}

void *sub_25C032B84()
{
  uint64_t v1 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (id *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C032240(v0, (uint64_t)v3);
  uint64_t v4 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25C0322A4((uint64_t)v3, type metadata accessor for ReportScreen);
      goto LABEL_8;
    case 2u:

LABEL_8:
      if (qword_26A58C528 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)qword_26A5955F8;
      goto LABEL_14;
    case 3u:
      swift_bridgeObjectRelease();
      if (qword_26A58C530 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)qword_26A595600;
      goto LABEL_14;
    case 4u:
      return v4;
    default:
      uint64_t v5 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
      {
        if (qword_26A58C518 != -1) {
          swift_once();
        }
        uint64_t v4 = (void *)qword_26A5955F0;
LABEL_14:
        id v6 = v4;
      }
      else
      {
        if (qword_26A58C510 != -1) {
          swift_once();
        }
        uint64_t v4 = (void *)qword_26A5955E8;
        id v8 = (id)qword_26A5955E8;
        sub_25C0322A4((uint64_t)v3, type metadata accessor for Report.Authority);
      }
      return v4;
  }
}

double sub_25C032DD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C032240(v3, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_25C0322A4((uint64_t)v8, type metadata accessor for ReportScreen);
LABEL_7:
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  uint64_t v9 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  sub_25C0322A4((uint64_t)v8, type metadata accessor for Report.Authority);
  if (v10 != 1 || a1 != 2) {
    goto LABEL_7;
  }
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v17);
  double result = *(double *)&v17;
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  *(_OWORD *)a2 = v17;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  return result;
}

uint64_t sub_25C032F50()
{
  uint64_t v1 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C032240(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 2) {
    return *(void *)v3;
  }
  sub_25C0322A4((uint64_t)v3, type metadata accessor for ReportScreen);
  return 0;
}

uint64_t sub_25C03300C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (id *)((char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C032240(v4, (uint64_t)v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v17 = MEMORY[0x263F8EE78];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A0);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_25C0EF060;
      sub_25C046334((uint64_t)&v117);
      uint64_t v43 = v117;
      uint64_t v42 = v118;
      uint64_t v44 = v119;
      v108 = v120;
      LODWORD(v107) = v121;
      uint64_t v45 = a4;
      uint64_t v46 = v122;
      uint64_t v47 = (void *)sub_25C0EB828();
      id v109 = self;
      id v48 = objc_msgSend(v109, sel_systemImageNamed_, v47);

      if (v48)
      {
        *(void *)(v17 + 32) = v43;
        *(void *)(v17 + 40) = v42;
        uint64_t v49 = v108;
        *(void *)(v17 + 48) = v44;
        *(void *)(v17 + 56) = v49;
        *(unsigned char *)(v17 + 64) = (_BYTE)v107;
        *(void *)(v17 + 72) = v46;
        *(void *)(v17 + 80) = v48;
        v108 = v45;
        sub_25C046370((uint64_t)&v117);
        uint64_t v50 = v117;
        uint64_t v51 = v118;
        uint64_t v52 = v119;
        uint64_t v53 = v120;
        unsigned __int8 v54 = v121;
        v107 = v122;
        uint64_t v55 = (void *)sub_25C0EB828();
        id v56 = objc_msgSend(v109, sel_systemImageNamed_, v55);

        if (v56)
        {
          *(void *)(v17 + 88) = v50;
          *(void *)(v17 + 96) = v51;
          *(void *)(v17 + 104) = v52;
          *(void *)(v17 + 112) = v53;
          *(unsigned char *)(v17 + 120) = v54;
          *(void *)(v17 + 128) = v107;
          *(void *)(v17 + 136) = v56;
          sub_25C04642C((uint64_t)&v117);
          char v57 = v117;
          char v58 = v118;
          uint64_t v59 = v119;
          char v60 = v120;
          LODWORD(v107) = v121;
          v106 = v122;
          uint64_t v61 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          id v62 = objc_msgSend(v109, sel_systemImageNamed_, v61);

          if (v62)
          {
            *(void *)(v17 + 144) = v57;
            *(void *)(v17 + 152) = v58;
            *(void *)(v17 + 160) = v59;
            *(void *)(v17 + 168) = v60;
            *(unsigned char *)(v17 + 176) = (_BYTE)v107;
            *(void *)(v17 + 184) = v106;
            *(void *)(v17 + 192) = v62;
            sub_25C0322A4((uint64_t)v15, type metadata accessor for ReportScreen);
            return v17;
          }
          goto LABEL_25;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    case 2:

      return v17;
    case 3:
      swift_bridgeObjectRelease();
      return v17;
    case 4:
      return v17;
    default:
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) != 1)
      {
        sub_25C039664((uint64_t)v15, (uint64_t)v12, type metadata accessor for Report.Authority.DirectAuthorityDetails);
        uint64_t v116 = v17;
        uint64_t v63 = sub_25C08AE48();
        swift_beginAccess();
        if (*(unsigned char *)(v63 + *(int *)(type metadata accessor for Report.TestingOptions(0) + 40)) == 1)
        {
          SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v117);
          uint64_t v64 = v119;
          v108 = v118;
          id v109 = v117;
          char v65 = v120;
          LODWORD(v107) = v121;
          char v66 = v122;
          char v67 = (void *)sub_25C0EB828();
          id v68 = objc_msgSend(self, sel_systemImageNamed_, v67);

          if (!v68)
          {
LABEL_32:
            __break(1u);
            JUMPOUT(0x25C033A08);
          }
          char v69 = sub_25C034244(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v71 = *((void *)v69 + 2);
          unint64_t v70 = *((void *)v69 + 3);
          if (v71 >= v70 >> 1) {
            char v69 = sub_25C034244((char *)(v70 > 1), v71 + 1, 1, v69);
          }
          *((void *)v69 + 2) = v71 + 1;
          char v72 = &v69[56 * v71];
          uint64_t v73 = v108;
          *((void *)v72 + 4) = v109;
          *((void *)v72 + 5) = v73;
          *((void *)v72 + 6) = v64;
          *((void *)v72 + 7) = v65;
          v72[64] = (char)v107;
          *((void *)v72 + 9) = v66;
          *((void *)v72 + 10) = v68;
          uint64_t v116 = (uint64_t)v69;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_25C0EF070;
        uint64_t v76 = *((void *)v12 + 8);
        uint64_t v75 = *((void *)v12 + 9);
        uint64_t v77 = *((void *)v12 + 10);
        char v78 = v12[88];
        uint64_t v79 = *((void *)v12 + 12);
        uint64_t v80 = (void *)*((void *)v12 + 6);
        *(void *)(inited + 32) = *((void *)v12 + 7);
        *(void *)(inited + 40) = v76;
        *(void *)(inited + 48) = v75;
        *(void *)(inited + 56) = v77;
        *(unsigned char *)(inited + 64) = v78;
        *(void *)(inited + 72) = v79;
        *(void *)(inited + 80) = v80;
        id v81 = v80;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v82._countAndFlagsBits = 0xD000000000000019;
        v82._object = (void *)0x800000025C0F57A0;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v82);
        sub_25C027DEC((uint64_t)&v117);
        v110 = v117;
        v111 = v118;
        uint64_t v112 = v119;
        v113 = v120;
        unsigned __int8 v114 = v121;
        v115 = v122;
        SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v83._countAndFlagsBits = 0;
        v83._object = (void *)0xE000000000000000;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v83);
        SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v8, (uint64_t)&v117);
        uint64_t v84 = v117;
        uint64_t v85 = v118;
        uint64_t v87 = v119;
        uint64_t v86 = v120;
        LODWORD(v108) = v121;
        v107 = v122;
        uint64_t v88 = (void *)sub_25C0EB828();
        id v109 = self;
        id v89 = objc_msgSend(v109, sel_systemImageNamed_, v88);

        if (v89)
        {
          *(void *)(inited + 88) = v84;
          *(void *)(inited + 96) = v85;
          *(void *)(inited + 104) = v87;
          *(void *)(inited + 112) = v86;
          *(unsigned char *)(inited + 120) = (_BYTE)v108;
          *(void *)(inited + 128) = v107;
          *(void *)(inited + 136) = v89;
          SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v117);
          uint64_t v90 = v117;
          v91 = v118;
          uint64_t v92 = v119;
          v93 = v120;
          LODWORD(v108) = v121;
          v94 = v122;
          v95 = (void *)sub_25C0EB828();
          id v96 = objc_msgSend(v109, sel_systemImageNamed_, v95);

          if (v96)
          {
            *(void *)(inited + 144) = v90;
            *(void *)(inited + 152) = v91;
            *(void *)(inited + 160) = v92;
            *(void *)(inited + 168) = v93;
            *(unsigned char *)(inited + 176) = (_BYTE)v108;
            *(void *)(inited + 184) = v94;
            *(void *)(inited + 192) = v96;
            SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v117);
            v97 = v117;
            v98 = v118;
            uint64_t v99 = v119;
            v100 = v120;
            unsigned __int8 v101 = v121;
            v108 = v122;
            v102 = (void *)sub_25C0EB828();
            id v103 = objc_msgSend(v109, sel_systemImageNamed_, v102);

            if (v103)
            {
              *(void *)(inited + 200) = v97;
              *(void *)(inited + 208) = v98;
              *(void *)(inited + 216) = v99;
              *(void *)(inited + 224) = v100;
              *(unsigned char *)(inited + 232) = v101;
              *(void *)(inited + 240) = v108;
              *(void *)(inited + 248) = v103;
              sub_25C034154(inited);
              sub_25C0322A4((uint64_t)v12, type metadata accessor for Report.Authority.DirectAuthorityDetails);
              return v116;
            }
            goto LABEL_31;
          }
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A0);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_25C0EF060;
      sub_25C046210((uint64_t)&v117);
      uint64_t v18 = v118;
      v108 = v117;
      uint64_t v20 = v119;
      uint64_t v19 = v120;
      unsigned __int8 v21 = v121;
      unint64_t v22 = a4;
      Swift::String v23 = v122;
      Swift::String v24 = (void *)sub_25C0EB828();
      id v109 = self;
      id v25 = objc_msgSend(v109, sel_systemImageNamed_, v24);

      if (!v25) {
        goto LABEL_26;
      }
      *(void *)(v17 + 32) = v108;
      *(void *)(v17 + 40) = v18;
      *(void *)(v17 + 48) = v20;
      *(void *)(v17 + 56) = v19;
      *(unsigned char *)(v17 + 64) = v21;
      *(void *)(v17 + 72) = v23;
      *(void *)(v17 + 80) = v25;
      v108 = v22;
      sub_25C046248((uint64_t)&v117);
      uint64_t v26 = v117;
      uint64_t v27 = v118;
      uint64_t v28 = v119;
      unsigned __int8 v29 = v120;
      unsigned __int8 v30 = v121;
      uint64_t v31 = v122;
      uint64_t v32 = (void *)sub_25C0EB828();
      id v33 = objc_msgSend(v109, sel_systemImageNamed_, v32);

      if (!v33) {
        goto LABEL_27;
      }
      *(void *)(v17 + 88) = v26;
      *(void *)(v17 + 96) = v27;
      *(void *)(v17 + 104) = v28;
      *(void *)(v17 + 112) = v29;
      *(unsigned char *)(v17 + 120) = v30;
      *(void *)(v17 + 128) = v31;
      *(void *)(v17 + 136) = v33;
      sub_25C046280((uint64_t)&v117);
      id v34 = v117;
      uint64_t v35 = v118;
      uint64_t v36 = v119;
      id v37 = v120;
      unsigned __int8 v38 = v121;
      uint64_t v39 = v122;
      id v40 = (void *)sub_25C0EB828();
      id v41 = objc_msgSend(v109, sel_systemImageNamed_, v40);

      if (!v41) {
        goto LABEL_28;
      }
      *(void *)(v17 + 144) = v34;
      *(void *)(v17 + 152) = v35;
      *(void *)(v17 + 160) = v36;
      *(void *)(v17 + 168) = v37;
      *(unsigned char *)(v17 + 176) = v38;
      *(void *)(v17 + 184) = v39;
      *(void *)(v17 + 192) = v41;
      return v17;
  }
}

uint64_t sub_25C033A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v64[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (id *)&v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25C032240(v3, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v12 = MEMORY[0x263F8EE78];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_25C0465A8(a2, &v77);
      uint64_t v28 = *((void *)&v77 + 1);
      if (*((void *)&v77 + 1))
      {
        uint64_t v66 = v81;
        int v65 = v80;
        uint64_t v30 = v78;
        uint64_t v29 = v79;
        uint64_t v31 = v77;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A8);
        uint64_t v32 = *(void *)(type metadata accessor for ReportScreen.Button(0) - 8);
        uint64_t v33 = *(void *)(v32 + 72);
        unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_25C0EF080;
        unint64_t v35 = v12 + v34;
        sub_25C04650C((uint64_t)&v77);
        uint64_t v36 = v78;
        uint64_t v37 = v79;
        unsigned __int8 v38 = v80;
        uint64_t v39 = v81;
        *(_OWORD *)unint64_t v35 = v77;
        *(void *)(v35 + 16) = v36;
        *(void *)(v35 + 24) = v37;
        *(unsigned char *)(v35 + 32) = v38;
        *(void *)(v35 + 40) = v39;
        swift_storeEnumTagMultiPayload();
        uint64_t v40 = v35 + v33;
        *(void *)uint64_t v40 = v31;
        *(void *)(v40 + 8) = v28;
        *(void *)(v40 + 16) = v30;
        *(void *)(v40 + 24) = v29;
        *(unsigned char *)(v40 + 32) = v65 & 1;
        *(void *)(v40 + 40) = v66;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A8);
        uint64_t v56 = *(void *)(type metadata accessor for ReportScreen.Button(0) - 8);
        unint64_t v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_25C0EED70;
        unint64_t v58 = v12 + v57;
        sub_25C04650C((uint64_t)&v77);
        uint64_t v59 = v78;
        uint64_t v60 = v79;
        unsigned __int8 v61 = v80;
        uint64_t v62 = v81;
        *(_OWORD *)unint64_t v58 = v77;
        *(void *)(v58 + 16) = v59;
        *(void *)(v58 + 24) = v60;
        *(unsigned char *)(v58 + 32) = v61;
        *(void *)(v58 + 40) = v62;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = type metadata accessor for ReportScreen;
      goto LABEL_11;
    case 2:

      break;
    case 3:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A8);
      uint64_t v41 = *(void *)(type metadata accessor for ReportScreen.Button(0) - 8);
      unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_25C0EED70;
      unint64_t v43 = v12 + v42;
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v77);
      uint64_t v44 = v78;
      uint64_t v45 = v79;
      unsigned __int8 v46 = v80;
      uint64_t v47 = v81;
      *(_OWORD *)unint64_t v43 = v77;
      *(void *)(v43 + 16) = v44;
      *(void *)(v43 + 24) = v45;
      *(unsigned char *)(v43 + 32) = v46;
      *(void *)(v43 + 40) = v47;
      swift_storeEnumTagMultiPayload();
      break;
    case 4:
      return v12;
    default:
      uint64_t v13 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      int v14 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A8);
      uint64_t v15 = *(void *)(type metadata accessor for ReportScreen.Button(0) - 8);
      uint64_t v16 = *(void *)(v15 + 72);
      unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_25C0EF080;
      unint64_t v18 = v12 + v17;
      if (v14 == 1)
      {
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v77);
        uint64_t v19 = v78;
        uint64_t v20 = v79;
        unsigned __int8 v21 = v80;
        uint64_t v22 = v81;
        *(_OWORD *)unint64_t v18 = v77;
        *(void *)(v18 + 16) = v19;
        *(void *)(v18 + 24) = v20;
        *(unsigned char *)(v18 + 32) = v21;
        *(void *)(v18 + 40) = v22;
        swift_storeEnumTagMultiPayload();
        uint64_t v23 = v18 + v16;
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v72);
        uint64_t v24 = v73;
        uint64_t v25 = v74;
        char v26 = v75;
        uint64_t v27 = v76;
        *(_OWORD *)uint64_t v23 = v72;
        *(void *)(v23 + 16) = v24;
        *(void *)(v23 + 24) = v25;
        *(unsigned char *)(v23 + 32) = v26;
        *(void *)(v23 + 40) = v27;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v77);
        uint64_t v48 = v78;
        uint64_t v49 = v79;
        unsigned __int8 v50 = v80;
        uint64_t v51 = v81;
        *(_OWORD *)unint64_t v18 = v77;
        *(void *)(v18 + 16) = v48;
        *(void *)(v18 + 24) = v49;
        *(unsigned char *)(v18 + 32) = v50;
        *(void *)(v18 + 40) = v51;
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = v18 + v16;
        uint64_t v66 = v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
        SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v53._object = (void *)0x800000025C0F58E0;
        v53._countAndFlagsBits = 0xD000000000000011;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v53);
        sub_25C027DEC((uint64_t)&v72);
        long long v67 = v72;
        uint64_t v68 = v73;
        uint64_t v69 = v74;
        char v70 = v75;
        uint64_t v71 = v76;
        SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v54._countAndFlagsBits = 0;
        v54._object = (void *)0xE000000000000000;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v54);
        SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v7, v52);
        sub_25C028010(v66);
        swift_storeEnumTagMultiPayload();
        uint64_t v55 = type metadata accessor for Report.Authority;
LABEL_11:
        sub_25C0322A4((uint64_t)v10, v55);
      }
      break;
  }
  return v12;
}

uint64_t sub_25C034154(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  double result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  double result = (uint64_t)sub_25C034244((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

char *sub_25C034244(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5884A0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25C034364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReportScreen(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (void **)((char *)&v34 - v14);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v18 = (char *)&v34 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5884C0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t *)&v24[*(int *)(v22 + 56)];
  sub_25C032240(a1, (uint64_t)v24);
  sub_25C032240(a2, (uint64_t)v25);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25C032240((uint64_t)v24, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v26 = v35;
        sub_25C039664((uint64_t)v25, v35, type metadata accessor for Report.Evidence);
        char v27 = static Report.Evidence.== infix(_:_:)(v18, v26);
        uint64_t v28 = type metadata accessor for Report.Evidence;
        sub_25C0322A4(v26, type metadata accessor for Report.Evidence);
        uint64_t v29 = (uint64_t)v18;
        goto LABEL_17;
      }
      sub_25C0322A4((uint64_t)v18, type metadata accessor for Report.Evidence);
      goto LABEL_15;
    case 2u:
      sub_25C032240((uint64_t)v24, (uint64_t)v15);
      uint64_t v30 = *v15;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v31 = (void *)*v25;
        sub_25C031870(0, (unint64_t *)&qword_26A588408);
        char v27 = sub_25C0EBCE8();

        goto LABEL_18;
      }

      goto LABEL_15;
    case 3u:
      sub_25C032240((uint64_t)v24, (uint64_t)v12);
      uint64_t v32 = v12[1];
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        char v27 = sub_25C040D3C(*v12, v32, *v25, v25[1]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_15;
      }
      sub_25C0322A4((uint64_t)v24, type metadata accessor for ReportScreen);
      char v27 = 1;
      return v27 & 1;
    default:
      sub_25C032240((uint64_t)v24, (uint64_t)v20);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_25C0322A4((uint64_t)v20, type metadata accessor for Report.Authority);
LABEL_15:
        sub_25C039604((uint64_t)v24);
        char v27 = 0;
      }
      else
      {
        sub_25C039664((uint64_t)v25, (uint64_t)v8, type metadata accessor for Report.Authority);
        char v27 = static Report.Authority.== infix(_:_:)((uint64_t)v20, (uint64_t)v8);
        uint64_t v28 = type metadata accessor for Report.Authority;
        sub_25C0322A4((uint64_t)v8, type metadata accessor for Report.Authority);
        uint64_t v29 = (uint64_t)v20;
LABEL_17:
        sub_25C0322A4(v29, v28);
LABEL_18:
        sub_25C0322A4((uint64_t)v24, type metadata accessor for ReportScreen);
      }
      return v27 & 1;
  }
}

uint64_t type metadata accessor for ReportScreen.Button(uint64_t a1)
{
  return sub_25C02BF00(a1, qword_26A58C660);
}

uint64_t sub_25C034810()
{
  return sub_25C034858(&qword_26A5884B0, (void (*)(uint64_t))type metadata accessor for ReportScreen);
}

uint64_t sub_25C034858(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_25C0348A0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = type metadata accessor for Report.Authority(0);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          uint64_t v74 = v8;
          unint64_t v18 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v18;
          uint64_t v19 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v19;
          a1[32] = *((unsigned char *)a2 + 32);
          uint64_t v69 = a2[6];
          *((void *)a1 + 5) = a2[5];
          *((void *)a1 + 6) = v69;
          uint64_t v20 = a2[8];
          *((void *)a1 + 7) = a2[7];
          *((void *)a1 + 8) = v20;
          uint64_t v21 = a2[10];
          *((void *)a1 + 9) = a2[9];
          *((void *)a1 + 10) = v21;
          a1[88] = *((unsigned char *)a2 + 88);
          *((void *)a1 + 12) = a2[12];
          uint64_t v22 = *(int *)(v7 + 28);
          char v70 = (char *)a2 + v22;
          long long v72 = &a1[v22];
          uint64_t v23 = sub_25C0EA238();
          uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v24 = v69;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v68(v72, v70, v23);
          v68(&a1[*(int *)(v7 + 32)], (char *)a2 + *(int *)(v7 + 32), v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(a1, 0, 1, v7);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = sub_25C0EA328();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v71 = v12;
        uint64_t v73 = v13;
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v25 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v26 = v25[6];
        char v27 = &a1[v26];
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = *(uint64_t *)((char *)a2 + v26 + 8);
        *(void *)char v27 = *(char **)((char *)a2 + v26);
        *((void *)v27 + 1) = v29;
        uint64_t v30 = *(uint64_t *)((char *)a2 + v26 + 24);
        *((void *)v27 + 2) = *(char **)((char *)a2 + v26 + 16);
        *((void *)v27 + 3) = v30;
        uint64_t v31 = *(uint64_t *)((char *)a2 + v26 + 40);
        *((void *)v27 + 4) = *(char **)((char *)a2 + v26 + 32);
        *((void *)v27 + 5) = v31;
        uint64_t v32 = *(uint64_t *)((char *)a2 + v26 + 56);
        *((void *)v27 + 6) = *(char **)((char *)a2 + v26 + 48);
        *((void *)v27 + 7) = v32;
        uint64_t v33 = *(uint64_t *)((char *)a2 + v26 + 72);
        *((void *)v27 + 8) = *(char **)((char *)a2 + v26 + 64);
        *((void *)v27 + 9) = v33;
        uint64_t v34 = *(uint64_t *)((char *)a2 + v26 + 88);
        *((void *)v27 + 10) = *(char **)((char *)a2 + v26 + 80);
        *((void *)v27 + 11) = v34;
        uint64_t v35 = *(uint64_t *)((char *)a2 + v26 + 104);
        *((void *)v27 + 12) = *(char **)((char *)a2 + v26 + 96);
        *((void *)v27 + 13) = v35;
        uint64_t v36 = *(uint64_t *)((char *)a2 + v26 + 120);
        *((void *)v27 + 14) = *(char **)((char *)a2 + v26 + 112);
        *((void *)v27 + 15) = v36;
        uint64_t v37 = *(uint64_t *)((char *)a2 + v26 + 136);
        *((void *)v27 + 16) = *(char **)((char *)a2 + v26 + 128);
        *((void *)v27 + 17) = v37;
        uint64_t v38 = *(uint64_t *)((char *)a2 + v26 + 152);
        *((void *)v27 + 18) = *(char **)((char *)a2 + v26 + 144);
        *((void *)v27 + 19) = v38;
        uint64_t v39 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        uint64_t v66 = &v28[v39];
        long long v67 = &v27[v39];
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v67, v66, v71);
        *(void *)&a1[v25[7]] = *(char **)((char *)a2 + v25[7]);
        *(void *)&a1[v25[8]] = *(char **)((char *)a2 + v25[8]);
        uint64_t v41 = v25[9];
        unint64_t v42 = &a1[v41];
        unint64_t v43 = (char **)((char *)a2 + v41);
        uint64_t v44 = v43[1];
        *(void *)unint64_t v42 = *v43;
        *((void *)v42 + 1) = v44;
        a1[v25[10]] = *((unsigned char *)a2 + v25[10]);
        a1[v25[11]] = *((unsigned char *)a2 + v25[11]);
        uint64_t v45 = v25[12];
        unsigned __int8 v46 = &a1[v45];
        uint64_t v47 = (char **)((char *)a2 + v45);
        uint64_t v48 = v47[1];
        *(void *)unsigned __int8 v46 = *v47;
        *((void *)v46 + 1) = v48;
        *(void *)&a1[v25[13]] = *(char **)((char *)a2 + v25[13]);
        uint64_t v49 = v25[14];
        unsigned __int8 v50 = &a1[v49];
        uint64_t v51 = (uint64_t *)((char *)a2 + v49);
        unint64_t v52 = *(unint64_t *)((char *)a2 + v49 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v52 >> 60 == 15)
        {
          *(_OWORD *)unsigned __int8 v50 = *(_OWORD *)v51;
        }
        else
        {
          uint64_t v53 = *v51;
          sub_25C034EC8(*v51, v52);
          *(void *)unsigned __int8 v50 = v53;
          *((void *)v50 + 1) = v52;
        }
        uint64_t v54 = v25[15];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = (char **)((char *)a2 + v54);
        uint64_t v57 = v56[1];
        *(void *)uint64_t v55 = *v56;
        *((void *)v55 + 1) = v57;
        *(void *)&a1[v25[16]] = *(char **)((char *)a2 + v25[16]);
        uint64_t v58 = v25[17];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = (char **)((char *)a2 + v58);
        uint64_t v61 = v60[1];
        *(void *)uint64_t v59 = *v60;
        *((void *)v59 + 1) = v61;
        uint64_t v62 = v25[18];
        uint64_t v63 = &a1[v62];
        uint64_t v64 = (char **)((char *)a2 + v62);
        uint64_t v65 = v64[1];
        *(void *)uint64_t v63 = *v64;
        *((void *)v63 + 1) = v65;
        *(void *)&a1[v25[19]] = *(char **)((char *)a2 + v25[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v15 = *a2;
        *(void *)a1 = *a2;
        uint64_t v16 = v15;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v17 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v17;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_25C034EC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_25C034F20(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = (char *)a1 + *(int *)(v2 + 28);
        uint64_t v12 = sub_25C0EA238();
        uint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
        ((void (*)(void *__return_ptr, char *, uint64_t))v14)((void *)(v12 - 8), v11, v12);
        uint64_t v13 = (char *)a1 + *(int *)(v2 + 32);
        v14(v13, v12);
      }
      break;
    case 1u:
      uint64_t v3 = sub_25C0EA328();
      uint64_t v4 = *(void *)(v3 - 8);
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
        (*(void (**)(void **, uint64_t))(v4 + 8))(a1, v3);
      }
      uint64_t v5 = type metadata accessor for Report.Evidence(0);
      uint64_t v6 = (char *)a1 + *(int *)(v5 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, uint64_t))(v4 + 8))(&v6[*(int *)(v7 + 40)], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = (uint64_t *)((char *)a1 + *(int *)(v5 + 56));
      unint64_t v9 = v8[1];
      if (v9 >> 60 != 15) {
        sub_25C035294(*v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 2u:
      uint64_t v10 = *a1;

      break;
    case 3u:
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_25C035294(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_25C0352EC(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = type metadata accessor for Report.Authority(0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        uint64_t v72 = v7;
        uint64_t v16 = a2[3];
        a1[2] = a2[2];
        a1[3] = v16;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v17 = (void *)a2[6];
        a1[5] = a2[5];
        a1[6] = v17;
        uint64_t v18 = a2[8];
        a1[7] = a2[7];
        a1[8] = v18;
        uint64_t v19 = a2[10];
        a1[9] = a2[9];
        a1[10] = v19;
        *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
        a1[12] = a2[12];
        uint64_t v20 = *(int *)(v6 + 28);
        uint64_t v68 = (char *)a2 + v20;
        char v70 = (char *)a1 + v20;
        uint64_t v21 = sub_25C0EA238();
        long long v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v22 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v67(v70, v68, v21);
        v67((char *)a1 + *(int *)(v6 + 32), (char *)a2 + *(int *)(v6 + 32), v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_16;
    case 1u:
      uint64_t v9 = sub_25C0EA328();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v71 = v10;
      uint64_t v69 = v9;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v23 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v24 = v23[6];
      uint64_t v25 = (void *)((char *)a1 + v24);
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = *(void *)((char *)a2 + v24 + 8);
      *uint64_t v25 = *(void *)((char *)a2 + v24);
      v25[1] = v27;
      uint64_t v28 = *(void *)((char *)a2 + v24 + 24);
      v25[2] = *(void *)((char *)a2 + v24 + 16);
      v25[3] = v28;
      uint64_t v29 = *(void *)((char *)a2 + v24 + 40);
      v25[4] = *(void *)((char *)a2 + v24 + 32);
      v25[5] = v29;
      uint64_t v30 = *(void *)((char *)a2 + v24 + 56);
      v25[6] = *(void *)((char *)a2 + v24 + 48);
      v25[7] = v30;
      uint64_t v31 = *(void *)((char *)a2 + v24 + 72);
      v25[8] = *(void *)((char *)a2 + v24 + 64);
      v25[9] = v31;
      uint64_t v32 = *(void *)((char *)a2 + v24 + 88);
      v25[10] = *(void *)((char *)a2 + v24 + 80);
      v25[11] = v32;
      uint64_t v33 = *(void *)((char *)a2 + v24 + 104);
      v25[12] = *(void *)((char *)a2 + v24 + 96);
      v25[13] = v33;
      uint64_t v34 = *(void *)((char *)a2 + v24 + 120);
      v25[14] = *(void *)((char *)a2 + v24 + 112);
      v25[15] = v34;
      uint64_t v35 = *(void *)((char *)a2 + v24 + 136);
      v25[16] = *(void *)((char *)a2 + v24 + 128);
      v25[17] = v35;
      uint64_t v36 = *(void *)((char *)a2 + v24 + 152);
      v25[18] = *(void *)((char *)a2 + v24 + 144);
      v25[19] = v36;
      uint64_t v37 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
      uint64_t v65 = &v26[v37];
      uint64_t v66 = (char *)v25 + v37;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v66, v65, v69);
      *(void *)((char *)a1 + v23[7]) = *(void *)((char *)a2 + v23[7]);
      *(void *)((char *)a1 + v23[8]) = *(void *)((char *)a2 + v23[8]);
      uint64_t v39 = v23[9];
      uint64_t v40 = (void *)((char *)a1 + v39);
      uint64_t v41 = (void *)((char *)a2 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      *((unsigned char *)a1 + v23[10]) = *((unsigned char *)a2 + v23[10]);
      *((unsigned char *)a1 + v23[11]) = *((unsigned char *)a2 + v23[11]);
      uint64_t v43 = v23[12];
      uint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      *(void *)((char *)a1 + v23[13]) = *(void *)((char *)a2 + v23[13]);
      uint64_t v47 = v23[14];
      uint64_t v48 = (char *)a1 + v47;
      uint64_t v49 = (void *)((char *)a2 + v47);
      unint64_t v50 = *(void *)((char *)a2 + v47 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      }
      else
      {
        uint64_t v51 = *v49;
        sub_25C034EC8(*v49, v50);
        *(void *)uint64_t v48 = v51;
        *((void *)v48 + 1) = v50;
      }
      uint64_t v52 = v23[15];
      uint64_t v53 = (void *)((char *)a1 + v52);
      uint64_t v54 = (void *)((char *)a2 + v52);
      uint64_t v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      *(void *)((char *)a1 + v23[16]) = *(void *)((char *)a2 + v23[16]);
      uint64_t v56 = v23[17];
      uint64_t v57 = (void *)((char *)a1 + v56);
      uint64_t v58 = (void *)((char *)a2 + v56);
      uint64_t v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v23[18];
      uint64_t v61 = (void *)((char *)a1 + v60);
      uint64_t v62 = (void *)((char *)a2 + v60);
      uint64_t v63 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v63;
      *(void *)((char *)a1 + v23[19]) = *(void *)((char *)a2 + v23[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 2u:
      uint64_t v12 = (void *)*a2;
      *a1 = *a2;
      id v13 = v12;
      goto LABEL_16;
    case 3u:
      uint64_t v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_25C0358C4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25C0322A4((uint64_t)a1, type metadata accessor for ReportScreen);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = type metadata accessor for Report.Authority(0);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v52 = v7;
          a1[3] = a2[3];
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          a1[5] = a2[5];
          uint64_t v14 = (void *)a2[6];
          a1[6] = v14;
          a1[7] = a2[7];
          a1[8] = a2[8];
          a1[9] = a2[9];
          a1[10] = a2[10];
          *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
          a1[12] = a2[12];
          uint64_t v15 = *(int *)(v6 + 28);
          uint64_t v48 = (char *)a2 + v15;
          unint64_t v50 = (char *)a1 + v15;
          uint64_t v16 = sub_25C0EA238();
          uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v17 = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v47(v50, v48, v16);
          v47((char *)a1 + *(int *)(v6 + 32), (char *)a2 + *(int *)(v6 + 32), v16);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_17;
      case 1u:
        uint64_t v9 = sub_25C0EA328();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v51 = v10;
        uint64_t v49 = v9;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        uint64_t v18 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (char *)a2 + v19;
        *uint64_t v20 = *(void *)((char *)a2 + v19);
        v20[1] = *(void *)((char *)a2 + v19 + 8);
        v20[2] = *(void *)((char *)a2 + v19 + 16);
        v20[3] = *(void *)((char *)a2 + v19 + 24);
        v20[4] = *(void *)((char *)a2 + v19 + 32);
        v20[5] = *(void *)((char *)a2 + v19 + 40);
        v20[6] = *(void *)((char *)a2 + v19 + 48);
        v20[7] = *(void *)((char *)a2 + v19 + 56);
        v20[8] = *(void *)((char *)a2 + v19 + 64);
        v20[9] = *(void *)((char *)a2 + v19 + 72);
        v20[10] = *(void *)((char *)a2 + v19 + 80);
        v20[11] = *(void *)((char *)a2 + v19 + 88);
        v20[12] = *(void *)((char *)a2 + v19 + 96);
        v20[13] = *(void *)((char *)a2 + v19 + 104);
        v20[14] = *(void *)((char *)a2 + v19 + 112);
        v20[15] = *(void *)((char *)a2 + v19 + 120);
        v20[16] = *(void *)((char *)a2 + v19 + 128);
        v20[17] = *(void *)((char *)a2 + v19 + 136);
        v20[18] = *(void *)((char *)a2 + v19 + 144);
        v20[19] = *(void *)((char *)a2 + v19 + 152);
        uint64_t v22 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        uint64_t v45 = &v21[v22];
        uint64_t v46 = (char *)v20 + v22;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23(v46, v45, v49);
        *(void *)((char *)a1 + v18[7]) = *(void *)((char *)a2 + v18[7]);
        *(void *)((char *)a1 + v18[8]) = *(void *)((char *)a2 + v18[8]);
        uint64_t v24 = v18[9];
        uint64_t v25 = (void *)((char *)a1 + v24);
        uint64_t v26 = (void *)((char *)a2 + v24);
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        *((unsigned char *)a1 + v18[10]) = *((unsigned char *)a2 + v18[10]);
        *((unsigned char *)a1 + v18[11]) = *((unsigned char *)a2 + v18[11]);
        uint64_t v27 = v18[12];
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (void *)((char *)a2 + v27);
        *uint64_t v28 = *v29;
        v28[1] = v29[1];
        *(void *)((char *)a1 + v18[13]) = *(void *)((char *)a2 + v18[13]);
        uint64_t v30 = v18[14];
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (void *)((char *)a2 + v30);
        unint64_t v33 = *(void *)((char *)a2 + v30 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
        }
        else
        {
          uint64_t v34 = *v32;
          sub_25C034EC8(*v32, v33);
          *(void *)uint64_t v31 = v34;
          *((void *)v31 + 1) = v33;
        }
        uint64_t v35 = v18[15];
        uint64_t v36 = (void *)((char *)a1 + v35);
        uint64_t v37 = (void *)((char *)a2 + v35);
        *uint64_t v36 = *v37;
        v36[1] = v37[1];
        *(void *)((char *)a1 + v18[16]) = *(void *)((char *)a2 + v18[16]);
        uint64_t v38 = v18[17];
        uint64_t v39 = (void *)((char *)a1 + v38);
        uint64_t v40 = (void *)((char *)a2 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v18[18];
        uint64_t v42 = (void *)((char *)a1 + v41);
        uint64_t v43 = (void *)((char *)a2 + v41);
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        *(void *)((char *)a1 + v18[19]) = *(void *)((char *)a2 + v18[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v12 = (void *)*a2;
        *a1 = *a2;
        id v13 = v12;
        goto LABEL_17;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_25C035F68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_25C0EA328();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v11 + 32))(a1, a2, v10);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    uint64_t v19 = (int *)type metadata accessor for Report.Evidence(0);
    uint64_t v20 = v19[6];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    long long v23 = *(_OWORD *)((char *)a2 + v20 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)((char *)a2 + v20);
    *((_OWORD *)v21 + 1) = v23;
    long long v24 = *(_OWORD *)((char *)a2 + v20 + 48);
    *((_OWORD *)v21 + 2) = *(_OWORD *)((char *)a2 + v20 + 32);
    *((_OWORD *)v21 + 3) = v24;
    long long v25 = *(_OWORD *)((char *)a2 + v20 + 112);
    *((_OWORD *)v21 + 6) = *(_OWORD *)((char *)a2 + v20 + 96);
    *((_OWORD *)v21 + 7) = v25;
    long long v26 = *(_OWORD *)((char *)a2 + v20 + 144);
    *((_OWORD *)v21 + 8) = *(_OWORD *)((char *)a2 + v20 + 128);
    *((_OWORD *)v21 + 9) = v26;
    long long v27 = *(_OWORD *)((char *)a2 + v20 + 80);
    *((_OWORD *)v21 + 4) = *(_OWORD *)((char *)a2 + v20 + 64);
    *((_OWORD *)v21 + 5) = v27;
    uint64_t v28 = _s14descr27097BA99O6VictimVMa(0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v21[*(int *)(v28 + 40)], &v22[*(int *)(v28 + 40)], v10);
    *(void *)((char *)a1 + v19[7]) = *(void *)((char *)a2 + v19[7]);
    *(void *)((char *)a1 + v19[8]) = *(void *)((char *)a2 + v19[8]);
    *(_OWORD *)((char *)a1 + v19[9]) = *(_OWORD *)((char *)a2 + v19[9]);
    *((unsigned char *)a1 + v19[10]) = *((unsigned char *)a2 + v19[10]);
    *((unsigned char *)a1 + v19[11]) = *((unsigned char *)a2 + v19[11]);
    *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
    *(void *)((char *)a1 + v19[13]) = *(void *)((char *)a2 + v19[13]);
    *(_OWORD *)((char *)a1 + v19[14]) = *(_OWORD *)((char *)a2 + v19[14]);
    *(_OWORD *)((char *)a1 + v19[15]) = *(_OWORD *)((char *)a2 + v19[15]);
    *(void *)((char *)a1 + v19[16]) = *(void *)((char *)a2 + v19[16]);
    *(_OWORD *)((char *)a1 + v19[17]) = *(_OWORD *)((char *)a2 + v19[17]);
    *(_OWORD *)((char *)a1 + v19[18]) = *(_OWORD *)((char *)a2 + v19[18]);
    *(void *)((char *)a1 + v19[19]) = *(void *)((char *)a2 + v19[19]);
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = type metadata accessor for Report.Authority(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      a1[2] = a2[2];
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      uint64_t v14 = *(int *)(v7 + 28);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_25C0EA238();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
      v18(v15, v16, v17);
      v18((char *)a1 + *(int *)(v7 + 32), (char *)a2 + *(int *)(v7 + 32), v17);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_25C03634C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25C0322A4((uint64_t)a1, type metadata accessor for ReportScreen);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_25C0EA328();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v19 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v20 = v19[6];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      long long v23 = *(_OWORD *)((char *)a2 + v20 + 16);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)((char *)a2 + v20);
      *((_OWORD *)v21 + 1) = v23;
      long long v24 = *(_OWORD *)((char *)a2 + v20 + 48);
      *((_OWORD *)v21 + 2) = *(_OWORD *)((char *)a2 + v20 + 32);
      *((_OWORD *)v21 + 3) = v24;
      long long v25 = *(_OWORD *)((char *)a2 + v20 + 112);
      *((_OWORD *)v21 + 6) = *(_OWORD *)((char *)a2 + v20 + 96);
      *((_OWORD *)v21 + 7) = v25;
      long long v26 = *(_OWORD *)((char *)a2 + v20 + 144);
      *((_OWORD *)v21 + 8) = *(_OWORD *)((char *)a2 + v20 + 128);
      *((_OWORD *)v21 + 9) = v26;
      long long v27 = *(_OWORD *)((char *)a2 + v20 + 80);
      *((_OWORD *)v21 + 4) = *(_OWORD *)((char *)a2 + v20 + 64);
      *((_OWORD *)v21 + 5) = v27;
      uint64_t v28 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v21[*(int *)(v28 + 40)], &v22[*(int *)(v28 + 40)], v10);
      *(void *)((char *)a1 + v19[7]) = *(void *)((char *)a2 + v19[7]);
      *(void *)((char *)a1 + v19[8]) = *(void *)((char *)a2 + v19[8]);
      *(_OWORD *)((char *)a1 + v19[9]) = *(_OWORD *)((char *)a2 + v19[9]);
      *((unsigned char *)a1 + v19[10]) = *((unsigned char *)a2 + v19[10]);
      *((unsigned char *)a1 + v19[11]) = *((unsigned char *)a2 + v19[11]);
      *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
      *(void *)((char *)a1 + v19[13]) = *(void *)((char *)a2 + v19[13]);
      *(_OWORD *)((char *)a1 + v19[14]) = *(_OWORD *)((char *)a2 + v19[14]);
      *(_OWORD *)((char *)a1 + v19[15]) = *(_OWORD *)((char *)a2 + v19[15]);
      *(void *)((char *)a1 + v19[16]) = *(void *)((char *)a2 + v19[16]);
      *(_OWORD *)((char *)a1 + v19[17]) = *(_OWORD *)((char *)a2 + v19[17]);
      *(_OWORD *)((char *)a1 + v19[18]) = *(_OWORD *)((char *)a2 + v19[18]);
      *(void *)((char *)a1 + v19[19]) = *(void *)((char *)a2 + v19[19]);
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = type metadata accessor for Report.Authority(0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        long long v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        a1[2] = a2[2];
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        uint64_t v14 = *(int *)(v7 + 28);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_25C0EA238();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v18(v15, v16, v17);
        v18((char *)a1 + *(int *)(v7 + 32), (char *)a2 + *(int *)(v7 + 32), v17);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25C036760()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25C036770()
{
  uint64_t result = type metadata accessor for Report.Authority(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Report.Evidence(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

char *sub_25C03684C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      long long v13 = *a2;
      uint64_t v14 = *a2;
      *(void *)a1 = v13;
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for ReportScreen(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
          uint64_t v10 = *(void *)(v9 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
          {
            uint64_t v11 = type metadata accessor for Report.Authority(0);
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            uint64_t v21 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v21;
            uint64_t v78 = v10;
            uint64_t v22 = a2[3];
            *((void *)a1 + 2) = a2[2];
            *((void *)a1 + 3) = v22;
            a1[32] = *((unsigned char *)a2 + 32);
            long long v23 = a2[6];
            *((void *)a1 + 5) = a2[5];
            *((void *)a1 + 6) = v23;
            long long v24 = a2[8];
            *((void *)a1 + 7) = a2[7];
            *((void *)a1 + 8) = v24;
            long long v25 = a2[10];
            *((void *)a1 + 9) = a2[9];
            *((void *)a1 + 10) = v25;
            a1[88] = *((unsigned char *)a2 + 88);
            *((void *)a1 + 12) = a2[12];
            uint64_t v26 = *(int *)(v9 + 28);
            uint64_t v74 = (uint64_t)a2 + v26;
            uint64_t v76 = &a1[v26];
            uint64_t v27 = sub_25C0EA238();
            uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v28 = v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v73(v76, v74, v27);
            v73(&a1[*(int *)(v9 + 32)], (uint64_t)a2 + *(int *)(v9 + 32), v27);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(a1, 0, 1, v9);
          }
          goto LABEL_22;
        case 1u:
          uint64_t v15 = sub_25C0EA328();
          uint64_t v16 = *(void *)(v15 - 8);
          uint64_t v77 = v16;
          uint64_t v75 = v15;
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
          {
            uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
            memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char **, uint64_t))(v16 + 16))(a1, a2, v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          }
          uint64_t v29 = (int *)type metadata accessor for Report.Evidence(0);
          uint64_t v30 = v29[6];
          uint64_t v31 = &a1[v30];
          uint64_t v32 = (uint64_t)a2 + v30;
          uint64_t v33 = *(uint64_t *)((char *)a2 + v30 + 8);
          *(void *)uint64_t v31 = *(char **)((char *)a2 + v30);
          *((void *)v31 + 1) = v33;
          uint64_t v34 = *(uint64_t *)((char *)a2 + v30 + 24);
          *((void *)v31 + 2) = *(char **)((char *)a2 + v30 + 16);
          *((void *)v31 + 3) = v34;
          uint64_t v35 = *(uint64_t *)((char *)a2 + v30 + 40);
          *((void *)v31 + 4) = *(char **)((char *)a2 + v30 + 32);
          *((void *)v31 + 5) = v35;
          uint64_t v36 = *(uint64_t *)((char *)a2 + v30 + 56);
          *((void *)v31 + 6) = *(char **)((char *)a2 + v30 + 48);
          *((void *)v31 + 7) = v36;
          uint64_t v37 = *(uint64_t *)((char *)a2 + v30 + 72);
          *((void *)v31 + 8) = *(char **)((char *)a2 + v30 + 64);
          *((void *)v31 + 9) = v37;
          uint64_t v38 = *(uint64_t *)((char *)a2 + v30 + 88);
          *((void *)v31 + 10) = *(char **)((char *)a2 + v30 + 80);
          *((void *)v31 + 11) = v38;
          uint64_t v39 = *(uint64_t *)((char *)a2 + v30 + 104);
          *((void *)v31 + 12) = *(char **)((char *)a2 + v30 + 96);
          *((void *)v31 + 13) = v39;
          uint64_t v40 = *(uint64_t *)((char *)a2 + v30 + 120);
          *((void *)v31 + 14) = *(char **)((char *)a2 + v30 + 112);
          *((void *)v31 + 15) = v40;
          uint64_t v41 = *(uint64_t *)((char *)a2 + v30 + 136);
          *((void *)v31 + 16) = *(char **)((char *)a2 + v30 + 128);
          *((void *)v31 + 17) = v41;
          uint64_t v42 = *(uint64_t *)((char *)a2 + v30 + 152);
          *((void *)v31 + 18) = *(char **)((char *)a2 + v30 + 144);
          *((void *)v31 + 19) = v42;
          uint64_t v43 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
          uint64_t v71 = v32 + v43;
          uint64_t v72 = &v31[v43];
          uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44(v72, v71, v75);
          *(void *)&a1[v29[7]] = *(char **)((char *)a2 + v29[7]);
          *(void *)&a1[v29[8]] = *(char **)((char *)a2 + v29[8]);
          uint64_t v45 = v29[9];
          uint64_t v46 = &a1[v45];
          uint64_t v47 = (char **)((char *)a2 + v45);
          uint64_t v48 = v47[1];
          *(void *)uint64_t v46 = *v47;
          *((void *)v46 + 1) = v48;
          a1[v29[10]] = *((unsigned char *)a2 + v29[10]);
          a1[v29[11]] = *((unsigned char *)a2 + v29[11]);
          uint64_t v49 = v29[12];
          unint64_t v50 = &a1[v49];
          uint64_t v51 = (char **)((char *)a2 + v49);
          uint64_t v52 = v51[1];
          *(void *)unint64_t v50 = *v51;
          *((void *)v50 + 1) = v52;
          *(void *)&a1[v29[13]] = *(char **)((char *)a2 + v29[13]);
          uint64_t v53 = v29[14];
          uint64_t v54 = &a1[v53];
          uint64_t v55 = (uint64_t *)((char *)a2 + v53);
          unint64_t v56 = *(unint64_t *)((char *)a2 + v53 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v56 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
          }
          else
          {
            uint64_t v57 = *v55;
            sub_25C034EC8(*v55, v56);
            *(void *)uint64_t v54 = v57;
            *((void *)v54 + 1) = v56;
          }
          uint64_t v58 = v29[15];
          uint64_t v59 = &a1[v58];
          uint64_t v60 = (char **)((char *)a2 + v58);
          uint64_t v61 = v60[1];
          *(void *)uint64_t v59 = *v60;
          *((void *)v59 + 1) = v61;
          *(void *)&a1[v29[16]] = *(char **)((char *)a2 + v29[16]);
          uint64_t v62 = v29[17];
          uint64_t v63 = &a1[v62];
          uint64_t v64 = (char **)((char *)a2 + v62);
          uint64_t v65 = v64[1];
          *(void *)uint64_t v63 = *v64;
          *((void *)v63 + 1) = v65;
          uint64_t v66 = v29[18];
          long long v67 = &a1[v66];
          uint64_t v68 = (char **)((char *)a2 + v66);
          uint64_t v69 = v68[1];
          *(void *)long long v67 = *v68;
          *((void *)v67 + 1) = v69;
          *(void *)&a1[v29[19]] = *(char **)((char *)a2 + v29[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_22;
        case 2u:
          uint64_t v18 = *a2;
          *(void *)a1 = *a2;
          uint64_t v19 = v18;
          goto LABEL_22;
        case 3u:
          uint64_t v20 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v20;
          swift_bridgeObjectRetain();
LABEL_22:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      goto LABEL_23;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void sub_25C036EE4(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = *a1;
LABEL_8:
  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for ReportScreen(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v3 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = (char *)a1 + *(int *)(v3 + 28);
          uint64_t v13 = sub_25C0EA238();
          uint64_t v15 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
          ((void (*)(void *__return_ptr, char *, uint64_t))v15)((void *)(v13 - 8), v12, v13);
          uint64_t v14 = (char *)a1 + *(int *)(v3 + 32);
          v15(v14, v13);
        }
        return;
      case 1u:
        uint64_t v5 = sub_25C0EA328();
        uint64_t v6 = *(void *)(v5 - 8);
        if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
          (*(void (**)(void **, uint64_t))(v6 + 8))(a1, v5);
        }
        uint64_t v7 = type metadata accessor for Report.Evidence(0);
        uint64_t v8 = (char *)a1 + *(int *)(v7 + 24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = _s14descr27097BA99O6VictimVMa(0);
        (*(void (**)(char *, uint64_t))(v6 + 8))(&v8[*(int *)(v9 + 40)], v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(v7 + 56));
        unint64_t v11 = v10[1];
        if (v11 >> 60 != 15) {
          sub_25C035294(*v10, v11);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      case 2u:
        uint64_t v4 = *a1;
        goto LABEL_8;
      case 3u:
LABEL_17:
        swift_bridgeObjectRelease();
        break;
      default:
        return;
    }
  }
}

void *sub_25C0372A4(void *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    id v11 = *(id *)a2;
    id v12 = *(id *)a2;
    *a1 = v11;
LABEL_21:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for ReportScreen(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          uint64_t v10 = type metadata accessor for Report.Authority(0);
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          uint64_t v19 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v19;
          uint64_t v76 = v9;
          uint64_t v20 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v20;
          *((unsigned char *)a1 + 32) = *(unsigned char *)(a2 + 32);
          uint64_t v21 = *(void **)(a2 + 48);
          a1[5] = *(void *)(a2 + 40);
          a1[6] = v21;
          uint64_t v22 = *(void *)(a2 + 64);
          a1[7] = *(void *)(a2 + 56);
          a1[8] = v22;
          uint64_t v23 = *(void *)(a2 + 80);
          a1[9] = *(void *)(a2 + 72);
          a1[10] = v23;
          *((unsigned char *)a1 + 88) = *(unsigned char *)(a2 + 88);
          a1[12] = *(void *)(a2 + 96);
          uint64_t v24 = *(int *)(v8 + 28);
          uint64_t v72 = a2 + v24;
          uint64_t v74 = (char *)a1 + v24;
          uint64_t v25 = sub_25C0EA238();
          uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v26 = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v71(v74, v72, v25);
          v71((char *)a1 + *(int *)(v8 + 32), a2 + *(int *)(v8 + 32), v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v8);
        }
        goto LABEL_20;
      case 1u:
        uint64_t v13 = sub_25C0EA328();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v75 = v14;
        uint64_t v73 = v13;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        uint64_t v27 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v28 = v27[6];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = a2 + v28;
        uint64_t v31 = *(void *)(a2 + v28 + 8);
        *uint64_t v29 = *(void *)(a2 + v28);
        v29[1] = v31;
        uint64_t v32 = *(void *)(a2 + v28 + 24);
        v29[2] = *(void *)(a2 + v28 + 16);
        v29[3] = v32;
        uint64_t v33 = *(void *)(a2 + v28 + 40);
        v29[4] = *(void *)(a2 + v28 + 32);
        v29[5] = v33;
        uint64_t v34 = *(void *)(a2 + v28 + 56);
        v29[6] = *(void *)(a2 + v28 + 48);
        v29[7] = v34;
        uint64_t v35 = *(void *)(a2 + v28 + 72);
        v29[8] = *(void *)(a2 + v28 + 64);
        v29[9] = v35;
        uint64_t v36 = *(void *)(a2 + v28 + 88);
        v29[10] = *(void *)(a2 + v28 + 80);
        v29[11] = v36;
        uint64_t v37 = *(void *)(a2 + v28 + 104);
        v29[12] = *(void *)(a2 + v28 + 96);
        v29[13] = v37;
        uint64_t v38 = *(void *)(a2 + v28 + 120);
        v29[14] = *(void *)(a2 + v28 + 112);
        v29[15] = v38;
        uint64_t v39 = *(void *)(a2 + v28 + 136);
        v29[16] = *(void *)(a2 + v28 + 128);
        v29[17] = v39;
        uint64_t v40 = *(void *)(a2 + v28 + 152);
        v29[18] = *(void *)(a2 + v28 + 144);
        v29[19] = v40;
        uint64_t v41 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        uint64_t v69 = v30 + v41;
        char v70 = (char *)v29 + v41;
        uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42(v70, v69, v73);
        *(void *)((char *)a1 + v27[7]) = *(void *)(a2 + v27[7]);
        *(void *)((char *)a1 + v27[8]) = *(void *)(a2 + v27[8]);
        uint64_t v43 = v27[9];
        uint64_t v44 = (void *)((char *)a1 + v43);
        uint64_t v45 = (void *)(a2 + v43);
        uint64_t v46 = v45[1];
        *uint64_t v44 = *v45;
        v44[1] = v46;
        *((unsigned char *)a1 + v27[10]) = *(unsigned char *)(a2 + v27[10]);
        *((unsigned char *)a1 + v27[11]) = *(unsigned char *)(a2 + v27[11]);
        uint64_t v47 = v27[12];
        uint64_t v48 = (void *)((char *)a1 + v47);
        uint64_t v49 = (void *)(a2 + v47);
        uint64_t v50 = v49[1];
        *uint64_t v48 = *v49;
        v48[1] = v50;
        *(void *)((char *)a1 + v27[13]) = *(void *)(a2 + v27[13]);
        uint64_t v51 = v27[14];
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (uint64_t *)(a2 + v51);
        unint64_t v54 = *(void *)(a2 + v51 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v54 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
        }
        else
        {
          uint64_t v55 = *v53;
          sub_25C034EC8(*v53, v54);
          *(void *)uint64_t v52 = v55;
          *((void *)v52 + 1) = v54;
        }
        uint64_t v56 = v27[15];
        uint64_t v57 = (void *)((char *)a1 + v56);
        uint64_t v58 = (void *)(a2 + v56);
        uint64_t v59 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v59;
        *(void *)((char *)a1 + v27[16]) = *(void *)(a2 + v27[16]);
        uint64_t v60 = v27[17];
        uint64_t v61 = (void *)((char *)a1 + v60);
        uint64_t v62 = (void *)(a2 + v60);
        uint64_t v63 = v62[1];
        *uint64_t v61 = *v62;
        v61[1] = v63;
        uint64_t v64 = v27[18];
        uint64_t v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)(a2 + v64);
        uint64_t v67 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v67;
        *(void *)((char *)a1 + v27[19]) = *(void *)(a2 + v27[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 2u:
        id v16 = *(id *)a2;
        *a1 = *(void *)a2;
        id v17 = v16;
        goto LABEL_20;
      case 3u:
        uint64_t v18 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v18;
        swift_bridgeObjectRetain();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    goto LABEL_21;
  }
  memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_25C0378F8(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (void *)a2)
  {
    sub_25C0322A4((uint64_t)a1, type metadata accessor for ReportScreen.Control);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      id v11 = *(id *)a2;
      id v12 = *(id *)a2;
      *a1 = v11;
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for ReportScreen(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
          uint64_t v9 = *(void *)(v8 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
          {
            uint64_t v10 = type metadata accessor for Report.Authority(0);
            memcpy(a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
          }
          else
          {
            *a1 = *(void *)a2;
            a1[1] = *(void *)(a2 + 8);
            a1[2] = *(void *)(a2 + 16);
            uint64_t v56 = v9;
            a1[3] = *(void *)(a2 + 24);
            *((unsigned char *)a1 + 32) = *(unsigned char *)(a2 + 32);
            a1[5] = *(void *)(a2 + 40);
            uint64_t v18 = *(void **)(a2 + 48);
            a1[6] = v18;
            a1[7] = *(void *)(a2 + 56);
            a1[8] = *(void *)(a2 + 64);
            a1[9] = *(void *)(a2 + 72);
            a1[10] = *(void *)(a2 + 80);
            *((unsigned char *)a1 + 88) = *(unsigned char *)(a2 + 88);
            a1[12] = *(void *)(a2 + 96);
            uint64_t v19 = *(int *)(v8 + 28);
            uint64_t v52 = a2 + v19;
            unint64_t v54 = (char *)a1 + v19;
            uint64_t v20 = sub_25C0EA238();
            uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v21 = v18;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v51(v54, v52, v20);
            v51((char *)a1 + *(int *)(v8 + 32), a2 + *(int *)(v8 + 32), v20);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(a1, 0, 1, v8);
          }
          goto LABEL_21;
        case 1u:
          uint64_t v13 = sub_25C0EA328();
          uint64_t v14 = *(void *)(v13 - 8);
          uint64_t v55 = v14;
          uint64_t v53 = v13;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
          {
            uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
            memcpy(a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v14 + 16))(a1, a2, v13);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
          }
          uint64_t v22 = (int *)type metadata accessor for Report.Evidence(0);
          uint64_t v23 = v22[6];
          uint64_t v24 = (void *)((char *)a1 + v23);
          uint64_t v25 = a2 + v23;
          *uint64_t v24 = *(void *)(a2 + v23);
          v24[1] = *(void *)(a2 + v23 + 8);
          v24[2] = *(void *)(a2 + v23 + 16);
          void v24[3] = *(void *)(a2 + v23 + 24);
          v24[4] = *(void *)(a2 + v23 + 32);
          v24[5] = *(void *)(a2 + v23 + 40);
          v24[6] = *(void *)(a2 + v23 + 48);
          v24[7] = *(void *)(a2 + v23 + 56);
          v24[8] = *(void *)(a2 + v23 + 64);
          v24[9] = *(void *)(a2 + v23 + 72);
          v24[10] = *(void *)(a2 + v23 + 80);
          v24[11] = *(void *)(a2 + v23 + 88);
          v24[12] = *(void *)(a2 + v23 + 96);
          v24[13] = *(void *)(a2 + v23 + 104);
          v24[14] = *(void *)(a2 + v23 + 112);
          v24[15] = *(void *)(a2 + v23 + 120);
          v24[16] = *(void *)(a2 + v23 + 128);
          v24[17] = *(void *)(a2 + v23 + 136);
          v24[18] = *(void *)(a2 + v23 + 144);
          v24[19] = *(void *)(a2 + v23 + 152);
          uint64_t v26 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
          uint64_t v49 = v25 + v26;
          uint64_t v50 = (char *)v24 + v26;
          uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v27(v50, v49, v53);
          *(void *)((char *)a1 + v22[7]) = *(void *)(a2 + v22[7]);
          *(void *)((char *)a1 + v22[8]) = *(void *)(a2 + v22[8]);
          uint64_t v28 = v22[9];
          uint64_t v29 = (void *)((char *)a1 + v28);
          uint64_t v30 = (void *)(a2 + v28);
          *uint64_t v29 = *v30;
          v29[1] = v30[1];
          *((unsigned char *)a1 + v22[10]) = *(unsigned char *)(a2 + v22[10]);
          *((unsigned char *)a1 + v22[11]) = *(unsigned char *)(a2 + v22[11]);
          uint64_t v31 = v22[12];
          uint64_t v32 = (void *)((char *)a1 + v31);
          uint64_t v33 = (void *)(a2 + v31);
          void *v32 = *v33;
          v32[1] = v33[1];
          *(void *)((char *)a1 + v22[13]) = *(void *)(a2 + v22[13]);
          uint64_t v34 = v22[14];
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (uint64_t *)(a2 + v34);
          unint64_t v37 = *(void *)(a2 + v34 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v37 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          }
          else
          {
            uint64_t v38 = *v36;
            sub_25C034EC8(*v36, v37);
            *(void *)uint64_t v35 = v38;
            *((void *)v35 + 1) = v37;
          }
          uint64_t v39 = v22[15];
          uint64_t v40 = (void *)((char *)a1 + v39);
          uint64_t v41 = (void *)(a2 + v39);
          *uint64_t v40 = *v41;
          v40[1] = v41[1];
          *(void *)((char *)a1 + v22[16]) = *(void *)(a2 + v22[16]);
          uint64_t v42 = v22[17];
          uint64_t v43 = (void *)((char *)a1 + v42);
          uint64_t v44 = (void *)(a2 + v42);
          *uint64_t v43 = *v44;
          v43[1] = v44[1];
          uint64_t v45 = v22[18];
          uint64_t v46 = (void *)((char *)a1 + v45);
          uint64_t v47 = (void *)(a2 + v45);
          void *v46 = *v47;
          v46[1] = v47[1];
          *(void *)((char *)a1 + v22[19]) = *(void *)(a2 + v22[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_21;
        case 2u:
          id v16 = *(id *)a2;
          *a1 = *(void *)a2;
          id v17 = v16;
          goto LABEL_21;
        case 3u:
          *a1 = *(void *)a2;
          a1[1] = *(void *)(a2 + 8);
          swift_bridgeObjectRetain();
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_22;
    }
    memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for ReportScreen.Control(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58C650);
}

_OWORD *sub_25C03803C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v6 = type metadata accessor for ReportScreen(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_25C0EA328();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v19 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v20 = v19[6];
      id v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      long long v23 = *(_OWORD *)((char *)a2 + v20 + 16);
      *(_OWORD *)id v21 = *(_OWORD *)((char *)a2 + v20);
      *((_OWORD *)v21 + 1) = v23;
      long long v24 = *(_OWORD *)((char *)a2 + v20 + 48);
      *((_OWORD *)v21 + 2) = *(_OWORD *)((char *)a2 + v20 + 32);
      *((_OWORD *)v21 + 3) = v24;
      long long v25 = *(_OWORD *)((char *)a2 + v20 + 112);
      *((_OWORD *)v21 + 6) = *(_OWORD *)((char *)a2 + v20 + 96);
      *((_OWORD *)v21 + 7) = v25;
      long long v26 = *(_OWORD *)((char *)a2 + v20 + 144);
      *((_OWORD *)v21 + 8) = *(_OWORD *)((char *)a2 + v20 + 128);
      *((_OWORD *)v21 + 9) = v26;
      long long v27 = *(_OWORD *)((char *)a2 + v20 + 80);
      *((_OWORD *)v21 + 4) = *(_OWORD *)((char *)a2 + v20 + 64);
      *((_OWORD *)v21 + 5) = v27;
      uint64_t v28 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v21[*(int *)(v28 + 40)], &v22[*(int *)(v28 + 40)], v11);
      *(void *)((char *)a1 + v19[7]) = *(void *)((char *)a2 + v19[7]);
      *(void *)((char *)a1 + v19[8]) = *(void *)((char *)a2 + v19[8]);
      *(_OWORD *)((char *)a1 + v19[9]) = *(_OWORD *)((char *)a2 + v19[9]);
      *((unsigned char *)a1 + v19[10]) = *((unsigned char *)a2 + v19[10]);
      *((unsigned char *)a1 + v19[11]) = *((unsigned char *)a2 + v19[11]);
      *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
      *(void *)((char *)a1 + v19[13]) = *(void *)((char *)a2 + v19[13]);
      *(_OWORD *)((char *)a1 + v19[14]) = *(_OWORD *)((char *)a2 + v19[14]);
      *(_OWORD *)((char *)a1 + v19[15]) = *(_OWORD *)((char *)a2 + v19[15]);
      *(void *)((char *)a1 + v19[16]) = *(void *)((char *)a2 + v19[16]);
      *(_OWORD *)((char *)a1 + v19[17]) = *(_OWORD *)((char *)a2 + v19[17]);
      *(_OWORD *)((char *)a1 + v19[18]) = *(_OWORD *)((char *)a2 + v19[18]);
      *(void *)((char *)a1 + v19[19]) = *(void *)((char *)a2 + v19[19]);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v8 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = type metadata accessor for Report.Authority(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        long long v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        a1[2] = a2[2];
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        uint64_t v15 = *(int *)(v8 + 28);
        uint64_t v30 = (char *)a1 + v15;
        id v16 = (char *)a2 + v15;
        uint64_t v17 = sub_25C0EA238();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v18(v30, v16, v17);
        v18((char *)a1 + *(int *)(v8 + 32), (char *)a2 + *(int *)(v8 + 32), v17);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_25C03847C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25C0322A4((uint64_t)a1, type metadata accessor for ReportScreen.Control);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v6 = type metadata accessor for ReportScreen(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_25C0EA328();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v19 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v20 = v19[6];
      id v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      long long v23 = *(_OWORD *)((char *)a2 + v20 + 16);
      *(_OWORD *)id v21 = *(_OWORD *)((char *)a2 + v20);
      *((_OWORD *)v21 + 1) = v23;
      long long v24 = *(_OWORD *)((char *)a2 + v20 + 48);
      *((_OWORD *)v21 + 2) = *(_OWORD *)((char *)a2 + v20 + 32);
      *((_OWORD *)v21 + 3) = v24;
      long long v25 = *(_OWORD *)((char *)a2 + v20 + 112);
      *((_OWORD *)v21 + 6) = *(_OWORD *)((char *)a2 + v20 + 96);
      *((_OWORD *)v21 + 7) = v25;
      long long v26 = *(_OWORD *)((char *)a2 + v20 + 144);
      *((_OWORD *)v21 + 8) = *(_OWORD *)((char *)a2 + v20 + 128);
      *((_OWORD *)v21 + 9) = v26;
      long long v27 = *(_OWORD *)((char *)a2 + v20 + 80);
      *((_OWORD *)v21 + 4) = *(_OWORD *)((char *)a2 + v20 + 64);
      *((_OWORD *)v21 + 5) = v27;
      uint64_t v28 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v21[*(int *)(v28 + 40)], &v22[*(int *)(v28 + 40)], v11);
      *(void *)((char *)a1 + v19[7]) = *(void *)((char *)a2 + v19[7]);
      *(void *)((char *)a1 + v19[8]) = *(void *)((char *)a2 + v19[8]);
      *(_OWORD *)((char *)a1 + v19[9]) = *(_OWORD *)((char *)a2 + v19[9]);
      *((unsigned char *)a1 + v19[10]) = *((unsigned char *)a2 + v19[10]);
      *((unsigned char *)a1 + v19[11]) = *((unsigned char *)a2 + v19[11]);
      *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
      *(void *)((char *)a1 + v19[13]) = *(void *)((char *)a2 + v19[13]);
      *(_OWORD *)((char *)a1 + v19[14]) = *(_OWORD *)((char *)a2 + v19[14]);
      *(_OWORD *)((char *)a1 + v19[15]) = *(_OWORD *)((char *)a2 + v19[15]);
      *(void *)((char *)a1 + v19[16]) = *(void *)((char *)a2 + v19[16]);
      *(_OWORD *)((char *)a1 + v19[17]) = *(_OWORD *)((char *)a2 + v19[17]);
      *(_OWORD *)((char *)a1 + v19[18]) = *(_OWORD *)((char *)a2 + v19[18]);
      *(void *)((char *)a1 + v19[19]) = *(void *)((char *)a2 + v19[19]);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v8 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = type metadata accessor for Report.Authority(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        long long v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        a1[2] = a2[2];
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        uint64_t v15 = *(int *)(v8 + 28);
        uint64_t v30 = (char *)a1 + v15;
        id v16 = (char *)a2 + v15;
        uint64_t v17 = sub_25C0EA238();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v18(v30, v16, v17);
        v18((char *)a1 + *(int *)(v8 + 32), (char *)a2 + *(int *)(v8 + 32), v17);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  return a1;
}

uint64_t sub_25C0388E0()
{
  uint64_t result = type metadata accessor for ReportScreen(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void destroy for ReportScreen.Bullet(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for ReportScreen.Bullet(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for ReportScreen.Bullet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReportScreen.Bullet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for ReportScreen.Bullet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportScreen.Bullet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportScreen.Bullet()
{
  return &type metadata for ReportScreen.Bullet;
}

uint64_t sub_25C038BEC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *(void *)a1 = *a2;
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v8;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        *(void *)(a1 + 40) = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = sub_25C0EA238();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        break;
      default:
        uint64_t v13 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v13;
        uint64_t v14 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v14;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        *(void *)(a1 + 40) = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25C038EF4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
      uint64_t v4 = sub_25C0EA238();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25C03900C(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_25C0EA238();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25C039168(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_25C0322A4(a1, type metadata accessor for ReportScreen.Button);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_25C0EA238();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_25C039308(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25C0EA238();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_25C0393E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25C0322A4((uint64_t)a1, type metadata accessor for ReportScreen.Button);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_25C0EA238();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25C0394EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_25C039514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25C03953C()
{
  uint64_t v3 = "0";
  uint64_t v4 = "0";
  uint64_t result = sub_25C0EA238();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    long long v6 = "0";
    uint64_t v7 = "0";
    uint64_t v8 = "0";
    uint64_t v9 = "0";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportScreen.ImageAssets()
{
  return &type metadata for ReportScreen.ImageAssets;
}

uint64_t sub_25C039604(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5884C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25C039664(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for InterventionView()
{
  uint64_t result = qword_26A58C970;
  if (!qword_26A58C970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25C039718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_25C0EA578();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a7, a1, v14);
  id v16 = (int *)type metadata accessor for InterventionView();
  *(void *)(a7 + v16[5]) = a2;
  *(void *)(a7 + v16[6]) = a3;
  uint64_t v17 = (objc_class *)type metadata accessor for InterventionDelegate();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  uint64_t v19 = &v18[OBJC_IVAR____TtC26SensitiveContentAnalysisUIP33_10CCC063487B3A429F3AB1B43EE006E720InterventionDelegate_actionBlock];
  *(void *)uint64_t v19 = a5;
  *((void *)v19 + 1) = a6;
  v22.receiver = v18;
  v22.super_class = v17;
  id v20 = objc_msgSendSuper2(&v22, sel_init);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  *(void *)(a7 + v16[8]) = v20;
  *(void *)(a7 + v16[7]) = a4;
  return result;
}

uint64_t type metadata accessor for InterventionDelegate()
{
  return self;
}

void sub_25C039880()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25C0EA578();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0399DC();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  long long v6 = (void *)sub_25C0EBC98();
  uint64_t v7 = (int *)type metadata accessor for InterventionView();
  id v8 = objc_msgSend(objc_allocWithZone((Class)SCUIInterventionViewController), sel_initWithAnalysis_workflow_contextDictionary_options_type_, v6, *(void *)(v1 + v7[6]), 0, *(void *)(v1 + v7[7]), *(void *)(v1 + v7[5]));

  if (v8) {
    objc_msgSend(v8, sel_setInterventionDelegate_, *(void *)(v1 + v7[8]));
  }
  else {
    __break(1u);
  }
}

unint64_t sub_25C0399DC()
{
  unint64_t result = qword_26A5884D8;
  if (!qword_26A5884D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A5884D8);
  }
  return result;
}

uint64_t sub_25C039A2C()
{
  return sub_25C0EAE28();
}

uint64_t sub_25C039A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C03A7E4((unint64_t *)&unk_26A588640);

  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_25C039AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C03A7E4((unint64_t *)&unk_26A588640);

  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_25C039B68()
{
}

BOOL sub_25C039BAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_25C039BD4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    uint64_t v6 = a1;
    swift_unknownObjectRetain();
    if (v5) {
      objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
  else
  {
    uint64_t v7 = a1;
  }
  (*(void (**)(uint64_t))&a1[OBJC_IVAR____TtC26SensitiveContentAnalysisUIP33_10CCC063487B3A429F3AB1B43EE006E720InterventionDelegate_actionBlock])(a4);
  swift_unknownObjectRelease();
}

id sub_25C039CCC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InterventionDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25C039D14()
{
  return sub_25C03A7E4(&qword_26A5884E0);
}

unint64_t sub_25C039D4C()
{
  unint64_t result = qword_26A5884E8;
  if (!qword_26A5884E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5884E8);
  }
  return result;
}

unint64_t sub_25C039DA4()
{
  unint64_t result = qword_26A5884F0;
  if (!qword_26A5884F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5884F0);
  }
  return result;
}

id sub_25C039DF8()
{
  id result = objc_msgSend(objc_allocWithZone((Class)SCUIMoreHelpWebViewController), sel_initWithType_, *v0);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25C039E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C03A790();

  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_25C039EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C03A790();

  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_25C039F04()
{
}

uint64_t *sub_25C039F2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25C0EA578();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    id v11 = v10;
  }
  return a1;
}

void sub_25C03A018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t sub_25C03A08C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v9;
  id v10 = v9;
  return a1;
}

uint64_t sub_25C03A128(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_25C03A1D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_25C03A26C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  return a1;
}

uint64_t sub_25C03A30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C03A320);
}

uint64_t sub_25C03A320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA578();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25C03A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C03A3F4);
}

uint64_t sub_25C03A3F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25C0EA578();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25C03A4B0()
{
  uint64_t result = sub_25C0EA578();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InterventionAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InterventionAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C03A6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25C03A6E0(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InterventionAction()
{
  return &type metadata for InterventionAction;
}

ValueMetadata *type metadata accessor for WaysToGetHelpWebView()
{
  return &type metadata for WaysToGetHelpWebView;
}

void type metadata accessor for SCUIInterventionOptions(uint64_t a1)
{
}

void type metadata accessor for SCUIInterventionWorkflow(uint64_t a1)
{
}

void type metadata accessor for SCUIInterventionType(uint64_t a1)
{
}

void sub_25C03A748(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_25C03A790()
{
  unint64_t result = qword_26A588638;
  if (!qword_26A588638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588638);
  }
  return result;
}

uint64_t sub_25C03A7E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for InterventionView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C03A828(char *a1, char *a2)
{
  return sub_25C03A834(*a1, *a2);
}

uint64_t sub_25C03A834(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000015;
  }
  else {
    unint64_t v3 = 0x736150676E6F7277;
  }
  if (v2) {
    unint64_t v4 = 0xED000065646F6373;
  }
  else {
    unint64_t v4 = 0x800000025C0F5A90;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000015;
  }
  else {
    unint64_t v5 = 0x736150676E6F7277;
  }
  if (a2) {
    unint64_t v6 = 0x800000025C0F5A90;
  }
  else {
    unint64_t v6 = 0xED000065646F6373;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25C0EC268();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25C03A8EC()
{
  return sub_25C0EC368();
}

uint64_t sub_25C03A980()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C03AA00()
{
  return sub_25C0EC368();
}

uint64_t sub_25C03AA90@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25C0EC0E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_25C03AAF0(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x736150676E6F7277;
  if (*v1) {
    unint64_t v2 = 0xD000000000000015;
  }
  unint64_t v3 = 0x800000025C0F5A90;
  if (!*v1) {
    unint64_t v3 = 0xED000065646F6373;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25C03AB50(uint64_t a1)
{
  return sub_25C03AC50(a1, &qword_26A58C988, 0);
}

void *static SCUIScreenTimePasscodeController.wrongPasscodeError.getter()
{
  return sub_25C03ACBC(&qword_26A58C980, (void **)&qword_26A58C988);
}

uint64_t sub_25C03ABA8()
{
  qword_26A58C998 = swift_allocError();
  return sub_25C0EB728();
}

void *static SCUIScreenTimePasscodeController.cancellationError.getter()
{
  return sub_25C03ACBC(&qword_26A58C990, (void **)&qword_26A58C998);
}

uint64_t sub_25C03AC40(uint64_t a1)
{
  return sub_25C03AC50(a1, qword_26A58C9A8, 1);
}

uint64_t sub_25C03AC50(uint64_t a1, uint64_t *a2, char a3)
{
  sub_25C03CBD4();
  uint64_t result = swift_allocError();
  *a2 = result;
  *unint64_t v6 = a3;
  return result;
}

void *static SCUIScreenTimePasscodeController.screenTimeUnavailable.getter()
{
  return sub_25C03ACBC(&qword_26A58C9A0, (void **)qword_26A58C9A8);
}

void *sub_25C03ACBC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  unint64_t v3 = *a2;
  id v4 = v3;
  return v3;
}

id sub_25C03AD28(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  unint64_t v5 = *a4;
  id v6 = v5;
  char v7 = (void *)sub_25C0EA148();

  return v7;
}

uint64_t static SCUIScreenTimePasscodeController.askUserForScreenTimePasscode(from:interventionType:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898D0);
  v3[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25C03AE5C, 0, 0);
}

uint64_t sub_25C03AE5C(uint64_t a1)
{
  uint64_t v2 = v1[4];
  if ((SCAUIFeatures.isEnabled.getter(a1) & 1) != 0 && !v2)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v1[2] = 0;
    id v4 = objc_msgSend(ObjCClassFromMetadata, sel__isScreenTimePasscodeSet_, v1 + 2);
    uint64_t v5 = (void *)v1[2];
    if (!v4)
    {
      id v23 = v5;
      sub_25C0EA158();

      swift_willThrow();
      swift_task_dealloc();
      objc_super v22 = (uint64_t (*)(void))v1[1];
      goto LABEL_10;
    }
    id v6 = v4;
    id v7 = v5;
    unsigned __int8 v8 = objc_msgSend(v6, sel_BOOLValue);

    if (v8)
    {
      uint64_t v10 = v1[5];
      uint64_t v9 = v1[6];
      id v11 = (void *)v1[3];
      uint64_t v12 = sub_25C0EBB08();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
      sub_25C0EBAD8();
      id v13 = v11;
      uint64_t v14 = sub_25C0EBAC8();
      uint64_t v15 = (void *)swift_allocObject();
      uint64_t v16 = MEMORY[0x263F8F500];
      v15[2] = v14;
      v15[3] = v16;
      v15[4] = v10;
      v15[5] = v13;
      uint64_t v17 = sub_25C03B8C4(v9, (uint64_t)&unk_26A5886C0, (uint64_t)v15);
      v1[7] = v17;
      uint64_t v18 = (void *)swift_task_alloc();
      unsigned char v1[8] = v18;
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
      *uint64_t v18 = v1;
      v18[1] = sub_25C03B11C;
      uint64_t v20 = MEMORY[0x263F8EE60] + 8;
      uint64_t v21 = MEMORY[0x263F8E4E0];
      return MEMORY[0x270FA1FA8](v19, v17, v20, v19, v21);
    }
  }
  swift_task_dealloc();
  objc_super v22 = (uint64_t (*)(void))v1[1];
LABEL_10:
  return v22();
}

uint64_t sub_25C03B11C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_25C03B304;
  }
  else
  {
    uint64_t v2 = sub_25C03B26C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25C03B26C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C03B304()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C03B394(uint64_t a1)
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  LOBYTE(v8[0]) = 2;
  unsigned __int8 v2 = 0;
  if ((SCAUIFeatures.isEnabled.getter(a1) & 1) != 0 && !a1)
  {
    v8[0] = 0;
    id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__isScreenTimePasscodeSet_, v8);
    unsigned __int8 v2 = v8[0];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = v8[0];
      unsigned __int8 v2 = objc_msgSend(v4, sel_BOOLValue);
    }
    else
    {
      id v6 = v8[0];
      sub_25C0EA158();

      swift_willThrow();
    }
  }
  return v2 & 1;
}

uint64_t sub_25C03B48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  sub_25C0EBAD8();
  v5[17] = sub_25C0EBAC8();
  uint64_t v7 = sub_25C0EBA78();
  v5[18] = v7;
  v5[19] = v6;
  return MEMORY[0x270FA2498](sub_25C03B524, v7, v6);
}

uint64_t sub_25C03B524()
{
  uint64_t v1 = v0[16];
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v0[2] = v0;
  v0[3] = sub_25C03B624;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_25C03B82C;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(ObjCClassFromMetadata, sel__checkScreenTimePasscodeFromViewController_completionHandler_, v1, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25C03B624()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 160) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v5 = sub_25C03B7B8;
  }
  else {
    uint64_t v5 = sub_25C03B754;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25C03B754()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C03B7B8()
{
  swift_release();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C03B82C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
    uint64_t v4 = swift_allocError();
    void *v5 = a2;
    id v6 = a2;
    return MEMORY[0x270FA2410](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x270FA2408](v7);
  }
}

uint64_t sub_25C03B8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25C0EBB08();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_25C0EBAF8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_25C03C8B0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25C0EBA78();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_25C03BBC0(void *a1, uint64_t a2, void *aBlock)
{
  v3[2] = a1;
  v3[3] = _Block_copy(aBlock);
  swift_getObjCClassMetadata();
  id v6 = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_25C03BC90;
  return static SCUIScreenTimePasscodeController.askUserForScreenTimePasscode(from:interventionType:)((uint64_t)v6, a2);
}

uint64_t sub_25C03BC90()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  uint64_t v7 = *(void *)(v3 + 24);
  if (v2)
  {
    unsigned __int8 v8 = (void *)sub_25C0EA148();

    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

id static SCUIScreenTimePasscodeController.willScreenTimePasscodeBeRequired(for:)(uint64_t a1)
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  LOBYTE(v9[0]) = 2;
  id v2 = 0;
  if ((SCAUIFeatures.isEnabled.getter(a1) & 1) != 0 && !a1)
  {
    v9[0] = 0;
    id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__isScreenTimePasscodeSet_, v9);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = v9[0];
      id v2 = objc_msgSend(v4, sel_BOOLValue);
    }
    else
    {
      id v6 = v9[0];
      uint64_t v7 = (void *)sub_25C0EA158();

      swift_willThrow();
      return 0;
    }
  }
  return v2;
}

void *sub_25C03BF68@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_25C03BF78()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25C03BFB8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25C03C050;
  return sub_25C03B48C((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_25C03C050()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_25C03C148()
{
  unint64_t result = qword_26A5886C8;
  if (!qword_26A5886C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5886C8);
  }
  return result;
}

unsigned char *_s13PasscodeErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C03C268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13PasscodeErrorOMa()
{
  return &_s13PasscodeErrorON;
}

uint64_t sub_25C03C2A0()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25C03C2E0()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  unsigned int v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_25C03CC80;
  unsigned int v6 = (uint64_t (*)(void *, uint64_t, void *))((char *)&dword_26A5886D0 + dword_26A5886D0);
  return v6(v2, v3, v4);
}

uint64_t sub_25C03C3A0(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *unsigned int v4 = v3;
  v4[1] = sub_25C03CC80;
  return v6();
}

uint64_t sub_25C03C470()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unsigned int v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_25C03CC80;
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_26A5886E0 + dword_26A5886E0);
  return v6(v2, v3, v4);
}

uint64_t sub_25C03C530(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_25C03CC80;
  return v7();
}

uint64_t objectdestroy_13Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25C03C640(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unsigned int v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25C03C050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26A5886F0 + dword_26A5886F0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_25C03C70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EBB08();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25C0EBAF8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25C03C8B0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25C0EBA78();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25C03C8B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25C03C910(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25C03C9EC;
  return v6(a1);
}

uint64_t sub_25C03C9EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25C03CAE4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25C03CB1C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_25C03CC80;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A588700 + dword_26A588700);
  return v6(a1, v4);
}

unint64_t sub_25C03CBD4()
{
  unint64_t result = qword_26A588710;
  if (!qword_26A588710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588710);
  }
  return result;
}

unint64_t sub_25C03CC28()
{
  unint64_t result = qword_26A588718;
  if (!qword_26A588718)
  {
    sub_25C0EBAA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588718);
  }
  return result;
}

uint64_t sub_25C03CC84()
{
  return 1;
}

uint64_t sub_25C03CC8C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD00000000000001ALL;
    }
    else {
      unint64_t v3 = 0x6E61725474616863;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x800000025C0F5C00;
    }
    else {
      unint64_t v4 = 0xEE00747069726373;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD00000000000001ALL;
      }
      else {
        unint64_t v6 = 0x6E61725474616863;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x800000025C0F5C00;
      }
      else {
        unint64_t v7 = 0xEE00747069726373;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x65636976726573;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x65636976726573)
  {
LABEL_21:
    char v8 = sub_25C0EC268();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25C03CDC0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000004449;
  uint64_t v3 = 0x555574726F706572;
  uint64_t v4 = a1;
  unint64_t v5 = 0x555574726F706572;
  unint64_t v6 = 0xEA00000000004449;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x695474726F706572;
      unint64_t v6 = 0xEF706D617473656DLL;
      break;
    case 2:
      unint64_t v5 = 0x746163696C707061;
      unint64_t v6 = 0xEB000000006E6F69;
      break;
    case 3:
      unint64_t v5 = 0x6556616D65686373;
      unint64_t v6 = 0xED00006E6F697372;
      break;
    case 4:
      unint64_t v6 = 0x800000025C0F5BA0;
      unint64_t v5 = 0xD000000000000016;
      break;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x726574726F706572;
      break;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x74726F706572;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEF706D617473656DLL;
      if (v5 == 0x695474726F706572) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xEB000000006E6F69;
      if (v5 != 0x746163696C707061) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xED00006E6F697372;
      if (v5 != 0x6556616D65686373) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0x800000025C0F5BA0;
      if (v5 != 0xD000000000000016) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x726574726F706572;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x74726F706572) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_25C0EC268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25C03D054(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x736567617373656DLL;
  }
  else {
    unint64_t v3 = 0xD000000000000012;
  }
  if (v2) {
    unint64_t v4 = 0x800000025C0F5BD0;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x736567617373656DLL;
  }
  else {
    unint64_t v5 = 0xD000000000000012;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0x800000025C0F5BD0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25C0EC268();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25C03D100(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D754E656E6F6870;
  }
  else {
    uint64_t v3 = 0x6464416C69616D65;
  }
  if (v2) {
    unint64_t v4 = 0xEC00000073736572;
  }
  else {
    unint64_t v4 = 0xEB00000000726562;
  }
  if (a2) {
    uint64_t v5 = 0x6D754E656E6F6870;
  }
  else {
    uint64_t v5 = 0x6464416C69616D65;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000726562;
  }
  else {
    unint64_t v6 = 0xEC00000073736572;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25C0EC268();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25C03D1B8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000495455746ELL;
  uint64_t v3 = 0x656D686361747461;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656D686361747461;
  unint64_t v6 = 0xED0000495455746ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7254797465666173;
      unint64_t v6 = 0xED00007265676769;
      break;
    case 2:
      uint64_t v7 = 0x68736148746ELL;
      goto LABEL_6;
    case 3:
      uint64_t v7 = 0x44495555746ELL;
      goto LABEL_6;
    case 4:
      uint64_t v5 = 0x664F7265626D756ELL;
      uint64_t v7 = 0x736B6E756843;
LABEL_6:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xED00007265676769;
      if (v5 == 0x7254797465666173) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      uint64_t v8 = 0x68736148746ELL;
      goto LABEL_15;
    case 3:
      unint64_t v2 = 0xEE0044495555746ELL;
      goto LABEL_12;
    case 4:
      uint64_t v3 = 0x664F7265626D756ELL;
      uint64_t v8 = 0x736B6E756843;
LABEL_15:
      unint64_t v2 = v8 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      if (v5 == v3) {
        goto LABEL_16;
      }
      goto LABEL_18;
    default:
LABEL_12:
      if (v5 != 0x656D686361747461) {
        goto LABEL_18;
      }
LABEL_16:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_18:
      }
        char v9 = sub_25C0EC268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_25C03D3AC()
{
  return sub_25C0EC368();
}

uint64_t sub_25C03D3FC()
{
  return sub_25C0EB8C8();
}

uint64_t sub_25C03D410()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C03D550()
{
  return sub_25C0EC368();
}

uint64_t sub_25C03D59C()
{
  return sub_25C0EC368();
}

uint64_t sub_25C03D6EC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25C0EC0E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_25C03D740(void *a1@<X8>)
{
  *a1 = 0x79746964756ELL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_25C03D758()
{
  return sub_25C0EB978();
}

uint64_t sub_25C03D7B8()
{
  return sub_25C0EB948();
}

double sub_25C03D808@<D0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v7);
  double result = *(double *)&v7;
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  char v5 = v10;
  uint64_t v6 = v11;
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  return result;
}

void sub_25C03D878(void *a1@<X8>)
{
  *a1 = &unk_27097D1D0;
}

uint64_t type metadata accessor for Report.Evidence(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58E1B0);
}

uint64_t _s14descr27097BA99O6VictimVMa(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58E1C0);
}

uint64_t Report.Evidence.chatTranscript.getter()
{
  type metadata accessor for Report.Evidence(0);

  return swift_bridgeObjectRetain();
}

uint64_t Report.Evidence.chatTranscript.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Report.Evidence(0) + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Report.Evidence.chatTranscript.modify())()
{
  return nullsub_1;
}

uint64_t Report.Evidence.attachmentsEncapsulatedKey.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Report.Evidence(0) + 56);
  uint64_t v2 = *(void *)v1;
  sub_25C03D9C8(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_25C03D9C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25C034EC8(a1, a2);
  }
  return a1;
}

uint64_t Report.Evidence.attachmentsEncapsulatedKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for Report.Evidence(0) + 56);
  uint64_t result = sub_25C03DA24(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t sub_25C03DA24(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25C035294(a1, a2);
  }
  return a1;
}

uint64_t (*Report.Evidence.attachmentsEncapsulatedKey.modify())()
{
  return nullsub_1;
}

void Report.Evidence.init(_:interventionType:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v75 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v9 = (void *)(a3 + v8[9]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  *(unsigned char *)(a3 + v8[11]) = 8;
  char v10 = (void *)(a3 + v8[12]);
  *char v10 = 0;
  v10[1] = 0;
  *(_OWORD *)(a3 + v8[14]) = xmmword_25C0EF5D0;
  id v11 = objc_msgSend(a1, sel_victim);
  uint64_t v78 = v8;
  sub_25C03E1C0(v11, a3 + v8[6]);
  uint64_t v12 = &selRef_navigationController;
  id v13 = objc_msgSend(a1, sel_suspects);
  uint64_t v14 = sub_25C031870(0, &qword_26A588720);
  unint64_t v15 = sub_25C0EB9D8();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25C0EC088();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v76 = a2;
  uint64_t v77 = a1;
  if (v16)
  {
    unint64_t v79 = MEMORY[0x263F8EE78];
    sub_25C04A1F4(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v74 = v14;
    uint64_t v18 = 0;
    unint64_t v19 = v79;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x26117D920](v18, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v18 + 32);
      }
      sub_25C04C514(v20, (uint64_t)v80);
      unint64_t v79 = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_25C04A1F4((char *)(v21 > 1), v22 + 1, 1);
        unint64_t v19 = v79;
      }
      ++v18;
      *(void *)(v19 + 16) = v22 + 1;
      unint64_t v23 = v19 + 168 * v22;
      long long v24 = v80[0];
      long long v25 = v80[2];
      *(_OWORD *)(v23 + 48) = v80[1];
      *(_OWORD *)(v23 + 64) = v25;
      *(_OWORD *)(v23 + 32) = v24;
      long long v26 = v80[3];
      long long v27 = v80[4];
      long long v28 = v80[6];
      *(_OWORD *)(v23 + 112) = v80[5];
      *(_OWORD *)(v23 + 128) = v28;
      *(_OWORD *)(v23 + 80) = v26;
      *(_OWORD *)(v23 + 96) = v27;
      long long v29 = v80[7];
      long long v30 = v80[8];
      long long v31 = v80[9];
      *(void *)(v23 + 192) = v81;
      *(_OWORD *)(v23 + 160) = v30;
      *(_OWORD *)(v23 + 176) = v31;
      *(_OWORD *)(v23 + 144) = v29;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();
    a1 = v77;
    uint64_t v12 = &selRef_navigationController;
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v19 = MEMORY[0x263F8EE78];
  }
  uint64_t v32 = v78;
  *(void *)(a3 + v78[7]) = v19;
  id v33 = objc_msgSend(a1, v12[186], v74);
  unint64_t v34 = sub_25C0EB9D8();

  unint64_t v79 = v17;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_25C0EC088();
    if (v35)
    {
LABEL_16:
      if (v35 >= 1)
      {
        uint64_t v74 = a3;
        uint64_t v36 = 0;
        do
        {
          if ((v34 & 0xC000000000000001) != 0) {
            id v37 = (id)MEMORY[0x26117D920](v36, v34);
          }
          else {
            id v37 = *(id *)(v34 + 8 * v36 + 32);
          }
          uint64_t v38 = v37;
          ++v36;
          id v39 = objc_msgSend(v37, sel_sensitiveMediaFiles, v74);
          sub_25C031870(0, &qword_26A588728);
          unint64_t v40 = sub_25C0EB9D8();

          sub_25C049C34(v40);
        }
        while (v35 != v36);
        swift_bridgeObjectRelease_n();
        unint64_t v41 = v79;
        a3 = v74;
        a1 = v77;
        uint64_t v32 = v78;
        goto LABEL_26;
      }
LABEL_37:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
  unint64_t v41 = MEMORY[0x263F8EE78];
LABEL_26:
  id v42 = objc_msgSend(a1, sel_victim);
  id v43 = objc_msgSend(v42, sel_mediaFiles);

  sub_25C031870(0, &qword_26A588728);
  unint64_t v44 = sub_25C0EB9D8();

  unint64_t v79 = v41;
  sub_25C049C34(v44);
  unint64_t v45 = v79;
  id v46 = objc_msgSend(a1, sel_unsortedChatTranscript);
  if (v46)
  {
    uint64_t v47 = v46;
    sub_25C031870(0, (unint64_t *)&qword_26A588730);
    unint64_t v48 = sub_25C0EB9D8();
  }
  else
  {
    unint64_t v48 = MEMORY[0x263F8EE78];
  }
  uint64_t v49 = (uint64_t)v75;
  *(void *)(a3 + v32[13]) = sub_25C0B5524(v48, v45);
  id v50 = objc_msgSend(a1, sel_incidentDate);
  if (v50)
  {
    uint64_t v51 = v50;
    sub_25C0EA308();

    uint64_t v52 = sub_25C0EA328();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v49, 0, 1, v52);
  }
  else
  {
    uint64_t v53 = sub_25C0EA328();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v49, 1, 1, v53);
  }
  uint64_t v54 = v76;
  sub_25C0516EC(v49, a3, &qword_26A589720);
  *(void *)(a3 + v32[16]) = objc_msgSend(a1, sel_reportingApplication);
  id v55 = objc_msgSend(a1, sel_chatRoomName);
  if (v55)
  {
    uint64_t v56 = v55;
    uint64_t v57 = sub_25C0EB858();
    uint64_t v59 = v58;
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v59 = 0;
  }
  uint64_t v60 = (uint64_t *)(a3 + v32[15]);
  *uint64_t v60 = v57;
  v60[1] = v59;
  *(void *)(a3 + v32[19]) = objc_msgSend(a1, sel_flags);
  uint64_t v61 = self;
  id v62 = objc_msgSend(v61, sel_currentDevice);
  id v63 = objc_msgSend(v62, sel_systemName);

  uint64_t v64 = sub_25C0EB858();
  uint64_t v66 = v65;

  uint64_t v67 = (uint64_t *)(a3 + v32[17]);
  *uint64_t v67 = v64;
  v67[1] = v66;
  id v68 = objc_msgSend(v61, sel_currentDevice);
  id v69 = objc_msgSend(v68, sel_systemVersion);

  uint64_t v70 = sub_25C0EB858();
  uint64_t v72 = v71;

  uint64_t v73 = (uint64_t *)(a3 + v32[18]);
  *uint64_t v73 = v70;
  v73[1] = v72;
  *(void *)(a3 + v32[8]) = v54;
  *(unsigned char *)(a3 + v32[10]) = 0;
}

void sub_25C03E1C0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EA328();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v51 - v12;
  id v14 = objc_msgSend(a1, sel_displayName);
  uint64_t v15 = sub_25C0EB858();
  unint64_t v17 = v16;

  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v51 = v11;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    unint64_t v17 = 0;
  }
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  id v19 = objc_msgSend(a1, sel_accountID, v51);
  if (!v19)
  {
    sub_25C0EC078();
    __break(1u);
    return;
  }
  id v20 = v19;
  uint64_t v52 = v13;
  uint64_t v21 = sub_25C0EB858();
  uint64_t v23 = v22;

  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v23;
  swift_bridgeObjectRetain();
  id v24 = objc_msgSend(a1, sel_fullName);
  if (v24)
  {
    long long v25 = v24;
    uint64_t v26 = sub_25C0EB858();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v28;
  long long v29 = (void *)sub_25C0EB828();
  int v30 = MEMORY[0x26117DD60]();

  long long v31 = (void *)sub_25C0EB828();
  id v32 = objc_msgSend(v31, sel__stripFZIDPrefix);

  if (v30)
  {
    if (v32)
    {
      uint64_t v21 = sub_25C0EB858();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();

      uint64_t v23 = v34;
    }
    uint64_t v35 = v52;
    *(void *)(a2 + 64) = v21;
    *(void *)(a2 + 72) = v23;
    uint64_t v36 = (void *)(a2 + 48);
  }
  else
  {
    if (v32)
    {
      uint64_t v21 = sub_25C0EB858();
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();

      uint64_t v23 = v38;
    }
    uint64_t v35 = v52;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v23;
    uint64_t v36 = (void *)(a2 + 64);
  }
  *uint64_t v36 = 0;
  v36[1] = 0;
  id v39 = objc_msgSend(a1, sel_dateOfBirth);
  if (!v39)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_20;
  }
  unint64_t v40 = v39;
  unint64_t v41 = v51;
  sub_25C0EA308();

  id v42 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v42(v6, v41, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_20:
    sub_25C0EA318();
    sub_25C02FBF0((uint64_t)v6, &qword_26A589720);
    goto LABEL_21;
  }
  v42(v35, v6, v7);
LABEL_21:
  uint64_t v43 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + *(int *)(v43 + 40), v35, v7);
  id v44 = objc_msgSend(a1, sel_address);
  if (v44)
  {
    id v45 = v44;
    sub_25C04C338(v45, (uint64_t *)v53);

    long long v47 = v53[3];
    long long v46 = v53[4];
    long long v49 = v53[1];
    long long v48 = v53[2];
    long long v50 = v53[0];
  }
  else
  {

    long long v50 = 0uLL;
    long long v49 = 0uLL;
    long long v48 = 0uLL;
    long long v47 = 0uLL;
    long long v46 = 0uLL;
  }
  *(_OWORD *)(a2 + 80) = v50;
  *(_OWORD *)(a2 + 96) = v49;
  *(_OWORD *)(a2 + 112) = v48;
  *(_OWORD *)(a2 + 128) = v47;
  *(_OWORD *)(a2 + 144) = v46;
}

size_t sub_25C03E650(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = type metadata accessor for Report.Message();
  uint64_t v4 = a1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
  size_t result = swift_bridgeObjectRetain();
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v8 = *(void *)(v4 + *(int *)(v3 + 32));
    uint64_t v9 = *(void *)(v8 + 16);
    int64_t v10 = v7[2];
    int64_t v11 = v10 + v9;
    if (__OFADD__(v10, v9)) {
      break;
    }
    swift_bridgeObjectRetain();
    size_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v11 <= v7[3] >> 1)
    {
      if (*(void *)(v8 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v10 <= v11) {
        int64_t v12 = v10 + v9;
      }
      else {
        int64_t v12 = v10;
      }
      size_t result = sub_25C049E00(result, v12, 1, v7);
      uint64_t v7 = (void *)result;
      if (*(void *)(v8 + 16))
      {
LABEL_14:
        uint64_t v13 = (v7[3] >> 1) - v7[2];
        size_t result = type metadata accessor for Report.Media(0);
        if (v13 < v9) {
          goto LABEL_23;
        }
        size_t result = swift_arrayInitWithCopy();
        if (v9)
        {
          uint64_t v14 = v7[2];
          BOOL v15 = __OFADD__(v14, v9);
          uint64_t v16 = v14 + v9;
          if (v15) {
            goto LABEL_24;
          }
          v7[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v9) {
      goto LABEL_22;
    }
LABEL_4:
    size_t result = swift_bridgeObjectRelease();
    v4 += v5;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (size_t)v7;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t Report.Evidence.encode(to:configuration:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588738);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  long long v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588740);
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_25C0EA358();
  uint64_t v8 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  int64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588748);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a2;
  sub_25C04D1C4(a2, (uint64_t)v17, type metadata accessor for Report.Authority);
  uint64_t v18 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    uint64_t v19 = v36;
    uint64_t v28 = v6;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_25C04D22C();
    sub_25C0EC388();
    sub_25C0EA348();
    sub_25C0EA338();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
    LOBYTE(v38) = 0;
    uint64_t v20 = v37;
    sub_25C0EC1D8();
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      LOBYTE(v38) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      sub_25C04D280();
      sub_25C0EC208();
      uint64_t v22 = v12;
      uint64_t v23 = type metadata accessor for Report.Evidence(0);
      *(void *)&long long v38 = *(void *)(v19 + *(int *)(v23 + 64));
      char v39 = 2;
      type metadata accessor for SCUIReportingApplication(0);
      sub_25C04D338(&qword_26A588760, type metadata accessor for SCUIReportingApplication);
      sub_25C0EC208();
      LOBYTE(v38) = 3;
      sub_25C0EC1D8();
      LOBYTE(v38) = 4;
      sub_25C0EC1F8();
      LOBYTE(v38) = 5;
      _s14descr27097BA99O6VictimVMa(0);
      sub_25C04D338(&qword_26A588768, (void (*)(uint64_t))_s14descr27097BA99O6VictimVMa);
      sub_25C0EC198();
      LOBYTE(v38) = 6;
      sub_25C04D380();
      sub_25C0EC188();
      uint64_t v37 = v23;
      long long v38 = *(_OWORD *)(v19 + *(int *)(v23 + 48));
      char v39 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588770);
      sub_25C050B7C(&qword_26A588778, &qword_26A588770);
      sub_25C0EC208();
      LOBYTE(v38) = 1;
      sub_25C04D3D4();
      id v24 = v29;
      sub_25C0EC188();
      LOBYTE(v38) = 0;
      sub_25C0EC1F8();
      uint64_t v25 = v37;
      long long v38 = *(_OWORD *)(v19 + *(int *)(v37 + 56));
      char v39 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588780);
      sub_25C04F0F4(&qword_26A588788, &qword_26A588780, (void (*)(void))sub_25C04D428);
      sub_25C0EC208();
      uint64_t v26 = v24;
      *(void *)&long long v38 = *(void *)(v19 + *(int *)(v25 + 52));
      char v39 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588798);
      sub_25C04D47C();
      uint64_t v27 = v31;
      sub_25C0EC198();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v11);
    }
  }
  else
  {
    Report.Evidence.encode(to:)(a1);
    return sub_25C04F040((uint64_t)v17, type metadata accessor for Report.Authority);
  }
}

uint64_t Report.Evidence.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5887B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C04D520();
  sub_25C0EC388();
  LOBYTE(v11) = 0;
  sub_25C0EA328();
  sub_25C04D338(&qword_26A588758, MEMORY[0x263F07490]);
  sub_25C0EC1C8();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_25C04D574();
    sub_25C0EC208();
    uint64_t v9 = (int *)type metadata accessor for Report.Evidence(0);
    LOBYTE(v11) = 2;
    _s14descr27097BA99O6VictimVMa(0);
    sub_25C04D338(&qword_26A5887C0, (void (*)(uint64_t))_s14descr27097BA99O6VictimVMa);
    sub_25C0EC208();
    *(void *)&long long v11 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5887C8);
    sub_25C04F0F4(&qword_26A5887D0, &qword_26A5887C8, (void (*)(void))sub_25C04D5C8);
    sub_25C0EC208();
    *(void *)&long long v11 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    type metadata accessor for SCUIInterventionType(0);
    sub_25C04D338(&qword_26A5887E0, type metadata accessor for SCUIInterventionType);
    sub_25C0EC208();
    LOBYTE(v11) = 5;
    sub_25C0EC1A8();
    LOBYTE(v11) = 6;
    sub_25C0EC1E8();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[11]);
    char v12 = 7;
    sub_25C04D61C();
    sub_25C0EC1C8();
    LOBYTE(v11) = 8;
    sub_25C0EC1A8();
    *(void *)&long long v11 = *(void *)(v3 + v9[13]);
    char v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588798);
    sub_25C04D670();
    sub_25C0EC208();
    long long v11 = *(_OWORD *)(v3 + v9[14]);
    char v12 = 10;
    sub_25C04D428();
    sub_25C0EC1C8();
    LOBYTE(v11) = 11;
    sub_25C0EC1A8();
    *(void *)&long long v11 = *(void *)(v3 + v9[16]);
    char v12 = 12;
    type metadata accessor for SCUIReportingApplication(0);
    sub_25C04D338(&qword_26A588760, type metadata accessor for SCUIReportingApplication);
    sub_25C0EC208();
    LOBYTE(v11) = 13;
    sub_25C0EC1D8();
    LOBYTE(v11) = 14;
    sub_25C0EC1D8();
    *(void *)&long long v11 = *(void *)(v3 + v9[19]);
    char v12 = 15;
    type metadata accessor for SCUIReportFlags(0);
    sub_25C04D338(&qword_26A588800, type metadata accessor for SCUIReportFlags);
    sub_25C0EC208();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25C03F698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Media(0);
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v77 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v64 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v9 || a1 == a2) {
    return 1;
  }
  uint64_t v70 = *(void *)(a1 + 16);
  uint64_t v10 = 0;
  uint64_t v11 = a1 + 32;
  uint64_t v12 = a2 + 32;
  uint64_t v68 = a2 + 32;
  for (i = a1 + 32; ; uint64_t v11 = i)
  {
    uint64_t v74 = v10;
    uint64_t v13 = 168 * v10;
    uint64_t v14 = (long long *)(v11 + 168 * v10);
    long long v15 = v14[9];
    long long v86 = v14[8];
    long long v87 = v15;
    uint64_t v88 = *((void *)v14 + 20);
    long long v16 = v14[5];
    long long v82 = v14[4];
    long long v83 = v16;
    long long v17 = v14[7];
    long long v84 = v14[6];
    long long v85 = v17;
    long long v18 = v14[1];
    long long v78 = *v14;
    long long v79 = v18;
    long long v19 = v14[3];
    long long v80 = v14[2];
    long long v81 = v19;
    uint64_t v20 = (long long *)(v12 + v13);
    long long v21 = v20[9];
    long long v97 = v20[8];
    long long v98 = v21;
    uint64_t v99 = *((void *)v20 + 20);
    long long v22 = v20[5];
    long long v93 = v20[4];
    long long v94 = v22;
    long long v23 = v20[7];
    long long v95 = v20[6];
    long long v96 = v23;
    long long v24 = v20[1];
    long long v89 = *v20;
    long long v90 = v24;
    long long v25 = v20[3];
    long long v91 = v20[2];
    long long v92 = v25;
    if (*((void *)&v78 + 1))
    {
      if (!*((void *)&v89 + 1) || v78 != v89 && (sub_25C0EC268() & 1) == 0) {
        return 0;
      }
    }
    else if (*((void *)&v89 + 1))
    {
      return 0;
    }
    if (*((void *)&v79 + 1))
    {
      if (!*((void *)&v90 + 1) || v79 != v90 && (sub_25C0EC268() & 1) == 0) {
        return 0;
      }
    }
    else if (*((void *)&v90 + 1))
    {
      return 0;
    }
    if (*((void *)&v80 + 1))
    {
      if (!*((void *)&v91 + 1) || v80 != v91 && (sub_25C0EC268() & 1) == 0) {
        return 0;
      }
    }
    else if (*((void *)&v91 + 1))
    {
      return 0;
    }
    if (*((void *)&v81 + 1))
    {
      if (!*((void *)&v92 + 1) || v81 != v92 && (sub_25C0EC268() & 1) == 0) {
        return 0;
      }
    }
    else if (*((void *)&v92 + 1))
    {
      return 0;
    }
    if (*((void *)&v82 + 1))
    {
      if (!*((void *)&v93 + 1) || v82 != v93 && (sub_25C0EC268() & 1) == 0) {
        return 0;
      }
    }
    else if (*((void *)&v93 + 1))
    {
      return 0;
    }
    unint64_t v27 = *((void *)&v84 + 1);
    unint64_t v26 = v84;
    uint64_t v28 = *((void *)&v85 + 1);
    uint64_t v29 = v85;
    uint64_t v30 = *((void *)&v86 + 1);
    uint64_t v31 = *((void *)&v87 + 1);
    uint64_t v71 = v87;
    long long v32 = v95;
    uint64_t v34 = *((void *)&v96 + 1);
    uint64_t v33 = v96;
    uint64_t v35 = *((void *)&v97 + 1);
    uint64_t v36 = v97;
    uint64_t v72 = v98;
    uint64_t v73 = v86;
    uint64_t v76 = *((void *)&v98 + 1);
    if (*((void *)&v83 + 1))
    {
      if (!*((void *)&v94 + 1)) {
        return 0;
      }
      if (v83 != v94)
      {
        uint64_t v66 = *((void *)&v87 + 1);
        uint64_t v37 = *((void *)&v97 + 1);
        uint64_t v67 = v97;
        uint64_t v64 = *((void *)&v85 + 1);
        unint64_t v65 = v84;
        uint64_t v38 = v85;
        uint64_t v39 = v96;
        char v40 = sub_25C0EC268();
        uint64_t v28 = v64;
        unint64_t v26 = v65;
        uint64_t v33 = v39;
        uint64_t v29 = v38;
        uint64_t v35 = v37;
        uint64_t v31 = v66;
        uint64_t v36 = v67;
        if ((v40 & 1) == 0) {
          return 0;
        }
      }
    }
    else if (*((void *)&v94 + 1))
    {
      return 0;
    }
    if (v27)
    {
      if (!*((void *)&v32 + 1)) {
        return 0;
      }
      if (__PAIR128__(v27, v26) != v32)
      {
        uint64_t v41 = v31;
        uint64_t v42 = v30;
        uint64_t v43 = v35;
        uint64_t v44 = v28;
        uint64_t v45 = v29;
        uint64_t v46 = v33;
        char v47 = sub_25C0EC268();
        uint64_t v33 = v46;
        uint64_t v29 = v45;
        uint64_t v28 = v44;
        uint64_t v35 = v43;
        uint64_t v30 = v42;
        uint64_t v31 = v41;
        if ((v47 & 1) == 0) {
          return 0;
        }
      }
    }
    else if (*((void *)&v32 + 1))
    {
      return 0;
    }
    if (v28)
    {
      if (!v34) {
        return 0;
      }
      if (v29 != v33 || v28 != v34)
      {
        uint64_t v48 = v31;
        uint64_t v49 = v35;
        char v50 = sub_25C0EC268();
        uint64_t v35 = v49;
        uint64_t v31 = v48;
        if ((v50 & 1) == 0) {
          return 0;
        }
      }
    }
    else if (v34)
    {
      return 0;
    }
    if (v30)
    {
      if (!v35) {
        return 0;
      }
      if (v73 != v36 || v30 != v35)
      {
        uint64_t v51 = v31;
        char v52 = sub_25C0EC268();
        uint64_t v31 = v51;
        if ((v52 & 1) == 0) {
          return 0;
        }
      }
    }
    else if (v35)
    {
      return 0;
    }
    if (v31)
    {
      if (!v76 || (v71 != v72 || v31 != v76) && (sub_25C0EC268() & 1) == 0) {
        return 0;
      }
    }
    else if (v76)
    {
      return 0;
    }
    uint64_t v53 = v88;
    uint64_t v54 = v99;
    uint64_t v55 = *(void *)(v88 + 16);
    if (v55 != *(void *)(v99 + 16)) {
      return 0;
    }
    if (v55 && v88 != v99) {
      break;
    }
LABEL_76:
    uint64_t v10 = v74 + 1;
    if (v74 + 1 == v70) {
      return 1;
    }
    uint64_t v12 = v68;
  }
  uint64_t v56 = v75;
  unint64_t v57 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  sub_25C058234((uint64_t)&v78);
  sub_25C058234((uint64_t)&v89);
  unint64_t v58 = 0;
  uint64_t v76 = *(void *)(v56 + 72);
  while (1)
  {
    uint64_t result = sub_25C04D1C4(v53 + v57, (uint64_t)v8, type metadata accessor for Report.Media);
    if (v58 >= *(void *)(v54 + 16)) {
      break;
    }
    uint64_t v60 = (uint64_t)v8;
    uint64_t v61 = v77;
    sub_25C04D1C4(v54 + v57, v77, type metadata accessor for Report.Media);
    char v62 = _s26SensitiveContentAnalysisUI6ReportC5MediaV2eeoiySbAE_AEtFZ_0(v60, v61);
    uint64_t v63 = v61;
    uint64_t v8 = (char *)v60;
    sub_25C04F040(v63, type metadata accessor for Report.Media);
    sub_25C04F040(v60, type metadata accessor for Report.Media);
    if ((v62 & 1) == 0)
    {
      sub_25C058304((uint64_t)&v89);
      sub_25C058304((uint64_t)&v78);
      return 0;
    }
    ++v58;
    v57 += v76;
    if (v55 == v58)
    {
      sub_25C058304((uint64_t)&v89);
      sub_25C058304((uint64_t)&v78);
      goto LABEL_76;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25C03FC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Message();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_25C04D1C4(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Report.Message);
        sub_25C04D1C4(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Report.Message);
        sub_25C04D338(&qword_26A588A78, (void (*)(uint64_t))type metadata accessor for Report.Message);
        char v15 = sub_25C0EB7A8();
        sub_25C04F040((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Report.Message);
        sub_25C04F040((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Report.Message);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_25C03FE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Report.Media(0) - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_25C04D1C4(a1 + v12, (uint64_t)v10, type metadata accessor for Report.Media);
        sub_25C04D1C4(a2 + v12, (uint64_t)v7, type metadata accessor for Report.Media);
        char v15 = _s26SensitiveContentAnalysisUI6ReportC5MediaV2eeoiySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v7);
        sub_25C04F040((uint64_t)v7, type metadata accessor for Report.Media);
        sub_25C04F040((uint64_t)v10, type metadata accessor for Report.Media);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

unint64_t sub_25C03FFEC(char a1)
{
  unint64_t result = 0x746E656469636E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E7265636E6F63;
      break;
    case 2:
      unint64_t result = 0x6D6974636976;
      break;
    case 3:
      unint64_t result = 0x7374636570737573;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x7070614874616877;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0x73746E656D6D6F63;
      break;
    case 9:
      unint64_t result = 0x6E61725474616863;
      break;
    case 11:
      unint64_t result = 0x6D6F6F5274616863;
      break;
    case 12:
      unint64_t result = 0x746163696C707061;
      break;
    case 13:
      unint64_t result = 0x656D614E736FLL;
      break;
    case 14:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 15:
      unint64_t result = 0x7367616C66;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25C0401FC()
{
  return sub_25C03FFEC(*v0);
}

uint64_t sub_25C040204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C04F5BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C04022C(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_25C040238(uint64_t a1)
{
  unint64_t v2 = sub_25C04D520();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C040274(uint64_t a1)
{
  unint64_t v2 = sub_25C04D520();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Report.Evidence.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v4 = _s14descr27097BA99O6VictimVMa(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588808);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Report.Evidence(0);
  uint64_t v14 = (int *)MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v17 = &v16[v14[9]];
  *(void *)BOOL v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v55 = (uint64_t *)v17;
  uint64_t v18 = v14[11];
  v16[v18] = 8;
  uint64_t v19 = &v16[v14[12]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v53 = (uint64_t *)v19;
  uint64_t v20 = &v16[v14[14]];
  *(_OWORD *)uint64_t v20 = xmmword_25C0EF5D0;
  uint64_t v54 = v14;
  uint64_t v21 = v14[15];
  uint64_t v56 = v16;
  long long v22 = &v16[v21];
  *(void *)long long v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v51 = (uint64_t *)v22;
  char v52 = v20;
  uint64_t v23 = a1[3];
  char v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_25C04D520();
  uint64_t v49 = v12;
  sub_25C0EC378();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25C03DA24(*(void *)v52, *((void *)v52 + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = v18;
    uint64_t v24 = v47;
    sub_25C0EA328();
    LOBYTE(v57) = 0;
    sub_25C04D338(&qword_26A588810, MEMORY[0x263F07490]);
    sub_25C0EC138();
    sub_25C0516EC((uint64_t)v9, (uint64_t)v56, &qword_26A589720);
    LOBYTE(v57) = 1;
    sub_25C04F0A0();
    sub_25C0EC168();
    long long v25 = v54;
    LOBYTE(v57) = 2;
    sub_25C04D338(&qword_26A588820, (void (*)(uint64_t))_s14descr27097BA99O6VictimVMa);
    uint64_t v26 = (uint64_t)v6;
    sub_25C0EC168();
    uint64_t v27 = (uint64_t)v56;
    sub_25C051684(v26, (uint64_t)&v56[v25[6]], _s14descr27097BA99O6VictimVMa);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5887C8);
    char v58 = 3;
    sub_25C04F0F4(&qword_26A588828, &qword_26A5887C8, (void (*)(void))sub_25C04F160);
    sub_25C0EC168();
    *(void *)(v27 + v25[7]) = v57;
    type metadata accessor for SCUIInterventionType(0);
    char v58 = 4;
    sub_25C04D338(&qword_26A588838, type metadata accessor for SCUIInterventionType);
    sub_25C0EC168();
    *(void *)(v27 + v25[8]) = v57;
    LOBYTE(v57) = 5;
    uint64_t v28 = sub_25C0EC118();
    uint64_t v29 = v55;
    *uint64_t v55 = v28;
    v29[1] = v30;
    LOBYTE(v57) = 6;
    *(unsigned char *)(v27 + v25[10]) = sub_25C0EC158() & 1;
    char v58 = 7;
    sub_25C04F1B4();
    sub_25C0EC138();
    *(unsigned char *)(v27 + v45) = v57;
    LOBYTE(v57) = 8;
    uint64_t v31 = sub_25C0EC118();
    long long v32 = v53;
    *uint64_t v53 = v31;
    v32[1] = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588798);
    char v58 = 9;
    sub_25C04F208();
    sub_25C0EC168();
    *(void *)&v56[v54[13]] = v57;
    char v58 = 10;
    sub_25C04F2AC();
    sub_25C0EC138();
    *(_OWORD *)char v52 = v57;
    LOBYTE(v57) = 11;
    uint64_t v34 = sub_25C0EC118();
    uint64_t v35 = v51;
    *uint64_t v51 = v34;
    v35[1] = v36;
    type metadata accessor for SCUIReportingApplication(0);
    char v58 = 12;
    sub_25C04D338(&qword_26A588860, type metadata accessor for SCUIReportingApplication);
    sub_25C0EC168();
    *(void *)&v56[v54[16]] = v57;
    LOBYTE(v57) = 13;
    uint64_t v37 = sub_25C0EC148();
    uint64_t v38 = (uint64_t *)&v56[v54[17]];
    uint64_t *v38 = v37;
    v38[1] = v39;
    LOBYTE(v57) = 14;
    uint64_t v40 = sub_25C0EC148();
    uint64_t v41 = (uint64_t *)&v56[v54[18]];
    *uint64_t v41 = v40;
    v41[1] = v42;
    type metadata accessor for SCUIReportFlags(0);
    char v58 = 15;
    sub_25C04D338(&qword_26A588868, type metadata accessor for SCUIReportFlags);
    sub_25C0EC168();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v49, v48);
    uint64_t v43 = (uint64_t)v56;
    *(void *)&v56[v54[19]] = v57;
    sub_25C04D1C4(v43, v46, type metadata accessor for Report.Evidence);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    return sub_25C04F040(v43, type metadata accessor for Report.Evidence);
  }
}

uint64_t sub_25C040CF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Report.Evidence.init(from:)(a1, a2);
}

uint64_t sub_25C040D08(void *a1)
{
  return Report.Evidence.encode(to:)(a1);
}

uint64_t sub_25C040D24(void *a1, uint64_t a2)
{
  return Report.Evidence.encode(to:configuration:)(a1, a2);
}

uint64_t sub_25C040D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_25C0EC268();
  }
}

uint64_t sub_25C040D5C()
{
  return sub_25C0EC368();
}

uint64_t sub_25C040DA0()
{
  return sub_25C0EC358();
}

uint64_t sub_25C040DC8()
{
  return sub_25C0EC368();
}

unint64_t sub_25C040E08()
{
  return 0xD000000000000013;
}

uint64_t sub_25C040E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_25C04FC78(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_25C040E54(uint64_t a1)
{
  unint64_t v2 = sub_25C04F300();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C040E90(uint64_t a1)
{
  unint64_t v2 = sub_25C04F300();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C040ECC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588878);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C04F300();
  sub_25C0EC378();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = sub_25C0EC148();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_25C041044(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588870);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C04F300();
  sub_25C0EC388();
  sub_25C0EC1D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25C04117C(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588880);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25C04D1C4(a2, (uint64_t)v13, type metadata accessor for Report.Authority);
  uint64_t v14 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) == 1)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_25C04F354();
    sub_25C0EC388();
    if (!*(void *)(v4 + 56) || (v16[14] = 0, sub_25C0EC1D8(), !v3))
    {
      if (*(void *)(v4 + 72))
      {
        v16[15] = 1;
        sub_25C0EC1D8();
      }
    }
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_25C0413CC(a1);
    return sub_25C04F040((uint64_t)v13, type metadata accessor for Report.Authority);
  }
}

uint64_t sub_25C0413CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588888);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C04F3A8();
  sub_25C0EC388();
  LOBYTE(v13) = 0;
  sub_25C0EC1A8();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_25C0EC1D8();
    LOBYTE(v13) = 2;
    sub_25C0EC1A8();
    LOBYTE(v13) = 3;
    sub_25C0EC1A8();
    LOBYTE(v13) = 4;
    sub_25C0EC1A8();
    long long v9 = v3[6];
    long long v13 = v3[5];
    long long v14 = v9;
    long long v10 = v3[8];
    long long v15 = v3[7];
    long long v16 = v10;
    long long v17 = v3[9];
    v12[15] = 5;
    sub_25C04F3FC();
    sub_25C0EC208();
    _s14descr27097BA99O6VictimVMa(0);
    LOBYTE(v13) = 6;
    sub_25C0EA328();
    sub_25C04D338(&qword_26A588758, MEMORY[0x263F07490]);
    sub_25C0EC208();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25C041674()
{
  uint64_t result = 0x4E79616C70736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49746E756F636361;
      break;
    case 2:
      uint64_t result = 0x656D614E6C6C7566;
      break;
    case 3:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 4:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 5:
      uint64_t result = 0x73736572646461;
      break;
    case 6:
      uint64_t result = 0x6942664F65746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25C04177C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C04FD00(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C0417A4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_25C0417B0(uint64_t a1)
{
  unint64_t v2 = sub_25C04F3A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0417EC(uint64_t a1)
{
  unint64_t v2 = sub_25C04F3A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C041828@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_25C0EA328();
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588898);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14descr27097BA99O6VictimVMa(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 4) = 0;
  *((void *)v11 + 5) = 0;
  uint64_t v12 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_25C04F3A8();
  long long v13 = v8;
  uint64_t v14 = v30;
  sub_25C0EC378();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = v9;
    uint64_t v15 = v27;
    uint64_t v16 = v28;
    LOBYTE(v31) = 0;
    *(void *)uint64_t v11 = sub_25C0EC118();
    *((void *)v11 + 1) = v17;
    LOBYTE(v31) = 1;
    *((void *)v11 + 2) = sub_25C0EC148();
    *((void *)v11 + 3) = v18;
    LOBYTE(v31) = 2;
    *((void *)v11 + 4) = sub_25C0EC118();
    *((void *)v11 + 5) = v19;
    LOBYTE(v31) = 3;
    *((void *)v11 + 6) = sub_25C0EC118();
    *((void *)v11 + 7) = v20;
    LOBYTE(v31) = 4;
    *((void *)v11 + 8) = sub_25C0EC118();
    *((void *)v11 + 9) = v21;
    char v36 = 5;
    sub_25C04F450();
    sub_25C0EC168();
    long long v22 = v32;
    *((_OWORD *)v11 + 5) = v31;
    *((_OWORD *)v11 + 6) = v22;
    long long v23 = v34;
    *((_OWORD *)v11 + 7) = v33;
    *((_OWORD *)v11 + 8) = v23;
    *((_OWORD *)v11 + 9) = v35;
    LOBYTE(v31) = 6;
    sub_25C04D338(&qword_26A588810, MEMORY[0x263F07490]);
    sub_25C0EC168();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v16);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v11[*(int *)(v30 + 40)], v5, v3);
    sub_25C04D1C4((uint64_t)v11, v26, _s14descr27097BA99O6VictimVMa);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return sub_25C04F040((uint64_t)v11, _s14descr27097BA99O6VictimVMa);
  }
}

uint64_t sub_25C041D80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25C041828(a1, a2);
}

uint64_t sub_25C041D98(void *a1)
{
  return sub_25C0413CC(a1);
}

uint64_t sub_25C041DB4(void *a1, uint64_t a2)
{
  return sub_25C04117C(a1, a2);
}

unint64_t sub_25C041DCC(char a1)
{
  unint64_t result = 0x4E79616C70736964;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x49746E756F636361;
      break;
    case 2:
      unint64_t result = 0x656D614E6C6C7566;
      break;
    case 3:
      unint64_t result = 0x6464416C69616D65;
      break;
    case 4:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 5:
      unint64_t result = 0x73736572646461;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25C041ED4()
{
  return sub_25C041DCC(*v0);
}

uint64_t sub_25C041EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C050054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25C041F04(uint64_t a1)
{
  unint64_t v2 = sub_25C04F4A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C041F40(uint64_t a1)
{
  unint64_t v2 = sub_25C04F4A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C041F7C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C04F4A4();
  sub_25C0EC388();
  LOBYTE(v14) = 0;
  sub_25C0EC1A8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_25C0EC1A8();
    LOBYTE(v14) = 2;
    sub_25C0EC1A8();
    LOBYTE(v14) = 3;
    sub_25C0EC1A8();
    LOBYTE(v14) = 4;
    sub_25C0EC1A8();
    long long v9 = *(_OWORD *)(v3 + 128);
    long long v16 = *(_OWORD *)(v3 + 112);
    long long v17 = v9;
    long long v18 = *(_OWORD *)(v3 + 144);
    long long v10 = *(_OWORD *)(v3 + 96);
    long long v14 = *(_OWORD *)(v3 + 80);
    long long v15 = v10;
    char v13 = 5;
    sub_25C04F3FC();
    sub_25C0EC208();
    *(void *)&long long v14 = *(void *)(v3 + 160);
    char v13 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888B0);
    sub_25C04F4F8();
    sub_25C0EC208();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25C0421F0@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[3];
  if (v3)
  {
    uint64_t v4 = v1[2];
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v6 = v1[1];
    if (v6) {
      uint64_t v4 = *v1;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v6) {
      unint64_t v5 = v6;
    }
    else {
      unint64_t v5 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
  }
  *a1 = v4;
  a1[1] = v5;

  return swift_bridgeObjectRetain();
}

__n128 sub_25C04225C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25C05038C(a1, (uint64_t)v9);
  if (!v2)
  {
    long long v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(void *)(a2 + 160) = v10;
    long long v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    long long v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    __n128 result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_25C0422D4(void *a1)
{
  return sub_25C041F7C(a1);
}

uint64_t sub_25C0422EC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  uint64_t v14 = *(void *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  uint64_t v16 = *(void *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return sub_25C04DE74((uint64_t)v13, (uint64_t)v15) & 1;
}

uint64_t Report.Media.id.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Report.Media(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Report.Media.sha256.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Report.Media(0) + 36);
  uint64_t v2 = *(void *)v1;
  sub_25C03D9C8(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t Report.Media.sha256.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for Report.Media(0) + 36);
  uint64_t result = sub_25C03DA24(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*Report.Media.sha256.modify())()
{
  return nullsub_1;
}

uint64_t Report.Media.assetUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Report.Media(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Report.Media.assetUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Report.Media(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Report.Media.assetUUID.modify())()
{
  return nullsub_1;
}

uint64_t Report.Media.encryptedFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Report.Media(0);
  return sub_25C02FB8C(v1 + *(int *)(v3 + 44), a1, &qword_26A589EC0);
}

uint64_t Report.Media.encryptedFileURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Report.Media(0) + 44);

  return sub_25C050AC0(a1, v3);
}

uint64_t (*Report.Media.encryptedFileURL.modify())()
{
  return nullsub_1;
}

uint64_t Report.Media.numberOfChunks.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Report.Media(0) + 48));
}

uint64_t Report.Media.numberOfChunks.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for Report.Media(0);
  uint64_t v6 = v2 + *(int *)(result + 48);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*Report.Media.numberOfChunks.modify())()
{
  return nullsub_1;
}

uint64_t Report.Media.init(url:utiType:sensitivity:wasImpetusOfReport:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v46 = a5;
  uint64_t v50 = a4;
  uint64_t v51 = a1;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v53 = a6;
  uint64_t v6 = sub_25C0EA358();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888D0);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25C0EA4E8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v49 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v52 = *((void *)v14 - 1);
  long long v15 = (int *)MEMORY[0x270FA5388](v14);
  long long v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = &v17[v15[9]];
  *(_OWORD *)uint64_t v41 = xmmword_25C0EF5D0;
  long long v18 = &v17[v15[10]];
  *(void *)long long v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v19 = (uint64_t)&v17[v15[11]];
  uint64_t v20 = sub_25C0EA238();
  uint64_t v21 = *(void *)(v20 - 8);
  long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v42 = v19;
  v22(v19, 1, 1, v20);
  long long v23 = &v17[v14[12]];
  *(void *)long long v23 = 0;
  v23[8] = 1;
  sub_25C0EA4F8();
  uint64_t v24 = v12;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v26 = v11;
  if (v25(v10, 1, v11) == 1)
  {
    sub_25C02FBF0(v50, &qword_26A5888C8);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v51, v20);
    sub_25C02FBF0((uint64_t)v10, &qword_26A5888D0);
    sub_25C03DA24(*(void *)v41, *((void *)v41 + 1));
    swift_bridgeObjectRelease();
    sub_25C02FBF0(v42, &qword_26A589EC0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v52 + 56))(v53, 1, 1, v14);
  }
  else
  {
    uint64_t v28 = v24;
    uint64_t v29 = v49;
    uint64_t v30 = v10;
    uint64_t v31 = v26;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v49, v30, v26);
    uint64_t v32 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, v51, v20);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(&v17[v14[5]], v29, v31);
    uint64_t v33 = v50;
    sub_25C02FB8C(v50, (uint64_t)&v17[v14[6]], &qword_26A5888C8);
    long long v34 = v43;
    sub_25C0EA348();
    uint64_t v35 = sub_25C0EA338();
    uint64_t v47 = v36;
    uint64_t v48 = v35;
    sub_25C02FBF0(v33, &qword_26A5888C8);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v20);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v45);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v49, v31);
    uint64_t v37 = &v17[v14[8]];
    uint64_t v38 = v47;
    *(void *)uint64_t v37 = v48;
    *((void *)v37 + 1) = v38;
    *(void *)long long v23 = 0;
    v23[8] = 0;
    v17[v14[7]] = v46 & 1;
    uint64_t v39 = v53;
    sub_25C04D1C4((uint64_t)v17, v53, type metadata accessor for Report.Media);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v52 + 56))(v39, 0, 1, v14);
    return sub_25C04F040((uint64_t)v17, type metadata accessor for Report.Media);
  }
}

uint64_t Report.Media.encode(to:configuration:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v83 = sub_25C0EA2A8();
  uint64_t v75 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  long long v82 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EA608();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888D8);
  MEMORY[0x270FA5388](v9);
  uint64_t v80 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v70 - v15;
  MEMORY[0x270FA5388](v14);
  long long v18 = (char *)&v70 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888E0);
  uint64_t v81 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C04D1C4(a2, (uint64_t)v24, type metadata accessor for Report.Authority);
  uint64_t v25 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) != 1)
  {
    Report.Media.encode(to:configuration:)(a1, a2);
    return sub_25C04F040((uint64_t)v24, type metadata accessor for Report.Authority);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C050B28();
  sub_25C0EC388();
  uint64_t v26 = type metadata accessor for Report.Media(0);
  sub_25C0EA498();
  LOBYTE(v85) = 0;
  uint64_t v27 = v84;
  sub_25C0EC1D8();
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v21, v19);
    return swift_bridgeObjectRelease();
  }
  uint64_t v73 = v19;
  uint64_t v74 = 0;
  uint64_t v71 = v21;
  swift_bridgeObjectRelease();
  uint64_t v70 = v26;
  uint64_t v29 = *(int *)(v26 + 24);
  uint64_t v72 = v3;
  sub_25C02FB8C(v3 + v29, (uint64_t)v18, &qword_26A5888C8);
  uint64_t v30 = v78;
  uint64_t v31 = v79;
  (*(void (**)(char *, void, uint64_t))(v78 + 104))(v16, *MEMORY[0x263F17628], v79);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v16, 0, 1, v31);
  uint64_t v32 = *(int *)(v9 + 48);
  uint64_t v33 = v80;
  uint64_t v34 = v80 + v32;
  sub_25C02FB8C((uint64_t)v18, v80, &qword_26A5888C8);
  uint64_t v35 = v33;
  sub_25C02FB8C((uint64_t)v16, v34, &qword_26A5888C8);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v36(v33, 1, v31) == 1)
  {
    sub_25C02FBF0((uint64_t)v16, &qword_26A5888C8);
    uint64_t v35 = v80;
    sub_25C02FBF0((uint64_t)v18, &qword_26A5888C8);
    int v37 = v36(v34, 1, v31);
    uint64_t v39 = v71;
    uint64_t v38 = v72;
    if (v37 == 1)
    {
      sub_25C02FBF0(v35, &qword_26A5888C8);
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  uint64_t v40 = v77;
  sub_25C02FB8C(v33, v77, &qword_26A5888C8);
  int v41 = v36(v34, 1, v31);
  uint64_t v42 = v31;
  uint64_t v39 = v71;
  if (v41 == 1)
  {
    sub_25C02FBF0((uint64_t)v16, &qword_26A5888C8);
    sub_25C02FBF0((uint64_t)v18, &qword_26A5888C8);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v40, v42);
    uint64_t v38 = v72;
LABEL_11:
    sub_25C02FBF0(v35, &qword_26A5888D8);
    goto LABEL_13;
  }
  uint64_t v43 = v40;
  uint64_t v44 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v76, v34, v42);
  sub_25C04D338(&qword_26A588918, MEMORY[0x263F17630]);
  LODWORD(v84) = sub_25C0EB7A8();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v30 + 8);
  v45(v44, v42);
  sub_25C02FBF0((uint64_t)v16, &qword_26A5888C8);
  sub_25C02FBF0((uint64_t)v18, &qword_26A5888C8);
  v45((char *)v43, v42);
  sub_25C02FBF0(v80, &qword_26A5888C8);
  uint64_t v38 = v72;
LABEL_13:
  LOBYTE(v85) = 1;
  uint64_t v46 = v73;
  uint64_t v47 = v74;
  sub_25C0EC1F8();
  if (v47) {
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v39, v46);
  }
  uint64_t v74 = 0;
  uint64_t v48 = v38 + *(int *)(v70 + 36);
  unint64_t v49 = *(void *)(v48 + 8);
  if (v49 >> 60 == 15)
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v52 = *(void *)v48;
    switch(v49 >> 62)
    {
      case 1uLL:
      case 2uLL:
        sub_25C034EC8(*(void *)v48, *(void *)(v48 + 8));
        sub_25C034EC8(v52, v49);
        sub_25C034EC8(v52, v49);
        break;
      default:
        break;
    }
    sub_25C0EA2B8();
    uint64_t v80 = v52;
    sub_25C03DA24(v52, v49);
    sub_25C04D338(&qword_26A5888F8, MEMORY[0x263F06F40]);
    sub_25C0EBE48();
    if (BYTE1(v85))
    {
      uint64_t v53 = (char *)MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v53 = (char *)MEMORY[0x263F8EE78];
      long long v84 = xmmword_25C0EED70;
      uint64_t v60 = MEMORY[0x263F8E778];
      uint64_t v61 = MEMORY[0x263F8E7C0];
      do
      {
        char v62 = v85;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A588910);
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = v84;
        *(void *)(v63 + 56) = v60;
        *(void *)(v63 + 64) = v61;
        *(unsigned char *)(v63 + 32) = v62;
        uint64_t v64 = sub_25C0EB878();
        uint64_t v66 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_25C049FD4(0, *((void *)v53 + 2) + 1, 1, v53);
        }
        unint64_t v68 = *((void *)v53 + 2);
        unint64_t v67 = *((void *)v53 + 3);
        if (v68 >= v67 >> 1) {
          uint64_t v53 = sub_25C049FD4((char *)(v67 > 1), v68 + 1, 1, v53);
        }
        *((void *)v53 + 2) = v68 + 1;
        id v69 = &v53[16 * v68];
        *((void *)v69 + 4) = v64;
        *((void *)v69 + 5) = v66;
        sub_25C0EBE48();
      }
      while (BYTE1(v85) != 1);
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v83);
    sub_25C03DA24(v80, v49);
    *(void *)&long long v85 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588900);
    sub_25C0583D0(&qword_26A588908, &qword_26A588900);
    uint64_t v50 = sub_25C0EB788();
    uint64_t v51 = v54;
    swift_bridgeObjectRelease();
    uint64_t v39 = v71;
    uint64_t v38 = v72;
  }
  *(void *)&long long v85 = v50;
  *((void *)&v85 + 1) = v51;
  char v86 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588770);
  sub_25C050B7C(&qword_26A588778, &qword_26A588770);
  uint64_t v56 = v73;
  uint64_t v55 = v74;
  sub_25C0EC208();
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v39, v56);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = v70;
  long long v85 = *(_OWORD *)(v38 + *(int *)(v70 + 40));
  char v86 = 3;
  sub_25C0EC208();
  char v58 = (uint64_t *)(v38 + *(int *)(v57 + 48));
  uint64_t v59 = *v58;
  LOBYTE(v58) = *((unsigned char *)v58 + 8);
  *(void *)&long long v85 = v59;
  BYTE8(v85) = (_BYTE)v58;
  char v86 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888E8);
  sub_25C050B7C(&qword_26A5888F0, &qword_26A5888E8);
  sub_25C0EC208();
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v39, v56);
}

unint64_t sub_25C0436E8(char a1)
{
  unint64_t result = 7107189;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65707954697475;
      break;
    case 2:
      unint64_t result = 0x76697469736E6573;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 25705;
      break;
    case 5:
      unint64_t result = 0x363532616873;
      break;
    case 6:
      unint64_t result = 0x4955557465737361;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x664F7265626D756ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25C043814()
{
  return sub_25C0436E8(*v0);
}

uint64_t sub_25C04381C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C050C88(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C043844(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_25C043850(uint64_t a1)
{
  unint64_t v2 = sub_25C050BE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C04388C(uint64_t a1)
{
  unint64_t v2 = sub_25C050BE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Report.Media.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588920);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C050BE0();
  sub_25C0EC388();
  LOBYTE(v12) = 0;
  sub_25C0EA238();
  sub_25C04D338(&qword_26A588928, MEMORY[0x263F06EA8]);
  sub_25C0EC208();
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for Report.Media(0);
    LOBYTE(v12) = 1;
    sub_25C0EA4E8();
    sub_25C04D338(&qword_26A588930, MEMORY[0x263F8F3A0]);
    sub_25C0EC208();
    LOBYTE(v12) = 2;
    sub_25C0EA608();
    sub_25C04D338(&qword_26A588938, MEMORY[0x263F17630]);
    sub_25C0EC1C8();
    LOBYTE(v12) = 3;
    sub_25C0EC1E8();
    LOBYTE(v12) = 4;
    sub_25C0EC1D8();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v11 + 36));
    char v13 = 5;
    sub_25C04D428();
    sub_25C0EC1C8();
    LOBYTE(v12) = 6;
    sub_25C0EC1A8();
    LOBYTE(v12) = 7;
    sub_25C0EC1C8();
    LOBYTE(v12) = 8;
    sub_25C0EC1B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Report.Media.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v50 = (uint64_t)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v51 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EA4E8();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25C0EA238();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588940);
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Report.Media(0);
  long long v18 = (int *)MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = &v20[v18[9]];
  *(_OWORD *)uint64_t v59 = xmmword_25C0EF5D0;
  uint64_t v21 = &v20[v18[10]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v64 = v21;
  uint64_t v22 = &v20[v18[11]];
  uint64_t v57 = v11;
  uint64_t v23 = *(void (**)(void))(v11 + 56);
  uint64_t v60 = (uint64_t)v22;
  v23();
  uint64_t v61 = a1;
  char v62 = (int *)v17;
  uint64_t v24 = (uint64_t)v20;
  uint64_t v25 = &v20[*(int *)(v17 + 48)];
  *(void *)uint64_t v25 = 0;
  v25[8] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C050BE0();
  char v58 = v16;
  uint64_t v26 = v63;
  sub_25C0EC378();
  uint64_t v54 = v10;
  if (v26)
  {
    uint64_t v29 = v60;
    uint64_t v30 = v59;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    sub_25C03DA24(*(void *)v30, *((void *)v30 + 1));
    swift_bridgeObjectRelease();
    return sub_25C02FBF0(v29, &qword_26A589EC0);
  }
  else
  {
    uint64_t v63 = (uint64_t *)v25;
    uint64_t v27 = v52;
    LOBYTE(v65) = 0;
    uint64_t v28 = sub_25C04D338(&qword_26A588948, MEMORY[0x263F06EA8]);
    sub_25C0EC168();
    v48[1] = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v24, v13, v10);
    LOBYTE(v65) = 1;
    sub_25C04D338(&qword_26A588950, MEMORY[0x263F8F3A0]);
    uint64_t v31 = v56;
    sub_25C0EC168();
    uint64_t v32 = v27;
    uint64_t v33 = v62;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v24 + v62[5], v9, v31);
    sub_25C0EA608();
    LOBYTE(v65) = 2;
    sub_25C04D338(&qword_26A588958, MEMORY[0x263F17630]);
    uint64_t v34 = (uint64_t)v51;
    sub_25C0EC138();
    uint64_t v35 = (uint64_t *)v64;
    sub_25C0516EC(v34, v24 + v33[6], &qword_26A5888C8);
    LOBYTE(v65) = 3;
    char v36 = sub_25C0EC158();
    uint64_t v38 = v60;
    uint64_t v37 = (uint64_t)v61;
    uint64_t v39 = v59;
    *(unsigned char *)(v24 + v33[7]) = v36 & 1;
    LOBYTE(v65) = 4;
    uint64_t v40 = sub_25C0EC148();
    int v41 = (uint64_t *)(v24 + v33[8]);
    *int v41 = v40;
    v41[1] = v42;
    char v66 = 5;
    sub_25C04F2AC();
    sub_25C0EC138();
    *(_OWORD *)uint64_t v39 = v65;
    LOBYTE(v65) = 6;
    *uint64_t v35 = sub_25C0EC118();
    v35[1] = v43;
    LOBYTE(v65) = 7;
    sub_25C0EC138();
    sub_25C050AC0(v50, v38);
    LOBYTE(v65) = 8;
    uint64_t v44 = sub_25C0EC128();
    LOBYTE(v35) = v45;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v58, v53);
    uint64_t v46 = v63;
    *uint64_t v63 = v44;
    *((unsigned char *)v46 + 8) = v35 & 1;
    sub_25C04D1C4(v24, v49, type metadata accessor for Report.Media);
    __swift_destroy_boxed_opaque_existential_1(v37);
    return sub_25C04F040(v24, type metadata accessor for Report.Media);
  }
}

uint64_t sub_25C044504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Report.Media.init(from:)(a1, a2);
}

uint64_t sub_25C04451C(void *a1)
{
  return Report.Media.encode(to:)(a1);
}

uint64_t sub_25C044538(void *a1, uint64_t a2)
{
  return Report.Media.encode(to:configuration:)(a1, a2);
}

uint64_t sub_25C044550@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 32));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25C044564()
{
  uint64_t result = 0x73736572646461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2037672291;
      break;
    case 2:
      uint64_t result = 0x6574617473;
      break;
    case 3:
      uint64_t result = 0x7972746E756F63;
      break;
    case 4:
      uint64_t result = 0x6F436C6174736F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25C044604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C051040(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C04462C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_25C044638(uint64_t a1)
{
  unint64_t v2 = sub_25C050C34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C044674(uint64_t a1)
{
  unint64_t v2 = sub_25C050C34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C0446B0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588960);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C050C34();
  sub_25C0EC388();
  v8[15] = 0;
  sub_25C0EC1A8();
  if (!v1)
  {
    v8[14] = 1;
    sub_25C0EC1A8();
    v8[13] = 2;
    sub_25C0EC1A8();
    v8[12] = 3;
    sub_25C0EC1A8();
    v8[11] = 4;
    sub_25C0EC1A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 sub_25C044888@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25C051254(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_25C0448D4(void *a1)
{
  return sub_25C0446B0(a1);
}

uint64_t sub_25C0448EC(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  id v8[2] = a1[2];
  v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  id v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_25C04DB50(v8, v9) & 1;
}

uint64_t sub_25C044948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v8 = type metadata accessor for CloudKitReport(0);
  uint64_t v9 = (char *)a5 + *(int *)(v8 + 20);
  uint64_t v10 = sub_25C0EA238();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a3, v10);
  *(void *)((char *)a5 + *(int *)(v8 + 24)) = a4;
  return result;
}

uint64_t sub_25C0449DC()
{
  return sub_25C0EB988();
}

uint64_t sub_25C044A6C()
{
  return sub_25C0EB958();
}

uint64_t sub_25C044AEC()
{
  return sub_25C0EB988();
}

uint64_t sub_25C044B7C()
{
  return sub_25C0EB958();
}

uint64_t sub_25C044BFC()
{
  return sub_25C0EB988();
}

uint64_t sub_25C044C8C()
{
  return sub_25C0EB958();
}

uint64_t sub_25C044D0C()
{
  return sub_25C0EB998();
}

uint64_t sub_25C044D9C()
{
  return sub_25C0EB968();
}

uint64_t String.hasPhonePrefix.getter()
{
  uint64_t v0 = (void *)sub_25C0EB828();
  uint64_t v1 = MEMORY[0x26117DD60]();

  return v1;
}

uint64_t String.removingAccountIDPrefix.getter(uint64_t a1)
{
  long long v2 = (void *)sub_25C0EB828();
  id v3 = objc_msgSend(v2, sel__stripFZIDPrefix);

  if (v3)
  {
    a1 = sub_25C0EB858();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25C044ECC()
{
  return 0;
}

uint64_t sub_25C044ED4()
{
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for Report.Evidence(0) + 68));
  swift_bridgeObjectRetain();
  sub_25C0EB8E8();
  swift_bridgeObjectRetain();
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_25C044F64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25C0EA328();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - v10;
  sub_25C02FB8C(v1, (uint64_t)&v19 - v10, &qword_26A589720);
  uint64_t v12 = (void *)*sub_25C0D513C();
  *(void *)(swift_allocObject() + 16) = v12;
  sub_25C02FB8C((uint64_t)v11, (uint64_t)v9, &qword_26A589720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    id v13 = v12;
    uint64_t v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    id v15 = v12;
    uint64_t v16 = (void *)sub_25C0EA2D8();
    id v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

    uint64_t v14 = sub_25C0EB858();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_25C02FBF0((uint64_t)v11, &qword_26A589720);

  swift_release();
  return v14;
}

uint64_t sub_25C0451B4()
{
  uint64_t v1 = type metadata accessor for Report.Evidence(0);
  uint64_t result = 0;
  if (!*(void *)(v0 + *(int *)(v1 + 64)))
  {
    if (*(void *)(v0 + *(int *)(v1 + 76))) {
      return 5459283;
    }
    else {
      return 0x6567617373654D69;
    }
  }
  return result;
}

double sub_25C045224@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Report.Evidence(0);
  if (!*(void *)(v1 + *(int *)(v3 + 64))
    && ((uint64_t v5 = *(void *)(v1 + *(int *)(v3 + 76)), (v5 & 2) != 0) || (v5 & 4) != 0))
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v10);
    double result = *(double *)&v10;
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    uint64_t v9 = v14;
    *(_OWORD *)a1 = v10;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

BOOL sub_25C0452DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  long long v10 = (char *)&v35 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unsigned __int8 v13 = (char *)&v35 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v35 - v14;
  uint64_t v16 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v16 - 8);
  long long v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C04D1C4(a1, (uint64_t)v18, type metadata accessor for Report.Authority);
  uint64_t v19 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  BOOL v20 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19) != 1)
  {
    uint64_t v21 = v2 + v4[6];
    unint64_t v22 = *(void *)(v21 + 40);
    if (v22)
    {
      uint64_t v23 = *(void *)(v21 + 32) & 0xFFFFFFFFFFFFLL;
      if ((v22 & 0x2000000000000000) != 0) {
        uint64_t v24 = HIBYTE(v22) & 0xF;
      }
      else {
        uint64_t v24 = v23;
      }
      sub_25C04D1C4(v2, (uint64_t)v15, type metadata accessor for Report.Evidence);
      if (v24)
      {
        uint64_t v25 = &v15[v4[6]];
        unint64_t v26 = *((void *)v25 + 9);
        if (v26)
        {
          uint64_t v27 = *((void *)v25 + 8) & 0xFFFFFFFFFFFFLL;
          if ((v26 & 0x2000000000000000) != 0) {
            uint64_t v28 = HIBYTE(v26) & 0xF;
          }
          else {
            uint64_t v28 = v27;
          }
          sub_25C04F040((uint64_t)v15, type metadata accessor for Report.Evidence);
          sub_25C04D1C4(v2, (uint64_t)v13, type metadata accessor for Report.Evidence);
          if (v28)
          {
            uint64_t v29 = &v13[v4[6]];
            unint64_t v30 = *((void *)v29 + 7);
            if (v30)
            {
              uint64_t v31 = *((void *)v29 + 6) & 0xFFFFFFFFFFFFLL;
              if ((v30 & 0x2000000000000000) != 0) {
                uint64_t v32 = HIBYTE(v30) & 0xF;
              }
              else {
                uint64_t v32 = v31;
              }
              sub_25C04F040((uint64_t)v13, type metadata accessor for Report.Evidence);
              sub_25C04D1C4(v2, (uint64_t)v10, type metadata accessor for Report.Evidence);
              if (v32)
              {
                int v33 = v10[v4[10]];
                sub_25C051684((uint64_t)v10, (uint64_t)v7, type metadata accessor for Report.Evidence);
                BOOL v20 = v33 != 1 || v7[v4[11]] != 8;
                long long v10 = v7;
                goto LABEL_24;
              }
LABEL_23:
              BOOL v20 = 0;
LABEL_24:
              sub_25C04F040((uint64_t)v10, type metadata accessor for Report.Evidence);
              sub_25C04F040((uint64_t)v18, type metadata accessor for Report.Authority);
              return v20;
            }
          }
LABEL_22:
          sub_25C04F040((uint64_t)v13, type metadata accessor for Report.Evidence);
          sub_25C04D1C4(v2, (uint64_t)v10, type metadata accessor for Report.Evidence);
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_25C04D1C4(v2, (uint64_t)v15, type metadata accessor for Report.Evidence);
    }
    sub_25C04F040((uint64_t)v15, type metadata accessor for Report.Evidence);
    sub_25C04D1C4(v2, (uint64_t)v13, type metadata accessor for Report.Evidence);
    goto LABEL_22;
  }
  return v20;
}

uint64_t SCUIReportingApplication.description.getter(uint64_t a1)
{
  uint64_t result = 0x706F7244726941;
  switch(a1)
  {
    case 0:
      uint64_t result = 0x736567617373654DLL;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 0x656D695465636146;
      break;
    case 3:
      uint64_t result = 0x73746361746E6F43;
      break;
    default:
      sub_25C0EBF78();
      swift_bridgeObjectRelease();
      sub_25C0EC238();
      sub_25C0EB8E8();
      swift_bridgeObjectRelease();
      sub_25C0EC078();
      __break(1u);
      JUMPOUT(0x25C0457F0);
  }
  return result;
}

double sub_25C045800@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v8);
      double result = *(double *)&v8;
      uint64_t v4 = v9;
      uint64_t v5 = v10;
      char v6 = v11;
      uint64_t v7 = v12;
      *(_OWORD *)a2 = v8;
      *(void *)(a2 + 16) = v4;
      *(void *)(a2 + 24) = v5;
      *(unsigned char *)(a2 + 32) = v6;
      *(void *)(a2 + 40) = v7;
      return result;
    default:
      sub_25C0EBF78();
      swift_bridgeObjectRelease();
      *(void *)&long long v8 = 0xD00000000000001FLL;
      *((void *)&v8 + 1) = 0x800000025C0F5CF0;
      sub_25C0EC238();
      sub_25C0EB8E8();
      swift_bridgeObjectRelease();
      sub_25C0EC078();
      __break(1u);
      JUMPOUT(0x25C045988);
  }
}

uint64_t sub_25C045998()
{
  return SCUIReportingApplication.description.getter(*v0);
}

uint64_t sub_25C0459A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr27097BA99O6VictimVMa(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  uint64_t v10 = (void *)v2[1];
  sub_25C04D1C4((uint64_t)v2, (uint64_t)v9, _s14descr27097BA99O6VictimVMa);
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_25C04F040((uint64_t)v9, _s14descr27097BA99O6VictimVMa);
  }
  else
  {
    uint64_t v11 = *((void *)v9 + 4);
    uint64_t v10 = (void *)*((void *)v9 + 5);
    swift_bridgeObjectRetain();
    sub_25C04F040((uint64_t)v9, _s14descr27097BA99O6VictimVMa);
    if (!v10) {
      return SCLocalizedStringKey.init(stringLiteral:)(a1);
    }
  }
  SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v12);
  v13._countAndFlagsBits = v11;
  v13._object = v10;
  SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 1431263520;
  v14._object = (void *)0xE400000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
  return SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v6, a1);
}

uint64_t sub_25C045B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)v2[7];
  uint64_t v7 = v2[8];
  uint64_t v9 = (void *)v2[9];
  if (v8)
  {
    uint64_t v10 = v2[6];
    if (!v9)
    {
      SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t v15 = v10;
      uint64_t v16 = v8;
      goto LABEL_9;
    }
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
    v12._countAndFlagsBits = v10;
    v12._object = v8;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v12);
    uint64_t v13 = 8236;
    unint64_t v14 = 0xE200000000000000;
  }
  else
  {
    if (!v9)
    {
      SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v15 = v2[2];
      uint64_t v16 = (void *)v2[3];
      goto LABEL_9;
    }
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    uint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v13);
  uint64_t v15 = v7;
  uint64_t v16 = v9;
LABEL_9:
  SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v15);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
  return SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v6, a1);
}

char *sub_25C045C84()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)v1[7];
  if (v5)
  {
    uint64_t v6 = v1[6];
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v53);
    uint64_t v45 = v54;
    uint64_t v46 = v53;
    uint64_t v43 = v56;
    uint64_t v44 = v55;
    int v42 = v57;
    uint64_t v41 = v58;
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
    v8._countAndFlagsBits = v6;
    v8._object = v5;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v8);
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
    SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v4, (uint64_t)&v47);
    uint64_t v10 = v48;
    uint64_t v40 = v47;
    uint64_t v11 = v49;
    uint64_t v12 = v50;
    char v13 = v51;
    uint64_t v14 = v52;
    uint64_t v15 = sub_25C04A0D8(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v17 = *((void *)v15 + 2);
    unint64_t v16 = *((void *)v15 + 3);
    if (v17 >= v16 >> 1) {
      uint64_t v15 = sub_25C04A0D8((char *)(v16 > 1), v17 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v17 + 1;
    Swift::String v18 = &v15[96 * v17];
    uint64_t v19 = v45;
    *((void *)v18 + 4) = v46;
    *((void *)v18 + 5) = v19;
    uint64_t v20 = v43;
    *((void *)v18 + 6) = v44;
    *((void *)v18 + 7) = v20;
    v18[64] = v42;
    uint64_t v21 = v40;
    *((void *)v18 + 9) = v41;
    *((void *)v18 + 10) = v21;
    *((void *)v18 + 11) = v10;
    *((void *)v18 + 12) = v11;
    *((void *)v18 + 13) = v12;
    v18[112] = v13;
    *((void *)v18 + 15) = v14;
    unint64_t v22 = (void *)v1[9];
    if (v22) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    unint64_t v22 = (void *)v1[9];
    if (v22)
    {
LABEL_5:
      uint64_t v23 = v1[8];
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v53);
      uint64_t v45 = v54;
      uint64_t v46 = v53;
      uint64_t v43 = v56;
      uint64_t v44 = v55;
      int v42 = v57;
      uint64_t v24 = v58;
      SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
      v26._countAndFlagsBits = v23;
      v26._object = v22;
      SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v26);
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v27);
      SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v4, (uint64_t)&v47);
      uint64_t v28 = v47;
      uint64_t v29 = v48;
      uint64_t v30 = v49;
      uint64_t v31 = v50;
      char v32 = v51;
      uint64_t v33 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_25C04A0D8(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      unint64_t v35 = *((void *)v15 + 2);
      unint64_t v34 = *((void *)v15 + 3);
      if (v35 >= v34 >> 1) {
        uint64_t v15 = sub_25C04A0D8((char *)(v34 > 1), v35 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v35 + 1;
      char v36 = &v15[96 * v35];
      uint64_t v37 = v45;
      *((void *)v36 + 4) = v46;
      *((void *)v36 + 5) = v37;
      uint64_t v38 = v43;
      *((void *)v36 + 6) = v44;
      *((void *)v36 + 7) = v38;
      v36[64] = v42;
      *((void *)v36 + 9) = v24;
      *((void *)v36 + 10) = v28;
      *((void *)v36 + 11) = v29;
      *((void *)v36 + 12) = v30;
      *((void *)v36 + 13) = v31;
      v36[112] = v32;
      *((void *)v36 + 15) = v33;
      return v15;
    }
  }
  if (!*((void *)v15 + 2))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v15;
}

uint64_t sub_25C045FC0@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_25C0EB8E8();
  *a1 = v4;
  a1[1] = v5;
  return result;
}

uint64_t sub_25C046018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v7 = (void *)v2[1];
  if (v7)
  {
    uint64_t v8 = *v2;
LABEL_5:
    swift_bridgeObjectRetain();
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
    v10._countAndFlagsBits = v8;
    v10._object = v7;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v10);
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = 0x5245444E455320;
    v11._object = (void *)0xE700000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
    SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v6, (uint64_t)v33);
    goto LABEL_6;
  }
  Swift::String v7 = (void *)v2[5];
  if (v7)
  {
    uint64_t v8 = v2[4];
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v33);
LABEL_6:
  uint64_t v12 = v33[0];
  uint64_t v13 = v33[1];
  uint64_t v14 = v33[2];
  uint64_t v15 = v33[3];
  char v16 = v34;
  uint64_t v17 = v35;
  sub_25C0516EC((uint64_t)(v2 + 2), (uint64_t)v36, &qword_26A588770);
  sub_25C0516EC((uint64_t)v36, (uint64_t)&v37, &qword_26A588770);
  Swift::String v18 = v38;
  if (v38)
  {
    uint64_t v19 = v37;
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v20);
    v21._countAndFlagsBits = v19;
    v21._object = v18;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v21);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t result = SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v6, (uint64_t)v30);
  }
  else
  {
    uint64_t result = SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v30);
  }
  uint64_t v24 = v30[0];
  uint64_t v25 = v30[1];
  uint64_t v26 = v30[2];
  uint64_t v27 = v30[3];
  char v28 = v31;
  uint64_t v29 = v32;
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v15;
  *(unsigned char *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v17;
  *(void *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = v25;
  *(void *)(a1 + 64) = v26;
  *(void *)(a1 + 72) = v27;
  *(unsigned char *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  return result;
}

double sub_25C046210@<D0>(uint64_t a1@<X8>)
{
  return sub_25C0462B8(a1);
}

double sub_25C046248@<D0>(uint64_t a1@<X8>)
{
  return sub_25C0462B8(a1);
}

double sub_25C046280@<D0>(uint64_t a1@<X8>)
{
  return sub_25C0462B8(a1);
}

double sub_25C0462B8@<D0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v7);
  double result = *(double *)&v7;
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  char v5 = v10;
  uint64_t v6 = v11;
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  return result;
}

double sub_25C046334@<D0>(uint64_t a1@<X8>)
{
  return sub_25C046468(a1);
}

double sub_25C046370@<D0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v7);
  double result = *(double *)&v7;
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  char v5 = v10;
  uint64_t v6 = v11;
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  return result;
}

double sub_25C04642C@<D0>(uint64_t a1@<X8>)
{
  return sub_25C046468(a1);
}

double sub_25C046468@<D0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v7);
  double result = *(double *)&v7;
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  char v5 = v10;
  uint64_t v6 = v11;
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  return result;
}

double sub_25C04650C@<D0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v7);
  double result = *(double *)&v7;
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  char v5 = v10;
  uint64_t v6 = v11;
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_25C0465A8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    double result = SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v9);
    uint64_t v3 = v9[0];
    uint64_t v4 = v9[1];
    uint64_t v5 = v9[2];
    uint64_t v6 = v9[3];
    uint64_t v7 = v10;
    uint64_t v8 = v11;
  }
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  return result;
}

id sub_25C046634()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087A8]), sel_init);
  qword_26A58CC38 = (uint64_t)result;
  return result;
}

id sub_25C046668()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087A8]), sel_init);
  qword_26A58CC48 = (uint64_t)result;
  return result;
}

uint64_t sub_25C04669C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Report.Evidence(0);
  uint64_t v5 = swift_bridgeObjectRetain();
  size_t v6 = sub_25C03E650(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25C051750(v6, MEMORY[0x263F8F390]);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = sub_25C03E650(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_25C051750(v10, MEMORY[0x263F8F398]);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease();
  uint64_t v41 = a1;
  SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v13);
  if (v8 == 1)
  {
    uint64_t v42 = 1;
    sub_25C051A34();
    SCLocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:)();
    uint64_t v14 = 0x4F544F485020;
    unint64_t v15 = 0xE600000000000000;
  }
  else
  {
    uint64_t v42 = v8;
    sub_25C051A34();
    SCLocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:)();
    uint64_t v14 = 0x534F544F485020;
    unint64_t v15 = 0xE700000000000000;
  }
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v14);
  SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v4, (uint64_t)&v42);
  uint64_t v37 = v44;
  uint64_t v38 = v42;
  uint64_t v39 = v45;
  uint64_t v40 = v43;
  int v36 = v46;
  uint64_t v16 = v47;
  if (v12 == 1)
  {
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
    uint64_t v42 = 1;
    sub_25C051A34();
    SCLocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:)();
    v18._countAndFlagsBits = 0x4F4544495620;
    v18._object = (void *)0xE600000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v18);
    SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v4, (uint64_t)&v42);
    uint64_t v19 = v42;
    uint64_t v20 = v43;
    uint64_t v21 = v44;
    uint64_t v22 = v45;
    unsigned __int8 v23 = v46;
    uint64_t v24 = v47;
    if (!v8) {
      goto LABEL_11;
    }
LABEL_9:
    SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v42 = v38;
    uint64_t v43 = v40;
    uint64_t v44 = v37;
    uint64_t v45 = v39;
    unsigned __int8 v46 = v36;
    uint64_t v47 = v16;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 8236;
    v28._object = (void *)0xE200000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v42 = v19;
    uint64_t v43 = v20;
    uint64_t v44 = v21;
    uint64_t v45 = v22;
    unsigned __int8 v46 = v23;
    uint64_t v47 = v24;
    SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v29);
    return SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v4, (uint64_t)v41);
  }
  SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
  uint64_t v42 = v12;
  sub_25C051A34();
  SCLocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:)();
  v26._countAndFlagsBits = 0x534F4544495620;
  v26._object = (void *)0xE700000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
  SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v4, (uint64_t)&v42);
  uint64_t v19 = v42;
  uint64_t v20 = v43;
  uint64_t v21 = v44;
  uint64_t v22 = v45;
  unsigned __int8 v23 = v46;
  uint64_t v24 = v47;
  if (v8)
  {
    if (v12) {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v32 = v41;
    uint64_t v33 = v40;
    *uint64_t v41 = v38;
    v32[1] = v33;
    uint64_t v34 = v39;
    v32[2] = v37;
    v32[3] = v34;
    *((unsigned char *)v32 + 32) = v36;
    v32[5] = v16;
  }
  else
  {
    if (v12)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v31 = v41;
      *uint64_t v41 = v19;
      v31[1] = v20;
      v31[2] = v21;
      v31[3] = v22;
      *((unsigned char *)v31 + 32) = v23;
      v31[5] = v24;
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v41);
  }
  return result;
}

uint64_t sub_25C046B10()
{
  return sub_25C046B28(MEMORY[0x263F8F398]);
}

uint64_t sub_25C046B28(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_25C0EA4E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  size_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  LOBYTE(a1) = sub_25C0EA4D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return a1 & 1;
}

uint64_t sub_25C046C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x534547415353454DLL;
  v6._object = (void *)0xEE0020485449575FLL;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v6);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for Report.Evidence(0) + 28));
  int64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v26 = a1;
    Swift::String v27 = (char *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25C04A234(0, v8, 0);
    uint64_t v9 = v27;
    size_t v10 = (unint64_t *)(v7 + 40);
    do
    {
      if (*v10)
      {
        uint64_t v11 = *(v10 - 1);
        unint64_t v12 = *v10;
      }
      else
      {
        uint64_t v11 = 0;
        unint64_t v12 = 0xE000000000000000;
      }
      Swift::String v27 = v9;
      unint64_t v14 = *((void *)v9 + 2);
      unint64_t v13 = *((void *)v9 + 3);
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
      {
        sub_25C04A234((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v9 = v27;
      }
      *((void *)v9 + 2) = v14 + 1;
      unint64_t v15 = &v9[16 * v14];
      *((void *)v15 + 4) = v11;
      *((void *)v15 + 5) = v12;
      v10 += 21;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    a1 = v26;
  }
  sub_25C051A88((uint64_t)v9);
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_bridgeObjectRetain();
  Swift::String v17 = (char *)sub_25C04A650(v16);
  swift_bridgeObjectRelease();
  Swift::String v27 = v17;
  sub_25C04A8E8(&v27);
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v27 + 2);
  if (v18)
  {
    if (v18 == 1)
    {
      uint64_t v19 = *((void *)v27 + 4);
      uint64_t v20 = (void *)*((void *)v27 + 5);
      swift_bridgeObjectRetain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588900);
      sub_25C0583D0(&qword_26A588908, &qword_26A588900);
      uint64_t v19 = sub_25C0EB788();
      uint64_t v20 = v21;
    }
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v19 = 0;
    uint64_t v20 = (void *)0xE000000000000000;
  }
  v22._countAndFlagsBits = v19;
  v22._object = v20;
  SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v23);
  return SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v5, a1);
}

uint64_t sub_25C046EB8@<X0>(uint64_t *a1@<X8>)
{
  v106 = a1;
  uint64_t v2 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v2 - 8);
  long long v94 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25C0EA028();
  uint64_t v98 = *(void *)(v4 - 8);
  uint64_t v99 = v4;
  MEMORY[0x270FA5388](v4);
  long long v97 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25C0EA418();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  v100 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v103 = (char *)&v86 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  Swift::String v17 = (char *)&v86 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v86 - v18;
  uint64_t v20 = sub_25C0EA328();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  long long v96 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  long long v95 = (char *)&v86 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unsigned __int8 v101 = (char *)&v86 - v27;
  MEMORY[0x270FA5388](v26);
  Swift::String v29 = (char *)&v86 - v28;
  uint64_t v30 = *(int *)(type metadata accessor for Report.Evidence(0) + 52);
  uint64_t v105 = v1;
  uint64_t v31 = *(void *)(v1 + v30);
  if (!*(void *)(v31 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    goto LABEL_15;
  }
  long long v91 = v9;
  uint64_t v89 = v7;
  uint64_t v90 = v6;
  v104 = v29;
  uint64_t v32 = *(void *)(type metadata accessor for Report.Message() - 8);
  unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
  uint64_t v92 = v21 + 16;
  long long v93 = v34;
  v34(v19, v31 + v33, v20);
  v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v102(v19, 0, 1, v20);
  uint64_t v35 = v21;
  int v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1)
  {
LABEL_15:
    sub_25C02FBF0((uint64_t)v19, &qword_26A589720);
    return SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v106);
  }
  uint64_t v88 = v35;
  long long v87 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v87(v104, v19, v20);
  uint64_t v37 = *(void *)(v105 + v30);
  uint64_t v38 = v20;
  if (!*(void *)(v37 + 16))
  {
    v102(v17, 1, 1, v20);
    goto LABEL_17;
  }
  v93(v17, v37 + v33, v20);
  v102(v17, 0, 1, v20);
  if (v36(v17, 1, v20) == 1)
  {
LABEL_17:
    sub_25C02FBF0((uint64_t)v17, &qword_26A589720);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v104, v20);
    return SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v106);
  }
  sub_25C02FBF0((uint64_t)v17, &qword_26A589720);
  uint64_t v39 = *(void *)(v105 + v30);
  uint64_t v40 = *(void *)(v39 + 16);
  if (!v40)
  {
    uint64_t v42 = (uint64_t)v103;
    v102(v103, 1, 1, v20);
    goto LABEL_20;
  }
  uint64_t v41 = *(void *)(v32 + 72);
  uint64_t v42 = (uint64_t)v103;
  v93(v103, v39 + v33 + v41 * (v40 - 1), v20);
  v102((char *)v42, 0, 1, v20);
  if (v36((char *)v42, 1, v20) == 1)
  {
LABEL_20:
    sub_25C02FBF0(v42, &qword_26A589720);
    uint64_t v55 = v88;
LABEL_23:
    uint64_t v56 = v104;
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v106);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v38);
  }
  uint64_t v43 = v101;
  v87(v101, (char *)v42, v38);
  uint64_t v44 = *(void *)(v105 + v30);
  uint64_t v45 = *(void *)(v44 + 16);
  if (!v45)
  {
    uint64_t v46 = (uint64_t)v100;
    v102(v100, 1, 1, v38);
    goto LABEL_22;
  }
  uint64_t v46 = (uint64_t)v100;
  v93(v100, v44 + v33 + (v45 - 1) * v41, v38);
  v102((char *)v46, 0, 1, v38);
  if (v36((char *)v46, 1, v38) == 1)
  {
LABEL_22:
    sub_25C02FBF0(v46, &qword_26A589720);
    uint64_t v55 = v88;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v43, v38);
    goto LABEL_23;
  }
  uint64_t v105 = v38;
  sub_25C02FBF0(v46, &qword_26A589720);
  sub_25C0EA408();
  uint64_t v47 = v104;
  if (sub_25C0EA3F8())
  {
    if (qword_26A58CC30 != -1) {
      swift_once();
    }
    uint64_t v48 = (void *)qword_26A58CC38;
    objc_msgSend((id)qword_26A58CC38, sel_setTimeStyle_, 1);
    objc_msgSend(v48, sel_setDateStyle_, 0);
    uint64_t v49 = v105;
    uint64_t v50 = (void (*)(char *, char *, uint64_t))v93;
    v93(v95, (unint64_t)v43, v105);
    v50(v96, v47, v49);
    char v51 = v97;
    sub_25C0EA018();
    uint64_t v52 = (void *)sub_25C0EA008();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v51, v99);
    id v53 = objc_msgSend(v48, sel_stringFromDateInterval_, v52);

    if (v53)
    {
      sub_25C0EB858();
    }
    SCLocalizedStringKey.init(rawValue:)(&v107);
    uint64_t v57 = v108;
    if (v108)
    {
      uint64_t v58 = v112;
      uint64_t v59 = v109;
      uint64_t v60 = v110;
      uint64_t v61 = v107;
      uint64_t v113 = v107;
      uint64_t v114 = v108;
      char v62 = v111 & 1;
    }
    else
    {
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v113);
      uint64_t v61 = v113;
      uint64_t v57 = v114;
      uint64_t v59 = v115;
      uint64_t v60 = v116;
      char v62 = v117;
      uint64_t v58 = v118;
    }
    uint64_t v43 = v101;
    uint64_t v63 = v91;
    if (sub_25C0EA3D8())
    {
      uint64_t v64 = (uint64_t)v94;
      SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      uint64_t v65 = 0x202C5941444F54;
      unint64_t v66 = 0xE700000000000000;
LABEL_31:
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v65);
      uint64_t v113 = v61;
      uint64_t v114 = v57;
      uint64_t v115 = v59;
      uint64_t v116 = v60;
      char v117 = v62;
      uint64_t v118 = v58;
      SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v67._countAndFlagsBits = 0;
      v67._object = (void *)0xE000000000000000;
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v67);
      SCLocalizedStringKey.init(stringInterpolation:)(v64, (uint64_t)v106);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v63, v90);
      unint64_t v68 = *(void (**)(char *, uint64_t))(v88 + 8);
      uint64_t v69 = v105;
      v68(v43, v105);
      return ((uint64_t (*)(char *, uint64_t))v68)(v47, v69);
    }
    if (sub_25C0EA3E8())
    {
      uint64_t v64 = (uint64_t)v94;
      SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      uint64_t v65 = 0x4144524554534559;
      unint64_t v66 = 0xEB00000000202C59;
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_26A58CC40 != -1) {
    swift_once();
  }
  uint64_t v70 = (void *)qword_26A58CC48;
  objc_msgSend((id)qword_26A58CC48, sel_setTimeStyle_, 1);
  objc_msgSend(v70, sel_setDateStyle_, 1);
  uint64_t v71 = v105;
  uint64_t v72 = (void (*)(char *, char *, uint64_t))v93;
  v93(v95, (unint64_t)v43, v105);
  v72(v96, v47, v71);
  uint64_t v73 = v97;
  sub_25C0EA018();
  uint64_t v74 = (void *)sub_25C0EA008();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v73, v99);
  id v75 = objc_msgSend(v70, sel_stringFromDateInterval_, v74);

  if (v75)
  {
    sub_25C0EB858();
  }
  SCLocalizedStringKey.init(rawValue:)(&v113);
  uint64_t v76 = v114;
  if (v114)
  {
    uint64_t v77 = v118;
    char v78 = v117;
    uint64_t v80 = v115;
    uint64_t v79 = v116;
    uint64_t v81 = v113;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v91, v90);
    long long v82 = v43;
    uint64_t v83 = *(void (**)(char *, uint64_t))(v88 + 8);
    v83(v82, v71);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v83)(v47, v71);
    long long v84 = v106;
    uint64_t *v106 = v81;
    v84[1] = v76;
    v84[2] = v80;
    v84[3] = v79;
    *((unsigned char *)v84 + 32) = v78 & 1;
    v84[5] = v77;
  }
  else
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v106);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v91, v90);
    long long v85 = *(void (**)(char *, uint64_t))(v88 + 8);
    v85(v43, v71);
    return ((uint64_t (*)(char *, uint64_t))v85)(v47, v71);
  }
  return result;
}

uint64_t sub_25C047B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Report.Evidence(0) + 28));
  int64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v46 = a1;
    v47[0] = (char *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25C04A234(0, v7, 0);
    uint64_t v8 = v47[0];
    uint64_t v9 = (unint64_t *)(v6 + 40);
    do
    {
      if (*v9)
      {
        uint64_t v10 = *(v9 - 1);
        unint64_t v11 = *v9;
      }
      else
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0xE000000000000000;
      }
      v47[0] = v8;
      unint64_t v13 = *((void *)v8 + 2);
      unint64_t v12 = *((void *)v8 + 3);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
      {
        sub_25C04A234((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v8 = v47[0];
      }
      *((void *)v8 + 2) = v13 + 1;
      uint64_t v14 = &v8[16 * v13];
      *((void *)v14 + 4) = v10;
      *((void *)v14 + 5) = v11;
      v9 += 21;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    a1 = v46;
  }
  sub_25C051A88((uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = (char *)sub_25C04A650(v15);
  swift_bridgeObjectRelease();
  v47[0] = v16;
  sub_25C04A8E8(v47);
  swift_bridgeObjectRelease();
  Swift::String v17 = v47[0];
  uint64_t v48 = v47[0];
  swift_retain();
  sub_25C04BCEC(0, 0, 7696217, 0xE300000000000000);
  uint64_t v18 = *((void *)v17 + 2);
  swift_release();
  if (v18)
  {
    if (v18 == 1)
    {
      SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t v20 = v48;
      if (*((void *)v48 + 2))
      {
        uint64_t v21 = *((void *)v48 + 4);
        uint64_t v22 = (void *)*((void *)v48 + 5);
        swift_bridgeObjectRetain();
        v23._countAndFlagsBits = v21;
        v23._object = v22;
        SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v23);
        swift_bridgeObjectRelease();
        v24._countAndFlagsBits = 0x20646E6120;
        v24._object = (void *)0xE500000000000000;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
        if (*((void *)v20 + 2) >= 2uLL)
        {
          uint64_t v25 = *((void *)v20 + 6);
          uint64_t v26 = (void *)*((void *)v20 + 7);
          swift_bridgeObjectRetain();
          v27._countAndFlagsBits = v25;
          v27._object = v26;
          SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v27);
LABEL_23:
          swift_bridgeObjectRelease();
          v44._countAndFlagsBits = 0;
          v44._object = (void *)0xE000000000000000;
          SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v44);
          SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v5, a1);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_26;
      }
      __break(1u);
    }
    else
    {
      Swift::String v29 = v48;
      unint64_t v30 = *((void *)v48 + 2);
      uint64_t v31 = v48 + 32;
      if (v30 <= 1) {
        uint64_t v32 = 1;
      }
      else {
        uint64_t v32 = 2 * v30 - 1;
      }
      v47[0] = v48;
      v47[1] = v48 + 32;
      v47[2] = 0;
      v47[3] = (char *)v32;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588970);
      sub_25C0583D0(&qword_26A588978, &qword_26A588970);
      uint64_t v33 = sub_25C0EB788();
      uint64_t v35 = v34;
      swift_unknownObjectRelease();
      uint64_t v36 = *((void *)v29 + 2);
      if (v36)
      {
        uint64_t v37 = &v31[16 * v36];
        uint64_t v38 = *((void *)v37 - 2);
        uint64_t v39 = (void *)*((void *)v37 - 1);
        swift_bridgeObjectRetain();
        SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v40._countAndFlagsBits = 0;
        v40._object = (void *)0xE000000000000000;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v40);
        v41._countAndFlagsBits = v33;
        v41._object = v35;
        SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v41);
        swift_bridgeObjectRelease();
        v42._countAndFlagsBits = 0x20646E61202CLL;
        v42._object = (void *)0xE600000000000000;
        SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v42);
        v43._countAndFlagsBits = v38;
        v43._object = v39;
        SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v43);
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  SCLocalizedStringKey.init(stringLiteral:)(a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C047F58()
{
  return sub_25C0EBE78();
}

uint64_t sub_25C047FE0()
{
  uint64_t v31 = sub_25C0EA238();
  uint64_t v1 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  unint64_t v30 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Report.Media(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Report.Message();
  uint64_t v8 = *(int *)(v7 + 32);
  uint64_t v9 = (uint64_t *)(v0 + *(int *)(v7 + 28));
  uint64_t v11 = *v9;
  unint64_t v10 = v9[1];
  uint64_t v33 = 32;
  unint64_t v34 = 0xE100000000000000;
  uint64_t v12 = *(void *)(v0 + v8);
  int64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v27 = v11;
    unint64_t v28 = v10;
    uint64_t v32 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25C04A234(0, v13, 0);
    uint64_t v15 = *(unsigned __int8 *)(v4 + 80);
    v26[1] = v12;
    uint64_t v16 = v12 + ((v15 + 32) & ~v15);
    uint64_t v29 = *(void *)(v4 + 72);
    Swift::String v17 = (void (**)(char *, uint64_t))(v1 + 8);
    do
    {
      sub_25C04D1C4(v16, (uint64_t)v6, type metadata accessor for Report.Media);
      uint64_t v18 = v30;
      sub_25C0EA1B8();
      uint64_t v19 = sub_25C0EA198();
      uint64_t v21 = v20;
      (*v17)(v18, v31);
      sub_25C04F040((uint64_t)v6, type metadata accessor for Report.Media);
      uint64_t v14 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25C04A234(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v32;
      }
      unint64_t v23 = *(void *)(v14 + 16);
      unint64_t v22 = *(void *)(v14 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_25C04A234((char *)(v22 > 1), v23 + 1, 1);
        uint64_t v14 = v32;
      }
      *(void *)(v14 + 16) = v23 + 1;
      uint64_t v24 = v14 + 16 * v23;
      *(void *)(v24 + 32) = v19;
      *(void *)(v24 + 40) = v21;
      v16 += v29;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v11 = v27;
    unint64_t v10 = v28;
  }
  uint64_t v32 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588900);
  sub_25C0583D0(&qword_26A588908, &qword_26A588900);
  sub_25C0EB788();
  swift_bridgeObjectRelease();
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  uint64_t v33 = v11;
  unint64_t v34 = v10;
  swift_bridgeObjectRetain();
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t String.hasEmailPrefix.getter()
{
  uint64_t v0 = (void *)sub_25C0EB828();
  uint64_t IsEmail = IMStringIsEmail();

  return IsEmail;
}

double sub_25C04835C@<D0>(uint64_t a1@<X8>)
{
  return sub_25C04837C(a1);
}

double sub_25C04837C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25C0EA4E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA4B8();
  char v6 = sub_25C0EA4D8();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v7(v5, v2);
  if (v6 & 1) != 0 || (sub_25C0EA4C8(), char v8 = sub_25C0EA4D8(), v7(v5, v2), (v8))
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v14);
    double result = *(double *)&v14;
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    *(_OWORD *)a1 = v14;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

unint64_t sub_25C0484EC(char a1)
{
  unint64_t result = 0x555574726F706572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x695474726F706572;
      break;
    case 2:
      unint64_t result = 0x746163696C707061;
      break;
    case 3:
      unint64_t result = 0x6556616D65686373;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x726574726F706572;
      break;
    case 6:
      unint64_t result = 0x74726F706572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25C0485F8(char a1)
{
  unint64_t result = 0x555574726F706572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x695474726F706572;
      break;
    case 2:
      unint64_t result = 0x746163696C707061;
      break;
    case 3:
      unint64_t result = 0x6556616D65686373;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x726574726F706572;
      break;
    case 6:
      unint64_t result = 0x74726F706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25C048704(unsigned __int8 *a1, char *a2)
{
  return sub_25C03CDC0(*a1, *a2);
}

uint64_t sub_25C048710()
{
  return sub_25C03D59C();
}

uint64_t sub_25C04871C()
{
  return sub_25C03D410();
}

uint64_t sub_25C048724()
{
  return sub_25C03D59C();
}

uint64_t sub_25C04872C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C058018();
  *a1 = result;
  return result;
}

unint64_t sub_25C04875C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25C0484EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25C048788()
{
  return sub_25C0485F8(*v0);
}

uint64_t sub_25C048790@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C058018();
  *a1 = result;
  return result;
}

uint64_t sub_25C0487B8(uint64_t a1)
{
  unint64_t v2 = sub_25C04D22C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0487F4(uint64_t a1)
{
  unint64_t v2 = sub_25C04D22C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C048830(char *a1, char *a2)
{
  return sub_25C03D054(*a1, *a2);
}

uint64_t sub_25C04883C()
{
  return sub_25C0EC368();
}

uint64_t sub_25C0488C4()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C048938()
{
  return sub_25C0EC368();
}

uint64_t sub_25C0489BC@<X0>(char *a1@<X8>)
{
  return sub_25C049060(a1);
}

void sub_25C0489C8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000012;
  if (*v1) {
    unint64_t v2 = 0x736567617373656DLL;
  }
  unint64_t v3 = 0x800000025C0F5BD0;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25C048A0C()
{
  if (*v0) {
    return 0x736567617373656DLL;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_25C048A4C@<X0>(char *a1@<X8>)
{
  return sub_25C049164(a1);
}

void sub_25C048A58(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25C048A64(uint64_t a1)
{
  unint64_t v2 = sub_25C04D380();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C048AA0(uint64_t a1)
{
  unint64_t v2 = sub_25C04D380();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C048ADC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25C03CC8C(*a1, *a2);
}

uint64_t sub_25C048AE8()
{
  return sub_25C0EC368();
}

uint64_t sub_25C048B9C()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C048C3C()
{
  return sub_25C0EC368();
}

uint64_t sub_25C048CEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C058064();
  *a1 = result;
  return result;
}

void sub_25C048D1C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x800000025C0F5C00;
  unint64_t v5 = 0xD00000000000001ALL;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6E61725474616863;
    unint64_t v4 = 0xEE00747069726373;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x65636976726573;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25C048D8C()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0x6E61725474616863;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65636976726573;
  }
}

uint64_t sub_25C048DF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C058064();
  *a1 = result;
  return result;
}

void sub_25C048E20(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25C048E2C(uint64_t a1)
{
  unint64_t v2 = sub_25C04D3D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C048E68(uint64_t a1)
{
  unint64_t v2 = sub_25C04D3D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C048EA4(char *a1, char *a2)
{
  return sub_25C03D100(*a1, *a2);
}

uint64_t sub_25C048EB0()
{
  return sub_25C0EC368();
}

uint64_t sub_25C048F44()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C048FC4()
{
  return sub_25C0EC368();
}

uint64_t sub_25C049054@<X0>(char *a1@<X8>)
{
  return sub_25C049060(a1);
}

uint64_t sub_25C049060@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25C0EC0E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_25C0490BC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6464416C69616D65;
  if (*v1) {
    uint64_t v2 = 0x6D754E656E6F6870;
  }
  unint64_t v3 = 0xEC00000073736572;
  if (*v1) {
    unint64_t v3 = 0xEB00000000726562;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25C04910C()
{
  if (*v0) {
    return 0x6D754E656E6F6870;
  }
  else {
    return 0x6464416C69616D65;
  }
}

uint64_t sub_25C049158@<X0>(char *a1@<X8>)
{
  return sub_25C049164(a1);
}

uint64_t sub_25C049164@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25C0EC0E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_25C0491C4(uint64_t a1)
{
  unint64_t v2 = sub_25C04F354();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C049200(uint64_t a1)
{
  unint64_t v2 = sub_25C04F354();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C04923C(unsigned __int8 *a1, char *a2)
{
  return sub_25C03D1B8(*a1, *a2);
}

uint64_t sub_25C049248()
{
  return sub_25C0EC368();
}

uint64_t sub_25C049368()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C049464()
{
  return sub_25C0EC368();
}

uint64_t sub_25C049580@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C0580B0();
  *a1 = result;
  return result;
}

void sub_25C0495B0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xED0000495455746ELL;
  uint64_t v3 = 0x656D686361747461;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED00007265676769;
      uint64_t v3 = 0x7254797465666173;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x68736148746ELL;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x44495555746ELL;
LABEL_6:
      *(void *)a1 = 0x656D686361747461;
      *(void *)(a1 + 8) = v4 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    case 4:
      strcpy((char *)a1, "numberOfChunks");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_25C049680()
{
  uint64_t result = 0x656D686361747461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7254797465666173;
      break;
    case 4:
      uint64_t result = 0x664F7265626D756ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25C049748@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C0580B0();
  *a1 = result;
  return result;
}

uint64_t sub_25C049770(uint64_t a1)
{
  unint64_t v2 = sub_25C050B28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0497AC(uint64_t a1)
{
  unint64_t v2 = sub_25C050B28();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_25C0497E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_25C0497F4(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_25C0497FC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_25C049810@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_25C049824@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_25C049838(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_25C049868@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_25C049894@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_25C0498B8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_25C0498CC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_25C0498E0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_25C0498F4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_25C049908(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_25C04991C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_25C049930(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_25C049944()
{
  return *v0 == 0;
}

uint64_t sub_25C049954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_25C04996C(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_25C049980@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_25C0580FC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_25C0499C0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_25C034EC8(a2, a3);
      uint64_t v10 = (char *)sub_25C0EA048();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_25C0EA068();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_25C0EA058();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x25C049C24);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_25C035294(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unsigned __int8 v17 = (char *)sub_25C0EA048();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_25C0EA068();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_25C0EA058();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_25C049C34(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25C0EC088();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25C0EC088();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x26117D930](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *unint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_25C04BE1C(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25C0EC088();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_25C0EB9E8();
}

size_t sub_25C049E00(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    BOOL v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A28);
  uint64_t v10 = *(void *)(type metadata accessor for Report.Media(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  BOOL v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Report.Media(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_25C049FD4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25C04A0D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25C04A1F4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25C04A254(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_25C04A214(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_25C04A378(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_25C04A234(char *a1, int64_t a2, char a3)
{
  size_t result = sub_25C04A54C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_25C04A254(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A98);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 168);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[168 * v8]) {
      memmove(v12, v13, 168 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_25C04A378(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    BOOL v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A28);
  uint64_t v10 = *(void *)(type metadata accessor for Report.Media(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  BOOL v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Report.Media(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_25C04A54C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_25C04A650(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A10);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_25C04C124((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25C058188();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_25C04A738(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25C0EC348();
  swift_bridgeObjectRetain();
  sub_25C0EB8C8();
  uint64_t v8 = sub_25C0EC368();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_25C0EC268() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_25C0EC268() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_25C04B6EC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_25C04A8E8(char **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_25C04C324((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_25C04A954(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_25C04A954(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25C0EC228();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_25C04AFFC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  uint64_t v98 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    v104 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_117:
      uint64_t result = v10;
      uint64_t v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_25C04B0CC((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_25C04B3F8(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          long long v96 = (void *)(v93 + 32 + 16 * v92);
          *long long v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v100 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_25C0EBA18();
    *(void *)(result + 16) = v6;
    uint64_t v100 = result;
    v104 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v102 = v3;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    BOOL v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    uint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_25C0EC268();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    BOOL v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_25C0EC268();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      uint64_t v20 = v18 + 1;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        uint64_t v25 = v18;
        uint64_t v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_25C04B2FC(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v38 = *(void *)(v10 + 16);
    unint64_t v37 = *(void *)(v10 + 24);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_25C04B2FC((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v39 = v10 + 32;
    Swift::String v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *Swift::String v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      uint64_t v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v46 = v39 + 16 * v11;
          uint64_t v47 = *(void *)(v46 - 64);
          uint64_t v48 = *(void *)(v46 - 56);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(void *)(v46 - 48);
          uint64_t v50 = *(void *)(v46 - 40);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          uint64_t v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = (uint64_t *)(v39 + 16 * v41);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *(void *)(v10 + 32);
            uint64_t v71 = *(void *)(v10 + 40);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *(void *)(v10 + 32);
          uint64_t v42 = *(void *)(v10 + 40);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        uint64_t v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        uint64_t v65 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        uint64_t v83 = (uint64_t *)(v39 + 16 * v80);
        uint64_t v84 = *v83;
        uint64_t v85 = v39;
        unint64_t v86 = v41;
        long long v87 = (void *)(v39 + 16 * v41);
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_25C04B0CC((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *(void *)(v82 + 16)) {
          goto LABEL_132;
        }
        uint64_t *v83 = v84;
        *(void *)(v85 + 16 * v80 + 8) = v88;
        unint64_t v90 = *(void *)(v82 + 16);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        uint64_t v39 = v85;
        *(void *)(v82 + 16) = v90 - 1;
        uint64_t v9 = v89;
        uint64_t v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v102;
    if (v8 >= v102)
    {
      uint64_t v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      uint64_t v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        uint64_t v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        uint64_t v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_25C0EC268();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)uint64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      uint64_t v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_25C04AFFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_25C0EC268(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25C04B0CC(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v18 = v17 + 16;
      BOOL v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_25C0EC268() & 1) == 0)
      {
        BOOL v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_25C0EC268() & 1) == 0) {
        break;
      }
      unint64_t v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    unint64_t v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

char *sub_25C04B2FC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A18);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25C04B3F8(uint64_t a1)
{
  return sub_25C04B2FC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25C04B40C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A20);
  uint64_t v3 = sub_25C0EBF38();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_25C0EC348();
      sub_25C0EB8C8();
      uint64_t result = sub_25C0EC368();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25C04B6EC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_25C04B40C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_25C04B888();
      goto LABEL_22;
    }
    sub_25C04BA3C();
  }
  uint64_t v11 = *v4;
  sub_25C0EC348();
  sub_25C0EB8C8();
  uint64_t result = sub_25C0EC368();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_25C0EC268(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_25C0EC288();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_25C0EC268();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_25C04B888()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25C0EBF28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25C04BA3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A20);
  uint64_t v3 = sub_25C0EBF38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25C0EC348();
    swift_bridgeObjectRetain();
    sub_25C0EB8C8();
    uint64_t result = sub_25C0EC368();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_25C04BCEC(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = result;
  unint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_25C049FD4(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  int64_t v16 = &v6[16 * v8 + 32];
  uint64_t result = swift_arrayDestroy();
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v16 + 16);
  uint64_t v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19]) {
    uint64_t result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  }
  uint64_t v21 = *((void *)v6 + 2);
  BOOL v18 = __OFADD__(v21, v10);
  uint64_t v22 = v21 + v10;
  if (!v18)
  {
    *((void *)v6 + 2) = v22;
LABEL_19:
    *(void *)int64_t v16 = a3;
    *((void *)v16 + 1) = a4;
    *uint64_t v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25C04BE1C(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_25C0EC088();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_25C0EC088();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_25C0583D0(&qword_26A588A88, &qword_26A588A80);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A80);
            unint64_t v10 = sub_25C04BFEC(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void (**)(id *), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_25C031870(0, &qword_26A588728);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_25C04BFEC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25C04C09C(v6, a2, a3);
  return sub_25C04C054;
}

void sub_25C04C054(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_25C04C09C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x26117D920](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_25C04C11C;
  }
  __break(1u);
  return result;
}

void sub_25C04C11C(id *a1)
{
}

uint64_t sub_25C04C124(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

char *sub_25C04C324(uint64_t a1)
{
  return sub_25C04A54C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25C04C338@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_address);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v29 = sub_25C0EB858();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(a1, sel_city);
  if (v8)
  {
    unint64_t v9 = v8;
    uint64_t v28 = sub_25C0EB858();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v11 = 0;
  }
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(a1, sel_state);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v27 = sub_25C0EB858();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(a1, sel_country);
  if (v16)
  {
    int64_t v17 = v16;
    uint64_t v18 = sub_25C0EB858();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(a1, sel_postCode);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_25C0EB858();
    uint64_t v25 = v24;
  }
  else
  {

    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v29;
  a2[1] = v7;
  a2[2] = v28;
  a2[3] = v11;
  a2[4] = v27;
  a2[5] = v15;
  a2[6] = v18;
  a2[7] = v20;
  a2[8] = v23;
  a2[9] = v25;
  return result;
}

uint64_t sub_25C04C514@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v111 = a2;
  uint64_t v122 = sub_25C0EA358();
  v143 = *(char **)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  unsigned __int8 v121 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888D0);
  MEMORY[0x270FA5388](v4 - 8);
  v136 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_25C0EA4E8();
  uint64_t v6 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  v120 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v140 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25C0EA238();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v139 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A90);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v133 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for Report.Media(0);
  uint64_t v123 = *(void *)(v142 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v142);
  uint64_t v132 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v138 = (char *)&v102 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v119 = (uint64_t)&v102 - v19;
  id v20 = objc_msgSend(a1, sel_displayName);
  uint64_t v113 = sub_25C0EB858();
  uint64_t v22 = v21;

  swift_bridgeObjectRetain();
  id v23 = objc_msgSend(a1, sel_accountID);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = sub_25C0EB858();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  uint64_t v134 = v10;
  swift_bridgeObjectRetain();
  id v28 = objc_msgSend(a1, sel_fullName);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v106 = sub_25C0EB858();
    uint64_t v31 = v30;

    id v28 = v31;
  }
  else
  {
    uint64_t v106 = 0;
  }
  id v105 = v28;
  swift_bridgeObjectRetain();
  id v32 = objc_msgSend(a1, sel_emailAddress);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v104 = sub_25C0EB858();
    uint64_t v35 = v34;

    id v32 = v35;
  }
  else
  {
    uint64_t v104 = 0;
  }
  id v103 = v32;
  swift_bridgeObjectRetain();
  id v36 = objc_msgSend(a1, sel_phoneNumber);
  if (v36)
  {
    unint64_t v37 = v36;
    uint64_t v38 = sub_25C0EB858();
    Swift::String v40 = v39;

    id v36 = v40;
  }
  else
  {
    uint64_t v38 = 0;
  }
  id v102 = v36;
  swift_bridgeObjectRetain();
  id v41 = objc_msgSend(a1, sel_sensitiveMediaFiles);
  sub_25C031870(0, &qword_26A588728);
  unint64_t v42 = sub_25C0EB9D8();

  unint64_t v43 = v42;
  unint64_t v137 = v42;
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v43 = v137;
    uint64_t result = sub_25C0EC088();
    uint64_t v44 = result;
  }
  else
  {
    uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v109 = v22;
  id v110 = a1;
  uint64_t v107 = v27;
  uint64_t v108 = v25;
  uint64_t v112 = v38;
  if (v44)
  {
    if (v44 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v46 = 0;
    unint64_t v128 = v43 & 0xC000000000000001;
    uint64_t v129 = v44;
    v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v127 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    char v117 = (void (**)(uint64_t, char *, uint64_t))(v11 + 16);
    uint64_t v118 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v47 = (int *)v142;
    uint64_t v115 = (void (**)(char *, uint64_t))(v143 + 8);
    uint64_t v116 = (void (**)(uint64_t, char *, uint64_t))(v6 + 16);
    uint64_t v114 = (void (**)(char *, uint64_t))(v6 + 8);
    v130 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v123 + 56);
    v131 = (void (**)(char *, uint64_t))(v11 + 8);
    v125 = (unsigned int (**)(uint64_t, uint64_t, int *))(v123 + 48);
    v141 = (void *)MEMORY[0x263F8EE78];
    long long v124 = xmmword_25C0EF5D0;
    uint64_t v48 = v140;
    uint64_t v49 = (uint64_t)v138;
    uint64_t v50 = v134;
    do
    {
      uint64_t v142 = v46;
      if (v128) {
        BOOL v52 = (char *)MEMORY[0x26117D920](v46, v43);
      }
      else {
        BOOL v52 = (char *)*(id *)(v43 + 8 * v46 + 32);
      }
      unint64_t v53 = v52;
      id v54 = [v52 url];
      sub_25C0EA1F8();

      id v55 = objc_msgSend(v53, sel_UTIType);
      sub_25C0EB858();

      sub_25C0B5FEC(v48);
      v143 = v53;
      LODWORD(v138) = objc_msgSend(v53, sel_wasImpetusOfReport);
      uint64_t v56 = v49 + v47[9];
      *(_OWORD *)uint64_t v56 = v124;
      uint64_t v57 = (void *)(v49 + v47[10]);
      *uint64_t v57 = 0;
      v57[1] = 0;
      uint64_t v58 = v49 + v47[11];
      (*v127)(v58, 1, 1, v50);
      uint64_t v59 = v49 + v47[12];
      *(void *)uint64_t v59 = 0;
      *(unsigned char *)(v59 + 8) = 1;
      uint64_t v60 = (uint64_t)v136;
      sub_25C0EA4F8();
      uint64_t v61 = v135;
      if ((*v126)(v60, 1, v135) == 1)
      {
        uint64_t v48 = v140;
        sub_25C02FBF0(v140, &qword_26A5888C8);
        (*v131)(v139, v50);
        sub_25C02FBF0(v60, &qword_26A5888D0);
        sub_25C03DA24(*(void *)v56, *(void *)(v56 + 8));
        swift_bridgeObjectRelease();
        sub_25C02FBF0(v58, &qword_26A589EC0);
        uint64_t v62 = v133;
        (*v130)(v133, 1, 1, v47);
      }
      else
      {
        uint64_t v63 = v120;
        (*v118)(v120, v60, v61);
        (*v117)(v49, v139, v50);
        (*v116)(v49 + v47[5], v63, v61);
        sub_25C02FB8C(v140, v49 + v47[6], &qword_26A5888C8);
        char v64 = v121;
        sub_25C0EA348();
        uint64_t v65 = sub_25C0EA338();
        uint64_t v67 = v66;
        (*v115)(v64, v122);
        uint64_t v68 = (uint64_t *)(v49 + v47[8]);
        uint64_t *v68 = v65;
        v68[1] = v67;
        uint64_t v69 = v140;
        sub_25C02FBF0(v140, &qword_26A5888C8);
        (*v131)(v139, v50);
        (*v114)(v63, v61);
        *(void *)uint64_t v59 = 0;
        *(unsigned char *)(v59 + 8) = 0;
        *(unsigned char *)(v49 + v47[7]) = (_BYTE)v138;
        uint64_t v62 = v133;
        sub_25C04D1C4(v49, v133, type metadata accessor for Report.Media);
        (*v130)(v62, 0, 1, v47);
        sub_25C04F040(v49, type metadata accessor for Report.Media);
        uint64_t v48 = v69;
      }

      if ((*v125)(v62, 1, v47) == 1)
      {
        sub_25C02FBF0(v62, &qword_26A588A90);
        unint64_t v43 = v137;
        uint64_t v51 = v142;
      }
      else
      {
        uint64_t v70 = v119;
        sub_25C051684(v62, v119, type metadata accessor for Report.Media);
        sub_25C051684(v70, v132, type metadata accessor for Report.Media);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v141 = (void *)sub_25C049E00(0, v141[2] + 1, 1, v141);
        }
        uint64_t v51 = v142;
        unint64_t v72 = v141[2];
        unint64_t v71 = v141[3];
        if (v72 >= v71 >> 1) {
          v141 = (void *)sub_25C049E00(v71 > 1, v72 + 1, 1, v141);
        }
        uint64_t v73 = v141;
        v141[2] = v72 + 1;
        sub_25C051684(v132, (uint64_t)v73+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(void *)(v123 + 72) * v72, type metadata accessor for Report.Media);
        unint64_t v43 = v137;
      }
      uint64_t v46 = v51 + 1;
    }
    while (v129 != v46);
  }
  else
  {
    v141 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v74 = v110;
  id v75 = objc_msgSend(v110, sel_address);
  if (v75)
  {
    id v76 = v75;
    sub_25C04C338(v76, v156);

    uint64_t v77 = v156[8];
    uint64_t v78 = (char *)v156[9];
    uint64_t v79 = v156[6];
    uint64_t v80 = v156[7];
    uint64_t v81 = v156[4];
    uint64_t v82 = v156[5];
    uint64_t v83 = v156[2];
    uint64_t v84 = v156[3];
    uint64_t v85 = v156[0];
    uint64_t v86 = v156[1];
  }
  else
  {

    uint64_t v85 = 0;
    uint64_t v86 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
  }
  uint64_t v133 = v85;
  uint64_t v134 = v86;
  uint64_t v135 = v83;
  v136 = (char *)v84;
  unint64_t v137 = v81;
  v138 = (char *)v82;
  v139 = (char *)v79;
  uint64_t v140 = v80;
  uint64_t v142 = v77;
  v143 = v78;
  uint64_t v88 = v108;
  uint64_t v87 = v109;
  *(void *)&long long v144 = v113;
  *((void *)&v144 + 1) = v109;
  uint64_t v90 = v106;
  uint64_t v89 = v107;
  *(void *)&long long v145 = v108;
  *((void *)&v145 + 1) = v107;
  uint64_t v92 = v104;
  id v91 = v105;
  *(void *)&long long v146 = v106;
  *((void *)&v146 + 1) = v105;
  id v93 = v102;
  id v94 = v103;
  *(void *)&long long v147 = v104;
  *((void *)&v147 + 1) = v103;
  *(void *)&long long v148 = v112;
  *((void *)&v148 + 1) = v102;
  *(void *)&long long v149 = v85;
  *((void *)&v149 + 1) = v86;
  *(void *)&long long v150 = v83;
  *((void *)&v150 + 1) = v84;
  *(void *)&long long v151 = v81;
  *((void *)&v151 + 1) = v82;
  *(void *)&long long v152 = v79;
  *((void *)&v152 + 1) = v80;
  *(void *)&long long v153 = v77;
  *((void *)&v153 + 1) = v78;
  uint64_t v95 = v141;
  v154 = v141;
  sub_25C058234((uint64_t)&v144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v155[0] = v113;
  v155[1] = v87;
  v155[2] = v88;
  v155[3] = v89;
  v155[4] = v90;
  v155[5] = v91;
  v155[6] = v92;
  v155[7] = v94;
  v155[8] = v112;
  v155[9] = v93;
  v155[10] = v133;
  v155[11] = v134;
  v155[12] = v135;
  v155[13] = v136;
  v155[14] = v137;
  v155[15] = v138;
  v155[16] = v139;
  v155[17] = v140;
  v155[18] = v142;
  v155[19] = v143;
  v155[20] = v95;
  uint64_t result = sub_25C058304((uint64_t)v155);
  long long v96 = v153;
  uint64_t v97 = v111;
  *(_OWORD *)(v111 + 128) = v152;
  *(_OWORD *)(v97 + 144) = v96;
  *(void *)(v97 + 160) = v154;
  long long v98 = v149;
  *(_OWORD *)(v97 + 64) = v148;
  *(_OWORD *)(v97 + 80) = v98;
  long long v99 = v151;
  *(_OWORD *)(v97 + 96) = v150;
  *(_OWORD *)(v97 + 112) = v99;
  long long v100 = v145;
  *(_OWORD *)uint64_t v97 = v144;
  *(_OWORD *)(v97 + 16) = v100;
  long long v101 = v147;
  *(_OWORD *)(v97 + 32) = v146;
  *(_OWORD *)(v97 + 48) = v101;
  return result;
}

uint64_t sub_25C04D1C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_25C04D22C()
{
  unint64_t result = qword_26A58CC50;
  if (!qword_26A58CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC50);
  }
  return result;
}

unint64_t sub_25C04D280()
{
  unint64_t result = qword_26A588750;
  if (!qword_26A588750)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589720);
    sub_25C04D338(&qword_26A588758, MEMORY[0x263F07490]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588750);
  }
  return result;
}

void type metadata accessor for SCUIReportingApplication(uint64_t a1)
{
}

uint64_t sub_25C04D338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C04D380()
{
  unint64_t result = qword_26A58CC58;
  if (!qword_26A58CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC58);
  }
  return result;
}

unint64_t sub_25C04D3D4()
{
  unint64_t result = qword_26A58CC60;
  if (!qword_26A58CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC60);
  }
  return result;
}

unint64_t sub_25C04D428()
{
  unint64_t result = qword_26A588790;
  if (!qword_26A588790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588790);
  }
  return result;
}

unint64_t sub_25C04D47C()
{
  unint64_t result = qword_26A5887A0;
  if (!qword_26A5887A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588798);
    sub_25C04D338(&qword_26A5887A8, (void (*)(uint64_t))type metadata accessor for Report.Message);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5887A0);
  }
  return result;
}

unint64_t sub_25C04D520()
{
  unint64_t result = qword_26A58CC68;
  if (!qword_26A58CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC68);
  }
  return result;
}

unint64_t sub_25C04D574()
{
  unint64_t result = qword_26A5887B8;
  if (!qword_26A5887B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5887B8);
  }
  return result;
}

unint64_t sub_25C04D5C8()
{
  unint64_t result = qword_26A5887D8;
  if (!qword_26A5887D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5887D8);
  }
  return result;
}

unint64_t sub_25C04D61C()
{
  unint64_t result = qword_26A5887E8;
  if (!qword_26A5887E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5887E8);
  }
  return result;
}

unint64_t sub_25C04D670()
{
  unint64_t result = qword_26A5887F0;
  if (!qword_26A5887F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588798);
    sub_25C04D338(&qword_26A5887F8, (void (*)(uint64_t))type metadata accessor for Report.Message);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5887F0);
  }
  return result;
}

void type metadata accessor for SCUIReportFlags(uint64_t a1)
{
}

uint64_t sub_25C04D728(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_25C0499C0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_25C04D800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_25C0EA048();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_25C0EA068();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_25C0EA058();
  sub_25C0499C0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_25C04D8B8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x25C04DB20);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_25C034EC8(a3, a4);
                  sub_25C034EC8(a1, a2);
                  char v17 = sub_25C04D800((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_25C035294(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_25C034EC8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_25C04D800(v21, v22, v20, a3, a4);
                  sub_25C035294(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_25C034EC8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_25C034EC8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_25C04D728(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_25C035294(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25C04DB50(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_25C0EC268(), uint64_t result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a1[3];
    uint64_t v10 = a2[3];
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (a1[2] != a2[2] || v9 != v10)
      {
        char v11 = sub_25C0EC268();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v12 = a1[5];
    uint64_t v13 = a2[5];
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (a1[4] != a2[4] || v12 != v13)
      {
        char v14 = sub_25C0EC268();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    uint64_t v15 = a1[7];
    uint64_t v16 = a2[7];
    if (v15)
    {
      if (!v16) {
        return 0;
      }
      if (a1[6] != a2[6] || v15 != v16)
      {
        char v17 = sub_25C0EC268();
        uint64_t result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    uint64_t v18 = a1[9];
    uint64_t v19 = a2[9];
    if (v18)
    {
      if (v19 && (a1[8] == a2[8] && v18 == v19 || (sub_25C0EC268() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v19)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_25C04DCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
    if (!v6 && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v7 && (sub_25C0EC268() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a2 + 40);
  if (v8)
  {
    if (!v9 || (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v8 != v9) && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a2 + 56);
  if (v10)
  {
    if (!v11 || (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v10 != v11) && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a2 + 72);
  if (!v12)
  {
    if (!v13) {
      goto LABEL_36;
    }
    return 0;
  }
  if (!v13 || (*(void *)(a1 + 64) != *(void *)(a2 + 64) || v12 != v13) && (sub_25C0EC268() & 1) == 0) {
    return 0;
  }
LABEL_36:
  long long v14 = *(_OWORD *)(a1 + 128);
  v20[2] = *(_OWORD *)(a1 + 112);
  v20[3] = v14;
  long long v15 = *(_OWORD *)(a1 + 144);
  long long v16 = *(_OWORD *)(a1 + 96);
  v20[0] = *(_OWORD *)(a1 + 80);
  v20[1] = v16;
  long long v17 = *(_OWORD *)(a2 + 128);
  v21[2] = *(_OWORD *)(a2 + 112);
  v21[3] = v17;
  v21[4] = *(_OWORD *)(a2 + 144);
  long long v18 = *(_OWORD *)(a2 + 80);
  v21[1] = *(_OWORD *)(a2 + 96);
  v20[4] = v15;
  v21[0] = v18;
  if ((sub_25C04DB50(v20, v21) & 1) == 0) {
    return 0;
  }
  _s14descr27097BA99O6VictimVMa(0);

  return sub_25C0EA2F8();
}

uint64_t sub_25C04DE74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
    if (!v6 && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (v7)
  {
    if (!v8 || (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v7 != v8) && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  if (v9)
  {
    if (!v10 || (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v9 != v10) && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a2 + 56);
  if (v11)
  {
    if (!v12 || (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v11 != v12) && (sub_25C0EC268() & 1) == 0) {
      return 0;
    }
  }
  else if (v12)
  {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a2 + 72);
  if (!v13)
  {
    if (!v14) {
      goto LABEL_38;
    }
    return 0;
  }
  if (!v14 || (*(void *)(a1 + 64) != *(void *)(a2 + 64) || v13 != v14) && (sub_25C0EC268() & 1) == 0) {
    return 0;
  }
LABEL_38:
  long long v15 = *(_OWORD *)(a1 + 128);
  v23[2] = *(_OWORD *)(a1 + 112);
  v23[3] = v15;
  v23[4] = *(_OWORD *)(a1 + 144);
  long long v16 = *(_OWORD *)(a1 + 96);
  v23[0] = *(_OWORD *)(a1 + 80);
  v23[1] = v16;
  long long v17 = *(_OWORD *)(a2 + 128);
  v22[2] = *(_OWORD *)(a2 + 112);
  v22[3] = v17;
  v22[4] = *(_OWORD *)(a2 + 144);
  long long v18 = *(_OWORD *)(a2 + 96);
  v22[0] = *(_OWORD *)(a2 + 80);
  v22[1] = v18;
  if ((sub_25C04DB50(v23, v22) & 1) == 0) {
    return 0;
  }
  uint64_t v19 = *(void *)(a1 + 160);
  uint64_t v20 = *(void *)(a2 + 160);

  return sub_25C03FE4C(v19, v20);
}

uint64_t _s26SensitiveContentAnalysisUI6ReportC5MediaV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = sub_25C0EA238();
  uint64_t v82 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v80 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A40);
  MEMORY[0x270FA5388](v5);
  uint64_t v83 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v81 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v85 = (char *)&v76 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = (char *)&v76 - v12;
  uint64_t v13 = sub_25C0EA608();
  uint64_t v87 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888D8);
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v76 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v76 - v26;
  if ((MEMORY[0x26117BB50](a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v79 = v5;
  uint64_t v28 = type metadata accessor for Report.Media(0);
  if ((sub_25C0EA4A8() & 1) == 0) {
    return 0;
  }
  uint64_t v29 = *(int *)(v28 + 24);
  uint64_t v78 = a1;
  sub_25C02FB8C(a1 + v29, (uint64_t)v27, &qword_26A5888C8);
  id v76 = (int *)v28;
  uint64_t v77 = a2;
  sub_25C02FB8C(a2 + *(int *)(v28 + 24), (uint64_t)v25, &qword_26A5888C8);
  uint64_t v30 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_25C02FB8C((uint64_t)v27, (uint64_t)v18, &qword_26A5888C8);
  sub_25C02FB8C((uint64_t)v25, v30, &qword_26A5888C8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v31((uint64_t)v18, 1, v13) == 1)
  {
    sub_25C02FBF0((uint64_t)v25, &qword_26A5888C8);
    sub_25C02FBF0((uint64_t)v27, &qword_26A5888C8);
    if (v31(v30, 1, v13) == 1)
    {
      sub_25C02FBF0((uint64_t)v18, &qword_26A5888C8);
      uint64_t v32 = v79;
      goto LABEL_10;
    }
LABEL_8:
    sub_25C02FBF0((uint64_t)v18, &qword_26A5888D8);
    return 0;
  }
  sub_25C02FB8C((uint64_t)v18, (uint64_t)v22, &qword_26A5888C8);
  if (v31(v30, 1, v13) == 1)
  {
    sub_25C02FBF0((uint64_t)v25, &qword_26A5888C8);
    sub_25C02FBF0((uint64_t)v27, &qword_26A5888C8);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v22, v13);
    goto LABEL_8;
  }
  uint64_t v33 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v15, v30, v13);
  sub_25C04D338(&qword_26A588918, MEMORY[0x263F17630]);
  char v34 = sub_25C0EB7A8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v33 + 8);
  v35(v15, v13);
  sub_25C02FBF0((uint64_t)v25, &qword_26A5888C8);
  sub_25C02FBF0((uint64_t)v27, &qword_26A5888C8);
  v35(v22, v13);
  uint64_t v32 = v79;
  sub_25C02FBF0((uint64_t)v18, &qword_26A5888C8);
  if ((v34 & 1) == 0) {
    return 0;
  }
LABEL_10:
  unint64_t v37 = v76;
  uint64_t v36 = v77;
  uint64_t v38 = v78;
  if (*(unsigned __int8 *)(v78 + v76[7]) != *(unsigned __int8 *)(v77 + v76[7])) {
    return 0;
  }
  uint64_t v39 = v76[8];
  uint64_t v40 = *(void *)(v78 + v39);
  uint64_t v41 = *(void *)(v78 + v39 + 8);
  unint64_t v42 = (void *)(v77 + v39);
  uint64_t v44 = (uint64_t)v85;
  uint64_t v43 = (uint64_t)v86;
  if (v40 != *v42 || v41 != v42[1])
  {
    char v45 = sub_25C0EC268();
    uint64_t result = 0;
    if ((v45 & 1) == 0) {
      return result;
    }
  }
  uint64_t v47 = v37[9];
  uint64_t v48 = v38 + v47;
  uint64_t v49 = *(void *)(v38 + v47);
  unint64_t v50 = *(void *)(v48 + 8);
  uint64_t v51 = (uint64_t *)(v36 + v47);
  uint64_t v52 = *v51;
  unint64_t v53 = v51[1];
  if (v50 >> 60 != 15)
  {
    if (v53 >> 60 != 15)
    {
      sub_25C03D9C8(v49, *(void *)(v48 + 8));
      sub_25C03D9C8(v52, v53);
      char v54 = sub_25C04D8B8(v49, v50, v52, v53);
      sub_25C03DA24(v52, v53);
      sub_25C03DA24(v49, v50);
      if ((v54 & 1) == 0) {
        return 0;
      }
      goto LABEL_22;
    }
LABEL_18:
    sub_25C03D9C8(v49, *(void *)(v48 + 8));
    sub_25C03D9C8(v52, v53);
    sub_25C03DA24(v49, v50);
    sub_25C03DA24(v52, v53);
    return 0;
  }
  if (v53 >> 60 != 15) {
    goto LABEL_18;
  }
LABEL_22:
  uint64_t v55 = v37[10];
  uint64_t v56 = v78;
  uint64_t v57 = (void *)(v78 + v55);
  uint64_t v58 = *(void *)(v78 + v55 + 8);
  uint64_t v59 = (void *)(v36 + v55);
  uint64_t v60 = v59[1];
  if (!v58)
  {
    if (v60) {
      return 0;
    }
LABEL_29:
    sub_25C02FB8C(v56 + v37[11], v43, &qword_26A589EC0);
    sub_25C02FB8C(v36 + v37[11], v44, &qword_26A589EC0);
    uint64_t v62 = v83;
    uint64_t v63 = v83 + *(int *)(v32 + 48);
    sub_25C02FB8C(v43, v83, &qword_26A589EC0);
    sub_25C02FB8C(v44, v63, &qword_26A589EC0);
    uint64_t v64 = v82;
    uint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
    uint64_t v66 = v84;
    if (v65(v62, 1, v84) == 1)
    {
      sub_25C02FBF0(v44, &qword_26A589EC0);
      sub_25C02FBF0(v43, &qword_26A589EC0);
      if (v65(v63, 1, v66) == 1)
      {
        sub_25C02FBF0(v62, &qword_26A589EC0);
        goto LABEL_36;
      }
      goto LABEL_34;
    }
    uint64_t v67 = v81;
    sub_25C02FB8C(v62, v81, &qword_26A589EC0);
    if (v65(v63, 1, v66) == 1)
    {
      sub_25C02FBF0(v44, &qword_26A589EC0);
      sub_25C02FBF0(v43, &qword_26A589EC0);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v67, v66);
LABEL_34:
      sub_25C02FBF0(v62, &qword_26A588A40);
      return 0;
    }
    uint64_t v68 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v80, v63, v66);
    sub_25C04D338(&qword_26A588A48, MEMORY[0x263F06EA8]);
    char v69 = sub_25C0EB7A8();
    uint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
    v70(v68, v66);
    sub_25C02FBF0(v44, &qword_26A589EC0);
    sub_25C02FBF0(v43, &qword_26A589EC0);
    v70((char *)v67, v66);
    sub_25C02FBF0(v62, &qword_26A589EC0);
    if (v69)
    {
LABEL_36:
      uint64_t v71 = v37[12];
      unint64_t v72 = (void *)(v78 + v71);
      char v73 = *(unsigned char *)(v78 + v71 + 8);
      id v74 = (void *)(v77 + v71);
      char v75 = *(unsigned char *)(v77 + v71 + 8);
      if (v73)
      {
        if (v75) {
          return 1;
        }
      }
      else
      {
        if (*v72 != *v74) {
          char v75 = 1;
        }
        if ((v75 & 1) == 0) {
          return 1;
        }
      }
    }
    return 0;
  }
  if (!v60) {
    return 0;
  }
  if (*v57 == *v59 && v58 == v60) {
    goto LABEL_29;
  }
  char v61 = sub_25C0EC268();
  uint64_t result = 0;
  if (v61) {
    goto LABEL_29;
  }
  return result;
}

BOOL _s26SensitiveContentAnalysisUI6ReportC8EvidenceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EA328();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v67 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A68);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v67 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v68 = a1;
  sub_25C02FB8C(a1, (uint64_t)&v67 - v18, &qword_26A589720);
  uint64_t v69 = a2;
  sub_25C02FB8C(a2, (uint64_t)v17, &qword_26A589720);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_25C02FB8C((uint64_t)v19, (uint64_t)v10, &qword_26A589720);
  sub_25C02FB8C((uint64_t)v17, v20, &qword_26A589720);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_25C02FBF0((uint64_t)v17, &qword_26A589720);
    sub_25C02FBF0((uint64_t)v19, &qword_26A589720);
    if (v21(v20, 1, v4) == 1)
    {
      sub_25C02FBF0((uint64_t)v10, &qword_26A589720);
      goto LABEL_8;
    }
LABEL_6:
    sub_25C02FBF0((uint64_t)v10, &qword_26A588A68);
    return 0;
  }
  sub_25C02FB8C((uint64_t)v10, (uint64_t)v14, &qword_26A589720);
  if (v21(v20, 1, v4) == 1)
  {
    sub_25C02FBF0((uint64_t)v17, &qword_26A589720);
    sub_25C02FBF0((uint64_t)v19, &qword_26A589720);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    goto LABEL_6;
  }
  uint64_t v22 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v67, v20, v4);
  sub_25C04D338(&qword_26A588A70, MEMORY[0x263F07490]);
  char v23 = sub_25C0EB7A8();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v22, v4);
  sub_25C02FBF0((uint64_t)v17, &qword_26A589720);
  sub_25C02FBF0((uint64_t)v19, &qword_26A589720);
  v24(v14, v4);
  sub_25C02FBF0((uint64_t)v10, &qword_26A589720);
  if ((v23 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v25 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v27 = v68;
  uint64_t v26 = v69;
  if ((sub_25C04DCC4(v68 + v25[6], v69 + v25[6]) & 1) == 0
    || (sub_25C03F698(*(void *)(v27 + v25[7]), *(void *)(v26 + v25[7])) & 1) == 0
    || *(void *)(v27 + v25[8]) != *(void *)(v26 + v25[8]))
  {
    return 0;
  }
  uint64_t v28 = v25[9];
  uint64_t v29 = (void *)(v27 + v28);
  uint64_t v30 = *(void *)(v27 + v28 + 8);
  uint64_t v31 = (void *)(v26 + v28);
  uint64_t v32 = v31[1];
  if (!v30)
  {
    if (!v32) {
      goto LABEL_18;
    }
    return 0;
  }
  if (!v32) {
    return 0;
  }
  if (*v29 != *v31 || v30 != v32)
  {
    char v33 = sub_25C0EC268();
    BOOL result = 0;
    if ((v33 & 1) == 0) {
      return result;
    }
  }
LABEL_18:
  if (*(unsigned __int8 *)(v27 + v25[10]) != *(unsigned __int8 *)(v26 + v25[10])) {
    return 0;
  }
  uint64_t v35 = v25[11];
  int v36 = *(unsigned __int8 *)(v27 + v35);
  int v37 = *(unsigned __int8 *)(v26 + v35);
  if (v36 == 8)
  {
    if (v37 != 8) {
      return 0;
    }
  }
  else
  {
    char v71 = v36;
    if (v37 == 8) {
      return 0;
    }
    char v70 = v37;
    sub_25C02D66C();
    if ((sub_25C0EB7A8() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v38 = v25[12];
  uint64_t v39 = (void *)(v27 + v38);
  uint64_t v40 = *(void *)(v27 + v38 + 8);
  uint64_t v41 = (void *)(v26 + v38);
  uint64_t v42 = v41[1];
  if (v40)
  {
    if (!v42) {
      return 0;
    }
    if (*v39 != *v41 || v40 != v42)
    {
      char v43 = sub_25C0EC268();
      BOOL result = 0;
      if ((v43 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v42)
  {
    return 0;
  }
  if ((sub_25C03FC68(*(void *)(v27 + v25[13]), *(void *)(v26 + v25[13])) & 1) == 0) {
    return 0;
  }
  uint64_t v44 = v25[14];
  uint64_t v45 = *(void *)(v27 + v44);
  unint64_t v46 = *(void *)(v27 + v44 + 8);
  uint64_t v47 = (uint64_t *)(v26 + v44);
  uint64_t v48 = *v47;
  unint64_t v49 = v47[1];
  if (v46 >> 60 == 15)
  {
    if (v49 >> 60 == 15) {
      goto LABEL_40;
    }
LABEL_38:
    sub_25C03D9C8(v45, v46);
    sub_25C03D9C8(v48, v49);
    sub_25C03DA24(v45, v46);
    sub_25C03DA24(v48, v49);
    return 0;
  }
  if (v49 >> 60 == 15) {
    goto LABEL_38;
  }
  sub_25C03D9C8(v45, v46);
  sub_25C03D9C8(v48, v49);
  char v50 = sub_25C04D8B8(v45, v46, v48, v49);
  sub_25C03DA24(v48, v49);
  sub_25C03DA24(v45, v46);
  if ((v50 & 1) == 0) {
    return 0;
  }
LABEL_40:
  uint64_t v51 = v25[15];
  uint64_t v52 = (void *)(v27 + v51);
  uint64_t v53 = *(void *)(v27 + v51 + 8);
  char v54 = (void *)(v26 + v51);
  uint64_t v55 = v54[1];
  if (v53)
  {
    if (!v55) {
      return 0;
    }
    if (*v52 != *v54 || v53 != v55)
    {
      char v56 = sub_25C0EC268();
      BOOL result = 0;
      if ((v56 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v55)
  {
    return 0;
  }
  if (*(void *)(v27 + v25[16]) != *(void *)(v26 + v25[16])) {
    return 0;
  }
  uint64_t v57 = v25[17];
  uint64_t v58 = *(void *)(v27 + v57);
  uint64_t v59 = *(void *)(v27 + v57 + 8);
  uint64_t v60 = (void *)(v26 + v57);
  if (v58 == *v60 && v59 == v60[1] || (v61 = sub_25C0EC268(), BOOL result = 0, (v61 & 1) != 0))
  {
    uint64_t v62 = v25[18];
    uint64_t v63 = *(void *)(v27 + v62);
    uint64_t v64 = *(void *)(v27 + v62 + 8);
    uint64_t v65 = (void *)(v26 + v62);
    if (v63 == *v65 && v64 == v65[1]) {
      return *(void *)(v27 + v25[19]) == *(void *)(v26 + v25[19]);
    }
    char v66 = sub_25C0EC268();
    BOOL result = 0;
    if (v66) {
      return *(void *)(v27 + v25[19]) == *(void *)(v26 + v25[19]);
    }
  }
  return result;
}

uint64_t sub_25C04F040(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25C04F0A0()
{
  unint64_t result = qword_26A588818;
  if (!qword_26A588818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588818);
  }
  return result;
}

uint64_t sub_25C04F0F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C04F160()
{
  unint64_t result = qword_26A588830;
  if (!qword_26A588830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588830);
  }
  return result;
}

unint64_t sub_25C04F1B4()
{
  unint64_t result = qword_26A588840;
  if (!qword_26A588840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588840);
  }
  return result;
}

unint64_t sub_25C04F208()
{
  unint64_t result = qword_26A588848;
  if (!qword_26A588848)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588798);
    sub_25C04D338(&qword_26A588850, (void (*)(uint64_t))type metadata accessor for Report.Message);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588848);
  }
  return result;
}

unint64_t sub_25C04F2AC()
{
  unint64_t result = qword_26A588858;
  if (!qword_26A588858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588858);
  }
  return result;
}

unint64_t sub_25C04F300()
{
  unint64_t result = qword_26A58CC70;
  if (!qword_26A58CC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC70);
  }
  return result;
}

unint64_t sub_25C04F354()
{
  unint64_t result = qword_26A58CC78;
  if (!qword_26A58CC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC78);
  }
  return result;
}

unint64_t sub_25C04F3A8()
{
  unint64_t result = qword_26A58CC80;
  if (!qword_26A58CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC80);
  }
  return result;
}

unint64_t sub_25C04F3FC()
{
  unint64_t result = qword_26A588890;
  if (!qword_26A588890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588890);
  }
  return result;
}

unint64_t sub_25C04F450()
{
  unint64_t result = qword_26A5888A0;
  if (!qword_26A5888A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5888A0);
  }
  return result;
}

unint64_t sub_25C04F4A4()
{
  unint64_t result = qword_26A58CC88;
  if (!qword_26A58CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC88);
  }
  return result;
}

unint64_t sub_25C04F4F8()
{
  unint64_t result = qword_26A5888B8;
  if (!qword_26A5888B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5888B0);
    sub_25C04D338(&qword_26A5888C0, (void (*)(uint64_t))type metadata accessor for Report.Media);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5888B8);
  }
  return result;
}

uint64_t type metadata accessor for Report.Media(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A58E1D0);
}

uint64_t sub_25C04F5BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656469636E69 && a2 == 0xEC00000065746144;
  if (v2 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E7265636E6F63 && a2 == 0xE700000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6974636976 && a2 == 0xE600000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7374636570737573 && a2 == 0xE800000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025C0F5F20 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7070614874616877 && a2 == 0xEC00000064656E65 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025C0F5F40 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000025C0F5F60 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73746E656D6D6F63 && a2 == 0xE800000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E61725474616863 && a2 == 0xEE00747069726373 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000025C0F5C00 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6D6F6F5274616863 && a2 == 0xEC000000656D614ELL || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x746163696C707061 && a2 == 0xEB000000006E6F69 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x656D614E736FLL && a2 == 0xE600000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7367616C66 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_25C04FC78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000025C0F5F80)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25C04FD00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6C6C7566 && a2 == 0xE800000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25C050054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6C6C7566 && a2 == 0xE800000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025C0F5FA0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25C05038C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  char v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_25C04F4A4();
  sub_25C0EC378();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = v6;
    LOBYTE(v62) = 0;
    uint64_t v10 = sub_25C0EC118();
    uint64_t v12 = v11;
    LOBYTE(v62) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_25C0EC118();
    uint64_t v42 = v10;
    uint64_t v43 = v13;
    LOBYTE(v62) = 2;
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    *(void *)&long long v40 = sub_25C0EC118();
    *((void *)&v40 + 1) = v16;
    uint64_t v41 = v15;
    LOBYTE(v62) = 3;
    swift_bridgeObjectRetain();
    *(void *)&long long v39 = sub_25C0EC118();
    *((void *)&v39 + 1) = v17;
    LOBYTE(v62) = 4;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25C0EC118();
    uint64_t v20 = v19;
    uint64_t v38 = v18;
    LOBYTE(v51) = 5;
    sub_25C04F450();
    swift_bridgeObjectRetain();
    sub_25C0EC168();
    uint64_t v21 = v63;
    uint64_t v36 = v64;
    uint64_t v37 = v62;
    uint64_t v47 = v65;
    uint64_t v48 = *((void *)&v66 + 1);
    uint64_t v34 = v67;
    uint64_t v35 = v66;
    uint64_t v33 = v68;
    uint64_t v45 = *((void *)&v67 + 1);
    uint64_t v46 = v69;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888B0);
    char v81 = 6;
    sub_25C058190();
    uint64_t v44 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25C0EC168();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v5);
    uint64_t v22 = v82;
    uint64_t v49 = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = v42;
    *(void *)&long long v51 = v42;
    *((void *)&v51 + 1) = v12;
    *(void *)&long long v52 = v43;
    *((void *)&v52 + 1) = v41;
    long long v53 = v40;
    long long v54 = v39;
    *(void *)&long long v55 = v38;
    *((void *)&v55 + 1) = v20;
    uint64_t v24 = v45;
    *(void *)&long long v56 = v37;
    *((void *)&v56 + 1) = v44;
    *(void *)&long long v57 = v36;
    *((void *)&v57 + 1) = v47;
    *(void *)&long long v58 = v35;
    *((void *)&v58 + 1) = v48;
    *(void *)&long long v59 = v34;
    *((void *)&v59 + 1) = v45;
    *(void *)&long long v60 = v33;
    *((void *)&v60 + 1) = v46;
    uint64_t v61 = v22;
    sub_25C058234((uint64_t)&v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v44;
    swift_bridgeObjectRelease();
    uint64_t v26 = v49;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    uint64_t v62 = v23;
    uint64_t v63 = v12;
    uint64_t v64 = v43;
    uint64_t v65 = v41;
    long long v66 = v40;
    long long v67 = v39;
    uint64_t v68 = v38;
    uint64_t v69 = v20;
    uint64_t v70 = v37;
    uint64_t v71 = v25;
    uint64_t v72 = v36;
    uint64_t v73 = v47;
    uint64_t v74 = v35;
    uint64_t v75 = v48;
    uint64_t v76 = v34;
    uint64_t v77 = v24;
    uint64_t v78 = v33;
    uint64_t v79 = v46;
    uint64_t v80 = v26;
    uint64_t result = sub_25C058304((uint64_t)&v62);
    long long v28 = v60;
    *(_OWORD *)(a2 + 128) = v59;
    *(_OWORD *)(a2 + 144) = v28;
    *(void *)(a2 + 160) = v61;
    long long v29 = v56;
    *(_OWORD *)(a2 + 64) = v55;
    *(_OWORD *)(a2 + 80) = v29;
    long long v30 = v58;
    *(_OWORD *)(a2 + 96) = v57;
    *(_OWORD *)(a2 + 112) = v30;
    long long v31 = v52;
    *(_OWORD *)a2 = v51;
    *(_OWORD *)(a2 + 16) = v31;
    long long v32 = v54;
    *(_OWORD *)(a2 + 32) = v53;
    *(_OWORD *)(a2 + 48) = v32;
  }
  return result;
}

uint64_t sub_25C050AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_25C050B28()
{
  unint64_t result = qword_26A58CC90;
  if (!qword_26A58CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC90);
  }
  return result;
}

uint64_t sub_25C050B7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C050BE0()
{
  unint64_t result = qword_26A58CC98;
  if (!qword_26A58CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58CC98);
  }
  return result;
}

unint64_t sub_25C050C34()
{
  unint64_t result = qword_26A58CCA0[0];
  if (!qword_26A58CCA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58CCA0);
  }
  return result;
}

uint64_t sub_25C050C88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707954697475 && a2 == 0xE700000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x76697469736E6573 && a2 == 0xEB00000000797469 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025C0F5FC0 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x363532616873 && a2 == 0xE600000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4955557465737361 && a2 == 0xE900000000000044 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025C0F5FE0 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xEE00736B6E756843)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_25C051040(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_25C051254@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C050C34();
  sub_25C0EC378();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v40 = 0;
    uint64_t v9 = sub_25C0EC118();
    uint64_t v11 = v10;
    char v39 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25C0EC118();
    uint64_t v14 = v13;
    uint64_t v33 = v12;
    uint64_t v34 = v9;
    char v38 = 2;
    swift_bridgeObjectRetain();
    uint64_t v35 = v14;
    uint64_t v15 = sub_25C0EC118();
    uint64_t v17 = v16;
    uint64_t v31 = v15;
    long long v32 = a2;
    char v37 = 3;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25C0EC118();
    uint64_t v20 = v19;
    uint64_t v30 = v18;
    char v36 = 4;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25C0EC118();
    uint64_t v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v29 = v21;
    v24(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v35;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = v32;
    uint64_t *v32 = v34;
    v27[1] = v11;
    v27[2] = v33;
    v27[3] = v25;
    v27[4] = v31;
    v27[5] = v17;
    v27[6] = v30;
    v27[7] = v20;
    v27[8] = v29;
    v27[9] = v23;
  }
  return result;
}

uint64_t type metadata accessor for CloudKitReport(uint64_t a1)
{
  return sub_25C02BF00(a1, qword_26A58E1E0);
}

uint64_t sub_25C05164C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25C051684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0516EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C051750(uint64_t a1, void (*a2)(void))
{
  uint64_t v29 = sub_25C0EA4E8();
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Report.Media(0);
  uint64_t v8 = MEMORY[0x270FA5388](v28);
  uint64_t v27 = (uint64_t)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v23 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v23[1] = v2;
    uint64_t v15 = *(void *)(v10 + 72);
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = a2;
    uint64_t v16 = a1 + v25;
    uint64_t v17 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v24 = v15;
    do
    {
      uint64_t v18 = sub_25C04D1C4(v16, (uint64_t)v12, type metadata accessor for Report.Media);
      a2(v18);
      char v19 = sub_25C0EA4D8();
      (*v17)(v7, v29);
      if (v19)
      {
        sub_25C051684((uint64_t)v12, v27, type metadata accessor for Report.Media);
        uint64_t v20 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25C04A214(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v30;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_25C04A214(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v30;
        }
        *(void *)(v20 + 16) = v22 + 1;
        uint64_t v15 = v24;
        sub_25C051684(v27, v20 + v25 + v22 * v24, type metadata accessor for Report.Media);
        a2 = v26;
      }
      else
      {
        sub_25C04F040((uint64_t)v12, type metadata accessor for Report.Media);
      }
      v16 += v15;
      --v14;
    }
    while (v14);
    return v30;
  }
  return result;
}

unint64_t sub_25C051A34()
{
  unint64_t result = qword_26A588968;
  if (!qword_26A588968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588968);
  }
  return result;
}

uint64_t sub_25C051A88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_25C0EBB38();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_25C04A738(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_25C051B24()
{
  unint64_t result = qword_26A588980;
  if (!qword_26A588980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588980);
  }
  return result;
}

unint64_t sub_25C051B78(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25C051B24();
  unint64_t result = sub_25C051BA8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_25C051BA8()
{
  unint64_t result = qword_26A588988;
  if (!qword_26A588988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588988);
  }
  return result;
}

uint64_t sub_25C051BFC()
{
  return sub_25C0583D0(&qword_26A588990, &qword_26A588998);
}

unint64_t sub_25C051C3C()
{
  unint64_t result = qword_26A5889A0;
  if (!qword_26A5889A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5889A0);
  }
  return result;
}

uint64_t sub_25C051C9C()
{
  return 0;
}

ValueMetadata *_s14descr27097BA99O7ConcernOMa()
{
  return &_s14descr27097BA99O7ConcernON;
}

uint64_t *_s14descr27097BA99O8EvidenceVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25C0EA328();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v60 = v7;
    uint64_t v61 = v8;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    *uint64_t v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v11 + 24);
    v12[2] = *(uint64_t *)((char *)a2 + v11 + 16);
    v12[3] = v15;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v11 + 40);
    v12[4] = *(uint64_t *)((char *)a2 + v11 + 32);
    v12[5] = v16;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v11 + 56);
    v12[6] = *(uint64_t *)((char *)a2 + v11 + 48);
    v12[7] = v17;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v11 + 72);
    v12[8] = *(uint64_t *)((char *)a2 + v11 + 64);
    v12[9] = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v11 + 88);
    v12[10] = *(uint64_t *)((char *)a2 + v11 + 80);
    v12[11] = v19;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v11 + 104);
    v12[12] = *(uint64_t *)((char *)a2 + v11 + 96);
    v12[13] = v20;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v11 + 120);
    v12[14] = *(uint64_t *)((char *)a2 + v11 + 112);
    v12[15] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v11 + 136);
    unsigned char v12[16] = *(uint64_t *)((char *)a2 + v11 + 128);
    v12[17] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v11 + 152);
    v12[18] = *(uint64_t *)((char *)a2 + v11 + 144);
    v12[19] = v23;
    uint64_t v24 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
    long long v58 = &v13[v24];
    long long v59 = (char *)v12 + v24;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v59, v58, v60);
    uint64_t v26 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    uint64_t v27 = a3[9];
    uint64_t v28 = a3[10];
    uint64_t v29 = (uint64_t *)((char *)a1 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
    uint64_t v32 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v33 = (uint64_t *)((char *)a1 + v32);
    uint64_t v34 = (uint64_t *)((char *)a2 + v32);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    uint64_t v37 = a3[13];
    uint64_t v38 = a3[14];
    uint64_t v39 = *(uint64_t *)((char *)a2 + v37);
    *uint64_t v33 = v35;
    v33[1] = v36;
    *(uint64_t *)((char *)a1 + v37) = v39;
    char v40 = (char *)a1 + v38;
    uint64_t v41 = (uint64_t *)((char *)a2 + v38);
    unint64_t v42 = *(uint64_t *)((char *)a2 + v38 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42 >> 60 == 15)
    {
      *(_OWORD *)char v40 = *(_OWORD *)v41;
    }
    else
    {
      uint64_t v43 = *v41;
      sub_25C034EC8(*v41, v42);
      *(void *)char v40 = v43;
      *((void *)v40 + 1) = v42;
    }
    uint64_t v44 = a3[15];
    uint64_t v45 = a3[16];
    uint64_t v46 = (uint64_t *)((char *)a1 + v44);
    uint64_t v47 = (uint64_t *)((char *)a2 + v44);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *(uint64_t *)((char *)a1 + v45) = *(uint64_t *)((char *)a2 + v45);
    uint64_t v49 = a3[17];
    uint64_t v50 = a3[18];
    long long v51 = (uint64_t *)((char *)a1 + v49);
    long long v52 = (uint64_t *)((char *)a2 + v49);
    uint64_t v53 = v52[1];
    *long long v51 = *v52;
    v51[1] = v53;
    long long v54 = (uint64_t *)((char *)a1 + v50);
    long long v55 = (uint64_t *)((char *)a2 + v50);
    uint64_t v56 = v55[1];
    *long long v54 = *v55;
    v54[1] = v56;
    *(uint64_t *)((char *)a1 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s14descr27097BA99O8EvidenceVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EA328();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6 + *(int *)(v7 + 40), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 56));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_25C035294(*v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *_s14descr27097BA99O8EvidenceVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  uint64_t v59 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)&a2[v9 + 8];
  *(void *)uint64_t v10 = *(void *)&a2[v9];
  *((void *)v10 + 1) = v12;
  uint64_t v13 = *(void *)&a2[v9 + 24];
  *((void *)v10 + 2) = *(void *)&a2[v9 + 16];
  *((void *)v10 + 3) = v13;
  uint64_t v14 = *(void *)&a2[v9 + 40];
  *((void *)v10 + 4) = *(void *)&a2[v9 + 32];
  *((void *)v10 + 5) = v14;
  uint64_t v15 = *(void *)&a2[v9 + 56];
  *((void *)v10 + 6) = *(void *)&a2[v9 + 48];
  *((void *)v10 + 7) = v15;
  uint64_t v16 = *(void *)&a2[v9 + 72];
  *((void *)v10 + 8) = *(void *)&a2[v9 + 64];
  *((void *)v10 + 9) = v16;
  uint64_t v17 = *(void *)&a2[v9 + 88];
  *((void *)v10 + 10) = *(void *)&a2[v9 + 80];
  *((void *)v10 + 11) = v17;
  uint64_t v18 = *(void *)&a2[v9 + 104];
  *((void *)v10 + 12) = *(void *)&a2[v9 + 96];
  *((void *)v10 + 13) = v18;
  uint64_t v19 = *(void *)&a2[v9 + 120];
  *((void *)v10 + 14) = *(void *)&a2[v9 + 112];
  *((void *)v10 + 15) = v19;
  uint64_t v20 = *(void *)&a2[v9 + 136];
  *((void *)v10 + 16) = *(void *)&a2[v9 + 128];
  *((void *)v10 + 17) = v20;
  uint64_t v21 = *(void *)&a2[v9 + 152];
  *((void *)v10 + 18) = *(void *)&a2[v9 + 144];
  *((void *)v10 + 19) = v21;
  uint64_t v22 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
  uint64_t v56 = &v11[v22];
  long long v57 = &v10[v22];
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v57, v56, v58);
  uint64_t v24 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  a1[v26] = a2[v26];
  uint64_t v30 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = *((void *)v32 + 1);
  uint64_t v35 = a3[13];
  uint64_t v36 = a3[14];
  uint64_t v37 = *(void *)&a2[v35];
  *(void *)uint64_t v31 = v33;
  *((void *)v31 + 1) = v34;
  *(void *)&a1[v35] = v37;
  uint64_t v38 = &a1[v36];
  uint64_t v39 = (uint64_t *)&a2[v36];
  unint64_t v40 = *(void *)&a2[v36 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  }
  else
  {
    uint64_t v41 = *v39;
    sub_25C034EC8(*v39, v40);
    *(void *)uint64_t v38 = v41;
    *((void *)v38 + 1) = v40;
  }
  uint64_t v42 = a3[15];
  uint64_t v43 = a3[16];
  uint64_t v44 = &a1[v42];
  uint64_t v45 = &a2[v42];
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)uint64_t v44 = *(void *)v45;
  *((void *)v44 + 1) = v46;
  *(void *)&a1[v43] = *(void *)&a2[v43];
  uint64_t v47 = a3[17];
  uint64_t v48 = a3[18];
  uint64_t v49 = &a1[v47];
  uint64_t v50 = &a2[v47];
  uint64_t v51 = *((void *)v50 + 1);
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = v51;
  long long v52 = &a1[v48];
  uint64_t v53 = &a2[v48];
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)long long v52 = *(void *)v53;
  *((void *)v52 + 1) = v54;
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *_s14descr27097BA99O8EvidenceVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)&a2[v12];
  *((void *)v13 + 1) = *(void *)&a2[v12 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = *((void *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = *((void *)v14 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 6) = *((void *)v14 + 6);
  *((void *)v13 + 7) = *((void *)v14 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 8) = *((void *)v14 + 8);
  *((void *)v13 + 9) = *((void *)v14 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 10) = *((void *)v14 + 10);
  *((void *)v13 + 11) = *((void *)v14 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 12) = *((void *)v14 + 12);
  *((void *)v13 + 13) = *((void *)v14 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 14) = *((void *)v14 + 14);
  *((void *)v13 + 15) = *((void *)v14 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 16) = *((void *)v14 + 16);
  *((void *)v13 + 17) = *((void *)v14 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 18) = *((void *)v14 + 18);
  *((void *)v13 + 19) = *((void *)v14 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(&v13[*(int *)(v15 + 40)], &v14[*(int *)(v15 + 40)], v6);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v19 = a3[12];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[14];
  uint64_t v23 = (uint64_t *)&a1[v22];
  uint64_t v24 = (uint64_t *)&a2[v22];
  unint64_t v25 = *(void *)&a2[v22 + 8];
  if (*(void *)&a1[v22 + 8] >> 60 != 15)
  {
    if (v25 >> 60 != 15)
    {
      uint64_t v27 = *v24;
      sub_25C034EC8(v27, v25);
      uint64_t v28 = *v23;
      unint64_t v29 = v23[1];
      *uint64_t v23 = v27;
      v23[1] = v25;
      sub_25C035294(v28, v29);
      goto LABEL_14;
    }
    sub_25C052A18((uint64_t)v23);
    goto LABEL_12;
  }
  if (v25 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    goto LABEL_14;
  }
  uint64_t v26 = *v24;
  sub_25C034EC8(v26, v25);
  *uint64_t v23 = v26;
  v23[1] = v25;
LABEL_14:
  uint64_t v30 = a3[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  uint64_t v33 = a3[17];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[18];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  return a1;
}

uint64_t sub_25C052A18(uint64_t a1)
{
  return a1;
}

char *_s14descr27097BA99O8EvidenceVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)int v10 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v10 + 1) = v12;
  long long v13 = *(_OWORD *)&a2[v9 + 48];
  *((_OWORD *)v10 + 2) = *(_OWORD *)&a2[v9 + 32];
  *((_OWORD *)v10 + 3) = v13;
  long long v14 = *(_OWORD *)&a2[v9 + 144];
  *((_OWORD *)v10 + 8) = *(_OWORD *)&a2[v9 + 128];
  *((_OWORD *)v10 + 9) = v14;
  long long v15 = *(_OWORD *)&a2[v9 + 112];
  *((_OWORD *)v10 + 6) = *(_OWORD *)&a2[v9 + 96];
  *((_OWORD *)v10 + 7) = v15;
  long long v16 = *(_OWORD *)&a2[v9 + 80];
  *((_OWORD *)v10 + 4) = *(_OWORD *)&a2[v9 + 64];
  *((_OWORD *)v10 + 5) = v16;
  uint64_t v17 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v10[*(int *)(v17 + 40)], &v11[*(int *)(v17 + 40)], v6);
  uint64_t v18 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  uint64_t v21 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  uint64_t v22 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[18];
  *(_OWORD *)&a1[a3[17]] = *(_OWORD *)&a2[a3[17]];
  *(_OWORD *)&a1[v23] = *(_OWORD *)&a2[v23];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  return a1;
}

char *_s14descr27097BA99O8EvidenceVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  long long v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v15 = *(void *)&a2[v12 + 8];
  *(void *)long long v13 = *(void *)&a2[v12];
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v14 + 3);
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v14 + 5);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v14 + 7);
  *((void *)v13 + 6) = *((void *)v14 + 6);
  *((void *)v13 + 7) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v14 + 9);
  *((void *)v13 + 8) = *((void *)v14 + 8);
  *((void *)v13 + 9) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v14 + 11);
  *((void *)v13 + 10) = *((void *)v14 + 10);
  *((void *)v13 + 11) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v14 + 13);
  *((void *)v13 + 12) = *((void *)v14 + 12);
  *((void *)v13 + 13) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v14 + 15);
  *((void *)v13 + 14) = *((void *)v14 + 14);
  *((void *)v13 + 15) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v14 + 17);
  *((void *)v13 + 16) = *((void *)v14 + 16);
  *((void *)v13 + 17) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v14 + 19);
  *((void *)v13 + 18) = *((void *)v14 + 18);
  *((void *)v13 + 19) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(&v13[*(int *)(v25 + 40)], &v14[*(int *)(v25 + 40)], v6);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[12];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[14];
  uint64_t v38 = (uint64_t *)&a1[v37];
  uint64_t v39 = (uint64_t *)&a2[v37];
  unint64_t v40 = *(void *)&a1[v37 + 8];
  if (v40 >> 60 != 15)
  {
    unint64_t v41 = v39[1];
    if (v41 >> 60 != 15)
    {
      uint64_t v42 = *v38;
      uint64_t *v38 = *v39;
      v38[1] = v41;
      sub_25C035294(v42, v40);
      goto LABEL_12;
    }
    sub_25C052A18((uint64_t)v38);
  }
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
LABEL_12:
  uint64_t v43 = a3[15];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v47 = *(void *)v45;
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)uint64_t v44 = v47;
  *((void *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v52 = *(void *)v50;
  uint64_t v51 = *((void *)v50 + 1);
  *(void *)uint64_t v49 = v52;
  *((void *)v49 + 1) = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[18];
  uint64_t v54 = &a1[v53];
  long long v55 = &a2[v53];
  uint64_t v57 = *(void *)v55;
  uint64_t v56 = *((void *)v55 + 1);
  *(void *)uint64_t v54 = v57;
  *((void *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  return a1;
}

uint64_t _s14descr27097BA99O8EvidenceVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C053018);
}

uint64_t sub_25C053018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = _s14descr27097BA99O6VictimVMa(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t _s14descr27097BA99O8EvidenceVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C053144);
}

uint64_t sub_25C053144(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = _s14descr27097BA99O6VictimVMa(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_25C053258()
{
  sub_25C055BF8(319, &qword_26A5889A8, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    _s14descr27097BA99O6VictimVMa(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *_s14descr27097BA99O7ReceiptVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr27097BA99O7ReceiptVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s14descr27097BA99O7ReceiptVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *_s14descr27097BA99O7ReceiptVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27097BA99O7ReceiptVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr27097BA99O7ReceiptVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O7ReceiptVMa()
{
  return &_s14descr27097BA99O7ReceiptVN;
}

uint64_t *sub_25C0534F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    uint64_t v11 = a2[13];
    a1[12] = a2[12];
    a1[13] = v11;
    uint64_t v12 = a2[15];
    a1[14] = a2[14];
    a1[15] = v12;
    uint64_t v13 = a2[17];
    a1[16] = a2[16];
    a1[17] = v13;
    uint64_t v14 = a2[19];
    uint64_t v15 = *(int *)(a3 + 40);
    uint64_t v20 = (char *)a1 + v15;
    uint64_t v21 = (char *)a2 + v15;
    a1[18] = a2[18];
    a1[19] = v14;
    uint64_t v16 = sub_25C0EA328();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v20, v21, v16);
  }
  return v3;
}

uint64_t sub_25C053684(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_25C0EA328();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_25C053744(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  uint64_t v13 = a2[19];
  uint64_t v14 = *(int *)(a3 + 40);
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = (char *)a2 + v14;
  a1[18] = a2[18];
  a1[19] = v13;
  uint64_t v15 = sub_25C0EA328();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v18, v19, v15);
  return a1;
}

void *sub_25C053888(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25C0EA328();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_25C053A44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  long long v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  long long v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = sub_25C0EA328();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

void *sub_25C053AE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[17];
  a1[16] = a2[16];
  a1[17] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[19];
  a1[18] = a2[18];
  a1[19] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(a3 + 40);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_25C0EA328();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_25C053BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C053C10);
}

uint64_t sub_25C053C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25C0EA328();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25C053CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C053CD4);
}

uint64_t sub_25C053CD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25C0EA328();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25C053D7C()
{
  uint64_t result = sub_25C0EA328();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14descr27097BA99O7SuspectVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14descr27097BA99O7SuspectVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14descr27097BA99O7SuspectVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s14descr27097BA99O7SuspectVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27097BA99O7SuspectVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 160);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr27097BA99O7SuspectVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 160) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O7SuspectVMa()
{
  return &_s14descr27097BA99O7SuspectVN;
}

char *_s14descr27097BA99O5MediaVwCP(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25C0EA238();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v42(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_25C0EA4E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_25C0EA608();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    unint64_t v27 = *(void *)&a2[v24 + 8];
    swift_bridgeObjectRetain();
    if (v27 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    }
    else
    {
      uint64_t v28 = *(void *)v26;
      sub_25C034EC8(v28, v27);
      *(void *)uint64_t v25 = v28;
      *((void *)v25 + 1) = v27;
    }
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = &a1[v29];
    uint64_t v32 = &a2[v29];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = &a1[v30];
    uint64_t v35 = &a2[v30];
    uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    if (v36(v35, 1, v7))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      v42(v34, v35, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v34, 0, 1, v7);
    }
    uint64_t v38 = a3[12];
    uint64_t v39 = &a1[v38];
    unint64_t v40 = &a2[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
  }
  return a1;
}

uint64_t _s14descr27097BA99O5MediaVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25C0EA238();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_25C0EA608();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(a1 + a2[9]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_25C035294(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + a2[11];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v4);
  }
  return result;
}

char *_s14descr27097BA99O5MediaVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v40 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v40(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_25C0EA4E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_25C0EA608();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  unint64_t v25 = *(void *)&a2[v22 + 8];
  swift_bridgeObjectRetain();
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v26 = *(void *)v24;
    sub_25C034EC8(v26, v25);
    *(void *)uint64_t v23 = v26;
    *((void *)v23 + 1) = v25;
  }
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = &a1[v27];
  uint64_t v30 = &a2[v27];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  uint64_t v32 = &a1[v28];
  uint64_t v33 = &a2[v28];
  uint64_t v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  if (v34(v33, 1, v6))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v40(v32, v33, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v32, 0, 1, v6);
  }
  uint64_t v36 = a3[12];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  return a1;
}

uint64_t _s14descr27097BA99O5MediaVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  uint64_t v46 = *(void (**)(void *, const void *, uint64_t))(v47 + 24);
  ((void (*)(uint64_t, uint64_t))v46)(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_25C0EA608();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = (uint64_t *)(a1 + v23);
  unint64_t v25 = (uint64_t *)(a2 + v23);
  unint64_t v26 = *(void *)(a2 + v23 + 8);
  if (*(void *)(a1 + v23 + 8) >> 60 == 15)
  {
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = *v25;
      sub_25C034EC8(v27, v26);
      *uint64_t v24 = v27;
      v24[1] = v26;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v26 >> 60 == 15)
  {
    sub_25C052A18((uint64_t)v24);
LABEL_12:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  uint64_t v28 = *v25;
  sub_25C034EC8(v28, v26);
  uint64_t v29 = *v24;
  unint64_t v30 = v24[1];
  *uint64_t v24 = v28;
  v24[1] = v26;
  sub_25C035294(v29, v30);
LABEL_14:
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  int v38 = v37(a1 + v34, 1, v48);
  int v39 = v37((uint64_t)v36, 1, v48);
  if (!v38)
  {
    if (!v39)
    {
      v46(v35, v36, v48);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v35, v48);
    goto LABEL_19;
  }
  if (v39)
  {
LABEL_19:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v35, v36, v48);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v35, 0, 1, v48);
LABEL_20:
  uint64_t v41 = a3[12];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  *(unsigned char *)(v42 + 8) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  return a1;
}

char *_s14descr27097BA99O5MediaVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v28(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_25C0EA4E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_25C0EA608();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v20], 1, v6))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v28(v21, v22, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
  }
  uint64_t v24 = a3[12];
  unint64_t v25 = &a1[v24];
  unint64_t v26 = &a2[v24];
  *(void *)unint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  return a1;
}

uint64_t _s14descr27097BA99O5MediaVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  uint64_t v47 = *(void (**)(void *, const void *, uint64_t))(v48 + 40);
  ((void (*)(uint64_t, uint64_t))v47)(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_25C0EA608();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  unint64_t v28 = *(void *)(a1 + v25 + 8);
  if (v28 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_12;
  }
  unint64_t v29 = *(void *)(v27 + 8);
  if (v29 >> 60 == 15)
  {
    sub_25C052A18(v26);
    goto LABEL_10;
  }
  uint64_t v30 = *(void *)v26;
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v29;
  sub_25C035294(v30, v28);
LABEL_12:
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  uint64_t v37 = (void *)(a1 + v36);
  int v38 = (const void *)(a2 + v36);
  int v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  int v40 = v39(a1 + v36, 1, v49);
  int v41 = v39((uint64_t)v38, 1, v49);
  if (!v40)
  {
    if (!v41)
    {
      v47(v37, v38, v49);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v37, v49);
    goto LABEL_17;
  }
  if (v41)
  {
LABEL_17:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v37, v38, v49);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v37, 0, 1, v49);
LABEL_18:
  uint64_t v43 = a3[12];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  return a1;
}

uint64_t _s14descr27097BA99O5MediaVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C05568C);
}

uint64_t sub_25C05568C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_25C0EA4E8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(a1 + a3[8] + 8);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[11];
    return v18(v20, a2, v19);
  }
}

uint64_t _s14descr27097BA99O5MediaVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C055878);
}

uint64_t sub_25C055878(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_25C0EA238();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_25C0EA4E8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[11];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

void sub_25C055A50()
{
  sub_25C0EA238();
  if (v0 <= 0x3F)
  {
    sub_25C0EA4E8();
    if (v1 <= 0x3F)
    {
      sub_25C055BF8(319, &qword_26A5889B0, MEMORY[0x263F17630]);
      if (v2 <= 0x3F)
      {
        sub_25C055BF8(319, &qword_26A5896E0, MEMORY[0x263F06EA8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_25C055BF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25C0EBE08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t _s14descr27097BA99O7AddressVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14descr27097BA99O7AddressVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14descr27097BA99O7AddressVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *_s14descr27097BA99O7AddressVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27097BA99O7AddressVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr27097BA99O7AddressVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O7AddressVMa()
{
  return &_s14descr27097BA99O7AddressVN;
}

uint64_t *initializeBufferWithCopyOfBuffer for CloudKitReport(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_25C034EC8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25C0EA238();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CloudKitReport(uint64_t a1, uint64_t a2)
{
  sub_25C035294(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for CloudKitReport(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25C034EC8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25C0EA238();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for CloudKitReport(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25C034EC8(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_25C035294(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25C0EA238();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for CloudKitReport(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25C0EA238();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *assignWithTake for CloudKitReport(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_25C035294(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25C0EA238();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudKitReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C05639C);
}

uint64_t sub_25C05639C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CloudKitReport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C056474);
}

uint64_t sub_25C056474(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25C0EA238();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25C056534()
{
  uint64_t result = sub_25C0EA238();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Details()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Details(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Details(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for Details(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Details(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Details(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Details()
{
  return &type metadata for Details;
}

void type metadata accessor for SCUIReportSensitiveMediaKind(uint64_t a1)
{
}

ValueMetadata *_s14descr27097BA99O7AddressV10CodingKeysOMa()
{
  return &_s14descr27097BA99O7AddressV10CodingKeysON;
}

uint64_t _s14descr27097BA99O5MediaV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr27097BA99O5MediaV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C056AB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O5MediaV10CodingKeysOMa()
{
  return &_s14descr27097BA99O5MediaV10CodingKeysON;
}

uint64_t _s14descr27097BA99O7AddressV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr27097BA99O7AddressV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C056C44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O5MediaV23ReportToAppleCodingKeysOMa()
{
  return &_s14descr27097BA99O5MediaV23ReportToAppleCodingKeysON;
}

ValueMetadata *_s14descr27097BA99O7SuspectV10CodingKeysOMa()
{
  return &_s14descr27097BA99O7SuspectV10CodingKeysON;
}

ValueMetadata *_s14descr27097BA99O6VictimV10CodingKeysOMa()
{
  return &_s14descr27097BA99O6VictimV10CodingKeysON;
}

ValueMetadata *_s14descr27097BA99O6VictimV23ReportToAppleCodingKeysOMa()
{
  return &_s14descr27097BA99O6VictimV23ReportToAppleCodingKeysON;
}

uint64_t getEnumTagSinglePayload for DirectReportNetworkManager.DummyReport.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s14descr27097BA99O7ConcernOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25C056DA8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O7ReceiptV10CodingKeysOMa()
{
  return &_s14descr27097BA99O7ReceiptV10CodingKeysON;
}

uint64_t _s14descr27097BA99O8EvidenceV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr27097BA99O8EvidenceV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *__n128 result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C056F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O8EvidenceV10CodingKeysOMa()
{
  return &_s14descr27097BA99O8EvidenceV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for SensitiveContentBlurView.Mode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr27097BA99O7SuspectV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0570D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O8EvidenceV23ReportToAppleCodingKeysOMa()
{
  return &_s14descr27097BA99O8EvidenceV23ReportToAppleCodingKeysON;
}

unsigned char *_s14descr27097BA99O6VictimV23ReportToAppleCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0571D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O8EvidenceV23ReportDetailsCodingKeysOMa()
{
  return &_s14descr27097BA99O8EvidenceV23ReportDetailsCodingKeysON;
}

uint64_t _s14descr27097BA99O8EvidenceV18MessagesCodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr27097BA99O8EvidenceV18MessagesCodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C057368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O8EvidenceV18MessagesCodingKeysOMa()
{
  return &_s14descr27097BA99O8EvidenceV18MessagesCodingKeysON;
}

unint64_t sub_25C0573A4()
{
  unint64_t result = qword_26A58E370[0];
  if (!qword_26A58E370[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58E370);
  }
  return result;
}

unint64_t sub_25C0573FC()
{
  unint64_t result = qword_26A58E600[0];
  if (!qword_26A58E600[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58E600);
  }
  return result;
}

unint64_t sub_25C057454()
{
  unint64_t result = qword_26A58E890[0];
  if (!qword_26A58E890[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58E890);
  }
  return result;
}

unint64_t sub_25C0574AC()
{
  unint64_t result = qword_26A58EB20[0];
  if (!qword_26A58EB20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58EB20);
  }
  return result;
}

uint64_t sub_25C057500()
{
  return sub_25C04D338(&qword_26A5889D0, type metadata accessor for SCUIReportFlags);
}

uint64_t sub_25C057548()
{
  return sub_25C04D338(&qword_26A5889D8, type metadata accessor for SCUIReportFlags);
}

uint64_t sub_25C057590()
{
  return sub_25C04D338(&qword_26A5889E0, type metadata accessor for SCUIReportFlags);
}

uint64_t sub_25C0575D8()
{
  return sub_25C04D338(&qword_26A5889E8, type metadata accessor for SCUIReportFlags);
}

unint64_t sub_25C057624()
{
  unint64_t result = qword_26A58EFB0[0];
  if (!qword_26A58EFB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58EFB0);
  }
  return result;
}

unint64_t sub_25C05767C()
{
  unint64_t result = qword_26A58F240[0];
  if (!qword_26A58F240[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58F240);
  }
  return result;
}

unint64_t sub_25C0576D4()
{
  unint64_t result = qword_26A58F450[0];
  if (!qword_26A58F450[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58F450);
  }
  return result;
}

unint64_t sub_25C05772C()
{
  unint64_t result = qword_26A58F660[0];
  if (!qword_26A58F660[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58F660);
  }
  return result;
}

unint64_t sub_25C057784()
{
  unint64_t result = qword_26A58F8F0[0];
  if (!qword_26A58F8F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58F8F0);
  }
  return result;
}

unint64_t sub_25C0577DC()
{
  unint64_t result = qword_26A58FB00[0];
  if (!qword_26A58FB00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58FB00);
  }
  return result;
}

unint64_t sub_25C057834()
{
  unint64_t result = qword_26A58FD10[0];
  if (!qword_26A58FD10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58FD10);
  }
  return result;
}

unint64_t sub_25C05788C()
{
  unint64_t result = qword_26A58FEA0;
  if (!qword_26A58FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58FEA0);
  }
  return result;
}

unint64_t sub_25C0578E4()
{
  unint64_t result = qword_26A58FEA8[0];
  if (!qword_26A58FEA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58FEA8);
  }
  return result;
}

unint64_t sub_25C05793C()
{
  unint64_t result = qword_26A58FF30;
  if (!qword_26A58FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58FF30);
  }
  return result;
}

unint64_t sub_25C057994()
{
  unint64_t result = qword_26A58FF38[0];
  if (!qword_26A58FF38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58FF38);
  }
  return result;
}

unint64_t sub_25C0579EC()
{
  unint64_t result = qword_26A58FFC0;
  if (!qword_26A58FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58FFC0);
  }
  return result;
}

unint64_t sub_25C057A44()
{
  unint64_t result = qword_26A58FFC8[0];
  if (!qword_26A58FFC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A58FFC8);
  }
  return result;
}

unint64_t sub_25C057A9C()
{
  unint64_t result = qword_26A590050;
  if (!qword_26A590050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590050);
  }
  return result;
}

unint64_t sub_25C057AF4()
{
  unint64_t result = qword_26A590058[0];
  if (!qword_26A590058[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A590058);
  }
  return result;
}

unint64_t sub_25C057B4C()
{
  unint64_t result = qword_26A5900E0;
  if (!qword_26A5900E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5900E0);
  }
  return result;
}

unint64_t sub_25C057BA4()
{
  unint64_t result = qword_26A5900E8[0];
  if (!qword_26A5900E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A5900E8);
  }
  return result;
}

unint64_t sub_25C057BFC()
{
  unint64_t result = qword_26A590170;
  if (!qword_26A590170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590170);
  }
  return result;
}

unint64_t sub_25C057C54()
{
  unint64_t result = qword_26A590178;
  if (!qword_26A590178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590178);
  }
  return result;
}

unint64_t sub_25C057CAC()
{
  unint64_t result = qword_26A590200;
  if (!qword_26A590200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590200);
  }
  return result;
}

unint64_t sub_25C057D04()
{
  unint64_t result = qword_26A590208[0];
  if (!qword_26A590208[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A590208);
  }
  return result;
}

unint64_t sub_25C057D5C()
{
  unint64_t result = qword_26A590290;
  if (!qword_26A590290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590290);
  }
  return result;
}

unint64_t sub_25C057DB4()
{
  unint64_t result = qword_26A590298[0];
  if (!qword_26A590298[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A590298);
  }
  return result;
}

unint64_t sub_25C057E0C()
{
  unint64_t result = qword_26A590320;
  if (!qword_26A590320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590320);
  }
  return result;
}

unint64_t sub_25C057E64()
{
  unint64_t result = qword_26A590328[0];
  if (!qword_26A590328[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A590328);
  }
  return result;
}

unint64_t sub_25C057EBC()
{
  unint64_t result = qword_26A5903B0;
  if (!qword_26A5903B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5903B0);
  }
  return result;
}

unint64_t sub_25C057F14()
{
  unint64_t result = qword_26A5903B8[0];
  if (!qword_26A5903B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A5903B8);
  }
  return result;
}

unint64_t sub_25C057F6C()
{
  unint64_t result = qword_26A590440;
  if (!qword_26A590440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A590440);
  }
  return result;
}

unint64_t sub_25C057FC4()
{
  unint64_t result = qword_26A590448[0];
  if (!qword_26A590448[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A590448);
  }
  return result;
}

uint64_t sub_25C058018()
{
  unint64_t v0 = sub_25C0EC0E8();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_25C058064()
{
  unint64_t v0 = sub_25C0EC0E8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25C0580B0()
{
  unint64_t v0 = sub_25C0EC0E8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_25C0580FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_25C058134()
{
  unint64_t result = qword_26A588A08;
  if (!qword_26A588A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588A08);
  }
  return result;
}

uint64_t sub_25C058188()
{
  return swift_release();
}

unint64_t sub_25C058190()
{
  unint64_t result = qword_26A588A58;
  if (!qword_26A588A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5888B0);
    sub_25C04D338(&qword_26A588A60, (void (*)(uint64_t))type metadata accessor for Report.Media);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588A58);
  }
  return result;
}

uint64_t sub_25C058234(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C058304(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C0583D0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static WarningMenuButton.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WarningMenuButton.Action.hash(into:)()
{
  return sub_25C0EC358();
}

uint64_t WarningMenuButton.Action.hashValue.getter()
{
  return sub_25C0EC368();
}

uint64_t WarningMenuButton.interventionType.getter()
{
  return *(void *)v0;
}

uint64_t WarningMenuButton.options.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t WarningMenuButton.actionBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t WarningMenuButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v45 = sub_25C0EB508();
  uint64_t v2 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  unsigned int v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AA0) - 8;
  MEMORY[0x270FA5388](v43);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AA8) - 8;
  MEMORY[0x270FA5388](v42);
  int v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AB0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AB8) - 8;
  MEMORY[0x270FA5388](v44);
  uint64_t v41 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v15 = v1[2];
  uint64_t v39 = v1[1];
  uint64_t v40 = v14;
  uint64_t v38 = v15;
  uint64_t v16 = v1[3];
  uint64_t v17 = (objc_class *)type metadata accessor for _WarningMenuButton.MenuDelegate();
  int v18 = (char *)objc_allocWithZone(v17);
  uint64_t v19 = &v18[OBJC_IVAR____TtCV26SensitiveContentAnalysisUI18_WarningMenuButton12MenuDelegate_actionBlock];
  *(void *)uint64_t v19 = v15;
  *((void *)v19 + 1) = v16;
  v48.receiver = v18;
  v48.super_class = v17;
  swift_retain_n();
  id v47 = objc_msgSendSuper2(&v48, sel_init);
  sub_25C0EB378();
  swift_release();
  uint64_t v36 = *((void *)&v49 + 1);
  uint64_t v37 = v49;
  uint64_t v20 = sub_25C0EB538();
  uint64_t v22 = v21;
  uint64_t v23 = v4;
  sub_25C0EB4F8();
  uint64_t v24 = v4;
  uint64_t v25 = v45;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v24, v45);
  *(_WORD *)&v6[*(int *)(v43 + 64)] = 256;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v23, v25);
  sub_25C05899C((uint64_t)v6, (uint64_t)v8);
  uint64_t v26 = (uint64_t *)&v8[*(int *)(v42 + 44)];
  *uint64_t v26 = v20;
  v26[1] = v22;
  sub_25C02FB8C((uint64_t)v8, (uint64_t)v12 + *(int *)(v10 + 44), &qword_26A588AA8);
  uint64_t v27 = v39;
  *unint64_t v12 = v40;
  v12[1] = v27;
  v12[2] = v38;
  v12[3] = v16;
  uint64_t v28 = v36;
  v12[4] = v37;
  v12[5] = v28;
  sub_25C02FBF0((uint64_t)v8, &qword_26A588AA8);
  sub_25C0EB538();
  sub_25C0EA818();
  uint64_t v29 = v41;
  sub_25C02FB8C((uint64_t)v12, v41, &qword_26A588AB0);
  uint64_t v30 = (_OWORD *)(v29 + *(int *)(v44 + 44));
  long long v31 = v50;
  *uint64_t v30 = v49;
  v30[1] = v31;
  v30[2] = v51;
  sub_25C02FBF0((uint64_t)v12, &qword_26A588AB0);
  LOBYTE(v23) = sub_25C0EAED8();
  uint64_t v32 = v46;
  sub_25C02FB8C(v29, v46, &qword_26A588AB8);
  uint64_t v33 = v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588AC8) + 36);
  *(unsigned char *)uint64_t v33 = (_BYTE)v23;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(unsigned char *)(v33 + 40) = 1;
  return sub_25C02FBF0(v29, &qword_26A588AB8);
}

uint64_t sub_25C058908@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

id sub_25C058918(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtCV26SensitiveContentAnalysisUI18_WarningMenuButton12MenuDelegate_actionBlock];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for _WarningMenuButton.MenuDelegate()
{
  return self;
}

uint64_t sub_25C05899C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C058A04(uint64_t a1)
{
  return sub_25C058A98(a1, 1);
}

uint64_t sub_25C058A14(uint64_t a1)
{
  return sub_25C058A98(a1, 0);
}

uint64_t sub_25C058A24(uint64_t a1)
{
  return sub_25C058A98(a1, 2);
}

uint64_t sub_25C058A34(uint64_t a1)
{
  return sub_25C058A98(a1, 3);
}

uint64_t sub_25C058A44(uint64_t a1)
{
  return sub_25C058A98(a1, 4);
}

uint64_t sub_25C058A54(uint64_t a1)
{
  return sub_25C058A98(a1, 5);
}

uint64_t sub_25C058A64(uint64_t a1)
{
  return sub_25C058A98(a1, 6);
}

uint64_t sub_25C058A74(uint64_t a1)
{
  return sub_25C058A98(a1, 7);
}

uint64_t sub_25C058A84()
{
  return 0;
}

uint64_t sub_25C058A90(uint64_t a1)
{
  return sub_25C058A98(a1, 8);
}

uint64_t sub_25C058A98(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(char *))(v2
                                        + OBJC_IVAR____TtCV26SensitiveContentAnalysisUI18_WarningMenuButton12MenuDelegate_actionBlock);
  char v5 = a2;
  return v3(&v5);
}

void sub_25C058AE4(char *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = *(void (**)(char *))&a1[OBJC_IVAR____TtCV26SensitiveContentAnalysisUI18_WarningMenuButton12MenuDelegate_actionBlock];
  char v7 = a4;
  swift_unknownObjectRetain();
  uint64_t v6 = a1;
  v5(&v7);
  swift_unknownObjectRelease();
}

id sub_25C058B94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _WarningMenuButton.MenuDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_25C058BDC(uint64_t a1)
{
  return sub_25C0590E4(a1, *v1, v1[1], v1[4], v1[5]);
}

void sub_25C058BE8(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AD0);
  sub_25C0EB388();
  id v6 = objc_msgSend(v5, sel_menuWithDelegate_additionalOptions_interventionType_, v7, v4, v3);

  objc_msgSend(a1, sel_setMenu_, v6);
}

uint64_t sub_25C058C9C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25C059D24();

  return sub_25C0630F0(a1, a2, v4);
}

uint64_t sub_25C058CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C059D24();

  return sub_25C063104(a1, a2, a3, v6);
}

uint64_t sub_25C058D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C059624();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_25C058DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_25C059624();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_25C058E04()
{
}

uint64_t sub_25C058E2C()
{
  id v0 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t result = MEMORY[0x26117CC30](v0);
  qword_26A595608 = result;
  return result;
}

uint64_t *sub_25C058E6C()
{
  if (qword_26A5904D0 != -1) {
    swift_once();
  }
  return &qword_26A595608;
}

uint64_t sub_25C058EB8()
{
  if (qword_26A5904D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26A595610 = qword_26A595608;
  return swift_retain();
}

uint64_t *sub_25C058F38()
{
  if (qword_26A5904D8 != -1) {
    swift_once();
  }
  return &qword_26A595610;
}

uint64_t sub_25C058F84()
{
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  uint64_t result = sub_25C0EAF98();
  qword_26A595618 = result;
  return result;
}

uint64_t *sub_25C058FD0()
{
  if (qword_26A5904E0 != -1) {
    swift_once();
  }
  return &qword_26A595618;
}

uint64_t sub_25C05901C()
{
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  id v1 = objc_msgSend(v0, sel_fontWithSize_, 11.0);

  uint64_t result = sub_25C0EAF98();
  qword_26A595620 = result;
  return result;
}

uint64_t *sub_25C059098()
{
  if (qword_26A5904E8 != -1) {
    swift_once();
  }
  return &qword_26A595620;
}

id sub_25C0590E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588418);
  MEMORY[0x270FA5388](v5 - 8);
  char v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25C0EBD38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25C0EBDC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EBDB8();
  id v16 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x263F83588]);
  uint64_t v17 = (void *)sub_25C0EB828();
  id v18 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v17, v16);

  sub_25C0EBDA8();
  id v19 = objc_msgSend(self, sel_labelColor);
  sub_25C0EBD98();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F821B8], v8);
  sub_25C0EBD48();
  id v20 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  objc_msgSend(v20, sel__scaledValueForValue_, 2.4);
  double v22 = v21;

  uint64_t v23 = (void (*)(void *, void))sub_25C0EBD68();
  *uint64_t v24 = *v24 - v22;
  v23(v42, 0);
  uint64_t v25 = (void (*)(void *, void))sub_25C0EBD68();
  *(double *)(v26 + 16) = v22 + *(double *)(v26 + 16);
  v25(v42, 0);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824E8]), sel_init);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v7, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  sub_25C0EBDE8();
  id v28 = objc_msgSend(v27, sel_titleLabel);
  if (v28)
  {
    uint64_t v29 = v28;
    objc_msgSend(v28, sel__setOverrideUserInterfaceStyle_, 2);
  }
  id v30 = objc_msgSend(v27, sel_imageView);
  if (v30)
  {
    long long v31 = v30;
    objc_msgSend(v30, sel__setOverrideUserInterfaceStyle_, 2);
  }
  objc_msgSend(v27, sel_setShowsMenuAsPrimaryAction_, 1);
  uint64_t v32 = self;
  v42[0] = v37;
  v42[1] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588AD0);
  sub_25C0EB388();
  uint64_t v33 = v41;
  id v34 = objc_msgSend(v32, sel_menuWithDelegate_additionalOptions_interventionType_, v41, v39, v40);

  objc_msgSend(v27, sel_setMenu_, v34);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v27;
}

unint64_t sub_25C05958C()
{
  unint64_t result = qword_26A588AD8;
  if (!qword_26A588AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588AD8);
  }
  return result;
}

uint64_t sub_25C0595E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25C0595FC(uint64_t a1)
{
  unint64_t result = sub_25C059624();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25C059624()
{
  unint64_t result = qword_26A588AE8;
  if (!qword_26A588AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588AE8);
  }
  return result;
}

unint64_t sub_25C05967C()
{
  unint64_t result = qword_26A588AF0;
  if (!qword_26A588AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588AF0);
  }
  return result;
}

uint64_t destroy for WarningMenuButton()
{
  return swift_release();
}

uint64_t initializeWithCopy for WarningMenuButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for WarningMenuButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a2[3];
  a1[2] = a2[2];
  a1[3] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for WarningMenuButton(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WarningMenuButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WarningMenuButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WarningMenuButton()
{
  return &type metadata for WarningMenuButton;
}

unsigned char *storeEnumTagSinglePayload for WarningMenuButton.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C059900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WarningMenuButton.Action()
{
  return &type metadata for WarningMenuButton.Action;
}

uint64_t destroy for _WarningMenuButton(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for _WarningMenuButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v5 = *(void **)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  swift_retain();
  id v6 = v5;
  swift_retain();
  return a1;
}

void *assignWithCopy for _WarningMenuButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = (void *)a2[4];
  id v6 = (void *)a1[4];
  a1[4] = v5;
  id v7 = v5;

  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for _WarningMenuButton(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_release();

  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _WarningMenuButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _WarningMenuButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _WarningMenuButton()
{
  return &type metadata for _WarningMenuButton;
}

uint64_t sub_25C059B48()
{
  return sub_25C059BBC(&qword_26A588B00, &qword_26A588AC8, (void (*)(void))sub_25C059B8C);
}

uint64_t sub_25C059B8C()
{
  return sub_25C059BBC(&qword_26A588B08, &qword_26A588AB8, (void (*)(void))sub_25C059C38);
}

uint64_t sub_25C059BBC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C059C38()
{
  unint64_t result = qword_26A588B10;
  if (!qword_26A588B10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588AB0);
    sub_25C05967C();
    sub_25C059CB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588B10);
  }
  return result;
}

unint64_t sub_25C059CB4()
{
  unint64_t result = qword_26A588B18;
  if (!qword_26A588B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588AA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588B18);
  }
  return result;
}

void type metadata accessor for SCUIMoreHelpMenuOptions(uint64_t a1)
{
}

unint64_t sub_25C059D24()
{
  unint64_t result = qword_26A588B30;
  if (!qword_26A588B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588B30);
  }
  return result;
}

BOOL static SensitiveContentBlurView.Mode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SensitiveContentBlurView.Mode.hash(into:)()
{
  return sub_25C0EC358();
}

void *static SensitiveContentBlurView.Mode.allCases.getter()
{
  return &unk_27097DFC0;
}

uint64_t SensitiveContentBlurView.Mode.hashValue.getter()
{
  return sub_25C0EC368();
}

void sub_25C059E0C(void *a1@<X8>)
{
  *a1 = &unk_27097DFC0;
}

SensitiveContentAnalysisUI::SensitiveContentBlurView __swiftcall SensitiveContentBlurView.init(mode:options:)(SensitiveContentAnalysisUI::SensitiveContentBlurView::Mode mode, __C::SCUISensitiveContentOverlayOptions options)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)mode;
  *(__C::SCUISensitiveContentOverlayOptions *)(v2 + 8) = options;
  result.options = options;
  result.mode = mode;
  return result;
}

uint64_t SensitiveContentBlurView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v302 = a1;
  uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B38);
  MEMORY[0x270FA5388](v278);
  uint64_t v292 = (uint64_t)&v244 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B40);
  uint64_t v3 = MEMORY[0x270FA5388](v301);
  uint64_t v281 = (uint64_t)&v244 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v282 = (uint64_t)&v244 - v5;
  uint64_t v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B48);
  uint64_t v6 = MEMORY[0x270FA5388](v285);
  uint64_t v276 = (uint64_t)&v244 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v277 = (uint64_t)&v244 - v8;
  uint64_t v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B50);
  MEMORY[0x270FA5388](v283);
  uint64_t v284 = (uint64_t)&v244 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B58);
  MEMORY[0x270FA5388](v297);
  v286 = (char *)&v244 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B60);
  uint64_t v11 = MEMORY[0x270FA5388](v291);
  uint64_t v274 = (uint64_t)&v244 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v275 = (uint64_t)&v244 - v13;
  uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B68);
  uint64_t v14 = MEMORY[0x270FA5388](v290);
  uint64_t v279 = (uint64_t)&v244 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v280 = (uint64_t)&v244 - v16;
  uint64_t v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B70);
  MEMORY[0x270FA5388](v299);
  uint64_t v300 = (uint64_t)&v244 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B78);
  MEMORY[0x270FA5388](v293);
  uint64_t v295 = (uint64_t)&v244 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v287 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B80);
  MEMORY[0x270FA5388](v287);
  uint64_t v288 = (uint64_t)&v244 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B88);
  MEMORY[0x270FA5388](v294);
  uint64_t v289 = (uint64_t)&v244 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B90);
  MEMORY[0x270FA5388](v298);
  uint64_t v296 = (uint64_t)&v244 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25C0EB508();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v244 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588B98);
  uint64_t v26 = MEMORY[0x270FA5388](v303);
  id v28 = (char *)&v244 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  long long v31 = (char *)&v244 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  id v34 = (char *)&v244 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v244 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v244 - v38;
  uint64_t v40 = *v1;
  uint64_t v41 = *((void *)v1 + 1);
  switch(v40)
  {
    case 2:
      sub_25C0EB4F8();
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v37, v25, v22);
      *(_WORD *)&v37[*(int *)(v303 + 56)] = 256;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v64 = &qword_26A588B98;
      sub_25C0516EC((uint64_t)v37, (uint64_t)v39, &qword_26A588B98);
      sub_25C02FB8C((uint64_t)v39, v288, &qword_26A588B98);
      swift_storeEnumTagMultiPayload();
      sub_25C0583D0(&qword_26A588BB0, &qword_26A588B98);
      sub_25C05CFE0(&qword_26A588BB8, &qword_26A588B68, &qword_26A588BC0, &qword_26A588BC8);
      uint64_t v65 = v289;
      sub_25C0EAD28();
      sub_25C02FB8C(v65, v295, &qword_26A588B88);
      swift_storeEnumTagMultiPayload();
      sub_25C05CF20();
      sub_25C05D0A8();
      uint64_t v66 = v296;
      sub_25C0EAD28();
      sub_25C02FBF0(v65, &qword_26A588B88);
      sub_25C02FB8C(v66, v300, &qword_26A588B90);
      swift_storeEnumTagMultiPayload();
      sub_25C05CEE4();
      sub_25C05D164();
      sub_25C0EAD28();
      sub_25C02FBF0(v66, &qword_26A588B90);
      uint64_t v67 = (uint64_t)v39;
      break;
    case 3:
    case 6:
      uint64_t v54 = v40;
      sub_25C0EB4F8();
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v25, v22);
      *(_WORD *)&v34[*(int *)(v303 + 56)] = 256;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v55 = sub_25C0EB538();
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      if ((v41 & 2) != 0)
      {
        sub_25C05D3F8(v304);
        sub_25C0516EC((uint64_t)v304, (uint64_t)&v317, &qword_26A588C28);
      }
      else
      {
        uint64_t v258 = v55;
        uint64_t v59 = v41;
        unsigned __int8 v60 = sub_25C0EAEA8();
        char v61 = sub_25C0EAEC8();
        int v62 = sub_25C0EAEB8();
        sub_25C0EAEB8();
        if (sub_25C0EAEB8() != v60) {
          int v62 = sub_25C0EAEB8();
        }
        sub_25C0EAEB8();
        char v63 = sub_25C0EAEB8();
        uint64_t v257 = v58;
        v255 = v34;
        if (v63 == v61) {
          int v256 = v62;
        }
        else {
          int v256 = sub_25C0EAEB8();
        }
        uint64_t v267 = sub_25C0EABF8();
        LOBYTE(v317) = v54;
        uint64_t v272 = v54;
        uint64_t v273 = v59;
        *((void *)&v317 + 1) = v59;
        sub_25C05C210((uint64_t)v304);
        uint64_t v160 = *((void *)&v304[0] + 1);
        uint64_t v161 = *((void *)&v304[1] + 1);
        uint64_t v291 = *(void *)&v304[1];
        uint64_t v292 = *(void *)&v304[0];
        char v162 = v304[2];
        uint64_t v262 = *(void *)&v304[2];
        uint64_t v263 = *((void *)&v304[1] + 1);
        v270 = *(uint64_t (**)())&v304[3];
        v271 = (char *)*((void *)&v304[2] + 1);
        uint64_t v269 = *((void *)&v304[3] + 1);
        uint64_t v163 = *(void *)&v304[4];
        uint64_t v259 = *((void *)&v304[0] + 1);
        uint64_t v260 = *(void *)&v304[4];
        __int16 v164 = WORD4(v304[4]);
        int v261 = WORD4(v304[4]);
        int v165 = BYTE10(v304[4]);
        LOBYTE(v317) = v54;
        *((void *)&v317 + 1) = v59;
        sub_25C05C850((uint64_t)v304);
        uint64_t v283 = *((void *)&v304[0] + 1);
        uint64_t v284 = *(void *)&v304[0];
        uint64_t v281 = *((void *)&v304[1] + 1);
        uint64_t v282 = *(void *)&v304[1];
        uint64_t v277 = *((void *)&v304[2] + 1);
        uint64_t v278 = *(void *)&v304[2];
        uint64_t v275 = *((void *)&v304[3] + 1);
        uint64_t v276 = *(void *)&v304[3];
        uint64_t v166 = *(void *)&v304[4];
        char v167 = BYTE8(v304[4]);
        LODWORD(v285) = BYTE8(v304[4]);
        char v168 = BYTE9(v304[4]);
        int v268 = v165;
        LOBYTE(v304[0]) = v165;
        LOBYTE(v317) = BYTE9(v304[4]);
        LODWORD(v286) = BYTE9(v304[4]);
        v253 = sub_25C05D298;
        v252 = (uint64_t (*)(uint64_t))sub_25C05D224;
        sub_25C05D2F4(v292, v160, v291, v161, v162, (uint64_t)v271, (uint64_t)v270, v269, v163, v164, v165, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D298);
        char v243 = v168;
        char v238 = v167;
        uint64_t v169 = v166;
        uint64_t v266 = v166;
        uint64_t v235 = v166;
        uint64_t v171 = v283;
        uint64_t v170 = v284;
        uint64_t v172 = v281;
        LOBYTE(v166) = v282;
        uint64_t v174 = v277;
        uint64_t v173 = v278;
        uint64_t v175 = v275;
        uint64_t v176 = v276;
        sub_25C05CD84(v284, v283, v282, v281, v278, v277, v276, v275, v235, v238, v243);
        sub_25C05CE34(v170, v171, v166, v172, v173, v174, v176, v175, v169, v285, (char)v286);
        v265 = sub_25C05D3A0;
        v264 = (uint64_t (*)(uint64_t))sub_25C05D330;
        LOWORD(v169) = v261;
        uint64_t v177 = v260;
        uint64_t v178 = v259;
        uint64_t v180 = v262;
        uint64_t v179 = v263;
        v181 = v270;
        uint64_t v182 = (uint64_t)v271;
        uint64_t v183 = v269;
        sub_25C05D2F4(v292, v259, v291, v263, v262, (uint64_t)v271, (uint64_t)v270, v269, v260, v261, v268, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D3A0);
        LOBYTE(v345) = 1;
        LOBYTE(v317) = v272;
        *((void *)&v317 + 1) = v273;
        sub_25C05C210((uint64_t)v304);
        uint64_t v250 = *((void *)&v304[0] + 1);
        uint64_t v251 = *(void *)&v304[0];
        uint64_t v248 = *((void *)&v304[1] + 1);
        uint64_t v249 = *(void *)&v304[1];
        uint64_t v246 = *((void *)&v304[2] + 1);
        uint64_t v247 = *(void *)&v304[2];
        uint64_t v244 = *((void *)&v304[3] + 1);
        uint64_t v245 = *(void *)&v304[3];
        uint64_t v272 = *(void *)&v304[4];
        LOWORD(v175) = WORD4(v304[4]);
        LODWORD(v273) = WORD4(v304[4]);
        LODWORD(v274) = BYTE10(v304[4]);
        uint64_t v254 = sub_25C0EB308();
        long long v317 = (unint64_t)v267;
        LOBYTE(v318) = 1;
        *((void *)&v318 + 1) = v292;
        *(void *)&long long v319 = v178;
        *((void *)&v319 + 1) = v291;
        *(void *)&long long v320 = v179;
        *((void *)&v320 + 1) = v180;
        *(void *)&long long v321 = v182;
        *((void *)&v321 + 1) = v181;
        *(void *)&long long v322 = v183;
        *((void *)&v322 + 1) = v177;
        LOWORD(v323) = v169;
        BYTE2(v323) = v268;
        *((void *)&v323 + 1) = v284;
        *(void *)&v324[0] = v283;
        *((void *)&v324[0] + 1) = v282;
        *(void *)&v324[1] = v281;
        *((void *)&v324[1] + 1) = v278;
        *(void *)&long long v325 = v277;
        *((void *)&v325 + 1) = v276;
        *(void *)&long long v326 = v275;
        *((void *)&v326 + 1) = v266;
        LOBYTE(v327) = v285;
        HIBYTE(v327) = (_BYTE)v286;
        v311[0] = v323;
        v311[1] = v324[0];
        long long v309 = v321;
        long long v310 = v322;
        long long v307 = v319;
        long long v308 = v320;
        long long v305 = (unint64_t)v267;
        long long v306 = v318;
        LOWORD(v315) = v327;
        long long v313 = v325;
        long long v314 = v326;
        long long v312 = v324[1];
        LOBYTE(v182) = v274;
        LOBYTE(v316[0]) = v274;
        v185 = v252;
        v184 = v253;
        sub_25C05D964((uint64_t)&v317, v252, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v253, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_25C05CD84);
        v236 = v185;
        v239 = v184;
        char v230 = v182;
        __int16 v228 = v175;
        uint64_t v186 = v272;
        uint64_t v187 = v250;
        uint64_t v188 = v251;
        uint64_t v189 = v248;
        uint64_t v190 = v249;
        uint64_t v192 = v246;
        uint64_t v191 = v247;
        uint64_t v194 = v244;
        uint64_t v193 = v245;
        sub_25C05D2F4(v251, v250, v249, v248, v247, v246, v245, v244, v272, v228, v230, v236, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v239);
        sub_25C05D2F4(v188, v187, v190, v189, v191, v192, v193, v194, v186, v273, v274, v264, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v265);
        v304[0] = (unint64_t)v267;
        LOBYTE(v304[1]) = 1;
        *((void *)&v304[1] + 1) = v292;
        *(void *)&v304[2] = v259;
        *((void *)&v304[2] + 1) = v291;
        *(void *)&v304[3] = v263;
        *((void *)&v304[3] + 1) = v262;
        *(void *)&v304[4] = v271;
        *((void *)&v304[4] + 1) = v270;
        *(void *)&v304[5] = v269;
        *((void *)&v304[5] + 1) = v260;
        LOWORD(v304[6]) = v261;
        BYTE2(v304[6]) = v268;
        *((void *)&v304[6] + 1) = v284;
        *(void *)&v304[7] = v283;
        *((void *)&v304[7] + 1) = v282;
        *(void *)&v304[8] = v281;
        *((void *)&v304[8] + 1) = v278;
        *(void *)&v304[9] = v277;
        *((void *)&v304[9] + 1) = v276;
        *(void *)&v304[10] = v275;
        *((void *)&v304[10] + 1) = v266;
        LOBYTE(v304[11]) = v285;
        BYTE1(v304[11]) = (_BYTE)v286;
        sub_25C05D964((uint64_t)v304, v264, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v265, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_25C05CE34);
        *(_OWORD *)((char *)&v316[8] + 7) = v312;
        *(_OWORD *)((char *)&v316[9] + 7) = v313;
        *(_OWORD *)((char *)&v316[10] + 7) = v314;
        *(void *)((char *)&v316[11] + 7) = v315;
        *(_OWORD *)((char *)&v316[4] + 7) = v309;
        *(_OWORD *)((char *)&v316[5] + 7) = v310;
        *(_OWORD *)((char *)&v316[6] + 7) = v311[0];
        *(_OWORD *)((char *)&v316[7] + 7) = v311[1];
        *(_OWORD *)((char *)v316 + 7) = v305;
        *(_OWORD *)((char *)&v316[1] + 7) = v306;
        *(_OWORD *)((char *)&v316[2] + 7) = v307;
        *(_OWORD *)((char *)&v316[3] + 7) = v308;
        *(_OWORD *)((char *)&v304[8] + 1) = v316[8];
        *(_OWORD *)((char *)&v304[9] + 1) = v316[9];
        *(_OWORD *)((char *)&v304[10] + 1) = v316[10];
        v304[11] = *(_OWORD *)((char *)&v316[10] + 15);
        *(_OWORD *)((char *)&v304[4] + 1) = v316[4];
        *(_OWORD *)((char *)&v304[5] + 1) = v316[5];
        *(_OWORD *)((char *)&v304[6] + 1) = v316[6];
        *(_OWORD *)((char *)&v304[7] + 1) = v316[7];
        *(_OWORD *)((char *)v304 + 1) = v316[0];
        *(_OWORD *)((char *)&v304[1] + 1) = v316[1];
        *(_OWORD *)((char *)&v304[2] + 1) = v316[2];
        LOBYTE(v304[0]) = v256;
        *(_OWORD *)((char *)&v304[3] + 1) = v316[3];
        *(void *)&v304[12] = v188;
        *((void *)&v304[12] + 1) = v187;
        *(void *)&v304[13] = v190;
        *((void *)&v304[13] + 1) = v189;
        *(void *)&v304[14] = v191;
        *((void *)&v304[14] + 1) = v192;
        *(void *)&v304[15] = v193;
        *((void *)&v304[15] + 1) = v194;
        *(void *)&v304[16] = v272;
        WORD4(v304[16]) = v273;
        BYTE10(v304[16]) = v274;
        *(_DWORD *)((char *)&v304[16] + 11) = v345;
        HIBYTE(v304[16]) = BYTE4(v345);
        *(void *)&v304[17] = v254;
        WORD4(v304[17]) = 256;
        nullsub_1(v304);
        sub_25C0516EC((uint64_t)v304, (uint64_t)&v317, &qword_26A588C28);
        uint64_t v58 = v257;
        uint64_t v56 = v258;
        id v34 = v255;
      }
      sub_25C0516EC((uint64_t)&v317, (uint64_t)v304, &qword_26A588C28);
      *(void *)&v304[18] = v56;
      *((void *)&v304[18] + 1) = v58;
      uint64_t v195 = v279;
      sub_25C02FB8C((uint64_t)v34, v279, &qword_26A588B98);
      memcpy((void *)(v195 + *(int *)(v290 + 36)), v304, 0x130uLL);
      sub_25C02FBF0((uint64_t)v34, &qword_26A588B98);
      uint64_t v64 = &qword_26A588B68;
      uint64_t v196 = v280;
      sub_25C0516EC(v195, v280, &qword_26A588B68);
      sub_25C02FB8C(v196, v288, &qword_26A588B68);
      swift_storeEnumTagMultiPayload();
      sub_25C0583D0(&qword_26A588BB0, &qword_26A588B98);
      sub_25C05CFE0(&qword_26A588BB8, &qword_26A588B68, &qword_26A588BC0, &qword_26A588BC8);
      uint64_t v197 = v289;
      sub_25C0EAD28();
      sub_25C02FB8C(v197, v295, &qword_26A588B88);
      swift_storeEnumTagMultiPayload();
      sub_25C05CF20();
      sub_25C05D0A8();
      uint64_t v198 = v296;
      sub_25C0EAD28();
      sub_25C02FBF0(v197, &qword_26A588B88);
      sub_25C02FB8C(v198, v300, &qword_26A588B90);
      swift_storeEnumTagMultiPayload();
      sub_25C05CEE4();
      sub_25C05D164();
      sub_25C0EAD28();
      sub_25C02FBF0(v198, &qword_26A588B90);
      uint64_t v67 = v196;
      break;
    case 4:
      sub_25C0EB4F8();
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v31, v25, v22);
      *(_WORD *)&v31[*(int *)(v303 + 56)] = 256;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v68 = sub_25C0EB538();
      uint64_t v276 = v69;
      uint64_t v277 = v68;
      LOBYTE(v317) = 4;
      *((void *)&v317 + 1) = v41;
      sub_25C05C210((uint64_t)v304);
      uint64_t v70 = *(void *)&v304[1];
      uint64_t v290 = *((void *)&v304[0] + 1);
      uint64_t v71 = *((void *)&v304[1] + 1);
      uint64_t v288 = *(void *)&v304[0];
      uint64_t v287 = *((void *)&v304[2] + 1);
      uint64_t v289 = *(void *)&v304[2];
      uint64_t v292 = *((void *)&v304[3] + 1);
      uint64_t v303 = *(void *)&v304[3];
      uint64_t v72 = *(void *)&v304[4];
      int v73 = WORD4(v304[4]);
      int v74 = BYTE10(v304[4]);
      unsigned __int8 v75 = sub_25C0EAEA8();
      char v76 = sub_25C0EAEC8();
      int v77 = sub_25C0EAEB8();
      sub_25C0EAEB8();
      if (sub_25C0EAEB8() != v75) {
        int v77 = sub_25C0EAEB8();
      }
      sub_25C0EAEB8();
      char v78 = sub_25C0EAEB8();
      v271 = v31;
      if (v78 == v76) {
        LODWORD(v273) = v77;
      }
      else {
        LODWORD(v273) = sub_25C0EAEB8();
      }
      v270 = sub_25C05D298;
      LODWORD(v281) = v74;
      char v231 = v74;
      __int16 v199 = v73;
      LODWORD(v280) = v73;
      uint64_t v226 = v72;
      uint64_t v200 = v72;
      uint64_t v278 = v70;
      uint64_t v279 = v72;
      uint64_t v201 = v288;
      char v202 = v289;
      uint64_t v282 = v71;
      uint64_t v203 = v287;
      sub_25C05D2F4(v288, v290, v70, v71, v289, v287, v303, v292, v226, v73, v231, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D298);
      uint64_t v272 = sub_25C0EB308();
      char v204 = v281;
      uint64_t v205 = v71;
      char v206 = v202;
      sub_25C05D2F4(v201, v290, v70, v205, v202, v203, v303, v292, v200, v199, v281, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v270);
      v270 = sub_25C05D3A0;
      char v232 = v204;
      LOBYTE(v199) = v204;
      LOWORD(v200) = v280;
      uint64_t v207 = v279;
      uint64_t v208 = v288;
      uint64_t v209 = v290;
      uint64_t v210 = v278;
      char v211 = v206;
      uint64_t v212 = v203;
      uint64_t v213 = v303;
      uint64_t v214 = v292;
      sub_25C05D2F4(v288, v290, v278, v282, v211, v212, v303, v292, v279, v280, v232, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D3A0);
      __int16 v229 = v200;
      uint64_t v227 = v207;
      uint64_t v215 = v282;
      uint64_t v216 = v289;
      uint64_t v217 = v287;
      sub_25C05D2F4(v208, v209, v210, v282, v289, v287, v213, v214, v227, v229, v199, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v270);
      uint64_t v218 = (uint64_t)v271;
      uint64_t v219 = v274;
      sub_25C02FB8C((uint64_t)v271, v274, &qword_26A588B98);
      uint64_t v220 = v219 + *(int *)(v291 + 36);
      *(unsigned char *)uint64_t v220 = v273;
      *(void *)(v220 + 8) = v208;
      *(void *)(v220 + 16) = v209;
      *(void *)(v220 + 24) = v278;
      *(void *)(v220 + 32) = v215;
      *(void *)(v220 + 40) = v216;
      *(void *)(v220 + 48) = v217;
      *(void *)(v220 + 56) = v213;
      *(void *)(v220 + 64) = v214;
      *(void *)(v220 + 72) = v279;
      *(_WORD *)(v220 + 80) = v280;
      *(unsigned char *)(v220 + 82) = v281;
      *(void *)(v220 + 88) = v272;
      *(_WORD *)(v220 + 96) = 256;
      uint64_t v221 = v276;
      *(void *)(v220 + 104) = v277;
      *(void *)(v220 + 112) = v221;
      sub_25C02FBF0(v218, &qword_26A588B98);
      uint64_t v64 = &qword_26A588B60;
      uint64_t v222 = v275;
      sub_25C0516EC(v219, v275, &qword_26A588B60);
      sub_25C02FB8C(v222, v284, &qword_26A588B60);
      swift_storeEnumTagMultiPayload();
      sub_25C05CFE0(&qword_26A588BD8, &qword_26A588B60, &qword_26A588BE0, &qword_26A588BE8);
      sub_25C05CFE0(&qword_26A588BF0, &qword_26A588B48, &qword_26A588BF8, &qword_26A588C00);
      uint64_t v223 = (uint64_t)v286;
      sub_25C0EAD28();
      sub_25C02FB8C(v223, v295, &qword_26A588B58);
      swift_storeEnumTagMultiPayload();
      sub_25C05CF20();
      sub_25C05D0A8();
      uint64_t v224 = v296;
      sub_25C0EAD28();
      sub_25C02FBF0(v223, &qword_26A588B58);
      sub_25C02FB8C(v224, v300, &qword_26A588B90);
      swift_storeEnumTagMultiPayload();
      sub_25C05CEE4();
      sub_25C05D164();
      sub_25C0EAD28();
      sub_25C02FBF0(v224, &qword_26A588B90);
      uint64_t v67 = v222;
      break;
    case 5:
      sub_25C0EB4F8();
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v39, v25, v22);
      *(_WORD *)&v39[*(int *)(v303 + 56)] = 256;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v79 = sub_25C0EB528();
      uint64_t v281 = v80;
      uint64_t v282 = v79;
      LOBYTE(v304[0]) = 5;
      *((void *)&v304[0] + 1) = v41;
      sub_25C05C210((uint64_t)&v352);
      uint64_t v81 = v352;
      uint64_t v82 = v353;
      uint64_t v84 = v354;
      uint64_t v83 = v355;
      uint64_t v85 = v356;
      uint64_t v303 = v357;
      uint64_t v292 = v358;
      uint64_t v289 = v360;
      uint64_t v290 = v359;
      LODWORD(v288) = v361;
      LODWORD(v287) = v362;
      unsigned __int8 v86 = sub_25C0EAF28();
      unsigned __int8 v87 = sub_25C0EAEF8();
      char v88 = sub_25C0EAF18();
      sub_25C0EAF18();
      if (sub_25C0EAF18() != v86) {
        char v88 = sub_25C0EAF18();
      }
      sub_25C0EAF18();
      if (sub_25C0EAF18() != v87) {
        char v88 = sub_25C0EAF18();
      }
      sub_25C0EA6C8();
      *(void *)&long long v305 = v81;
      *((void *)&v305 + 1) = v82;
      *(void *)&long long v306 = v84;
      *((void *)&v306 + 1) = v83;
      *(void *)&long long v307 = v85;
      *((void *)&v307 + 1) = v303;
      *(void *)&long long v308 = v292;
      *((void *)&v308 + 1) = v290;
      *(void *)&long long v309 = v289;
      WORD4(v309) = v288;
      BYTE10(v309) = v287;
      LOBYTE(v310) = v88;
      *((void *)&v310 + 1) = v89;
      *(void *)&v311[0] = v90;
      *((void *)&v311[0] + 1) = v91;
      *(void *)&v311[1] = v92;
      BYTE8(v311[1]) = 0;
      unsigned __int8 v93 = sub_25C0EAEA8();
      char v94 = sub_25C0EAEC8();
      char v95 = sub_25C0EAEB8();
      sub_25C0EAEB8();
      if (sub_25C0EAEB8() != v93) {
        char v95 = sub_25C0EAEB8();
      }
      sub_25C0EAEB8();
      char v96 = sub_25C0EAEB8();
      uint64_t v279 = v85;
      uint64_t v280 = v83;
      if (v96 != v94) {
        char v95 = sub_25C0EAEB8();
      }
      sub_25C05DD38((uint64_t)&v305, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D298);
      uint64_t v97 = sub_25C0EB308();
      long long v335 = v309;
      long long v336 = v310;
      v337[0] = v311[0];
      *(_OWORD *)((char *)v337 + 9) = *(_OWORD *)((char *)v311 + 9);
      long long v331 = v305;
      long long v332 = v306;
      long long v333 = v307;
      long long v334 = v308;
      long long v338 = v305;
      long long v339 = v306;
      long long v340 = v307;
      long long v341 = v308;
      *(_OWORD *)((char *)v344 + 9) = *(_OWORD *)((char *)v311 + 9);
      v344[0] = v311[0];
      long long v343 = v310;
      long long v342 = v309;
      v316[6] = v311[0];
      v316[0] = v305;
      v316[1] = v306;
      v316[2] = v307;
      v316[3] = v308;
      v316[5] = v310;
      v316[4] = v309;
      *(_OWORD *)((char *)&v316[6] + 9) = *(_OWORD *)((char *)v311 + 9);
      sub_25C05DD38((uint64_t)&v338, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D298);
      long long v349 = v335;
      long long v350 = v336;
      v351[0] = v337[0];
      *(_OWORD *)((char *)v351 + 9) = *(_OWORD *)((char *)v337 + 9);
      long long v345 = v331;
      long long v346 = v332;
      long long v347 = v333;
      long long v348 = v334;
      sub_25C05DD38((uint64_t)&v345, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D3A0);
      sub_25C05D2F4(v81, v82, v84, v280, v279, v303, v292, v290, v289, v288, v287, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D3A0);
      *(_OWORD *)((char *)v304 + 7) = v316[0];
      *(_OWORD *)((char *)&v304[3] + 7) = v316[3];
      *(_OWORD *)((char *)&v304[2] + 7) = v316[2];
      *(_OWORD *)((char *)&v304[1] + 7) = v316[1];
      *(_OWORD *)((char *)&v304[7] + 7) = v316[7];
      *(_OWORD *)((char *)&v304[6] + 7) = v316[6];
      *(_OWORD *)((char *)&v304[5] + 7) = v316[5];
      *(_OWORD *)((char *)&v304[4] + 7) = v316[4];
      long long v320 = v304[3];
      long long v319 = v304[2];
      long long v317 = v304[0];
      long long v318 = v304[1];
      *(void *)((char *)v324 + 15) = *((void *)&v316[7] + 1);
      v324[0] = v304[7];
      long long v323 = v304[6];
      long long v321 = v304[4];
      long long v322 = v304[5];
      uint64_t v98 = v276;
      sub_25C02FB8C((uint64_t)v39, v276, &qword_26A588B98);
      uint64_t v99 = v98 + *(int *)(v285 + 36);
      long long v100 = v321;
      *(_OWORD *)(v99 + 81) = v322;
      long long v101 = v324[0];
      *(_OWORD *)(v99 + 97) = v323;
      *(_OWORD *)(v99 + 113) = v101;
      long long v102 = v317;
      *(_OWORD *)(v99 + 17) = v318;
      long long v103 = v320;
      *(_OWORD *)(v99 + 33) = v319;
      *(_OWORD *)(v99 + 49) = v103;
      *(_OWORD *)(v99 + 65) = v100;
      *(unsigned char *)uint64_t v99 = v95;
      uint64_t v104 = *(void *)((char *)v324 + 15);
      *(_OWORD *)(v99 + 1) = v102;
      *(void *)(v99 + 128) = v104;
      *(void *)(v99 + 136) = v97;
      *(_WORD *)(v99 + 144) = 256;
      *(_DWORD *)(v99 + 146) = v304[0];
      *(_WORD *)(v99 + 150) = WORD2(v304[0]);
      uint64_t v105 = v281;
      *(void *)(v99 + 152) = v282;
      *(void *)(v99 + 160) = v105;
      sub_25C02FBF0((uint64_t)v39, &qword_26A588B98);
      uint64_t v64 = &qword_26A588B48;
      uint64_t v106 = v277;
      sub_25C0516EC(v98, v277, &qword_26A588B48);
      sub_25C02FB8C(v106, v284, &qword_26A588B48);
      swift_storeEnumTagMultiPayload();
      sub_25C05CFE0(&qword_26A588BD8, &qword_26A588B60, &qword_26A588BE0, &qword_26A588BE8);
      sub_25C05CFE0(&qword_26A588BF0, &qword_26A588B48, &qword_26A588BF8, &qword_26A588C00);
      uint64_t v107 = (uint64_t)v286;
      sub_25C0EAD28();
      sub_25C02FB8C(v107, v295, &qword_26A588B58);
      swift_storeEnumTagMultiPayload();
      sub_25C05CF20();
      sub_25C05D0A8();
      uint64_t v108 = v296;
      sub_25C0EAD28();
      sub_25C02FBF0(v107, &qword_26A588B58);
      sub_25C02FB8C(v108, v300, &qword_26A588B90);
      swift_storeEnumTagMultiPayload();
      sub_25C05CEE4();
      sub_25C05D164();
      sub_25C0EAD28();
      sub_25C02FBF0(v108, &qword_26A588B90);
      uint64_t v67 = v106;
      break;
    default:
      uint64_t v42 = v40;
      sub_25C0EB4F8();
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v28, v25, v22);
      uint64_t v43 = *(int *)(v303 + 56);
      v286 = v28;
      *(_WORD *)&v28[v43] = 256;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v44 = sub_25C0EB538();
      uint64_t v288 = v45;
      uint64_t v289 = v44;
      uint64_t v272 = v42;
      uint64_t v273 = v41;
      LOBYTE(v304[0]) = v42;
      *((void *)&v304[0] + 1) = v41;
      sub_25C05C850((uint64_t)v328);
      uint64_t v287 = v328[0];
      uint64_t v46 = v328[2];
      uint64_t v303 = v328[3];
      uint64_t v294 = v328[1];
      uint64_t v295 = v328[4];
      uint64_t v296 = v328[6];
      uint64_t v297 = v328[5];
      uint64_t v47 = v328[7];
      uint64_t v48 = v328[8];
      int v49 = v329;
      int v50 = v330;
      unsigned __int8 v51 = sub_25C0EAEA8();
      unsigned __int8 v52 = sub_25C0EAEC8();
      int v53 = sub_25C0EAEB8();
      sub_25C0EAEB8();
      if (sub_25C0EAEB8() != v51) {
        int v53 = sub_25C0EAEB8();
      }
      sub_25C0EAEB8();
      if (sub_25C0EAEB8() == v52) {
        LODWORD(v285) = v53;
      }
      else {
        LODWORD(v285) = sub_25C0EAEB8();
      }
      char v240 = v50;
      char v109 = v50;
      LODWORD(v293) = v50;
      LODWORD(v283) = v49;
      uint64_t v291 = v48;
      uint64_t v110 = v287;
      uint64_t v111 = v294;
      uint64_t v112 = v295;
      uint64_t v290 = v46;
      uint64_t v113 = v297;
      uint64_t v280 = v47;
      sub_25C05CD84(v287, v294, v46, v303, v295, v297, v296, v47, v48, v49, v240);
      uint64_t v284 = sub_25C0EB308();
      char v241 = v109;
      uint64_t v114 = v291;
      char v115 = v46;
      uint64_t v116 = v303;
      uint64_t v117 = v113;
      uint64_t v118 = v296;
      sub_25C05CD84(v110, v111, v115, v303, v112, v117, v296, v47, v291, v49, v241);
      LOBYTE(v112) = v293;
      uint64_t v233 = v114;
      uint64_t v119 = v114;
      uint64_t v120 = v116;
      uint64_t v121 = v295;
      uint64_t v122 = v297;
      sub_25C05CE34(v110, v111, v290, v120, v295, v297, v118, v47, v233, v49, v293);
      char v242 = v112;
      char v237 = v49;
      uint64_t v234 = v119;
      uint64_t v123 = v294;
      uint64_t v124 = v290;
      uint64_t v125 = v303;
      uint64_t v126 = v118;
      sub_25C05CE34(v110, v294, v290, v303, v121, v122, v118, v47, v234, v237, v242);
      uint64_t v127 = (uint64_t)v286;
      uint64_t v128 = v292;
      sub_25C02FB8C((uint64_t)v286, v292, &qword_26A588B98);
      uint64_t v129 = v128 + *(int *)(v278 + 36);
      *(unsigned char *)uint64_t v129 = v285;
      *(void *)(v129 + 8) = v110;
      *(void *)(v129 + 16) = v123;
      *(void *)(v129 + 24) = v124;
      *(void *)(v129 + 32) = v125;
      *(void *)(v129 + 40) = v121;
      *(void *)(v129 + 48) = v122;
      uint64_t v130 = v280;
      *(void *)(v129 + 56) = v126;
      *(void *)(v129 + 64) = v130;
      *(void *)(v129 + 72) = v291;
      *(unsigned char *)(v129 + 80) = v283;
      *(unsigned char *)(v129 + 81) = v293;
      *(void *)(v129 + 88) = v284;
      *(_WORD *)(v129 + 96) = 256;
      uint64_t v131 = v288;
      *(void *)(v129 + 104) = v289;
      *(void *)(v129 + 112) = v131;
      sub_25C02FBF0(v127, &qword_26A588B98);
      uint64_t v293 = sub_25C0EB528();
      uint64_t v291 = v132;
      LOBYTE(v304[0]) = v272;
      *((void *)&v304[0] + 1) = v273;
      sub_25C05C210((uint64_t)&v352);
      uint64_t v134 = v352;
      uint64_t v133 = v353;
      uint64_t v135 = v354;
      uint64_t v136 = v355;
      uint64_t v137 = v356;
      uint64_t v138 = v357;
      uint64_t v303 = v358;
      uint64_t v296 = v360;
      uint64_t v297 = v359;
      LODWORD(v295) = v361;
      LODWORD(v294) = v362;
      LOBYTE(v122) = sub_25C0EAF28();
      unsigned __int8 v139 = sub_25C0EAEF8();
      char v140 = sub_25C0EAF18();
      sub_25C0EAF18();
      if (sub_25C0EAF18() != v122) {
        char v140 = sub_25C0EAF18();
      }
      sub_25C0EAF18();
      if (sub_25C0EAF18() != v139) {
        char v140 = sub_25C0EAF18();
      }
      sub_25C0EA6C8();
      *(void *)&long long v305 = v134;
      *((void *)&v305 + 1) = v133;
      *(void *)&long long v306 = v135;
      *((void *)&v306 + 1) = v136;
      *(void *)&long long v307 = v137;
      *((void *)&v307 + 1) = v138;
      *(void *)&long long v308 = v303;
      *((void *)&v308 + 1) = v297;
      *(void *)&long long v309 = v296;
      WORD4(v309) = v295;
      BYTE10(v309) = v294;
      LOBYTE(v310) = v140;
      *((void *)&v310 + 1) = v141;
      *(void *)&v311[0] = v142;
      *((void *)&v311[0] + 1) = v143;
      *(void *)&v311[1] = v144;
      BYTE8(v311[1]) = 0;
      unsigned __int8 v145 = sub_25C0EAEA8();
      char v146 = sub_25C0EAEC8();
      char v147 = sub_25C0EAEB8();
      sub_25C0EAEB8();
      if (sub_25C0EAEB8() != v145) {
        char v147 = sub_25C0EAEB8();
      }
      sub_25C0EAEB8();
      char v148 = sub_25C0EAEB8();
      uint64_t v289 = v138;
      uint64_t v290 = v137;
      if (v148 != v146) {
        char v147 = sub_25C0EAEB8();
      }
      sub_25C05DD38((uint64_t)&v305, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D298);
      uint64_t v149 = sub_25C0EB308();
      long long v335 = v309;
      long long v336 = v310;
      v337[0] = v311[0];
      *(_OWORD *)((char *)v337 + 9) = *(_OWORD *)((char *)v311 + 9);
      long long v331 = v305;
      long long v332 = v306;
      long long v333 = v307;
      long long v334 = v308;
      long long v338 = v305;
      long long v339 = v306;
      long long v340 = v307;
      long long v341 = v308;
      *(_OWORD *)((char *)v344 + 9) = *(_OWORD *)((char *)v311 + 9);
      v344[0] = v311[0];
      long long v343 = v310;
      long long v342 = v309;
      v316[6] = v311[0];
      v316[0] = v305;
      v316[1] = v306;
      v316[2] = v307;
      v316[3] = v308;
      v316[5] = v310;
      v316[4] = v309;
      *(_OWORD *)((char *)&v316[6] + 9) = *(_OWORD *)((char *)v311 + 9);
      sub_25C05DD38((uint64_t)&v338, (uint64_t (*)(uint64_t))sub_25C05D224, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D298);
      long long v349 = v335;
      long long v350 = v336;
      v351[0] = v337[0];
      *(_OWORD *)((char *)v351 + 9) = *(_OWORD *)((char *)v337 + 9);
      long long v345 = v331;
      long long v346 = v332;
      long long v347 = v333;
      long long v348 = v334;
      sub_25C05DD38((uint64_t)&v345, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D3A0);
      sub_25C05D2F4(v134, v133, v135, v136, v290, v289, v303, v297, v296, v295, v294, (uint64_t (*)(uint64_t))sub_25C05D330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_25C05D3A0);
      *(_OWORD *)((char *)v304 + 7) = v316[0];
      *(_OWORD *)((char *)&v304[3] + 7) = v316[3];
      *(_OWORD *)((char *)&v304[2] + 7) = v316[2];
      *(_OWORD *)((char *)&v304[1] + 7) = v316[1];
      *(_OWORD *)((char *)&v304[7] + 7) = v316[7];
      *(_OWORD *)((char *)&v304[6] + 7) = v316[6];
      *(_OWORD *)((char *)&v304[5] + 7) = v316[5];
      *(_OWORD *)((char *)&v304[4] + 7) = v316[4];
      long long v320 = v304[3];
      long long v319 = v304[2];
      long long v317 = v304[0];
      long long v318 = v304[1];
      *(void *)((char *)v324 + 15) = *((void *)&v316[7] + 1);
      v324[0] = v304[7];
      long long v323 = v304[6];
      long long v321 = v304[4];
      long long v322 = v304[5];
      uint64_t v150 = v292;
      uint64_t v151 = v281;
      sub_25C02FB8C(v292, v281, &qword_26A588B38);
      uint64_t v152 = v151 + *(int *)(v301 + 36);
      long long v153 = v321;
      *(_OWORD *)(v152 + 81) = v322;
      long long v154 = v324[0];
      *(_OWORD *)(v152 + 97) = v323;
      *(_OWORD *)(v152 + 113) = v154;
      long long v155 = v317;
      *(_OWORD *)(v152 + 17) = v318;
      long long v156 = v320;
      *(_OWORD *)(v152 + 33) = v319;
      *(_OWORD *)(v152 + 49) = v156;
      *(_OWORD *)(v152 + 65) = v153;
      *(unsigned char *)uint64_t v152 = v147;
      uint64_t v157 = *(void *)((char *)v324 + 15);
      *(_OWORD *)(v152 + 1) = v155;
      *(void *)(v152 + 128) = v157;
      *(void *)(v152 + 136) = v149;
      *(_WORD *)(v152 + 144) = 256;
      *(_DWORD *)(v152 + 146) = v304[0];
      *(_WORD *)(v152 + 150) = WORD2(v304[0]);
      uint64_t v158 = v291;
      *(void *)(v152 + 152) = v293;
      *(void *)(v152 + 160) = v158;
      sub_25C02FBF0(v150, &qword_26A588B38);
      uint64_t v64 = &qword_26A588B40;
      uint64_t v159 = v282;
      sub_25C0516EC(v151, v282, &qword_26A588B40);
      sub_25C02FB8C(v159, v300, &qword_26A588B40);
      swift_storeEnumTagMultiPayload();
      sub_25C05CEE4();
      sub_25C05D164();
      sub_25C0EAD28();
      uint64_t v67 = v159;
      break;
  }
  return sub_25C02FBF0(v67, v64);
}

double sub_25C05C210@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588C90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v1)
  {
    case 1:
    case 2:
      memset(v48, 0, sizeof(v48));
      long long v46 = 0u;
      long long v47 = 0u;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588CF8);
      sub_25C05DC00();
      sub_25C0EAD28();
      if (v40) {
        __int16 v12 = 256;
      }
      else {
        __int16 v12 = 0;
      }
      long long v41 = v34;
      long long v42 = v35;
      *(_OWORD *)uint64_t v43 = v36;
      *(_OWORD *)&v43[16] = v37;
      *(void *)&v43[32] = v38;
      __int16 v44 = v12 | v39;
      char v45 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588CD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588CE0);
      sub_25C05DB84();
      sub_25C05DCA0();
      sub_25C0EAD28();
      goto LABEL_14;
    case 3:
    case 6:
      sub_25C0EB328();
      sub_25C0EAC18();
      uint64_t v13 = sub_25C0EAC28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
      uint64_t v14 = sub_25C0EB348();
      swift_release();
      sub_25C02FBF0((uint64_t)v5, &qword_26A588C90);
      uint64_t v15 = sub_25C058F38();
      swift_beginAccess();
      uint64_t v16 = *v15;
      swift_retain();
      uint64_t v17 = *sub_25C058FD0();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      unsigned __int8 v19 = sub_25C0EAED8();
      *(void *)&long long v46 = v14;
      *((void *)&v46 + 1) = v16;
      *(void *)&long long v47 = KeyPath;
      *((void *)&v47 + 1) = v17;
      *(void *)uint64_t v48 = v19;
      memset(&v48[8], 0, 32);
      *(_WORD *)&v48[40] = 257;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588CF8);
      sub_25C05DC00();
      sub_25C0EAD28();
      if (v40) {
        __int16 v20 = 256;
      }
      else {
        __int16 v20 = 0;
      }
      long long v41 = v34;
      long long v42 = v35;
      *(_OWORD *)uint64_t v43 = v36;
      *(_OWORD *)&v43[16] = v37;
      *(void *)&v43[32] = v38;
      __int16 v44 = v20 | v39;
      char v45 = 0;
      goto LABEL_13;
    case 4:
      sub_25C0EB328();
      sub_25C0EAC18();
      uint64_t v21 = sub_25C0EAC28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 0, 1, v21);
      uint64_t v22 = sub_25C0EB348();
      swift_release();
      sub_25C02FBF0((uint64_t)v5, &qword_26A588C90);
      uint64_t v23 = sub_25C058F38();
      swift_beginAccess();
      uint64_t v24 = *v23;
      swift_retain();
      uint64_t v25 = *sub_25C058FD0();
      uint64_t v26 = swift_getKeyPath();
      *(void *)&long long v41 = v22;
      *((void *)&v41 + 1) = v24;
      *(void *)&long long v42 = v26;
      *((void *)&v42 + 1) = v25;
      v43[0] = 0;
      goto LABEL_12;
    default:
      sub_25C0EB328();
      sub_25C0EAC18();
      uint64_t v6 = sub_25C0EAC28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
      uint64_t v7 = sub_25C0EB348();
      swift_release();
      sub_25C02FBF0((uint64_t)v5, &qword_26A588C90);
      uint64_t v8 = sub_25C058F38();
      swift_beginAccess();
      uint64_t v9 = *v8;
      swift_retain();
      uint64_t v10 = *sub_25C058FD0();
      uint64_t v11 = swift_getKeyPath();
      *(void *)&long long v41 = v7;
      *((void *)&v41 + 1) = v9;
      *(void *)&long long v42 = v11;
      *((void *)&v42 + 1) = v10;
      v43[0] = 1;
LABEL_12:
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588C98);
      sub_25C05DA40(&qword_26A588CA0, &qword_26A588C98, (void (*)(void))sub_25C05DAE4);
      sub_25C0EAD28();
      long long v41 = v46;
      long long v42 = v47;
      *(void *)uint64_t v43 = v48[0];
      memset(&v43[8], 0, 32);
      __int16 v44 = 0;
      char v45 = 1;
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588CD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588CE0);
      sub_25C05DB84();
      sub_25C05DCA0();
      sub_25C0EAD28();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
LABEL_14:
      double result = *(double *)&v46;
      long long v28 = v47;
      long long v29 = *(_OWORD *)v48;
      long long v30 = *(_OWORD *)&v48[16];
      uint64_t v31 = *(void *)&v48[32];
      __int16 v32 = *(_WORD *)&v48[40];
      char v33 = v49;
      *(_OWORD *)a1 = v46;
      *(_OWORD *)(a1 + 16) = v28;
      *(_OWORD *)(a1 + 32) = v29;
      *(_OWORD *)(a1 + 48) = v30;
      *(void *)(a1 + 64) = v31;
      *(_WORD *)(a1 + 72) = v32;
      *(unsigned char *)(a1 + 74) = v33;
      return result;
  }
}

double sub_25C05C850@<D0>(uint64_t a1@<X8>)
{
  int v3 = 1 << *v1;
  if ((v3 & 0x74) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D08);
    sub_25C05DD9C();
    sub_25C0EAD28();
  }
  else
  {
    if ((v3 & 3) != 0)
    {
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v32);
      uint64_t v4 = sub_25C026FAC();
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      uint64_t v10 = v9 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v12 = *sub_25C059098();
      uint64_t v13 = swift_getKeyPath();
      swift_retain();
      uint64_t v14 = sub_25C058E6C();
      swift_beginAccess();
      uint64_t v15 = *v14;
      *(void *)&long long v32 = v4;
      *((void *)&v32 + 1) = v6;
      *(void *)&long long v33 = v10;
      *((void *)&v33 + 1) = v8;
      *(void *)&long long v34 = KeyPath;
      *((void *)&v34 + 1) = 1;
      *(void *)&long long v35 = v13;
      *((void *)&v35 + 1) = v12;
      uint64_t v36 = v15;
      char v37 = 0;
    }
    else
    {
      SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v32);
      uint64_t v4 = sub_25C026FAC();
      uint64_t v6 = v16;
      uint64_t v18 = v17;
      uint64_t v10 = v19 & 1;
      uint64_t v20 = swift_getKeyPath();
      uint64_t v21 = *sub_25C059098();
      uint64_t v22 = swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_25C058E6C();
      swift_beginAccess();
      uint64_t v24 = *v23;
      *(void *)&long long v32 = v4;
      *((void *)&v32 + 1) = v6;
      *(void *)&long long v33 = v10;
      *((void *)&v33 + 1) = v18;
      *(void *)&long long v34 = v20;
      *((void *)&v34 + 1) = 1;
      *(void *)&long long v35 = v22;
      *((void *)&v35 + 1) = v21;
      uint64_t v36 = v24;
      char v37 = 1;
    }
    swift_retain();
    sub_25C05CE24(v4, v6, v10);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D20);
    sub_25C05DE10();
    sub_25C0EAD28();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D08);
    sub_25C05DD9C();
    sub_25C0EAD28();
    sub_25C05CED4(v4, v6, v10);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  double result = *(double *)&v32;
  long long v26 = v33;
  long long v27 = v34;
  long long v28 = v35;
  uint64_t v29 = v36;
  char v30 = v37;
  char v31 = v38;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v26;
  *(_OWORD *)(a1 + 32) = v27;
  *(_OWORD *)(a1 + 48) = v28;
  *(void *)(a1 + 64) = v29;
  *(unsigned char *)(a1 + 72) = v30;
  *(unsigned char *)(a1 + 73) = v31;
  return result;
}

uint64_t sub_25C05CBBC(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_25C0EB568();
}

uint64_t sub_25C05CD84(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  if ((a11 & 1) == 0) {
    return sub_25C05CDA8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_25C05CDA8(uint64_t a1, uint64_t a2, char a3)
{
  sub_25C05CE24(a1, a2, a3 & 1);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_25C05CE24(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_25C05CE34(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  if ((a11 & 1) == 0) {
    return sub_25C05CE58(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_25C05CE58(uint64_t a1, uint64_t a2, char a3)
{
  sub_25C05CED4(a1, a2, a3 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_25C05CED4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25C05CEE4()
{
  return sub_25C05D6C4(&qword_26A588BA0, &qword_26A588B90, (void (*)(void))sub_25C05CF20, (void (*)(void))sub_25C05D0A8);
}

unint64_t sub_25C05CF20()
{
  unint64_t result = qword_26A588BA8;
  if (!qword_26A588BA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588B88);
    sub_25C0583D0(&qword_26A588BB0, &qword_26A588B98);
    sub_25C05CFE0(&qword_26A588BB8, &qword_26A588B68, &qword_26A588BC0, &qword_26A588BC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588BA8);
  }
  return result;
}

uint64_t sub_25C05CFE0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_25C0583D0(&qword_26A588BB0, &qword_26A588B98);
    sub_25C0583D0(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C05D0A8()
{
  unint64_t result = qword_26A588BD0;
  if (!qword_26A588BD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588B58);
    sub_25C05CFE0(&qword_26A588BD8, &qword_26A588B60, &qword_26A588BE0, &qword_26A588BE8);
    sub_25C05CFE0(&qword_26A588BF0, &qword_26A588B48, &qword_26A588BF8, &qword_26A588C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588BD0);
  }
  return result;
}

unint64_t sub_25C05D164()
{
  unint64_t result = qword_26A588C08;
  if (!qword_26A588C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588B40);
    sub_25C05CFE0(&qword_26A588C10, &qword_26A588B38, &qword_26A588C18, &qword_26A588C20);
    sub_25C0583D0(&qword_26A588BF8, &qword_26A588C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588C08);
  }
  return result;
}

uint64_t sub_25C05D224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  if (a11)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_25C05D298()
{
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_25C05D2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, uint64_t (*a12)(uint64_t), uint64_t (*a13)(uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  if (a11) {
    return a13(a1, a2, a3, a4, a5 & 1);
  }
  else {
    return a12(a1);
  }
}

uint64_t sub_25C05D330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  if (a11)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_25C05D3A0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

double sub_25C05D3F8(_OWORD *a1)
{
  double result = 0.0;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 266) = 0u;
  return result;
}

unint64_t sub_25C05D430()
{
  unint64_t result = qword_26A588C38;
  if (!qword_26A588C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588C38);
  }
  return result;
}

uint64_t sub_25C05D484()
{
  return sub_25C0583D0(&qword_26A588C40, &qword_26A588C48);
}

uint64_t sub_25C05D4C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for SensitiveContentBlurView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && a1[16]) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 7;
  int v5 = v3 - 7;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SensitiveContentBlurView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)unint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 6;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SensitiveContentBlurView()
{
  return &type metadata for SensitiveContentBlurView;
}

unsigned char *storeEnumTagSinglePayload for SensitiveContentBlurView.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C05D63CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SensitiveContentBlurView.Mode()
{
  return &type metadata for SensitiveContentBlurView.Mode;
}

uint64_t sub_25C05D674()
{
  return sub_25C05D6C4(&qword_26A588C50, &qword_26A588C58, (void (*)(void))sub_25C05CEE4, (void (*)(void))sub_25C05D164);
}

uint64_t sub_25C05D6C4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for SCUISensitiveContentOverlayOptions()
{
  if (!qword_26A588C60)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A588C60);
    }
  }
}

uint64_t sub_25C05D7A4()
{
  return sub_25C05D874(&qword_26A588C68);
}

uint64_t sub_25C05D7D8()
{
  return sub_25C05D874(&qword_26A588C70);
}

uint64_t sub_25C05D80C()
{
  return sub_25C05D874(&qword_26A588C78);
}

uint64_t sub_25C05D840()
{
  return sub_25C05D874(&qword_26A588C80);
}

uint64_t sub_25C05D874(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SCUISensitiveContentOverlayOptions();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C05D8B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25C0EAA48();
  *a1 = result;
  return result;
}

uint64_t sub_25C05D8E4()
{
  return sub_25C0EAA58();
}

uint64_t sub_25C05D910@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C0EAA28();
  *a1 = result;
  return result;
}

uint64_t sub_25C05D93C()
{
  return sub_25C0EAA38();
}

uint64_t sub_25C05D964(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, void), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))
{
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a1 + 152);
  uint64_t v11 = *(void *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 168);
  char v12 = *(unsigned char *)(a1 + 176);
  char v13 = *(unsigned char *)(a1 + 177);
  sub_25C05D2F4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_WORD *)(a1 + 96), *(unsigned char *)(a1 + 98), a2, a3);
  BYTE1(v15) = v13;
  LOBYTE(v15) = v12;
  a4(v17, v16, v5, v6, v7, v8, v9, v11, v10, v15);
  return a1;
}

uint64_t sub_25C05DA40(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_25C0583D0(&qword_26A588CC8, &qword_26A588CD0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C05DAE4()
{
  unint64_t result = qword_26A588CA8;
  if (!qword_26A588CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588CB0);
    sub_25C0583D0(&qword_26A588CB8, &qword_26A588CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588CA8);
  }
  return result;
}

unint64_t sub_25C05DB84()
{
  unint64_t result = qword_26A588CE8;
  if (!qword_26A588CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588CD8);
    sub_25C05DC00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588CE8);
  }
  return result;
}

unint64_t sub_25C05DC00()
{
  unint64_t result = qword_26A588CF0;
  if (!qword_26A588CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588CF8);
    sub_25C05DA40(&qword_26A588CA0, &qword_26A588C98, (void (*)(void))sub_25C05DAE4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588CF0);
  }
  return result;
}

unint64_t sub_25C05DCA0()
{
  unint64_t result = qword_26A588D00;
  if (!qword_26A588D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588CE0);
    sub_25C05DA40(&qword_26A588CA0, &qword_26A588C98, (void (*)(void))sub_25C05DAE4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D00);
  }
  return result;
}

uint64_t sub_25C05DD38(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  return a1;
}

unint64_t sub_25C05DD9C()
{
  unint64_t result = qword_26A588D10;
  if (!qword_26A588D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588D08);
    sub_25C05DE10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D10);
  }
  return result;
}

unint64_t sub_25C05DE10()
{
  unint64_t result = qword_26A588D18;
  if (!qword_26A588D18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588D20);
    sub_25C05DA40(&qword_26A588D28, &qword_26A588D30, (void (*)(void))sub_25C05DED4);
    sub_25C0583D0(&qword_26A588CB8, &qword_26A588CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D18);
  }
  return result;
}

unint64_t sub_25C05DED4()
{
  unint64_t result = qword_26A588D38;
  if (!qword_26A588D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A589790);
    sub_25C0583D0(&qword_26A588D40, &qword_26A5897A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D38);
  }
  return result;
}

uint64_t static HPKE.Ciphersuite.reportToApple.getter()
{
  uint64_t v0 = sub_25C0EB668();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25C0EB648();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25C0EB658();
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, void))(v10 + 104))((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F04720]);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F04718], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F04730], v0);
  return sub_25C0EB628();
}

uint64_t ProgressTracker.__allocating_init(fileCount:sizeLimitInBytes:filesPerMessageLimit:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  char v9 = a2 & 1;
  char v10 = a4 & 1;
  char v11 = a6 & 1;
  uint64_t v12 = swift_allocObject();
  ProgressTracker.init(fileCount:sizeLimitInBytes:filesPerMessageLimit:)(a1, v9, a3, v10, a5, v11);
  return v12;
}

uint64_t type metadata accessor for ProgressTracker()
{
  return self;
}

uint64_t sub_25C05E238()
{
  return 0x100000;
}

uint64_t defaultReadSize.getter()
{
  return 0x100000;
}

char *HPKE.Sender.writeChunkedEncryptedCSV(from:to:progress:chunkSizeInBytes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a4;
  uint64_t v33 = a2;
  uint64_t v34 = a5;
  uint64_t v8 = sub_25C0EB718();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25C0EB618();
  uint64_t v31 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25C0EA238();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA298();
  if (!v5)
  {
    sub_25C060E08();
    uint64_t v29 = v10;
    uint64_t v17 = v11;
    uint64_t v18 = v8;
    uint64_t v19 = a1;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
    id v20 = sub_25C0605E8((uint64_t)v16, (SEL *)&selRef_fileHandleForWritingToURL_error_);
    uint64_t v21 = (uint64_t)v29;
    uint64_t v22 = v19;
    uint64_t v23 = v18;
    uint64_t v24 = v17;
    uint64_t v25 = v20;
    char v37 = 0;
    *(&v29 - 2) = (char *)MEMORY[0x270FA5388](v20);
    *(&v29 - 1) = (char *)&v37;
    sub_25C0EB708();
    sub_25C05E6E4(v34, v35, v33, v21, v36, (void (*)(void, uint64_t, uint64_t, unint64_t))sub_25C060E48, (uint64_t)(&v29 - 4));
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v32 + 8);
    uint64_t v28 = v30;
    sub_25C0EB6F8();
    (*v26)(v21, v23);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v22, v28, v24);
    uint64_t v16 = v37;
    objc_msgSend(v25, sel_closeFile);
  }
  return v16;
}

uint64_t HPKE.Sender.encryptChunks(from:ofSize:progress:block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void, uint64_t, uint64_t, unint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  v19[1] = a6;
  uint64_t v13 = sub_25C0EB718();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EB708();
  uint64_t v17 = v19[3];
  sub_25C05E6E4(a2, a3, a1, (uint64_t)v16, v7, a4, a5);
  if (!v17) {
    sub_25C0EB6F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_25C05E6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t, unint64_t), uint64_t a7)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v13 = sub_25C0EA0C8();
  uint64_t v33 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  char v30 = a6;
  char v37 = a6;
  uint64_t v38 = a7;
  v29[1] = a7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25C0EED70;
  uint64_t v17 = (void *)*MEMORY[0x263EFF688];
  *(void *)(inited + 32) = *MEMORY[0x263EFF688];
  id v18 = v17;
  sub_25C062690(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_25C0EA178();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7)
  {
    uint64_t v20 = sub_25C0EA0B8();
    char v22 = v21;
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v13);
    if (v22)
    {
      sub_25C0EB718();
      sub_25C0630A4(&qword_26A588DA8, MEMORY[0x263F047F8]);
      *(void *)&long long v40 = 0;
      *(void *)((char *)&v40 + 6) = 0;
      sub_25C0EB5E8();
      long long v39 = xmmword_25C0F1370;
      long long v40 = xmmword_25C0F1370;
      sub_25C06220C();
      uint64_t v26 = sub_25C0EB698();
      unint64_t v28 = v27;
      v30(0, 1, v26, v27);
      return sub_25C035294(v26, v28);
    }
    else
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v24 = v31;
      uint64_t v25 = v32;
      v29[-6] = a3;
      v29[-5] = v24;
      v29[-4] = v25;
      v29[-3] = v20;
      v29[-2] = sub_25C062C64;
      v29[-1] = &v34;
      return (*(uint64_t (**)(uint64_t))(*(void *)v25 + 264))(v20);
    }
  }
  return result;
}

uint64_t sub_25C05EA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_25C0EA0C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25C0EED70;
  uint64_t v12 = (void *)*MEMORY[0x263EFF688];
  *(void *)(inited + 32) = *MEMORY[0x263EFF688];
  id v13 = v12;
  sub_25C062690(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_25C0EA178();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
    uint64_t v15 = sub_25C0EA0B8();
    char v17 = v16;
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v17)
    {
      sub_25C0EB718();
      sub_25C0630A4(&qword_26A588DA8, MEMORY[0x263F047F8]);
      v23[0] = 0;
      *(void *)((char *)v23 + 6) = 0;
      return sub_25C0EB5E8();
    }
    else
    {
      MEMORY[0x270FA5388](v18);
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      *(&v21 - 6) = a3;
      *(&v21 - 5) = v19;
      *(&v21 - 4) = v20;
      *(&v21 - 3) = v15;
      *(&v21 - 2) = (uint64_t)sub_25C062B78;
      *(&v21 - 1) = (uint64_t)&v24;
      return (*(uint64_t (**)(uint64_t))(*(void *)v20 + 264))(v15);
    }
  }
  return result;
}

void HPKE.Recipient.decryptChunkedEncryptedCSV(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_25C0EA238();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA298();
  if (!v3)
  {
    sub_25C060E08();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    id v11 = sub_25C0605E8((uint64_t)v10, (SEL *)&selRef_fileHandleForWritingToURL_error_);
    *(&v12 - 2) = MEMORY[0x270FA5388](v11);
    sub_25C05EEDC(44, 0xE100000000000000, 0x100000, a1, (void (*)(void))sub_25C06105C, (uint64_t)(&v12 - 4), v4);
    objc_msgSend(v11, sel_closeFile);
  }
}

void HPKE.Recipient.decryptCSVOfEncryptedChunks(_:block:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  sub_25C05EEDC(44, 0xE100000000000000, 0x100000, a1, a2, a3, v3);
}

void sub_25C05EEDC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  char v109 = a5;
  uint64_t v110 = a7;
  uint64_t v108 = a6;
  unint64_t v95 = a2;
  uint64_t v94 = a1;
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D50);
  uint64_t v10 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v118 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D58);
  uint64_t v12 = MEMORY[0x270FA5388](v93);
  uint64_t v92 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v85 - v14;
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D60);
  uint64_t v16 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25C0EB898();
  MEMORY[0x270FA5388](v18 - 8);
  char v96 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25C0EA238();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a3;
  if (a3 < 1)
  {
    sub_25C0610A8();
    swift_allocError();
    *unint64_t v28 = 2;
    swift_willThrow();
    return;
  }
  uint64_t v106 = v15;
  sub_25C060E08();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a4, v20);
  char v24 = (char *)sub_25C0605E8((uint64_t)v23, (SEL *)&selRef_fileHandleForReadingFromURL_error_);
  uint64_t v25 = v7;
  if (!v7)
  {
    uint64_t v26 = v24;
    uint64_t v116 = 0;
    unint64_t v117 = 0xE000000000000000;
    unint64_t v87 = 0xE000000000000000;
    unint64_t v27 = (void *)MEMORY[0x26117DE10]();
    uint64_t v29 = sub_25C0EBBE8();
    unint64_t v31 = v30;
    long long v103 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v104 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v85 = (void (**)(char *, uint64_t))(v16 + 8);
    long long v91 = xmmword_25C0F1370;
    unsigned __int8 v86 = v26;
    while (1)
    {
      if (v31 >> 60 == 15) {
        break;
      }
      uint64_t v32 = (void *)MEMORY[0x26117DE10]();
      sub_25C0EB888();
      uint64_t v33 = sub_25C0EB868();
      if (!v34)
      {
        sub_25C0610A8();
        swift_allocError();
        *uint64_t v80 = 1;
        swift_willThrow();
LABEL_26:
        sub_25C03DA24(v29, v31);
        goto LABEL_27;
      }
      uint64_t v89 = v32;
      unint64_t v90 = v31;
      uint64_t v88 = v29;
      uint64_t v113 = v94;
      unint64_t v114 = v95;
      MEMORY[0x270FA5388](v33);
      *(&v85 - 2) = (void (**)(char *, uint64_t))&v113;
      uint64_t v105 = v35;
      unint64_t v107 = v36;
      sub_25C061B34(sub_25C0620D4, (uint64_t)(&v85 - 4), v35, v36);
      uint64_t v111 = v25;
      char v37 = v118;
      sub_25C0EC3A8();
      uint64_t v38 = (uint64_t)v92;
      uint64_t v39 = v112;
      long long v102 = *v104;
      v102(v92, v37, v112);
      unint64_t v40 = sub_25C0583D0(&qword_26A588D70, &qword_26A588D50);
      sub_25C0EBB68();
      long long v101 = *v103;
      v101(v37, v39);
      uint64_t v41 = v93;
      *(void *)(v38 + *(int *)(v93 + 36)) = v113;
      uint64_t v26 = v106;
      sub_25C0620F0(v38, (uint64_t)v106);
      long long v42 = &v26[*(int *)(v41 + 36)];
      uint64_t v43 = *(void *)v42;
      sub_25C0EBB78();
      if (v43 != v113)
      {
        unint64_t v56 = 15;
        unint64_t v97 = v40;
        while (1)
        {
          uint64_t v58 = (void (*)(uint64_t *, void))sub_25C0EBB98();
          unint64_t v60 = *v59;
          unint64_t v44 = v59[1];
          v58(&v113, 0);
          char v61 = v118;
          v102(v118, v26, v39);
          sub_25C0EBB88();
          uint64_t v62 = ((uint64_t (*)(char *, uint64_t))v101)(v61, v39);
          if (v60 >> 14 < v56 >> 14) {
            break;
          }
          uint64_t v64 = sub_25C0EB928();
          MEMORY[0x26117D220](v64);
          swift_bridgeObjectRelease();
          sub_25C0EB8E8();
          swift_bridgeObjectRelease();
          uint64_t v65 = HIBYTE(v117) & 0xF;
          if ((v117 & 0x2000000000000000) == 0) {
            uint64_t v65 = v116 & 0xFFFFFFFFFFFFLL;
          }
          if (v65)
          {
            swift_bridgeObjectRetain();
            uint64_t v66 = sub_25C0EA268();
            if (v67 >> 60 == 15)
            {
              sub_25C0610A8();
              swift_allocError();
              *unsigned __int8 v75 = 1;
              swift_willThrow();
LABEL_25:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v29 = v88;
              sub_25C062158((uint64_t)v106);
              (*v85)(v99, v100);
              uint64_t v26 = v86;
              unint64_t v31 = v90;
              uint64_t v32 = v89;
              goto LABEL_26;
            }
            uint64_t v68 = v66;
            unint64_t v69 = v67;
            uint64_t v113 = v66;
            unint64_t v114 = v67;
            long long v115 = v91;
            sub_25C06220C();
            uint64_t v70 = v111;
            uint64_t v71 = sub_25C0EB6B8();
            if (v70)
            {
              sub_25C03DA24(v68, v69);
              goto LABEL_25;
            }
            uint64_t v73 = v71;
            unint64_t v74 = v72;
            v109();
            uint64_t v111 = 0;
            sub_25C035294(v73, v74);
            sub_25C03DA24(v68, v69);
            swift_bridgeObjectRelease_n();
            uint64_t v116 = 0;
            unint64_t v117 = 0xE000000000000000;
            uint64_t v26 = v106;
            uint64_t v39 = v112;
          }
          uint64_t v57 = *(void *)v42;
          unint64_t v40 = v97;
          sub_25C0EBB78();
          unint64_t v56 = v44;
          if (v57 == v113) {
            goto LABEL_9;
          }
        }
        __break(1u);
LABEL_41:
        sub_25C035294(v62, v63);
        sub_25C03DA24(v56, v40);
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
LABEL_28:
        objc_msgSend(v26, sel_closeFile, v85);

        return;
      }
      unint64_t v44 = 15;
LABEL_9:
      sub_25C062158((uint64_t)v26);
      uint64_t v45 = HIBYTE(v107) & 0xF;
      if ((v107 & 0x2000000000000000) == 0) {
        uint64_t v45 = v105 & 0xFFFFFFFFFFFFLL;
      }
      if (4 * v45 < v44 >> 14)
      {
        __break(1u);
        return;
      }
      uint64_t v46 = sub_25C0EB928();
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      MEMORY[0x26117D220](v46, v48, v50, v52);
      swift_bridgeObjectRelease();
      sub_25C0EB8E8();
      swift_bridgeObjectRelease();
      (*v85)(v99, v100);
      uint64_t v53 = sub_25C03DA24(v88, v90);
      unint64_t v27 = (void *)MEMORY[0x26117DE10](v53);
      uint64_t v26 = v86;
      uint64_t v54 = v111;
      uint64_t v29 = sub_25C0EBBE8();
      unint64_t v31 = v55;
      uint64_t v25 = v54;
      if (v54)
      {
        unint64_t v87 = v117;
        goto LABEL_27;
      }
    }
    uint64_t v76 = HIBYTE(v117) & 0xF;
    if ((v117 & 0x2000000000000000) == 0) {
      uint64_t v76 = v116 & 0xFFFFFFFFFFFFLL;
    }
    if (!v76) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_25C0EA268();
    if (v78 >> 60 == 15)
    {
      sub_25C0610A8();
      swift_allocError();
      unsigned char *v79 = 1;
      swift_willThrow();
    }
    else
    {
      unint64_t v56 = v77;
      unint64_t v40 = v78;
      uint64_t v113 = v77;
      unint64_t v114 = v78;
      long long v115 = v91;
      sub_25C06220C();
      uint64_t v81 = sub_25C0EB6B8();
      if (!v25)
      {
        uint64_t v83 = v81;
        unint64_t v84 = v82;
        v109();
        uint64_t v62 = v83;
        unint64_t v63 = v84;
        goto LABEL_41;
      }
      sub_25C03DA24(v56, v40);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_28;
  }
}

void URL.splitUTF8(separator:readSize:block:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, unint64_t), uint64_t a5)
{
  uint64_t v79 = a5;
  uint64_t v80 = a4;
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D50);
  unint64_t v86 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v90 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D58);
  uint64_t v10 = MEMORY[0x270FA5388](v73);
  unint64_t v72 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v64 - v12;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D60);
  uint64_t v14 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v77 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25C0EB898();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v76 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25C0EA238();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 < 1)
  {
    sub_25C0610A8();
    swift_allocError();
    *uint64_t v25 = 2;
    swift_willThrow();
    return;
  }
  uint64_t v71 = a3;
  sub_25C060E08();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v5, v18);
  id v22 = sub_25C0605E8((uint64_t)v21, (SEL *)&selRef_fileHandleForReadingFromURL_error_);
  if (!v6)
  {
    uint64_t v23 = v22;
    uint64_t v88 = 0;
    unint64_t v89 = 0xE000000000000000;
    unint64_t v67 = 0xE000000000000000;
    char v24 = (void *)MEMORY[0x26117DE10]();
    uint64_t v26 = sub_25C0EBBE8();
    unint64_t v28 = v27;
    uint64_t v83 = (void (**)(char *, uint64_t))(v86 + 8);
    unint64_t v84 = (void (**)(char *, char *, uint64_t))(v86 + 16);
    uint64_t v65 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v66 = v23;
    while (1)
    {
      if (v28 >> 60 == 15) {
        break;
      }
      uint64_t v29 = (void *)MEMORY[0x26117DE10]();
      sub_25C0EB888();
      unint64_t v70 = v28;
      uint64_t v30 = sub_25C0EB868();
      if (!v31)
      {
        sub_25C0610A8();
        swift_allocError();
        *unint64_t v63 = 1;
        swift_willThrow();
        sub_25C03DA24(v26, v70);
LABEL_20:
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_closeFile);

        return;
      }
      uint64_t v68 = v29;
      uint64_t v69 = v26;
      v87[0] = v74;
      v87[1] = v75;
      MEMORY[0x270FA5388](v30);
      *(&v64 - 2) = (uint64_t)v87;
      uint64_t v85 = v33;
      unint64_t v86 = v32;
      sub_25C061B34(sub_25C0620D4, (uint64_t)(&v64 - 4), v33, v32);
      uint64_t v34 = v90;
      sub_25C0EC3A8();
      uint64_t v35 = (uint64_t)v72;
      unint64_t v82 = *v84;
      v82(v72, v34, v8);
      sub_25C0583D0(&qword_26A588D70, &qword_26A588D50);
      sub_25C0EBB68();
      uint64_t v81 = *v83;
      v81(v34, v8);
      uint64_t v36 = v73;
      *(void *)(v35 + *(int *)(v73 + 36)) = v87[0];
      sub_25C0620F0(v35, (uint64_t)v13);
      char v37 = &v13[*(int *)(v36 + 36)];
      uint64_t v38 = *(void *)v37;
      sub_25C0EBB78();
      if (v38 != v87[0])
      {
        unint64_t v50 = 15;
        while (1)
        {
          uint64_t v52 = (void (*)(void *, void))sub_25C0EBB98();
          unint64_t v54 = *v53;
          unint64_t v39 = v53[1];
          v52(v87, 0);
          unint64_t v55 = v90;
          v82(v90, v13, v8);
          sub_25C0EBB88();
          v81(v55, v8);
          if (v54 >> 14 < v50 >> 14) {
            break;
          }
          uint64_t v56 = sub_25C0EB928();
          MEMORY[0x26117D220](v56);
          swift_bridgeObjectRelease();
          sub_25C0EB8E8();
          swift_bridgeObjectRelease();
          uint64_t v57 = v88;
          unint64_t v58 = v89;
          uint64_t v59 = HIBYTE(v89) & 0xF;
          if ((v89 & 0x2000000000000000) == 0) {
            uint64_t v59 = v88 & 0xFFFFFFFFFFFFLL;
          }
          if (v59)
          {
            swift_bridgeObjectRetain();
            v80(v57, v58);
            swift_bridgeObjectRelease_n();
            uint64_t v88 = 0;
            unint64_t v89 = 0xE000000000000000;
          }
          uint64_t v51 = *(void *)v37;
          sub_25C0EBB78();
          unint64_t v50 = v39;
          if (v51 == v87[0]) {
            goto LABEL_9;
          }
        }
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      unint64_t v39 = 15;
LABEL_9:
      sub_25C062158((uint64_t)v13);
      uint64_t v40 = HIBYTE(v86) & 0xF;
      if ((v86 & 0x2000000000000000) == 0) {
        uint64_t v40 = v85 & 0xFFFFFFFFFFFFLL;
      }
      if (4 * v40 < v39 >> 14) {
        goto LABEL_29;
      }
      uint64_t v41 = sub_25C0EB928();
      uint64_t v43 = v42;
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      MEMORY[0x26117D220](v41, v43, v45, v47);
      swift_bridgeObjectRelease();
      sub_25C0EB8E8();
      swift_bridgeObjectRelease();
      (*v65)(v77, v78);
      uint64_t v48 = sub_25C03DA24(v69, v70);
      char v24 = (void *)MEMORY[0x26117DE10](v48);
      uint64_t v23 = v66;
      uint64_t v26 = sub_25C0EBBE8();
      unint64_t v28 = v49;
    }
    uint64_t v61 = v88;
    unint64_t v60 = v89;
    uint64_t v62 = HIBYTE(v89) & 0xF;
    if ((v89 & 0x2000000000000000) == 0) {
      uint64_t v62 = v88 & 0xFFFFFFFFFFFFLL;
    }
    if (v62)
    {
      swift_bridgeObjectRetain();
      v80(v61, v60);
      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
}

unint64_t *HPKE.Recipient.decryptMetadata(fromHPKEEnvelope:recipientPrivateKey:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D78);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_25C0EED70;
  sub_25C0EBF78();
  swift_bridgeObjectRelease();
  unint64_t v18 = 0xD00000000000001ELL;
  unint64_t v19 = 0x800000025C0F60E0;
  sub_25C0EA208();
  uint64_t v2 = &v18;
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  unint64_t v3 = v18;
  unint64_t v4 = v19;
  uint64_t v5 = MEMORY[0x263F8D310];
  *(void *)(v1 + 56) = MEMORY[0x263F8D310];
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  sub_25C0EC338();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_25C0EA258();
  if (!v0)
  {
    uint64_t v8 = v6;
    unint64_t v9 = v7;
    sub_25C0E9F58();
    swift_allocObject();
    sub_25C0E9F48();
    sub_25C0621B8();
    sub_25C0E9F38();
    swift_release();
    unint64_t v14 = v19;
    uint64_t v15 = v18;
    uint64_t v10 = v22;
    unint64_t v16 = v21;
    uint64_t v17 = v20;
    unint64_t v11 = v23;
    uint64_t v25 = v24;
    unint64_t v18 = v22;
    unint64_t v19 = v23;
    sub_25C034EC8(v22, v23);
    sub_25C06220C();
    uint64_t v2 = (unint64_t *)sub_25C0EB6B8();
    sub_25C035294(v10, v11);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_25C0EED70;
    *(void *)(v13 + 56) = v5;
    *(void *)(v13 + 32) = 0xD000000000000020;
    *(void *)(v13 + 40) = 0x800000025C0F6100;
    sub_25C0EC338();
    swift_bridgeObjectRelease();
    sub_25C035294(v15, v14);
    sub_25C035294(v17, v16);
    sub_25C035294(v10, v11);
    swift_bridgeObjectRelease();
    sub_25C035294(v8, v9);
  }
  return v2;
}

id sub_25C0605E8(uint64_t a1, SEL *a2)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v4 = (void *)sub_25C0EA1A8();
  v13[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), *a2, v4, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_25C0EA238();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_25C0EA158();

    swift_willThrow();
    uint64_t v11 = sub_25C0EA238();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

void sub_25C060740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, BOOL, uint64_t, unint64_t), uint64_t a6)
{
  unint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a4;
  uint64_t v10 = sub_25C0EA238();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C060E08();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  id v14 = sub_25C0605E8((uint64_t)v13, (SEL *)&selRef_fileHandleForReadingFromURL_error_);
  if (!v6)
  {
    uint64_t v15 = v14;
    uint64_t v30 = a3;
    uint64_t v31 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    while (2)
    {
      unint64_t v18 = (void *)MEMORY[0x26117DE10]();
      uint64_t v19 = sub_25C0EBBE8();
      unint64_t v21 = v20;
      if (v21 >> 60 != 15)
      {
        unint64_t v22 = (void *)MEMORY[0x26117DE10]();
        uint64_t v23 = 0;
        uint64_t v24 = v34;
        switch(v21 >> 62)
        {
          case 1uLL:
            int v26 = HIDWORD(v19) - v19;
            if (__OFSUB__(HIDWORD(v19), v19)) {
              goto LABEL_20;
            }
            uint64_t v23 = v26;
            BOOL v25 = __OFADD__(v17, v26);
            v17 += v26;
            if (!v25) {
              goto LABEL_14;
            }
            goto LABEL_21;
          case 2uLL:
            uint64_t v28 = *(void *)(v19 + 16);
            uint64_t v27 = *(void *)(v19 + 24);
            uint64_t v23 = v27 - v28;
            if (__OFSUB__(v27, v28)) {
              goto LABEL_22;
            }
            BOOL v25 = __OFADD__(v17, v23);
            v17 += v23;
            if (v25) {
              goto LABEL_23;
            }
LABEL_14:
            (*(void (**)(uint64_t))(*(void *)v30 + 272))(v23);
            BOOL v29 = v17 >= v24;
            v32(v16, v29, v19, v21);
            if (__OFADD__(v16, 1))
            {
              __break(1u);
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
LABEL_21:
              __break(1u);
LABEL_22:
              __break(1u);
LABEL_23:
              __break(1u);
              JUMPOUT(0x25C060A2CLL);
            }
            sub_25C03DA24(v19, v21);
            ++v16;
            if (v29) {
              break;
            }
            continue;
          case 3uLL:
            goto LABEL_14;
          default:
            uint64_t v23 = BYTE6(v21);
            BOOL v25 = __OFADD__(v17, BYTE6(v21));
            v17 += BYTE6(v21);
            if (!v25) {
              goto LABEL_14;
            }
            goto LABEL_19;
        }
      }
      break;
    }
    objc_msgSend(v15, sel_closeFile, v30, v31);
  }
}

uint64_t static ProgressTracker.Error.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_25C060A60(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

id ProgressTracker.progress.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_25C060A8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 200))();
  *a2 = result;
  return result;
}

uint64_t sub_25C060AD8(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 208))(*a1);
}

uint64_t sub_25C060B20()
{
  swift_beginAccess();
  return *(void *)(v0 + 72);
}

uint64_t sub_25C060B54(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_25C060B94())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25C060BE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result;
  return result;
}

uint64_t sub_25C060C34(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 232))(*a1);
}

uint64_t sub_25C060C7C()
{
  swift_beginAccess();
  return *(void *)(v0 + 80);
}

uint64_t sub_25C060CB0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*sub_25C060CF0())()
{
  return j__swift_endAccess;
}

uint64_t ProgressTracker.init(fileCount:sizeLimitInBytes:filesPerMessageLimit:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
  *(void *)(v6 + 16) = v13;
  *(void *)(v6 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 72) = 0;
  *(void *)(v6 + 80) = 0;
  *(void *)(v6 + 56) = a3;
  *(unsigned char *)(v6 + 64) = a4 & 1;
  *(void *)(v6 + 40) = a5;
  *(unsigned char *)(v6 + 48) = a6 & 1;
  if (a2) {
    uint64_t v14 = 1;
  }
  else {
    uint64_t v14 = a1;
  }
  objc_msgSend(v13, sel_setTotalUnitCount_, v14);
  return v6;
}

unint64_t sub_25C060E08()
{
  unint64_t result = qword_26A588D48;
  if (!qword_26A588D48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A588D48);
  }
  return result;
}

uint64_t sub_25C060E48(uint64_t a1, char a2)
{
  id v5 = *(void **)(v2 + 24);
  uint64_t v6 = sub_25C0EA248();
  unint64_t v8 = v7;
  uint64_t v16 = v6;
  unint64_t v17 = v7;
  if ((a2 & 1) == 0)
  {
    if (sub_25C0EC268())
    {
      char v11 = 10;
LABEL_8:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588DC0);
      uint64_t v15 = sub_25C0583D0(&qword_26A588DC8, &qword_26A588DC0);
      LOBYTE(v13[0]) = v11;
      char v18 = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v13, v14);
      sub_25C0EA288();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      uint64_t v6 = v16;
      unint64_t v8 = v17;
      goto LABEL_9;
    }
    if (sub_25C0EB778())
    {
      unint64_t v9 = sub_25C0617A4(0x2CuLL, 0xE100000000000000);
      if ((v9 & 0x100000000) != 0)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if ((v9 & 0xFFFFFF80) == 0)
      {
        unint64_t v10 = sub_25C0617A4(0x2CuLL, 0xE100000000000000);
        if ((v10 & 0x100000000) != 0)
        {
LABEL_19:
          __break(1u);
          JUMPOUT(0x25C06104CLL);
        }
        char v11 = v10;
        if ((v10 & 0xFFFFFF00) == 0) {
          goto LABEL_8;
        }
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_9:
  v13[0] = v6;
  v13[1] = v8;
  sub_25C034EC8(v6, v8);
  sub_25C06220C();
  sub_25C0EBBF8();
  sub_25C035294(v6, v8);
  uint64_t result = sub_25C035294(v6, v8);
  if (v3) {
    return result;
  }
  if (__OFADD__(*v5, 1)) {
    goto LABEL_17;
  }
  ++*v5;
  return result;
}

uint64_t sub_25C06105C()
{
  return sub_25C0EBBF8();
}

unint64_t sub_25C0610A8()
{
  unint64_t result = qword_26A588D68;
  if (!qword_26A588D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D68);
  }
  return result;
}

uint64_t sub_25C0610FC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))(0);
}

void sub_25C061124(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  *(void *)(v3 + 32) = a2;
  id v5 = objc_msgSend(self, sel_progressWithTotalUnitCount_, a1);
  objc_msgSend(*(id *)(v3 + 16), sel_addChild_withPendingUnitCount_, v5, 1);
  uint64_t v6 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v5;
  id v7 = v5;

  unint64_t v8 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v3 + 216))(v18);
  if (__OFADD__(*v9, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v9;
    uint64_t v10 = v8(v18, 0);
    if ((*(unsigned char *)(v3 + 48) & 1) == 0)
    {
      uint64_t v11 = *(void *)(v3 + 40);
      uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 200))(v10);
      if (v11 < v10)
      {
        sub_25C062260();
        swift_allocError();
        *(void *)uint64_t v12 = v11;
        *(unsigned char *)(v12 + 8) = 0;
LABEL_9:
        swift_willThrow();
LABEL_11:
        objc_msgSend(v7, sel_setCompletedUnitCount_, objc_msgSend(v7, sel_totalUnitCount));

        return;
      }
    }
    if (*(unsigned char *)(v3 + 64))
    {
LABEL_10:
      a3(v10);
      goto LABEL_11;
    }
    uint64_t v13 = *(void *)(v3 + 56);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 224))(v10);
    uint64_t v14 = *(void *)(v3 + 32);
    BOOL v15 = __OFADD__(v10, v14);
    uint64_t v16 = v10 + v14;
    if (!v15)
    {
      if (v13 < v16)
      {
        sub_25C062260();
        swift_allocError();
        *(void *)uint64_t v17 = v13;
        *(unsigned char *)(v17 + 8) = 1;
        goto LABEL_9;
      }
      goto LABEL_10;
    }
  }
  __break(1u);
}

char *sub_25C06134C(uint64_t a1)
{
  unint64_t result = (char *)(*(uint64_t (**)(unsigned char *))(*v1 + 240))(v10);
  if (__OFADD__(*v4, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  *v4 += a1;
  ((void (*)(unsigned char *, void))result)(v10, 0);
  unint64_t result = (char *)objc_msgSend((id)v1[3], sel_setCompletedUnitCount_, a1);
  if (v1[8]) {
    return result;
  }
  uint64_t v5 = v1[7];
  unint64_t result = (char *)(*(uint64_t (**)(char *))(*v1 + 224))(result);
  uint64_t v6 = v1[4];
  BOOL v7 = __OFADD__(result, v6);
  unint64_t v8 = &result[v6];
  if (v7)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (v5 < (uint64_t)v8)
  {
    sub_25C062260();
    swift_allocError();
    *(void *)uint64_t v9 = v5;
    *(unsigned char *)(v9 + 8) = 1;
    return (char *)swift_willThrow();
  }
  return result;
}

uint64_t ProgressTracker.deinit()
{
  return v0;
}

uint64_t ProgressTracker.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 88, 7);
}

uint64_t SHA256Digest.init(readingURL:inChunksOfSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v16[1] = a3;
  uint64_t v5 = sub_25C0EB718();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EB708();
  type metadata accessor for ProgressTracker();
  uint64_t v9 = swift_allocObject();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
  *(void *)(v9 + 16) = v10;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
  *(void *)(v9 + 56) = 0;
  *(void *)(v9 + 72) = 0;
  *(void *)(v9 + 80) = 0;
  *(unsigned char *)(v9 + 64) = 1;
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 24) = v11;
  *(unsigned char *)(v9 + 48) = 1;
  objc_msgSend(v10, sel_setTotalUnitCount_, 1);
  uint64_t v12 = v16[3];
  sub_25C05EA44(a2, v9, a1, (uint64_t)v8);
  if (v12)
  {
    uint64_t v13 = sub_25C0EA238();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
    swift_release();
  }
  else
  {
    swift_release();
    sub_25C0EB6F8();
    uint64_t v14 = sub_25C0EA238();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25C0616E8(uint64_t a1)
{
  uint64_t v2 = sub_25C0630A4(&qword_26A588DF0, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_25C0630A4(&qword_26A588DF8, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

unint64_t sub_25C0617A4(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_25C061884(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_25C0EBF68();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_25C0EBFF8();
      }
      unsigned int v5 = sub_25C0EC008();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_25C061884(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_25C061924(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_25C061994(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_25C061924(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_25C061AB8(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_25C061994(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      id v13[2] = v3;
      void v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_25C0EBFF8();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x270F9E998]();
    }
  }
  return result;
}

uint64_t sub_25C061AB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_25C0EB918();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x26117D270](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_25C061B34(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v5 = (char *)MEMORY[0x263F8EE78];
  unint64_t v31 = 4 * v4;
  while (2)
  {
    unint64_t v32 = v5;
    unint64_t v6 = sub_25C0EB928();
    unint64_t v8 = v7 >> 14;
    if (v7 >> 14 == v6 >> 14)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return sub_25C0EC398();
    }
    unint64_t v9 = v6;
    while (1)
    {
      uint64_t v35 = sub_25C0EBE28();
      uint64_t v36 = v10;
      uint64_t v11 = v37;
      char v12 = a1(&v35);
      uint64_t v37 = v11;
      if (v11)
      {
LABEL_29:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      char v13 = v12;
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      unint64_t v9 = sub_25C0EBE18();
      if (v8 == v9 >> 14) {
        goto LABEL_27;
      }
    }
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v15 = v9 >> 14;
    if (v31 < v9 >> 14)
    {
      __break(1u);
LABEL_33:
      __break(1u);
    }
    else
    {
      unint64_t v16 = sub_25C0EB928();
      unint64_t v17 = v16 >> 14;
      unint64_t v33 = v18 >> 14;
      if (v16 >> 14 != v18 >> 14)
      {
        unint64_t v30 = v16 >> 14;
        uint64_t v19 = v37;
        while (1)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_25C0EBE28();
          uint64_t v22 = v21;
          swift_bridgeObjectRelease();
          uint64_t v35 = v20;
          uint64_t v36 = v22;
          char v23 = a1(&v35);
          if (v19) {
            goto LABEL_29;
          }
          char v24 = v23;
          unint64_t result = swift_bridgeObjectRelease();
          if ((v24 & 1) == 0) {
            break;
          }
          unint64_t result = sub_25C0EBE18();
          unint64_t v17 = result >> 14;
          if (result >> 14 == v33)
          {
            uint64_t v37 = 0;
            unint64_t v17 = v33;
            goto LABEL_18;
          }
        }
        uint64_t v37 = 0;
LABEL_18:
        unint64_t v15 = v9 >> 14;
        if (v17 < v30) {
          goto LABEL_33;
        }
      }
      sub_25C0EBE38();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if (v26 >> 14 >= v15)
      {
        uint64_t v5 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_25C061EF8(0, *((void *)v32 + 2) + 1, 1, v32);
        }
        unint64_t v28 = *((void *)v5 + 2);
        unint64_t v27 = *((void *)v5 + 3);
        if (v28 >= v27 >> 1) {
          uint64_t v5 = sub_25C061EF8((char *)(v27 > 1), v28 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v28 + 1;
        BOOL v29 = &v5[16 * v28];
        *((void *)v29 + 4) = v9;
        *((void *)v29 + 5) = v26;
        if (v26 >> 14 < v31)
        {
          unint64_t result = sub_25C0EB8D8();
          if (v31 >= result >> 14) {
            continue;
          }
          goto LABEL_35;
        }
        return sub_25C0EC398();
      }
    }
    break;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

char *sub_25C061EF8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588DB8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25C061FF4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25C0EA048();
  if (!result || (uint64_t result = sub_25C0EA068(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_25C0EA058();
      sub_25C0EB718();
      sub_25C0630A4(&qword_26A588DA8, MEMORY[0x263F047F8]);
      return sub_25C0EB5E8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25C0620D4(void *a1)
{
  return sub_25C062C0C(a1) & 1;
}

uint64_t sub_25C0620F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C062158(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25C0621B8()
{
  unint64_t result = qword_26A588D80;
  if (!qword_26A588D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D80);
  }
  return result;
}

unint64_t sub_25C06220C()
{
  unint64_t result = qword_26A588D88;
  if (!qword_26A588D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D88);
  }
  return result;
}

unint64_t sub_25C062260()
{
  unint64_t result = qword_26A588D90;
  if (!qword_26A588D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D90);
  }
  return result;
}

unint64_t sub_25C0622B8()
{
  unint64_t result = qword_26A588D98;
  if (!qword_26A588D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588D98);
  }
  return result;
}

uint64_t method lookup function for ProgressTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ProgressTracker);
}

uint64_t dispatch thunk of ProgressTracker.filesStartedForCurrentMessage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ProgressTracker.filesStartedForCurrentMessage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ProgressTracker.filesStartedForCurrentMessage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ProgressTracker.totalBytesRead.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ProgressTracker.totalBytesRead.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ProgressTracker.totalBytesRead.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ProgressTracker.__allocating_init(fileCount:sizeLimitInBytes:filesPerMessageLimit:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, void))(v6 + 248))(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of ProgressTracker.startMessage()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ProgressTracker.handleFile<A>(ofSize:inChunksOfSize:block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ProgressTracker.countReadBytes(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressTracker.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressTracker.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25C062568(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_25C062570(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProgressTracker.Error()
{
  return &type metadata for ProgressTracker.Error;
}

unsigned char *storeEnumTagSinglePayload for HPKEDecryptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C062658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HPKEDecryptionError()
{
  return &type metadata for HPKEDecryptionError;
}

uint64_t sub_25C062690(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588DB0);
    uint64_t v3 = sub_25C0EBF48();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      unsigned int v6 = *(void **)(v32 + 8 * v4);
      sub_25C0EB858();
      sub_25C0EC348();
      id v7 = v6;
      sub_25C0EB8C8();
      uint64_t v8 = sub_25C0EC368();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_25C0EB858();
        uint64_t v17 = v16;
        if (v15 == sub_25C0EB858() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_25C0EC268();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_25C0EB858();
          uint64_t v24 = v23;
          if (v22 == sub_25C0EB858() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_25C0EC268();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_25C0628C0(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_25C034EC8(a1, a2);
      sub_25C061FF4((int)a1, a1 >> 32);
      goto LABEL_7;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      sub_25C034EC8(a1, a2);
      swift_retain();
      swift_retain();
      sub_25C061FF4(v5, v6);
      if (v2)
      {
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x25C062B68);
      }
      swift_release();
      swift_release();
LABEL_7:
      uint64_t result = sub_25C035294(a1, a2);
      break;
    default:
      sub_25C0EB718();
      sub_25C0630A4(&qword_26A588DA8, MEMORY[0x263F047F8]);
      sub_25C0EB5E8();
      uint64_t result = sub_25C035294(a1, a2);
      break;
  }
  return result;
}

uint64_t sub_25C062B78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_25C0628C0(a3, a4);
}

void type metadata accessor for URLResourceKey()
{
  if (!qword_26A588DD0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A588DD0);
    }
  }
}

void sub_25C062BF4()
{
}

uint64_t sub_25C062C0C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_25C0EC268() & 1;
  }
}

uint64_t sub_25C062C64(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, unint64_t))(v4 + 32);
  uint64_t v7 = v5;
  uint64_t v10 = a1;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3)
      {
        __break(1u);
LABEL_12:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x25C062F98);
      }
      sub_25C034EC8(a3, a4);
      uint64_t v10 = a1;
      sub_25C061FF4((int)a3, a3 >> 32);
      uint64_t v7 = v5;
LABEL_7:
      sub_25C035294(a3, a4);
      break;
    case 2uLL:
      unint64_t v11 = *(void (**)(uint64_t, void, uint64_t, unint64_t))(v4 + 32);
      uint64_t v12 = *(void *)(a3 + 16);
      uint64_t v13 = *(void *)(a3 + 24);
      sub_25C034EC8(a3, a4);
      swift_retain();
      swift_retain();
      sub_25C061FF4(v12, v13);
      if (v5) {
        goto LABEL_12;
      }
      uint64_t v7 = 0;
      swift_release();
      swift_release();
      sub_25C035294(a3, a4);
      uint64_t v6 = v11;
      uint64_t v10 = a1;
      break;
    default:
      sub_25C0EB718();
      sub_25C0630A4(&qword_26A588DA8, MEMORY[0x263F047F8]);
      sub_25C0EB5E8();
      goto LABEL_7;
  }
  sub_25C06220C();
  uint64_t result = sub_25C0EB698();
  if (!v7)
  {
    uint64_t v17 = result;
    unint64_t v18 = v16;
    v6(v10, a2 & 1, result, v16);
    return sub_25C035294(v17, v18);
  }
  return result;
}

void sub_25C062FA8()
{
  sub_25C060740(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(uint64_t, BOOL, uint64_t, unint64_t))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_25C062FCC()
{
  return sub_25C0630A4(&qword_26A588DD8, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_25C063014()
{
  return sub_25C0630A4(&qword_26A588DE0, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_25C06305C()
{
  return sub_25C0630A4(&qword_26A588DE8, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_25C0630A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0630F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_25C063104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_25C063118()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25C0EA238();
  __swift_allocate_value_buffer(v3, qword_26A595628);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26A595628);
  sub_25C0EA218();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_25C063248()
{
  if (qword_26A591200 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25C0EA238();

  return __swift_project_value_buffer(v0, (uint64_t)qword_26A595628);
}

uint64_t View.prefetchSensitiveContentPolicy(forcedPolicy:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v21 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = type metadata accessor for SensitiveContentPolicyUpdater(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(a1, (uint64_t)v14, &qword_26A588E00);
  *(void *)uint64_t v17 = swift_getKeyPath();
  v17[8] = 0;
  uint64_t v18 = sub_25C0EA5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  sub_25C02FB8C((uint64_t)v12, (uint64_t)v9, &qword_26A588E00);
  sub_25C0EB378();
  sub_25C02FBF0((uint64_t)v12, &qword_26A588E00);
  uint64_t v19 = (uint64_t *)&v17[*(int *)(v15 + 24)];
  *uint64_t v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  swift_storeEnumTagMultiPayload();
  sub_25C0516EC((uint64_t)v14, (uint64_t)&v17[*(int *)(v15 + 28)], &qword_26A588E00);
  MEMORY[0x26117CB70](v17, a3, v15, v21);
  return sub_25C070810((uint64_t)v17, type metadata accessor for SensitiveContentPolicyUpdater);
}

uint64_t View.sensitiveContentOverlay(forImage:analysis:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return sub_25C063C7C(a1, a2, a3, a4, a5, 0, a6);
}

uint64_t sub_25C0634FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v56 = a5;
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  Swift::UInt rawValue = a3;
  uint64_t v49 = a2;
  uint64_t v57 = a6;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v55 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  uint64_t v8 = MEMORY[0x270FA5388](v52);
  uint64_t v50 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for SensitiveContentRedactor(0);
  MEMORY[0x270FA5388](v18);
  char v20 = (uint64_t *)((char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_25C0EA8F8();
  uint64_t v54 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v45 = (char *)&v43 - v22;
  type metadata accessor for SensitiveContentPolicyUpdater(255);
  uint64_t v23 = sub_25C0EA8F8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v48 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v53 = (char *)&v43 - v27;
  sub_25C02FB8C(v47, (uint64_t)v17, &qword_26A588E10);
  sub_25C02FB8C(v49, (uint64_t)v14, &qword_26A588E18);
  Swift::UInt rawValue = SCUISensitiveContentOverlayOptions.forcingInternalOptions()().rawValue;
  *char v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_25C0780D4((uint64_t)v11, v50, type metadata accessor for SensitiveContentRedactor.Mode);
  sub_25C0EB378();
  sub_25C070810((uint64_t)v11, type metadata accessor for SensitiveContentRedactor.Mode);
  sub_25C0516EC((uint64_t)v17, (uint64_t)v20 + v18[6], &qword_26A588E10);
  sub_25C0516EC((uint64_t)v44, (uint64_t)v20 + v18[7], &qword_26A588E18);
  *(uint64_t *)((char *)v20 + v18[8]) = rawValue;
  uint64_t v28 = (char *)v20 + v18[9];
  char v62 = 0;
  sub_25C0EB378();
  uint64_t v29 = v64;
  *uint64_t v28 = v63;
  *((void *)v28 + 1) = v29;
  uint64_t v30 = v45;
  uint64_t v31 = v56;
  MEMORY[0x26117CB70](v20, v46, v18, v56);
  sub_25C070810((uint64_t)v20, type metadata accessor for SensitiveContentRedactor);
  uint64_t v32 = sub_25C0EA5E8();
  uint64_t v33 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v55, 1, 1, v32);
  uint64_t v34 = sub_25C070870(&qword_26A591248, (void (*)(uint64_t))type metadata accessor for SensitiveContentRedactor);
  uint64_t v60 = v31;
  uint64_t v61 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = v48;
  View.prefetchSensitiveContentPolicy(forcedPolicy:options:)(v33, v37, v21, WitnessTable);
  sub_25C02FBF0(v33, &qword_26A588E00);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v21);
  uint64_t v38 = sub_25C070870(qword_26A591250, (void (*)(uint64_t))type metadata accessor for SensitiveContentPolicyUpdater);
  uint64_t v58 = WitnessTable;
  uint64_t v59 = v38;
  swift_getWitnessTable();
  unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v40 = v53;
  v39(v53, v36, v23);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v24 + 8);
  v41(v36, v23);
  v39(v57, v40, v23);
  return ((uint64_t (*)(char *, uint64_t))v41)(v40, v23);
}

uint64_t View.sensitiveContentOverlay(forImage:analysis:options:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, Swift::UInt a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return sub_25C063B48(a1, a2, a3, a4, a5, a6);
}

{
  return sub_25C063B48(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_25C063B48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, Swift::UInt a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v14 = a1;
  uint64_t v15 = type metadata accessor for ScannableContent();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  id v16 = a1;
  sub_25C0634FC((uint64_t)v14, a2, a3, a4, a5, a6);
  return sub_25C02FBF0((uint64_t)v14, &qword_26A588E10);
}

uint64_t View.sensitiveContentOverlay(forVideo:analysis:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return sub_25C063C7C(a1, a2, a3, a4, a5, 1, a6);
}

uint64_t sub_25C063C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, char *a7@<X8>)
{
  v24[1] = a6;
  uint64_t v26 = a5;
  uint64_t v25 = a4;
  uint64_t v11 = sub_25C0EA238();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v18 - 8);
  char v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(a1, (uint64_t)v17, &qword_26A589EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
  {
    uint64_t v21 = type metadata accessor for ScannableContent();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v14, v11);
    uint64_t v22 = type metadata accessor for ScannableContent();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 0, 1, v22);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_25C0634FC((uint64_t)v20, a2, a3, v25, v26, a7);
  return sub_25C02FBF0((uint64_t)v20, &qword_26A588E10);
}

void (*sub_25C063F3C(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30) - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for SensitiveContentRedactor(0);
  sub_25C02FB8C(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_26A588E18);
  MEMORY[0x26117CDA0](v4);
  return sub_25C06402C;
}

void sub_25C06402C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_25C02FB8C(*(void *)(a1 + 8), (uint64_t)v3, &qword_26A588E30);
    sub_25C0EB448();
    sub_25C02FBF0((uint64_t)v2, &qword_26A588E18);
    uint64_t v5 = (uint64_t)v4;
    uint64_t v6 = &qword_26A588E30;
  }
  else
  {
    sub_25C0EB448();
    uint64_t v6 = &qword_26A588E18;
    uint64_t v5 = (uint64_t)v2;
  }
  sub_25C02FBF0(v5, v6);
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_25C0640EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v109 = a2;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E78) - 8;
  MEMORY[0x270FA5388](v108);
  uint64_t v105 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v100);
  unint64_t v97 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v92);
  uint64_t v86 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = v6 - 8;
  uint64_t v114 = v6 - 8;
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v85);
  uint64_t v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E80);
  uint64_t v89 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  unint64_t v84 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E88);
  uint64_t v95 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v113 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E90);
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  unint64_t v90 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E98);
  MEMORY[0x270FA5388](v98);
  uint64_t v93 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588EA0);
  uint64_t v106 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  long long v115 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588EA8);
  uint64_t v104 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v99 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588EB0) - 8;
  MEMORY[0x270FA5388](v102);
  long long v101 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(int *)(v9 + 32);
  uint64_t v119 = v2;
  sub_25C02FB8C(v2 + v19, (uint64_t)v11, &qword_26A588E10);
  uint64_t v116 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v118 = type metadata accessor for SensitiveContentRedactor;
  sub_25C0780D4(v2, v116, type metadata accessor for SensitiveContentRedactor);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v110 = ((v20 + 16) & ~v20) + v8;
  uint64_t v21 = (v20 + 16) & ~v20;
  uint64_t v117 = v21;
  uint64_t v112 = v20 | 7;
  uint64_t v22 = swift_allocObject();
  uint64_t v111 = type metadata accessor for SensitiveContentRedactor;
  sub_25C079354((uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for SensitiveContentRedactor);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588EB8);
  uint64_t v24 = sub_25C0583D0(&qword_26A588EC0, &qword_26A588EB8);
  unint64_t v25 = sub_25C078144();
  uint64_t v26 = v85;
  sub_25C0EB228();
  swift_release();
  sub_25C02FBF0((uint64_t)v11, &qword_26A588E10);
  uint64_t v27 = v86;
  uint64_t v28 = v119;
  sub_25C07031C(v86);
  uint64_t v29 = v28;
  uint64_t v30 = v116;
  sub_25C0780D4(v29, v116, type metadata accessor for SensitiveContentRedactor);
  uint64_t v31 = swift_allocObject();
  sub_25C079354(v30, v31 + v117, type metadata accessor for SensitiveContentRedactor);
  *(void *)&long long v120 = v23;
  *((void *)&v120 + 1) = v26;
  uint64_t v121 = v24;
  unint64_t v122 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v33 = sub_25C07877C();
  uint64_t v34 = v87;
  uint64_t v35 = v92;
  uint64_t v36 = v84;
  sub_25C0EB228();
  swift_release();
  sub_25C02FBF0(v27, &qword_26A588E00);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v36, v34);
  uint64_t v37 = v119;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  uint64_t v39 = (uint64_t)v97;
  MEMORY[0x26117CDA0](v38);
  uint64_t v40 = v116;
  sub_25C0780D4(v37, v116, (uint64_t (*)(void))v118);
  uint64_t v41 = swift_allocObject();
  sub_25C079354(v40, v41 + v117, v111);
  *(void *)&long long v120 = v34;
  *((void *)&v120 + 1) = v35;
  uint64_t v121 = OpaqueTypeConformance2;
  unint64_t v122 = v33;
  swift_getOpaqueTypeConformance2();
  sub_25C078824();
  uint64_t v42 = v90;
  uint64_t v43 = v91;
  uint64_t v44 = v113;
  sub_25C0EB228();
  swift_release();
  sub_25C02FBF0(v39, &qword_26A588E30);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v44, v43);
  uint64_t v45 = sub_25C0EB538();
  uint64_t v113 = v46;
  uint64_t v47 = v119;
  sub_25C0669D8(v119, (uint64_t)&v120);
  long long v48 = v120;
  LOWORD(OpaqueTypeConformance2) = v121;
  LOBYTE(v35) = BYTE2(v121);
  uint64_t v49 = v94;
  uint64_t v50 = (uint64_t)v105;
  uint64_t v51 = v96;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v105, v42, v96);
  uint64_t v52 = v50 + *(int *)(v108 + 44);
  *(_OWORD *)uint64_t v52 = v48;
  *(unsigned char *)(v52 + 18) = v35;
  *(_WORD *)(v52 + 16) = OpaqueTypeConformance2;
  uint64_t v53 = v113;
  *(void *)(v52 + 24) = v45;
  *(void *)(v52 + 32) = v53;
  uint64_t v54 = v93;
  sub_25C02FB8C(v50, v93, &qword_26A588E78);
  sub_25C02FBF0(v50, &qword_26A588E78);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v51);
  uint64_t v55 = v47;
  uint64_t v56 = v116;
  sub_25C0780D4(v47, v116, (uint64_t (*)(void))v118);
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = v117;
  uint64_t v59 = v111;
  sub_25C079354(v56, v57 + v117, v111);
  uint64_t v113 = (char *)sub_25C07892C();
  uint64_t v60 = v98;
  sub_25C0EB0A8();
  swift_release();
  sub_25C02FBF0(v54, &qword_26A588E98);
  uint64_t v61 = v47 + *(int *)(v114 + 44);
  char v62 = *(unsigned char *)v61;
  uint64_t v63 = *(void *)(v61 + 8);
  char v124 = v62;
  uint64_t v125 = v63;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F18);
  sub_25C0EB3A8();
  LODWORD(v114) = v121;
  sub_25C0780D4(v47, v56, (uint64_t (*)(void))v118);
  uint64_t v64 = swift_allocObject();
  sub_25C079354(v56, v64 + v58, v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F20);
  *(void *)&long long v120 = v60;
  *((void *)&v120 + 1) = v113;
  swift_getOpaqueTypeConformance2();
  sub_25C078BCC();
  uint64_t v65 = v99;
  uint64_t v66 = v103;
  unint64_t v67 = v115;
  sub_25C0EB1B8();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v67, v66);
  uint64_t v68 = sub_25C0EB518();
  uint64_t v70 = v69;
  sub_25C068968(v55, (uint64_t)&v120);
  long long v118 = v120;
  uint64_t v71 = v121;
  unint64_t v72 = v122;
  LOBYTE(v55) = v123;
  uint64_t v73 = v104;
  uint64_t v74 = (uint64_t)v101;
  uint64_t v75 = v107;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v101, v65, v107);
  uint64_t v76 = v74 + *(int *)(v102 + 44);
  *(_OWORD *)uint64_t v76 = v118;
  *(void *)(v76 + 16) = v71;
  *(void *)(v76 + 24) = v72;
  *(unsigned char *)(v76 + 32) = v55;
  *(void *)(v76 + 40) = v68;
  *(void *)(v76 + 48) = v70;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v65, v75);
  uint64_t v77 = sub_25C0EB528();
  uint64_t v79 = v78;
  sub_25C0691B0(v119, &v120);
  long long v80 = v120;
  LOWORD(v72) = v121;
  uint64_t v81 = v109;
  sub_25C02FB8C(v74, v109, &qword_26A588EB0);
  uint64_t v82 = v81 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588F30) + 36);
  *(_OWORD *)uint64_t v82 = v80;
  *(_WORD *)(v82 + 16) = v72;
  *(void *)(v82 + 24) = v77;
  *(void *)(v82 + 32) = v79;
  return sub_25C02FBF0(v74, &qword_26A588EB0);
}

uint64_t sub_25C064DC4()
{
  uint64_t v206 = type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v175 = *(void *)(v206 - 8);
  MEMORY[0x270FA5388](v206);
  uint64_t v176 = v1;
  uint64_t v178 = (uint64_t)&v160 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v177 = (char *)&v160 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F38);
  uint64_t v4 = MEMORY[0x270FA5388](v194);
  uint64_t v198 = (uint64_t)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v169 = (uint64_t)&v160 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v181 = (char *)&v160 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v172 = (uint64_t)&v160 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v199 = (uint64_t)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v179 = (uint64_t)&v160 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v195 = (uint64_t)&v160 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v166 = (uint64_t)&v160 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v182 = (uint64_t)&v160 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v168 = (uint64_t)&v160 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v183 = (uint64_t)&v160 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v167 = (uint64_t)&v160 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v180 = (char *)&v160 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v193 = (uint64_t)&v160 - v30;
  uint64_t v31 = type metadata accessor for ScannableContent();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v204 = v31;
  uint64_t v205 = v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v192 = (uint64_t)&v160 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v190 = (uint64_t)&v160 - v36;
  uint64_t v174 = v37;
  MEMORY[0x270FA5388](v35);
  uint64_t v196 = (uint64_t)&v160 - v38;
  uint64_t v39 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  char v202 = (char *)&v160 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v171 = (uint64_t)&v160 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v173 = (uint64_t)&v160 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v170 = (uint64_t)&v160 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v197 = (uint64_t)&v160 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)&v160 - v51;
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v160 - v53;
  uint64_t v55 = sub_25C0EA538();
  uint64_t v188 = *(void *)(v55 - 8);
  uint64_t v189 = v55;
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v187 = (char *)&v160 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v56);
  uint64_t v186 = (char *)&v160 - v58;
  uint64_t v59 = sub_25C0EA578();
  uint64_t v200 = *(void *)(v59 - 8);
  uint64_t v201 = v59;
  MEMORY[0x270FA5388](v59);
  v185 = (char *)&v160 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v61 - 8);
  uint64_t v63 = (char *)&v160 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v64 - 8);
  uint64_t v66 = (char *)&v160 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_25C0EA5E8();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v71 = (char *)&v160 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v69);
  uint64_t v73 = (char *)&v160 - v72;
  sub_25C07031C((uint64_t)v66);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67) == 1)
  {
    sub_25C02FBF0((uint64_t)v66, &qword_26A588E00);
    swift_storeEnumTagMultiPayload();
    sub_25C0780D4((uint64_t)v54, (uint64_t)v52, type metadata accessor for SensitiveContentRedactor.Mode);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
    sub_25C0EB398();
    uint64_t v74 = (uint64_t)v54;
    return sub_25C070810(v74, type metadata accessor for SensitiveContentRedactor.Mode);
  }
  uint64_t v203 = v39;
  char v162 = v52;
  uint64_t v163 = v54;
  uint64_t v184 = v0;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v73, v66, v67);
  sub_25C0EA588();
  sub_25C07B838(&qword_26A588F58, MEMORY[0x263F17608]);
  uint64_t v191 = v73;
  char v76 = sub_25C0EBE98();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v164 = v67;
  uint64_t v165 = v68 + 8;
  v77(v71, v67);
  if ((v76 & 1) == 0)
  {
    uint64_t v89 = v206;
    uint64_t v90 = v184;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
    uint64_t v91 = (uint64_t)v202;
    sub_25C0EB388();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v161 = (uint64_t (*)(char *, uint64_t))v77;
    if (EnumCaseMultiPayload == 2)
    {
      LODWORD(v201) = *(unsigned __int8 *)(v91
                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48));
      uint64_t v93 = v195;
      sub_25C02FB8C(v90 + *(int *)(v89 + 24), v195, &qword_26A588E10);
      uint64_t v94 = v198;
      uint64_t v95 = v198 + *(int *)(v194 + 48);
      sub_25C02FB8C(v93, v198, &qword_26A588E10);
      sub_25C0516EC(v91, v95, &qword_26A588E10);
      uint64_t v96 = v204;
      unint64_t v97 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
      if (v97(v94, 1, v204) == 1)
      {
        sub_25C02FBF0(v93, &qword_26A588E10);
        int v98 = v97(v95, 1, v96);
        uint64_t v99 = v164;
        uint64_t v100 = v191;
        uint64_t v101 = (uint64_t)v162;
        if (v98 == 1)
        {
          sub_25C02FBF0(v198, &qword_26A588E10);
          if (v201) {
            goto LABEL_28;
          }
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v120 = v179;
        sub_25C02FB8C(v94, v179, &qword_26A588E10);
        int v121 = v97(v95, 1, v96);
        uint64_t v122 = v94;
        uint64_t v100 = v191;
        if (v121 != 1)
        {
          uint64_t v123 = v190;
          sub_25C079354(v95, v190, (uint64_t (*)(void))type metadata accessor for ScannableContent);
          sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
          int v124 = sub_25C0EB7A8();
          sub_25C070810(v123, (uint64_t (*)(void))type metadata accessor for ScannableContent);
          sub_25C02FBF0(v195, &qword_26A588E10);
          sub_25C070810(v120, (uint64_t (*)(void))type metadata accessor for ScannableContent);
          sub_25C02FBF0(v122, &qword_26A588E10);
          uint64_t v99 = v164;
          uint64_t v101 = (uint64_t)v162;
          if (v124 & v201) {
            goto LABEL_28;
          }
          goto LABEL_26;
        }
        sub_25C02FBF0(v195, &qword_26A588E10);
        sub_25C070810(v120, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        uint64_t v99 = v164;
        uint64_t v101 = (uint64_t)v162;
      }
      sub_25C02FBF0(v198, &qword_26A588F38);
    }
    else
    {
      sub_25C070810(v91, type metadata accessor for SensitiveContentRedactor.Mode);
      uint64_t v99 = v164;
      uint64_t v100 = v191;
      uint64_t v101 = (uint64_t)v162;
    }
LABEL_26:
    uint64_t v125 = v199;
    sub_25C02FB8C(v90 + *(int *)(v206 + 24), v199, &qword_26A588E10);
    uint64_t v127 = v204;
    uint64_t v126 = v205;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48))(v125, 1, v204) != 1)
    {
      uint64_t v131 = v192;
      sub_25C079354(v125, v192, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      uint64_t v132 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
      uint64_t v133 = (uint64_t)v163;
      sub_25C0780D4(v131, (uint64_t)v163, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v133, 0, 1, v127);
      *(unsigned char *)(v133 + v132) = 0;
      swift_storeEnumTagMultiPayload();
      sub_25C0780D4(v133, v101, type metadata accessor for SensitiveContentRedactor.Mode);
      sub_25C0EB398();
      sub_25C070810(v133, type metadata accessor for SensitiveContentRedactor.Mode);
      sub_25C070810(v131, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      uint64_t v130 = v191;
      return v161(v130, v99);
    }
    sub_25C02FBF0(v125, &qword_26A588E10);
    uint64_t v128 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
    uint64_t v129 = (uint64_t)v163;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v163, 1, 1, v127);
    *(unsigned char *)(v129 + v128) = 0;
    swift_storeEnumTagMultiPayload();
    sub_25C0780D4(v129, v101, type metadata accessor for SensitiveContentRedactor.Mode);
    sub_25C0EB398();
    sub_25C070810(v129, type metadata accessor for SensitiveContentRedactor.Mode);
LABEL_28:
    uint64_t v130 = v100;
    return v161(v130, v99);
  }
  uint64_t v78 = v206;
  uint64_t v79 = v184;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x26117CDA0](v80);
  uint64_t v82 = v200;
  uint64_t v81 = v201;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v63, 1, v201))
  {
    uint64_t v161 = (uint64_t (*)(char *, uint64_t))v77;
    sub_25C02FBF0((uint64_t)v63, &qword_26A588E30);
    uint64_t v83 = v193;
    sub_25C02FB8C(v79 + *(int *)(v78 + 24), v193, &qword_26A588E10);
    uint64_t v84 = v204;
    uint64_t v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
    if (v85(v83, 1, v204) == 1)
    {
      sub_25C02FBF0(v83, &qword_26A588E10);
      uint64_t v86 = (uint64_t)v163;
      swift_storeEnumTagMultiPayload();
      sub_25C0780D4(v86, (uint64_t)v162, type metadata accessor for SensitiveContentRedactor.Mode);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
      sub_25C0EB398();
      uint64_t v87 = type metadata accessor for SensitiveContentRedactor.Mode;
      uint64_t v88 = v86;
LABEL_53:
      sub_25C070810(v88, v87);
      return v161(v191, v164);
    }
    sub_25C079354(v83, v196, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    uint64_t v110 = v79 + *(int *)(v78 + 20);
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
    uint64_t v206 = v110;
    sub_25C0EB388();
    int v112 = swift_getEnumCaseMultiPayload();
    uint64_t v113 = (uint64_t)v163;
    uint64_t v114 = (uint64_t)v181;
    uint64_t v115 = v182;
    uint64_t v116 = v183;
    uint64_t v117 = (uint64_t)v180;
    switch(v112)
    {
      case 1:
        uint64_t v134 = v173;
        sub_25C0780D4(v197, v173, type metadata accessor for SensitiveContentRedactor.Mode);
        sub_25C0780D4(v196, v116, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v205 + 56))(v116, 0, 1, v84);
        uint64_t v135 = v114 + *(int *)(v194 + 48);
        sub_25C02FB8C(v116, v114, &qword_26A588E10);
        sub_25C0516EC(v134, v135, &qword_26A588E10);
        if (v85(v114, 1, v84) == 1)
        {
          sub_25C02FBF0(v116, &qword_26A588E10);
          if (v85(v135, 1, v84) == 1) {
            goto LABEL_33;
          }
          goto LABEL_41;
        }
        uint64_t v139 = v168;
        sub_25C02FB8C(v114, v168, &qword_26A588E10);
        if (v85(v135, 1, v84) == 1)
        {
          sub_25C02FBF0(v183, &qword_26A588E10);
          sub_25C070810(v139, (uint64_t (*)(void))type metadata accessor for ScannableContent);
LABEL_41:
          sub_25C02FBF0(v114, &qword_26A588F38);
          uint64_t v113 = (uint64_t)v163;
          goto LABEL_52;
        }
        uint64_t v142 = v190;
        sub_25C079354(v135, v190, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
        char v143 = sub_25C0EB7A8();
        sub_25C070810(v142, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        sub_25C02FBF0(v183, &qword_26A588E10);
        sub_25C070810(v139, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        sub_25C02FBF0(v114, &qword_26A588E10);
        uint64_t v113 = (uint64_t)v163;
        if (v143) {
          goto LABEL_57;
        }
        goto LABEL_52;
      case 2:
        uint64_t v137 = v171;
        sub_25C0780D4(v197, v171, type metadata accessor for SensitiveContentRedactor.Mode);
        if (*(unsigned char *)(v137 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48)) != 1)
        {
          sub_25C02FBF0(v137, &qword_26A588E10);
          goto LABEL_52;
        }
        char v202 = (char *)v111;
        sub_25C0780D4(v196, v115, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v205 + 56))(v115, 0, 1, v84);
        uint64_t v114 = v169;
        uint64_t v138 = v169 + *(int *)(v194 + 48);
        sub_25C02FB8C(v115, v169, &qword_26A588E10);
        sub_25C0516EC(v137, v138, &qword_26A588E10);
        if (v85(v114, 1, v84) == 1)
        {
          sub_25C02FBF0(v115, &qword_26A588E10);
          if (v85(v138, 1, v84) == 1)
          {
            uint64_t v136 = v169;
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v144 = v166;
          sub_25C02FB8C(v114, v166, &qword_26A588E10);
          if (v85(v138, 1, v84) != 1)
          {
            uint64_t v159 = v190;
            sub_25C079354(v138, v190, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
            char v156 = sub_25C0EB7A8();
            uint64_t v157 = v144;
            sub_25C070810(v159, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            uint64_t v158 = v182;
LABEL_56:
            sub_25C02FBF0(v158, &qword_26A588E10);
            sub_25C070810(v157, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            sub_25C02FBF0(v114, &qword_26A588E10);
            if (v156)
            {
LABEL_57:
              sub_25C070810(v196, (uint64_t (*)(void))type metadata accessor for ScannableContent);
              v161(v191, v164);
              uint64_t v74 = v197;
              return sub_25C070810(v74, type metadata accessor for SensitiveContentRedactor.Mode);
            }
LABEL_52:
            sub_25C070810(v197, type metadata accessor for SensitiveContentRedactor.Mode);
            swift_storeEnumTagMultiPayload();
            sub_25C0780D4(v113, (uint64_t)v162, type metadata accessor for SensitiveContentRedactor.Mode);
            sub_25C0EB398();
            sub_25C070810(v113, type metadata accessor for SensitiveContentRedactor.Mode);
            uint64_t v145 = sub_25C0EBB08();
            uint64_t v146 = (uint64_t)v177;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v177, 1, 1, v145);
            uint64_t v147 = v196;
            uint64_t v148 = v190;
            sub_25C0780D4(v196, v190, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            uint64_t v149 = v178;
            sub_25C0780D4(v79, v178, type metadata accessor for SensitiveContentRedactor);
            sub_25C0EBAD8();
            uint64_t v150 = sub_25C0EBAC8();
            unint64_t v151 = (*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80);
            unint64_t v152 = (v174 + *(unsigned __int8 *)(v175 + 80) + v151) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
            uint64_t v153 = swift_allocObject();
            uint64_t v154 = MEMORY[0x263F8F500];
            *(void *)(v153 + 16) = v150;
            *(void *)(v153 + 24) = v154;
            sub_25C079354(v148, v153 + v151, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            sub_25C079354(v149, v153 + v152, type metadata accessor for SensitiveContentRedactor);
            sub_25C06DE28(v146, (uint64_t)&unk_26A588FE0, v153);
            swift_release();
            uint64_t v87 = (uint64_t (*)(void))type metadata accessor for ScannableContent;
            uint64_t v88 = v147;
            goto LABEL_53;
          }
          sub_25C02FBF0(v182, &qword_26A588E10);
          sub_25C070810(v144, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        }
        uint64_t v141 = v169;
        goto LABEL_51;
      case 3:
        goto LABEL_52;
      default:
        char v202 = (char *)v111;
        uint64_t v118 = v170;
        sub_25C0780D4(v197, v170, type metadata accessor for SensitiveContentRedactor.Mode);
        sub_25C0780D4(v196, v117, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v205 + 56))(v117, 0, 1, v84);
        uint64_t v114 = v172;
        uint64_t v119 = v172 + *(int *)(v194 + 48);
        sub_25C02FB8C(v117, v172, &qword_26A588E10);
        sub_25C0516EC(v118, v119, &qword_26A588E10);
        if (v85(v114, 1, v84) == 1)
        {
          sub_25C02FBF0(v117, &qword_26A588E10);
          if (v85(v119, 1, v84) == 1)
          {
LABEL_33:
            uint64_t v136 = v114;
LABEL_38:
            sub_25C02FBF0(v136, &qword_26A588E10);
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v140 = v167;
          sub_25C02FB8C(v114, v167, &qword_26A588E10);
          if (v85(v119, 1, v84) != 1)
          {
            uint64_t v155 = v190;
            sub_25C079354(v119, v190, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
            char v156 = sub_25C0EB7A8();
            uint64_t v157 = v140;
            sub_25C070810(v155, (uint64_t (*)(void))type metadata accessor for ScannableContent);
            uint64_t v158 = v117;
            goto LABEL_56;
          }
          sub_25C02FBF0(v117, &qword_26A588E10);
          sub_25C070810(v140, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        }
        uint64_t v141 = v114;
LABEL_51:
        sub_25C02FBF0(v141, &qword_26A588F38);
        goto LABEL_52;
    }
  }
  uint64_t v102 = v185;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v185, v63, v81);
  sub_25C02FBF0((uint64_t)v63, &qword_26A588E30);
  uint64_t v103 = v186;
  sub_25C0EA508();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v102, v81);
  uint64_t v104 = (void (*)(uint64_t))MEMORY[0x263F175D8];
  sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
  uint64_t v105 = v187;
  uint64_t v106 = v189;
  sub_25C0EBEF8();
  sub_25C07B838(&qword_26A588F98, v104);
  LOBYTE(v102) = sub_25C0EB7A8();
  uint64_t v107 = *(void (**)(char *, uint64_t))(v188 + 8);
  v107(v105, v106);
  v107(v103, v106);
  if (v102)
  {
    uint64_t v108 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
    uint64_t v109 = (uint64_t)v163;
    sub_25C02FB8C(v184 + *(int *)(v78 + 24), (uint64_t)v163, &qword_26A588E10);
    *(unsigned char *)(v109 + v108) = 1;
  }
  else
  {
    uint64_t v109 = (uint64_t)v163;
    sub_25C02FB8C(v184 + *(int *)(v78 + 24), (uint64_t)v163, &qword_26A588E10);
  }
  swift_storeEnumTagMultiPayload();
  sub_25C0780D4(v109, (uint64_t)v162, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v109, type metadata accessor for SensitiveContentRedactor.Mode);
  return ((uint64_t (*)(char *, uint64_t))v77)(v191, v164);
}

uint64_t sub_25C0669D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v59 = type metadata accessor for ScannableContent();
  uint64_t v62 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v56 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F38);
  MEMORY[0x270FA5388](v57);
  uint64_t v60 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v63 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v58 = (uint64_t)&v55 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v61 = (uint64_t)&v55 - v10;
  uint64_t v11 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25C0EA528();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v25 = a1;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x26117CDA0](v26);
  uint64_t v27 = sub_25C0EA578();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v23, 1, v27))
  {
    sub_25C02FBF0((uint64_t)v23, &qword_26A588E30);
  }
  else
  {
    sub_25C0EA558();
    sub_25C02FBF0((uint64_t)v23, &qword_26A588E30);
    sub_25C0EA518();
    sub_25C07B838(&qword_26A588F70, MEMORY[0x263F175C0]);
    char v28 = sub_25C0EBE98();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
    v29(v18, v14);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v20, v14);
    if (v28)
    {
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      int v33 = 16711680;
      uint64_t v34 = v64;
      goto LABEL_33;
    }
  }
  uint64_t v35 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB388();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v38 = v62;
  uint64_t v37 = (uint64_t)v63;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_25C070810((uint64_t)v13, type metadata accessor for SensitiveContentRedactor.Mode);
      goto LABEL_21;
    case 2:
      uint64_t v42 = v61;
      sub_25C02FB8C((uint64_t)v13, v61, &qword_26A588E10);
      uint64_t v43 = v58;
      sub_25C02FB8C(v25 + *(int *)(v24 + 24), v58, &qword_26A588E10);
      uint64_t v44 = v60;
      uint64_t v45 = v60 + *(int *)(v57 + 48);
      sub_25C02FB8C(v42, v60, &qword_26A588E10);
      uint64_t v46 = v44;
      sub_25C02FB8C(v43, v45, &qword_26A588E10);
      uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      uint64_t v48 = v44;
      uint64_t v49 = v59;
      if (v47(v48, 1, v59) == 1)
      {
        sub_25C02FBF0(v43, &qword_26A588E10);
        if (v47(v45, 1, v49) == 1)
        {
          sub_25C02FBF0(v46, &qword_26A588E10);
LABEL_19:
          sub_25C0794F8();
          long long v71 = 0uLL;
          LOBYTE(v72) = 0;
          sub_25C0EAD28();
          long long v65 = v68;
          __int16 v66 = v69;
          char v67 = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FB8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FC0);
          sub_25C07954C();
          sub_25C0795C8();
          sub_25C0EAD28();
          sub_25C02FBF0(v61, &qword_26A588E10);
          uint64_t v32 = *((void *)&v71 + 1);
          uint64_t v31 = v71;
          int v40 = v72;
          int v41 = v73;
          uint64_t result = sub_25C02FBF0((uint64_t)v13, &qword_26A588E10);
          goto LABEL_29;
        }
        goto LABEL_17;
      }
      sub_25C02FB8C(v46, v37, &qword_26A588E10);
      if (v47(v45, 1, v49) == 1)
      {
        sub_25C02FBF0(v43, &qword_26A588E10);
        sub_25C070810(v37, (uint64_t (*)(void))type metadata accessor for ScannableContent);
LABEL_17:
        sub_25C02FBF0(v46, &qword_26A588F38);
        goto LABEL_20;
      }
      uint64_t v50 = v56;
      sub_25C079354(v45, v56, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
      char v51 = sub_25C0EB7A8();
      sub_25C070810(v50, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v43, &qword_26A588E10);
      sub_25C070810(v37, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v46, &qword_26A588E10);
      if (v51) {
        goto LABEL_19;
      }
LABEL_20:
      sub_25C02FBF0(v61, &qword_26A588E10);
      sub_25C02FBF0((uint64_t)v13, &qword_26A588E10);
LABEL_21:
      v52.Swift::UInt rawValue = *(void *)(v35 + *(int *)(v24 + 32));
      if ((*(void *)sub_25C0E6FA0() & ~v52.rawValue) != 0)
      {
        LOBYTE(v65) = 1;
        SensitiveContentBlurView.init(mode:options:)((SensitiveContentAnalysisUI::SensitiveContentBlurView::Mode)&v65, v52);
        *(void *)&long long v65 = v71;
        *((void *)&v65 + 1) = *((void *)&v71 + 1);
        LOBYTE(v66) = 1;
      }
      else
      {
        LOBYTE(v65) = 3;
        SensitiveContentBlurView.init(mode:options:)((SensitiveContentAnalysisUI::SensitiveContentBlurView::Mode)&v65, v52);
        *(void *)&long long v65 = v71;
        *((void *)&v65 + 1) = *((void *)&v71 + 1);
        LOBYTE(v66) = 0;
      }
      sub_25C0794F8();
      sub_25C0EAD28();
      unsigned __int16 v72 = v72;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FA0);
      sub_25C079484();
      sub_25C0794F8();
      sub_25C0EAD28();
      if (v70) {
        __int16 v53 = 256;
      }
      else {
        __int16 v53 = 0;
      }
      long long v65 = v68;
      __int16 v66 = v53 | v69;
      char v67 = 1;
LABEL_28:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FC0);
      sub_25C07954C();
      sub_25C0795C8();
      uint64_t result = sub_25C0EAD28();
      uint64_t v32 = *((void *)&v71 + 1);
      uint64_t v31 = v71;
      int v40 = v72;
      int v41 = v73;
LABEL_29:
      uint64_t v34 = v64;
      if (v41) {
        int v54 = 0x10000;
      }
      else {
        int v54 = 0;
      }
      int v33 = v54 | v40;
      break;
    case 3:
      LOBYTE(v65) = 2;
      SensitiveContentBlurView.init(mode:options:)((SensitiveContentAnalysisUI::SensitiveContentBlurView::Mode)&v65, *(__C::SCUISensitiveContentOverlayOptions *)(v25 + *(int *)(v24 + 32)));
      *(void *)&long long v71 = v71;
      LOBYTE(v72) = 1;
      sub_25C0794F8();
      sub_25C0EAD28();
      long long v65 = v68;
      __int16 v66 = v69;
      char v67 = 0;
      goto LABEL_28;
    default:
      LOBYTE(v65) = 6;
      SensitiveContentBlurView.init(mode:options:)((SensitiveContentAnalysisUI::SensitiveContentBlurView::Mode)&v65, *(__C::SCUISensitiveContentOverlayOptions *)(v25 + *(int *)(v24 + 32)));
      *(void *)&long long v71 = v71;
      unsigned __int16 v72 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FA0);
      sub_25C079484();
      sub_25C0794F8();
      sub_25C0EAD28();
      if (v70) {
        __int16 v39 = 256;
      }
      else {
        __int16 v39 = 0;
      }
      long long v65 = v68;
      __int16 v66 = v39 | v69;
      char v67 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FC0);
      sub_25C07954C();
      sub_25C0795C8();
      sub_25C0EAD28();
      uint64_t v32 = *((void *)&v71 + 1);
      uint64_t v31 = v71;
      int v40 = v72;
      int v41 = v73;
      uint64_t result = sub_25C070810((uint64_t)v13, type metadata accessor for SensitiveContentRedactor.Mode);
      goto LABEL_29;
  }
LABEL_33:
  *(void *)uint64_t v34 = v31;
  *(void *)(v34 + 8) = v32;
  *(_WORD *)(v34 + 16) = v33;
  *(unsigned char *)(v34 + 18) = BYTE2(v33);
  return result;
}

uint64_t sub_25C067460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  v21[1] = a2;
  v21[0] = a1;
  v21[3] = a9;
  sub_25C0EA988();
  uint64_t v15 = sub_25C0EA8F8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v21 - v17;
  v21[6] = a5;
  v21[7] = a6;
  v21[8] = a7;
  v21[9] = a8;
  v21[10] = a3;
  v21[11] = a4;
  sub_25C0EB1D8();
  uint64_t WitnessTable = swift_getWitnessTable();
  v21[12] = a7;
  v21[13] = WitnessTable;
  swift_getWitnessTable();
  sub_25C0EB0F8();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void *sub_25C067608(uint64_t a1)
{
  uint64_t v54 = sub_25C0EA538();
  uint64_t v58 = *(void *)(v54 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v54);
  uint64_t v55 = &v52[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v60 = &v52[-v4];
  uint64_t v64 = sub_25C0EA578();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v59 = &v52[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_25C0EA528();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v52[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v61 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v52[-v15];
  uint64_t v17 = sub_25C0EA5E8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = &v52[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = a1;
  sub_25C07031C((uint64_t)v23);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17) == 1)
  {
    sub_25C02FBF0((uint64_t)v23, &qword_26A588E00);
    int v24 = 1;
  }
  else
  {
    sub_25C0EA5A8();
    sub_25C07B838(&qword_26A588F58, MEMORY[0x263F17608]);
    int v25 = sub_25C0EBE98();
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v18 + 8);
    v26(v20, v17);
    v26(v23, v17);
    int v24 = v25 ^ 1;
  }
  uint64_t v27 = type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x26117CDA0]();
  uint64_t v29 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v62 + 48);
  if (v29(v16, 1, v64))
  {
    sub_25C02FBF0((uint64_t)v16, &qword_26A588E30);
    int v30 = 0;
  }
  else
  {
    sub_25C0EA558();
    sub_25C02FBF0((uint64_t)v16, &qword_26A588E30);
    sub_25C0EA518();
    sub_25C07B838(&qword_26A588F70, MEMORY[0x263F175C0]);
    int v53 = v24;
    uint64_t v31 = v57;
    int v32 = sub_25C0EBE98();
    int v33 = *(void (**)(unsigned char *, uint64_t))(v56 + 8);
    uint64_t v34 = v9;
    int v30 = v32;
    v33(v34, v31);
    uint64_t v35 = v31;
    int v24 = v53;
    v33(v11, v35);
  }
  uint64_t v36 = (uint64_t)v61;
  MEMORY[0x26117CDA0](v28);
  uint64_t v37 = v64;
  if (v29((unsigned char *)v36, 1, v64))
  {
    uint64_t result = (void *)sub_25C02FBF0(v36, &qword_26A588E30);
    if ((v24 | v30)) {
      return result;
    }
    char v39 = 1;
  }
  else
  {
    uint64_t v40 = v36;
    uint64_t v41 = v62;
    uint64_t v42 = v59;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v62 + 16))(v59, v40, v37);
    sub_25C02FBF0(v40, &qword_26A588E30);
    uint64_t v43 = v60;
    sub_25C0EA508();
    (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v42, v37);
    uint64_t v44 = (void (*)(uint64_t))MEMORY[0x263F175D8];
    sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
    uint64_t v45 = v54;
    uint64_t v46 = v55;
    sub_25C0EBEF8();
    sub_25C07B838(&qword_26A588F98, v44);
    char v39 = sub_25C0EB7A8();
    uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v58 + 8);
    v47(v46, v45);
    uint64_t result = (void *)((uint64_t (*)(unsigned char *, uint64_t))v47)(v43, v45);
    if ((v24 | v30)) {
      return result;
    }
  }
  uint64_t v48 = *(void *)(v63 + *(int *)(v27 + 32));
  uint64_t result = sub_25C0E6FA0();
  if ((*result & ~v48) != 0 && (v39 & 1) == 0)
  {
    uint64_t v49 = (char *)(v63 + *(int *)(v27 + 36));
    uint64_t v51 = *((void *)v49 + 1);
    char v66 = *v49;
    char v50 = v66;
    uint64_t v67 = v51;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F18);
    sub_25C0EB388();
    char v66 = v50;
    uint64_t v67 = v51;
    BOOL v65 = (v68 & 1) == 0;
    sub_25C0EB398();
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_25C067D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InterventionView();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25C0EA578();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v43 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x26117CDA0](v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v42 = a2;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v13, v14);
    uint64_t v41 = a1;
    sub_25C07031C((uint64_t)v10);
    uint64_t v22 = sub_25C0EA5E8();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22) == 1)
    {
      sub_25C02FBF0((uint64_t)v10, &qword_26A588E00);
    }
    else
    {
      uint64_t v24 = sub_25C068238();
      char v26 = v25;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
      if ((v26 & 1) == 0)
      {
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
        uint64_t v40 = v24;
        uint64_t v28 = (uint64_t)v43;
        v27(v43, v19, v14);
        uint64_t v29 = v41;
        unint64_t v30 = *(void *)(v41 + *(int *)(v4 + 32));
        uint64_t v31 = sub_25C0E7050(v30);
        uint64_t v32 = sub_25C0E703C(v30);
        uint64_t v33 = v45;
        sub_25C0780D4(v29, v45, type metadata accessor for SensitiveContentRedactor);
        unint64_t v34 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
        uint64_t v35 = swift_allocObject();
        sub_25C079354(v33, v35 + v34, type metadata accessor for SensitiveContentRedactor);
        uint64_t v36 = v46;
        sub_25C039718(v28, v40, v31, v32, (uint64_t)sub_25C079414, v35, v46);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
        uint64_t v37 = v36;
        a2 = v42;
        sub_25C079354(v37, v42, (uint64_t (*)(void))type metadata accessor for InterventionView);
        uint64_t v21 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(a2, v21, 1, v48);
      }
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    uint64_t v21 = 1;
    a2 = v42;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(a2, v21, 1, v48);
  }
  sub_25C02FBF0((uint64_t)v13, &qword_26A588E30);
  uint64_t v21 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(a2, v21, 1, v48);
}

uint64_t sub_25C068238()
{
  uint64_t v0 = sub_25C0EA5E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA5B8();
  sub_25C07B838(&qword_26A588F58, MEMORY[0x263F17608]);
  char v4 = sub_25C0EBE98();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4) {
    return 0;
  }
  sub_25C0EA5A8();
  char v7 = sub_25C0EBE98();
  v5(v3, v0);
  if (v7) {
    return 1;
  }
  sub_25C0EA588();
  char v8 = sub_25C0EBE98();
  v5(v3, v0);
  if (v8) {
    return 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_25C0683E8(char a1)
{
  uint64_t v2 = sub_25C0EA528();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F68);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0)
  {
    uint64_t v10 = sub_25C063F3C(v20);
    uint64_t v12 = v11;
    uint64_t v13 = sub_25C0EA578();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      v10((uint64_t)v20, 0);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F78);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
    }
    else
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F78);
      uint64_t v16 = &v9[*(int *)(v15 + 48)];
      sub_25C0EA518();
      uint64_t v17 = (void (*)(unsigned char *, void))sub_25C0EA548();
      char v18 = sub_25C068670(v16, (uint64_t)v5);
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      v17(v19, 0);
      v10((uint64_t)v20, 0);
      *uint64_t v9 = v18 & 1;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
    }
    return sub_25C02FBF0((uint64_t)v9, &qword_26A588F68);
  }
  return result;
}

uint64_t sub_25C068670(char *a1, uint64_t a2)
{
  uint64_t v31 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F78);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = sub_25C0EA528();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v25 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v28 = v2;
  char v26 = v16;
  v16(v13, v2, v9);
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F175C0];
  v25[1] = sub_25C07B838(&qword_26A588F70, MEMORY[0x263F175C0]);
  sub_25C0EBEA8();
  sub_25C07B838(&qword_26A588F80, v17);
  uint64_t v27 = a2;
  char v18 = sub_25C0EB7A8() ^ 1;
  uint64_t v30 = v4;
  uint64_t v19 = &v8[*(int *)(v4 + 48)];
  unsigned char *v8 = v18 & 1;
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v22 = v26;
    uint64_t v21 = v27;
    v26(v19, v27, v9);
    v22(v13, v21, v9);
    sub_25C0EBED8();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v20(v19, v15, v9);
  }
  uint64_t v23 = &v29[*(int *)(v30 + 48)];
  v20(v23, v19, v9);
  v20(v31, v23, v9);
  return v18 & 1;
}

void *sub_25C068968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v61 = type metadata accessor for ScannableContent();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F38);
  MEMORY[0x270FA5388](v60);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v53 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C07031C((uint64_t)v20);
  uint64_t v21 = sub_25C0EA5E8();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    uint64_t result = (void *)sub_25C02FBF0((uint64_t)v20, &qword_26A588E00);
    goto LABEL_5;
  }
  uint64_t v56 = v14;
  uint64_t v57 = v15;
  uint64_t v54 = v9;
  uint64_t v55 = v12;
  uint64_t v25 = v60;
  uint64_t v24 = v61;
  uint64_t v26 = a1;
  uint64_t v27 = sub_25C068238();
  char v29 = v28;
  uint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  if ((v29 & 1) == 0)
  {
    uint64_t v30 = type metadata accessor for SensitiveContentRedactor(0);
    uint64_t v31 = *(int *)(v30 + 32);
    uint64_t v32 = v26;
    uint64_t v33 = *(void *)(v26 + v31);
    uint64_t result = sub_25C0E6FA0();
    if ((*result & ~v33) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
      uint64_t v40 = (uint64_t)v17;
      sub_25C0EB388();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_25C070810((uint64_t)v17, type metadata accessor for SensitiveContentRedactor.Mode);
          uint64_t v39 = v62;
          goto LABEL_21;
        case 2u:
          uint64_t v57 = v27;
          uint64_t v41 = (uint64_t)v17;
          uint64_t v42 = (uint64_t)v56;
          sub_25C02FB8C(v41, (uint64_t)v56, &qword_26A588E10);
          uint64_t v43 = (uint64_t)v55;
          sub_25C02FB8C(v32 + *(int *)(v30 + 24), (uint64_t)v55, &qword_26A588E10);
          uint64_t v44 = *(int *)(v25 + 48);
          uint64_t v45 = (uint64_t)v5;
          uint64_t v46 = v43;
          uint64_t v47 = v45 + v44;
          sub_25C02FB8C(v42, v45, &qword_26A588E10);
          sub_25C02FB8C(v46, v47, &qword_26A588E10);
          uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
          if (v48(v45, 1, v24) == 1)
          {
            sub_25C02FBF0(v46, &qword_26A588E10);
            if (v48(v47, 1, v24) == 1)
            {
              sub_25C02FBF0(v45, &qword_26A588E10);
LABEL_19:
              LOBYTE(v63) = 0;
              sub_25C0EAD28();
              long long v63 = v66;
              long long v64 = 0uLL;
              char v65 = 0;
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F40);
              sub_25C079294();
              sub_25C0793BC();
              sub_25C0EAD28();
              sub_25C02FBF0((uint64_t)v56, &qword_26A588E10);
              uint64_t v35 = *((void *)&v66 + 1);
              uint64_t v34 = v66;
              uint64_t v37 = *((void *)&v67 + 1);
              uint64_t v36 = v67;
              char v38 = v68;
              uint64_t result = (void *)sub_25C02FBF0(v40, &qword_26A588E10);
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v49 = (uint64_t)v54;
            sub_25C02FB8C(v45, (uint64_t)v54, &qword_26A588E10);
            if (v48(v47, 1, v24) != 1)
            {
              uint64_t v50 = v58;
              sub_25C079354(v47, v58, (uint64_t (*)(void))type metadata accessor for ScannableContent);
              sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
              char v51 = sub_25C0EB7A8();
              sub_25C070810(v50, (uint64_t (*)(void))type metadata accessor for ScannableContent);
              sub_25C02FBF0(v46, &qword_26A588E10);
              sub_25C070810(v49, (uint64_t (*)(void))type metadata accessor for ScannableContent);
              sub_25C02FBF0(v45, &qword_26A588E10);
              if (v51) {
                goto LABEL_19;
              }
LABEL_20:
              sub_25C02FBF0((uint64_t)v56, &qword_26A588E10);
              sub_25C02FBF0(v40, &qword_26A588E10);
              uint64_t v39 = v62;
              uint64_t v27 = v57;
LABEL_21:
              uint64_t v52 = sub_25C0E6FB8(*(void *)(v32 + v31));
              sub_25C058908(v27, v52, (uint64_t)sub_25C069130, 0, &v66);
              long long v63 = v66;
              long long v64 = v67;
              char v65 = 1;
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F40);
              sub_25C079294();
              sub_25C0793BC();
              uint64_t result = (void *)sub_25C0EAD28();
              uint64_t v35 = *((void *)&v66 + 1);
              uint64_t v34 = v66;
              uint64_t v37 = *((void *)&v67 + 1);
              uint64_t v36 = v67;
              char v38 = v68;
              goto LABEL_7;
            }
            sub_25C02FBF0(v46, &qword_26A588E10);
            sub_25C070810(v49, (uint64_t (*)(void))type metadata accessor for ScannableContent);
          }
          sub_25C02FBF0(v45, &qword_26A588F38);
          goto LABEL_20;
        case 3u:
          goto LABEL_10;
        default:
          sub_25C070810((uint64_t)v17, type metadata accessor for SensitiveContentRedactor.Mode);
LABEL_10:
          LOBYTE(v63) = 1;
          sub_25C0EAD28();
          long long v63 = v66;
          long long v64 = 0uLL;
          char v65 = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F40);
          sub_25C079294();
          sub_25C0793BC();
          uint64_t result = (void *)sub_25C0EAD28();
          uint64_t v35 = *((void *)&v66 + 1);
          uint64_t v34 = v66;
          uint64_t v37 = *((void *)&v67 + 1);
          uint64_t v36 = v67;
          char v38 = v68;
          goto LABEL_6;
      }
    }
  }
LABEL_5:
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  char v38 = -1;
LABEL_6:
  uint64_t v39 = v62;
LABEL_7:
  *(void *)uint64_t v39 = v34;
  *(void *)(v39 + 8) = v35;
  *(void *)(v39 + 16) = v36;
  *(void *)(v39 + 24) = v37;
  *(unsigned char *)(v39 + 32) = v38;
  return result;
}

uint64_t sub_25C069130(char *a1)
{
  char v1 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D78);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_25C0EED70;
  *(void *)(v2 + 56) = &type metadata for WarningMenuButton.Action;
  *(unsigned char *)(v2 + 32) = v1;
  sub_25C0EC338();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C0691B0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v61 = type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v58 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v57 = v4;
  uint64_t v59 = &v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = type metadata accessor for ScannableContent();
  uint64_t v56 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v54 = &v52[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F38);
  MEMORY[0x270FA5388](v55);
  long long v64 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v62 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v52[-v11];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v52[-v13];
  uint64_t v60 = (unsigned char *)type metadata accessor for SensitiveContentRedactor.Mode(0);
  MEMORY[0x270FA5388](v60);
  uint64_t v16 = &v52[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_25C0EA5E8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = &v52[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25C07031C((uint64_t)v23);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17) == 1)
  {
    sub_25C02FBF0((uint64_t)v23, &qword_26A588E00);
  }
  else
  {
    sub_25C0EA5A8();
    sub_25C07B838(&qword_26A588F58, MEMORY[0x263F17608]);
    int v53 = sub_25C0EBE98();
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v18 + 8);
    v24(v20, v17);
    uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v24)(v23, v17);
    if (v53)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      __int16 v28 = -256;
      goto LABEL_21;
    }
  }
  uint64_t v29 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB388();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v31 = v63;
  uint64_t v32 = (uint64_t)v64;
  uint64_t v33 = (uint64_t)v62;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      long long v64 = a2;
      sub_25C070810((uint64_t)v16, type metadata accessor for SensitiveContentRedactor.Mode);
      goto LABEL_16;
    case 2:
      sub_25C02FB8C((uint64_t)v16, (uint64_t)v14, &qword_26A588E10);
      sub_25C02FB8C(a1 + *(int *)(v29 + 24), (uint64_t)v12, &qword_26A588E10);
      uint64_t v36 = v32 + *(int *)(v55 + 48);
      sub_25C02FB8C((uint64_t)v14, v32, &qword_26A588E10);
      uint64_t v61 = v36;
      sub_25C02FB8C((uint64_t)v12, v36, &qword_26A588E10);
      uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
      if (v37(v32, 1, v31) == 1)
      {
        sub_25C02FBF0((uint64_t)v12, &qword_26A588E10);
        if (v37(v61, 1, v31) == 1)
        {
          sub_25C02FBF0(v32, &qword_26A588E10);
LABEL_23:
          LOBYTE(v65) = 0;
          sub_25C0EAD28();
          uint64_t v65 = v68;
          uint64_t v66 = 0;
          __int16 v67 = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F40);
          sub_25C079294();
          sub_25C079300();
          sub_25C0EAD28();
          sub_25C02FBF0((uint64_t)v14, &qword_26A588E10);
          uint64_t v26 = v68;
          uint64_t v27 = v69;
          __int16 v34 = v70;
          int v35 = v71;
          uint64_t result = sub_25C02FBF0((uint64_t)v16, &qword_26A588E10);
          goto LABEL_17;
        }
        goto LABEL_14;
      }
      uint64_t v60 = v12;
      sub_25C02FB8C(v32, v33, &qword_26A588E10);
      uint64_t v38 = v61;
      if (v37(v61, 1, v31) == 1)
      {
        sub_25C02FBF0((uint64_t)v60, &qword_26A588E10);
        sub_25C070810(v33, (uint64_t (*)(void))type metadata accessor for ScannableContent);
LABEL_14:
        sub_25C02FBF0(v32, &qword_26A588F38);
        goto LABEL_15;
      }
      uint64_t v48 = v38;
      uint64_t v49 = v33;
      uint64_t v50 = v54;
      sub_25C079354(v48, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
      char v51 = sub_25C0EB7A8();
      sub_25C070810((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0((uint64_t)v60, &qword_26A588E10);
      sub_25C070810(v49, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v32, &qword_26A588E10);
      if (v51) {
        goto LABEL_23;
      }
LABEL_15:
      long long v64 = a2;
      sub_25C02FBF0((uint64_t)v14, &qword_26A588E10);
      sub_25C02FBF0((uint64_t)v16, &qword_26A588E10);
LABEL_16:
      uint64_t v39 = v59;
      sub_25C0780D4(a1, (uint64_t)v59, type metadata accessor for SensitiveContentRedactor);
      sub_25C0EBAD8();
      uint64_t v40 = a1;
      uint64_t v41 = sub_25C0EBAC8();
      unint64_t v42 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      uint64_t v43 = swift_allocObject();
      uint64_t v44 = MEMORY[0x263F8F500];
      *(void *)(v43 + 16) = v41;
      *(void *)(v43 + 24) = v44;
      sub_25C079354((uint64_t)v39, v43 + v42, type metadata accessor for SensitiveContentRedactor);
      sub_25C0780D4(v40, (uint64_t)v39, type metadata accessor for SensitiveContentRedactor);
      uint64_t v45 = sub_25C0EBAC8();
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v45;
      *(void *)(v46 + 24) = v44;
      sub_25C079354((uint64_t)v39, v46 + v42, type metadata accessor for SensitiveContentRedactor);
      sub_25C0EB478();
      sub_25C030024(v65, v66, v67, (uint64_t)&v68);
      uint64_t v65 = v68;
      uint64_t v66 = v69;
      LOBYTE(v67) = v70;
      HIBYTE(v67) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F40);
      sub_25C079294();
      sub_25C079300();
      uint64_t result = sub_25C0EAD28();
      uint64_t v26 = v68;
      uint64_t v27 = v69;
      __int16 v34 = v70;
      int v35 = v71;
      a2 = v64;
LABEL_17:
      if (v35) {
        __int16 v47 = 256;
      }
      else {
        __int16 v47 = 0;
      }
      __int16 v28 = v47 | v34;
      break;
    case 3:
      goto LABEL_7;
    default:
      sub_25C070810((uint64_t)v16, type metadata accessor for SensitiveContentRedactor.Mode);
LABEL_7:
      LOBYTE(v65) = 1;
      sub_25C0EAD28();
      uint64_t v65 = v68;
      uint64_t v66 = 0;
      __int16 v67 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F40);
      sub_25C079294();
      sub_25C079300();
      uint64_t result = sub_25C0EAD28();
      uint64_t v26 = v68;
      uint64_t v27 = v69;
      __int16 v34 = v70;
      int v35 = v71;
      goto LABEL_17;
  }
LABEL_21:
  *(void *)a2 = v26;
  *((void *)a2 + 1) = v27;
  *((_WORD *)a2 + 8) = v28;
  return result;
}

uint64_t sub_25C069BA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_25C0EA528();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x26117CDA0](v12);
  uint64_t v13 = sub_25C0EA578();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13))
  {
    uint64_t result = sub_25C02FBF0((uint64_t)v11, &qword_26A588E30);
    char v15 = 0;
  }
  else
  {
    sub_25C0EA558();
    sub_25C02FBF0((uint64_t)v11, &qword_26A588E30);
    sub_25C0EA518();
    sub_25C07B838(&qword_26A588F70, MEMORY[0x263F175C0]);
    char v16 = sub_25C0EBE98();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v6, v2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v8, v2);
    char v15 = v16 & 1;
  }
  *a1 = v15;
  return result;
}

uint64_t sub_25C069DE4(unsigned char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F60);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25C0EA528();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v33 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F68);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    uint64_t v18 = sub_25C063F3C(v36);
    uint64_t v20 = v19;
    uint64_t v21 = sub_25C0EA578();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21))
    {
      v18((uint64_t)v36, 0);
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F78);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 1, 1, v22);
    }
    else
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F78);
      uint64_t v29 = &v17[*(int *)(v28 + 48)];
      sub_25C0EA518();
      uint64_t v30 = (void (*)(unsigned char *, void))sub_25C0EA548();
      char v31 = sub_25C068670(v29, (uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      v30(v35, 0);
      v18((uint64_t)v36, 0);
      *uint64_t v17 = v31 & 1;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 0, 1, v28);
    }
    return sub_25C02FBF0((uint64_t)v17, &qword_26A588F68);
  }
  else
  {
    uint64_t v23 = sub_25C063F3C(v36);
    uint64_t v25 = v24;
    uint64_t v26 = sub_25C0EA578();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
    {
      v23((uint64_t)v36, 0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      return sub_25C02FBF0((uint64_t)v4, &qword_26A588F60);
    }
    else
    {
      sub_25C0EA518();
      __int16 v34 = (void (*)(unsigned char *, void))sub_25C0EA548();
      (*(void (**)(char *))(v6 + 16))(v14);
      sub_25C07B838(&qword_26A588F70, MEMORY[0x263F175C0]);
      sub_25C0EBEA8();
      if (sub_25C0EBEB8())
      {
        uint64_t v32 = *(void (**)(char *, uint64_t))(v6 + 8);
        v32(v9, v5);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      else
      {
        sub_25C0EBEC8();
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v9, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        uint64_t v32 = *(void (**)(char *, uint64_t))(v6 + 8);
      }
      v32(v12, v5);
      sub_25C02FBF0((uint64_t)v4, &qword_26A588F60);
      v34(v35, 0);
      return ((uint64_t (*)(void **, void))v23)(v36, 0);
    }
  }
}

uint64_t sub_25C06A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[47] = a4;
  v5[48] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v5[51] = type metadata accessor for SensitiveContentRedactor.Mode(0);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  uint64_t v6 = sub_25C0EA238();
  v5[55] = v6;
  v5[56] = *(void *)(v6 - 8);
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  uint64_t v7 = sub_25C0EA538();
  v5[59] = v7;
  v5[60] = *(void *)(v7 - 8);
  v5[61] = swift_task_alloc();
  v5[62] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ScannableContent();
  v5[63] = v8;
  v5[64] = *(void *)(v8 - 8);
  v5[65] = swift_task_alloc();
  uint64_t v9 = sub_25C0EA578();
  v5[66] = v9;
  v5[67] = *(void *)(v9 - 8);
  v5[68] = swift_task_alloc();
  v5[69] = swift_task_alloc();
  sub_25C0EBAD8();
  v5[70] = sub_25C0EBAC8();
  uint64_t v11 = sub_25C0EBA78();
  v5[71] = v11;
  v5[72] = v10;
  return MEMORY[0x270FA2498](sub_25C06A5F8, v11, v10);
}

uint64_t sub_25C06A5F8()
{
  sub_25C0780D4(*(void *)(v0 + 376), *(void *)(v0 + 520), (uint64_t (*)(void))type metadata accessor for ScannableContent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(void, void, void))(*(void *)(v0 + 448) + 32))(*(void *)(v0 + 456), *(void *)(v0 + 520), *(void *)(v0 + 440));
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17680]), sel_init);
      *(void *)(v0 + 664) = sub_25C0EBCB8();

      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 672) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_25C06C670;
      return MEMORY[0x270EFE078]();
    case 2u:
      uint64_t v7 = *(uint64_t **)(v0 + 520);
      uint64_t v8 = *v7;
      *(void *)(v0 + 584) = *v7;
      if (v8)
      {
        uint64_t v1 = v0 + 16;
        id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17680]), sel_init);
        *(void *)(v0 + 592) = v9;
        *(void *)(v0 + 16) = v0;
        *(void *)(v0 + 56) = v0 + 352;
        *(void *)(v0 + 24) = sub_25C06B154;
        uint64_t v10 = swift_continuation_init();
        *(void *)(v0 + 208) = MEMORY[0x263EF8330];
        *(void *)(v0 + 216) = 0x40000000;
        *(void *)(v0 + 224) = sub_25C06DD68;
        *(void *)(v0 + 232) = &block_descriptor_46;
        *(void *)(v0 + 240) = v10;
        objc_msgSend(v9, sel_analyzeCGImage_completionHandler_, v8, v0 + 208);
        goto LABEL_8;
      }
      swift_release();
      *(void *)(v0 + 368) = MEMORY[0x263F8EE78];
      sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FF0);
      sub_25C0583D0(&qword_26A588FF8, &qword_26A588FF0);
      sub_25C0EBF08();
      sub_25C0EA568();
      goto LABEL_17;
    case 3u:
      uint64_t v12 = *(void ***)(v0 + 520);
      uint64_t v13 = *v12;
      *(void *)(v0 + 608) = *v12;
      if (v13
        && (id v14 = objc_msgSend(v13, sel_CGImage),
            (*(void *)(v0 + 616) = v14) != 0))
      {
        id v15 = v14;
        id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17680]), sel_init);
        *(void *)(v0 + 624) = v16;
        *(void *)(v0 + 144) = v0;
        *(void *)(v0 + 184) = v0 + 328;
        *(void *)(v0 + 152) = sub_25C06B850;
        uint64_t v17 = swift_continuation_init();
        *(void *)(v0 + 248) = MEMORY[0x263EF8330];
        *(void *)(v0 + 256) = 0x40000000;
        *(void *)(v0 + 264) = sub_25C06DD68;
        *(void *)(v0 + 272) = &block_descriptor_45;
        *(void *)(v0 + 280) = v17;
        objc_msgSend(v16, sel_analyzeCGImage_completionHandler_, v15, v0 + 248);
        uint64_t v11 = v0 + 144;
LABEL_9:
        return MEMORY[0x270FA23F0](v11);
      }
      else
      {
        swift_release();
        *(void *)(v0 + 336) = MEMORY[0x263F8EE78];
        sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A588FF0);
        sub_25C0583D0(&qword_26A588FF8, &qword_26A588FF0);
        sub_25C0EBF08();
        sub_25C0EA568();

LABEL_17:
        uint64_t v19 = *(void *)(v0 + 488);
        uint64_t v18 = *(void *)(v0 + 496);
        uint64_t v21 = *(void *)(v0 + 472);
        uint64_t v20 = *(void *)(v0 + 480);
        sub_25C0EA508();
        uint64_t v22 = (void (*)(uint64_t))MEMORY[0x263F175D8];
        sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
        sub_25C0EBEF8();
        sub_25C07B838(&qword_26A588F98, v22);
        char v23 = sub_25C0EB7A8();
        uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v24(v19, v21);
        uint64_t v55 = v24;
        v24(v18, v21);
        uint64_t v26 = *(void *)(v0 + 504);
        uint64_t v25 = *(void *)(v0 + 512);
        uint64_t v27 = *(void *)(v0 + 432);
        uint64_t v28 = *(void *)(v0 + 376);
        if (v23)
        {
          uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
          sub_25C0780D4(v28, v27, (uint64_t (*)(void))type metadata accessor for ScannableContent);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
          *(unsigned char *)(v27 + v29) = 1;
        }
        else
        {
          sub_25C0780D4(*(void *)(v0 + 376), *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for ScannableContent);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
        }
        uint64_t v30 = *(void *)(v0 + 536);
        uint64_t v31 = *(void *)(v0 + 528);
        uint64_t v32 = *(void *)(v0 + 424);
        uint64_t v33 = *(void *)(v0 + 432);
        uint64_t v34 = *(void *)(v0 + 400);
        uint64_t v56 = *(void *)(v0 + 392);
        *(void *)typea = *(void *)(v0 + 552);
        swift_storeEnumTagMultiPayload();
        type metadata accessor for SensitiveContentRedactor(0);
        sub_25C0780D4(v33, v32, type metadata accessor for SensitiveContentRedactor.Mode);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
        sub_25C0EB398();
        sub_25C070810(v33, type metadata accessor for SensitiveContentRedactor.Mode);
        uint64_t v35 = *(void *)typea;
        type = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
        type(v34, v35, v31);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v31);
        sub_25C02FB8C(v34, v56, &qword_26A588E30);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
        sub_25C0EB448();
        sub_25C02FBF0(v34, &qword_26A588E30);
        if (qword_26A591230 != -1) {
          swift_once();
        }
        uint64_t v36 = *(void *)(v0 + 552);
        uint64_t v37 = *(void *)(v0 + 544);
        uint64_t v38 = *(void *)(v0 + 528);
        uint64_t v39 = sub_25C0EA638();
        __swift_project_value_buffer(v39, (uint64_t)qword_26A595640);
        type(v37, v36, v38);
        uint64_t v40 = sub_25C0EA618();
        os_log_type_t v41 = sub_25C0EBC18();
        BOOL v42 = os_log_type_enabled(v40, v41);
        uint64_t v43 = *(void *)(v0 + 544);
        uint64_t v44 = *(void *)(v0 + 536);
        if (v42)
        {
          uint64_t v46 = *(void *)(v0 + 488);
          uint64_t v45 = *(void *)(v0 + 496);
          uint64_t v47 = *(void *)(v0 + 472);
          os_log_type_t typeb = v41;
          uint64_t v57 = *(void *)(v0 + 528);
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 67109120;
          sub_25C0EA508();
          sub_25C0EBEF8();
          char v49 = sub_25C0EB7A8();
          v55(v46, v47);
          v55(v45, v47);
          uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
          v50(v43, v57);
          *(_DWORD *)(v0 + 696) = (v49 & 1) == 0;
          sub_25C0EBE58();
          _os_log_impl(&dword_25C01A000, v40, typeb, "Scanned content for sensitivity: %{BOOL}d", v48, 8u);
          MEMORY[0x26117E790](v48, -1, -1);
        }
        else
        {
          uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
          v50(*(void *)(v0 + 544), *(void *)(v0 + 528));
        }
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 528);

        v50(v51, v52);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        int v53 = *(uint64_t (**)(void))(v0 + 8);
        return v53();
      }
    default:
      uint64_t v1 = v0 + 80;
      (*(void (**)(void, void, void))(*(void *)(v0 + 448) + 32))(*(void *)(v0 + 464), *(void *)(v0 + 520), *(void *)(v0 + 440));
      id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17680]), sel_init);
      *(void *)(v0 + 640) = v2;
      uint64_t v3 = sub_25C0EA1A8();
      *(void *)(v0 + 648) = v3;
      *(void *)(v0 + 80) = v0;
      *(void *)(v0 + 120) = v0 + 344;
      *(void *)(v0 + 88) = sub_25C06BF54;
      uint64_t v4 = swift_continuation_init();
      *(void *)(v0 + 288) = MEMORY[0x263EF8330];
      *(void *)(v0 + 296) = 0x40000000;
      *(void *)(v0 + 304) = sub_25C06DD68;
      *(void *)(v0 + 312) = &block_descriptor_0;
      *(void *)(v0 + 320) = v4;
      objc_msgSend(v2, sel_analyzeImageFile_completionHandler_, v3, v0 + 288);
LABEL_8:
      uint64_t v11 = v1;
      goto LABEL_9;
  }
}

uint64_t sub_25C06B154()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 600) = v2;
  uint64_t v3 = *(void *)(v1 + 576);
  uint64_t v4 = *(void *)(v1 + 568);
  if (v2) {
    id v5 = sub_25C06CD98;
  }
  else {
    id v5 = sub_25C06B284;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25C06B284()
{
  uint64_t v1 = *(void **)(v0 + 592);
  uint64_t v2 = *(void **)(v0 + 584);
  swift_release();
  uint64_t v3 = *(void **)(v0 + 352);
  sub_25C0EBC88();

  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 496);
  uint64_t v7 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 480);
  sub_25C0EA508();
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x263F175D8];
  sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
  sub_25C0EBEF8();
  sub_25C07B838(&qword_26A588F98, v8);
  char v9 = sub_25C0EB7A8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v5, v7);
  BOOL v42 = v10;
  v10(v4, v7);
  uint64_t v12 = *(void *)(v0 + 504);
  uint64_t v11 = *(void *)(v0 + 512);
  uint64_t v13 = *(void *)(v0 + 432);
  uint64_t v14 = *(void *)(v0 + 376);
  if (v9)
  {
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
    sub_25C0780D4(v14, v13, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
    *(unsigned char *)(v13 + v15) = 1;
  }
  else
  {
    sub_25C0780D4(*(void *)(v0 + 376), *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
  }
  uint64_t v16 = *(void *)(v0 + 536);
  uint64_t v17 = *(void *)(v0 + 528);
  uint64_t v18 = *(void *)(v0 + 424);
  uint64_t v19 = *(void *)(v0 + 432);
  uint64_t v20 = *(void *)(v0 + 400);
  uint64_t v43 = *(void *)(v0 + 552);
  uint64_t type = *(void *)(v0 + 392);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v19, v18, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v19, type metadata accessor for SensitiveContentRedactor.Mode);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v21(v20, v43, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v17);
  sub_25C02FB8C(v20, type, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v20, &qword_26A588E30);
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 552);
  uint64_t v23 = *(void *)(v0 + 544);
  uint64_t v24 = *(void *)(v0 + 528);
  uint64_t v25 = sub_25C0EA638();
  __swift_project_value_buffer(v25, (uint64_t)qword_26A595640);
  v21(v23, v22, v24);
  uint64_t v26 = sub_25C0EA618();
  os_log_type_t v27 = sub_25C0EBC18();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v29 = *(void *)(v0 + 544);
  uint64_t v30 = *(void *)(v0 + 536);
  if (v28)
  {
    uint64_t v32 = *(void *)(v0 + 488);
    uint64_t v31 = *(void *)(v0 + 496);
    uint64_t v33 = *(void *)(v0 + 472);
    os_log_type_t typea = v27;
    uint64_t v41 = *(void *)(v0 + 528);
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 67109120;
    sub_25C0EA508();
    sub_25C0EBEF8();
    char v35 = sub_25C0EB7A8();
    v42(v32, v33);
    v42(v31, v33);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v36(v29, v41);
    *(_DWORD *)(v0 + 696) = (v35 & 1) == 0;
    sub_25C0EBE58();
    _os_log_impl(&dword_25C01A000, v26, typea, "Scanned content for sensitivity: %{BOOL}d", v34, 8u);
    MEMORY[0x26117E790](v34, -1, -1);
  }
  else
  {
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v36(*(void *)(v0 + 544), *(void *)(v0 + 528));
  }
  uint64_t v37 = *(void *)(v0 + 552);
  uint64_t v38 = *(void *)(v0 + 528);

  v36(v37, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_25C06B850()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  *(void *)(*v0 + 632) = v2;
  uint64_t v3 = *(void *)(v1 + 576);
  uint64_t v4 = *(void *)(v1 + 568);
  if (v2) {
    uint64_t v5 = sub_25C06D180;
  }
  else {
    uint64_t v5 = sub_25C06B980;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25C06B980()
{
  uint64_t v1 = *(void **)(v0 + 624);
  uint64_t v2 = *(void **)(v0 + 616);
  uint64_t v3 = *(void **)(v0 + 608);
  swift_release();
  uint64_t v4 = *(void **)(v0 + 328);
  sub_25C0EBC88();

  uint64_t v6 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 480);
  sub_25C0EA508();
  char v9 = (void (*)(uint64_t))MEMORY[0x263F175D8];
  sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
  sub_25C0EBEF8();
  sub_25C07B838(&qword_26A588F98, v9);
  char v10 = sub_25C0EB7A8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v6, v8);
  uint64_t v43 = v11;
  v11(v5, v8);
  uint64_t v13 = *(void *)(v0 + 504);
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v14 = *(void *)(v0 + 432);
  uint64_t v15 = *(void *)(v0 + 376);
  if (v10)
  {
    uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
    sub_25C0780D4(v15, v14, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
    *(unsigned char *)(v14 + v16) = 1;
  }
  else
  {
    sub_25C0780D4(*(void *)(v0 + 376), *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
  }
  uint64_t v17 = *(void *)(v0 + 536);
  uint64_t v18 = *(void *)(v0 + 528);
  uint64_t v19 = *(void *)(v0 + 424);
  uint64_t v20 = *(void *)(v0 + 432);
  uint64_t v21 = *(void *)(v0 + 400);
  uint64_t v44 = *(void *)(v0 + 552);
  uint64_t type = *(void *)(v0 + 392);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v20, v19, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v20, type metadata accessor for SensitiveContentRedactor.Mode);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v22(v21, v44, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v18);
  sub_25C02FB8C(v21, type, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v21, &qword_26A588E30);
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)(v0 + 552);
  uint64_t v24 = *(void *)(v0 + 544);
  uint64_t v25 = *(void *)(v0 + 528);
  uint64_t v26 = sub_25C0EA638();
  __swift_project_value_buffer(v26, (uint64_t)qword_26A595640);
  v22(v24, v23, v25);
  os_log_type_t v27 = sub_25C0EA618();
  os_log_type_t v28 = sub_25C0EBC18();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 544);
  uint64_t v31 = *(void *)(v0 + 536);
  if (v29)
  {
    uint64_t v33 = *(void *)(v0 + 488);
    uint64_t v32 = *(void *)(v0 + 496);
    uint64_t v34 = *(void *)(v0 + 472);
    os_log_type_t typea = v28;
    uint64_t v42 = *(void *)(v0 + 528);
    char v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v35 = 67109120;
    sub_25C0EA508();
    sub_25C0EBEF8();
    char v36 = sub_25C0EB7A8();
    v43(v33, v34);
    v43(v32, v34);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v37(v30, v42);
    *(_DWORD *)(v0 + 696) = (v36 & 1) == 0;
    sub_25C0EBE58();
    _os_log_impl(&dword_25C01A000, v27, typea, "Scanned content for sensitivity: %{BOOL}d", v35, 8u);
    MEMORY[0x26117E790](v35, -1, -1);
  }
  else
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v37(*(void *)(v0 + 544), *(void *)(v0 + 528));
  }
  uint64_t v38 = *(void *)(v0 + 552);
  uint64_t v39 = *(void *)(v0 + 528);

  v37(v38, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_25C06BF54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 656) = v2;
  uint64_t v3 = *(void *)(v1 + 576);
  uint64_t v4 = *(void *)(v1 + 568);
  if (v2) {
    uint64_t v5 = sub_25C06D570;
  }
  else {
    uint64_t v5 = sub_25C06C084;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25C06C084()
{
  uint64_t v1 = *(void **)(v0 + 648);
  uint64_t v2 = *(void **)(v0 + 640);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 448);
  swift_release();
  uint64_t v6 = *(void **)(v0 + 344);
  sub_25C0EBC88();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  uint64_t v8 = *(void *)(v0 + 488);
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v10 = *(void *)(v0 + 472);
  uint64_t v9 = *(void *)(v0 + 480);
  sub_25C0EA508();
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x263F175D8];
  sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
  sub_25C0EBEF8();
  sub_25C07B838(&qword_26A588F98, v11);
  LOBYTE(v5) = sub_25C0EB7A8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v8, v10);
  uint64_t v44 = v12;
  v12(v7, v10);
  uint64_t v14 = *(void *)(v0 + 504);
  uint64_t v13 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 432);
  uint64_t v16 = *(void *)(v0 + 376);
  if (v5)
  {
    uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
    sub_25C0780D4(v16, v15, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
    *(unsigned char *)(v15 + v17) = 1;
  }
  else
  {
    sub_25C0780D4(*(void *)(v0 + 376), *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
  }
  uint64_t v18 = *(void *)(v0 + 536);
  uint64_t v19 = *(void *)(v0 + 528);
  uint64_t v20 = *(void *)(v0 + 424);
  uint64_t v21 = *(void *)(v0 + 432);
  uint64_t v22 = *(void *)(v0 + 400);
  uint64_t v45 = *(void *)(v0 + 552);
  uint64_t type = *(void *)(v0 + 392);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v21, v20, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v21, type metadata accessor for SensitiveContentRedactor.Mode);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v23(v22, v45, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v19);
  sub_25C02FB8C(v22, type, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v22, &qword_26A588E30);
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 552);
  uint64_t v25 = *(void *)(v0 + 544);
  uint64_t v26 = *(void *)(v0 + 528);
  uint64_t v27 = sub_25C0EA638();
  __swift_project_value_buffer(v27, (uint64_t)qword_26A595640);
  v23(v25, v24, v26);
  os_log_type_t v28 = sub_25C0EA618();
  os_log_type_t v29 = sub_25C0EBC18();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void *)(v0 + 544);
  uint64_t v32 = *(void *)(v0 + 536);
  if (v30)
  {
    uint64_t v34 = *(void *)(v0 + 488);
    uint64_t v33 = *(void *)(v0 + 496);
    uint64_t v35 = *(void *)(v0 + 472);
    os_log_type_t typea = v29;
    uint64_t v43 = *(void *)(v0 + 528);
    char v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v36 = 67109120;
    sub_25C0EA508();
    sub_25C0EBEF8();
    char v37 = sub_25C0EB7A8();
    v44(v34, v35);
    v44(v33, v35);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v38(v31, v43);
    *(_DWORD *)(v0 + 696) = (v37 & 1) == 0;
    sub_25C0EBE58();
    _os_log_impl(&dword_25C01A000, v28, typea, "Scanned content for sensitivity: %{BOOL}d", v36, 8u);
    MEMORY[0x26117E790](v36, -1, -1);
  }
  else
  {
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v38(*(void *)(v0 + 544), *(void *)(v0 + 528));
  }
  uint64_t v39 = *(void *)(v0 + 552);
  uint64_t v40 = *(void *)(v0 + 528);

  v38(v39, v40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_25C06C670(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 680) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = v4[72];
    uint64_t v6 = v4[71];
    uint64_t v7 = sub_25C06D978;
  }
  else
  {
    v4[86] = a1;
    uint64_t v5 = v4[72];
    uint64_t v6 = v4[71];
    uint64_t v7 = sub_25C06C7BC;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_25C06C7BC()
{
  uint64_t v1 = *(void **)(v0 + 688);
  uint64_t v3 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v4 = *(void *)(v0 + 440);
  swift_release();
  sub_25C0EBC88();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 480);
  sub_25C0EA508();
  uint64_t v9 = (void (*)(uint64_t))MEMORY[0x263F175D8];
  sub_25C07B838(&qword_26A588F90, MEMORY[0x263F175D8]);
  sub_25C0EBEF8();
  sub_25C07B838(&qword_26A588F98, v9);
  char v10 = sub_25C0EB7A8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v6, v8);
  uint64_t v43 = v11;
  v11(v5, v8);
  uint64_t v13 = *(void *)(v0 + 504);
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v14 = *(void *)(v0 + 432);
  uint64_t v15 = *(void *)(v0 + 376);
  if (v10)
  {
    uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
    sub_25C0780D4(v15, v14, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
    *(unsigned char *)(v14 + v16) = 1;
  }
  else
  {
    sub_25C0780D4(*(void *)(v0 + 376), *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for ScannableContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
  }
  uint64_t v17 = *(void *)(v0 + 536);
  uint64_t v18 = *(void *)(v0 + 528);
  uint64_t v19 = *(void *)(v0 + 424);
  uint64_t v20 = *(void *)(v0 + 432);
  uint64_t v21 = *(void *)(v0 + 400);
  uint64_t v44 = *(void *)(v0 + 552);
  uint64_t type = *(void *)(v0 + 392);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v20, v19, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v20, type metadata accessor for SensitiveContentRedactor.Mode);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v22(v21, v44, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v18);
  sub_25C02FB8C(v21, type, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v21, &qword_26A588E30);
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)(v0 + 552);
  uint64_t v24 = *(void *)(v0 + 544);
  uint64_t v25 = *(void *)(v0 + 528);
  uint64_t v26 = sub_25C0EA638();
  __swift_project_value_buffer(v26, (uint64_t)qword_26A595640);
  v22(v24, v23, v25);
  uint64_t v27 = sub_25C0EA618();
  os_log_type_t v28 = sub_25C0EBC18();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 544);
  uint64_t v31 = *(void *)(v0 + 536);
  if (v29)
  {
    uint64_t v33 = *(void *)(v0 + 488);
    uint64_t v32 = *(void *)(v0 + 496);
    uint64_t v34 = *(void *)(v0 + 472);
    os_log_type_t typea = v28;
    uint64_t v42 = *(void *)(v0 + 528);
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 67109120;
    sub_25C0EA508();
    sub_25C0EBEF8();
    char v36 = sub_25C0EB7A8();
    v43(v33, v34);
    v43(v32, v34);
    char v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v37(v30, v42);
    *(_DWORD *)(v0 + 696) = (v36 & 1) == 0;
    sub_25C0EBE58();
    _os_log_impl(&dword_25C01A000, v27, typea, "Scanned content for sensitivity: %{BOOL}d", v35, 8u);
    MEMORY[0x26117E790](v35, -1, -1);
  }
  else
  {
    char v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v37(*(void *)(v0 + 544), *(void *)(v0 + 528));
  }
  uint64_t v38 = *(void *)(v0 + 552);
  uint64_t v39 = *(void *)(v0 + 528);

  v37(v38, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_25C06CD98()
{
  uint64_t v1 = (void *)v0[74];
  uint64_t v2 = (void *)v0[73];
  swift_release();
  swift_willThrow();

  uint64_t v3 = (void *)v0[75];
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25C0EA638();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A595640);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = sub_25C0EA618();
  os_log_type_t v8 = sub_25C0EBC38();
  id v25 = v3;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    char v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v3;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[45] = v12;
    sub_25C0EBE58();
    *char v10 = v12;

    _os_log_impl(&dword_25C01A000, v7, v8, "Failed to scan sensitive content. Error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v10, -1, -1);
    MEMORY[0x26117E790](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v7;
  uint64_t v14 = v0[67];
  uint64_t v16 = v0[63];
  uint64_t v15 = v0[64];
  uint64_t v18 = v0[52];
  uint64_t v17 = v0[53];
  uint64_t v19 = v0[50];
  uint64_t v23 = v0[66];
  os_log_t log = (os_log_t)v0[49];
  uint64_t v20 = v0[47];

  sub_25C0780D4(v20, v17, (uint64_t (*)(void))type metadata accessor for ScannableContent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v16);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v17, v18, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v17, type metadata accessor for SensitiveContentRedactor.Mode);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, 1, 1, v23);
  sub_25C02FB8C(v19, (uint64_t)log, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v19, &qword_26A588E30);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_25C06D180()
{
  uint64_t v1 = (void *)v0[78];
  uint64_t v2 = (void *)v0[77];
  uint64_t v3 = (void *)v0[76];
  swift_release();
  swift_willThrow();

  uint64_t v4 = (void *)v0[79];
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25C0EA638();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A595640);
  id v6 = v4;
  id v7 = v4;
  os_log_type_t v8 = sub_25C0EA618();
  os_log_type_t v9 = sub_25C0EBC38();
  id v26 = v4;
  if (os_log_type_enabled(v8, v9))
  {
    char v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)char v10 = 138412290;
    id v12 = v4;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[45] = v13;
    sub_25C0EBE58();
    *id v11 = v13;

    _os_log_impl(&dword_25C01A000, v8, v9, "Failed to scan sensitive content. Error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v11, -1, -1);
    MEMORY[0x26117E790](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = v8;
  uint64_t v15 = v0[67];
  uint64_t v17 = v0[63];
  uint64_t v16 = v0[64];
  uint64_t v19 = v0[52];
  uint64_t v18 = v0[53];
  uint64_t v20 = v0[50];
  uint64_t v24 = v0[66];
  os_log_t log = (os_log_t)v0[49];
  uint64_t v21 = v0[47];

  sub_25C0780D4(v21, v18, (uint64_t (*)(void))type metadata accessor for ScannableContent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v17);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v18, v19, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v18, type metadata accessor for SensitiveContentRedactor.Mode);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v20, 1, 1, v24);
  sub_25C02FB8C(v20, (uint64_t)log, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v20, &qword_26A588E30);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_25C06D570()
{
  uint64_t v1 = (void *)v0[81];
  uint64_t v2 = (void *)v0[80];
  uint64_t v3 = v0[58];
  uint64_t v4 = v0[55];
  uint64_t v5 = v0[56];
  swift_release();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  id v6 = (void *)v0[82];
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_25C0EA638();
  __swift_project_value_buffer(v7, (uint64_t)qword_26A595640);
  id v8 = v6;
  id v9 = v6;
  char v10 = sub_25C0EA618();
  os_log_type_t v11 = sub_25C0EBC38();
  id v28 = v6;
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)id v12 = 138412290;
    id v14 = v6;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[45] = v15;
    sub_25C0EBE58();
    *uint64_t v13 = v15;

    _os_log_impl(&dword_25C01A000, v10, v11, "Failed to scan sensitive content. Error: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v13, -1, -1);
    MEMORY[0x26117E790](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = v10;
  uint64_t v17 = v0[67];
  uint64_t v19 = v0[63];
  uint64_t v18 = v0[64];
  uint64_t v21 = v0[52];
  uint64_t v20 = v0[53];
  uint64_t v22 = v0[50];
  uint64_t v26 = v0[66];
  os_log_t log = (os_log_t)v0[49];
  uint64_t v23 = v0[47];

  sub_25C0780D4(v23, v20, (uint64_t (*)(void))type metadata accessor for ScannableContent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v19);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v20, v21, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v20, type metadata accessor for SensitiveContentRedactor.Mode);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v22, 1, 1, v26);
  sub_25C02FB8C(v22, (uint64_t)log, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v22, &qword_26A588E30);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_25C06D978()
{
  uint64_t v2 = v0[56];
  uint64_t v1 = v0[57];
  uint64_t v3 = v0[55];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)v0[85];
  if (qword_26A591230 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25C0EA638();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A595640);
  id v6 = v4;
  id v7 = v4;
  id v8 = sub_25C0EA618();
  os_log_type_t v9 = sub_25C0EBC38();
  id v26 = v4;
  if (os_log_type_enabled(v8, v9))
  {
    char v10 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)char v10 = 138412290;
    id v12 = v4;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[45] = v13;
    sub_25C0EBE58();
    *os_log_type_t v11 = v13;

    _os_log_impl(&dword_25C01A000, v8, v9, "Failed to scan sensitive content. Error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v11, -1, -1);
    MEMORY[0x26117E790](v10, -1, -1);
  }
  else
  {
  }
  id v14 = v8;
  uint64_t v15 = v0[67];
  uint64_t v17 = v0[63];
  uint64_t v16 = v0[64];
  uint64_t v19 = v0[52];
  uint64_t v18 = v0[53];
  uint64_t v20 = v0[50];
  uint64_t v24 = v0[66];
  os_log_t log = (os_log_t)v0[49];
  uint64_t v21 = v0[47];

  sub_25C0780D4(v21, v18, (uint64_t (*)(void))type metadata accessor for ScannableContent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v17);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SensitiveContentRedactor(0);
  sub_25C0780D4(v18, v19, type metadata accessor for SensitiveContentRedactor.Mode);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  sub_25C0EB398();
  sub_25C070810(v18, type metadata accessor for SensitiveContentRedactor.Mode);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v20, 1, 1, v24);
  sub_25C02FB8C(v20, (uint64_t)log, &qword_26A588E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  sub_25C0EB448();
  sub_25C02FBF0(v20, &qword_26A588E30);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_25C06DD68(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2408](a1);
  }
}

uint64_t sub_25C06DE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EBB08();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25C0EBAF8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25C02FBF0(a1, &qword_26A5898D0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25C0EBA78();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25C06DFD4()
{
  sub_25C07B50C();

  return sub_25C0EAAF8();
}

uint64_t sub_25C06E01C()
{
  return sub_25C0EAAF8();
}

uint64_t sub_25C06E05C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_25C02FB8C(a1, (uint64_t)&v9 - v6, &qword_26A588E00);
  sub_25C02FB8C((uint64_t)v7, (uint64_t)v5, &qword_26A588E00);
  sub_25C07B50C();
  sub_25C0EAB08();
  return sub_25C02FBF0((uint64_t)v7, &qword_26A588E00);
}

uint64_t sub_25C06E154()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  __swift_allocate_value_buffer(v0, qword_26A591218);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A591218);
  uint64_t v2 = sub_25C0EA5E8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_25C06E1EC@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A591210 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26A591218);
  return sub_25C02FB8C(v3, a1, &qword_26A588E00);
}

uint64_t sub_25C06E264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_25C07877C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

void sub_25C06E2C8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_25C06E2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, MEMORY[0x263F8D510]);
}

uint64_t sub_25C06E2DC()
{
  sub_25C07B560();
  sub_25C0EAAF8();
  return v1;
}

uint64_t sub_25C06E318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v74 = a2;
  uint64_t v75 = a1;
  uint64_t v4 = sub_25C0EBB08();
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  MEMORY[0x270FA5388](v4);
  unsigned __int8 v71 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for SensitiveContentPolicyUpdater(0);
  uint64_t v67 = *(void *)(v59 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v59);
  uint64_t v68 = v7;
  uint64_t v69 = (uint64_t)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (uint64_t)v56 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v58 = (uint64_t)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)v56 - v12;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589008);
  MEMORY[0x270FA5388](v61);
  long long v64 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589010);
  MEMORY[0x270FA5388](v62);
  uint64_t v66 = (uint64_t)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589018);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v70 = (uint64_t)v56 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589020);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589028);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)v3;
  char v27 = *(unsigned char *)(v3 + 8);
  sub_25C076C74(*(void *)v3, v27);
  char v28 = sub_25C0705AC(v26, v27);
  sub_25C076E30(v26, v27);
  if (v28)
  {
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v29(v25, v75, v22);
    v29(v21, (uint64_t)v25, v22);
    swift_storeEnumTagMultiPayload();
    sub_25C0583D0(&qword_26A589050, &qword_26A589028);
    sub_25C07A7B8();
    sub_25C0EAD28();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  else
  {
    v56[1] = v19;
    uint64_t v57 = v21;
    uint64_t v31 = v22;
    v56[0] = swift_getKeyPath();
    uint64_t v32 = v58;
    sub_25C02FB8C(v3 + *(int *)(v59 + 28), v58, &qword_26A588E00);
    uint64_t v33 = v60;
    sub_25C0780D4(v3, v60, type metadata accessor for SensitiveContentPolicyUpdater);
    uint64_t v34 = sub_25C0EA5E8();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
      uint64_t v36 = (uint64_t)v63;
      sub_25C0EB388();
      sub_25C070810(v33, type metadata accessor for SensitiveContentPolicyUpdater);
      sub_25C02FBF0(v32, &qword_26A588E00);
    }
    else
    {
      sub_25C070810(v33, type metadata accessor for SensitiveContentPolicyUpdater);
      uint64_t v36 = (uint64_t)v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v63, v32, v34);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    }
    uint64_t v37 = v75;
    uint64_t v38 = (uint64_t)v64;
    uint64_t v39 = &v64[*(int *)(v61 + 36)];
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589030);
    sub_25C02FB8C(v36, (uint64_t)&v39[*(int *)(v40 + 28)], &qword_26A588E00);
    *(void *)uint64_t v39 = v56[0];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v38, v37, v31);
    sub_25C02FBF0(v36, &qword_26A588E00);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v42 = v66;
    sub_25C02FB8C(v38, v66, &qword_26A589008);
    uint64_t v43 = v42 + *(int *)(v62 + 36);
    *(void *)uint64_t v43 = KeyPath;
    *(unsigned char *)(v43 + 8) = 1;
    sub_25C02FBF0(v38, &qword_26A589008);
    uint64_t v44 = v3;
    uint64_t v45 = v69;
    sub_25C0780D4(v44, v69, type metadata accessor for SensitiveContentPolicyUpdater);
    unint64_t v46 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    uint64_t v47 = swift_allocObject();
    sub_25C079354(v45, v47 + v46, type metadata accessor for SensitiveContentPolicyUpdater);
    uint64_t v48 = v71;
    sub_25C0EBAE8();
    uint64_t v49 = (uint64_t)v65;
    uint64_t v50 = &v65[*(int *)(v15 + 36)];
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589048);
    uint64_t v53 = v72;
    uint64_t v52 = v73;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(&v50[*(int *)(v51 + 36)], v48, v73);
    uint64_t v54 = &v50[*(int *)(v51 + 40)];
    *(void *)uint64_t v54 = 0;
    *((void *)v54 + 1) = 0;
    *(void *)uint64_t v50 = &unk_26A589040;
    *((void *)v50 + 1) = v47;
    sub_25C02FB8C(v42, v49, &qword_26A589010);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v52);
    sub_25C02FBF0(v42, &qword_26A589010);
    uint64_t v55 = v70;
    sub_25C0516EC(v49, v70, &qword_26A589018);
    sub_25C02FB8C(v55, (uint64_t)v57, &qword_26A589018);
    swift_storeEnumTagMultiPayload();
    sub_25C0583D0(&qword_26A589050, &qword_26A589028);
    sub_25C07A7B8();
    sub_25C0EAD28();
    return sub_25C02FBF0(v55, &qword_26A589018);
  }
}

uint64_t sub_25C06EB98@<X0>(unsigned char *a1@<X8>)
{
  sub_25C07B560();
  uint64_t result = sub_25C0EAAF8();
  *a1 = v3;
  return result;
}

uint64_t sub_25C06EBE8()
{
  return sub_25C0EAB08();
}

uint64_t sub_25C06EC34(uint64_t a1)
{
  v1[19] = a1;
  uint64_t v2 = sub_25C0EBAA8();
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v3 = sub_25C0EA5C8();
  v1[23] = v3;
  v1[24] = *(void *)(v3 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = type metadata accessor for SensitiveContentPolicyUpdater(0);
  v1[27] = swift_task_alloc();
  uint64_t v4 = sub_25C0EA5E8();
  v1[28] = v4;
  v1[29] = *(void *)(v4 - 8);
  v1[30] = swift_task_alloc();
  uint64_t v5 = sub_25C0EA638();
  v1[31] = v5;
  v1[32] = *(void *)(v5 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = sub_25C0EBAD8();
  v1[44] = sub_25C0EBAC8();
  uint64_t v7 = sub_25C0EBA78();
  v1[45] = v7;
  v1[46] = v6;
  return MEMORY[0x270FA2498](sub_25C06EF00, v7, v6);
}

uint64_t sub_25C06EF00()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  sub_25C02FB8C(v0[19] + *(int *)(v0[26] + 28), v1, &qword_26A588E00);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[47] = v4;
  v0[48] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v2) == 1)
  {
    sub_25C02FBF0(v0[42], &qword_26A588E00);
    if (qword_26A591230 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[34];
    uint64_t v6 = v0[31];
    uint64_t v7 = v0[32];
    uint64_t v8 = __swift_project_value_buffer(v6, (uint64_t)qword_26A595640);
    v0[49] = v8;
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v0[50] = v9;
    v0[51] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v9(v5, v8, v6);
    uint64_t v10 = sub_25C0EA618();
    os_log_type_t v11 = sub_25C0EBC18();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = v0[34];
    uint64_t v15 = v0[31];
    uint64_t v14 = v0[32];
    if (v12)
    {
      uint64_t v36 = v0[34];
      uint64_t v35 = v0[31];
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v37 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v0[18] = sub_25C079E24(0x3E656E6F6E3CLL, 0xE600000000000000, &v37);
      sub_25C0EBE58();
      _os_log_impl(&dword_25C01A000, v10, v11, "Fetching SensitiveContentPolicy for %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v17, -1, -1);
      MEMORY[0x26117E790](v16, -1, -1);

      uint64_t v20 = *(void (**)(void, void))(v14 + 8);
      uint64_t v18 = v14 + 8;
      uint64_t v19 = v20;
      v20(v36, v35);
    }
    else
    {

      uint64_t v24 = *(void (**)(void, void))(v14 + 8);
      uint64_t v18 = v14 + 8;
      uint64_t v19 = v24;
      v24(v13, v15);
    }
    v0[52] = v18;
    v0[53] = v19;
    sub_25C0EA5D8();
    uint64_t v25 = v0[5];
    uint64_t v26 = __swift_project_boxed_opaque_existential_1(v0 + 2, v25);
    uint64_t v27 = *(void *)(v25 - 8);
    uint64_t v28 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v27 + 16))(v28, v26, v25);
    v0[10] = swift_getAssociatedTypeWitness();
    v0[11] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v0 + 7);
    sub_25C0EBB28();
    swift_task_dealloc();
    v0[54] = v19;
    uint64_t v29 = sub_25C0EBAC8();
    v0[55] = v29;
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[11];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v30);
    uint64_t v32 = (void *)swift_task_alloc();
    v0[56] = v32;
    void *v32 = v0;
    v32[1] = sub_25C06F3FC;
    uint64_t v33 = v0[41];
    uint64_t v34 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1E88](v33, v29, v34, v0 + 12, v30, v31);
  }
  else
  {
    uint64_t v21 = v0[42];
    swift_release();
    sub_25C02FBF0(v21, &qword_26A588E00);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_25C06F3FC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    uint64_t v5 = sub_25C06FB90;
  }
  else {
    uint64_t v5 = sub_25C06F51C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25C06F51C()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[28];
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[47])(v1, 1, v2) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[39];
    uint64_t v6 = v0[40];
    uint64_t v7 = v0[38];
    uint64_t v55 = v0[37];
    uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t))v0[50];
    uint64_t v49 = v0[33];
    uint64_t v8 = v0[30];
    uint64_t v51 = v0[31];
    uint64_t v53 = v0[49];
    uint64_t v9 = v0[29];
    uint64_t v61 = v0[27];
    uint64_t v10 = v0[19];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v1, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
    sub_25C0EB388();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v5, v8, v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v2);
    sub_25C02FB8C(v5, v7, &qword_26A588E00);
    sub_25C0EB398();
    sub_25C02FBF0(v5, &qword_26A588E00);
    v57(v49, v53, v51);
    sub_25C02FB8C(v6, v55, &qword_26A588E00);
    sub_25C0780D4(v10, v61, type metadata accessor for SensitiveContentPolicyUpdater);
    os_log_type_t v11 = sub_25C0EA618();
    os_log_type_t v12 = sub_25C0EBC18();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v58 = v12;
      uint64_t v54 = v0 + 17;
      uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[47];
      uint64_t v14 = v0[36];
      uint64_t v15 = v0[37];
      uint64_t v16 = v0[28];
      uint64_t v17 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v0[17] = v56;
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_25C02FB8C(v15, v14, &qword_26A588E00);
      int v18 = v13(v14, 1, v16);
      uint64_t v19 = v0[36];
      if (v18 == 1)
      {
        sub_25C02FBF0(v0[36], &qword_26A588E00);
        unint64_t v20 = 0xE600000000000000;
        uint64_t v21 = 0x3E656E6F6E3CLL;
      }
      else
      {
        uint64_t v30 = v0[28];
        uint64_t v29 = v0[29];
        uint64_t v21 = sub_25C0EA598();
        unint64_t v20 = v31;
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v30);
      }
      uint64_t v62 = v0 + 53;
      uint64_t v47 = (void (*)(uint64_t, uint64_t))v0[53];
      uint64_t v32 = v0[39];
      uint64_t v33 = v0[37];
      uint64_t v45 = v0[31];
      uint64_t v46 = v0[33];
      uint64_t v34 = v0[29];
      uint64_t v50 = v0[40];
      uint64_t v52 = v0[30];
      uint64_t v35 = v0[27];
      uint64_t v48 = v0[28];
      *(void *)(v17 + 4) = sub_25C079E24(v21, v20, v54);
      swift_bridgeObjectRelease();
      sub_25C02FBF0(v33, &qword_26A588E00);
      *(_WORD *)(v17 + 12) = 2080;
      sub_25C0EB388();
      uint64_t v36 = sub_25C0EBDF8();
      unint64_t v38 = v37;
      sub_25C02FBF0(v32, &qword_26A588E00);
      *(void *)(v17 + 14) = sub_25C079E24(v36, v38, v54);
      swift_bridgeObjectRelease();
      sub_25C070810(v35, type metadata accessor for SensitiveContentPolicyUpdater);
      _os_log_impl(&dword_25C01A000, v11, v58, "Updated SensitiveContentPolicy from %s to %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v56, -1, -1);
      MEMORY[0x26117E790](v17, -1, -1);

      v47(v46, v45);
      sub_25C02FBF0(v50, &qword_26A588E00);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v52, v48);
    }
    else
    {
      uint64_t v22 = (void (*)(uint64_t, uint64_t))v0[54];
      uint64_t v23 = v0[40];
      uint64_t v24 = v0[37];
      uint64_t v25 = v0[33];
      uint64_t v26 = v0[31];
      uint64_t v60 = v0[30];
      uint64_t v62 = v0 + 54;
      uint64_t v27 = v0[29];
      uint64_t v59 = v0[28];
      uint64_t v28 = v0[27];

      sub_25C070810(v28, type metadata accessor for SensitiveContentPolicyUpdater);
      sub_25C02FBF0(v24, &qword_26A588E00);
      v22(v25, v26);
      sub_25C02FBF0(v23, &qword_26A588E00);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v60, v59);
    }
    v0[54] = *v62;
    uint64_t v39 = sub_25C0EBAC8();
    v0[55] = v39;
    uint64_t v40 = v0[10];
    uint64_t v41 = v0[11];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v40);
    uint64_t v42 = (void *)swift_task_alloc();
    v0[56] = (uint64_t)v42;
    *uint64_t v42 = v0;
    v42[1] = sub_25C06F3FC;
    uint64_t v43 = v0[41];
    uint64_t v44 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1E88](v43, v39, v44, v0 + 12, v40, v41);
  }
}

uint64_t sub_25C06FB90()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 104) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    goto LABEL_13;
  }

  *(void *)(v0 + 112) = v1;
  id v6 = v1;
  if (!swift_dynamicCast())
  {
LABEL_9:

    id v14 = v1;
    id v15 = v1;
    uint64_t v16 = sub_25C0EA618();
    os_log_type_t v17 = sub_25C0EBC38();
    if (os_log_type_enabled(v16, v17))
    {
      int v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)int v18 = 138412290;
      id v20 = v1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 128) = v21;
      sub_25C0EBE58();
      *uint64_t v19 = v21;

      _os_log_impl(&dword_25C01A000, v16, v17, "Failed to retrieve SensitiveContentPolicy for persona. Defaulting to none. Error: %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v19, -1, -1);
      MEMORY[0x26117E790](v18, -1, -1);
    }
    else
    {
    }
    uint64_t v23 = *(void *)(v0 + 304);
    uint64_t v22 = *(void *)(v0 + 312);
    uint64_t v24 = *(void *)(v0 + 224);
    uint64_t v25 = *(void *)(v0 + 232);

    *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
    sub_25C07B838(&qword_26A588F58, MEMORY[0x263F17608]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589090);
    sub_25C0583D0(&qword_26A589098, &qword_26A589090);
    sub_25C0EBF08();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    sub_25C02FB8C(v22, v23, &qword_26A588E00);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
    sub_25C0EB398();

    sub_25C02FBF0(v22, &qword_26A588E00);
    goto LABEL_13;
  }
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 192) + 88))(*(void *)(v0 + 200), *(void *)(v0 + 184)) != *MEMORY[0x263F17600])
  {
    (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
    goto LABEL_9;
  }

  uint64_t v7 = sub_25C0EA618();
  os_log_type_t v8 = sub_25C0EBC38();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_25C01A000, v7, v8, "Failed to retrieve SensitiveContentPolicy due to connectivity issues. Forcing obscuration.", v9, 2u);
    MEMORY[0x26117E790](v9, -1, -1);
  }
  uint64_t v11 = *(void *)(v0 + 304);
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v12 = *(void *)(v0 + 224);
  uint64_t v13 = *(void *)(v0 + 232);

  sub_25C0EA588();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  sub_25C02FB8C(v10, v11, &qword_26A588E00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  sub_25C0EB398();
  sub_25C02FBF0(v10, &qword_26A588E00);

LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_25C07010C()
{
  return sub_25C0EA808();
}

uint64_t sub_25C07012C()
{
  uint64_t v0 = sub_25C0EA638();
  __swift_allocate_value_buffer(v0, qword_26A595640);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A595640);
  return sub_25C0EA628();
}

uint64_t sub_25C0701B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s24SensitiveContentAnalysis11SensitivityO0abC2UIE2idSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25C0701DC@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v8 = (void (*)(void))MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v14 - v9;
  v8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t sub_25C07031C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25C0EAAE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(v2, (uint64_t)v10, &qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25C0516EC((uint64_t)v10, a1, &qword_26A588E00);
  }
  os_log_type_t v12 = sub_25C0EBC48();
  uint64_t v13 = sub_25C0EAE98();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)id v15 = 136315138;
    v18[2] = sub_25C079E24(0xD000000000000020, 0x800000025C0F6270, &v19);
    sub_25C0EBE58();
    _os_log_impl(&dword_25C01A000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v17, -1, -1);
    MEMORY[0x26117E790](v15, -1, -1);
  }

  sub_25C0EAAD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25C0705AC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_25C0EAAE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_25C0EBC48();
  uint64_t v9 = sub_25C0EAE98();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_25C079E24(1819242306, 0xE400000000000000, &v15);
    sub_25C0EBE58();
    _os_log_impl(&dword_25C01A000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v12, -1, -1);
    MEMORY[0x26117E790](v11, -1, -1);
  }

  sub_25C0EAAD8();
  swift_getAtKeyPath();
  sub_25C076E30(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t type metadata accessor for SensitiveContentPolicyUpdater(uint64_t a1)
{
  return sub_25C02BF00(a1, qword_26A591380);
}

uint64_t type metadata accessor for SensitiveContentRedactor.Mode(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A591370);
}

uint64_t type metadata accessor for SensitiveContentRedactor(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A591360);
}

uint64_t sub_25C070810(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C070870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0708B8@<X0>(char *a1@<X8>)
{
  return sub_25C0701DC(*(void *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for SensitiveContentPolicyIsBeingUpdatedKey()
{
  return &type metadata for SensitiveContentPolicyIsBeingUpdatedKey;
}

uint64_t sub_25C0708D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25C070970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0709B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_25C070A74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    goto LABEL_42;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_25C0EA5E8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = (void **)((char *)a1 + v11);
  uint64_t v13 = (void **)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v18 = type metadata accessor for ScannableContent();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
        memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v29 = *v13;
            *uint64_t v12 = *v13;
            id v30 = v29;
            break;
          default:
            uint64_t v24 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v13, v24);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
      }
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
      *((unsigned char *)v12 + *(int *)(v31 + 48)) = *((unsigned char *)v13 + *(int *)(v31 + 48));
      goto LABEL_31;
    case 1:
      uint64_t v21 = type metadata accessor for ScannableContent();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v22 + 48))(v13, 1, v21))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v32 = *v13;
            *uint64_t v12 = *v13;
            id v33 = v32;
            break;
          default:
            uint64_t v25 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v25 - 8) + 16))(v12, v13, v25);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v21);
        goto LABEL_31;
      }
      goto LABEL_16;
    case 0:
      uint64_t v16 = type metadata accessor for ScannableContent();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v27 = *v13;
            *uint64_t v12 = *v13;
            id v28 = v27;
            break;
          default:
            uint64_t v26 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v12, v13, v26);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
        goto LABEL_31;
      }
LABEL_16:
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_31:
      swift_storeEnumTagMultiPayload();
      goto LABEL_32;
  }
  memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_32:
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  *(void **)((char *)v12 + *(int *)(v34 + 28)) = *(void **)((char *)v13 + *(int *)(v34 + 28));
  uint64_t v35 = a3[6];
  uint64_t v36 = (void **)((char *)a1 + v35);
  unint64_t v37 = (void **)((char *)a2 + v35);
  uint64_t v38 = type metadata accessor for ScannableContent();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48);
  swift_retain();
  if (v40(v37, 1, v38))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v43 = *v37;
        *uint64_t v36 = *v37;
        id v44 = v43;
        break;
      default:
        uint64_t v42 = sub_25C0EA238();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v42 - 8) + 16))(v36, v37, v42);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void **, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v45 = a3[7];
  uint64_t v46 = (uint64_t *)((char *)a1 + v45);
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = *(uint64_t *)((char *)a2 + v45 + 8);
  void *v46 = *(uint64_t *)((char *)a2 + v45);
  v46[1] = v48;
  swift_retain();
  swift_retain();
  uint64_t v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v50 = (char *)v46 + v49;
  uint64_t v51 = &v47[v49];
  uint64_t v52 = sub_25C0EA578();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  uint64_t v55 = a3[9];
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  *uint64_t v56 = *v57;
  *((void *)v56 + 1) = *((void *)v57 + 1);
LABEL_42:
  swift_retain();
  return a1;
}

uint64_t sub_25C071484(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_25C0EA5E8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = (id *)(a1 + a2[5]);
  type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v10 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
LABEL_10:
            uint64_t v9 = sub_25C0EA238();
            (*(void (**)(id *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
            break;
          case 2u:
          case 3u:
LABEL_13:

            break;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 1:
      uint64_t v11 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_10;
          case 2u:
          case 3u:
            goto LABEL_13;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 0:
      uint64_t v8 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_10;
          case 2u:
          case 3u:
            goto LABEL_13;
          default:
            goto LABEL_15;
        }
      }
      break;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  swift_release();
  uint64_t v12 = (id *)(a1 + a2[6]);
  uint64_t v13 = type metadata accessor for ScannableContent();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v19 = sub_25C0EA238();
        (*(void (**)(id *, uint64_t))(*(void *)(v19 - 8) + 8))(v12, v19);
        break;
      case 2u:
      case 3u:

        break;
      default:
        break;
    }
  }
  uint64_t v14 = a1 + a2[7];
  swift_release();
  swift_release();
  uint64_t v15 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v16 = sub_25C0EA578();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }

  return swift_release();
}

void *sub_25C071938(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_25C0EA5E8();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = (void **)((char *)a1 + v9);
  uint64_t v11 = (void **)((char *)a2 + v9);
  uint64_t v12 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v16 = type metadata accessor for ScannableContent();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          uint64_t v27 = *v11;
          *uint64_t v10 = *v11;
          id v28 = v27;
          break;
        default:
          uint64_t v22 = sub_25C0EA238();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v22 - 8) + 16))(v10, v11, v22);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
    }
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
    *((unsigned char *)v10 + *(int *)(v29 + 48)) = *((unsigned char *)v11 + *(int *)(v29 + 48));
    goto LABEL_29;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v19 = type metadata accessor for ScannableContent();
    uint64_t v20 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          id v30 = *v11;
          *uint64_t v10 = *v11;
          id v31 = v30;
          break;
        default:
          uint64_t v23 = sub_25C0EA238();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v10, v11, v23);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, void, uint64_t, uint64_t))(v20 + 56))(v10, 0, 1, v19);
      goto LABEL_29;
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_30;
    }
    uint64_t v14 = type metadata accessor for ScannableContent();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          uint64_t v25 = *v11;
          *uint64_t v10 = *v11;
          id v26 = v25;
          break;
        default:
          uint64_t v24 = sub_25C0EA238();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v10, v11, v24);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
      goto LABEL_29;
    }
  }
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_29:
  swift_storeEnumTagMultiPayload();
LABEL_30:
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  *(void **)((char *)v10 + *(int *)(v32 + 28)) = *(void **)((char *)v11 + *(int *)(v32 + 28));
  uint64_t v33 = a3[6];
  uint64_t v34 = (void **)((char *)a1 + v33);
  uint64_t v35 = (void **)((char *)a2 + v33);
  uint64_t v36 = type metadata accessor for ScannableContent();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v37 + 48);
  swift_retain();
  if (v38(v35, 1, v36))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v41 = *v35;
        *uint64_t v34 = *v35;
        id v42 = v41;
        break;
      default:
        uint64_t v40 = sub_25C0EA238();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void **, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v43 = a3[7];
  id v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *(void *)((char *)a2 + v43 + 8);
  *id v44 = *(void *)((char *)a2 + v43);
  v44[1] = v46;
  swift_retain();
  swift_retain();
  uint64_t v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v48 = (char *)v44 + v47;
  uint64_t v49 = &v45[v47];
  uint64_t v50 = sub_25C0EA578();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v53 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  *uint64_t v54 = *v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_retain();
  return a1;
}

void *sub_25C0722FC(void *a1, void *a2, int *a3)
{
  if (a1 == a2)
  {
    uint64_t v9 = a3[5];
    goto LABEL_32;
  }
  sub_25C02FBF0((uint64_t)a1, &qword_26A588E08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_25C0EA5E8();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = (void **)((char *)a1 + v9);
  uint64_t v11 = (void **)((char *)a2 + v9);
  sub_25C070810((uint64_t)a1 + v9, type metadata accessor for SensitiveContentRedactor.Mode);
  uint64_t v12 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v17 = type metadata accessor for ScannableContent();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))((char *)a2 + v9, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      memcpy((char *)a1 + v9, (char *)a2 + v9, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          uint64_t v22 = *v11;
          *uint64_t v10 = *v11;
          id v23 = v22;
          break;
        default:
          uint64_t v20 = sub_25C0EA238();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))((char *)a1 + v9, (char *)a2 + v9, v20);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))((char *)a1 + v9, 0, 1, v17);
    }
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
    *((unsigned char *)v10 + *(int *)(v24 + 48)) = *((unsigned char *)v11 + *(int *)(v24 + 48));
    goto LABEL_31;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((char *)a1 + v9, (char *)a2 + v9, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_32;
    }
    uint64_t v14 = type metadata accessor for ScannableContent();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)a2 + v9, 1, v14)) {
      goto LABEL_12;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v25 = *v11;
        *uint64_t v10 = *v11;
        id v26 = v25;
        break;
      default:
        uint64_t v29 = sub_25C0EA238();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))((char *)a1 + v9, (char *)a2 + v9, v29);
        break;
    }
LABEL_30:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))((char *)a1 + v9, 0, 1, v14);
    goto LABEL_31;
  }
  uint64_t v14 = type metadata accessor for ScannableContent();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)a2 + v9, 1, v14))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v27 = *v11;
        *uint64_t v10 = *v11;
        id v28 = v27;
        break;
      default:
        uint64_t v21 = sub_25C0EA238();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))((char *)a1 + v9, (char *)a2 + v9, v21);
        break;
    }
    goto LABEL_30;
  }
LABEL_12:
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  memcpy((char *)a1 + v9, (char *)a2 + v9, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_31:
  swift_storeEnumTagMultiPayload();
LABEL_32:
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  *(void *)((char *)a1 + v9 + *(int *)(v30 + 28)) = *(void *)((char *)a2 + v9 + *(int *)(v30 + 28));
  swift_retain();
  swift_release();
  uint64_t v31 = a3[6];
  uint64_t v32 = (void **)((char *)a1 + v31);
  uint64_t v33 = (void **)((char *)a2 + v31);
  uint64_t v34 = type metadata accessor for ScannableContent();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          id v42 = *v33;
          void *v32 = *v33;
          id v43 = v42;
          break;
        default:
          uint64_t v39 = sub_25C0EA238();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v39 - 8) + 16))(v32, v33, v39);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_44;
    }
LABEL_38:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_44;
  }
  if (v38)
  {
    sub_25C070810((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    goto LABEL_38;
  }
  if (a1 != a2)
  {
    sub_25C070810((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ScannableContent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v60 = *v33;
        void *v32 = *v33;
        id v61 = v60;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v41 = sub_25C0EA238();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v41 - 8) + 16))(v32, v33, v41);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_44:
  uint64_t v44 = a3[7];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);
  swift_retain();
  swift_release();
  *((void *)v45 + 1) = *((void *)v46 + 1);
  swift_retain();
  swift_release();
  uint64_t v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v48 = &v45[v47];
  uint64_t v49 = &v46[v47];
  uint64_t v50 = sub_25C0EA578();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
      goto LABEL_50;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_49;
  }
  if (v54)
  {
LABEL_49:
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_50:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v56 = a3[9];
  uint64_t v57 = (char *)a1 + v56;
  os_log_type_t v58 = (char *)a2 + v56;
  *uint64_t v57 = *v58;
  *((void *)v57 + 1) = *((void *)v58 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_25C072F18(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_25C0EA5E8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v17 = type metadata accessor for ScannableContent();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        memcpy(v11, v12, *(void *)(v18 + 64));
      }
      else
      {
        uint64_t v21 = sub_25C0EA238();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v11, v12, v21);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
    }
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
    v11[*(int *)(v23 + 48)] = v12[*(int *)(v23 + 48)];
    goto LABEL_29;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_30;
    }
    uint64_t v15 = type metadata accessor for ScannableContent();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15)) {
      goto LABEL_15;
    }
    if (swift_getEnumCaseMultiPayload() <= 1) {
      goto LABEL_22;
    }
    goto LABEL_27;
  }
  uint64_t v15 = type metadata accessor for ScannableContent();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
  {
    if (swift_getEnumCaseMultiPayload() <= 1)
    {
LABEL_22:
      uint64_t v22 = sub_25C0EA238();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v11, v12, v22);
      swift_storeEnumTagMultiPayload();
LABEL_28:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      goto LABEL_29;
    }
LABEL_27:
    memcpy(v11, v12, *(void *)(v16 + 64));
    goto LABEL_28;
  }
LABEL_15:
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_29:
  swift_storeEnumTagMultiPayload();
LABEL_30:
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  *(void *)&v11[*(int *)(v24 + 28)] = *(void *)&v12[*(int *)(v24 + 28)];
  uint64_t v25 = a3[6];
  id v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = type metadata accessor for ScannableContent();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v26, v27, *(void *)(v29 + 64));
    }
    else
    {
      uint64_t v31 = sub_25C0EA238();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v26, v27, v31);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  uint64_t v32 = a3[7];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)&a2[v32 + 8];
  *(void *)uint64_t v33 = *(void *)&a2[v32];
  *((void *)v33 + 1) = v35;
  uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  int v37 = &v33[v36];
  int v38 = &v34[v36];
  uint64_t v39 = sub_25C0EA578();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(_OWORD *)&a1[v42] = *(_OWORD *)&a2[v42];
  return a1;
}

char *sub_25C073874(char *a1, char *a2, int *a3)
{
  if (a1 == a2)
  {
    uint64_t v10 = a3[5];
    goto LABEL_31;
  }
  sub_25C02FBF0((uint64_t)a1, &qword_26A588E08);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_25C0EA5E8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = a3[5];
  sub_25C070810((uint64_t)&a1[v10], type metadata accessor for SensitiveContentRedactor.Mode);
  uint64_t v11 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v16 = type metadata accessor for ScannableContent();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v10], 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      memcpy(&a1[v10], &a2[v10], *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        memcpy(&a1[v10], &a2[v10], *(void *)(v17 + 64));
      }
      else
      {
        uint64_t v20 = sub_25C0EA238();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(&a1[v10], &a2[v10], v20);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(&a1[v10], 0, 1, v16);
    }
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
    a1[v10 + *(int *)(v21 + 48)] = a2[v10 + *(int *)(v21 + 48)];
    goto LABEL_30;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(&a1[v10], &a2[v10], *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_31;
    }
    uint64_t v13 = type metadata accessor for ScannableContent();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v10], 1, v13)) {
      goto LABEL_13;
    }
    if (swift_getEnumCaseMultiPayload() <= 1) {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
  uint64_t v13 = type metadata accessor for ScannableContent();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v10], 1, v13))
  {
    if (swift_getEnumCaseMultiPayload() <= 1)
    {
LABEL_20:
      uint64_t v19 = sub_25C0EA238();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(&a1[v10], &a2[v10], v19);
      swift_storeEnumTagMultiPayload();
LABEL_29:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(&a1[v10], 0, 1, v13);
      goto LABEL_30;
    }
LABEL_28:
    memcpy(&a1[v10], &a2[v10], *(void *)(v14 + 64));
    goto LABEL_29;
  }
LABEL_13:
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  memcpy(&a1[v10], &a2[v10], *(void *)(*(void *)(v15 - 8) + 64));
LABEL_30:
  swift_storeEnumTagMultiPayload();
LABEL_31:
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  *(void *)&a1[v10 + *(int *)(v22 + 28)] = *(void *)&a2[v10 + *(int *)(v22 + 28)];
  swift_release();
  uint64_t v23 = a3[6];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for ScannableContent();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      if (a1 == a2) {
        goto LABEL_44;
      }
      sub_25C070810((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      if (swift_getEnumCaseMultiPayload() <= 1)
      {
        uint64_t v33 = sub_25C0EA238();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v24, v25, v33);
        swift_storeEnumTagMultiPayload();
        goto LABEL_44;
      }
      size_t v32 = *(void *)(v27 + 64);
LABEL_38:
      memcpy(v24, v25, v32);
      goto LABEL_44;
    }
    sub_25C070810((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ScannableContent);
LABEL_37:
    size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10) - 8) + 64);
    goto LABEL_38;
  }
  if (v30) {
    goto LABEL_37;
  }
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v24, v25, *(void *)(v27 + 64));
  }
  else
  {
    uint64_t v31 = sub_25C0EA238();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v24, v25, v31);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_44:
  uint64_t v34 = a3[7];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  *(void *)&a1[v34] = *(void *)&a2[v34];
  swift_release();
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_release();
  uint64_t v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  int v38 = &v35[v37];
  uint64_t v39 = &v36[v37];
  uint64_t v40 = sub_25C0EA578();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v38, v39, v40);
      goto LABEL_50;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_49;
  }
  if (v44)
  {
LABEL_49:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_50:
  uint64_t v46 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  *uint64_t v47 = *v48;
  *((void *)v47 + 1) = *((void *)v48 + 1);
  swift_release();
  return a1;
}

uint64_t sub_25C0743D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0743E8);
}

uint64_t sub_25C0743E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E38);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_25C0745B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C0745C8);
}

uint64_t sub_25C0745C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E38);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9] + 8) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_25C074784()
{
  sub_25C07803C(319, &qword_26A588E40, &qword_26A588E00, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_25C074984(319, &qword_26A588E48, type metadata accessor for SensitiveContentRedactor.Mode, MEMORY[0x263F1B5D0]);
    if (v1 <= 0x3F)
    {
      sub_25C074984(319, &qword_26A588E50, (uint64_t (*)(uint64_t))type metadata accessor for ScannableContent, MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F)
      {
        sub_25C07803C(319, &qword_26A588E58, &qword_26A588E30, MEMORY[0x263F1B750]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_25C074984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_25C0749E8(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v12 = type metadata accessor for ScannableContent();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
              uint64_t v23 = *a2;
              *(void *)a1 = *a2;
              uint64_t v24 = v23;
              break;
            default:
              uint64_t v16 = sub_25C0EA238();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
              break;
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
        a1[*(int *)(v25 + 48)] = *((unsigned char *)a2 + *(int *)(v25 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v8 = type metadata accessor for ScannableContent();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
LABEL_12:
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_22:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v19 = *a2;
            *(void *)a1 = *a2;
            uint64_t v20 = v19;
            break;
          default:
            uint64_t v17 = sub_25C0EA238();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            break;
        }
LABEL_21:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        goto LABEL_22;
      case 0:
        uint64_t v8 = type metadata accessor for ScannableContent();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
          goto LABEL_12;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v21 = *a2;
            *(void *)a1 = *a2;
            uint64_t v22 = v21;
            break;
          default:
            uint64_t v18 = sub_25C0EA238();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
            break;
        }
        goto LABEL_21;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_25C074F8C(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v6 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
LABEL_6:
            uint64_t v4 = sub_25C0EA238();
            int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
            v5(a1, v4);
            break;
          case 2u:
          case 3u:
LABEL_14:
            uint64_t v8 = *a1;

            break;
          default:
            return;
        }
      }
      break;
    case 1:
      uint64_t v7 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(a1, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_6;
          case 2u:
          case 3u:
            goto LABEL_14;
          default:
            return;
        }
      }
      break;
    case 0:
      uint64_t v3 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_6;
          case 2u:
          case 3u:
            goto LABEL_14;
          default:
            return;
        }
      }
      break;
  }
}

void **sub_25C0751D8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v9 = type metadata accessor for ScannableContent();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v20 = *a2;
            *a1 = *a2;
            id v21 = v20;
            break;
          default:
            uint64_t v15 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
      *((unsigned char *)a1 + *(int *)(v22 + 48)) = *((unsigned char *)a2 + *(int *)(v22 + 48));
      goto LABEL_24;
    case 1:
      uint64_t v12 = type metadata accessor for ScannableContent();
      uint64_t v13 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v23 = *a2;
            *a1 = *a2;
            id v24 = v23;
            break;
          default:
            uint64_t v16 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        goto LABEL_24;
      }
      goto LABEL_9;
    case 0:
      uint64_t v7 = type metadata accessor for ScannableContent();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v18 = *a2;
            *a1 = *a2;
            id v19 = v18;
            break;
          default:
            uint64_t v17 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        goto LABEL_24;
      }
LABEL_9:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_24:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void **sub_25C0757A0(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25C070810((uint64_t)a1, type metadata accessor for SensitiveContentRedactor.Mode);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v10 = type metadata accessor for ScannableContent();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
              uint64_t v15 = *a2;
              *a1 = *a2;
              id v16 = v15;
              break;
            default:
              uint64_t v13 = sub_25C0EA238();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
              break;
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void **, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
        *((unsigned char *)a1 + *(int *)(v17 + 48)) = *((unsigned char *)a2 + *(int *)(v17 + 48));
        goto LABEL_25;
      case 1:
        uint64_t v7 = type metadata accessor for ScannableContent();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
          goto LABEL_6;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v20 = *a2;
            *a1 = *a2;
            id v21 = v20;
            break;
          default:
            uint64_t v14 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
            break;
        }
        goto LABEL_24;
      case 0:
        uint64_t v7 = type metadata accessor for ScannableContent();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
LABEL_6:
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_25:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v18 = *a2;
            *a1 = *a2;
            id v19 = v18;
            break;
          default:
            uint64_t v22 = sub_25C0EA238();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
            break;
        }
LABEL_24:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        goto LABEL_25;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_25C075D8C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v9 = type metadata accessor for ScannableContent();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(a1, a2, *(void *)(v10 + 64));
        }
        else
        {
          uint64_t v13 = sub_25C0EA238();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
      *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
      goto LABEL_23;
    case 1:
      uint64_t v7 = type metadata accessor for ScannableContent();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
LABEL_9:
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (swift_getEnumCaseMultiPayload() <= 1) {
        goto LABEL_16;
      }
      goto LABEL_21;
    case 0:
      uint64_t v7 = type metadata accessor for ScannableContent();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
        goto LABEL_9;
      }
      if (swift_getEnumCaseMultiPayload() <= 1)
      {
LABEL_16:
        uint64_t v14 = sub_25C0EA238();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
LABEL_22:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        goto LABEL_23;
      }
LABEL_21:
      memcpy(a1, a2, *(void *)(v8 + 64));
      goto LABEL_22;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_25C0762EC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25C070810((uint64_t)a1, type metadata accessor for SensitiveContentRedactor.Mode);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v10 = type metadata accessor for ScannableContent();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() > 1)
          {
            memcpy(a1, a2, *(void *)(v11 + 64));
          }
          else
          {
            uint64_t v14 = sub_25C0EA238();
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20);
        *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
        goto LABEL_23;
      case 1:
        uint64_t v7 = type metadata accessor for ScannableContent();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
          goto LABEL_6;
        }
        if (swift_getEnumCaseMultiPayload() <= 1)
        {
LABEL_13:
          uint64_t v13 = sub_25C0EA238();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          swift_storeEnumTagMultiPayload();
LABEL_22:
          (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
          goto LABEL_23;
        }
LABEL_21:
        memcpy(a1, a2, *(void *)(v8 + 64));
        goto LABEL_22;
      case 0:
        uint64_t v7 = type metadata accessor for ScannableContent();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
LABEL_6:
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_23:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        if (swift_getEnumCaseMultiPayload() <= 1) {
          goto LABEL_13;
        }
        goto LABEL_21;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_25C076870()
{
  sub_25C074984(319, &qword_26A588E50, (uint64_t (*)(uint64_t))type metadata accessor for ScannableContent, MEMORY[0x263F8D8F0]);
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(v0 - 8) + 64;
    uint64_t v4 = v3;
    swift_getTupleTypeLayout2();
    int v5 = &v2;
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t sub_25C076940(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_25C076C74(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)(a1 + v9);
    uint64_t v11 = (char *)(a2 + v9);
    uint64_t v12 = sub_25C0EA5E8();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
    *(void *)&v10[*(int *)(v17 + 28)] = *(void *)&v11[*(int *)(v17 + 28)];
    uint64_t v18 = a3[6];
    id v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v14((char *)v20, 1, v12))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v19, v20, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      }
    }
    else
    {
      *id v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)(a1 + v22);
    id v24 = (void *)(a2 + v22);
    if (v14((char *)v24, 1, v12))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v23, v24, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_25C076C74(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25C076C80(uint64_t a1, int *a2)
{
  sub_25C076E30(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_25C0EA5E8();
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v5);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  swift_release();
  uint64_t v7 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v6(v7, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v5);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v5);
  }
  return result;
}

uint64_t sub_25C076E30(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25C076E3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_25C076C74(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = sub_25C0EA5E8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  *(void *)&v9[*(int *)(v15 + 28)] = *(void *)&v10[*(int *)(v15 + 28)];
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v13((char *)v18, 1, v11))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  if (v13((char *)v22, 1, v11))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v21, v22, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_25C077120(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_25C076C74(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_25C076E30(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = sub_25C0EA5E8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  *(void *)&v11[*(int *)(v19 + 28)] = *(void *)&v12[*(int *)(v19 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v20 = a3[6];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_25C02FBF0(a1 + v20, &qword_26A588E08);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v15((char *)v22, 1, v13))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v21, v22, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  int v27 = v15((char *)(a1 + v24), 1, v13);
  int v28 = v15(v26, 1, v13);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v25, v26, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v25, v13);
    goto LABEL_20;
  }
  if (v28)
  {
LABEL_20:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v25, v26, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
  return a1;
}

uint64_t sub_25C0774F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_25C0EA5E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  *(void *)&v7[*(int *)(v13 + 28)] = *(void *)&v8[*(int *)(v13 + 28)];
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  int v16 = (void *)(a2 + v14);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v11((char *)v16, 1, v9))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v15, v16, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  if (v11((char *)v21, 1, v9))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v20, v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_25C0777CC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_25C076E30(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25C0EA5E8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  *(void *)&v11[*(int *)(v19 + 28)] = *(void *)&v12[*(int *)(v19 + 28)];
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v20 = a3[6];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (char *)a2 + v20;
    sub_25C02FBF0(a1 + v20, &qword_26A588E08);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v15(v22, 1, v13))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v21, v22, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = (void *)(a1 + v25);
  int v27 = (char *)a2 + v25;
  int v28 = v15((char *)(a1 + v25), 1, v13);
  int v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_20;
  }
  if (v29)
  {
LABEL_20:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
  return a1;
}

uint64_t sub_25C077B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C077BA4);
}

uint64_t sub_25C077BA4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E38);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];

  return v15(v17, a2, v16);
}

uint64_t sub_25C077D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C077D34);
}

uint64_t sub_25C077D34(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E38);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E00);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

void sub_25C077EB4()
{
  sub_25C07803C(319, &qword_26A588E68, &qword_26A588E00, MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F)
  {
    sub_25C07803C(319, &qword_26A588E40, &qword_26A588E00, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_25C074984(319, &qword_26A588E70, MEMORY[0x263F17608], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_25C07803C(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25C07809C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0780B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0780D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_25C078144()
{
  unint64_t result = qword_26A588EC8;
  if (!qword_26A588EC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E10);
    sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588EC8);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  unint64_t v1 = (int *)type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_25C0EA5E8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
    }
  }
  else
  {
    swift_release();
  }
  unint64_t v8 = (id *)(v5 + v1[5]);
  type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v12 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v8, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
LABEL_10:
            uint64_t v11 = sub_25C0EA238();
            (*(void (**)(id *, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
            break;
          case 2u:
          case 3u:
LABEL_13:

            break;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 1:
      uint64_t v13 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v8, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_10;
          case 2u:
          case 3u:
            goto LABEL_13;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 0:
      uint64_t v10 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_10;
          case 2u:
          case 3u:
            goto LABEL_13;
          default:
            goto LABEL_15;
        }
      }
      break;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  swift_release();
  uint64_t v14 = (id *)(v5 + v1[6]);
  uint64_t v15 = type metadata accessor for ScannableContent();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v20 = sub_25C0EA238();
        (*(void (**)(id *, uint64_t))(*(void *)(v20 - 8) + 8))(v14, v20);
        break;
      case 2u:
      case 3u:

        break;
      default:
        break;
    }
  }
  uint64_t v16 = v5 + v1[7];
  swift_release();
  swift_release();
  uint64_t v17 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v18 = sub_25C0EA578();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25C078720()
{
  return sub_25C064DC4();
}

unint64_t sub_25C07877C()
{
  unint64_t result = qword_26A588ED8;
  if (!qword_26A588ED8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E00);
    sub_25C07B838(&qword_26A588EE0, MEMORY[0x263F17608]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588ED8);
  }
  return result;
}

unint64_t sub_25C078824()
{
  unint64_t result = qword_26A588EE8;
  if (!qword_26A588EE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E30);
    sub_25C07B838(&qword_26A588EF0, MEMORY[0x263F175F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588EE8);
  }
  return result;
}

void *sub_25C0788CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SensitiveContentRedactor(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_25C067608(v2);
}

unint64_t sub_25C07892C()
{
  unint64_t result = qword_26A588EF8;
  if (!qword_26A588EF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E98);
    sub_25C0789A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588EF8);
  }
  return result;
}

unint64_t sub_25C0789A8()
{
  unint64_t result = qword_26A588F00;
  if (!qword_26A588F00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E78);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E88);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E30);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E80);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E00);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588EB8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E10);
    sub_25C0583D0(&qword_26A588EC0, &qword_26A588EB8);
    sub_25C078144();
    swift_getOpaqueTypeConformance2();
    sub_25C07877C();
    swift_getOpaqueTypeConformance2();
    sub_25C078824();
    swift_getOpaqueTypeConformance2();
    sub_25C0583D0(&qword_26A588F08, &qword_26A588F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588F00);
  }
  return result;
}

uint64_t sub_25C078B5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SensitiveContentRedactor(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_25C067D30(v4, a1);
}

unint64_t sub_25C078BCC()
{
  unint64_t result = qword_26A588F28;
  if (!qword_26A588F28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588F20);
    sub_25C07B838(&qword_26A5884E0, (void (*)(uint64_t))type metadata accessor for InterventionView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588F28);
  }
  return result;
}

uint64_t sub_25C078C74@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for SensitiveContentRedactor(0);

  return sub_25C069BA4(a1);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v1 = (int *)type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_25C0EA5E8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
    }
  }
  else
  {
    swift_release();
  }
  unint64_t v8 = (id *)(v5 + v1[5]);
  type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v12 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v8, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
LABEL_10:
            uint64_t v11 = sub_25C0EA238();
            (*(void (**)(id *, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
            break;
          case 2u:
          case 3u:
LABEL_13:

            break;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 1:
      uint64_t v13 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v8, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_10;
          case 2u:
          case 3u:
            goto LABEL_13;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 0:
      uint64_t v10 = type metadata accessor for ScannableContent();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            goto LABEL_10;
          case 2u:
          case 3u:
            goto LABEL_13;
          default:
            goto LABEL_15;
        }
      }
      break;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  swift_release();
  uint64_t v14 = (id *)(v5 + v1[6]);
  uint64_t v15 = type metadata accessor for ScannableContent();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v20 = sub_25C0EA238();
        (*(void (**)(id *, uint64_t))(*(void *)(v20 - 8) + 8))(v14, v20);
        break;
      case 2u:
      case 3u:

        break;
      default:
        break;
    }
  }
  uint64_t v16 = v5 + v1[7];
  swift_release();
  swift_release();
  uint64_t v17 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v18 = sub_25C0EA578();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25C079224(unsigned char *a1)
{
  type metadata accessor for SensitiveContentRedactor(0);

  return sub_25C069DE4(a1);
}

unint64_t sub_25C079294()
{
  unint64_t result = qword_26A588F48;
  if (!qword_26A588F48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588F48);
  }
  return result;
}

unint64_t sub_25C079300()
{
  unint64_t result = qword_26A588F50;
  if (!qword_26A588F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588F50);
  }
  return result;
}

uint64_t sub_25C079354(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_25C0793BC()
{
  unint64_t result = qword_26A588F88;
  if (!qword_26A588F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588F88);
  }
  return result;
}

uint64_t sub_25C079414(char a1)
{
  char v1 = a1 & 1;
  type metadata accessor for SensitiveContentRedactor(0);

  return sub_25C0683E8(v1);
}

unint64_t sub_25C079484()
{
  unint64_t result = qword_26A588FA8;
  if (!qword_26A588FA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588FA0);
    sub_25C0794F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588FA8);
  }
  return result;
}

unint64_t sub_25C0794F8()
{
  unint64_t result = qword_26A588FB0;
  if (!qword_26A588FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588FB0);
  }
  return result;
}

unint64_t sub_25C07954C()
{
  unint64_t result = qword_26A588FC8;
  if (!qword_26A588FC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588FB8);
    sub_25C0794F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588FC8);
  }
  return result;
}

unint64_t sub_25C0795C8()
{
  unint64_t result = qword_26A588FD0;
  if (!qword_26A588FD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588FC0);
    sub_25C079484();
    sub_25C0794F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A588FD0);
  }
  return result;
}

uint64_t sub_25C079644()
{
  uint64_t v1 = type metadata accessor for ScannableContent();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)type metadata accessor for SensitiveContentRedactor(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v24 = *(void *)(*((void *)v6 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v9 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v10 = sub_25C0EA238();
      (*(void (**)(id *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      break;
    case 2u:
    case 3u:

      break;
    default:
      break;
  }
  uint64_t v11 = v0 + v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_25C0EA5E8();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v8, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v8, v12);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = (id *)(v11 + v6[5]);
  type metadata accessor for SensitiveContentRedactor.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
LABEL_13:
          uint64_t v16 = sub_25C0EA238();
          (*(void (**)(id *, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
          break;
        case 2u:
        case 3u:
LABEL_16:

          break;
        default:
          break;
      }
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_13;
        case 2u:
        case 3u:
          goto LABEL_16;
        default:
          break;
      }
    }
  }
  else if (!EnumCaseMultiPayload && !(*(unsigned int (**)(id *, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        goto LABEL_13;
      case 2u:
      case 3u:
        goto LABEL_16;
      default:
        break;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E28);
  swift_release();
  uint64_t v17 = (id *)(v11 + v6[6]);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v2 + 48))(v17, 1, v1))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v22 = sub_25C0EA238();
        (*(void (**)(id *, uint64_t))(*(void *)(v22 - 8) + 8))(v17, v22);
        break;
      case 2u:
      case 3u:

        break;
      default:
        break;
    }
  }
  uint64_t v18 = v11 + v6[7];
  swift_release();
  swift_release();
  uint64_t v19 = v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18) + 32);
  uint64_t v20 = sub_25C0EA578();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v8 + v24, v3 | v7 | 7);
}

uint64_t sub_25C079C00()
{
  uint64_t v2 = *(void *)(type metadata accessor for ScannableContent() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SensitiveContentRedactor(0) - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + (v6 & ~v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_25C03CC80;
  return sub_25C06A330((uint64_t)v9, v10, v11, v7, v8);
}

uint64_t sub_25C079D34()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25C079D6C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_25C03C050;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A589F50 + dword_26A589F50);
  return v6(a1, v4);
}

uint64_t sub_25C079E24(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25C079EF8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25C07A0B4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25C07A0B4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_25C079EF8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25C0EBE68();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25C07A110(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25C0EBFF8();
  if (!v8)
  {
    sub_25C0EC068();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25C0EC0C8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25C07A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25C07A110(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25C07A1A8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25C07A388(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25C07A388(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25C07A1A8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25C07A320(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25C0EBF88();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25C0EC068();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25C0EB8F8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25C0EC0C8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25C0EC068();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_25C07A320(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589000);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25C07A388(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589000);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25C0EC0C8();
  __break(1u);
  return result;
}

uint64_t sub_25C07A4D8()
{
  uint64_t v1 = (int *)type metadata accessor for SensitiveContentPolicyUpdater(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  sub_25C076E30(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  uint64_t v5 = v0 + v3 + v1[5];
  uint64_t v6 = sub_25C0EA5E8();
  uint64_t v7 = *(void *)(v6 - 8);
  int64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E60);
  swift_release();
  uint64_t v9 = v4 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v8(v9, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v4 + v1[7];
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }

  return MEMORY[0x270FA0238](v0, v3 + v12, v2 | 7);
}

uint64_t sub_25C07A6EC()
{
  uint64_t v2 = *(void *)(type metadata accessor for SensitiveContentPolicyUpdater(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25C03C050;
  return sub_25C06EC34(v3);
}

unint64_t sub_25C07A7B8()
{
  unint64_t result = qword_26A589058;
  if (!qword_26A589058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589018);
    sub_25C07A858();
    sub_25C0583D0(&qword_26A589088, &qword_26A589048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589058);
  }
  return result;
}

unint64_t sub_25C07A858()
{
  unint64_t result = qword_26A589060;
  if (!qword_26A589060)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589010);
    sub_25C07A8F8();
    sub_25C0583D0(&qword_26A589078, &qword_26A589080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589060);
  }
  return result;
}

unint64_t sub_25C07A8F8()
{
  unint64_t result = qword_26A589068;
  if (!qword_26A589068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589008);
    sub_25C0583D0(&qword_26A589050, &qword_26A589028);
    sub_25C0583D0(&qword_26A589070, &qword_26A589030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589068);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_25C07AA70(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a2;
  uint64_t v3 = type metadata accessor for ScannableContent();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588F38);
  uint64_t v5 = MEMORY[0x270FA5388](v71);
  uint64_t v70 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v69 = (uint64_t)&v63 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v67 = (uint64_t)&v63 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v65 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v63 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v64 = (uint64_t)&v63 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v63 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v63 = (uint64_t)&v63 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v63 - v22;
  uint64_t v24 = type metadata accessor for SensitiveContentRedactor.Mode(0);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  int v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v63 - v29;
  MEMORY[0x270FA5388](v28);
  size_t v32 = (char *)&v63 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890A0);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v36 = (char *)&v63 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t)&v36[*(int *)(v34 + 56)];
  sub_25C0780D4(a1, (uint64_t)v36, type metadata accessor for SensitiveContentRedactor.Mode);
  sub_25C0780D4(v74, v37, type metadata accessor for SensitiveContentRedactor.Mode);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25C0780D4((uint64_t)v36, (uint64_t)v30, type metadata accessor for SensitiveContentRedactor.Mode);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        int v27 = v30;
        goto LABEL_15;
      }
      sub_25C0516EC(v37, (uint64_t)v19, &qword_26A588E10);
      uint64_t v38 = v69;
      uint64_t v39 = v69 + *(int *)(v71 + 48);
      sub_25C0516EC((uint64_t)v30, v69, &qword_26A588E10);
      sub_25C02FB8C((uint64_t)v19, v39, &qword_26A588E10);
      uint64_t v40 = v73;
      uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      if (v41(v38, 1, v73) == 1)
      {
        sub_25C02FBF0((uint64_t)v19, &qword_26A588E10);
        if (v41(v39, 1, v40) == 1) {
          goto LABEL_19;
        }
        goto LABEL_28;
      }
      uint64_t v53 = v64;
      sub_25C02FB8C(v38, v64, &qword_26A588E10);
      if (v41(v39, 1, v40) == 1)
      {
        uint64_t v54 = (uint64_t)v19;
        goto LABEL_27;
      }
      uint64_t v57 = v66;
      sub_25C079354(v39, v66, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
      char v58 = sub_25C0EB7A8();
      sub_25C070810(v57, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0((uint64_t)v19, &qword_26A588E10);
      sub_25C070810(v53, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v38, &qword_26A588E10);
      if (v58) {
        goto LABEL_36;
      }
      goto LABEL_29;
    case 2u:
      sub_25C0780D4((uint64_t)v36, (uint64_t)v27, type metadata accessor for SensitiveContentRedactor.Mode);
      uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A588E20) + 48);
      int v43 = v27[v42];
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_15;
      }
      int v44 = *(unsigned __int8 *)(v37 + v42);
      uint64_t v45 = v68;
      sub_25C0516EC(v37, v68, &qword_26A588E10);
      uint64_t v46 = v70;
      uint64_t v47 = v70 + *(int *)(v71 + 48);
      sub_25C0516EC((uint64_t)v27, v70, &qword_26A588E10);
      sub_25C02FB8C(v45, v47, &qword_26A588E10);
      uint64_t v48 = v73;
      uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      if (v49(v46, 1, v73) == 1)
      {
        sub_25C02FBF0(v45, &qword_26A588E10);
        if (v49(v47, 1, v48) == 1)
        {
          sub_25C02FBF0(v46, &qword_26A588E10);
LABEL_34:
          sub_25C070810((uint64_t)v36, type metadata accessor for SensitiveContentRedactor.Mode);
          return v43 ^ v44 ^ 1u;
        }
LABEL_24:
        sub_25C02FBF0(v46, &qword_26A588F38);
        goto LABEL_29;
      }
      uint64_t v55 = v65;
      sub_25C02FB8C(v46, v65, &qword_26A588E10);
      if (v49(v47, 1, v48) == 1)
      {
        sub_25C02FBF0(v45, &qword_26A588E10);
        sub_25C070810(v55, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        goto LABEL_24;
      }
      uint64_t v59 = v66;
      sub_25C079354(v47, v66, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
      char v60 = sub_25C0EB7A8();
      sub_25C070810(v59, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v45, &qword_26A588E10);
      sub_25C070810(v55, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v46, &qword_26A588E10);
      if (v60) {
        goto LABEL_34;
      }
      goto LABEL_29;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_36;
      }
      goto LABEL_16;
    default:
      sub_25C0780D4((uint64_t)v36, (uint64_t)v32, type metadata accessor for SensitiveContentRedactor.Mode);
      if (swift_getEnumCaseMultiPayload())
      {
        int v27 = v32;
LABEL_15:
        sub_25C02FBF0((uint64_t)v27, &qword_26A588E10);
LABEL_16:
        sub_25C02FBF0((uint64_t)v36, &qword_26A5890A0);
        return 0;
      }
      sub_25C0516EC(v37, (uint64_t)v23, &qword_26A588E10);
      uint64_t v38 = v67;
      uint64_t v50 = v67 + *(int *)(v71 + 48);
      sub_25C0516EC((uint64_t)v32, v67, &qword_26A588E10);
      sub_25C02FB8C((uint64_t)v23, v50, &qword_26A588E10);
      uint64_t v51 = v73;
      uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      if (v52(v38, 1, v73) == 1)
      {
        sub_25C02FBF0((uint64_t)v23, &qword_26A588E10);
        if (v52(v50, 1, v51) == 1)
        {
LABEL_19:
          sub_25C02FBF0(v38, &qword_26A588E10);
          goto LABEL_36;
        }
LABEL_28:
        sub_25C02FBF0(v38, &qword_26A588F38);
        goto LABEL_29;
      }
      uint64_t v53 = v63;
      sub_25C02FB8C(v38, v63, &qword_26A588E10);
      if (v52(v50, 1, v51) == 1)
      {
        uint64_t v54 = (uint64_t)v23;
LABEL_27:
        sub_25C02FBF0(v54, &qword_26A588E10);
        sub_25C070810(v53, (uint64_t (*)(void))type metadata accessor for ScannableContent);
        goto LABEL_28;
      }
      uint64_t v61 = v66;
      sub_25C079354(v50, v66, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C07B838(&qword_26A588ED0, (void (*)(uint64_t))type metadata accessor for ScannableContent);
      char v62 = sub_25C0EB7A8();
      sub_25C070810(v61, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0((uint64_t)v23, &qword_26A588E10);
      sub_25C070810(v53, (uint64_t (*)(void))type metadata accessor for ScannableContent);
      sub_25C02FBF0(v38, &qword_26A588E10);
      if ((v62 & 1) == 0)
      {
LABEL_29:
        sub_25C070810((uint64_t)v36, type metadata accessor for SensitiveContentRedactor.Mode);
        return 0;
      }
LABEL_36:
      sub_25C070810((uint64_t)v36, type metadata accessor for SensitiveContentRedactor.Mode);
      return 1;
  }
}

unint64_t sub_25C07B50C()
{
  unint64_t result = qword_26A591510[0];
  if (!qword_26A591510[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A591510);
  }
  return result;
}

unint64_t sub_25C07B560()
{
  unint64_t result = qword_26A5890A8;
  if (!qword_26A5890A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5890A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SensitiveContentPolicyKey()
{
  return &type metadata for SensitiveContentPolicyKey;
}

unint64_t sub_25C07B5C8()
{
  unint64_t result = qword_26A5890B0;
  if (!qword_26A5890B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588F30);
    sub_25C07B668();
    sub_25C0583D0(&qword_26A5890D0, &qword_26A5890D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5890B0);
  }
  return result;
}

unint64_t sub_25C07B668()
{
  unint64_t result = qword_26A5890B8;
  if (!qword_26A5890B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588EB0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588EA0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588F20);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588E98);
    sub_25C07892C();
    swift_getOpaqueTypeConformance2();
    sub_25C078BCC();
    swift_getOpaqueTypeConformance2();
    sub_25C0583D0(&qword_26A5890C0, &qword_26A5890C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5890B8);
  }
  return result;
}

unint64_t sub_25C07B798()
{
  unint64_t result = qword_26A5890E0;
  if (!qword_26A5890E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5890E8);
    sub_25C0583D0(&qword_26A589050, &qword_26A589028);
    sub_25C07A7B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5890E0);
  }
  return result;
}

uint64_t sub_25C07B838(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C07B884()
{
  return sub_25C0EA998();
}

uint64_t sub_25C07B8A8(uint64_t a1)
{
  uint64_t v2 = sub_25C0EA748();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_25C0EA9A8();
}

uint64_t (*sub_25C07B970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>))()
{
  sub_25C0EAFB8();
  swift_getWitnessTable();
  uint64_t v10 = (uint64_t *)((char *)a5 + *(int *)(_s14descr27097BA99O4ListVMa() + 36));
  *uint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = (uint64_t (*)())swift_allocObject();
  *((void *)result + 2) = a3;
  *((void *)result + 3) = a4;
  *((void *)result + 4) = a1;
  *((void *)result + 5) = a2;
  *a5 = sub_25C07BAC4;
  a5[1] = result;
  return result;
}

uint64_t _s14descr27097BA99O4ListVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25C07BA8C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25C07BAC4()
{
  return sub_25C0EAFA8();
}

uint64_t sub_25C07BB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(void))MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v15 - v10;
  v9();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_25C07BC58@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v85 = a1;
  uint64_t v3 = sub_25C0EA748();
  uint64_t v89 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v88 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v87 = (uint64_t)&v62 - v6;
  uint64_t v7 = sub_25C0EA938();
  uint64_t v86 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v83 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25C0EADB8();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = *(void *)(*(void *)(a1 + 16) - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v76 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v95 = v15;
  uint64_t v96 = v12;
  uint64_t v16 = v15;
  uint64_t v71 = v15;
  uint64_t v17 = v12;
  uint64_t v69 = v12;
  uint64_t v97 = v14;
  uint64_t v98 = MEMORY[0x263F19D08];
  uint64_t v18 = v14;
  uint64_t v72 = v14;
  uint64_t v19 = MEMORY[0x263F19D08];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v79 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v70 = (char *)&v62 - v21;
  uint64_t v95 = v16;
  uint64_t v96 = v17;
  uint64_t v97 = v18;
  uint64_t v98 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = sub_25C089404(&qword_26A5890F8, MEMORY[0x263F18FD0]);
  uint64_t v95 = OpaqueTypeMetadata2;
  uint64_t v96 = v7;
  uint64_t v64 = OpaqueTypeMetadata2;
  uint64_t v63 = v7;
  uint64_t v97 = OpaqueTypeConformance2;
  uint64_t v98 = v23;
  uint64_t v24 = OpaqueTypeConformance2;
  uint64_t v66 = OpaqueTypeConformance2;
  uint64_t v65 = v23;
  uint64_t v68 = swift_getOpaqueTypeMetadata2();
  uint64_t v74 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v26 = (char *)&v62 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589100);
  uint64_t v27 = sub_25C0EA8F8();
  uint64_t v82 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (void (**)(char *, uint64_t))((char *)&v62 - v28);
  uint64_t v95 = OpaqueTypeMetadata2;
  uint64_t v96 = v7;
  uint64_t v97 = v24;
  uint64_t v98 = v23;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v30;
  uint64_t v31 = sub_25C0583D0(&qword_26A589108, &qword_26A589100);
  uint64_t v93 = v30;
  uint64_t v94 = v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v84 = v27;
  uint64_t v95 = v27;
  uint64_t v96 = MEMORY[0x263F1B440];
  uint64_t v78 = WitnessTable;
  uint64_t v97 = WitnessTable;
  uint64_t v98 = MEMORY[0x263F1B420];
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v75 = (char *)&v62 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v77 = (char *)&v62 - v38;
  uint64_t v39 = v76;
  (*v92)(v37);
  uint64_t v40 = v73;
  sub_25C0EADA8();
  uint64_t v41 = v70;
  uint64_t v42 = v71;
  uint64_t v43 = v69;
  sub_25C0EB268();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v40, v43);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v39, v42);
  int v44 = v83;
  sub_25C0EA928();
  uint64_t v45 = v64;
  uint64_t v46 = v63;
  sub_25C0EB078();
  v86[1](v44, v46);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v45);
  sub_25C0EB2F8();
  uint64_t v86 = v29;
  uint64_t v47 = v68;
  sub_25C0EB178();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v26, v47);
  uint64_t v48 = v87;
  sub_25C083700(v87);
  uint64_t v49 = v88;
  uint64_t v50 = v89;
  uint64_t v51 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x263F184F8], v90);
  LOBYTE(v30) = sub_25C0EA738();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v50 + 8);
  v52(v49, v51);
  v52((char *)v48, v51);
  uint64_t v53 = 0;
  if ((v30 & 1) == 0)
  {
    id v54 = objc_msgSend(self, sel_systemBackgroundColor);
    uint64_t v53 = MEMORY[0x26117CC30](v54);
  }
  uint64_t v95 = v53;
  uint64_t v55 = v75;
  uint64_t v56 = v84;
  uint64_t v57 = (char *)v86;
  sub_25C0EB158();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v57, v56);
  char v58 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  uint64_t v59 = v77;
  v58(v77, v55, v33);
  char v60 = *(void (**)(char *, uint64_t))(v34 + 8);
  v60(v55, v33);
  v58(v91, v59, v33);
  return ((uint64_t (*)(char *, uint64_t))v60)(v59, v33);
}

uint64_t sub_25C07C590@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 64) = 0;
  *(void *)(a5 + 72) = 0;
  *(void *)&long long v14 = a3;
  *((void *)&v14 + 1) = MEMORY[0x263F1BA08];
  uint64_t v15 = a4;
  uint64_t v16 = MEMORY[0x263F1BA00];
  uint64_t v8 = (uint64_t *)(a5 + *(int *)(_s14descr27097BA99O7SectionVMa() + 60));
  uint64_t *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  sub_25C0E9180((uint64_t)&v14);
  uint64_t v9 = v15;
  uint64_t v10 = v16;
  uint64_t v11 = v17;
  uint64_t v12 = v18;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v9;
  *(void *)(a5 + 24) = v10;
  *(void *)(a5 + 32) = v11;
  *(void *)(a5 + 40) = v12;
  *(void *)(a5 + 48) = a1;
  *(void *)(a5 + 56) = a2;
  uint64_t result = sub_25C0839A8(*(void *)(a5 + 64));
  *(void *)(a5 + 64) = 0;
  *(void *)(a5 + 72) = 0;
  return result;
}

uint64_t sub_25C07C668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  uint64_t v6 = (uint64_t *)(a3 + *(int *)(_s14descr27097BA99O7SectionVMa() + 60));
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  *(void *)(a3 + 48) = a1;
  *(void *)(a3 + 56) = a2;
  uint64_t result = sub_25C0839A8(*(void *)(a3 + 64));
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  return result;
}

uint64_t sub_25C07C718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v151 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589110);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_25C0EB4E8();
  uint64_t v127 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v126 = (char *)&v123 - v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589118);
  uint64_t v162 = v5;
  uint64_t v7 = sub_25C0EA8F8();
  uint64_t v129 = *(void **)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v128 = (char *)&v123 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589120);
  uint64_t v161 = v7;
  uint64_t v9 = sub_25C0EA8F8();
  uint64_t v131 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v130 = (char *)&v123 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589128);
  uint64_t v160 = v9;
  uint64_t v11 = sub_25C0EA8F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589130);
  uint64_t v159 = v11;
  uint64_t v12 = sub_25C0EA8F8();
  uint64_t v134 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v133 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v132 = (char *)&v123 - v15;
  uint64_t v16 = sub_25C0EAB58();
  uint64_t v146 = *(void *)(v16 - 8);
  uint64_t v147 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v141 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25C0EA748();
  uint64_t v144 = *(void *)(v18 - 8);
  uint64_t v145 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v143 = (uint64_t)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589138);
  MEMORY[0x270FA5388](v20 - 8);
  *(void *)&long long v163 = a1;
  unint64_t v22 = *(void *)(a1 + 24);
  uint64_t v142 = v3;
  uint64_t v23 = v4;
  unint64_t v139 = v22;
  uint64_t v140 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_25C0EB4E8();
  unint64_t v137 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v136 = (char *)&v123 - v25;
  uint64_t v156 = v26;
  uint64_t v27 = sub_25C0EA8F8();
  uint64_t v135 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v138 = (char *)&v123 - v28;
  uint64_t v155 = v29;
  uint64_t v30 = sub_25C0EA8F8();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (void (**)(char *, uint64_t))((char *)&v123 - v32);
  uint64_t v154 = v34;
  uint64_t v153 = sub_25C0EA8F8();
  uint64_t v35 = sub_25C0EA8F8();
  uint64_t v36 = *(char **)(v35 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v123 - v40;
  uint64_t v157 = v42;
  uint64_t v150 = v12;
  uint64_t v43 = sub_25C0EAD38();
  uint64_t v148 = *(void *)(v43 - 8);
  uint64_t v149 = v43;
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  uint64_t v158 = (char *)&v123 - v45;
  if (v152[8])
  {
    uint64_t v126 = (char *)&v123;
    uint64_t v131 = v31;
    uint64_t v46 = v152[9];
    uint64_t v128 = v39;
    uint64_t v124 = v152[6];
    uint64_t v133 = v41;
    uint64_t v47 = v152[7];
    MEMORY[0x270FA5388](v44);
    uint64_t v132 = v36;
    uint64_t v48 = (char *)v139;
    *(&v123 - 6) = v23;
    *(&v123 - 5) = (uint64_t)v48;
    uint64_t v49 = *(void **)(v163 + 32);
    uint64_t v50 = *(void *)(v163 + 40);
    uint64_t v127 = v33;
    uint64_t v52 = (void (*)(uint64_t))v51;
    uint64_t v125 = v51;
    unint64_t v53 = sub_25C0839BC();
    uint64_t v134 = v46;
    swift_retain();
    int v121 = v49;
    uint64_t v122 = v50;
    uint64_t v129 = v49;
    uint64_t v130 = (char *)v53;
    uint64_t v119 = v48;
    unint64_t v120 = v53;
    id v54 = v136;
    sub_25C07DAC4(v124, v47, (uint64_t)sub_25C0839B8, (uint64_t)(&v123 - 8), v52);
    uint64_t v55 = sub_25C0EB008();
    uint64_t v56 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v140, 1, 1, v55);
    unint64_t v183 = v53;
    uint64_t v184 = v49;
    uint64_t v185 = v50;
    uint64_t v142 = MEMORY[0x263F1B7F8];
    uint64_t v57 = v156;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v59 = v138;
    sub_25C0EB248();
    sub_25C02FBF0(v56, &qword_26A589138);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v54, v57);
    uint64_t v60 = v143;
    sub_25C083700(v143);
    unint64_t v152 = (void *)sub_25C0583D0(&qword_26A589148, &qword_26A589118);
    uint64_t v181 = WitnessTable;
    uint64_t v182 = v152;
    uint64_t v61 = v155;
    uint64_t v62 = swift_getWitnessTable();
    uint64_t v63 = (char *)v127;
    sub_25C07DBF0();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v60, v145);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v59, v61);
    uint64_t v64 = v141;
    sub_25C0EAB48();
    uint64_t v145 = sub_25C0583D0(&qword_26A589150, &qword_26A589120);
    uint64_t v179 = v62;
    uint64_t v180 = v145;
    uint64_t v65 = v154;
    uint64_t v66 = swift_getWitnessTable();
    uint64_t v67 = (uint64_t)v128;
    sub_25C0EB128();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v64, v147);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v63, v65);
    uint64_t v147 = sub_25C0583D0(&qword_26A589158, &qword_26A589128);
    uint64_t v177 = v66;
    uint64_t v178 = v147;
    uint64_t v68 = swift_getWitnessTable();
    uint64_t v69 = sub_25C0583D0(&qword_26A589160, &qword_26A589130);
    uint64_t v175 = v68;
    uint64_t v176 = v69;
    uint64_t v70 = v157;
    uint64_t v146 = swift_getWitnessTable();
    uint64_t v72 = v132;
    uint64_t v71 = v133;
    uint64_t v73 = (void (*)(char *, uint64_t, uint64_t))*((void *)v132 + 2);
    v73(v133, v67, v70);
    uint64_t v74 = (void (*)(uint64_t, uint64_t))*((void *)v72 + 1);
    v74(v67, v70);
    v73((char *)v67, (uint64_t)v71, v70);
    uint64_t v172 = v130;
    uint64_t v173 = v129;
    uint64_t v174 = MEMORY[0x263F1BA00];
    uint64_t v170 = swift_getWitnessTable();
    uint64_t v171 = v152;
    uint64_t v168 = swift_getWitnessTable();
    uint64_t v169 = v145;
    uint64_t v166 = swift_getWitnessTable();
    uint64_t v167 = v147;
    uint64_t v164 = swift_getWitnessTable();
    uint64_t v165 = v69;
    swift_getWitnessTable();
    sub_25C07DD6C(v67, v70);
    v74(v67, v70);
    v74((uint64_t)v71, v70);
    sub_25C0839A8(v125);
  }
  else
  {
    uint64_t v75 = v152;
    uint64_t v76 = v152[6];
    MEMORY[0x270FA5388](v44);
    unint64_t v77 = v139;
    *(&v123 - 6) = v23;
    *(&v123 - 5) = v77;
    uint64_t v78 = *(char **)(v163 + 32);
    unint64_t v139 = *(void *)(v163 + 40);
    uint64_t v119 = v78;
    unint64_t v120 = v139;
    int v121 = v75;
    unint64_t v79 = sub_25C0839BC();
    uint64_t v80 = v126;
    uint64_t v81 = v76;
    unint64_t v82 = v79;
    unint64_t v137 = v79;
    uint64_t v138 = v78;
    sub_25C07DE64(v81);
    uint64_t v83 = sub_25C0EB008();
    uint64_t v84 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v140, 1, 1, v83);
    unint64_t v228 = v82;
    __int16 v229 = v78;
    uint64_t v230 = MEMORY[0x263F1BA00];
    uint64_t v142 = MEMORY[0x263F1B7F8];
    uint64_t v85 = v162;
    uint64_t v86 = swift_getWitnessTable();
    uint64_t v87 = v128;
    sub_25C0EB248();
    sub_25C02FBF0(v84, &qword_26A589138);
    v127[1](v80, v85);
    uint64_t v88 = v143;
    sub_25C083700(v143);
    unint64_t v152 = (void *)sub_25C0583D0(&qword_26A589148, &qword_26A589118);
    uint64_t v226 = v86;
    uint64_t v227 = v152;
    uint64_t v89 = v161;
    uint64_t v90 = swift_getWitnessTable();
    uint64_t v91 = v130;
    sub_25C07DBF0();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v88, v145);
    ((void (*)(char *, uint64_t))v129[1])(v87, v89);
    uint64_t v92 = v141;
    sub_25C0EAB48();
    uint64_t v145 = sub_25C0583D0(&qword_26A589150, &qword_26A589120);
    uint64_t v224 = v90;
    uint64_t v225 = v145;
    uint64_t v93 = v160;
    uint64_t v94 = swift_getWitnessTable();
    uint64_t v95 = (uint64_t)v133;
    sub_25C0EB128();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v92, v147);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v91, v93);
    uint64_t v147 = sub_25C0583D0(&qword_26A589158, &qword_26A589128);
    uint64_t v222 = v94;
    uint64_t v223 = v147;
    uint64_t v96 = swift_getWitnessTable();
    uint64_t v97 = sub_25C0583D0(&qword_26A589160, &qword_26A589130);
    uint64_t v220 = v96;
    uint64_t v221 = v97;
    uint64_t v98 = v150;
    uint64_t v146 = swift_getWitnessTable();
    uint64_t v99 = v134;
    uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 16);
    uint64_t v101 = v132;
    v100(v132, v95, v98);
    uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v102(v95, v98);
    v100((char *)v95, (uint64_t)v101, v98);
    unint64_t v217 = v137;
    uint64_t v218 = v138;
    unint64_t v219 = v139;
    uint64_t v215 = swift_getWitnessTable();
    uint64_t v216 = v152;
    uint64_t v213 = swift_getWitnessTable();
    uint64_t v214 = v145;
    uint64_t v211 = swift_getWitnessTable();
    uint64_t v212 = v147;
    uint64_t v209 = swift_getWitnessTable();
    uint64_t v210 = v97;
    uint64_t v103 = v157;
    swift_getWitnessTable();
    sub_25C07DF34(v95, v103, v98);
    v102(v95, v98);
    v102((uint64_t)v101, v98);
  }
  unint64_t v104 = sub_25C0839BC();
  unint64_t v207 = v104;
  long long v163 = *(_OWORD *)(v163 + 32);
  long long v208 = v163;
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v106 = sub_25C0583D0(&qword_26A589148, &qword_26A589118);
  uint64_t v205 = v105;
  uint64_t v206 = v106;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = sub_25C0583D0(&qword_26A589150, &qword_26A589120);
  uint64_t v203 = v107;
  uint64_t v204 = v108;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v110 = sub_25C0583D0(&qword_26A589158, &qword_26A589128);
  uint64_t v201 = v109;
  uint64_t v202 = v110;
  uint64_t v111 = swift_getWitnessTable();
  uint64_t v112 = sub_25C0583D0(&qword_26A589160, &qword_26A589130);
  uint64_t v199 = v111;
  uint64_t v200 = v112;
  uint64_t v113 = swift_getWitnessTable();
  unint64_t v196 = v104;
  uint64_t v197 = v163;
  uint64_t v198 = MEMORY[0x263F1BA00];
  uint64_t v194 = swift_getWitnessTable();
  uint64_t v195 = v106;
  uint64_t v192 = swift_getWitnessTable();
  uint64_t v193 = v108;
  uint64_t v190 = swift_getWitnessTable();
  uint64_t v191 = v110;
  uint64_t v188 = swift_getWitnessTable();
  uint64_t v189 = v112;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v186 = v113;
  uint64_t v187 = v114;
  uint64_t v115 = v149;
  swift_getWitnessTable();
  uint64_t v116 = v148;
  uint64_t v117 = v158;
  (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v151, v158, v115);
  return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v117, v115);
}

uint64_t sub_25C07D97C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = *(void *)(v1 + 8);
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25C026FAC();
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    sub_25C0EAF88();
    uint64_t v9 = sub_25C0EB028();
    uint64_t v11 = v10;
    char v13 = v12;
    swift_release();
    sub_25C05CED4(v4, v6, v8);
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_25C0EB018();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19 & 1;
    sub_25C05CED4(v9, v11, v13 & 1);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    uint64_t v20 = 0;
    uint64_t v18 = 0;
  }
  *a1 = v14;
  a1[1] = v16;
  a1[2] = v20;
  a1[3] = v18;
  return result;
}

uint64_t sub_25C07DAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = v8(v7);
  a5(v9);
  return sub_25C0EB4D8();
}

uint64_t sub_25C07DBF0()
{
  uint64_t v0 = sub_25C0EA748();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F184F8], v0);
  char v4 = sub_25C0EA738();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = 0;
  if ((v4 & 1) == 0)
  {
    id v6 = objc_msgSend(self, sel_systemGray6Color);
    uint64_t v5 = MEMORY[0x26117CC30](v6);
  }
  v8[1] = v5;
  sub_25C0EB118();
  return swift_release();
}

uint64_t sub_25C07DD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EAD18();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_25C0EAD28();
}

uint64_t sub_25C07DE64(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  v2(v1);
  return sub_25C0EB4C8();
}

uint64_t sub_25C07DF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25C0EAD18();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_25C0EAD28();
}

uint64_t sub_25C07E030@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2;
  uint64_t v16 = (int *)_s14descr27097BA99O3RowVMa();
  uint64_t result = sub_25C0516EC(a3, a9 + v16[5], &qword_26A589168);
  uint64_t v18 = a9 + v16[6];
  *(void *)uint64_t v18 = a4;
  *(void *)(v18 + 8) = a5;
  *(void *)(v18 + 16) = a6;
  *(unsigned char *)(v18 + 24) = a7;
  *(unsigned char *)(a9 + v16[7]) = a8;
  return result;
}

uint64_t sub_25C07E0C8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589178);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589180);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589188);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = _s14descr27097BA99O3RowVMa();
  if (*(unsigned char *)(v2 + *(int *)(v16 + 28)) == 1)
  {
    uint64_t v17 = v16;
    uint64_t v36 = v13;
    uint64_t v37 = v7;
    uint64_t v38 = a1;
    sub_25C07E470(v2, (uint64_t)v6);
    id v18 = sub_25C0E893C(*(void *)v2, *(unsigned char *)(v2 + 8));
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v35 = v15;
    if (v18)
    {
      uint64_t v20 = sub_25C0EB858();
      uint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v22 = 0;
    }
    sub_25C02FB8C((uint64_t)v6, (uint64_t)v9, &qword_26A589178);

    uint64_t v25 = (uint64_t *)&v9[*(int *)(v37 + 36)];
    *uint64_t v25 = KeyPath;
    v25[1] = v20;
    void v25[2] = v22;
    sub_25C02FBF0((uint64_t)v6, &qword_26A589178);
    uint64_t v26 = v2 + *(int *)(v17 + 24);
    long long v27 = *(_OWORD *)v26;
    uint64_t v28 = *(void *)(v26 + 16);
    LOBYTE(v26) = *(unsigned char *)(v26 + 24);
    long long v40 = v27;
    uint64_t v41 = v28;
    char v42 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
    sub_25C0EA718();
    char v29 = *(unsigned char *)(v2 + 8);
    *(void *)&long long v40 = *(void *)v2;
    BYTE8(v40) = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589190);
    sub_25C083B98();
    sub_25C08427C();
    uint64_t v30 = v36;
    sub_25C0EB1C8();
    swift_release();
    swift_release();
    sub_25C02FBF0((uint64_t)v9, &qword_26A589180);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    uint64_t v32 = v35;
    v31(v35, v30, v10);
    uint64_t v33 = v38;
    v31(v38, v32, v10);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v33, 0, 1, v10);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
    return v23((uint64_t)a1, 1, 1, v10);
  }
}

uint64_t sub_25C07E470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v284 = a2;
  uint64_t v255 = sub_25C0EADF8();
  uint64_t v242 = *(void *)(v255 - 8);
  MEMORY[0x270FA5388](v255);
  char v241 = (char *)&v227 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25C0EAD58();
  MEMORY[0x270FA5388](v4 - 8);
  char v240 = (char *)&v227 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893C0);
  uint64_t v6 = MEMORY[0x270FA5388](v247);
  v239 = (char *)&v227 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v250 = (char *)&v227 - v8;
  uint64_t v246 = sub_25C0EA328();
  uint64_t v237 = *(void *)(v246 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v246);
  uint64_t v248 = (char *)&v227 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v245 = (char *)&v227 - v11;
  uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893C8);
  uint64_t v12 = MEMORY[0x270FA5388](v232);
  uint64_t v233 = (char *)&v227 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v235 = (uint64_t)&v227 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893D0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v249 = (char *)&v227 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589280);
  uint64_t v238 = *(void *)(v253 - 8);
  MEMORY[0x270FA5388](v253);
  v236 = (char *)&v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893D8);
  uint64_t v244 = *(void *)(v256 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v256);
  uint64_t v234 = (char *)&v227 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  char v243 = (char *)&v227 - v20;
  uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893E0);
  MEMORY[0x270FA5388](v251);
  v252 = (char *)&v227 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589278);
  MEMORY[0x270FA5388](v259);
  uint64_t v254 = (char *)&v227 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893E8);
  MEMORY[0x270FA5388](v257);
  uint64_t v258 = (__n128 *)((char *)&v227 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589238);
  MEMORY[0x270FA5388](v277);
  uint64_t v260 = (char *)&v227 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589218);
  uint64_t v263 = *(void *)(v25 - 8);
  uint64_t v264 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v262 = (char *)&v227 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v268 = (uint64_t (*)(void))__swift_instantiateConcreteTypeFromMangledName(&qword_26A589208);
  uint64_t v27 = MEMORY[0x270FA5388](v268);
  int v261 = (char *)&v227 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v265 = (uint64_t)&v227 - v29;
  uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893F0);
  MEMORY[0x270FA5388](v266);
  uint64_t v267 = (uint64_t)&v227 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891F8);
  MEMORY[0x270FA5388](v272);
  uint64_t v32 = (char *)&v227 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)&v227 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5893F8);
  MEMORY[0x270FA5388](v279);
  uint64_t v37 = (char *)&v227 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589400);
  MEMORY[0x270FA5388](v274);
  uint64_t v276 = (uint64_t)&v227 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589408);
  MEMORY[0x270FA5388](v271);
  uint64_t v283 = (uint64_t (*)())((char *)&v227 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891D0);
  MEMORY[0x270FA5388](v275);
  uint64_t v273 = (char *)&v227 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891C0);
  MEMORY[0x270FA5388](v41);
  uint64_t v278 = (char *)&v227 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v281 = (uint64_t (*)(void))_s14descr27097BA99O3RowVMa();
  uint64_t v43 = *((void *)v281 - 1);
  uint64_t v44 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v281);
  uint64_t v45 = (char *)&v227 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a1;
  int v47 = *(unsigned __int8 *)(a1 + 8);
  unint64_t v269 = *(void *)a1;
  LODWORD(v270) = v47;
  uint64_t v48 = sub_25C0E8AAC(v269, v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589410);
  uint64_t v286 = v48;
  uint64_t v49 = swift_dynamicCastClass();
  uint64_t v282 = v37;
  uint64_t v280 = v41;
  unint64_t v285 = v46;
  if (v49)
  {
    uint64_t v50 = v49;
    int v268 = (uint64_t (*)(void))_s14descr27097BA99O3RowVMa;
    sub_25C0891F8(v46, (uint64_t)&v227 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
    sub_25C0EBAD8();
    swift_retain_n();
    uint64_t v51 = sub_25C0EBAC8();
    unint64_t v52 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v53 = (v44 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    uint64_t v55 = MEMORY[0x263F8F500];
    *(void *)(v54 + 16) = v51;
    *(void *)(v54 + 24) = v55;
    sub_25C089264((uint64_t)v45, v54 + v52);
    *(void *)(v54 + v53) = v50;
    sub_25C0891F8(v285, (uint64_t)v45, v268);
    swift_retain();
    uint64_t v56 = sub_25C0EBAC8();
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v56;
    *(void *)(v57 + 24) = MEMORY[0x263F8F500];
    sub_25C089264((uint64_t)v45, v57 + v52);
    *(void *)(v57 + v53) = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588770);
    sub_25C0EB478();
    __n128 v58 = v291;
    long long v59 = v292;
    uint64_t v60 = (__n128 *)(v285 + *((int *)v281 + 6));
    __n128 v61 = *v60;
    unint64_t v62 = v60[1].n128_u64[0];
    LOBYTE(v60) = v60[1].n128_u8[8];
    __n128 v297 = v61;
    *(void *)&long long v298 = v62;
    BYTE8(v298) = (_BYTE)v60;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
    sub_25C0EA718();
    sub_25C0D29DC(v269, v270, v58.n128_i64[0], v58.n128_i64[1], v59, *((uint64_t *)&v59 + 1), *(uint64_t *)v287, *(uint64_t *)&v287[8], (uint64_t)&v297, *(uint64_t *)&v287[16], v287[24]);
    *(void *)uint64_t v287 = v297.n128_u64[0];
    *(void *)&v287[8] = v297.n128_u8[8];
    *(_OWORD *)&v287[16] = v298;
    *(_OWORD *)&v287[32] = v299;
    *(void *)&v287[48] = v300;
    *(_OWORD *)&v287[56] = v301;
    uint64_t v288 = v302;
    uint64_t v289 = v303;
    __int16 v290 = v304;
    sub_25C08944C((uint64_t)&v297);
    sub_25C083D84();
    sub_25C0EAD28();
    uint64_t v63 = *(void *)&v295[16];
    char v64 = v295[24];
    char v65 = v296;
    long long v66 = v292;
    uint64_t v67 = v283;
    *(__n128 *)uint64_t v283 = v291;
    *((_OWORD *)v67 + 1) = v66;
    long long v68 = v294;
    *((_OWORD *)v67 + 2) = v293;
    *((_OWORD *)v67 + 3) = v68;
    *((_OWORD *)v67 + 4) = *(_OWORD *)v295;
    *((void *)v67 + 10) = v63;
    *((unsigned char *)v67 + 88) = v64;
    *((unsigned char *)v67 + 89) = v65;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891E0);
    sub_25C083D5C();
    sub_25C083DD8();
    uint64_t v69 = (uint64_t)v273;
    sub_25C0EAD28();
    sub_25C02FB8C(v69, v276, &qword_26A5891D0);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v70 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v69, &qword_26A5891D0);
    sub_25C02FB8C(v70, (uint64_t)v282, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release_n();
    uint64_t v71 = v70;
LABEL_5:
    sub_25C02FBF0(v71, &qword_26A5891C0);
    uint64_t v88 = &v297;
    return sub_25C0894BC((uint64_t)v88);
  }
  uint64_t v228 = v44;
  uint64_t v229 = (uint64_t)&v227 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = v32;
  char v231 = v35;
  uint64_t v72 = v283;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589418);
  if (swift_dynamicCastClass())
  {
    uint64_t v73 = v281;
    uint64_t v74 = v285;
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
    uint64_t v76 = (uint64_t)v231;
    MEMORY[0x26117CDA0](v75);
    swift_getAtKeyPath();
    sub_25C083AD0(v76);
    uint64_t v77 = (uint64_t)v282;
    uint64_t v78 = v74 + *((int *)v73 + 6);
    long long v79 = *(_OWORD *)v78;
    uint64_t v80 = *(void *)(v78 + 16);
    LOBYTE(v78) = *(unsigned char *)(v78 + 24);
    *(_OWORD *)uint64_t v287 = v79;
    *(void *)&v287[16] = v80;
    v287[24] = v78;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
    sub_25C0EA718();
    sub_25C0D2A90(v269, v270, v291.n128_u64[0], v291.n128_u64[1], v292, BYTE8(v292), &v297);
    *(void *)uint64_t v287 = v297.n128_u64[0];
    *(void *)&v287[8] = v297.n128_u8[8];
    *(_OWORD *)&v287[16] = v298;
    *(_OWORD *)&v287[32] = v299;
    *(void *)&v287[48] = v300;
    *(_OWORD *)&v287[56] = v301;
    uint64_t v288 = v302;
    uint64_t v289 = v303;
    LOBYTE(v290) = v304;
    HIBYTE(v290) = 1;
    sub_25C08944C((uint64_t)&v297);
    sub_25C083D84();
    sub_25C0EAD28();
    uint64_t v81 = *(void *)&v295[16];
    char v82 = v295[24];
    char v83 = v296;
    long long v84 = v292;
    *(__n128 *)uint64_t v72 = v291;
    *((_OWORD *)v72 + 1) = v84;
    long long v85 = v294;
    *((_OWORD *)v72 + 2) = v293;
    *((_OWORD *)v72 + 3) = v85;
    *((_OWORD *)v72 + 4) = *(_OWORD *)v295;
    *((void *)v72 + 10) = v81;
    *((unsigned char *)v72 + 88) = v82;
    *((unsigned char *)v72 + 89) = v83;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891E0);
    sub_25C083D5C();
    sub_25C083DD8();
    uint64_t v86 = (uint64_t)v273;
    sub_25C0EAD28();
    sub_25C02FB8C(v86, v276, &qword_26A5891D0);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v87 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v86, &qword_26A5891D0);
    sub_25C02FB8C(v87, v77, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release();
    uint64_t v71 = v87;
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589420);
  uint64_t v90 = swift_dynamicCastClass();
  uint64_t v91 = v285;
  uint64_t v92 = (uint64_t)v231;
  if (v90)
  {
    uint64_t v93 = v281;
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
    MEMORY[0x26117CDA0](v94);
    swift_getAtKeyPath();
    sub_25C083AD0(v92);
    uint64_t v95 = (uint64_t)v282;
    uint64_t v96 = v91 + *((int *)v93 + 6);
    long long v97 = *(_OWORD *)v96;
    uint64_t v98 = *(void *)(v96 + 16);
    LOBYTE(v96) = *(unsigned char *)(v96 + 24);
    *(_OWORD *)uint64_t v287 = v97;
    *(void *)&v287[16] = v98;
    v287[24] = v96;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
    sub_25C0EA718();
    sub_25C0D2A90(v269, v270, v291.n128_u64[0], v291.n128_u64[1], v292, BYTE8(v292), &v291);
    long long v99 = v294;
    uint64_t v100 = v267;
    *(_OWORD *)(v267 + 32) = v293;
    *(_OWORD *)(v100 + 48) = v99;
    *(_OWORD *)(v100 + 64) = *(_OWORD *)v295;
    *(_OWORD *)(v100 + 73) = *(_OWORD *)&v295[9];
    long long v101 = v292;
    *(__n128 *)uint64_t v100 = v291;
    *(_OWORD *)(v100 + 16) = v101;
    swift_storeEnumTagMultiPayload();
    sub_25C08944C((uint64_t)&v291);
    sub_25C083D84();
    sub_25C083E14();
    uint64_t v102 = (uint64_t)v230;
    sub_25C0EAD28();
    sub_25C02FB8C(v102, (uint64_t)v72, &qword_26A5891F8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891E0);
    sub_25C083D5C();
    sub_25C083DD8();
    uint64_t v103 = (uint64_t)v273;
    sub_25C0EAD28();
    sub_25C02FBF0(v102, &qword_26A5891F8);
    sub_25C02FB8C(v103, v276, &qword_26A5891D0);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v104 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v103, &qword_26A5891D0);
    sub_25C02FB8C(v104, v95, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release();
    uint64_t v105 = v104;
LABEL_10:
    sub_25C02FBF0(v105, &qword_26A5891C0);
    uint64_t v88 = &v291;
    return sub_25C0894BC((uint64_t)v88);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589428);
  uint64_t v106 = swift_dynamicCastClass();
  if (v106)
  {
    uint64_t v281 = (uint64_t (*)(void))_s14descr27097BA99O3RowVMa;
    uint64_t v270 = v106;
    uint64_t v107 = v229;
    sub_25C0891F8(v91, v229, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
    sub_25C0EBAD8();
    swift_retain_n();
    uint64_t v108 = sub_25C0EBAC8();
    unint64_t v109 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v110 = (v228 + v109 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v111 = swift_allocObject();
    uint64_t v112 = MEMORY[0x263F8F500];
    *(void *)(v111 + 16) = v108;
    *(void *)(v111 + 24) = v112;
    sub_25C089264(v107, v111 + v109);
    uint64_t v113 = v270;
    *(void *)(v111 + v110) = v270;
    sub_25C0891F8(v91, v107, v281);
    swift_retain();
    uint64_t v114 = sub_25C0EBAC8();
    uint64_t v115 = swift_allocObject();
    *(void *)(v115 + 16) = v114;
    *(void *)(v115 + 24) = MEMORY[0x263F8F500];
    sub_25C089264(v107, v115 + v109);
    *(void *)(v115 + v110) = v113;
    sub_25C0EB478();
    MEMORY[0x270FA5388](v291.n128_u64[0]);
    uint64_t v116 = v262;
    sub_25C0EB418();
    BOOL v117 = sub_25C0E8858(*(void *)v91, *(unsigned char *)(v91 + 8));
    LOBYTE(v114) = sub_25C0E9D54(v117, 0);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v119 = swift_allocObject();
    *(unsigned char *)(v119 + 16) = v114 & 1;
    uint64_t v121 = v263;
    uint64_t v120 = v264;
    uint64_t v122 = v261;
    (*(void (**)(char *, char *, uint64_t))(v263 + 16))(v261, v116, v264);
    uint64_t v123 = (uint64_t *)&v122[*((int *)v268 + 9)];
    *uint64_t v123 = KeyPath;
    v123[1] = (uint64_t)sub_25C089874;
    v123[2] = v119;
    (*(void (**)(char *, uint64_t))(v121 + 8))(v116, v120);
    uint64_t v124 = (uint64_t)v122;
    uint64_t v125 = v265;
    sub_25C0516EC(v124, v265, &qword_26A589208);
    sub_25C02FB8C(v125, v267, &qword_26A589208);
    swift_storeEnumTagMultiPayload();
    sub_25C083D84();
    sub_25C083E14();
    uint64_t v126 = (uint64_t)v230;
    sub_25C0EAD28();
    sub_25C02FB8C(v126, (uint64_t)v283, &qword_26A5891F8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5891E0);
    sub_25C083D5C();
    sub_25C083DD8();
    uint64_t v127 = (uint64_t)v273;
    sub_25C0EAD28();
    sub_25C02FBF0(v126, &qword_26A5891F8);
    sub_25C02FB8C(v127, v276, &qword_26A5891D0);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v128 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v127, &qword_26A5891D0);
    sub_25C02FB8C(v128, (uint64_t)v282, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release_n();
    sub_25C02FBF0(v128, &qword_26A5891C0);
    return sub_25C02FBF0(v125, &qword_26A589208);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589430);
  if (swift_dynamicCastClass())
  {
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
    MEMORY[0x26117CDA0](v129);
    swift_getAtKeyPath();
    sub_25C083AD0(v92);
    v291.n128_u8[0] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589478);
    sub_25C0EB488();
    __n128 v297 = *(__n128 *)v287;
    LOBYTE(v298) = v287[16];
    sub_25C089690();
    sub_25C0896E4();
    sub_25C0D4260((uint64_t)&v297, &v291);
    uint64_t v130 = (uint64_t)v282;
    *(__n128 *)uint64_t v287 = v291;
    *(void *)&v287[16] = v292;
    *(_WORD *)&v287[24] = BYTE8(v292);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589258);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589268);
    sub_25C0583D0(&qword_26A589250, &qword_26A589258);
    sub_25C0583D0(&qword_26A589260, &qword_26A589268);
    sub_25C0EAD28();
    unint64_t v131 = v292;
    unsigned __int8 v132 = BYTE8(v292);
    unsigned __int8 v133 = BYTE9(v292);
    uint64_t v134 = v258;
    *uint64_t v258 = v291;
    v134[1].n128_u64[0] = v131;
    v134[1].n128_u8[8] = v132;
    v134[1].n128_u8[9] = v133;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589248);
    sub_25C083F9C();
    sub_25C08405C();
    uint64_t v135 = (uint64_t)v260;
    sub_25C0EAD28();
    sub_25C02FB8C(v135, v276, &qword_26A589238);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v136 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v135, &qword_26A589238);
    sub_25C02FB8C(v136, v130, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release();
LABEL_17:
    sub_25C02FBF0(v136, &qword_26A5891C0);
    swift_release();
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589438);
  uint64_t v137 = swift_dynamicCastClass();
  uint64_t v138 = (uint64_t)v282;
  if (v137)
  {
    uint64_t v139 = v137;
    uint64_t v283 = _s14descr27097BA99O3RowVMa;
    uint64_t v140 = v91;
    uint64_t v141 = v91;
    uint64_t v142 = v229;
    sub_25C0891F8(v140, v229, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
    uint64_t v281 = (uint64_t (*)(void))sub_25C0EBAD8();
    swift_retain_n();
    uint64_t v143 = sub_25C0EBAC8();
    unint64_t v144 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v145 = v141;
    unint64_t v146 = (v228 + v144 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v147 = swift_allocObject();
    uint64_t v148 = MEMORY[0x263F8F500];
    *(void *)(v147 + 16) = v143;
    *(void *)(v147 + 24) = v148;
    uint64_t v149 = v148;
    sub_25C089264(v142, v147 + v144);
    *(void *)(v147 + v146) = v139;
    sub_25C0891F8(v145, v142, (uint64_t (*)(void))v283);
    swift_retain();
    uint64_t v150 = sub_25C0EBAC8();
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v150;
    *(void *)(v151 + 24) = v149;
    sub_25C089264(v142, v151 + v144);
    *(void *)(v151 + v146) = v139;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589460);
    sub_25C0EB478();
    __n128 v297 = *(__n128 *)v287;
    LOBYTE(v298) = v287[16];
    sub_25C0895E8();
    sub_25C08963C();
    sub_25C0D4260((uint64_t)&v297, &v291);
    *(__n128 *)uint64_t v287 = v291;
    *(void *)&v287[16] = v292;
    v287[24] = BYTE8(v292);
    v287[25] = 1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589258);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589268);
    sub_25C0583D0(&qword_26A589250, &qword_26A589258);
    sub_25C0583D0(&qword_26A589260, &qword_26A589268);
    sub_25C0EAD28();
    unint64_t v152 = v292;
    unsigned __int8 v153 = BYTE8(v292);
    unsigned __int8 v154 = BYTE9(v292);
    uint64_t v155 = v258;
    *uint64_t v258 = v291;
    v155[1].n128_u64[0] = v152;
    v155[1].n128_u8[8] = v153;
    v155[1].n128_u8[9] = v154;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589248);
    sub_25C083F9C();
    sub_25C08405C();
    uint64_t v156 = (uint64_t)v260;
    sub_25C0EAD28();
    sub_25C02FB8C(v156, v276, &qword_26A589238);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v136 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v156, &qword_26A589238);
    sub_25C02FB8C(v136, (uint64_t)v282, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release_n();
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589440);
  uint64_t v157 = swift_dynamicCastClass();
  uint64_t v158 = v229;
  if (v157)
  {
    uint64_t v159 = v281;
    uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
    MEMORY[0x26117CDA0](v160);
    swift_getAtKeyPath();
    sub_25C083AD0(v92);
    *(void *)uint64_t v287 = v291.n128_u64[0];
    sub_25C0EC238();
    uint64_t v161 = v91 + *((int *)v159 + 6);
    long long v162 = *(_OWORD *)v161;
    uint64_t v163 = *(void *)(v161 + 16);
    LOBYTE(v161) = *(unsigned char *)(v161 + 24);
    *(_OWORD *)uint64_t v287 = v162;
    *(void *)&v287[16] = v163;
    v287[24] = v161;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
    sub_25C0EA718();
    sub_25C0D2A90(v269, v270, v291.n128_u64[0], v291.n128_u64[1], v292, BYTE8(v292), &v291);
    long long v164 = v294;
    uint64_t v165 = v252;
    *((_OWORD *)v252 + 2) = v293;
    *((_OWORD *)v165 + 3) = v164;
    *((_OWORD *)v165 + 4) = *(_OWORD *)v295;
    *(_OWORD *)(v165 + 73) = *(_OWORD *)&v295[9];
    long long v166 = v292;
    *(__n128 *)uint64_t v165 = v291;
    *((_OWORD *)v165 + 1) = v166;
    swift_storeEnumTagMultiPayload();
    sub_25C08944C((uint64_t)&v291);
    sub_25C083D84();
    uint64_t v167 = sub_25C0583D0(&qword_26A589288, &qword_26A589280);
    uint64_t v168 = sub_25C089404(&qword_26A589290, MEMORY[0x263F19DF8]);
    *(void *)uint64_t v287 = v253;
    *(void *)&v287[8] = v255;
    *(void *)&v287[16] = v167;
    *(void *)&v287[24] = v168;
    swift_getOpaqueTypeConformance2();
    uint64_t v169 = (uint64_t)v254;
    sub_25C0EAD28();
    sub_25C02FB8C(v169, (uint64_t)v258, &qword_26A589278);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589248);
    sub_25C083F9C();
    sub_25C08405C();
    uint64_t v170 = (uint64_t)v260;
    sub_25C0EAD28();
    sub_25C02FBF0(v169, &qword_26A589278);
    sub_25C02FB8C(v170, v276, &qword_26A589238);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v171 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v170, &qword_26A589238);
    sub_25C02FB8C(v171, v138, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release();
    uint64_t v105 = v171;
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589448);
  uint64_t v172 = swift_dynamicCastClass();
  char v173 = v270;
  uint64_t v174 = v269;
  if (!v172)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589450);
    if (swift_dynamicCastClass())
    {
      uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
      MEMORY[0x26117CDA0](v209);
      swift_getAtKeyPath();
      sub_25C083AD0(v92);
      *(void *)uint64_t v287 = nullsub_1(v291.n128_u64[0]);
      memset(&v287[8], 0, 51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892B8);
      sub_25C084228();
      sub_25C0583D0(&qword_26A5892B0, &qword_26A5892B8);
      sub_25C0EAD28();
      __n128 v210 = v291;
      long long v211 = v292;
      long long v212 = v293;
      uint64_t v213 = (uint64_t (*)(void))v294;
      char v214 = BYTE10(v294);
      *(__n128 *)uint64_t v138 = v291;
      uint64_t v283 = (uint64_t (*)())v210.n128_u64[1];
      unint64_t v285 = v210.n128_u64[0];
      *(_OWORD *)(v138 + 16) = v211;
      *(_OWORD *)(v138 + 32) = v212;
      *(void *)(v138 + 48) = v213;
      uint64_t v281 = v213;
      LODWORD(v278) = WORD4(v294);
      *(_WORD *)(v138 + 56) = WORD4(v294);
      *(unsigned char *)(v138 + 58) = v214;
      swift_storeEnumTagMultiPayload();
      uint64_t v215 = (uint64_t)v213;
      uint64_t v216 = v278;
      sub_25C089124(v210.n128_i64[0], v210.n128_i64[1], v211, *((uint64_t *)&v211 + 1), v212, *((uint64_t *)&v212 + 1), v215, v278, v214);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
      sub_25C083CE4();
      sub_25C084188();
      sub_25C0EAD28();
      swift_release();
      return sub_25C08919C(v285, (uint64_t)v283, v211, *((uint64_t *)&v211 + 1), v212, *((uint64_t *)&v212 + 1), (uint64_t)v281, v216, v214);
    }
    swift_release();
    uint64_t v217 = sub_25C0EB538();
    uint64_t v219 = v218;
    sub_25C081464(v285, (uint64_t)&v291);
    __n128 v220 = v291;
    char v221 = v292;
    if (BYTE9(v293)) {
      __int16 v222 = 256;
    }
    else {
      __int16 v222 = 0;
    }
    *(void *)uint64_t v287 = v217;
    *(void *)&v287[8] = v219;
    *(__n128 *)&v287[16] = v291;
    *(void *)&v287[32] = v292;
    *(void *)&v287[40] = *((void *)&v292 + 1);
    *(void *)&v287[48] = v293;
    *(_WORD *)&v287[56] = v222 | BYTE8(v293);
    v287[58] = 1;
    sub_25C05CE24(v291.n128_i64[0], v291.n128_i64[1], v292);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892B8);
    sub_25C084228();
    sub_25C0583D0(&qword_26A5892B0, &qword_26A5892B8);
    sub_25C0EAD28();
    uint64_t v223 = v294;
    __int16 v224 = WORD4(v294);
    char v225 = BYTE10(v294);
    long long v226 = v292;
    *(__n128 *)uint64_t v138 = v291;
    *(_OWORD *)(v138 + 16) = v226;
    *(_OWORD *)(v138 + 32) = v293;
    *(void *)(v138 + 48) = v223;
    *(_WORD *)(v138 + 56) = v224;
    *(unsigned char *)(v138 + 58) = v225;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    sub_25C05CED4(v220.n128_i64[0], v220.n128_i64[1], v221);
LABEL_18:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v175 = v172;
  swift_retain();
  sub_25C0E7DC8(v174, v173, (uint64_t)&v291);
  __n128 v176 = v291;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(__n128 *)uint64_t v287 = v176;
  uint64_t v283 = _s14descr27097BA99O3RowVMa;
  sub_25C0891F8(v91, v158, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  uint64_t v281 = (uint64_t (*)(void))sub_25C0EBAD8();
  swift_retain();
  uint64_t v177 = v158;
  uint64_t v178 = sub_25C0EBAC8();
  unint64_t v179 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v180 = (v228 + v179 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v181 = swift_allocObject();
  uint64_t v182 = MEMORY[0x263F8F500];
  *(void *)(v181 + 16) = v178;
  *(void *)(v181 + 24) = v182;
  sub_25C089264(v177, v181 + v179);
  *(void *)(v181 + v180) = v175;
  sub_25C0891F8(v91, v177, (uint64_t (*)(void))v283);
  swift_retain();
  uint64_t v183 = sub_25C0EBAC8();
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = v183;
  *(void *)(v184 + 24) = MEMORY[0x263F8F500];
  sub_25C089264(v177, v184 + v179);
  *(void *)(v184 + v180) = v175;
  uint64_t v185 = v246;
  sub_25C0EB478();
  sub_25C0EA2C8();
  sub_25C0EA318();
  sub_25C089404(&qword_26A589458, MEMORY[0x263F07490]);
  uint64_t result = sub_25C0EB798();
  if (result)
  {
    uint64_t v186 = v247;
    uint64_t v187 = (uint64_t)&v250[*(int *)(v247 + 48)];
    uint64_t v188 = v237;
    uint64_t v189 = *(void (**)(void))(v237 + 32);
    v189();
    unint64_t v285 = v187;
    ((void (*)(uint64_t, char *, uint64_t))v189)(v187, v248, v185);
    uint64_t v190 = v239;
    uint64_t v191 = &v239[*(int *)(v186 + 48)];
    uint64_t v192 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
    v192(v239, v250, v185);
    v192(v191, (char *)v187, v185);
    uint64_t v193 = (uint64_t)v233;
    ((void (*)(char *, char *, uint64_t))v189)(v233, v190, v185);
    uint64_t v194 = *(void (**)(char *, uint64_t))(v188 + 8);
    v194(v191, v185);
    uint64_t v195 = &v190[*(int *)(v247 + 48)];
    ((void (*)(char *, char *, uint64_t))v189)(v190, v250, v185);
    ((void (*)(char *, unint64_t, uint64_t))v189)(v195, v285, v185);
    ((void (*)(uint64_t, char *, uint64_t))v189)(v193 + *(int *)(v232 + 36), v195, v185);
    v194(v190, v185);
    sub_25C0516EC(v193, v235, &qword_26A5893C8);
    sub_25C0EAD48();
    sub_25C027054();
    unint64_t v196 = v236;
    sub_25C0EA6B8();
    uint64_t v197 = v241;
    sub_25C0EADE8();
    uint64_t v198 = sub_25C0583D0(&qword_26A589288, &qword_26A589280);
    uint64_t v199 = sub_25C089404(&qword_26A589290, MEMORY[0x263F19DF8]);
    uint64_t v200 = v234;
    unint64_t v201 = v253;
    unint64_t v202 = v255;
    sub_25C0EB0D8();
    (*(void (**)(char *, unint64_t))(v242 + 8))(v197, v202);
    (*(void (**)(char *, unint64_t))(v238 + 8))(v196, v201);
    uint64_t v203 = v243;
    uint64_t v204 = v244;
    uint64_t v205 = v256;
    (*(void (**)(char *, char *, uint64_t))(v244 + 32))(v243, v200, v256);
    (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v252, v203, v205);
    swift_storeEnumTagMultiPayload();
    sub_25C083D84();
    v291.n128_u64[0] = v201;
    v291.n128_u64[1] = v202;
    *(void *)&long long v292 = v198;
    *((void *)&v292 + 1) = v199;
    swift_getOpaqueTypeConformance2();
    uint64_t v206 = (uint64_t)v254;
    sub_25C0EAD28();
    sub_25C02FB8C(v206, (uint64_t)v258, &qword_26A589278);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589248);
    sub_25C083F9C();
    sub_25C08405C();
    uint64_t v207 = (uint64_t)v260;
    sub_25C0EAD28();
    sub_25C02FBF0(v206, &qword_26A589278);
    sub_25C02FB8C(v207, v276, &qword_26A589238);
    swift_storeEnumTagMultiPayload();
    sub_25C083D20();
    sub_25C083ED8();
    uint64_t v208 = (uint64_t)v278;
    sub_25C0EAD28();
    sub_25C02FBF0(v207, &qword_26A589238);
    sub_25C02FB8C(v208, (uint64_t)v282, &qword_26A5891C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892A0);
    sub_25C083CE4();
    sub_25C084188();
    sub_25C0EAD28();
    swift_release_n();
    sub_25C02FBF0(v208, &qword_26A5891C0);
    return (*(uint64_t (**)(char *, uint64_t))(v204 + 8))(v203, v205);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25C080E84@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s14descr27097BA99O3RowVMa();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x26117CDA0](v5);
  uint64_t v6 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  swift_bridgeObjectRetain();
  v6(v11, 0);
  uint64_t result = sub_25C083AD0((uint64_t)v4);
  *a1 = v9;
  a1[1] = v8;
  return result;
}

uint64_t sub_25C080F70()
{
  uint64_t v0 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v0 - 8);
  _s14descr27097BA99O3RowVMa();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x26117CDA0]();
  swift_setAtWritableKeyPath();
  return sub_25C0EB448();
}

uint64_t sub_25C081048@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s14descr27097BA99O3RowVMa();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x26117CDA0](v5);
  uint64_t v6 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  char v8 = *v7;
  v6(v10, 0);
  uint64_t result = sub_25C083AD0((uint64_t)v4);
  *a1 = v8;
  return result;
}

uint64_t sub_25C081124()
{
  uint64_t v0 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v0 - 8);
  _s14descr27097BA99O3RowVMa();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x26117CDA0]();
  swift_setAtWritableKeyPath();
  return sub_25C0EB448();
}

uint64_t sub_25C0811F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s14descr27097BA99O3RowVMa();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x26117CDA0](v5);
  uint64_t v6 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  uint64_t v8 = v7;
  uint64_t v9 = sub_25C0EA328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, v8, v9);
  v6(v11, 0);
  return sub_25C083AD0((uint64_t)v4);
}

uint64_t sub_25C081310(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_25C0EA328();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  _s14descr27097BA99O3RowVMa();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x26117CDA0]();
  swift_setAtWritableKeyPath();
  return sub_25C0EB448();
}

uint64_t sub_25C081464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25C0E7DC8(*(void *)a1, *(unsigned char *)(a1 + 8), (uint64_t)&v12);
  uint64_t v3 = sub_25C026FAC();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = sub_25C0EB2D8();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v10;
  *(_WORD *)(a2 + 40) = 256;
  sub_25C05CE24(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_25C05CED4(v3, v5, v9);

  return swift_bridgeObjectRelease();
}

__n128 sub_25C081540@<Q0>(long long *a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  char v8 = *((unsigned char *)a1 + 32);
  uint64_t v9 = *((void *)a1 + 5);
  __n128 v16 = *a2;
  long long v17 = *a1;
  unint64_t v10 = a2[1].n128_u64[0];
  unint64_t v11 = a2[1].n128_u64[1];
  unsigned __int8 v12 = a2[2].n128_u8[0];
  unint64_t v13 = a2[2].n128_u64[1];
  uint64_t v14 = (uint64_t *)(a5 + *(int *)(_s14descr27097BA99O6DetailVMa() + 44));
  *uint64_t v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)a5 = v17;
  *(void *)(a5 + 16) = v6;
  *(void *)(a5 + 24) = v7;
  *(unsigned char *)(a5 + 32) = v8;
  *(void *)(a5 + 40) = v9;
  __n128 result = v16;
  *(__n128 *)(a5 + 48) = v16;
  *(void *)(a5 + 64) = v10;
  *(void *)(a5 + 72) = v11;
  *(unsigned char *)(a5 + 80) = v12;
  *(void *)(a5 + 88) = v13;
  *(void *)(a5 + 96) = a3;
  *(void *)(a5 + 104) = a4;
  return result;
}

__n128 sub_25C081628@<Q0>(long long *a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = *((unsigned char *)a1 + 32);
  uint64_t v7 = *((void *)a1 + 5);
  __n128 v14 = *a2;
  long long v15 = *a1;
  unint64_t v8 = a2[1].n128_u64[0];
  unint64_t v9 = a2[1].n128_u64[1];
  unsigned __int8 v10 = a2[2].n128_u8[0];
  unint64_t v11 = a2[2].n128_u64[1];
  unsigned __int8 v12 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5892E0) + 44));
  *unsigned __int8 v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)a3 = v15;
  *(void *)(a3 + 16) = v4;
  *(void *)(a3 + 24) = v5;
  *(unsigned char *)(a3 + 32) = v6;
  *(void *)(a3 + 40) = v7;
  __n128 result = v14;
  *(__n128 *)(a3 + 48) = v14;
  *(void *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = v9;
  *(unsigned char *)(a3 + 80) = v10;
  *(void *)(a3 + 88) = v11;
  *(void *)(a3 + 96) = nullsub_1;
  *(void *)(a3 + 104) = 0;
  return result;
}

__n128 sub_25C081710@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 3);
  char v9 = *((unsigned char *)a1 + 32);
  long long v16 = *(long long *)((char *)a1 + 40);
  long long v17 = *a1;
  __n128 v15 = *(__n128 *)((char *)a1 + 56);
  uint64_t v10 = *((void *)a1 + 9);
  char v11 = *((unsigned char *)a1 + 80);
  uint64_t v12 = *((void *)a1 + 11);
  unint64_t v13 = (uint64_t *)(a4 + *(int *)(_s14descr27097BA99O6DetailVMa() + 44));
  *unint64_t v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)a4 = v17;
  *(void *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = v8;
  *(unsigned char *)(a4 + 32) = v9;
  *(_OWORD *)(a4 + 40) = v16;
  __n128 result = v15;
  *(__n128 *)(a4 + 56) = v15;
  *(void *)(a4 + 72) = v10;
  *(unsigned char *)(a4 + 80) = v11;
  *(void *)(a4 + 88) = v12;
  *(void *)(a4 + 96) = a2;
  *(void *)(a4 + 104) = a3;
  return result;
}

__n128 sub_25C0817FC@<Q0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  char v5 = *((unsigned char *)a1 + 32);
  long long v12 = *(long long *)((char *)a1 + 40);
  long long v13 = *a1;
  __n128 v11 = *(__n128 *)((char *)a1 + 56);
  uint64_t v6 = *((void *)a1 + 9);
  char v7 = *((unsigned char *)a1 + 80);
  uint64_t v8 = *((void *)a1 + 11);
  char v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5892E0) + 44));
  *char v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)a2 = v13;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 40) = v12;
  __n128 result = v11;
  *(__n128 *)(a2 + 56) = v11;
  *(void *)(a2 + 72) = v6;
  *(unsigned char *)(a2 + 80) = v7;
  *(void *)(a2 + 88) = v8;
  *(void *)(a2 + 96) = nullsub_1;
  *(void *)(a2 + 104) = 0;
  return result;
}

uint64_t sub_25C0818E4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_25C0EA748();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v25 = (uint64_t)&WitnessTable - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  sub_25C0EA8F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5892E8);
  swift_getTupleTypeMetadata2();
  sub_25C0EB558();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_25C0EB408();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&WitnessTable - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589120);
  uint64_t v10 = sub_25C0EA8F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  __n128 v14 = (char *)&WitnessTable - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  long long v16 = (char *)&WitnessTable - v15;
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v30 = v5;
  uint64_t v31 = v17;
  uint64_t v32 = v26;
  sub_25C0EAB38();
  sub_25C0EB3F8();
  uint64_t v18 = v25;
  sub_25C083700(v25);
  uint64_t v19 = swift_getWitnessTable();
  sub_25C07DBF0();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v18, v28);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v20 = sub_25C0583D0(&qword_26A589150, &qword_26A589120);
  uint64_t v33 = v19;
  uint64_t v34 = v20;
  swift_getWitnessTable();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v21(v16, v14, v10);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
  v22(v14, v10);
  v21(v29, v16, v10);
  return ((uint64_t (*)(char *, uint64_t))v22)(v16, v10);
}

uint64_t sub_25C081CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v77 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  char v9 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_25C0EA8F8();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  long long v16 = &v63[-v15];
  long long v85 = &v63[-v15];
  (*(void (**)(uint64_t))(a1 + 96))(v14);
  sub_25C0EB538();
  sub_25C0EB1A8();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, a2);
  v103[2] = a3;
  v103[3] = MEMORY[0x263F18860];
  uint64_t v84 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = v87;
  uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16);
  uint64_t v73 = v87 + 16;
  uint64_t v74 = v19;
  uint64_t v75 = WitnessTable;
  char v83 = v13;
  v19(v16, v13, v10);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8);
  uint64_t v87 = v18 + 8;
  uint64_t v76 = v20;
  v20(v13, v10);
  uint64_t v72 = sub_25C0EAC08();
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = *(void *)(a1 + 24);
  char v24 = *(unsigned char *)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 40);
  *(void *)&long long v118 = *(void *)a1;
  *((void *)&v118 + 1) = v21;
  *(void *)&long long v119 = v22;
  *((void *)&v119 + 1) = v23;
  LOBYTE(v120) = v24;
  *((void *)&v120 + 1) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_25C026FAC();
  uint64_t v28 = v27;
  LOBYTE(v9) = v29 & 1;
  uint64_t v30 = sub_25C0EB018();
  uint64_t v78 = v30;
  uint64_t v86 = v31;
  unint64_t v80 = v32;
  int v79 = v33 & 1;
  sub_25C05CED4(v26, v28, (char)v9);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a1 + 48);
  uint64_t v34 = *(void *)(a1 + 56);
  uint64_t v36 = *(void *)(a1 + 64);
  uint64_t v37 = *(void *)(a1 + 72);
  char v38 = *(unsigned char *)(a1 + 80);
  uint64_t v39 = *(void *)(a1 + 88);
  *(void *)&long long v118 = v35;
  *((void *)&v118 + 1) = v34;
  *(void *)&long long v119 = v36;
  *((void *)&v119 + 1) = v37;
  LOBYTE(v120) = v38;
  *((void *)&v120 + 1) = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v40 = sub_25C026FAC();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  LOBYTE(a3) = v45 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = sub_25C0EAF58();
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = sub_25C0EB2F8();
  LOBYTE(v118) = v79;
  LOBYTE(v91) = a3;
  LOBYTE(v103[0]) = 0;
  sub_25C05CE24(v30, v86, v79);
  unint64_t v50 = v80;
  swift_bridgeObjectRetain();
  unint64_t v81 = v40;
  uint64_t v70 = v42;
  sub_25C05CE24(v40, v42, a3);
  uint64_t v82 = v44;
  swift_bridgeObjectRetain();
  uint64_t v68 = KeyPath;
  swift_retain();
  uint64_t v71 = v48;
  swift_retain();
  uint64_t v69 = v47;
  swift_retain();
  uint64_t v67 = v49;
  swift_retain();
  sub_25C05CED4(v40, v42, a3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = v78;
  uint64_t v52 = v86;
  sub_25C05CED4(v78, v86, v79);
  unint64_t v53 = v50;
  swift_bridgeObjectRelease();
  LODWORD(v44) = v118;
  LOBYTE(a3) = v91;
  char v111 = 1;
  char v109 = v118;
  char v107 = v91;
  int v64 = v91;
  char v105 = v103[0];
  v117[0] = *(_DWORD *)v110;
  *(_DWORD *)((char *)v117 + 3) = *(_DWORD *)&v110[3];
  *(_DWORD *)((char *)v116 + 3) = *(_DWORD *)&v108[3];
  v116[0] = *(_DWORD *)v108;
  *(_DWORD *)((char *)v115 + 3) = *(_DWORD *)&v106[3];
  v115[0] = *(_DWORD *)v106;
  int v66 = LOBYTE(v103[0]);
  *(_DWORD *)((char *)v114 + 3) = *(_DWORD *)&v104[3];
  v114[0] = *(_DWORD *)v104;
  int v65 = sub_25C0EAF08();
  char v112 = 1;
  uint64_t v54 = v83;
  v74(v83, v85, v84);
  long long v91 = (unint64_t)v72;
  LOBYTE(v92) = 1;
  *(_DWORD *)((char *)&v92 + 1) = v117[0];
  DWORD1(v92) = *(_DWORD *)((char *)v117 + 3);
  uint64_t v55 = v51;
  *((void *)&v92 + 1) = v51;
  *(void *)&long long v93 = v52;
  int v79 = v44;
  BYTE8(v93) = v44;
  *(_DWORD *)((char *)&v93 + 9) = v116[0];
  HIDWORD(v93) = *(_DWORD *)((char *)v116 + 3);
  unsigned long long v94 = __PAIR128__(v81, v53);
  uint64_t v56 = v81;
  uint64_t v57 = v70;
  *(void *)&long long v95 = v70;
  BYTE8(v95) = a3;
  HIDWORD(v95) = *(_DWORD *)((char *)v115 + 3);
  *(_DWORD *)((char *)&v95 + 9) = v115[0];
  *(void *)&long long v96 = v82;
  *((void *)&v96 + 1) = v68;
  *(void *)&long long v97 = 1;
  BYTE8(v97) = v66;
  HIDWORD(v97) = *(_DWORD *)((char *)v114 + 3);
  *(_DWORD *)((char *)&v97 + 9) = v114[0];
  *(void *)&long long v98 = v71;
  *((void *)&v98 + 1) = v69;
  *(void *)&long long v99 = v67;
  BYTE8(v99) = v65;
  HIDWORD(v99) = *(_DWORD *)&v113[3];
  *(_DWORD *)((char *)&v99 + 9) = *(_DWORD *)v113;
  long long v100 = 0u;
  long long v101 = 0u;
  char v102 = v112;
  v103[0] = v54;
  v103[1] = &v91;
  sub_25C05CE24(v55, v52, v44);
  swift_bridgeObjectRetain();
  LOBYTE(KeyPath) = v64;
  sub_25C05CE24(v56, v57, v64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v58 = v84;
  v90[0] = v84;
  v90[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892E8);
  uint64_t v88 = v75;
  unint64_t v89 = sub_25C088FD8();
  sub_25C05CBBC((uint64_t)v103, 2uLL, (uint64_t)v90);
  sub_25C05CED4(v78, v86, v79);
  swift_bridgeObjectRelease();
  sub_25C05CED4(v81, v57, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v58;
  uint64_t v60 = v58;
  __n128 v61 = v76;
  v76(v85, v59);
  long long v126 = v99;
  long long v127 = v100;
  long long v128 = v101;
  long long v122 = v95;
  long long v123 = v96;
  long long v124 = v97;
  long long v125 = v98;
  long long v118 = v91;
  long long v119 = v92;
  long long v120 = v93;
  char v129 = v102;
  unsigned long long v121 = v94;
  sub_25C089078((uint64_t)&v118);
  return v61(v83, v60);
}

BOOL sub_25C08240C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_25C08241C()
{
  return sub_25C0EC358();
}

uint64_t sub_25C082444()
{
  return sub_25C0EC368();
}

BOOL sub_25C08248C(char *a1, char *a2)
{
  return sub_25C08240C(*a1, *a2);
}

uint64_t sub_25C082498()
{
  return sub_25C082444();
}

uint64_t sub_25C0824A0()
{
  return sub_25C08241C();
}

uint64_t sub_25C0824A8()
{
  return sub_25C0EC368();
}

__n128 sub_25C0824E8@<Q0>(__n128 *a1@<X0>, long long *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __n128 result = *a1;
  unint64_t v7 = a1[1].n128_u64[0];
  unint64_t v8 = a1[1].n128_u64[1];
  unsigned __int8 v9 = a1[2].n128_u8[0];
  unint64_t v10 = a1[2].n128_u64[1];
  long long v11 = *a2;
  uint64_t v12 = *((void *)a2 + 2);
  uint64_t v13 = *((void *)a2 + 3);
  char v14 = *((unsigned char *)a2 + 32);
  uint64_t v15 = *((void *)a2 + 5);
  *(__n128 *)a6 = *a1;
  *(void *)(a6 + 16) = v7;
  *(void *)(a6 + 24) = v8;
  *(unsigned char *)(a6 + 32) = v9;
  *(void *)(a6 + 40) = v10;
  *(_OWORD *)(a6 + 48) = v11;
  *(void *)(a6 + 64) = v12;
  *(void *)(a6 + 72) = v13;
  *(unsigned char *)(a6 + 80) = v14;
  *(void *)(a6 + 88) = v15;
  *(unsigned char *)(a6 + 96) = a3;
  *(void *)(a6 + 104) = a4;
  *(void *)(a6 + 112) = a5;
  return result;
}

uint64_t sub_25C082534@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v54 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589328);
  MEMORY[0x270FA5388](v51);
  unint64_t v53 = (_OWORD *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589330);
  MEMORY[0x270FA5388](v48);
  uint64_t v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589338);
  MEMORY[0x270FA5388](v52);
  unint64_t v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589340);
  MEMORY[0x270FA5388](v47);
  unint64_t v7 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588C90);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25C0EB338();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589348);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589350);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  switch(*(unsigned char *)(v2 + 96))
  {
    case 1:
      uint64_t v46 = (uint64_t)&v45 - v22;
      sub_25C0EB328();
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v11);
      uint64_t v45 = sub_25C0EB358();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      sub_25C0EAC18();
      uint64_t v41 = sub_25C0EAC28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v10, 0, 1, v41);
      uint64_t KeyPath = swift_getKeyPath();
      sub_25C02FB8C((uint64_t)v10, (uint64_t)v7 + *(int *)(v47 + 28), &qword_26A588C90);
      *unint64_t v7 = KeyPath;
      sub_25C02FB8C((uint64_t)v7, (uint64_t)&v17[*(int *)(v15 + 36)], &qword_26A589340);
      *(void *)uint64_t v17 = v45;
      *((void *)v17 + 1) = 0;
      *((_WORD *)v17 + 8) = 257;
      swift_retain();
      sub_25C02FBF0((uint64_t)v7, &qword_26A589340);
      sub_25C02FBF0((uint64_t)v10, &qword_26A588C90);
      swift_release();
      uint64_t v43 = sub_25C0EB2F8();
      sub_25C02FB8C((uint64_t)v17, (uint64_t)v21, &qword_26A589348);
      *(void *)&v21[*(int *)(v18 + 36)] = v43;
      sub_25C02FBF0((uint64_t)v17, &qword_26A589348);
      uint64_t v26 = v46;
      sub_25C0516EC((uint64_t)v21, v46, &qword_26A589350);
      sub_25C02FB8C(v26, v49, &qword_26A589350);
      goto LABEL_7;
    case 2:
      sub_25C0EB328();
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v11);
      uint64_t v27 = sub_25C0EB358();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v28 = sub_25C0EB2E8();
      uint64_t v29 = swift_getKeyPath();
      uint64_t v55 = v27;
      long long v56 = xmmword_25C0F19F0;
      uint64_t v57 = v29;
      uint64_t v58 = v28;
      char v59 = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589358);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589360);
      sub_25C088B40();
      sub_25C088BE0();
      sub_25C0EAD28();
      uint64_t v30 = v62;
      char v31 = v63;
      long long v32 = v61;
      char v33 = v53;
      *unint64_t v53 = v60;
      v33[1] = v32;
      *((void *)v33 + 4) = v30;
      *((unsigned char *)v33 + 40) = v31;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589378);
      sub_25C088C54(&qword_26A589380, &qword_26A589338, (void (*)(void))sub_25C088CCC);
      sub_25C083F14(&qword_26A5893A0, &qword_26A589378, (void (*)(void))sub_25C088B40, (void (*)(void))sub_25C088BE0);
      sub_25C0EAD28();
      swift_release();
      swift_release();
      goto LABEL_5;
    case 3:
      id v34 = objc_msgSend(self, sel_mainBundle);
      sub_25C0EB368();
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v11);
      uint64_t v35 = sub_25C0EB358();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v55 = v35;
      long long v56 = xmmword_25C0F19F0;
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      char v59 = 1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589358);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589360);
      sub_25C088B40();
      sub_25C088BE0();
      sub_25C0EAD28();
      uint64_t v36 = v62;
      char v37 = v63;
      long long v38 = v61;
      uint64_t v39 = v53;
      *unint64_t v53 = v60;
      v39[1] = v38;
      *((void *)v39 + 4) = v36;
      *((unsigned char *)v39 + 40) = v37;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589378);
      sub_25C088C54(&qword_26A589380, &qword_26A589338, (void (*)(void))sub_25C088CCC);
      sub_25C083F14(&qword_26A5893A0, &qword_26A589378, (void (*)(void))sub_25C088B40, (void (*)(void))sub_25C088BE0);
      sub_25C0EAD28();
LABEL_5:
      uint64_t result = swift_release();
      break;
    default:
      uint64_t v46 = (uint64_t)&v45 - v22;
      sub_25C0EB328();
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v11);
      uint64_t v45 = sub_25C0EB358();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      sub_25C0EAC18();
      uint64_t v23 = sub_25C0EAC28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      uint64_t v24 = swift_getKeyPath();
      sub_25C02FB8C((uint64_t)v10, (uint64_t)v7 + *(int *)(v47 + 28), &qword_26A588C90);
      *unint64_t v7 = v24;
      sub_25C02FB8C((uint64_t)v7, (uint64_t)&v17[*(int *)(v15 + 36)], &qword_26A589340);
      *(void *)uint64_t v17 = v45;
      *((void *)v17 + 1) = 0;
      *((_WORD *)v17 + 8) = 257;
      swift_retain();
      sub_25C02FBF0((uint64_t)v7, &qword_26A589340);
      sub_25C02FBF0((uint64_t)v10, &qword_26A588C90);
      swift_release();
      uint64_t v25 = sub_25C0EB2E8();
      sub_25C02FB8C((uint64_t)v17, (uint64_t)v21, &qword_26A589348);
      *(void *)&v21[*(int *)(v18 + 36)] = v25;
      sub_25C02FBF0((uint64_t)v17, &qword_26A589348);
      uint64_t v26 = v46;
      sub_25C0516EC((uint64_t)v21, v46, &qword_26A589350);
      sub_25C02FB8C(v26, v49, &qword_26A589350);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      sub_25C088CCC();
      uint64_t v44 = (uint64_t)v50;
      sub_25C0EAD28();
      sub_25C02FB8C(v44, (uint64_t)v53, &qword_26A589338);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589378);
      sub_25C088C54(&qword_26A589380, &qword_26A589338, (void (*)(void))sub_25C088CCC);
      sub_25C083F14(&qword_26A5893A0, &qword_26A589378, (void (*)(void))sub_25C088B40, (void (*)(void))sub_25C088BE0);
      sub_25C0EAD28();
      sub_25C02FBF0(v44, &qword_26A589338);
      uint64_t result = sub_25C02FBF0(v26, &qword_26A589350);
      break;
  }
  return result;
}

uint64_t sub_25C083114@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5892F0);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_25C0583D0(&qword_26A5892F8, &qword_26A5892F0);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)&long long v29 = v4;
  *((void *)&v29 + 1) = v5;
  *(void *)&long long v30 = v6;
  *((void *)&v30 + 1) = v7;
  uint64_t v8 = sub_25C0EA898();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v21 - v13;
  long long v15 = v2[5];
  long long v33 = v2[4];
  long long v34 = v15;
  long long v35 = v2[6];
  uint64_t v36 = *((void *)v2 + 14);
  long long v16 = v2[1];
  long long v29 = *v2;
  long long v30 = v16;
  long long v17 = v2[3];
  long long v31 = v2[2];
  long long v32 = v17;
  uint64_t v26 = v5;
  uint64_t v27 = v7;
  uint64_t v28 = &v29;
  uint64_t v23 = v5;
  uint64_t v24 = v7;
  uint64_t v25 = &v29;
  sub_25C08362C((uint64_t)sub_25C084368);
  swift_getWitnessTable();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v14, v12, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  v18(v22, v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
}

uint64_t sub_25C083364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(void))(v9 + 104))();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_25C0834A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5892F0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 16);
  long long v29 = *(_OWORD *)a1;
  long long v30 = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  long long v31 = *(_OWORD *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v26 = v13;
  long long v27 = v14;
  long long v28 = v15;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  long long v17 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v16 + 112) = v17;
  *(_OWORD *)(v16 + 128) = *(_OWORD *)(a1 + 96);
  *(void *)(v16 + 144) = *(void *)(a1 + 112);
  long long v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v16 + 48) = v18;
  long long v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v16 + 80) = v19;
  uint64_t v20 = (uint64_t *)&v11[*(int *)(v9 + 52)];
  *uint64_t v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  swift_storeEnumTagMultiPayload();
  long long v21 = v30;
  *(_OWORD *)uint64_t v11 = v29;
  *((_OWORD *)v11 + 1) = v21;
  long long v22 = v26;
  long long v23 = v27;
  *((_OWORD *)v11 + 2) = v31;
  *((_OWORD *)v11 + 3) = v22;
  long long v24 = v28;
  *((_OWORD *)v11 + 4) = v23;
  *((_OWORD *)v11 + 5) = v24;
  *((void *)v11 + 12) = sub_25C088A44;
  *((void *)v11 + 13) = v16;
  sub_25C0516EC((uint64_t)v11, a4, &qword_26A5892F0);
  sub_25C088A68((uint64_t)&v29);
  sub_25C088A68((uint64_t)&v26);
  return sub_25C088AB4(a1);
}

uint64_t sub_25C08362C(uint64_t a1)
{
  uint64_t v1 = (void (*)(void))MEMORY[0x270FA5388](a1);
  v1();
  return sub_25C0EA888();
}

uint64_t sub_25C083700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25C0EAAE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(v2, (uint64_t)v10, &qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_25C0EA748();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_25C0EBC48();
    long long v14 = sub_25C0EAE98();
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v18 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      *(void *)(v15 + 4) = sub_25C079E24(0x686353726F6C6F43, 0xEB00000000656D65, &v18);
      _os_log_impl(&dword_25C01A000, v14, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v16, -1, -1);
      MEMORY[0x26117E790](v15, -1, -1);
    }

    sub_25C0EAAD8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t _s14descr27097BA99O7SectionVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25C0839A8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_25C0839BC()
{
  unint64_t result = qword_26A589140;
  if (!qword_26A589140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589140);
  }
  return result;
}

double sub_25C083A28@<D0>(_OWORD *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 16);
  long long v7 = v3;
  _s14descr27097BA99O7SectionVMa();
  sub_25C07D97C((uint64_t *)&v6);
  double result = *(double *)&v6;
  long long v5 = v7;
  *a1 = v6;
  a1[1] = v5;
  return result;
}

uint64_t _s14descr27097BA99O3RowVMa()
{
  uint64_t result = qword_26A591A30;
  if (!qword_26A591A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25C083AD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Report.Evidence(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25C083B2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25C0EA9D8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25C083B58()
{
  return sub_25C0EA9E8();
}

unint64_t sub_25C083B98()
{
  unint64_t result = qword_26A589198;
  if (!qword_26A589198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589180);
    sub_25C083C38();
    sub_25C0583D0(&qword_26A5892C0, &qword_26A5892C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589198);
  }
  return result;
}

unint64_t sub_25C083C38()
{
  unint64_t result = qword_26A5891A0;
  if (!qword_26A5891A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589178);
    sub_25C083F14(&qword_26A5891A8, &qword_26A5891B0, (void (*)(void))sub_25C083CE4, (void (*)(void))sub_25C084188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5891A0);
  }
  return result;
}

uint64_t sub_25C083CE4()
{
  return sub_25C083F14(&qword_26A5891B8, &qword_26A5891C0, (void (*)(void))sub_25C083D20, (void (*)(void))sub_25C083ED8);
}

uint64_t sub_25C083D20()
{
  return sub_25C083F14(&qword_26A5891C8, &qword_26A5891D0, (void (*)(void))sub_25C083D5C, (void (*)(void))sub_25C083DD8);
}

uint64_t sub_25C083D5C()
{
  return sub_25C088C54(&qword_26A5891D8, &qword_26A5891E0, (void (*)(void))sub_25C083D84);
}

unint64_t sub_25C083D84()
{
  unint64_t result = qword_26A5891E8;
  if (!qword_26A5891E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5891E8);
  }
  return result;
}

uint64_t sub_25C083DD8()
{
  return sub_25C083F14(&qword_26A5891F0, &qword_26A5891F8, (void (*)(void))sub_25C083D84, (void (*)(void))sub_25C083E14);
}

unint64_t sub_25C083E14()
{
  unint64_t result = qword_26A589200;
  if (!qword_26A589200)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589208);
    sub_25C0583D0(&qword_26A589210, &qword_26A589218);
    sub_25C0583D0(&qword_26A589220, &qword_26A589228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589200);
  }
  return result;
}

uint64_t sub_25C083ED8()
{
  return sub_25C083F14(&qword_26A589230, &qword_26A589238, (void (*)(void))sub_25C083F9C, (void (*)(void))sub_25C08405C);
}

uint64_t sub_25C083F14(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C083F9C()
{
  unint64_t result = qword_26A589240;
  if (!qword_26A589240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589248);
    sub_25C0583D0(&qword_26A589250, &qword_26A589258);
    sub_25C0583D0(&qword_26A589260, &qword_26A589268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589240);
  }
  return result;
}

unint64_t sub_25C08405C()
{
  unint64_t result = qword_26A589270;
  if (!qword_26A589270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589278);
    sub_25C083D84();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589280);
    sub_25C0EADF8();
    sub_25C0583D0(&qword_26A589288, &qword_26A589280);
    sub_25C089404(&qword_26A589290, MEMORY[0x263F19DF8]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589270);
  }
  return result;
}

unint64_t sub_25C084188()
{
  unint64_t result = qword_26A589298;
  if (!qword_26A589298)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5892A0);
    sub_25C084228();
    sub_25C0583D0(&qword_26A5892B0, &qword_26A5892B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589298);
  }
  return result;
}

unint64_t sub_25C084228()
{
  unint64_t result = qword_26A5892A8;
  if (!qword_26A5892A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5892A8);
  }
  return result;
}

unint64_t sub_25C08427C()
{
  unint64_t result = qword_26A5892D0;
  if (!qword_26A5892D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589190);
    sub_25C0842F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5892D0);
  }
  return result;
}

unint64_t sub_25C0842F0()
{
  unint64_t result = qword_26A5892D8;
  if (!qword_26A5892D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5892D8);
  }
  return result;
}

uint64_t _s14descr27097BA99O6DetailVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25C08435C@<X0>(uint64_t a1@<X8>)
{
  return sub_25C081CB4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_25C084368@<X0>(char *a1@<X8>)
{
  return sub_25C083364(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_25C084374@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0834A4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_25C084380()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0843C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C084408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C084424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C084468()
{
  return swift_getWitnessTable();
}

uint64_t sub_25C084484()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0844C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

void sub_25C0844D0()
{
  sub_25C08711C(319, &qword_26A589308, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_25C08459C(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_25C0EA748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25C0846C0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_25C0EA748();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_25C084778(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_25C0EA748();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25C084840(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_25C02FBF0((uint64_t)a1 + v7, &qword_26A5890F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_25C0EA748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_25C084934(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_25C0EA748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_25C084A08(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_25C02FBF0((uint64_t)a1 + v6, &qword_26A5890F0);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_25C0EA748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25C084B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C084B18);
}

uint64_t sub_25C084B18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589300);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25C084BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C084BE0);
}

void *sub_25C084BE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589300);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25C084C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

void sub_25C084C94()
{
  sub_25C08711C(319, &qword_26A589308, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25C084D74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    }
    uint64_t v11 = a2[8];
    uint64_t v12 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v12;
    swift_retain();
    if (v11)
    {
      uint64_t v13 = a2[9];
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v13;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    }
    uint64_t v14 = *(int *)(a3 + 60);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_25C0EA748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25C084F1C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(void *)(a1 + 64)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_25C0EA748();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25C085000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_retain();
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v12 = *(int *)(a3 + 60);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_25C0EA748();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25C085158(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25C08539C(a1);
      long long v8 = a2[1];
      long long v7 = a2[2];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = v7;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *a2;
    long long v10 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v9;
  }
  uint64_t v11 = *((void *)a2 + 7);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v12)
    {
      uint64_t v13 = *((void *)a2 + 9);
      *(void *)(a1 + 64) = v12;
      *(void *)(a1 + 72) = v13;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = *((void *)a2 + 9);
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v14;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = a2[4];
LABEL_15:
  if ((long long *)a1 != a2)
  {
    uint64_t v15 = *(int *)(a3 + 60);
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_25C02FBF0(a1 + v15, &qword_26A5890F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_25C0EA748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25C08539C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C0853F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v6;
    *(void *)(a1 + 72) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v8 = *(int *)(a3 + 60);
  long long v9 = (void *)(a1 + v8);
  long long v10 = (const void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_25C0EA748();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25C0854F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_25C08539C(a1);
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  uint64_t v9 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v9;
      *(void *)(a1 + 72) = v10;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v11;
    goto LABEL_13;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 60);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_25C02FBF0(a1 + v12, &qword_26A5890F0);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_25C0EA748();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25C0856A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0856B4);
}

uint64_t sub_25C0856B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589300);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25C085768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C08577C);
}

uint64_t sub_25C08577C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589300);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25C085828(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    uint64_t v16 = v15 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = a3[5];
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *uint64_t v6 = *(uint64_t *)((char *)a2 + v5);
    v6[1] = v8;
    swift_retain();
    swift_retain();
    uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
    uint64_t v10 = (char *)v6 + v9;
    uint64_t v11 = (char *)(v7 + v9);
    uint64_t v12 = sub_25C0EA328();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v66 = a1;
    uint64_t v69 = v12;
    uint64_t v70 = v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v17 = (int *)type metadata accessor for Report.Evidence(0);
    uint64_t v18 = v17[6];
    long long v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = *(void *)&v11[v18 + 8];
    *(void *)long long v19 = *(void *)&v11[v18];
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *(void *)&v11[v18 + 24];
    *((void *)v19 + 2) = *(void *)&v11[v18 + 16];
    *((void *)v19 + 3) = v22;
    uint64_t v23 = *(void *)&v11[v18 + 40];
    *((void *)v19 + 4) = *(void *)&v11[v18 + 32];
    *((void *)v19 + 5) = v23;
    uint64_t v24 = *(void *)&v11[v18 + 56];
    *((void *)v19 + 6) = *(void *)&v11[v18 + 48];
    *((void *)v19 + 7) = v24;
    uint64_t v25 = *(void *)&v11[v18 + 72];
    *((void *)v19 + 8) = *(void *)&v11[v18 + 64];
    *((void *)v19 + 9) = v25;
    uint64_t v26 = *(void *)&v11[v18 + 88];
    *((void *)v19 + 10) = *(void *)&v11[v18 + 80];
    *((void *)v19 + 11) = v26;
    uint64_t v27 = *(void *)&v11[v18 + 104];
    *((void *)v19 + 12) = *(void *)&v11[v18 + 96];
    *((void *)v19 + 13) = v27;
    uint64_t v28 = *(void *)&v11[v18 + 120];
    *((void *)v19 + 14) = *(void *)&v11[v18 + 112];
    *((void *)v19 + 15) = v28;
    uint64_t v29 = *(void *)&v11[v18 + 136];
    *((void *)v19 + 16) = *(void *)&v11[v18 + 128];
    *((void *)v19 + 17) = v29;
    uint64_t v30 = *(void *)&v11[v18 + 152];
    *((void *)v19 + 18) = *(void *)&v11[v18 + 144];
    *((void *)v19 + 19) = v30;
    uint64_t v31 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
    uint64_t v67 = &v20[v31];
    uint64_t v68 = &v19[v31];
    long long v32 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v68, v67, v69);
    *(void *)&v10[v17[7]] = *(void *)&v11[v17[7]];
    *(void *)&v10[v17[8]] = *(void *)&v11[v17[8]];
    uint64_t v33 = v17[9];
    long long v34 = &v10[v33];
    long long v35 = &v11[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)long long v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    v10[v17[10]] = v11[v17[10]];
    v10[v17[11]] = v11[v17[11]];
    uint64_t v37 = v17[12];
    long long v38 = &v10[v37];
    uint64_t v39 = &v11[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)long long v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    *(void *)&v10[v17[13]] = *(void *)&v11[v17[13]];
    uint64_t v41 = v17[14];
    uint64_t v42 = &v10[v41];
    uint64_t v43 = (uint64_t *)&v11[v41];
    unint64_t v44 = *(void *)&v11[v41 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    }
    else
    {
      uint64_t v45 = *v43;
      sub_25C034EC8(*v43, v44);
      *(void *)uint64_t v42 = v45;
      *((void *)v42 + 1) = v44;
    }
    uint64_t v16 = v66;
    uint64_t v46 = v17[15];
    uint64_t v47 = &v10[v46];
    uint64_t v48 = &v11[v46];
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    *(void *)&v10[v17[16]] = *(void *)&v11[v17[16]];
    uint64_t v50 = v17[17];
    uint64_t v51 = &v10[v50];
    uint64_t v52 = &v11[v50];
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)uint64_t v51 = *(void *)v52;
    *((void *)v51 + 1) = v53;
    uint64_t v54 = v17[18];
    uint64_t v55 = &v10[v54];
    long long v56 = &v11[v54];
    uint64_t v57 = *((void *)v56 + 1);
    *(void *)uint64_t v55 = *(void *)v56;
    *((void *)v55 + 1) = v57;
    *(void *)&v10[v17[19]] = *(void *)&v11[v17[19]];
    uint64_t v58 = a3[6];
    uint64_t v59 = a3[7];
    uint64_t v60 = v66 + v58;
    uint64_t v61 = (uint64_t)a2 + v58;
    uint64_t v62 = *(void *)(v61 + 8);
    *(void *)uint64_t v60 = *(void *)v61;
    *(void *)(v60 + 8) = v62;
    *(void *)(v60 + 16) = *(void *)(v61 + 16);
    *(unsigned char *)(v60 + 24) = *(unsigned char *)(v61 + 24);
    *(unsigned char *)(v66 + v59) = *((unsigned char *)a2 + v59);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v16;
}

uint64_t sub_25C085C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v4 = sub_25C0EA328();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = type metadata accessor for Report.Evidence(0);
  uint64_t v7 = v3 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7 + *(int *)(v8 + 40), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v6 + 56));
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_25C035294(*v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_25C085E60(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = a3[5];
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  void *v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  swift_retain();
  swift_retain();
  uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v9 = (char *)v5 + v8;
  unint64_t v10 = (char *)(v6 + v8);
  uint64_t v11 = sub_25C0EA328();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v63 = a1;
  uint64_t v66 = v11;
  uint64_t v67 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v15 = v14[6];
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  uint64_t v18 = *(void *)&v10[v15 + 8];
  *(void *)uint64_t v16 = *(void *)&v10[v15];
  *((void *)v16 + 1) = v18;
  uint64_t v19 = *(void *)&v10[v15 + 24];
  *((void *)v16 + 2) = *(void *)&v10[v15 + 16];
  *((void *)v16 + 3) = v19;
  uint64_t v20 = *(void *)&v10[v15 + 40];
  *((void *)v16 + 4) = *(void *)&v10[v15 + 32];
  *((void *)v16 + 5) = v20;
  uint64_t v21 = *(void *)&v10[v15 + 56];
  *((void *)v16 + 6) = *(void *)&v10[v15 + 48];
  *((void *)v16 + 7) = v21;
  uint64_t v22 = *(void *)&v10[v15 + 72];
  *((void *)v16 + 8) = *(void *)&v10[v15 + 64];
  *((void *)v16 + 9) = v22;
  uint64_t v23 = *(void *)&v10[v15 + 88];
  *((void *)v16 + 10) = *(void *)&v10[v15 + 80];
  *((void *)v16 + 11) = v23;
  uint64_t v24 = *(void *)&v10[v15 + 104];
  *((void *)v16 + 12) = *(void *)&v10[v15 + 96];
  *((void *)v16 + 13) = v24;
  uint64_t v25 = *(void *)&v10[v15 + 120];
  *((void *)v16 + 14) = *(void *)&v10[v15 + 112];
  *((void *)v16 + 15) = v25;
  uint64_t v26 = *(void *)&v10[v15 + 136];
  *((void *)v16 + 16) = *(void *)&v10[v15 + 128];
  *((void *)v16 + 17) = v26;
  uint64_t v27 = *(void *)&v10[v15 + 152];
  *((void *)v16 + 18) = *(void *)&v10[v15 + 144];
  *((void *)v16 + 19) = v27;
  uint64_t v28 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
  int v64 = &v17[v28];
  int v65 = &v16[v28];
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v65, v64, v66);
  *(void *)&v9[v14[7]] = *(void *)&v10[v14[7]];
  *(void *)&v9[v14[8]] = *(void *)&v10[v14[8]];
  uint64_t v30 = v14[9];
  uint64_t v31 = &v9[v30];
  long long v32 = &v10[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  v9[v14[10]] = v10[v14[10]];
  v9[v14[11]] = v10[v14[11]];
  uint64_t v34 = v14[12];
  long long v35 = &v9[v34];
  uint64_t v36 = &v10[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)long long v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  *(void *)&v9[v14[13]] = *(void *)&v10[v14[13]];
  uint64_t v38 = v14[14];
  uint64_t v39 = &v9[v38];
  uint64_t v40 = (uint64_t *)&v10[v38];
  unint64_t v41 = *(void *)&v10[v38 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v41 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  }
  else
  {
    uint64_t v42 = *v40;
    sub_25C034EC8(*v40, v41);
    *(void *)uint64_t v39 = v42;
    *((void *)v39 + 1) = v41;
  }
  uint64_t v43 = v14[15];
  unint64_t v44 = &v9[v43];
  uint64_t v45 = &v10[v43];
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)unint64_t v44 = *(void *)v45;
  *((void *)v44 + 1) = v46;
  *(void *)&v9[v14[16]] = *(void *)&v10[v14[16]];
  uint64_t v47 = v14[17];
  uint64_t v48 = &v9[v47];
  uint64_t v49 = &v10[v47];
  uint64_t v50 = *((void *)v49 + 1);
  *(void *)uint64_t v48 = *(void *)v49;
  *((void *)v48 + 1) = v50;
  uint64_t v51 = v14[18];
  uint64_t v52 = &v9[v51];
  uint64_t v53 = &v10[v51];
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = *(void *)v53;
  *((void *)v52 + 1) = v54;
  *(void *)&v9[v14[19]] = *(void *)&v10[v14[19]];
  uint64_t v55 = a3[6];
  uint64_t v56 = a3[7];
  uint64_t v57 = v63 + v55;
  uint64_t v58 = a2 + v55;
  uint64_t v59 = *(void *)(v58 + 8);
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v59;
  *(void *)(v57 + 16) = *(void *)(v58 + 16);
  *(unsigned char *)(v57 + 24) = *(unsigned char *)(v58 + 24);
  *(unsigned char *)(v63 + v56) = *(unsigned char *)(a2 + v56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v63;
}

uint64_t sub_25C086238(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v5;
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  *(void *)(a1 + v6) = *(uint64_t *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  unint64_t v10 = (char *)(v7 + v9);
  uint64_t v11 = (char *)(v8 + v9);
  uint64_t v12 = sub_25C0EA328();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v19 = v18[6];
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  *(void *)uint64_t v20 = *(void *)&v11[v19];
  *((void *)v20 + 1) = *(void *)&v11[v19 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 2) = *((void *)v21 + 2);
  *((void *)v20 + 3) = *((void *)v21 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 4) = *((void *)v21 + 4);
  *((void *)v20 + 5) = *((void *)v21 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 6) = *((void *)v21 + 6);
  *((void *)v20 + 7) = *((void *)v21 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 8) = *((void *)v21 + 8);
  *((void *)v20 + 9) = *((void *)v21 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 10) = *((void *)v21 + 10);
  *((void *)v20 + 11) = *((void *)v21 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 12) = *((void *)v21 + 12);
  *((void *)v20 + 13) = *((void *)v21 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 14) = *((void *)v21 + 14);
  *((void *)v20 + 15) = *((void *)v21 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 16) = *((void *)v21 + 16);
  *((void *)v20 + 17) = *((void *)v21 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 18) = *((void *)v21 + 18);
  *((void *)v20 + 19) = *((void *)v21 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(&v20[*(int *)(v22 + 40)], &v21[*(int *)(v22 + 40)], v12);
  *(void *)&v10[v18[7]] = *(void *)&v11[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[8]] = *(void *)&v11[v18[8]];
  uint64_t v23 = v18[9];
  uint64_t v24 = &v10[v23];
  uint64_t v25 = &v11[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v18[10]] = v11[v18[10]];
  v10[v18[11]] = v11[v18[11]];
  uint64_t v26 = v18[12];
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[13]] = *(void *)&v11[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v18[14];
  uint64_t v30 = (uint64_t *)&v10[v29];
  uint64_t v31 = (uint64_t *)&v11[v29];
  unint64_t v32 = *(void *)&v11[v29 + 8];
  if (*(void *)&v10[v29 + 8] >> 60 != 15)
  {
    if (v32 >> 60 != 15)
    {
      uint64_t v34 = *v31;
      sub_25C034EC8(*v31, v32);
      uint64_t v35 = *v30;
      unint64_t v36 = v30[1];
      *uint64_t v30 = v34;
      v30[1] = v32;
      sub_25C035294(v35, v36);
      goto LABEL_14;
    }
    sub_25C052A18((uint64_t)v30);
    goto LABEL_12;
  }
  if (v32 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    goto LABEL_14;
  }
  uint64_t v33 = *v31;
  sub_25C034EC8(*v31, v32);
  *uint64_t v30 = v33;
  v30[1] = v32;
LABEL_14:
  uint64_t v37 = v18[15];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[16]] = *(void *)&v11[v18[16]];
  uint64_t v40 = v18[17];
  unint64_t v41 = &v10[v40];
  uint64_t v42 = &v11[v40];
  *(void *)unint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = v18[18];
  unint64_t v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  *(void *)unint64_t v44 = *(void *)v45;
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[19]] = *(void *)&v11[v18[19]];
  uint64_t v46 = a3[6];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = (uint64_t)a2 + v46;
  *(void *)(a1 + v46) = *(uint64_t *)((char *)a2 + v46);
  swift_retain();
  swift_release();
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_retain();
  swift_release();
  uint64_t v49 = *(void *)(v48 + 16);
  *(unsigned char *)(v47 + 24) = *(unsigned char *)(v48 + 24);
  *(void *)(v47 + 16) = v49;
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_25C0867CC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = (char *)(v8 + v10);
  uint64_t v13 = sub_25C0EA328();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  int v16 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v17 = v16[6];
  uint64_t v18 = &v11[v17];
  uint64_t v19 = &v12[v17];
  long long v20 = *(_OWORD *)&v12[v17 + 16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)&v12[v17];
  *((_OWORD *)v18 + 1) = v20;
  long long v21 = *(_OWORD *)&v12[v17 + 48];
  *((_OWORD *)v18 + 2) = *(_OWORD *)&v12[v17 + 32];
  *((_OWORD *)v18 + 3) = v21;
  long long v22 = *(_OWORD *)&v12[v17 + 112];
  *((_OWORD *)v18 + 6) = *(_OWORD *)&v12[v17 + 96];
  *((_OWORD *)v18 + 7) = v22;
  long long v23 = *(_OWORD *)&v12[v17 + 144];
  *((_OWORD *)v18 + 8) = *(_OWORD *)&v12[v17 + 128];
  *((_OWORD *)v18 + 9) = v23;
  long long v24 = *(_OWORD *)&v12[v17 + 80];
  *((_OWORD *)v18 + 4) = *(_OWORD *)&v12[v17 + 64];
  *((_OWORD *)v18 + 5) = v24;
  uint64_t v25 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v18[*(int *)(v25 + 40)], &v19[*(int *)(v25 + 40)], v13);
  *(void *)&v11[v16[7]] = *(void *)&v12[v16[7]];
  *(void *)&v11[v16[8]] = *(void *)&v12[v16[8]];
  *(_OWORD *)&v11[v16[9]] = *(_OWORD *)&v12[v16[9]];
  v11[v16[10]] = v12[v16[10]];
  v11[v16[11]] = v12[v16[11]];
  *(_OWORD *)&v11[v16[12]] = *(_OWORD *)&v12[v16[12]];
  *(void *)&v11[v16[13]] = *(void *)&v12[v16[13]];
  *(_OWORD *)&v11[v16[14]] = *(_OWORD *)&v12[v16[14]];
  *(_OWORD *)&v11[v16[15]] = *(_OWORD *)&v12[v16[15]];
  *(void *)&v11[v16[16]] = *(void *)&v12[v16[16]];
  *(_OWORD *)&v11[v16[17]] = *(_OWORD *)&v12[v16[17]];
  *(_OWORD *)&v11[v16[18]] = *(_OWORD *)&v12[v16[18]];
  *(void *)&v11[v16[19]] = *(void *)&v12[v16[19]];
  uint64_t v26 = a3[6];
  uint64_t v27 = a3[7];
  uint64_t v28 = (_OWORD *)(a1 + v26);
  uint64_t v29 = (_OWORD *)(a2 + v26);
  *uint64_t v28 = *v29;
  *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v29 + 9);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  return a1;
}

uint64_t sub_25C086A4C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v10 = (char *)(v7 + v9);
  uint64_t v11 = (char *)(v8 + v9);
  uint64_t v12 = sub_25C0EA328();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v19 = v18[6];
  long long v20 = &v10[v19];
  long long v21 = &v11[v19];
  uint64_t v22 = *(void *)&v11[v19 + 8];
  *(void *)long long v20 = *(void *)&v11[v19];
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v21 + 3);
  *((void *)v20 + 2) = *((void *)v21 + 2);
  *((void *)v20 + 3) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v21 + 5);
  *((void *)v20 + 4) = *((void *)v21 + 4);
  *((void *)v20 + 5) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v21 + 7);
  *((void *)v20 + 6) = *((void *)v21 + 6);
  *((void *)v20 + 7) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v21 + 9);
  *((void *)v20 + 8) = *((void *)v21 + 8);
  *((void *)v20 + 9) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v21 + 11);
  *((void *)v20 + 10) = *((void *)v21 + 10);
  *((void *)v20 + 11) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v21 + 13);
  *((void *)v20 + 12) = *((void *)v21 + 12);
  *((void *)v20 + 13) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)v21 + 15);
  *((void *)v20 + 14) = *((void *)v21 + 14);
  *((void *)v20 + 15) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v21 + 17);
  *((void *)v20 + 16) = *((void *)v21 + 16);
  *((void *)v20 + 17) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v21 + 19);
  *((void *)v20 + 18) = *((void *)v21 + 18);
  *((void *)v20 + 19) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(&v20[*(int *)(v32 + 40)], &v21[*(int *)(v32 + 40)], v12);
  *(void *)&v10[v18[7]] = *(void *)&v11[v18[7]];
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[8]] = *(void *)&v11[v18[8]];
  uint64_t v33 = v18[9];
  uint64_t v34 = &v10[v33];
  uint64_t v35 = &v11[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v10[v18[10]] = v11[v18[10]];
  v10[v18[11]] = v11[v18[11]];
  uint64_t v38 = v18[12];
  uint64_t v39 = &v10[v38];
  uint64_t v40 = &v11[v38];
  uint64_t v42 = *(void *)v40;
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = v42;
  *((void *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[13]] = *(void *)&v11[v18[13]];
  swift_bridgeObjectRelease();
  uint64_t v43 = v18[14];
  unint64_t v44 = (uint64_t *)&v10[v43];
  uint64_t v45 = (uint64_t *)&v11[v43];
  unint64_t v46 = *(void *)&v10[v43 + 8];
  if (v46 >> 60 != 15)
  {
    unint64_t v47 = v45[1];
    if (v47 >> 60 != 15)
    {
      uint64_t v48 = *v44;
      *unint64_t v44 = *v45;
      v44[1] = v47;
      sub_25C035294(v48, v46);
      goto LABEL_12;
    }
    sub_25C052A18((uint64_t)v44);
  }
  *(_OWORD *)unint64_t v44 = *(_OWORD *)v45;
LABEL_12:
  uint64_t v49 = v18[15];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  uint64_t v53 = *(void *)v51;
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = v53;
  *((void *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[16]] = *(void *)&v11[v18[16]];
  uint64_t v54 = v18[17];
  uint64_t v55 = &v10[v54];
  uint64_t v56 = &v11[v54];
  uint64_t v58 = *(void *)v56;
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = v58;
  *((void *)v55 + 1) = v57;
  swift_bridgeObjectRelease();
  uint64_t v59 = v18[18];
  uint64_t v60 = &v10[v59];
  uint64_t v61 = &v11[v59];
  uint64_t v63 = *(void *)v61;
  uint64_t v62 = *((void *)v61 + 1);
  *(void *)uint64_t v60 = v63;
  *((void *)v60 + 1) = v62;
  swift_bridgeObjectRelease();
  *(void *)&v10[v18[19]] = *(void *)&v11[v18[19]];
  uint64_t v64 = a3[6];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  *(void *)(a1 + v64) = *(void *)(a2 + v64);
  swift_release();
  *(void *)(v65 + 8) = *(void *)(v66 + 8);
  swift_release();
  *(void *)(v65 + 16) = *(void *)(v66 + 16);
  *(unsigned char *)(v65 + 24) = *(unsigned char *)(v66 + 24);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_25C086E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C086E98);
}

uint64_t sub_25C086E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_25C086F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C086F78);
}

uint64_t sub_25C086F78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void sub_25C087040()
{
  sub_25C08711C(319, (unint64_t *)&qword_26A589310, type metadata accessor for Report.Evidence, MEMORY[0x263F1B750]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25C08711C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25C087180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

void sub_25C087188()
{
  sub_25C08711C(319, &qword_26A589308, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25C087260(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v9 = a2[13];
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    uint64_t v10 = *(int *)(a3 + 44);
    uint64_t v11 = (void *)(a1 + v10);
    unint64_t v12 = (uint64_t *)((char *)a2 + v10);
    *(void *)(a1 + 104) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_25C0EA748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25C087410(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_25C0EA748();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25C0874F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_25C0EA748();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25C087650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_25C02FBF0(a1 + v7, &qword_26A5890F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_25C0EA748();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_25C087804(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[6] = a2[6];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_25C0EA748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25C0878F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 44);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_25C02FBF0(a1 + v10, &qword_26A5890F0);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_25C0EA748();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25C087A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C087A70);
}

uint64_t sub_25C087A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589300);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25C087B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C087B38);
}

uint64_t sub_25C087B38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589300);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25C087BE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_25C087C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_25C087D08(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v4 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_25C087E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t sub_25C087EF4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25C087F3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s14descr27097BA99O4LinkVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25C087FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t getEnumTagSinglePayload for HPKEEnvelope.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_25C088048(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C088114);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t _s14descr27097BA99O4LinkV4IconOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25C088154()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C088330()
{
  return swift_getWitnessTable();
}

unint64_t sub_25C0886A8()
{
  unint64_t result = qword_26A589318;
  if (!qword_26A589318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589320);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589180);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589190);
    sub_25C083B98();
    sub_25C08427C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589318);
  }
  return result;
}

uint64_t sub_25C088774()
{
  return swift_getWitnessTable();
}

uint64_t sub_25C0888A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25C088940()
{
  return swift_getWitnessTable();
}

uint64_t sub_25C0889DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 152, 7);
}

uint64_t sub_25C088A44@<X0>(uint64_t a1@<X8>)
{
  return sub_25C082534(a1);
}

uint64_t sub_25C088A68(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C088AB4(uint64_t a1)
{
  return a1;
}

unint64_t sub_25C088B40()
{
  unint64_t result = qword_26A589368;
  if (!qword_26A589368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589358);
    sub_25C088BE0();
    sub_25C0583D0(&qword_26A589108, &qword_26A589100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589368);
  }
  return result;
}

unint64_t sub_25C088BE0()
{
  unint64_t result = qword_26A589370;
  if (!qword_26A589370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589370);
  }
  return result;
}

uint64_t sub_25C088C54(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C088CCC()
{
  unint64_t result = qword_26A589388;
  if (!qword_26A589388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589350);
    sub_25C088D6C();
    sub_25C0583D0(&qword_26A588CB8, &qword_26A588CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589388);
  }
  return result;
}

unint64_t sub_25C088D6C()
{
  unint64_t result = qword_26A589390;
  if (!qword_26A589390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589348);
    sub_25C088BE0();
    sub_25C0583D0(&qword_26A589398, &qword_26A589340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589390);
  }
  return result;
}

uint64_t sub_25C088E0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C0EAA98();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25C088E3C()
{
  return sub_25C0EAAA8();
}

uint64_t sub_25C088E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_25C0EAAB8();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_25C088E98()
{
  return sub_25C0EAAC8();
}

uint64_t sub_25C088EC8()
{
  return sub_25C0EAA08();
}

uint64_t sub_25C088EEC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588C90);
  MEMORY[0x270FA5388](v2 - 8);
  sub_25C02FB8C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A588C90);
  return sub_25C0EAA18();
}

uint64_t sub_25C088F80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25C0EA9B8();
  *a1 = result;
  return result;
}

uint64_t sub_25C088FAC()
{
  return sub_25C0EA9C8();
}

unint64_t sub_25C088FD8()
{
  unint64_t result = qword_26A5893A8;
  if (!qword_26A5893A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5892E8);
    sub_25C0583D0(&qword_26A5893B0, &qword_26A5893B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5893A8);
  }
  return result;
}

uint64_t sub_25C089078(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_25C05CED4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_25C05CED4(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_25C089124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    sub_25C05CE24(a3, a4, a5 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_25C08919C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    sub_25C05CED4(a3, a4, a5 & 1);
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C0891F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C089264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr27097BA99O3RowVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C0892C8@<X0>(uint64_t a1@<X8>)
{
  _s14descr27097BA99O3RowVMa();

  return sub_25C0811F4(a1);
}

uint64_t sub_25C089368(uint64_t a1)
{
  _s14descr27097BA99O3RowVMa();

  return sub_25C081310(a1);
}

uint64_t sub_25C089404(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C08944C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C0894BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C089530@<X0>(unsigned char *a1@<X8>)
{
  _s14descr27097BA99O3RowVMa();

  return sub_25C081048(a1);
}

uint64_t sub_25C0895D0(uint64_t a1)
{
  return sub_25C089740(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_25C081124);
}

unint64_t sub_25C0895E8()
{
  unint64_t result = qword_26A589468;
  if (!qword_26A589468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589468);
  }
  return result;
}

unint64_t sub_25C08963C()
{
  unint64_t result = qword_26A589470;
  if (!qword_26A589470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589470);
  }
  return result;
}

unint64_t sub_25C089690()
{
  unint64_t result = qword_26A589480;
  if (!qword_26A589480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589480);
  }
  return result;
}

unint64_t sub_25C0896E4()
{
  unint64_t result = qword_26A589488;
  if (!qword_26A589488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589488);
  }
  return result;
}

uint64_t sub_25C089740(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(_s14descr27097BA99O3RowVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v2 + v5, v6);
}

uint64_t sub_25C0897F0@<X0>(uint64_t a1@<X8>)
{
  sub_25C0E7DC8(**(void **)(v1 + 16), *(unsigned char *)(*(void *)(v1 + 16) + 8), (uint64_t)&v7);
  uint64_t result = sub_25C026FAC();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_25C089864()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_25C089874(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_25C089890@<X0>(void *a1@<X8>)
{
  _s14descr27097BA99O3RowVMa();

  return sub_25C080E84(a1);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v1 = _s14descr27097BA99O3RowVMa();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v14 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = type metadata accessor for Report.Evidence(0);
  uint64_t v9 = v5 + *(int *)(v8 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9 + *(int *)(v10 + 40), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(v5 + *(int *)(v8 + 56));
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_25C035294(*v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v14 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_25C089BE8()
{
  _s14descr27097BA99O3RowVMa();

  return sub_25C080F70();
}

uint64_t sub_25C089C84@<X0>(char *a1@<X8>)
{
  return sub_25C07BB18(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25C089CC0()
{
  uint64_t v0 = sub_25C0EA638();
  __swift_allocate_value_buffer(v0, qword_26A591BF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A591BF8);
  return sub_25C0EA628();
}

uint64_t sub_25C089D44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, void *))
{
  if (a1) {
    uint64_t v7 = (void *)sub_25C0EB738();
  }
  else {
    uint64_t v7 = 0;
  }
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_25C089E38;
  v10[3] = &block_descriptor_119;
  uint64_t v8 = _Block_copy(v10);
  swift_retain();
  a4(v7, v8);
  _Block_release(v8);

  return swift_release();
}

void sub_25C089E38(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_25C089EC4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589920);
    uint64_t v2 = sub_25C0EC0B8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_25C07A0B4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_25C031DA8(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_25C031DA8(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_25C031DA8(v36, v37);
    sub_25C031DA8(v37, &v33);
    uint64_t result = sub_25C0EBF18();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_25C031DA8(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_25C058188();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25C08A28C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ReportNavigationStack(0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone(v1);
  sub_25C095C00(a1, (uint64_t)v5, type metadata accessor for ReportNavigationStack);
  uint64_t v7 = sub_25C0EAC48();
  sub_25C0961E8(a1, type metadata accessor for ReportNavigationStack);
  return v7;
}

id Report.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id Report.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Report();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Report.__deallocating_deinit(uint64_t a1)
{
  return sub_25C090098(a1, type metadata accessor for Report);
}

void sub_25C08A50C(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_25C0EB5B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = a1;
  id v8 = (id)a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x263F80ED0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
      uint64_t v10 = *v7;
      uint64_t v9 = v7[1];
      if (*v7 == 0xD00000000000001FLL && v9 == 0x800000025C0F6570
        || (sub_25C0EC268() & 1) != 0
        || v10 == 0xD000000000000019 && v9 == 0x800000025C0F6590)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      char v20 = sub_25C0EC268();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_9;
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    }
  }

  uint64_t v22 = a1;
  id v11 = (id)a1;
  if (swift_dynamicCast())
  {

    a1 = v21;
LABEL_9:

    goto LABEL_15;
  }

  type metadata accessor for Code(0);
  uint64_t v22 = 6;
  id v12 = (id)a1;
  sub_25C095C90(&qword_26A5894B8, type metadata accessor for Code);
  char v13 = sub_25C0EA0D8();

  if ((v13 & 1) == 0)
  {
    uint64_t v22 = 34;
    id v14 = (id)a1;
    char v15 = sub_25C0EA0D8();

    if ((v15 & 1) == 0)
    {
      uint64_t v22 = 4;
      id v16 = (id)a1;
      char v17 = sub_25C0EA0D8();

      if ((v17 & 1) == 0)
      {
        uint64_t v22 = 3;
        id v18 = (id)a1;
        char v19 = sub_25C0EA0D8();

        if ((v19 & 1) == 0) {
          a1 |= 0x8000000000000000;
        }
      }
    }
  }
LABEL_15:
  *a2 = a1;
}

void sub_25C08A888()
{
  unint64_t v1 = (unint64_t)*v0;
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
      v1 &= 0x3FFFFFFFFFFFFFFFuLL;
      id v11 = (id)v1;
      if (qword_26A591BF0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_25C0EA638();
      __swift_project_value_buffer(v12, (uint64_t)qword_26A591BF8);
      id v13 = (id)v1;
      id v14 = (id)v1;
      osos_log_t log = sub_25C0EA618();
      os_log_type_t v6 = sub_25C0EBC38();
      if (!os_log_type_enabled(oslog, v6)) {
        goto LABEL_19;
      }
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      id v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v15 = (id)v1;
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      sub_25C0EBE58();
      void *v8 = v27;

      uint64_t v10 = "Failed to start report. No report info. Error: %@";
      goto LABEL_14;
    case 2uLL:
      v1 &= 0x3FFFFFFFFFFFFFFFuLL;
      id v16 = (id)v1;
      if (qword_26A591BF0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_25C0EA638();
      __swift_project_value_buffer(v17, (uint64_t)qword_26A591BF8);
      id v18 = (id)v1;
      id v19 = (id)v1;
      osos_log_t log = sub_25C0EA618();
      os_log_type_t v6 = sub_25C0EBC38();
      if (os_log_type_enabled(oslog, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        id v8 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 138412290;
        id v20 = (id)v1;
        uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
        sub_25C0EBE58();
        void *v8 = v28;

        uint64_t v10 = "Failed to send report. Error: %@";
        goto LABEL_14;
      }
LABEL_19:

      unint64_t v24 = (void *)v1;
      goto LABEL_21;
    case 3uLL:
      if (qword_26A591BF0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_25C0EA638();
      __swift_project_value_buffer(v21, (uint64_t)qword_26A591BF8);
      osos_log_t log = sub_25C0EA618();
      os_log_type_t v22 = sub_25C0EBC38();
      if (os_log_type_enabled(oslog, v22))
      {
        char v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v23 = 0;
        _os_log_impl(&dword_25C01A000, oslog, v22, "Failed to send report. TrustKit unavailable.", v23, 2u);
        MEMORY[0x26117E790](v23, -1, -1);
      }
      goto LABEL_22;
    default:
      id v2 = (id)v1;
      if (qword_26A591BF0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_25C0EA638();
      __swift_project_value_buffer(v3, (uint64_t)qword_26A591BF8);
      id v4 = (id)v1;
      id v5 = (id)v1;
      osos_log_t log = sub_25C0EA618();
      os_log_type_t v6 = sub_25C0EBC38();
      if (os_log_type_enabled(oslog, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        id v8 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 138412290;
        id v9 = (id)v1;
        uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
        sub_25C0EBE58();
        void *v8 = v26;
        v1 &= 0x3FFFFFFFFFFFFFFFuLL;

        uint64_t v10 = "Failed to send report. No connection. Error: %@";
LABEL_14:
        _os_log_impl(&dword_25C01A000, oslog, v6, v10, v7, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
        swift_arrayDestroy();
        MEMORY[0x26117E790](v8, -1, -1);
        MEMORY[0x26117E790](v7, -1, -1);
      }
      else
      {

        unint64_t v24 = (void *)(v1 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_21:

LABEL_22:
      }
      return;
  }
}

uint64_t sub_25C08ADA4()
{
  uint64_t v0 = type metadata accessor for Report.TestingOptions(0);
  __swift_allocate_value_buffer(v0, qword_26A595658);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A595658);
  if (qword_26A591C18 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26A595670);
  return sub_25C095C00(v2, v1, type metadata accessor for Report.TestingOptions);
}

uint64_t sub_25C08AE48()
{
  return sub_25C08AE6C(&qword_26A591C10, (uint64_t)qword_26A595658);
}

uint64_t sub_25C08AE6C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Report.TestingOptions(0);

  return __swift_project_value_buffer(v3, a2);
}

uint64_t sub_25C08AEC0()
{
  uint64_t v0 = (int *)type metadata accessor for Report.TestingOptions(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_26A595670);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_26A595670);
  uint64_t v2 = v1 + v0[5];
  uint64_t v3 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = v1 + v0[6];
  uint64_t v5 = sub_25C0EA398();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  *(unsigned char *)(v1 + v0[7]) = 0;
  *(unsigned char *)(v1 + v0[8]) = 0;
  *(unsigned char *)(v1 + v0[9]) = 0;
  *(unsigned char *)(v1 + v0[10]) = 0;
  *(unsigned char *)(v1 + v0[11]) = 0;
  return result;
}

uint64_t sub_25C08AFD4()
{
  return sub_25C0EAA68();
}

uint64_t sub_25C08AFF8()
{
  return sub_25C0EAA78();
}

uint64_t sub_25C08B01C(uint64_t a1)
{
  uint64_t v2 = sub_25C0EA858();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_25C0EAA88();
}

uint64_t sub_25C08B0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = type metadata accessor for ReportNavigationStack(0);
  uint64_t v4 = v3 - 8;
  uint64_t v30 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = v5;
  uint64_t v32 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894E0);
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894E8);
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  long long v33 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v48 = *(void *)(v1 + 8);
  *(void *)&long long v49 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894F0);
  sub_25C0EB3A8();
  uint64_t v48 = *(void *)v44;
  long long v49 = *(_OWORD *)&v44[8];
  uint64_t v40 = v1;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894F8);
  sub_25C0583D0(&qword_26A589500, &qword_26A5894D8);
  sub_25C0583D0(&qword_26A589508, &qword_26A5894D8);
  sub_25C0583D0(&qword_26A589510, &qword_26A5894D8);
  uint64_t v10 = type metadata accessor for ReportScreen(255);
  uint64_t v11 = type metadata accessor for ReportToAuthoritiesScreenView(255);
  uint64_t v12 = sub_25C095C90(&qword_26A589518, (void (*)(uint64_t))type metadata accessor for ReportScreen);
  uint64_t v13 = sub_25C095C90(&qword_26A589520, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView);
  *(void *)unint64_t v44 = MEMORY[0x263F1BA08];
  *(void *)&v44[8] = v10;
  *(void *)&v44[16] = v11;
  uint64_t v45 = MEMORY[0x263F1BA00];
  uint64_t v46 = v12;
  uint64_t v47 = v13;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v7;
  sub_25C0EA908();
  uint64_t v29 = *(int *)(v4 + 40);
  *(_OWORD *)unint64_t v44 = *(_OWORD *)(v1 + v29);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589528);
  sub_25C0EB388();
  uint64_t v14 = v43;
  if ((~(void)v43 & 0xF000000000000007) != 0)
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v44);
    sub_25C095CD8(v14);
  }
  else
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)v44);
  }
  long long v15 = *(_OWORD *)v44;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v43 = v15;
  uint64_t v16 = v32;
  sub_25C095C00(v2, v32, type metadata accessor for ReportNavigationStack);
  sub_25C0EBAD8();
  uint64_t v17 = sub_25C0EBAC8();
  unint64_t v18 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = MEMORY[0x263F8F500];
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v20;
  sub_25C0960E0(v16, v19 + v18, type metadata accessor for ReportNavigationStack);
  sub_25C095C00(v2, v16, type metadata accessor for ReportNavigationStack);
  uint64_t v21 = sub_25C0EBAC8();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v20;
  sub_25C0960E0(v16, v22 + v18, type metadata accessor for ReportNavigationStack);
  sub_25C0EB478();
  long long v41 = *(_OWORD *)(v2 + v29);
  uint64_t v23 = sub_25C0EB388();
  *(void *)&long long v41 = v42;
  MEMORY[0x270FA5388](v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589530);
  sub_25C0583D0(&qword_26A589538, &qword_26A5894E0);
  sub_25C027054();
  sub_25C09601C();
  uint64_t v24 = v38;
  BOOL v25 = v33;
  uint64_t v26 = v36;
  sub_25C0EB198();
  swift_release();
  swift_release();
  sub_25C095CD8(v41);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v39, v25, v35);
}

uint64_t sub_25C08B89C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportNavigationStack(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  type metadata accessor for ReportScreen(0);
  sub_25C095C00(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportNavigationStack);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_25C0960E0((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for ReportNavigationStack);
  type metadata accessor for ReportToAuthoritiesScreenView(0);
  sub_25C095C90(&qword_26A589518, (void (*)(uint64_t))type metadata accessor for ReportScreen);
  sub_25C095C90(&qword_26A589520, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView);
  sub_25C0EB148();
  return swift_release();
}

uint64_t sub_25C08BA7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ReportNavigationStack(0);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v21 = sub_25C0EA838();
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a2;
  sub_25C095C00(a1, (uint64_t)v13, type metadata accessor for ReportScreen);
  swift_retain();
  sub_25C094C4C(&qword_26A589490, MEMORY[0x263F188C0], 0x417373696D736944, (uint64_t)v10);
  sub_25C095C00((uint64_t)a2, (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportNavigationStack);
  unint64_t v15 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v16 = swift_allocObject();
  sub_25C0960E0((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for ReportNavigationStack);
  *(void *)a3 = v14;
  uint64_t v17 = (int *)type metadata accessor for ReportToAuthoritiesScreenView(0);
  sub_25C0960E0((uint64_t)v13, (uint64_t)&a3[v17[5]], type metadata accessor for ReportScreen);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(&a3[v17[6]], v10, v21);
  uint64_t v19 = (uint64_t (**)(uint64_t))&a3[v17[7]];
  *uint64_t v19 = sub_25C09F784;
  v19[1] = (uint64_t (*)(uint64_t))v16;
  return result;
}

uint64_t sub_25C08BD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589910);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReportScreen(0);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_25C0EA838();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (id *)((char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C095C00(a1, (uint64_t)v19, type metadata accessor for ReportScreen.Control);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v26 = *v19;
      id v27 = *v19;
      sub_25C08A50C((unint64_t)v26, &v38);
      unint64_t v28 = v38;
      sub_25C08A888();
      uint64_t v29 = (unint64_t *)(a2 + *(int *)(type metadata accessor for ReportNavigationStack(0) + 32));
      unint64_t v31 = v29[1];
      unint64_t v38 = *v29;
      uint64_t v30 = v38;
      unint64_t v39 = v31;
      unint64_t v37 = v28;
      sub_25C09F7F4(v38);
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589528);
      sub_25C0EB398();

      sub_25C095CD8(v30);
      uint64_t result = swift_release();
      break;
    case 2u:
      unint64_t v33 = *(void *)(a2 + 16);
      unint64_t v38 = *(void *)(a2 + 8);
      unint64_t v32 = v38;
      unint64_t v39 = v33;
      swift_retain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894F0);
      sub_25C0EB388();
      sub_25C08C24C((uint64_t)v6);
      sub_25C02FBF0((uint64_t)v6, &qword_26A589910);
      unint64_t v38 = v32;
      unint64_t v39 = v33;
      unint64_t v36 = v37;
      sub_25C0EB398();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3u:
      type metadata accessor for ReportNavigationStack(0);
      sub_25C094C4C(&qword_26A589490, MEMORY[0x263F188C0], 0x417373696D736944, (uint64_t)v16);
      sub_25C0EA828();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      break;
    default:
      sub_25C0960E0((uint64_t)v19, (uint64_t)v12, type metadata accessor for ReportScreen);
      sub_25C095C00((uint64_t)v12, (uint64_t)v10, type metadata accessor for ReportScreen);
      unint64_t v21 = *(void *)(a2 + 8);
      unint64_t v20 = *(void *)(a2 + 16);
      unint64_t v38 = v21;
      unint64_t v39 = v20;
      swift_retain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894F0);
      sub_25C0EB388();
      unint64_t v22 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_25C09536C(0, *(void *)(v22 + 16) + 1, 1, v22);
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v22 = sub_25C09536C(v23 > 1, v24 + 1, 1, v22);
      }
      *(void *)(v22 + 16) = v24 + 1;
      sub_25C0960E0((uint64_t)v10, v22+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v24, type metadata accessor for ReportScreen);
      unint64_t v37 = v22;
      unint64_t v38 = v21;
      unint64_t v39 = v20;
      unint64_t v36 = v22;
      sub_25C0EB398();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = sub_25C0961E8((uint64_t)v12, type metadata accessor for ReportScreen);
      break;
  }
  return result;
}

uint64_t sub_25C08C24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReportScreen(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v15 - v8;
  unint64_t v10 = *v1;
  if (*(void *)(*v1 + 16))
  {
    uint64_t v16 = v7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_25C0955D4(v10);
      unint64_t v10 = result;
    }
    uint64_t v12 = *(void *)(v10 + 16);
    if (v12)
    {
      uint64_t v13 = v12 - 1;
      sub_25C0960E0(v10+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * (v12 - 1), (uint64_t)v6, type metadata accessor for ReportScreen);
      *(void *)(v10 + 16) = v13;
      *uint64_t v1 = v10;
      sub_25C0960E0((uint64_t)v6, (uint64_t)v9, type metadata accessor for ReportScreen);
      sub_25C0960E0((uint64_t)v9, a1, type metadata accessor for ReportScreen);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v3);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    return v14(a1, 1, 1, v3);
  }
  return result;
}

uint64_t sub_25C08C430@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898F8);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589558);
  MEMORY[0x270FA5388](v37);
  uint64_t v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReportNavigationStack(0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v34 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v33 - v22;
  if (*a1 >> 62)
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v45);
    long long v40 = v45;
    uint64_t v41 = v46;
    uint64_t v42 = v47;
    char v43 = v48;
    uint64_t v44 = v49;
    sub_25C0270A8();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v38, v13, v9);
    swift_storeEnumTagMultiPayload();
    sub_25C0583D0(&qword_26A589550, &qword_26A589558);
    sub_25C0583D0(&qword_26A589560, &qword_26A589568);
    sub_25C0EAD28();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else
  {
    uint64_t v24 = a2;
    BOOL v25 = v21;
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v45);
    long long v40 = v45;
    uint64_t v41 = v46;
    uint64_t v42 = v47;
    char v43 = v48;
    uint64_t v44 = v49;
    sub_25C095C00(v24, (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportNavigationStack);
    unint64_t v26 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v27 = swift_allocObject();
    sub_25C0960E0((uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for ReportNavigationStack);
    sub_25C0270A8();
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v45);
    long long v40 = v45;
    uint64_t v41 = v46;
    uint64_t v42 = v47;
    char v43 = v48;
    uint64_t v44 = v49;
    unint64_t v33 = v25;
    sub_25C0270A8();
    unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v28(v19, v23, v9);
    v28(v16, v25, v9);
    uint64_t v29 = (uint64_t)v35;
    v28(v35, v19, v9);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589900);
    v28((char *)(v29 + *(int *)(v30 + 48)), v16, v9);
    unint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v16, v9);
    v31(v19, v9);
    sub_25C02FB8C(v29, v38, &qword_26A589558);
    swift_storeEnumTagMultiPayload();
    sub_25C0583D0(&qword_26A589550, &qword_26A589558);
    sub_25C0583D0(&qword_26A589560, &qword_26A589568);
    sub_25C0EAD28();
    sub_25C02FBF0(v29, &qword_26A589558);
    v31(v33, v9);
    return ((uint64_t (*)(char *, uint64_t))v31)(v23, v9);
  }
}

uint64_t sub_25C08CA6C()
{
  uint64_t v0 = sub_25C0EA238();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25C0EA858();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReportNavigationStack(0);
  sub_25C094C4C(&qword_26A589498, MEMORY[0x263F18948], 0x414C52556E65704FLL, (uint64_t)v7);
  uint64_t v8 = sub_25C063248();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
  sub_25C0EA848();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25C08CC3C@<X0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v6);
  uint64_t result = sub_25C026FAC();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t (*sub_25C08CCF0())()
{
  return j__swift_endAccess;
}

uint64_t sub_25C08CD44@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25C026FAC();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 1;
  return result;
}

id sub_25C08CDEC()
{
  swift_getKeyPath();
  (*(void (**)(void))(*v0 + 152))();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = (void *)v0[2];

  return v1;
}

uint64_t sub_25C08CE74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_25C08CEC0(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 128))(*a1);
}

void sub_25C08CF14(void *a1)
{
  swift_getKeyPath();
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  (*(void (**)(void))(*(void *)v1 + 160))();
  swift_release();
}

void (*sub_25C08CFB0(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v1 + 152))();
  swift_release();
  v3[5] = OBJC_IVAR____TtCV26SensitiveContentAnalysisUI29ReportToAuthoritiesScreenView17ProgressViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_25C095C90(&qword_26A589570, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.ProgressViewModel);
  sub_25C0EA458();
  swift_release();
  v3[7] = sub_25C08CCF0();
  return sub_25C08D0D0;
}

void sub_25C08D0D0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_25C0EA448();
  swift_release();

  free(v1);
}

uint64_t sub_25C08D15C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_25C0EA468();
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t sub_25C08D1A8()
{
  return sub_25C0EA438();
}

uint64_t sub_25C08D230()
{
  return sub_25C0EA428();
}

uint64_t sub_25C08D2F0()
{
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtCV26SensitiveContentAnalysisUI29ReportToAuthoritiesScreenView17ProgressViewModel___observationRegistrar;
  uint64_t v2 = sub_25C0EA478();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_25C08D398@<X0>(double a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  unint64_t v31 = a3;
  uint64_t v5 = sub_25C0EABB8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898E8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v30 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - v11;
  double v32 = a1;
  uint64_t v33 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589580);
  sub_25C0EB388();
  sub_25C0EA7A8();
  sub_25C0EABA8();
  sub_25C0EAB98();
  double v32 = a1;
  uint64_t v33 = a2;
  sub_25C0EB388();
  uint64_t v13 = v34;
  *(double *)&uint64_t v14 = COERCE_DOUBLE(sub_25C0EBBD8());
  LOBYTE(a1) = v15;

  double v16 = *(double *)&v14;
  if (LOBYTE(a1)) {
    double v16 = 0.0;
  }
  double v32 = v16;
  sub_25C0EAB78();
  sub_25C0EAB98();
  sub_25C0EABC8();
  uint64_t v17 = sub_25C0EB038();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  BOOL v25 = v12;
  v24(v10, v12, v6);
  unint64_t v26 = v31;
  v24(v31, v10, v6);
  uint64_t v27 = &v26[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A5898F0) + 48)];
  *(void *)uint64_t v27 = v17;
  *((void *)v27 + 1) = v19;
  v27[16] = v23;
  *((void *)v27 + 3) = v21;
  sub_25C05CE24(v17, v19, v23);
  unint64_t v28 = *(void (**)(char *, uint64_t))(v30 + 8);
  swift_bridgeObjectRetain();
  v28(v25, v6);
  sub_25C05CED4(v17, v19, v23);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v28)(v10, v6);
}

uint64_t sub_25C08D69C@<X0>(uint64_t a1@<X8>)
{
  double v4 = *v1;
  uint64_t v3 = *((void *)v1 + 1);
  *(void *)a1 = sub_25C0EABF8();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589588);
  return sub_25C08D398(v4, v3, (char *)(a1 + *(int *)(v5 + 44)));
}

id sub_25C08D6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return sub_25C08D754(a1, a2, a3, a4);
}

id sub_25C08D754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v168 = a3;
  uint64_t v169 = a4;
  uint64_t v163 = sub_25C0EA238();
  uint64_t v157 = *(void *)(v163 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v163);
  uint64_t v155 = (char *)v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = v7;
  MEMORY[0x270FA5388](v6);
  long long v162 = (char *)v146 - v8;
  uint64_t v154 = type metadata accessor for ReportScreen(0);
  uint64_t v153 = *(void *)(v154 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v154);
  uint64_t v152 = (uint64_t)v146 - (((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v151 = (uint64_t)v146 - v11;
  uint64_t v12 = (int *)type metadata accessor for ReportScreen.Button(0);
  uint64_t v158 = *((void *)v12 - 1);
  MEMORY[0x270FA5388](v12);
  uint64_t v165 = (char *)v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for Report.Evidence(0);
  id v160 = (id)*((void *)v14 - 1);
  uint64_t v161 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v150 = (uint64_t)v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType;
  sub_25C0325C8((uint64_t)&v173);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v23 = (void *)sub_25C0EB828();
  swift_bridgeObjectRelease();
  uint64_t v166 = a1;
  uint64_t v170 = v22;
  uint64_t v24 = *(void *)(a1 + v22);
  uint64_t v164 = a2;
  sub_25C032864(v24, &v173);
  uint64_t v25 = v174;
  if (v174)
  {
    uint64_t v26 = v173;
    swift_bridgeObjectRetain();
    sub_25C096910(v26, v25);
    uint64_t v27 = (void *)sub_25C0EB828();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v28 = v166;
  uint64_t v29 = v170;
  uint64_t v30 = sub_25C032B84();
  unint64_t v31 = (objc_class *)type metadata accessor for ReportToAuthoritiesScreenView.FlowView.FlowController();
  v172.receiver = v167;
  v172.super_class = v31;
  id v32 = objc_msgSendSuper2(&v172, sel_initWithTitle_detailText_icon_contentLayout_, v23, v27, v30, 2);

  uint64_t v33 = *(void *)(v28 + v29);
  id v34 = v32;
  sub_25C032DD4(v33, (uint64_t)&v173);
  id v167 = v34;
  if (v174)
  {
    LOBYTE(v175) = v175 & 1;
    id v35 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895C0));
    uint64_t v36 = (void *)sub_25C0EA8C8();
    objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v37 = objc_msgSend(v34, sel_contentView);
    objc_msgSend(v37, sel_addSubview_, v36);

    uint64_t v161 = (int *)self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895B0);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_25C0F1EA0;
    id v39 = objc_msgSend(v36, sel_leadingAnchor);
    id v40 = objc_msgSend(v34, sel_contentView);
    id v41 = objc_msgSend(v40, sel_leadingAnchor);

    id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
    *(void *)(v38 + 32) = v42;
    id v43 = objc_msgSend(v36, sel_trailingAnchor);
    id v44 = objc_msgSend(v34, sel_contentView);
    id v45 = objc_msgSend(v44, sel_trailingAnchor);

    id v46 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v45);
    *(void *)(v38 + 40) = v46;
    id v47 = objc_msgSend(v36, sel_topAnchor);
    id v48 = objc_msgSend(v34, sel_contentView);
    id v49 = objc_msgSend(v48, sel_topAnchor);

    id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);
    *(void *)(v38 + 48) = v50;
    id v51 = objc_msgSend(v36, sel_bottomAnchor);
    id v52 = objc_msgSend(v34, sel_contentView);
    id v53 = objc_msgSend(v52, sel_bottomAnchor);

    id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
    *(void *)(v38 + 56) = v54;
    uint64_t v173 = v38;
    sub_25C0EB9E8();
    sub_25C031870(0, &qword_26A5895B8);
    uint64_t v55 = (void *)sub_25C0EB9B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v161, sel_activateConstraints_, v55);

LABEL_8:
    uint64_t v79 = (uint64_t)v165;
    goto LABEL_9;
  }
  uint64_t v56 = sub_25C032F50();
  if (v56)
  {
    uint64_t v57 = (void *)v56;
    uint64_t v171 = v56;
    sub_25C031870(0, &qword_26A589578);
    uint64_t v161 = v57;
    sub_25C0EB378();
    id v58 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A8));
    uint64_t v59 = (void *)sub_25C0EA8C8();
    objc_msgSend(v59, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v60 = v167;
    id v61 = objc_msgSend(v167, sel_contentView);
    objc_msgSend(v61, sel_addSubview_, v59);

    id v160 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895B0);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_25C0F1EA0;
    id v63 = objc_msgSend(v59, sel_leadingAnchor);
    id v64 = objc_msgSend(v60, sel_contentView);
    id v65 = objc_msgSend(v64, sel_leadingAnchor);

    id v66 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v65);
    *(void *)(v62 + 32) = v66;
    id v67 = objc_msgSend(v59, sel_trailingAnchor);
    id v68 = objc_msgSend(v60, sel_contentView);
    id v69 = objc_msgSend(v68, sel_trailingAnchor);

    id v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v69);
    *(void *)(v62 + 40) = v70;
    id v71 = objc_msgSend(v59, sel_topAnchor);
    id v72 = objc_msgSend(v60, sel_contentView);
    id v73 = objc_msgSend(v72, sel_topAnchor);

    id v74 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v73);
    *(void *)(v62 + 48) = v74;
    id v75 = objc_msgSend(v59, sel_bottomAnchor);
    id v76 = objc_msgSend(v60, sel_contentView);
    id v77 = objc_msgSend(v76, sel_bottomAnchor);

    id v78 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v77);
    *(void *)(v62 + 56) = v78;
    uint64_t v173 = v62;
    sub_25C0EB9E8();
    sub_25C031870(0, &qword_26A5895B8);
    uint64_t v55 = (void *)sub_25C0EB9B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v160, sel_activateConstraints_, v55);

    goto LABEL_8;
  }
  uint64_t v130 = v166;
  uint64_t v131 = (uint64_t)v21;
  uint64_t v132 = sub_25C095C00(v166 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, (uint64_t)v21, type metadata accessor for Report.Authority);
  (*(void (**)(uint64_t))(*(void *)v130 + 144))(v132);
  unsigned __int8 v133 = v161;
  int v134 = (*((uint64_t (**)(char *, uint64_t, int *))v160 + 6))(v18, 1, v161);
  if (v134)
  {
    sub_25C02FBF0((uint64_t)v18, (uint64_t *)&unk_26A589590);
    uint64_t v135 = 0;
  }
  else
  {
    uint64_t v136 = v150;
    sub_25C095C00((uint64_t)v18, v150, type metadata accessor for Report.Evidence);
    sub_25C02FBF0((uint64_t)v18, (uint64_t *)&unk_26A589590);
    uint64_t v135 = *(void *)(v136 + v133[16]);
    sub_25C0961E8(v136, type metadata accessor for Report.Evidence);
  }
  uint64_t v79 = (uint64_t)v165;
  uint64_t v137 = (void **)sub_25C03300C(v131, v135, v134 != 0, *(void **)(v166 + v170));
  sub_25C0961E8(v131, type metadata accessor for Report.Authority);
  uint64_t v138 = (char *)v137[2];
  if (v138)
  {
    id v160 = v137;
    uint64_t v161 = v12;
    uint64_t v139 = v137 + 10;
    id v140 = v167;
    do
    {
      uint64_t v141 = *v139;
      id v142 = v140;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v143 = v141;
      unint64_t v144 = (void *)sub_25C0EB828();
      swift_bridgeObjectRelease();
      uint64_t v145 = (void *)sub_25C0EB828();
      objc_msgSend(v142, sel_addBulletedListItemWithTitle_description_image_, v144, v145, v143);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v139 += 7;
      --v138;
    }
    while (v138);
    swift_bridgeObjectRelease();
    uint64_t v79 = (uint64_t)v165;
    uint64_t v12 = v161;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_9:
  uint64_t v147 = sub_25C033A1C(v166 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, *(void *)(v166 + v170));
  uint64_t v80 = *(void *)(v147 + 16);
  id v81 = v167;
  if (v80)
  {
    uint64_t v82 = v147 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    id v160 = (id)(v157 + 32);
    uint64_t v150 = v157 + 16;
    uint64_t v149 = v157 + 8;
    uint64_t v148 = (char *)v159 + 7;
    uint64_t v170 = *(void *)(v158 + 72);
    v146[1] = 0x800000025C0F65B0;
    uint64_t v161 = v12;
    do
    {
      sub_25C095C00(v82, v79, type metadata accessor for ReportScreen.Button);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 5u:
          id v83 = objc_msgSend(self, sel_linkButton);
          long long v123 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v83, sel_setTitle_forState_, v123, 0);

          sub_25C031870(0, (unint64_t *)&qword_26A588428);
          uint64_t v124 = swift_allocObject();
          *(void *)(v124 + 16) = v168;
          *(void *)(v124 + 24) = v169;
          swift_retain();
          long long v125 = (void *)sub_25C0EBD18();
          objc_msgSend(v83, sel_addAction_forControlEvents_, v125, 64);

          id v88 = objc_msgSend(v81, sel_buttonTray);
          goto LABEL_12;
        case 2u:
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895A0);
          uint64_t v109 = v157;
          uint64_t v159 = *(void (**)(void))(v157 + 32);
          unint64_t v110 = v162;
          v159();
          id v111 = objc_msgSend(self, sel_linkButton);
          char v112 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v111, sel_setTitle_forState_, v112, 0);

          sub_25C031870(0, (unint64_t *)&qword_26A588428);
          uint64_t v113 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v114 = v155;
          uint64_t v115 = v163;
          (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v155, v110, v163);
          unint64_t v116 = (*(unsigned __int8 *)(v109 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
          uint64_t v117 = swift_allocObject();
          *(void *)(v117 + 16) = v113;
          unint64_t v118 = v117 + v116;
          id v81 = v167;
          ((void (*)(unint64_t, char *, uint64_t))v159)(v118, v114, v115);
          long long v119 = (void *)sub_25C0EBD18();
          objc_msgSend(v111, sel_addAction_forControlEvents_, v119, 64);

          id v120 = objc_msgSend(v81, sel_buttonTray);
          objc_msgSend(v120, sel_addButton_, v111);

          uint64_t v79 = (uint64_t)v165;
          (*(void (**)(char *, uint64_t))(v109 + 8))(v162, v115);
          break;
        case 3u:
          id v83 = objc_msgSend(self, sel_linkButton);
          unsigned long long v121 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v83, sel_setTitle_forState_, v121, 0);

          sub_25C031870(0, (unint64_t *)&qword_26A588428);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          long long v122 = (void *)sub_25C0EBD18();
          objc_msgSend(v83, sel_addAction_forControlEvents_, v122, 64);

          id v88 = objc_msgSend(v81, sel_buttonTray);
          goto LABEL_12;
        case 4u:
          id v83 = objc_msgSend(self, sel_linkButton);
          uint64_t v84 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v83, sel_setTitle_forState_, v84, 0);

          sub_25C031870(0, (unint64_t *)&qword_26A588428);
          long long v85 = (void *)swift_allocObject();
          v85[2] = v168;
          uint64_t v86 = v166;
          v85[3] = v169;
          v85[4] = v86;
          swift_retain();
          id v81 = v167;
          swift_retain();
          uint64_t v87 = (void *)sub_25C0EBD18();
          objc_msgSend(v83, sel_addAction_forControlEvents_, v87, 64);

          id v88 = objc_msgSend(v81, sel_buttonTray);
          goto LABEL_12;
        case 6u:
          id v83 = objc_msgSend(self, sel_boldButton);
          long long v126 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v83, sel_setTitle_forState_, v126, 0);

          sub_25C031870(0, (unint64_t *)&qword_26A588428);
          uint64_t v127 = swift_allocObject();
          *(void *)(v127 + 16) = v168;
          *(void *)(v127 + 24) = v169;
          swift_retain();
          long long v128 = (void *)sub_25C0EBD18();
          objc_msgSend(v83, sel_addAction_forControlEvents_, v128, 64);

          id v88 = objc_msgSend(v81, sel_buttonTray);
LABEL_12:
          id v89 = v88;
          objc_msgSend(v89, sel_addButton_, v83);

          break;
        default:
          id v90 = objc_msgSend(self, sel_boldButton);
          long long v91 = (void *)sub_25C0EB828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v90, sel_setTitle_forState_, v91, 0);

          uint64_t v158 = sub_25C031870(0, (unint64_t *)&qword_26A588428);
          uint64_t v159 = (void (*)(void))type metadata accessor for ReportScreen;
          uint64_t v92 = v164;
          uint64_t v93 = v151;
          sub_25C095C00(v164, v151, type metadata accessor for ReportScreen);
          unint64_t v94 = (*(unsigned __int8 *)(v153 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
          unint64_t v95 = (unint64_t)&v148[v94] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v96 = (v95 + 23) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v97 = swift_allocObject();
          sub_25C0960E0(v93, v97 + v94, type metadata accessor for ReportScreen);
          long long v98 = (void *)(v97 + v95);
          uint64_t v99 = v169;
          void *v98 = v168;
          v98[1] = v99;
          *(void *)(v97 + v96) = v90;
          *(void *)(v97 + ((v96 + 15) & 0xFFFFFFFFFFFFFFF8)) = v166;
          swift_retain();
          id v100 = v90;
          swift_retain();
          long long v101 = (void *)sub_25C0EBD18();
          objc_msgSend(v100, sel_addAction_forControlEvents_, v101, 64);

          uint64_t v102 = v152;
          sub_25C095C00(v92, v152, (uint64_t (*)(void))v159);
          LODWORD(v101) = swift_getEnumCaseMultiPayload();
          uint64_t v103 = v102;
          id v81 = v167;
          sub_25C0961E8(v103, type metadata accessor for ReportScreen);
          if (!v101)
          {
            uint64_t v104 = self;
            char v105 = (void *)sub_25C0EB828();
            id v106 = objc_msgSend(v104, sel_linkWithBundleIdentifier_, v105);

            if (!v106)
            {
              sub_25C0EC078();
              __break(1u);
              JUMPOUT(0x25C08F100);
            }
            id v107 = objc_msgSend(v81, sel_buttonTray);
            objc_msgSend(v107, sel_setPrivacyLinkController_, v106);
          }
          id v108 = objc_msgSend(v81, sel_buttonTray);
          objc_msgSend(v108, sel_addButton_, v100);

          uint64_t v79 = (uint64_t)v165;
          break;
      }
      v82 += v170;
      --v80;
    }
    while (v80);
  }
  swift_release();

  swift_release();
  sub_25C0961E8(v164, type metadata accessor for ReportScreen);
  swift_bridgeObjectRelease();
  return v81;
}

uint64_t sub_25C08F11C(uint64_t a1, void (*a2)(char *), void (*a3)(char *), void *a4, uint64_t a5)
{
  id v37 = a4;
  uint64_t v38 = a5;
  id v39 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898D0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Report.Evidence(0);
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v36 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C095C00(a1, (uint64_t)v21, type metadata accessor for ReportScreen);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v35 = type metadata accessor for Report.Evidence;
      sub_25C0960E0((uint64_t)v21, (uint64_t)v15, type metadata accessor for Report.Evidence);
      id v24 = v37;
      objc_msgSend(v37, sel_showsBusyIndicator);
      uint64_t v25 = sub_25C0EBB08();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
      sub_25C095C00((uint64_t)v15, (uint64_t)v13, type metadata accessor for Report.Evidence);
      sub_25C0EBAD8();
      uint64_t v26 = v38;
      swift_retain();
      swift_retain();
      id v37 = v24;
      uint64_t v27 = sub_25C0EBAC8();
      unint64_t v28 = (*(unsigned __int8 *)(v36 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v29 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v30 = (void *)swift_allocObject();
      uint64_t v31 = MEMORY[0x263F8F500];
      v30[2] = v27;
      v30[3] = v31;
      void v30[4] = v26;
      sub_25C0960E0((uint64_t)v13, (uint64_t)v30 + v28, v35);
      id v32 = (void (**)(char *))((char *)v30 + v29);
      char *v32 = v39;
      v32[1] = a3;
      *(void *)((char *)v30 + ((v29 + 23) & 0xFFFFFFFFFFFFFFF8)) = v37;
      sub_25C06DE28((uint64_t)v9, (uint64_t)&unk_26A5898E0, (uint64_t)v30);
      swift_release();
      uint64_t v22 = type metadata accessor for Report.Evidence;
      uint64_t v23 = (uint64_t)v15;
      break;
    case 2u:
    case 4u:
      sub_25C0EC078();
      __break(1u);
      JUMPOUT(0x25C08F610);
    case 3u:
      sub_25C0961E8((uint64_t)v21, type metadata accessor for ReportScreen);
      swift_storeEnumTagMultiPayload();
      v39(v18);
      uint64_t v22 = type metadata accessor for ReportScreen.Control;
      uint64_t v23 = (uint64_t)v18;
      break;
    default:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v39(v18);
      sub_25C0961E8((uint64_t)v18, type metadata accessor for ReportScreen.Control);
      uint64_t v22 = type metadata accessor for ReportScreen;
      uint64_t v23 = (uint64_t)v21;
      break;
  }
  return sub_25C0961E8(v23, v22);
}

uint64_t sub_25C08F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  _OWORD v8[5] = a6;
  v8[3] = a4;
  v8[8] = type metadata accessor for ReportScreen.Control(0);
  v8[9] = swift_task_alloc();
  sub_25C0EBAD8();
  v8[10] = sub_25C0EBAC8();
  uint64_t v10 = sub_25C0EBA78();
  v8[11] = v10;
  v8[12] = v9;
  return MEMORY[0x270FA2498](sub_25C08F6F4, v10, v9);
}

uint64_t sub_25C08F6F4()
{
  uint64_t v1 = v0[3];
  id v2 = objc_msgSend(self, sel_progressWithTotalUnitCount_, 100);
  v0[13] = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, id))(*(void *)(*(void *)v1 + 184) + **(int **)(*(void *)v1 + 184));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25C08F828;
  uint64_t v4 = v0[4];
  return v6(v4, v2);
}

uint64_t sub_25C08F828(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[11];
    uint64_t v8 = v6[12];
    uint64_t v9 = sub_25C08FA44;
  }
  else
  {
    v6[16] = a2;
    v6[17] = a1;
    uint64_t v7 = v6[11];
    uint64_t v8 = v6[12];
    uint64_t v9 = sub_25C08F95C;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_25C08F95C()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = (void *)v0[13];
  uint64_t v4 = (void *)v0[9];
  uint64_t v5 = (void (*)(void *))v0[5];
  swift_release();
  *uint64_t v4 = v1;
  v4[1] = v2;
  type metadata accessor for ReportScreen(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v5(v4);

  sub_25C0961E8((uint64_t)v4, type metadata accessor for ReportScreen.Control);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_25C08FA44()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  if (qword_26A591BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v3 = sub_25C0EA638();
  __swift_project_value_buffer(v3, (uint64_t)qword_26A591BF8);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_25C0EA618();
  os_log_type_t v7 = sub_25C0EBC38();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void **)(v0 + 120);
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v13;
    sub_25C0EBE58();
    *uint64_t v11 = v13;

    _os_log_impl(&dword_25C01A000, v6, v7, "An error occurred during the upload process: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v11, -1, -1);
    MEMORY[0x26117E790](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void **)(v0 + 120);
  uint64_t v15 = *(void **)(v0 + 72);
  uint64_t v16 = *(void (**)(void *))(v0 + 40);
  objc_msgSend(*(id *)(v0 + 56), sel_hidesBusyIndicator);
  *uint64_t v15 = v14;
  swift_storeEnumTagMultiPayload();
  id v17 = v14;
  v16(v15);

  sub_25C0961E8((uint64_t)v15, type metadata accessor for ReportScreen.Control);
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

void sub_25C08FCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x26117E860](a1 + 16);
  if (v7)
  {
    BOOL v8 = (void *)v7;
    uint64_t v9 = sub_25C0EA238();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a2, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    uint64_t v11 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      uint64_t v11 = (void *)sub_25C0EA1A8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    }
    id v12 = objc_msgSend(objc_allocWithZone((Class)SCUIMoreHelpWebViewController), sel_initWithURL_, v11);

    if (v12)
    {
      objc_msgSend(v8, sel_presentViewController_animated_completion_, v12, 1, 0);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_25C08FE8C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  sub_25C0961E8((uint64_t)v7, type metadata accessor for ReportScreen.Control);
  return objc_msgSend(self, sel_openChatWithParentsForInterventionType_, *(void *)(a3 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType));
}

uint64_t sub_25C08FF68(void (*a1)(char *))
{
  uint64_t v2 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_25C0961E8((uint64_t)v4, type metadata accessor for ReportScreen.Control);
}

id sub_25C090080(uint64_t a1)
{
  return sub_25C090098(a1, type metadata accessor for ReportToAuthoritiesScreenView.FlowView.FlowController);
}

id sub_25C090098(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_25C0900D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_25C095C00((uint64_t)v2 + *(int *)(a2 + 20), (uint64_t)v6, type metadata accessor for ReportScreen);
  BOOL v8 = (uint64_t *)((char *)v2 + *(int *)(a2 + 24));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  objc_allocWithZone((Class)type metadata accessor for ReportToAuthoritiesScreenView.FlowView.FlowController());
  swift_retain();
  swift_retain();
  return sub_25C08D754(v7, (uint64_t)v6, v9, v10);
}

uint64_t sub_25C0901B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C095C90((unint64_t *)&unk_26A589820, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);

  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_25C090244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C095C90((unint64_t *)&unk_26A589820, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);

  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_25C0902D8()
{
}

uint64_t sub_25C090330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v49 = a1;
  uint64_t v3 = type metadata accessor for ReportOverviewScreen(0);
  MEMORY[0x270FA5388](v3 - 8);
  id v43 = (uint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895C8);
  uint64_t v5 = MEMORY[0x270FA5388](v48);
  uint64_t v42 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v44 = (uint64_t)&v42 - v7;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895D0);
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895D8);
  uint64_t v12 = MEMORY[0x270FA5388](v45);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = type metadata accessor for ReportScreen(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (id *)((char *)&v42 - v21);
  uint64_t v23 = (int *)type metadata accessor for ReportToAuthoritiesScreenView(0);
  uint64_t v24 = (uint64_t)v2 + v23[5];
  sub_25C095C00(v24, (uint64_t)v22, type metadata accessor for ReportScreen);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:

      goto LABEL_6;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 4u:
      uint64_t v25 = *v2;
      sub_25C095C00(v24, (uint64_t)v20, type metadata accessor for ReportScreen);
      uint64_t v26 = (uint64_t *)((char *)v2 + v23[7]);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      swift_retain();
      swift_retain();
      unint64_t v29 = v43;
      sub_25C0CB210(v25, (uint64_t)v20, v27, v28, v43);
      uint64_t v30 = v42;
      sub_25C092848(v24, *(void *)(v25 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType), (uint64_t)v2 + v23[6], v42);
      sub_25C0961E8((uint64_t)v29, type metadata accessor for ReportOverviewScreen);
      uint64_t v31 = &qword_26A5895C8;
      uint64_t v32 = v44;
      sub_25C0516EC(v30, v44, &qword_26A5895C8);
      sub_25C02FB8C(v32, v47, &qword_26A5895C8);
      swift_storeEnumTagMultiPayload();
      sub_25C096980();
      sub_25C097188();
      sub_25C0EAD28();
      uint64_t v33 = v32;
      return sub_25C02FBF0(v33, v31);
    default:
      sub_25C0961E8((uint64_t)v22, type metadata accessor for ReportScreen);
LABEL_6:
      uint64_t v34 = *v2;
      sub_25C095C00(v24, (uint64_t)v11 + *(int *)(v9 + 20), type metadata accessor for ReportScreen);
      id v35 = (uint64_t *)((char *)v2 + v23[7]);
      uint64_t v36 = *v35;
      uint64_t v37 = v35[1];
      *uint64_t v11 = v34;
      uint64_t v38 = (uint64_t *)((char *)v11 + *(int *)(v9 + 24));
      void *v38 = v36;
      v38[1] = v37;
      uint64_t v39 = *(void *)(v34 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType);
      uint64_t v40 = (uint64_t)v2 + v23[6];
      swift_retain();
      swift_retain();
      sub_25C09087C(v24, v39, v40, (uint64_t)v14);
      sub_25C0961E8((uint64_t)v11, type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
      uint64_t v31 = &qword_26A5895D8;
      sub_25C0516EC((uint64_t)v14, (uint64_t)v16, &qword_26A5895D8);
      sub_25C02FB8C((uint64_t)v16, v47, &qword_26A5895D8);
      swift_storeEnumTagMultiPayload();
      sub_25C096980();
      sub_25C097188();
      sub_25C0EAD28();
      uint64_t v33 = (uint64_t)v16;
      return sub_25C02FBF0(v33, v31);
  }
}

uint64_t sub_25C09087C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v162 = a3;
  uint64_t v153 = a2;
  uint64_t v175 = a4;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589850);
  MEMORY[0x270FA5388](v144);
  unint64_t v146 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589858);
  MEMORY[0x270FA5388](v145);
  uint64_t v147 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589860);
  MEMORY[0x270FA5388](v157);
  id v160 = (uint64_t *)((char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589650);
  MEMORY[0x270FA5388](v170);
  uint64_t v161 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589618);
  uint64_t v164 = *(void *)(v177 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v177);
  uint64_t v11 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v163 = (char *)&v143 - v12;
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589868);
  uint64_t v151 = *(void *)(v166 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v166);
  uint64_t v149 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v150 = (char *)&v143 - v15;
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589660);
  MEMORY[0x270FA5388](v159);
  uint64_t v148 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589870);
  MEMORY[0x270FA5388](v172);
  uint64_t v174 = (uint64_t)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589878);
  MEMORY[0x270FA5388](v167);
  uint64_t v169 = (uint64_t)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589880);
  MEMORY[0x270FA5388](v155);
  uint64_t v156 = (uint64_t)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589600);
  MEMORY[0x270FA5388](v168);
  uint64_t v158 = (char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895F0);
  MEMORY[0x270FA5388](v173);
  uint64_t v171 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589628);
  uint64_t v22 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  uint64_t v24 = (char *)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589888);
  uint64_t v152 = *(void *)(v165 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v165);
  uint64_t v27 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v143 - v28;
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589610);
  MEMORY[0x270FA5388](v154);
  uint64_t v31 = (char *)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (id *)((char *)&v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C095C00(a1, (uint64_t)v34, type metadata accessor for ReportScreen);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v50 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(0);
      uint64_t v51 = sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
      MEMORY[0x26117CB60](1, v49, v50, v51);
      uint64_t v52 = swift_bridgeObjectRelease();
      uint64_t v164 = v51;
      if (v153)
      {
        uint64_t v163 = (char *)&v143;
        MEMORY[0x270FA5388](v52);
        *(&v143 - 2) = v162;
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
        uint64_t v178 = v50;
        unint64_t v179 = (char *)v51;
        uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v56 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v55;
        unint64_t v179 = (char *)v56;
        uint64_t v57 = swift_getOpaqueTypeConformance2();
        uint64_t v58 = v176;
        sub_25C0EB1E8();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v58);
        uint64_t v59 = v152;
        id v60 = v27;
        uint64_t v61 = v165;
        (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v29, v60, v165);
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v146, v29, v61);
        swift_storeEnumTagMultiPayload();
        uint64_t v178 = v58;
        unint64_t v179 = (char *)v53;
        uint64_t v180 = OpaqueTypeConformance2;
        uint64_t v181 = v57;
        swift_getOpaqueTypeConformance2();
        uint64_t v62 = (uint64_t)v148;
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v61);
      }
      else
      {
        uint64_t v128 = v51;
        uint64_t v58 = v176;
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v146, v24, v176);
        swift_storeEnumTagMultiPayload();
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
        uint64_t v178 = v50;
        unint64_t v179 = (char *)v128;
        uint64_t v130 = swift_getOpaqueTypeConformance2();
        uint64_t v131 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v132 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v131;
        unint64_t v179 = (char *)v132;
        uint64_t v133 = swift_getOpaqueTypeConformance2();
        uint64_t v178 = v58;
        unint64_t v179 = (char *)v129;
        uint64_t v180 = v130;
        uint64_t v181 = v133;
        swift_getOpaqueTypeConformance2();
        int v134 = v148;
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v58);
        uint64_t v62 = (uint64_t)v134;
      }
      sub_25C02FB8C(v62, (uint64_t)v160, &qword_26A589660);
      swift_storeEnumTagMultiPayload();
      sub_25C096FFC();
      uint64_t v135 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
      uint64_t v178 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
      unint64_t v179 = (char *)v164;
      uint64_t v136 = swift_getOpaqueTypeConformance2();
      uint64_t v178 = v58;
      unint64_t v179 = (char *)v136;
      uint64_t v137 = swift_getOpaqueTypeConformance2();
      uint64_t v138 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v139 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v138;
      unint64_t v179 = (char *)v139;
      uint64_t v140 = swift_getOpaqueTypeConformance2();
      uint64_t v178 = v177;
      unint64_t v179 = (char *)v135;
      uint64_t v180 = v137;
      uint64_t v181 = v140;
      swift_getOpaqueTypeConformance2();
      uint64_t v141 = (uint64_t)v161;
      sub_25C0EAD28();
      sub_25C02FB8C(v141, v169, &qword_26A589650);
      swift_storeEnumTagMultiPayload();
      sub_25C096AD0();
      sub_25C096E2C();
      uint64_t v142 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v141, &qword_26A589650);
      sub_25C02FB8C(v142, v174, &qword_26A5895F0);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A5895E8, &qword_26A5895F0, (void (*)(void))sub_25C096AD0, (void (*)(void))sub_25C096E2C);
      sub_25C0EAD28();
      sub_25C02FBF0(v142, &qword_26A5895F0);
      uint64_t v126 = v62;
      uint64_t v127 = &qword_26A589660;
      goto LABEL_13;
    case 2u:

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v64 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(0);
      uint64_t v65 = sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
      MEMORY[0x26117CB60](1, v63, v64, v65);
      swift_bridgeObjectRelease();
      uint64_t v178 = v64;
      unint64_t v179 = (char *)v65;
      uint64_t v66 = swift_getOpaqueTypeConformance2();
      id v67 = v163;
      uint64_t v68 = v176;
      sub_25C0EB168();
      uint64_t v69 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v68);
      MEMORY[0x270FA5388](v69);
      *(&v143 - 2) = v162;
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
      uint64_t v178 = v68;
      unint64_t v179 = (char *)v66;
      uint64_t v71 = swift_getOpaqueTypeConformance2();
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v73 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v72;
      unint64_t v179 = (char *)v73;
      uint64_t v74 = swift_getOpaqueTypeConformance2();
      id v75 = v149;
      uint64_t v76 = v177;
      sub_25C0EB1E8();
      (*(void (**)(char *, uint64_t))(v164 + 8))(v67, v76);
      uint64_t v77 = v151;
      id v78 = v150;
      uint64_t v79 = v166;
      (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v150, v75, v166);
      (*(void (**)(uint64_t *, char *, uint64_t))(v77 + 16))(v160, v78, v79);
      swift_storeEnumTagMultiPayload();
      sub_25C096FFC();
      uint64_t v178 = v76;
      unint64_t v179 = (char *)v70;
      uint64_t v180 = v71;
      uint64_t v181 = v74;
      swift_getOpaqueTypeConformance2();
      uint64_t v80 = (uint64_t)v161;
      sub_25C0EAD28();
      sub_25C02FB8C(v80, v169, &qword_26A589650);
      swift_storeEnumTagMultiPayload();
      sub_25C096AD0();
      sub_25C096E2C();
      uint64_t v81 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v80, &qword_26A589650);
      sub_25C02FB8C(v81, v174, &qword_26A5895F0);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A5895E8, &qword_26A5895F0, (void (*)(void))sub_25C096AD0, (void (*)(void))sub_25C096E2C);
      sub_25C0EAD28();
      sub_25C02FBF0(v81, &qword_26A5895F0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v78, v79);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v84 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(0);
      uint64_t v85 = sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
      MEMORY[0x26117CB60](1, v83, v84, v85);
      swift_bridgeObjectRelease();
      uint64_t v178 = v84;
      unint64_t v179 = (char *)v85;
      uint64_t v86 = swift_getOpaqueTypeConformance2();
      uint64_t v87 = v176;
      sub_25C0EB168();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v87);
      id v89 = v163;
      uint64_t v88 = v164;
      uint64_t v90 = v177;
      (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v163, v11, v177);
      (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v174, v89, v90);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A5895E8, &qword_26A5895F0, (void (*)(void))sub_25C096AD0, (void (*)(void))sub_25C096E2C);
      uint64_t v178 = v87;
      unint64_t v179 = (char *)v86;
      swift_getOpaqueTypeConformance2();
      sub_25C0EAD28();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v89, v90);
      break;
    case 4u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v92 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(0);
      uint64_t v93 = sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
      MEMORY[0x26117CB60](1, v91, v92, v93);
      uint64_t v94 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v94);
      *(&v143 - 2) = v162;
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
      uint64_t v178 = v92;
      unint64_t v179 = (char *)v93;
      uint64_t v96 = swift_getOpaqueTypeConformance2();
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v98 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v97;
      unint64_t v179 = (char *)v98;
      uint64_t v99 = swift_getOpaqueTypeConformance2();
      uint64_t v100 = v176;
      sub_25C0EB1E8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v100);
      uint64_t v101 = v152;
      uint64_t v102 = v165;
      (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v29, v27, v165);
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v156, v29, v102);
      swift_storeEnumTagMultiPayload();
      sub_25C096C6C();
      uint64_t v178 = v100;
      unint64_t v179 = (char *)v95;
      uint64_t v180 = v96;
      uint64_t v181 = v99;
      swift_getOpaqueTypeConformance2();
      uint64_t v103 = (uint64_t)v158;
      sub_25C0EAD28();
      sub_25C02FB8C(v103, v169, &qword_26A589600);
      swift_storeEnumTagMultiPayload();
      sub_25C096AD0();
      sub_25C096E2C();
      uint64_t v104 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v103, &qword_26A589600);
      sub_25C02FB8C(v104, v174, &qword_26A5895F0);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A5895E8, &qword_26A5895F0, (void (*)(void))sub_25C096AD0, (void (*)(void))sub_25C096E2C);
      uint64_t v178 = v100;
      unint64_t v179 = (char *)v96;
      swift_getOpaqueTypeConformance2();
      sub_25C0EAD28();
      sub_25C02FBF0(v104, &qword_26A5895F0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v29, v102);
      break;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v36 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(0);
      uint64_t v37 = sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
      MEMORY[0x26117CB60](1, v35, v36, v37);
      swift_bridgeObjectRelease();
      uint64_t v38 = (void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v161 = (char *)v37;
      uint64_t v178 = v36;
      unint64_t v179 = (char *)v37;
      if (v153)
      {
        uint64_t v39 = swift_getOpaqueTypeConformance2();
        uint64_t v40 = v176;
        sub_25C0EB168();
        (*v38)(v24, v40);
        id v41 = v163;
        uint64_t v42 = v164;
        uint64_t v43 = v177;
        (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v163, v11, v177);
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v147, v41, v43);
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
        uint64_t v178 = v40;
        unint64_t v179 = (char *)v39;
        uint64_t v45 = swift_getOpaqueTypeConformance2();
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v47 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v46;
        unint64_t v179 = (char *)v47;
        uint64_t v48 = swift_getOpaqueTypeConformance2();
        uint64_t v178 = v43;
        unint64_t v179 = (char *)v44;
        uint64_t v180 = v45;
        uint64_t v181 = v48;
        swift_getOpaqueTypeConformance2();
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
      }
      else
      {
        uint64_t v105 = swift_getOpaqueTypeConformance2();
        id v106 = v163;
        uint64_t v107 = v176;
        sub_25C0EB168();
        uint64_t v108 = ((uint64_t (*)(char *, uint64_t))*v38)(v24, v107);
        id v160 = &v143;
        MEMORY[0x270FA5388](v108);
        *(&v143 - 2) = v162;
        uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
        uint64_t v178 = v107;
        unint64_t v179 = (char *)v105;
        uint64_t v109 = swift_getOpaqueTypeConformance2();
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v111 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v110;
        unint64_t v179 = (char *)v111;
        uint64_t v112 = swift_getOpaqueTypeConformance2();
        uint64_t v113 = v149;
        uint64_t v114 = v177;
        sub_25C0EB1E8();
        (*(void (**)(char *, uint64_t))(v164 + 8))(v106, v114);
        uint64_t v115 = v151;
        unint64_t v116 = v150;
        uint64_t v117 = v166;
        (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v150, v113, v166);
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v147, v116, v117);
        swift_storeEnumTagMultiPayload();
        uint64_t v178 = v114;
        unint64_t v179 = (char *)v162;
        uint64_t v180 = v109;
        uint64_t v181 = v112;
        swift_getOpaqueTypeConformance2();
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v117);
      }
      sub_25C02FB8C((uint64_t)v31, v156, &qword_26A589610);
      swift_storeEnumTagMultiPayload();
      sub_25C096C6C();
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
      uint64_t v178 = type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
      unint64_t v179 = v161;
      uint64_t v119 = swift_getOpaqueTypeConformance2();
      uint64_t v120 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v121 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v120;
      unint64_t v179 = (char *)v121;
      uint64_t v122 = swift_getOpaqueTypeConformance2();
      uint64_t v123 = v176;
      uint64_t v178 = v176;
      unint64_t v179 = (char *)v118;
      uint64_t v180 = v119;
      uint64_t v181 = v122;
      swift_getOpaqueTypeConformance2();
      uint64_t v124 = (uint64_t)v158;
      sub_25C0EAD28();
      sub_25C02FB8C(v124, v169, &qword_26A589600);
      swift_storeEnumTagMultiPayload();
      sub_25C096AD0();
      sub_25C096E2C();
      uint64_t v125 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v124, &qword_26A589600);
      sub_25C02FB8C(v125, v174, &qword_26A5895F0);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A5895E8, &qword_26A5895F0, (void (*)(void))sub_25C096AD0, (void (*)(void))sub_25C096E2C);
      uint64_t v178 = v123;
      unint64_t v179 = (char *)v119;
      swift_getOpaqueTypeConformance2();
      sub_25C0EAD28();
      sub_25C02FBF0(v125, &qword_26A5895F0);
      uint64_t v126 = (uint64_t)v31;
      uint64_t v127 = &qword_26A589610;
LABEL_13:
      sub_25C02FBF0(v126, v127);
      uint64_t result = sub_25C0961E8((uint64_t)v34, type metadata accessor for ReportScreen);
      break;
  }
  return result;
}

uint64_t sub_25C092848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v162 = a3;
  uint64_t v153 = a2;
  uint64_t v175 = a4;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589890);
  MEMORY[0x270FA5388](v144);
  unint64_t v146 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589898);
  MEMORY[0x270FA5388](v145);
  uint64_t v147 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898A0);
  MEMORY[0x270FA5388](v157);
  id v160 = (uint64_t *)((char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896C0);
  MEMORY[0x270FA5388](v170);
  uint64_t v161 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896A0);
  uint64_t v164 = *(void *)(v177 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v177);
  uint64_t v11 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v163 = (char *)&v143 - v12;
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898A8);
  uint64_t v151 = *(void *)(v166 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v166);
  uint64_t v149 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v150 = (char *)&v143 - v15;
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D0);
  MEMORY[0x270FA5388](v159);
  uint64_t v148 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898B0);
  MEMORY[0x270FA5388](v172);
  uint64_t v174 = (uint64_t)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898B8);
  MEMORY[0x270FA5388](v167);
  uint64_t v169 = (uint64_t)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898C0);
  MEMORY[0x270FA5388](v155);
  uint64_t v156 = (uint64_t)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589688);
  MEMORY[0x270FA5388](v168);
  uint64_t v158 = (char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589678);
  MEMORY[0x270FA5388](v173);
  uint64_t v171 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896A8);
  uint64_t v22 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  uint64_t v24 = (char *)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898C8);
  uint64_t v152 = *(void *)(v165 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v165);
  uint64_t v27 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v143 - v28;
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589698);
  MEMORY[0x270FA5388](v154);
  uint64_t v31 = (char *)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (id *)((char *)&v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C095C00(a1, (uint64_t)v34, type metadata accessor for ReportScreen);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v50 = type metadata accessor for ReportOverviewScreen(0);
      uint64_t v51 = sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
      MEMORY[0x26117CB60](1, v49, v50, v51);
      uint64_t v52 = swift_bridgeObjectRelease();
      uint64_t v164 = v51;
      if (v153)
      {
        uint64_t v163 = (char *)&v143;
        MEMORY[0x270FA5388](v52);
        *(&v143 - 2) = v162;
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
        uint64_t v178 = v50;
        unint64_t v179 = (char *)v51;
        uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v56 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v55;
        unint64_t v179 = (char *)v56;
        uint64_t v57 = swift_getOpaqueTypeConformance2();
        uint64_t v58 = v176;
        sub_25C0EB1E8();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v58);
        uint64_t v59 = v152;
        id v60 = v27;
        uint64_t v61 = v165;
        (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v29, v60, v165);
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v146, v29, v61);
        swift_storeEnumTagMultiPayload();
        uint64_t v178 = v58;
        unint64_t v179 = (char *)v53;
        uint64_t v180 = OpaqueTypeConformance2;
        uint64_t v181 = v57;
        swift_getOpaqueTypeConformance2();
        uint64_t v62 = (uint64_t)v148;
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v61);
      }
      else
      {
        uint64_t v128 = v51;
        uint64_t v58 = v176;
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v146, v24, v176);
        swift_storeEnumTagMultiPayload();
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
        uint64_t v178 = v50;
        unint64_t v179 = (char *)v128;
        uint64_t v130 = swift_getOpaqueTypeConformance2();
        uint64_t v131 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v132 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v131;
        unint64_t v179 = (char *)v132;
        uint64_t v133 = swift_getOpaqueTypeConformance2();
        uint64_t v178 = v58;
        unint64_t v179 = (char *)v129;
        uint64_t v180 = v130;
        uint64_t v181 = v133;
        swift_getOpaqueTypeConformance2();
        int v134 = v148;
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v58);
        uint64_t v62 = (uint64_t)v134;
      }
      sub_25C02FB8C(v62, (uint64_t)v160, &qword_26A5896D0);
      swift_storeEnumTagMultiPayload();
      sub_25C09788C();
      uint64_t v135 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
      uint64_t v178 = type metadata accessor for ReportOverviewScreen(255);
      unint64_t v179 = (char *)v164;
      uint64_t v136 = swift_getOpaqueTypeConformance2();
      uint64_t v178 = v58;
      unint64_t v179 = (char *)v136;
      uint64_t v137 = swift_getOpaqueTypeConformance2();
      uint64_t v138 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v139 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v138;
      unint64_t v179 = (char *)v139;
      uint64_t v140 = swift_getOpaqueTypeConformance2();
      uint64_t v178 = v177;
      unint64_t v179 = (char *)v135;
      uint64_t v180 = v137;
      uint64_t v181 = v140;
      swift_getOpaqueTypeConformance2();
      uint64_t v141 = (uint64_t)v161;
      sub_25C0EAD28();
      sub_25C02FB8C(v141, v169, &qword_26A5896C0);
      swift_storeEnumTagMultiPayload();
      sub_25C097360();
      sub_25C0976BC();
      uint64_t v142 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v141, &qword_26A5896C0);
      sub_25C02FB8C(v142, v174, &qword_26A589678);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A589670, &qword_26A589678, (void (*)(void))sub_25C097360, (void (*)(void))sub_25C0976BC);
      sub_25C0EAD28();
      sub_25C02FBF0(v142, &qword_26A589678);
      uint64_t v126 = v62;
      uint64_t v127 = &qword_26A5896D0;
      goto LABEL_13;
    case 2u:

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v64 = type metadata accessor for ReportOverviewScreen(0);
      uint64_t v65 = sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
      MEMORY[0x26117CB60](1, v63, v64, v65);
      swift_bridgeObjectRelease();
      uint64_t v178 = v64;
      unint64_t v179 = (char *)v65;
      uint64_t v66 = swift_getOpaqueTypeConformance2();
      id v67 = v163;
      uint64_t v68 = v176;
      sub_25C0EB168();
      uint64_t v69 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v68);
      MEMORY[0x270FA5388](v69);
      *(&v143 - 2) = v162;
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
      uint64_t v178 = v68;
      unint64_t v179 = (char *)v66;
      uint64_t v71 = swift_getOpaqueTypeConformance2();
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v73 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v72;
      unint64_t v179 = (char *)v73;
      uint64_t v74 = swift_getOpaqueTypeConformance2();
      id v75 = v149;
      uint64_t v76 = v177;
      sub_25C0EB1E8();
      (*(void (**)(char *, uint64_t))(v164 + 8))(v67, v76);
      uint64_t v77 = v151;
      id v78 = v150;
      uint64_t v79 = v166;
      (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v150, v75, v166);
      (*(void (**)(uint64_t *, char *, uint64_t))(v77 + 16))(v160, v78, v79);
      swift_storeEnumTagMultiPayload();
      sub_25C09788C();
      uint64_t v178 = v76;
      unint64_t v179 = (char *)v70;
      uint64_t v180 = v71;
      uint64_t v181 = v74;
      swift_getOpaqueTypeConformance2();
      uint64_t v80 = (uint64_t)v161;
      sub_25C0EAD28();
      sub_25C02FB8C(v80, v169, &qword_26A5896C0);
      swift_storeEnumTagMultiPayload();
      sub_25C097360();
      sub_25C0976BC();
      uint64_t v81 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v80, &qword_26A5896C0);
      sub_25C02FB8C(v81, v174, &qword_26A589678);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A589670, &qword_26A589678, (void (*)(void))sub_25C097360, (void (*)(void))sub_25C0976BC);
      sub_25C0EAD28();
      sub_25C02FBF0(v81, &qword_26A589678);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v78, v79);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v84 = type metadata accessor for ReportOverviewScreen(0);
      uint64_t v85 = sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
      MEMORY[0x26117CB60](1, v83, v84, v85);
      swift_bridgeObjectRelease();
      uint64_t v178 = v84;
      unint64_t v179 = (char *)v85;
      uint64_t v86 = swift_getOpaqueTypeConformance2();
      uint64_t v87 = v176;
      sub_25C0EB168();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v87);
      id v89 = v163;
      uint64_t v88 = v164;
      uint64_t v90 = v177;
      (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v163, v11, v177);
      (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v174, v89, v90);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A589670, &qword_26A589678, (void (*)(void))sub_25C097360, (void (*)(void))sub_25C0976BC);
      uint64_t v178 = v87;
      unint64_t v179 = (char *)v86;
      swift_getOpaqueTypeConformance2();
      sub_25C0EAD28();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v89, v90);
      break;
    case 4u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v92 = type metadata accessor for ReportOverviewScreen(0);
      uint64_t v93 = sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
      MEMORY[0x26117CB60](1, v91, v92, v93);
      uint64_t v94 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v94);
      *(&v143 - 2) = v162;
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
      uint64_t v178 = v92;
      unint64_t v179 = (char *)v93;
      uint64_t v96 = swift_getOpaqueTypeConformance2();
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v98 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v97;
      unint64_t v179 = (char *)v98;
      uint64_t v99 = swift_getOpaqueTypeConformance2();
      uint64_t v100 = v176;
      sub_25C0EB1E8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v100);
      uint64_t v101 = v152;
      uint64_t v102 = v165;
      (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v29, v27, v165);
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v156, v29, v102);
      swift_storeEnumTagMultiPayload();
      sub_25C0974FC();
      uint64_t v178 = v100;
      unint64_t v179 = (char *)v95;
      uint64_t v180 = v96;
      uint64_t v181 = v99;
      swift_getOpaqueTypeConformance2();
      uint64_t v103 = (uint64_t)v158;
      sub_25C0EAD28();
      sub_25C02FB8C(v103, v169, &qword_26A589688);
      swift_storeEnumTagMultiPayload();
      sub_25C097360();
      sub_25C0976BC();
      uint64_t v104 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v103, &qword_26A589688);
      sub_25C02FB8C(v104, v174, &qword_26A589678);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A589670, &qword_26A589678, (void (*)(void))sub_25C097360, (void (*)(void))sub_25C0976BC);
      uint64_t v178 = v100;
      unint64_t v179 = (char *)v96;
      swift_getOpaqueTypeConformance2();
      sub_25C0EAD28();
      sub_25C02FBF0(v104, &qword_26A589678);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v29, v102);
      break;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896D8);
      sub_25C0EA978();
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_25C0EED70;
      sub_25C0EA968();
      uint64_t v36 = type metadata accessor for ReportOverviewScreen(0);
      uint64_t v37 = sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
      MEMORY[0x26117CB60](1, v35, v36, v37);
      swift_bridgeObjectRelease();
      uint64_t v38 = (void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v161 = (char *)v37;
      uint64_t v178 = v36;
      unint64_t v179 = (char *)v37;
      if (v153)
      {
        uint64_t v39 = swift_getOpaqueTypeConformance2();
        uint64_t v40 = v176;
        sub_25C0EB168();
        (*v38)(v24, v40);
        id v41 = v163;
        uint64_t v42 = v164;
        uint64_t v43 = v177;
        (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v163, v11, v177);
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v147, v41, v43);
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
        uint64_t v178 = v40;
        unint64_t v179 = (char *)v39;
        uint64_t v45 = swift_getOpaqueTypeConformance2();
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v47 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v46;
        unint64_t v179 = (char *)v47;
        uint64_t v48 = swift_getOpaqueTypeConformance2();
        uint64_t v178 = v43;
        unint64_t v179 = (char *)v44;
        uint64_t v180 = v45;
        uint64_t v181 = v48;
        swift_getOpaqueTypeConformance2();
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
      }
      else
      {
        uint64_t v105 = swift_getOpaqueTypeConformance2();
        id v106 = v163;
        uint64_t v107 = v176;
        sub_25C0EB168();
        uint64_t v108 = ((uint64_t (*)(char *, uint64_t))*v38)(v24, v107);
        id v160 = &v143;
        MEMORY[0x270FA5388](v108);
        *(&v143 - 2) = v162;
        uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
        uint64_t v178 = v107;
        unint64_t v179 = (char *)v105;
        uint64_t v109 = swift_getOpaqueTypeConformance2();
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
        uint64_t v111 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
        uint64_t v178 = v110;
        unint64_t v179 = (char *)v111;
        uint64_t v112 = swift_getOpaqueTypeConformance2();
        uint64_t v113 = v149;
        uint64_t v114 = v177;
        sub_25C0EB1E8();
        (*(void (**)(char *, uint64_t))(v164 + 8))(v106, v114);
        uint64_t v115 = v151;
        unint64_t v116 = v150;
        uint64_t v117 = v166;
        (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v150, v113, v166);
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v147, v116, v117);
        swift_storeEnumTagMultiPayload();
        uint64_t v178 = v114;
        unint64_t v179 = (char *)v162;
        uint64_t v180 = v109;
        uint64_t v181 = v112;
        swift_getOpaqueTypeConformance2();
        sub_25C0EAD28();
        (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v117);
      }
      sub_25C02FB8C((uint64_t)v31, v156, &qword_26A589698);
      swift_storeEnumTagMultiPayload();
      sub_25C0974FC();
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
      uint64_t v178 = type metadata accessor for ReportOverviewScreen(255);
      unint64_t v179 = v161;
      uint64_t v119 = swift_getOpaqueTypeConformance2();
      uint64_t v120 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
      uint64_t v121 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
      uint64_t v178 = v120;
      unint64_t v179 = (char *)v121;
      uint64_t v122 = swift_getOpaqueTypeConformance2();
      uint64_t v123 = v176;
      uint64_t v178 = v176;
      unint64_t v179 = (char *)v118;
      uint64_t v180 = v119;
      uint64_t v181 = v122;
      swift_getOpaqueTypeConformance2();
      uint64_t v124 = (uint64_t)v158;
      sub_25C0EAD28();
      sub_25C02FB8C(v124, v169, &qword_26A589688);
      swift_storeEnumTagMultiPayload();
      sub_25C097360();
      sub_25C0976BC();
      uint64_t v125 = (uint64_t)v171;
      sub_25C0EAD28();
      sub_25C02FBF0(v124, &qword_26A589688);
      sub_25C02FB8C(v125, v174, &qword_26A589678);
      swift_storeEnumTagMultiPayload();
      sub_25C0972D8(&qword_26A589670, &qword_26A589678, (void (*)(void))sub_25C097360, (void (*)(void))sub_25C0976BC);
      uint64_t v178 = v123;
      unint64_t v179 = (char *)v119;
      swift_getOpaqueTypeConformance2();
      sub_25C0EAD28();
      sub_25C02FBF0(v125, &qword_26A589678);
      uint64_t v126 = (uint64_t)v31;
      uint64_t v127 = &qword_26A589698;
LABEL_13:
      sub_25C02FBF0(v126, v127);
      uint64_t result = sub_25C0961E8((uint64_t)v34, type metadata accessor for ReportScreen);
      break;
  }
  return result;
}

uint64_t sub_25C09481C(uint64_t a1)
{
  uint64_t v2 = sub_25C0EAD98();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589638);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25C0EAD68();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  sub_25C0583D0(&qword_26A589560, &qword_26A589568);
  sub_25C0EA778();
  uint64_t v7 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
  MEMORY[0x26117C730](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25C0949E0(uint64_t a1)
{
  uint64_t v2 = sub_25C0EA838();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  return sub_25C0EB3C8();
}

uint64_t sub_25C094B30@<X0>(uint64_t a1@<X8>)
{
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v6);
  uint64_t result = sub_25C026FAC();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

id sub_25C094BB4(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for Report.ReportNavigationHostingController(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

void sub_25C094C00()
{
}

id sub_25C094C30()
{
  return sub_25C090098(0, (uint64_t (*)(void))type metadata accessor for Report.ReportNavigationHostingController);
}

uint64_t sub_25C094C4C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = v4;
  uint64_t v10 = sub_25C0EAAE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(v8, (uint64_t)v16, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a4, v16, v17);
  }
  else
  {
    os_log_type_t v19 = sub_25C0EBC48();
    uint64_t v20 = sub_25C0EAE98();
    os_log_type_t v21 = v19;
    if (os_log_type_enabled(v20, v19))
    {
      v24[1] = a4;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v25 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      _DWORD v24[2] = sub_25C079E24(a3, 0xED00006E6F697463, &v25);
      sub_25C0EBE58();
      _os_log_impl(&dword_25C01A000, v20, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v23, -1, -1);
      MEMORY[0x26117E790](v22, -1, -1);
    }

    sub_25C0EAAD8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

id sub_25C094F08()
{
  return *v0;
}

uint64_t sub_25C094F10@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_25C094F18()
{
  return sub_25C0EB858();
}

uint64_t sub_25C094F28(uint64_t a1)
{
  uint64_t v2 = sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_25C094F94(uint64_t a1)
{
  uint64_t v2 = sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_25C095000(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_25C095090()
{
  id v1 = *v0;
  uint64_t v2 = sub_25C0EBD08();

  return v2;
}

uint64_t sub_25C0950C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_25C095144()
{
  return sub_25C0EC368();
}

uint64_t sub_25C0951A4(uint64_t a1)
{
  uint64_t v2 = sub_25C095C90(&qword_26A5897E0, type metadata accessor for CKError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25C095210(uint64_t a1)
{
  uint64_t v2 = sub_25C095C90(&qword_26A5897E0, type metadata accessor for CKError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_25C09527C(uint64_t a1)
{
  uint64_t v2 = sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);

  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_25C0952E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_25C09536C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894A8);
  uint64_t v10 = *(void *)(type metadata accessor for ReportScreen(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_25C0EC068();
    __break(1u);
    return result;
  }
  id v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ReportScreen(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25C097AD8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_25C0955D4(unint64_t a1)
{
  return sub_25C09536C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_25C0955E8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for ReportNavigationStack(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  BOOL v15 = (uint64_t *)((char *)&v37 - v14);
  uint64_t v16 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_25C02FB8C(a4, (uint64_t)&v41, &qword_26A589818);
    if (v42)
    {
      sub_25C031DA8(&v41, v43);
      sub_25C07A0B4((uint64_t)v43, (uint64_t)&v41);
      id v19 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A589918);
      if (swift_dynamicCast())
      {
        uint64_t v38 = v13;
        id v39 = a1;
        uint64_t v20 = a3;
        id v21 = v40;
        if (objc_msgSend(v40, sel_respondsToSelector_, sel_evidenceToReportWithContext_completionHandler_))
        {
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = v21;
          uint64_t v23 = swift_allocObject();
          *(void *)(v23 + 16) = sub_25C09F844;
          *(void *)(v23 + 24) = v22;
          type metadata accessor for ReportToAuthoritiesViewModel(0);
          sub_25C095C00((uint64_t)v19 + OBJC_IVAR___SCUIReportAuthority_authority, (uint64_t)v18, type metadata accessor for Report.Authority);
          uint64_t v24 = (void *)swift_allocObject();
          id v37 = v19;
          uint64_t v25 = (uint64_t)v24;
          _DWORD v24[2] = sub_25C09F894;
          void v24[3] = v23;
          v24[4] = a5;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_retain();
          uint64_t v26 = sub_25C0B9E90((uint64_t)v18, v20, (uint64_t)sub_25C09F904, v25);
          uint64_t v27 = (uint64_t *)((char *)v15 + v10[6]);
          *uint64_t v27 = swift_getKeyPath();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
          swift_storeEnumTagMultiPayload();
          uint64_t v28 = (uint64_t *)((char *)v15 + v10[7]);
          *uint64_t v28 = swift_getKeyPath();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
          swift_storeEnumTagMultiPayload();
          uint64_t v29 = v10[8];
          id v40 = (id)0xF000000000000007;
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894A0);
          sub_25C0EB378();
          *(_OWORD *)((char *)v15 + v29) = v41;
          *BOOL v15 = v26;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894A8);
          uint64_t v30 = *(void *)(type metadata accessor for ReportScreen(0) - 8);
          unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v32 = swift_allocObject();
          *(_OWORD *)(v32 + 16) = xmmword_25C0EED70;
          sub_25C095C00(v26 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, v32 + v31, type metadata accessor for Report.Authority);
          swift_storeEnumTagMultiPayload();
          v15[1] = v32;
          v15[2] = 0;
          id v33 = objc_allocWithZone((Class)type metadata accessor for Report.ReportNavigationHostingController(0));
          sub_25C095C00((uint64_t)v15, (uint64_t)v38, type metadata accessor for ReportNavigationStack);
          uint64_t v34 = (void *)sub_25C0EAC48();
          sub_25C0961E8((uint64_t)v15, type metadata accessor for ReportNavigationStack);
          objc_msgSend(v39, sel_presentViewController_animated_completion_, v34, 1, 0);

          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
        }
      }
    }
    else
    {
      id v36 = a2;
      sub_25C02FBF0((uint64_t)&v41, &qword_26A589818);
    }
  }
  uint64_t result = sub_25C0EC078();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ReportNavigationStack(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A592060);
}

uint64_t type metadata accessor for Report()
{
  return self;
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t type metadata accessor for Report.TestingOptions(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A592050);
}

uint64_t sub_25C095C00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C095C68()
{
  return sub_25C08B89C(*(void *)(v0 + 16));
}

uint64_t type metadata accessor for ReportToAuthoritiesScreenView(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A592070);
}

uint64_t sub_25C095C90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25C095CD8(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0) {
}
  }

void sub_25C095CF4(BOOL *a1@<X8>)
{
  type metadata accessor for ReportNavigationStack(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589528);
  sub_25C0EB388();
  if ((v2 & 0xF000000000000007) != 0xF000000000000007) {
    sub_25C095CD8(v2);
  }
  *a1 = (v2 & 0xF000000000000007) != 0xF000000000000007;
}

uint64_t objectdestroyTm_0()
{
  id v1 = (int *)type metadata accessor for ReportNavigationStack(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_25C0EA838();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_25C0EA858();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(void *)(v5 + v1[8]);
  if ((~v10 & 0xF000000000000007) != 0) {

  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25C095F84()
{
  return sub_25C0EB398();
}

uint64_t sub_25C096014@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25C08C430(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_25C09601C()
{
  unint64_t result = qword_26A589548;
  if (!qword_26A589548)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589530);
    sub_25C0583D0(&qword_26A589550, &qword_26A589558);
    sub_25C0583D0(&qword_26A589560, &qword_26A589568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589548);
  }
  return result;
}

uint64_t sub_25C0960E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_25C096148()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v1 = *(void **)(v0 + 24);
  swift_beginAccess();
  uint64_t v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = v1;
  id v4 = v1;
}

uint64_t type metadata accessor for ReportToAuthoritiesScreenView.ProgressViewModel(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A592080);
}

uint64_t type metadata accessor for ReportToAuthoritiesScreenView.FlowView.FlowController()
{
  return self;
}

uint64_t sub_25C0961E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C096248()
{
  return sub_25C08FF68(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_25C096268()
{
  return objectdestroy_18Tm(MEMORY[0x263F8EED8]);
}

id sub_25C096280()
{
  return sub_25C08FE8C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_25C09628C()
{
  return sub_25C08FF68(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_25C0962AC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25C0962E4()
{
  swift_beginAccess();
  uint64_t v1 = MEMORY[0x26117E860](v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = objc_msgSend(objc_allocWithZone((Class)SCUIMoreHelpWebViewController), sel_init);
    objc_msgSend(v2, sel_presentViewController_animated_completion_, v3, 1, 0);
  }
}

uint64_t sub_25C096370()
{
  uint64_t v1 = sub_25C0EA238();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_25C09643C()
{
  uint64_t v1 = *(void *)(sub_25C0EA238() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_25C08FCB4(v2, v3);
}

uint64_t sub_25C0964A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReportScreen(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (id *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 1, v6))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = (char *)v5 + *(int *)(v6 + 28);
        uint64_t v8 = sub_25C0EA238();
        uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
        v9(v7, v8);
        v9((char *)v5 + *(int *)(v6 + 32), v8);
      }
      break;
    case 1u:
      uint64_t v10 = sub_25C0EA328();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v3, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v3, v10);
      }
      uint64_t v12 = type metadata accessor for Report.Evidence(0);
      uint64_t v13 = (char *)v5 + *(int *)(v12 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, uint64_t))(v11 + 8))(&v13[*(int *)(v14 + 40)], v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v15 = (uint64_t *)((char *)v5 + *(int *)(v12 + 56));
      unint64_t v16 = v15[1];
      if (v16 >> 60 != 15) {
        sub_25C035294(*v15, v16);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 2u:

      break;
    case 3u:
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  unint64_t v17 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, ((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_25C096868()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReportScreen(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void **)(v0 + v4);
  uint64_t v6 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *(void (**)(char *))(v0 + v3);
  uint64_t v8 = *(void (**)(char *))(v0 + v3 + 8);

  return sub_25C08F11C(v0 + v2, v7, v8, v5, v6);
}

uint64_t sub_25C096910(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ReportToAuthoritiesScreenView.FlowView(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A592090);
}

unint64_t sub_25C096980()
{
  unint64_t result = qword_26A5895E0;
  if (!qword_26A5895E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5895D8);
    sub_25C0972D8(&qword_26A5895E8, &qword_26A5895F0, (void (*)(void))sub_25C096AD0, (void (*)(void))sub_25C096E2C);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589628);
    type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
    sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5895E0);
  }
  return result;
}

unint64_t sub_25C096AD0()
{
  unint64_t result = qword_26A5895F8;
  if (!qword_26A5895F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589600);
    sub_25C096C6C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589628);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
    sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5895F8);
  }
  return result;
}

unint64_t sub_25C096C6C()
{
  unint64_t result = qword_26A589608;
  if (!qword_26A589608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589610);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589618);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589628);
    type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
    sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589608);
  }
  return result;
}

unint64_t sub_25C096E2C()
{
  unint64_t result = qword_26A589648;
  if (!qword_26A589648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589650);
    sub_25C096FFC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589618);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589628);
    type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
    sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589648);
  }
  return result;
}

unint64_t sub_25C096FFC()
{
  unint64_t result = qword_26A589658;
  if (!qword_26A589658)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589660);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589628);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    type metadata accessor for ReportToAuthoritiesScreenView.FlowView(255);
    sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589658);
  }
  return result;
}

unint64_t sub_25C097188()
{
  unint64_t result = qword_26A589668;
  if (!qword_26A589668)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5895C8);
    sub_25C0972D8(&qword_26A589670, &qword_26A589678, (void (*)(void))sub_25C097360, (void (*)(void))sub_25C0976BC);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A8);
    type metadata accessor for ReportOverviewScreen(255);
    sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589668);
  }
  return result;
}

uint64_t sub_25C0972D8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C097360()
{
  unint64_t result = qword_26A589680;
  if (!qword_26A589680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589688);
    sub_25C0974FC();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    type metadata accessor for ReportOverviewScreen(255);
    sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589680);
  }
  return result;
}

unint64_t sub_25C0974FC()
{
  unint64_t result = qword_26A589690;
  if (!qword_26A589690)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589698);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A8);
    type metadata accessor for ReportOverviewScreen(255);
    sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589690);
  }
  return result;
}

unint64_t sub_25C0976BC()
{
  unint64_t result = qword_26A5896B8;
  if (!qword_26A5896B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896C0);
    sub_25C09788C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A8);
    type metadata accessor for ReportOverviewScreen(255);
    sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5896B8);
  }
  return result;
}

unint64_t sub_25C09788C()
{
  unint64_t result = qword_26A5896C8;
  if (!qword_26A5896C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5896A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589620);
    type metadata accessor for ReportOverviewScreen(255);
    sub_25C095C90(&qword_26A5896B0, (void (*)(uint64_t))type metadata accessor for ReportOverviewScreen);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
    sub_25C0583D0(&qword_26A589640, &qword_26A589638);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5896C8);
  }
  return result;
}

uint64_t sub_25C097A18()
{
  return sub_25C09481C(*(void *)(v0 + 16));
}

uint64_t sub_25C097A48()
{
  return sub_25C09481C(*(void *)(v0 + 16));
}

uint64_t sub_25C097A78()
{
  return sub_25C09481C(*(void *)(v0 + 16));
}

uint64_t sub_25C097AA8()
{
  return sub_25C09481C(*(void *)(v0 + 16));
}

uint64_t sub_25C097AD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for ReportScreen(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_25C0EC0C8();
  __break(1u);
  return result;
}

uint64_t sub_25C097C30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C097C4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C097C68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C097C84()
{
  return sub_25C095C90(&qword_26A589630, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesScreenView.FlowView);
}

uint64_t sub_25C097CCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t method lookup function for Report(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Report);
}

uint64_t dispatch thunk of static Report.presentFlowFromController(_:authority:interventionType:delegate:contextDictionary:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void *initializeBufferWithCopyOfBuffer for Report.Error(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

void destroy for Report.Error(void *a1)
{
}

uint64_t *assignWithCopy for Report.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t *assignWithTake for Report.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for Report.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Report.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_25C097E84(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 == 3) {
    return (*a1 >> 3) + 3;
  }
  else {
    return v1;
  }
}

void *sub_25C097EA0(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_25C097EB0(unint64_t *result, uint64_t a2)
{
  if (a2 < 3)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 3);
    unint64_t v3 = 0xC000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Report.Error()
{
  return &type metadata for Report.Error;
}

void *sub_25C097EEC(uint64_t a1, uint64_t *a2, int *a3)
{
  id v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25C0EA238();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    BOOL v15 = (char *)v4 + v14;
    unint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_25C0EA398();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v20 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t sub_25C098188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25C0EA238();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_25C0EA398();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_25C09830C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25C0EA238();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_25C0EA398();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_25C098558(uint64_t a1, long long *a2, int *a3)
{
  long long v6 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25C0EA238();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_25C0EA398();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_25C09886C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25C0EA238();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  int v13 = (void *)(a1 + v12);
  int v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_25C0EA398();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_25C098AB8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_25C0EA238();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_25C0EA398();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v24 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_25C098DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C098DD8);
}

uint64_t sub_25C098DD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) != a2)
    {
      unsigned int v13 = *(unsigned __int8 *)(a1 + a3[7]);
      if (v13 >= 2) {
        return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);

  return v11(a1 + v9, a2, v7);
}

uint64_t sub_25C098F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C098F14);
}

uint64_t sub_25C098F14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894D0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(unsigned char *)(a1 + a4[7]) = a2 + 1;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_25C099028()
{
  sub_25C09A098(319, &qword_26A5896E0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_25C09A098(319, &qword_26A5896E8, MEMORY[0x263F07598], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_25C09916C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_25C0EA838();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_25C0EA858();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = *v19;
    if ((~*v19 & 0xF000000000000007) != 0) {
      id v21 = (id)(v20 & 0x3FFFFFFFFFFFFFFFLL);
    }
    uint64_t v22 = v19[1];
    *uint64_t v18 = v20;
    v18[1] = v22;
  }
  swift_retain();
  return a1;
}

uint64_t sub_25C099368(uint64_t a1, int *a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_25C0EA838();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_25C0EA858();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = *(void *)(a1 + a2[8]);
  if ((~v8 & 0xF000000000000007) != 0) {

  }
  return swift_release();
}

void *sub_25C0994B8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_25C0EA838();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_25C0EA858();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a2 + v15);
  uint64_t v17 = *v16;
  if ((~*v16 & 0xF000000000000007) != 0) {
    id v18 = (id)(v17 & 0x3FFFFFFFFFFFFFFFLL);
  }
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = v16[1];
  *uint64_t v19 = v17;
  v19[1] = v20;
  swift_retain();
  return a1;
}

void *sub_25C099670(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_25C02FBF0((uint64_t)a1 + v6, &qword_26A589490);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_25C0EA838();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[7];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_25C02FBF0((uint64_t)a1 + v10, &qword_26A589498);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_25C0EA858();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  unint64_t v18 = *v16 & 0xF000000000000007;
  if ((~*(void *)((char *)a1 + v14) & 0xF000000000000007) != 0)
  {
    if (v18 == 0xF000000000000007)
    {
      sub_25C0998C4(v15);
      *uint64_t v15 = *v16;
    }
    else
    {
      id v20 = (id)(v17 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v21 = *v15;
      *uint64_t v15 = v17;
    }
  }
  else
  {
    if (v18 != 0xF000000000000007) {
      id v19 = (id)(v17 & 0x3FFFFFFFFFFFFFFFLL);
    }
    *uint64_t v15 = v17;
  }
  v15[1] = v16[1];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_25C0998C4(void *a1)
{
  return a1;
}

uint64_t sub_25C0998F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_25C0EA838();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_25C0EA858();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

void *sub_25C099A8C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_25C02FBF0((uint64_t)a1 + v6, &qword_26A589490);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_25C0EA838();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_25C02FBF0((uint64_t)a1 + v11, &qword_26A589498);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_25C0EA858();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  unint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = *(void *)((char *)a1 + v16);
  uint64_t v20 = *v18;
  if ((~v19 & 0xF000000000000007) != 0)
  {
    if ((~v20 & 0xF000000000000007) != 0)
    {
      *uint64_t v17 = v20;
    }
    else
    {
      sub_25C0998C4(v17);
      *uint64_t v17 = *v18;
    }
  }
  else
  {
    *uint64_t v17 = v20;
  }
  v17[1] = v18[1];
  swift_release();
  return a1;
}

uint64_t sub_25C099CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C099CD4);
}

uint64_t sub_25C099CD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5896F8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_25C099E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C099E1C);
}

void *sub_25C099E1C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5896F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5896F8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_25C099F50()
{
  sub_25C09A098(319, &qword_26A589708, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_25C09A098(319, (unint64_t *)&unk_26A589710, MEMORY[0x263F18948], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25C09A098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_25C09A0FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for ReportScreen(0);
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
        {
          uint64_t v14 = type metadata accessor for Report.Authority(0);
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v21 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v21;
          uint64_t v22 = v10[3];
          id v9[2] = v10[2];
          v9[3] = v22;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          uint64_t v86 = v13;
          uint64_t v23 = (void *)v10[6];
          _OWORD v9[5] = v10[5];
          v9[6] = v23;
          uint64_t v24 = v10[8];
          v9[7] = v10[7];
          v9[8] = v24;
          uint64_t v25 = v10[10];
          v9[9] = v10[9];
          _OWORD v9[10] = v25;
          *((unsigned char *)v9 + 88) = *((unsigned char *)v10 + 88);
          v9[12] = v10[12];
          uint64_t v26 = *(int *)(v12 + 28);
          uint64_t v81 = (char *)v10 + v26;
          uint64_t v83 = (char *)v9 + v26;
          uint64_t v27 = sub_25C0EA238();
          uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v28 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v80(v83, v81, v27);
          v80((char *)v9 + *(int *)(v12 + 32), (char *)v10 + *(int *)(v12 + 32), v27);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v9, 0, 1, v12);
        }
        goto LABEL_18;
      case 1u:
        uint64_t v15 = sub_25C0EA328();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v82 = v15;
        uint64_t v85 = v16;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v9, v10, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
        }
        uint64_t v29 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v30 = v29[6];
        unint64_t v31 = (void *)((char *)v9 + v30);
        uint64_t v32 = (char *)v10 + v30;
        uint64_t v33 = *(void *)((char *)v10 + v30 + 8);
        void *v31 = *(void *)((char *)v10 + v30);
        v31[1] = v33;
        uint64_t v34 = *(void *)((char *)v10 + v30 + 24);
        v31[2] = *(void *)((char *)v10 + v30 + 16);
        v31[3] = v34;
        uint64_t v35 = *(void *)((char *)v10 + v30 + 40);
        v31[4] = *(void *)((char *)v10 + v30 + 32);
        v31[5] = v35;
        uint64_t v36 = *(void *)((char *)v10 + v30 + 56);
        v31[6] = *(void *)((char *)v10 + v30 + 48);
        v31[7] = v36;
        uint64_t v37 = *(void *)((char *)v10 + v30 + 72);
        v31[8] = *(void *)((char *)v10 + v30 + 64);
        v31[9] = v37;
        uint64_t v38 = *(void *)((char *)v10 + v30 + 88);
        v31[10] = *(void *)((char *)v10 + v30 + 80);
        v31[11] = v38;
        uint64_t v39 = *(void *)((char *)v10 + v30 + 104);
        v31[12] = *(void *)((char *)v10 + v30 + 96);
        v31[13] = v39;
        uint64_t v40 = *(void *)((char *)v10 + v30 + 120);
        v31[14] = *(void *)((char *)v10 + v30 + 112);
        v31[15] = v40;
        uint64_t v41 = *(void *)((char *)v10 + v30 + 136);
        v31[16] = *(void *)((char *)v10 + v30 + 128);
        v31[17] = v41;
        uint64_t v42 = *(void *)((char *)v10 + v30 + 152);
        v31[18] = *(void *)((char *)v10 + v30 + 144);
        v31[19] = v42;
        uint64_t v43 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        id v78 = &v32[v43];
        uint64_t v79 = (char *)v31 + v43;
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44(v79, v78, v82);
        *(void *)((char *)v9 + v29[7]) = *(void *)((char *)v10 + v29[7]);
        *(void *)((char *)v9 + v29[8]) = *(void *)((char *)v10 + v29[8]);
        uint64_t v45 = v29[9];
        uint64_t v46 = (void *)((char *)v9 + v45);
        uint64_t v47 = (void *)((char *)v10 + v45);
        uint64_t v87 = v47[1];
        void *v46 = *v47;
        v46[1] = v87;
        *((unsigned char *)v9 + v29[10]) = *((unsigned char *)v10 + v29[10]);
        *((unsigned char *)v9 + v29[11]) = *((unsigned char *)v10 + v29[11]);
        uint64_t v48 = v29[12];
        uint64_t v49 = (void *)((char *)v9 + v48);
        uint64_t v50 = (void *)((char *)v10 + v48);
        uint64_t v51 = v50[1];
        *uint64_t v49 = *v50;
        v49[1] = v51;
        *(void *)((char *)v9 + v29[13]) = *(void *)((char *)v10 + v29[13]);
        uint64_t v52 = v29[14];
        uint64_t v84 = (char *)v9 + v52;
        uint64_t v53 = (void *)((char *)v10 + v52);
        unint64_t v54 = *(void *)((char *)v10 + v52 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v55 = v54;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v54 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v84 = *(_OWORD *)v53;
        }
        else
        {
          uint64_t v56 = *v53;
          sub_25C034EC8(*v53, v55);
          *(void *)uint64_t v84 = v56;
          *((void *)v84 + 1) = v55;
        }
        uint64_t v57 = v29[15];
        uint64_t v58 = (void *)((char *)v9 + v57);
        uint64_t v59 = (void *)((char *)v10 + v57);
        uint64_t v60 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v60;
        *(void *)((char *)v9 + v29[16]) = *(void *)((char *)v10 + v29[16]);
        uint64_t v61 = v29[17];
        uint64_t v62 = (void *)((char *)v9 + v61);
        uint64_t v63 = (void *)((char *)v10 + v61);
        uint64_t v64 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v64;
        uint64_t v65 = v29[18];
        uint64_t v66 = (void *)((char *)v9 + v65);
        id v67 = (void *)((char *)v10 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        *(void *)((char *)v9 + v29[19]) = *(void *)((char *)v10 + v29[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 2u:
        unint64_t v18 = (void *)*v10;
        *uint64_t v9 = *v10;
        id v19 = v18;
        goto LABEL_18;
      case 3u:
        uint64_t v20 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v20;
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    uint64_t v69 = a3[6];
    uint64_t v70 = (char *)v7 + v69;
    uint64_t v71 = (char *)a2 + v69;
    uint64_t v72 = sub_25C0EA838();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    uint64_t v73 = a3[7];
    uint64_t v74 = (uint64_t *)((char *)v7 + v73);
    id v75 = (uint64_t *)((char *)a2 + v73);
    uint64_t v76 = v75[1];
    void *v74 = *v75;
    v74[1] = v76;
  }
  swift_retain();
  return v7;
}

uint64_t sub_25C09A7D0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for ReportScreen(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v5 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
        uint64_t v7 = sub_25C0EA238();
        uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
        v8(v6, v7);
        v8((char *)v4 + *(int *)(v5 + 32), v7);
      }
      break;
    case 1u:
      uint64_t v9 = sub_25C0EA328();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9)) {
        (*(void (**)(id *, uint64_t))(v10 + 8))(v4, v9);
      }
      uint64_t v11 = type metadata accessor for Report.Evidence(0);
      uint64_t v12 = (char *)v4 + *(int *)(v11 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, uint64_t))(v10 + 8))(&v12[*(int *)(v13 + 40)], v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)((char *)v4 + *(int *)(v11 + 56));
      unint64_t v15 = v14[1];
      if (v15 >> 60 != 15) {
        sub_25C035294(*v14, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 2u:

      break;
    case 3u:
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v16 = a1 + *(int *)(a2 + 24);
  uint64_t v17 = sub_25C0EA838();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  return swift_release();
}

void *sub_25C09AB54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ReportScreen(0);
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v10 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = type metadata accessor for Report.Authority(0);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v19 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v19;
        uint64_t v20 = v8[3];
        v7[2] = v8[2];
        v7[3] = v20;
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        uint64_t v21 = (void *)v8[6];
        v7[5] = v8[5];
        v7[6] = v21;
        uint64_t v22 = v8[8];
        v7[7] = v8[7];
        v7[8] = v22;
        uint64_t v23 = v8[10];
        v7[9] = v8[9];
        v7[10] = v23;
        *((unsigned char *)v7 + 88) = *((unsigned char *)v8 + 88);
        v7[12] = v8[12];
        uint64_t v24 = *(int *)(v10 + 28);
        uint64_t v81 = (char *)v8 + v24;
        uint64_t v83 = (char *)v7 + v24;
        uint64_t v86 = v3;
        uint64_t v25 = sub_25C0EA238();
        uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v26 = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79(v83, v81, v25);
        uint64_t v27 = v25;
        uint64_t v3 = v86;
        v79((char *)v7 + *(int *)(v10 + 32), (char *)v8 + *(int *)(v10 + 32), v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      goto LABEL_16;
    case 1u:
      uint64_t v13 = sub_25C0EA328();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v85 = v3;
      uint64_t v82 = v14;
      uint64_t v80 = v13;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v7, v8, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
      }
      id v28 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v29 = v28[6];
      uint64_t v30 = (void *)((char *)v7 + v29);
      unint64_t v31 = (char *)v8 + v29;
      uint64_t v32 = *(void *)((char *)v8 + v29 + 8);
      *uint64_t v30 = *(void *)((char *)v8 + v29);
      v30[1] = v32;
      uint64_t v33 = *(void *)((char *)v8 + v29 + 24);
      v30[2] = *(void *)((char *)v8 + v29 + 16);
      v30[3] = v33;
      uint64_t v34 = *(void *)((char *)v8 + v29 + 40);
      void v30[4] = *(void *)((char *)v8 + v29 + 32);
      v30[5] = v34;
      uint64_t v35 = *(void *)((char *)v8 + v29 + 56);
      v30[6] = *(void *)((char *)v8 + v29 + 48);
      v30[7] = v35;
      uint64_t v36 = *(void *)((char *)v8 + v29 + 72);
      v30[8] = *(void *)((char *)v8 + v29 + 64);
      v30[9] = v36;
      uint64_t v37 = *(void *)((char *)v8 + v29 + 88);
      v30[10] = *(void *)((char *)v8 + v29 + 80);
      v30[11] = v37;
      uint64_t v38 = *(void *)((char *)v8 + v29 + 104);
      v30[12] = *(void *)((char *)v8 + v29 + 96);
      v30[13] = v38;
      uint64_t v39 = *(void *)((char *)v8 + v29 + 120);
      v30[14] = *(void *)((char *)v8 + v29 + 112);
      v30[15] = v39;
      uint64_t v40 = *(void *)((char *)v8 + v29 + 136);
      v30[16] = *(void *)((char *)v8 + v29 + 128);
      v30[17] = v40;
      uint64_t v41 = *(void *)((char *)v8 + v29 + 152);
      v30[18] = *(void *)((char *)v8 + v29 + 144);
      v30[19] = v41;
      uint64_t v42 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
      uint64_t v77 = &v31[v42];
      id v78 = (char *)v30 + v42;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v78, v77, v80);
      *(void *)((char *)v7 + v28[7]) = *(void *)((char *)v8 + v28[7]);
      *(void *)((char *)v7 + v28[8]) = *(void *)((char *)v8 + v28[8]);
      uint64_t v44 = v28[9];
      uint64_t v45 = (void *)((char *)v7 + v44);
      uint64_t v46 = (void *)((char *)v8 + v44);
      uint64_t v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      *((unsigned char *)v7 + v28[10]) = *((unsigned char *)v8 + v28[10]);
      *((unsigned char *)v7 + v28[11]) = *((unsigned char *)v8 + v28[11]);
      uint64_t v48 = v28[12];
      uint64_t v49 = (void *)((char *)v7 + v48);
      uint64_t v50 = (void *)((char *)v8 + v48);
      uint64_t v51 = v50[1];
      *uint64_t v49 = *v50;
      v49[1] = v51;
      *(void *)((char *)v7 + v28[13]) = *(void *)((char *)v8 + v28[13]);
      uint64_t v52 = v28[14];
      uint64_t v84 = (char *)v7 + v52;
      uint64_t v53 = (void *)((char *)v8 + v52);
      unint64_t v54 = *(void *)((char *)v8 + v52 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v84 = *(_OWORD *)v53;
      }
      else
      {
        uint64_t v55 = *v53;
        sub_25C034EC8(*v53, v54);
        *(void *)uint64_t v84 = v55;
        *((void *)v84 + 1) = v54;
      }
      uint64_t v3 = v85;
      uint64_t v56 = v28[15];
      uint64_t v57 = (void *)((char *)v7 + v56);
      uint64_t v58 = (void *)((char *)v8 + v56);
      uint64_t v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      *(void *)((char *)v7 + v28[16]) = *(void *)((char *)v8 + v28[16]);
      uint64_t v60 = v28[17];
      uint64_t v61 = (void *)((char *)v7 + v60);
      uint64_t v62 = (void *)((char *)v8 + v60);
      uint64_t v63 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v28[18];
      uint64_t v65 = (void *)((char *)v7 + v64);
      uint64_t v66 = (void *)((char *)v8 + v64);
      uint64_t v67 = v66[1];
      *uint64_t v65 = *v66;
      v65[1] = v67;
      *(void *)((char *)v7 + v28[19]) = *(void *)((char *)v8 + v28[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 2u:
      uint64_t v16 = (void *)*v8;
      *uint64_t v7 = *v8;
      id v17 = v16;
      goto LABEL_16;
    case 3u:
      uint64_t v18 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v18;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  uint64_t v68 = *(int *)(v3 + 24);
  uint64_t v69 = (char *)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  uint64_t v71 = sub_25C0EA838();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
  uint64_t v72 = *(int *)(v3 + 28);
  uint64_t v73 = (void *)((char *)a1 + v72);
  uint64_t v74 = (void *)((char *)a2 + v72);
  uint64_t v75 = v74[1];
  *uint64_t v73 = *v74;
  v73[1] = v75;
  swift_retain();
  return a1;
}

void *sub_25C09B1DC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_25C0961E8((uint64_t)a1 + v6, type metadata accessor for ReportScreen);
    uint64_t v9 = type metadata accessor for ReportScreen(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
        {
          uint64_t v12 = type metadata accessor for Report.Authority(0);
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v7[3] = v8[3];
          *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
          v7[5] = v8[5];
          uint64_t v65 = a3;
          uint64_t v18 = (void *)v8[6];
          v7[6] = v18;
          v7[7] = v8[7];
          v7[8] = v8[8];
          v7[9] = v8[9];
          v7[10] = v8[10];
          *((unsigned char *)v7 + 88) = *((unsigned char *)v8 + 88);
          v7[12] = v8[12];
          uint64_t v19 = *(int *)(v10 + 28);
          uint64_t v59 = (char *)v8 + v19;
          uint64_t v61 = (char *)v7 + v19;
          uint64_t v20 = sub_25C0EA238();
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v21 = v18;
          a3 = v65;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v58(v61, v59, v20);
          v58((char *)v7 + *(int *)(v10 + 32), (char *)v8 + *(int *)(v10 + 32), v20);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        }
        goto LABEL_17;
      case 1u:
        uint64_t v13 = sub_25C0EA328();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v64 = a3;
        uint64_t v62 = v14;
        uint64_t v60 = v13;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v7, v8, v13);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
        }
        uint64_t v22 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v23 = v22[6];
        uint64_t v24 = (void *)((char *)v7 + v23);
        uint64_t v25 = (char *)v8 + v23;
        *uint64_t v24 = *(void *)((char *)v8 + v23);
        v24[1] = *(void *)((char *)v8 + v23 + 8);
        _DWORD v24[2] = *(void *)((char *)v8 + v23 + 16);
        void v24[3] = *(void *)((char *)v8 + v23 + 24);
        v24[4] = *(void *)((char *)v8 + v23 + 32);
        v24[5] = *(void *)((char *)v8 + v23 + 40);
        v24[6] = *(void *)((char *)v8 + v23 + 48);
        v24[7] = *(void *)((char *)v8 + v23 + 56);
        v24[8] = *(void *)((char *)v8 + v23 + 64);
        v24[9] = *(void *)((char *)v8 + v23 + 72);
        v24[10] = *(void *)((char *)v8 + v23 + 80);
        v24[11] = *(void *)((char *)v8 + v23 + 88);
        v24[12] = *(void *)((char *)v8 + v23 + 96);
        v24[13] = *(void *)((char *)v8 + v23 + 104);
        v24[14] = *(void *)((char *)v8 + v23 + 112);
        v24[15] = *(void *)((char *)v8 + v23 + 120);
        v24[16] = *(void *)((char *)v8 + v23 + 128);
        v24[17] = *(void *)((char *)v8 + v23 + 136);
        v24[18] = *(void *)((char *)v8 + v23 + 144);
        v24[19] = *(void *)((char *)v8 + v23 + 152);
        uint64_t v26 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        uint64_t v56 = &v25[v26];
        uint64_t v57 = (char *)v24 + v26;
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27(v57, v56, v60);
        *(void *)((char *)v7 + v22[7]) = *(void *)((char *)v8 + v22[7]);
        *(void *)((char *)v7 + v22[8]) = *(void *)((char *)v8 + v22[8]);
        uint64_t v28 = v22[9];
        uint64_t v29 = (void *)((char *)v7 + v28);
        uint64_t v30 = (void *)((char *)v8 + v28);
        *uint64_t v29 = *v30;
        v29[1] = v30[1];
        *((unsigned char *)v7 + v22[10]) = *((unsigned char *)v8 + v22[10]);
        *((unsigned char *)v7 + v22[11]) = *((unsigned char *)v8 + v22[11]);
        uint64_t v31 = v22[12];
        uint64_t v32 = (void *)((char *)v7 + v31);
        uint64_t v33 = (void *)((char *)v8 + v31);
        void *v32 = *v33;
        v32[1] = v33[1];
        *(void *)((char *)v7 + v22[13]) = *(void *)((char *)v8 + v22[13]);
        uint64_t v34 = v22[14];
        uint64_t v63 = (char *)v7 + v34;
        uint64_t v35 = (void *)((char *)v8 + v34);
        unint64_t v36 = *(void *)((char *)v8 + v34 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v63 = *(_OWORD *)v35;
        }
        else
        {
          uint64_t v37 = *v35;
          sub_25C034EC8(*v35, v36);
          *(void *)uint64_t v63 = v37;
          *((void *)v63 + 1) = v36;
        }
        a3 = v64;
        uint64_t v38 = v22[15];
        uint64_t v39 = (void *)((char *)v7 + v38);
        uint64_t v40 = (void *)((char *)v8 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        *(void *)((char *)v7 + v22[16]) = *(void *)((char *)v8 + v22[16]);
        uint64_t v41 = v22[17];
        uint64_t v42 = (void *)((char *)v7 + v41);
        uint64_t v43 = (void *)((char *)v8 + v41);
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v22[18];
        uint64_t v45 = (void *)((char *)v7 + v44);
        uint64_t v46 = (void *)((char *)v8 + v44);
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        *(void *)((char *)v7 + v22[19]) = *(void *)((char *)v8 + v22[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v16 = (void *)*v8;
        *uint64_t v7 = *v8;
        id v17 = v16;
        goto LABEL_17;
      case 3u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  uint64_t v47 = a3[6];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_25C0EA838();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[7];
  uint64_t v52 = (void *)((char *)a1 + v51);
  uint64_t v53 = (void *)((char *)a2 + v51);
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_25C09B954(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ReportScreen(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = sub_25C0EA328();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v38 = v3;
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v15 + 32))(v7, v8, v14);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
    }
    id v21 = (int *)type metadata accessor for Report.Evidence(0);
    uint64_t v22 = v21[6];
    uint64_t v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)v8 + v22;
    long long v25 = *(_OWORD *)((char *)v8 + v22 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)((char *)v8 + v22);
    *((_OWORD *)v23 + 1) = v25;
    long long v26 = *(_OWORD *)((char *)v8 + v22 + 48);
    *((_OWORD *)v23 + 2) = *(_OWORD *)((char *)v8 + v22 + 32);
    *((_OWORD *)v23 + 3) = v26;
    long long v27 = *(_OWORD *)((char *)v8 + v22 + 112);
    *((_OWORD *)v23 + 6) = *(_OWORD *)((char *)v8 + v22 + 96);
    *((_OWORD *)v23 + 7) = v27;
    long long v28 = *(_OWORD *)((char *)v8 + v22 + 144);
    *((_OWORD *)v23 + 8) = *(_OWORD *)((char *)v8 + v22 + 128);
    *((_OWORD *)v23 + 9) = v28;
    long long v29 = *(_OWORD *)((char *)v8 + v22 + 80);
    *((_OWORD *)v23 + 4) = *(_OWORD *)((char *)v8 + v22 + 64);
    *((_OWORD *)v23 + 5) = v29;
    uint64_t v30 = _s14descr27097BA99O6VictimVMa(0);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[*(int *)(v30 + 40)], &v24[*(int *)(v30 + 40)], v14);
    *(void *)((char *)v7 + v21[7]) = *(void *)((char *)v8 + v21[7]);
    *(void *)((char *)v7 + v21[8]) = *(void *)((char *)v8 + v21[8]);
    *(_OWORD *)((char *)v7 + v21[9]) = *(_OWORD *)((char *)v8 + v21[9]);
    *((unsigned char *)v7 + v21[10]) = *((unsigned char *)v8 + v21[10]);
    *((unsigned char *)v7 + v21[11]) = *((unsigned char *)v8 + v21[11]);
    *(_OWORD *)((char *)v7 + v21[12]) = *(_OWORD *)((char *)v8 + v21[12]);
    *(void *)((char *)v7 + v21[13]) = *(void *)((char *)v8 + v21[13]);
    *(_OWORD *)((char *)v7 + v21[14]) = *(_OWORD *)((char *)v8 + v21[14]);
    *(_OWORD *)((char *)v7 + v21[15]) = *(_OWORD *)((char *)v8 + v21[15]);
    *(void *)((char *)v7 + v21[16]) = *(void *)((char *)v8 + v21[16]);
    *(_OWORD *)((char *)v7 + v21[17]) = *(_OWORD *)((char *)v8 + v21[17]);
    *(_OWORD *)((char *)v7 + v21[18]) = *(_OWORD *)((char *)v8 + v21[18]);
    *(void *)((char *)v7 + v21[19]) = *(void *)((char *)v8 + v21[19]);
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = v38;
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      uint64_t v13 = type metadata accessor for Report.Authority(0);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      long long v17 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v17;
      v7[2] = v8[2];
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
      *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
      uint64_t v18 = *(int *)(v11 + 28);
      unint64_t v36 = (char *)v8 + v18;
      uint64_t v37 = (char *)v7 + v18;
      uint64_t v19 = sub_25C0EA238();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
      v20(v37, v36, v19);
      v20((char *)v7 + *(int *)(v11 + 32), (char *)v8 + *(int *)(v11 + 32), v19);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = *(int *)(v3 + 24);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_25C0EA838();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  *(_OWORD *)((char *)a1 + *(int *)(v3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v3 + 28));
  return a1;
}

void *sub_25C09BDC8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_25C0961E8((uint64_t)a1 + v6, type metadata accessor for ReportScreen);
    uint64_t v9 = type metadata accessor for ReportScreen(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = sub_25C0EA328();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v15 + 32))(v7, v8, v14);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      }
      id v21 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v22 = v21[6];
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      long long v25 = *(_OWORD *)((char *)v8 + v22 + 16);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)((char *)v8 + v22);
      *((_OWORD *)v23 + 1) = v25;
      long long v26 = *(_OWORD *)((char *)v8 + v22 + 48);
      *((_OWORD *)v23 + 2) = *(_OWORD *)((char *)v8 + v22 + 32);
      *((_OWORD *)v23 + 3) = v26;
      long long v27 = *(_OWORD *)((char *)v8 + v22 + 112);
      *((_OWORD *)v23 + 6) = *(_OWORD *)((char *)v8 + v22 + 96);
      *((_OWORD *)v23 + 7) = v27;
      long long v28 = *(_OWORD *)((char *)v8 + v22 + 144);
      *((_OWORD *)v23 + 8) = *(_OWORD *)((char *)v8 + v22 + 128);
      *((_OWORD *)v23 + 9) = v28;
      long long v29 = *(_OWORD *)((char *)v8 + v22 + 80);
      *((_OWORD *)v23 + 4) = *(_OWORD *)((char *)v8 + v22 + 64);
      *((_OWORD *)v23 + 5) = v29;
      uint64_t v30 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[*(int *)(v30 + 40)], &v24[*(int *)(v30 + 40)], v14);
      *(void *)((char *)v7 + v21[7]) = *(void *)((char *)v8 + v21[7]);
      *(void *)((char *)v7 + v21[8]) = *(void *)((char *)v8 + v21[8]);
      *(_OWORD *)((char *)v7 + v21[9]) = *(_OWORD *)((char *)v8 + v21[9]);
      *((unsigned char *)v7 + v21[10]) = *((unsigned char *)v8 + v21[10]);
      *((unsigned char *)v7 + v21[11]) = *((unsigned char *)v8 + v21[11]);
      *(_OWORD *)((char *)v7 + v21[12]) = *(_OWORD *)((char *)v8 + v21[12]);
      *(void *)((char *)v7 + v21[13]) = *(void *)((char *)v8 + v21[13]);
      *(_OWORD *)((char *)v7 + v21[14]) = *(_OWORD *)((char *)v8 + v21[14]);
      *(_OWORD *)((char *)v7 + v21[15]) = *(_OWORD *)((char *)v8 + v21[15]);
      *(void *)((char *)v7 + v21[16]) = *(void *)((char *)v8 + v21[16]);
      *(_OWORD *)((char *)v7 + v21[17]) = *(_OWORD *)((char *)v8 + v21[17]);
      *(_OWORD *)((char *)v7 + v21[18]) = *(_OWORD *)((char *)v8 + v21[18]);
      *(void *)((char *)v7 + v21[19]) = *(void *)((char *)v8 + v21[19]);
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = type metadata accessor for Report.Authority(0);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        long long v17 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v17;
        v7[2] = v8[2];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
        *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
        uint64_t v18 = *(int *)(v11 + 28);
        unint64_t v36 = (char *)v8 + v18;
        uint64_t v37 = (char *)v7 + v18;
        uint64_t v19 = sub_25C0EA238();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
        v20(v37, v36, v19);
        v20((char *)v7 + *(int *)(v11 + 32), (char *)v8 + *(int *)(v11 + 32), v19);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
LABEL_14:
  uint64_t v31 = a3[6];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_25C0EA838();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_25C09C26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C09C280);
}

uint64_t sub_25C09C280(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ReportScreen(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_25C0EA838();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_25C09C3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C09C3C0);
}

void *sub_25C09C3C0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ReportScreen(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_25C0EA838();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_25C09C4EC()
{
  uint64_t result = type metadata accessor for ReportScreen(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25C0EA838();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportToAuthoritiesScreenView.Blurb()
{
  return &type metadata for ReportToAuthoritiesScreenView.Blurb;
}

uint64_t sub_25C09C5E0()
{
  return type metadata accessor for ReportToAuthoritiesScreenView.ProgressViewModel(0);
}

uint64_t sub_25C09C5E8()
{
  uint64_t result = sub_25C0EA478();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ReportToAuthoritiesScreenView.ProgressV(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ReportToAuthoritiesScreenView.ProgressV(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for ReportToAuthoritiesScreenView.ProgressV(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for ReportToAuthoritiesScreenView.ProgressV(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportToAuthoritiesScreenView.ProgressV(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportToAuthoritiesScreenView.ProgressV(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportToAuthoritiesScreenView.ProgressV()
{
  return &type metadata for ReportToAuthoritiesScreenView.ProgressV;
}

void *sub_25C09C82C(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    id v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for ReportScreen(0);
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
        {
          uint64_t v14 = type metadata accessor for Report.Authority(0);
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v21 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v21;
          uint64_t v22 = v10[3];
          id v9[2] = v10[2];
          v9[3] = v22;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          uint64_t v82 = v13;
          uint64_t v23 = (void *)v10[6];
          _OWORD v9[5] = v10[5];
          v9[6] = v23;
          uint64_t v24 = v10[8];
          v9[7] = v10[7];
          v9[8] = v24;
          uint64_t v25 = v10[10];
          v9[9] = v10[9];
          _OWORD v9[10] = v25;
          *((unsigned char *)v9 + 88) = *((unsigned char *)v10 + 88);
          v9[12] = v10[12];
          uint64_t v26 = *(int *)(v12 + 28);
          id v78 = (char *)v10 + v26;
          uint64_t v80 = (char *)v9 + v26;
          uint64_t v27 = sub_25C0EA238();
          uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v28 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v77(v80, v78, v27);
          v77((char *)v9 + *(int *)(v12 + 32), (char *)v10 + *(int *)(v12 + 32), v27);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v9, 0, 1, v12);
        }
        goto LABEL_18;
      case 1u:
        uint64_t v15 = sub_25C0EA328();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v79 = v15;
        uint64_t v81 = v16;
        uint64_t v74 = v6;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v9, v10, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
        }
        long long v29 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v30 = v29[6];
        uint64_t v31 = (void *)((char *)v9 + v30);
        uint64_t v32 = (char *)v10 + v30;
        uint64_t v33 = *(void *)((char *)v10 + v30 + 8);
        void *v31 = *(void *)((char *)v10 + v30);
        v31[1] = v33;
        uint64_t v34 = *(void *)((char *)v10 + v30 + 24);
        v31[2] = *(void *)((char *)v10 + v30 + 16);
        v31[3] = v34;
        uint64_t v35 = *(void *)((char *)v10 + v30 + 40);
        v31[4] = *(void *)((char *)v10 + v30 + 32);
        v31[5] = v35;
        uint64_t v36 = *(void *)((char *)v10 + v30 + 56);
        v31[6] = *(void *)((char *)v10 + v30 + 48);
        v31[7] = v36;
        uint64_t v37 = *(void *)((char *)v10 + v30 + 72);
        v31[8] = *(void *)((char *)v10 + v30 + 64);
        v31[9] = v37;
        uint64_t v38 = *(void *)((char *)v10 + v30 + 88);
        v31[10] = *(void *)((char *)v10 + v30 + 80);
        v31[11] = v38;
        uint64_t v39 = *(void *)((char *)v10 + v30 + 104);
        v31[12] = *(void *)((char *)v10 + v30 + 96);
        v31[13] = v39;
        uint64_t v40 = *(void *)((char *)v10 + v30 + 120);
        v31[14] = *(void *)((char *)v10 + v30 + 112);
        v31[15] = v40;
        uint64_t v41 = *(void *)((char *)v10 + v30 + 136);
        v31[16] = *(void *)((char *)v10 + v30 + 128);
        v31[17] = v41;
        uint64_t v42 = *(void *)((char *)v10 + v30 + 152);
        v31[18] = *(void *)((char *)v10 + v30 + 144);
        v31[19] = v42;
        uint64_t v43 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        uint64_t v75 = &v32[v43];
        uint64_t v76 = (char *)v31 + v43;
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44(v76, v75, v79);
        *(void *)((char *)v9 + v29[7]) = *(void *)((char *)v10 + v29[7]);
        *(void *)((char *)v9 + v29[8]) = *(void *)((char *)v10 + v29[8]);
        uint64_t v45 = v29[9];
        uint64_t v46 = (void *)((char *)v9 + v45);
        uint64_t v47 = (void *)((char *)v10 + v45);
        uint64_t v48 = v47[1];
        void *v46 = *v47;
        v46[1] = v48;
        *((unsigned char *)v9 + v29[10]) = *((unsigned char *)v10 + v29[10]);
        *((unsigned char *)v9 + v29[11]) = *((unsigned char *)v10 + v29[11]);
        uint64_t v49 = v29[12];
        uint64_t v50 = (void *)((char *)v9 + v49);
        uint64_t v51 = (void *)((char *)v10 + v49);
        uint64_t v52 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v52;
        *(void *)((char *)v9 + v29[13]) = *(void *)((char *)v10 + v29[13]);
        uint64_t v53 = v29[14];
        uint64_t v83 = (char *)v9 + v53;
        uint64_t v54 = (void *)((char *)v10 + v53);
        unint64_t v55 = *(void *)((char *)v10 + v53 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v83 = *(_OWORD *)v54;
        }
        else
        {
          uint64_t v56 = *v54;
          sub_25C034EC8(*v54, v55);
          *(void *)uint64_t v83 = v56;
          *((void *)v83 + 1) = v55;
        }
        id v6 = v74;
        uint64_t v57 = v29[15];
        uint64_t v58 = (void *)((char *)v9 + v57);
        uint64_t v59 = (void *)((char *)v10 + v57);
        uint64_t v60 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v60;
        *(void *)((char *)v9 + v29[16]) = *(void *)((char *)v10 + v29[16]);
        uint64_t v61 = v29[17];
        uint64_t v62 = (void *)((char *)v9 + v61);
        uint64_t v63 = (void *)((char *)v10 + v61);
        uint64_t v64 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v64;
        uint64_t v65 = v29[18];
        uint64_t v66 = (void *)((char *)v9 + v65);
        uint64_t v67 = (void *)((char *)v10 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        *(void *)((char *)v9 + v29[19]) = *(void *)((char *)v10 + v29[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 2u:
        uint64_t v18 = (void *)*v10;
        *uint64_t v9 = *v10;
        id v19 = v18;
        goto LABEL_18;
      case 3u:
        uint64_t v20 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v20;
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    uint64_t v69 = *(int *)(a3 + 24);
    uint64_t v70 = (void *)((char *)v7 + v69);
    uint64_t v71 = (void *)((char *)v6 + v69);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
  }
  swift_retain();
  return v7;
}

uint64_t sub_25C09CEB8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for ReportScreen(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v5 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v6 = (char *)v4 + *(int *)(v5 + 28);
        uint64_t v7 = sub_25C0EA238();
        uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
        v8(v6, v7);
        v8((char *)v4 + *(int *)(v5 + 32), v7);
      }
      break;
    case 1u:
      uint64_t v9 = sub_25C0EA328();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9)) {
        (*(void (**)(id *, uint64_t))(v10 + 8))(v4, v9);
      }
      uint64_t v11 = type metadata accessor for Report.Evidence(0);
      uint64_t v12 = (char *)v4 + *(int *)(v11 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, uint64_t))(v10 + 8))(&v12[*(int *)(v13 + 40)], v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)((char *)v4 + *(int *)(v11 + 56));
      unint64_t v15 = v14[1];
      if (v15 >> 60 != 15) {
        sub_25C035294(*v14, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 2u:

      break;
    case 3u:
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return swift_release();
}

void *sub_25C09D1FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ReportScreen(0);
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v10 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = type metadata accessor for Report.Authority(0);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v19 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v19;
        uint64_t v20 = v8[3];
        v7[2] = v8[2];
        v7[3] = v20;
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        uint64_t v21 = (void *)v8[6];
        v7[5] = v8[5];
        v7[6] = v21;
        uint64_t v22 = v8[8];
        v7[7] = v8[7];
        v7[8] = v22;
        uint64_t v23 = v8[10];
        v7[9] = v8[9];
        v7[10] = v23;
        *((unsigned char *)v7 + 88) = *((unsigned char *)v8 + 88);
        v7[12] = v8[12];
        uint64_t v24 = *(int *)(v10 + 28);
        id v78 = (char *)v8 + v24;
        uint64_t v80 = (char *)v7 + v24;
        uint64_t v82 = v3;
        uint64_t v25 = sub_25C0EA238();
        uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v26 = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v76(v80, v78, v25);
        uint64_t v27 = v25;
        uint64_t v3 = v82;
        v76((char *)v7 + *(int *)(v10 + 32), (char *)v8 + *(int *)(v10 + 32), v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      goto LABEL_16;
    case 1u:
      uint64_t v13 = sub_25C0EA328();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v83 = v4;
      uint64_t v81 = v3;
      uint64_t v77 = v13;
      uint64_t v79 = v14;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v7, v8, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
      }
      id v28 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v29 = v28[6];
      uint64_t v30 = (void *)((char *)v7 + v29);
      uint64_t v31 = (char *)v8 + v29;
      uint64_t v32 = *(void *)((char *)v8 + v29 + 8);
      *uint64_t v30 = *(void *)((char *)v8 + v29);
      v30[1] = v32;
      uint64_t v33 = *(void *)((char *)v8 + v29 + 24);
      v30[2] = *(void *)((char *)v8 + v29 + 16);
      v30[3] = v33;
      uint64_t v34 = *(void *)((char *)v8 + v29 + 40);
      void v30[4] = *(void *)((char *)v8 + v29 + 32);
      v30[5] = v34;
      uint64_t v35 = *(void *)((char *)v8 + v29 + 56);
      v30[6] = *(void *)((char *)v8 + v29 + 48);
      v30[7] = v35;
      uint64_t v36 = *(void *)((char *)v8 + v29 + 72);
      v30[8] = *(void *)((char *)v8 + v29 + 64);
      v30[9] = v36;
      uint64_t v37 = *(void *)((char *)v8 + v29 + 88);
      v30[10] = *(void *)((char *)v8 + v29 + 80);
      v30[11] = v37;
      uint64_t v38 = *(void *)((char *)v8 + v29 + 104);
      v30[12] = *(void *)((char *)v8 + v29 + 96);
      v30[13] = v38;
      uint64_t v39 = *(void *)((char *)v8 + v29 + 120);
      v30[14] = *(void *)((char *)v8 + v29 + 112);
      v30[15] = v39;
      uint64_t v40 = *(void *)((char *)v8 + v29 + 136);
      v30[16] = *(void *)((char *)v8 + v29 + 128);
      v30[17] = v40;
      uint64_t v41 = *(void *)((char *)v8 + v29 + 152);
      v30[18] = *(void *)((char *)v8 + v29 + 144);
      v30[19] = v41;
      uint64_t v42 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
      uint64_t v74 = &v31[v42];
      uint64_t v75 = (char *)v30 + v42;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v75, v74, v77);
      *(void *)((char *)v7 + v28[7]) = *(void *)((char *)v8 + v28[7]);
      *(void *)((char *)v7 + v28[8]) = *(void *)((char *)v8 + v28[8]);
      uint64_t v44 = v28[9];
      uint64_t v45 = (void *)((char *)v7 + v44);
      uint64_t v46 = (void *)((char *)v8 + v44);
      uint64_t v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      *((unsigned char *)v7 + v28[10]) = *((unsigned char *)v8 + v28[10]);
      *((unsigned char *)v7 + v28[11]) = *((unsigned char *)v8 + v28[11]);
      uint64_t v48 = v28[12];
      uint64_t v49 = (void *)((char *)v7 + v48);
      uint64_t v50 = (void *)((char *)v8 + v48);
      uint64_t v51 = v50[1];
      *uint64_t v49 = *v50;
      v49[1] = v51;
      *(void *)((char *)v7 + v28[13]) = *(void *)((char *)v8 + v28[13]);
      uint64_t v52 = v28[14];
      uint64_t v53 = (char *)v7 + v52;
      uint64_t v54 = (void *)((char *)v8 + v52);
      unint64_t v55 = *(void *)((char *)v8 + v52 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      }
      else
      {
        uint64_t v56 = *v54;
        sub_25C034EC8(*v54, v55);
        *(void *)uint64_t v53 = v56;
        *((void *)v53 + 1) = v55;
      }
      uint64_t v4 = v83;
      uint64_t v3 = v81;
      uint64_t v57 = v28[15];
      uint64_t v58 = (void *)((char *)v7 + v57);
      uint64_t v59 = (void *)((char *)v8 + v57);
      uint64_t v60 = v59[1];
      *uint64_t v58 = *v59;
      v58[1] = v60;
      *(void *)((char *)v7 + v28[16]) = *(void *)((char *)v8 + v28[16]);
      uint64_t v61 = v28[17];
      uint64_t v62 = (void *)((char *)v7 + v61);
      uint64_t v63 = (void *)((char *)v8 + v61);
      uint64_t v64 = v63[1];
      *uint64_t v62 = *v63;
      v62[1] = v64;
      uint64_t v65 = v28[18];
      uint64_t v66 = (void *)((char *)v7 + v65);
      uint64_t v67 = (void *)((char *)v8 + v65);
      uint64_t v68 = v67[1];
      *uint64_t v66 = *v67;
      v66[1] = v68;
      *(void *)((char *)v7 + v28[19]) = *(void *)((char *)v8 + v28[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 2u:
      uint64_t v16 = (void *)*v8;
      *uint64_t v7 = *v8;
      id v17 = v16;
      goto LABEL_16;
    case 3u:
      uint64_t v18 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v18;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  uint64_t v69 = *(int *)(v3 + 24);
  uint64_t v70 = (void *)((char *)a1 + v69);
  uint64_t v71 = (void *)((char *)v4 + v69);
  uint64_t v72 = v71[1];
  *uint64_t v70 = *v71;
  v70[1] = v72;
  swift_retain();
  return a1;
}

void *sub_25C09D838(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_25C0961E8((uint64_t)a1 + v6, type metadata accessor for ReportScreen);
    uint64_t v9 = type metadata accessor for ReportScreen(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
        {
          uint64_t v12 = type metadata accessor for Report.Authority(0);
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v7[3] = v8[3];
          *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
          v7[5] = v8[5];
          unint64_t v55 = (void *)v8[6];
          v7[6] = v55;
          v7[7] = v8[7];
          v7[8] = v8[8];
          v7[9] = v8[9];
          v7[10] = v8[10];
          *((unsigned char *)v7 + 88) = *((unsigned char *)v8 + 88);
          v7[12] = v8[12];
          uint64_t v18 = *(int *)(v10 + 28);
          uint64_t v57 = (char *)v8 + v18;
          uint64_t v59 = (char *)v7 + v18;
          uint64_t v62 = a3;
          uint64_t v19 = sub_25C0EA238();
          uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v21 = v55;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v20(v59, v57, v19);
          uint64_t v22 = v19;
          a3 = v62;
          v20((char *)v7 + *(int *)(v10 + 32), (char *)v8 + *(int *)(v10 + 32), v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        }
        goto LABEL_17;
      case 1u:
        uint64_t v13 = sub_25C0EA328();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v61 = a3;
        uint64_t v58 = v14;
        uint64_t v56 = v13;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v7, v8, v13);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
        }
        uint64_t v23 = (int *)type metadata accessor for Report.Evidence(0);
        uint64_t v24 = v23[6];
        uint64_t v25 = (void *)((char *)v7 + v24);
        id v26 = (char *)v8 + v24;
        *uint64_t v25 = *(void *)((char *)v8 + v24);
        v25[1] = *(void *)((char *)v8 + v24 + 8);
        void v25[2] = *(void *)((char *)v8 + v24 + 16);
        v25[3] = *(void *)((char *)v8 + v24 + 24);
        v25[4] = *(void *)((char *)v8 + v24 + 32);
        v25[5] = *(void *)((char *)v8 + v24 + 40);
        v25[6] = *(void *)((char *)v8 + v24 + 48);
        v25[7] = *(void *)((char *)v8 + v24 + 56);
        v25[8] = *(void *)((char *)v8 + v24 + 64);
        v25[9] = *(void *)((char *)v8 + v24 + 72);
        v25[10] = *(void *)((char *)v8 + v24 + 80);
        v25[11] = *(void *)((char *)v8 + v24 + 88);
        v25[12] = *(void *)((char *)v8 + v24 + 96);
        v25[13] = *(void *)((char *)v8 + v24 + 104);
        v25[14] = *(void *)((char *)v8 + v24 + 112);
        v25[15] = *(void *)((char *)v8 + v24 + 120);
        v25[16] = *(void *)((char *)v8 + v24 + 128);
        v25[17] = *(void *)((char *)v8 + v24 + 136);
        v25[18] = *(void *)((char *)v8 + v24 + 144);
        v25[19] = *(void *)((char *)v8 + v24 + 152);
        uint64_t v27 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
        uint64_t v53 = &v26[v27];
        uint64_t v54 = (char *)v25 + v27;
        id v28 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(v54, v53, v56);
        *(void *)((char *)v7 + v23[7]) = *(void *)((char *)v8 + v23[7]);
        *(void *)((char *)v7 + v23[8]) = *(void *)((char *)v8 + v23[8]);
        uint64_t v29 = v23[9];
        uint64_t v30 = (void *)((char *)v7 + v29);
        uint64_t v31 = (void *)((char *)v8 + v29);
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        *((unsigned char *)v7 + v23[10]) = *((unsigned char *)v8 + v23[10]);
        *((unsigned char *)v7 + v23[11]) = *((unsigned char *)v8 + v23[11]);
        uint64_t v32 = v23[12];
        uint64_t v33 = (void *)((char *)v7 + v32);
        uint64_t v34 = (void *)((char *)v8 + v32);
        *uint64_t v33 = *v34;
        v33[1] = v34[1];
        *(void *)((char *)v7 + v23[13]) = *(void *)((char *)v8 + v23[13]);
        uint64_t v35 = v23[14];
        uint64_t v60 = (char *)v7 + v35;
        uint64_t v36 = (void *)((char *)v8 + v35);
        unint64_t v37 = *(void *)((char *)v8 + v35 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v60 = *(_OWORD *)v36;
        }
        else
        {
          uint64_t v38 = *v36;
          sub_25C034EC8(*v36, v37);
          *(void *)uint64_t v60 = v38;
          *((void *)v60 + 1) = v37;
        }
        a3 = v61;
        uint64_t v39 = v23[15];
        uint64_t v40 = (void *)((char *)v7 + v39);
        uint64_t v41 = (void *)((char *)v8 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        *(void *)((char *)v7 + v23[16]) = *(void *)((char *)v8 + v23[16]);
        uint64_t v42 = v23[17];
        uint64_t v43 = (void *)((char *)v7 + v42);
        uint64_t v44 = (void *)((char *)v8 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        uint64_t v45 = v23[18];
        uint64_t v46 = (void *)((char *)v7 + v45);
        uint64_t v47 = (void *)((char *)v8 + v45);
        void *v46 = *v47;
        v46[1] = v47[1];
        *(void *)((char *)v7 + v23[19]) = *(void *)((char *)v8 + v23[19]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        uint64_t v16 = (void *)*v8;
        *uint64_t v7 = *v8;
        id v17 = v16;
        goto LABEL_17;
      case 3u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  uint64_t v48 = *(int *)(a3 + 24);
  uint64_t v49 = (void *)((char *)a1 + v48);
  uint64_t v50 = (void *)((char *)a2 + v48);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_25C09DF64(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ReportScreen(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = sub_25C0EA328();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v34 = v3;
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v15 + 32))(v7, v8, v14);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
    }
    id v21 = (int *)type metadata accessor for Report.Evidence(0);
    uint64_t v22 = v21[6];
    uint64_t v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)v8 + v22;
    long long v25 = *(_OWORD *)((char *)v8 + v22 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)((char *)v8 + v22);
    *((_OWORD *)v23 + 1) = v25;
    long long v26 = *(_OWORD *)((char *)v8 + v22 + 48);
    *((_OWORD *)v23 + 2) = *(_OWORD *)((char *)v8 + v22 + 32);
    *((_OWORD *)v23 + 3) = v26;
    long long v27 = *(_OWORD *)((char *)v8 + v22 + 112);
    *((_OWORD *)v23 + 6) = *(_OWORD *)((char *)v8 + v22 + 96);
    *((_OWORD *)v23 + 7) = v27;
    long long v28 = *(_OWORD *)((char *)v8 + v22 + 144);
    *((_OWORD *)v23 + 8) = *(_OWORD *)((char *)v8 + v22 + 128);
    *((_OWORD *)v23 + 9) = v28;
    long long v29 = *(_OWORD *)((char *)v8 + v22 + 80);
    *((_OWORD *)v23 + 4) = *(_OWORD *)((char *)v8 + v22 + 64);
    *((_OWORD *)v23 + 5) = v29;
    uint64_t v30 = _s14descr27097BA99O6VictimVMa(0);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[*(int *)(v30 + 40)], &v24[*(int *)(v30 + 40)], v14);
    *(void *)((char *)v7 + v21[7]) = *(void *)((char *)v8 + v21[7]);
    *(void *)((char *)v7 + v21[8]) = *(void *)((char *)v8 + v21[8]);
    *(_OWORD *)((char *)v7 + v21[9]) = *(_OWORD *)((char *)v8 + v21[9]);
    *((unsigned char *)v7 + v21[10]) = *((unsigned char *)v8 + v21[10]);
    *((unsigned char *)v7 + v21[11]) = *((unsigned char *)v8 + v21[11]);
    *(_OWORD *)((char *)v7 + v21[12]) = *(_OWORD *)((char *)v8 + v21[12]);
    *(void *)((char *)v7 + v21[13]) = *(void *)((char *)v8 + v21[13]);
    *(_OWORD *)((char *)v7 + v21[14]) = *(_OWORD *)((char *)v8 + v21[14]);
    *(_OWORD *)((char *)v7 + v21[15]) = *(_OWORD *)((char *)v8 + v21[15]);
    *(void *)((char *)v7 + v21[16]) = *(void *)((char *)v8 + v21[16]);
    *(_OWORD *)((char *)v7 + v21[17]) = *(_OWORD *)((char *)v8 + v21[17]);
    *(_OWORD *)((char *)v7 + v21[18]) = *(_OWORD *)((char *)v8 + v21[18]);
    *(void *)((char *)v7 + v21[19]) = *(void *)((char *)v8 + v21[19]);
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = v34;
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      uint64_t v13 = type metadata accessor for Report.Authority(0);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      long long v17 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v17;
      v7[2] = v8[2];
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
      *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
      uint64_t v18 = *(int *)(v11 + 28);
      uint64_t v32 = (char *)v8 + v18;
      uint64_t v33 = (char *)v7 + v18;
      uint64_t v19 = sub_25C0EA238();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
      v20(v33, v32, v19);
      v20((char *)v7 + *(int *)(v11 + 32), (char *)v8 + *(int *)(v11 + 32), v19);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_OWORD *)((char *)a1 + *(int *)(v3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v3 + 24));
  return a1;
}

void *sub_25C09E390(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_25C0961E8((uint64_t)a1 + v6, type metadata accessor for ReportScreen);
    uint64_t v9 = type metadata accessor for ReportScreen(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = sub_25C0EA328();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v34 = a3;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
        memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v15 + 32))(v7, v8, v14);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      }
      id v21 = (int *)type metadata accessor for Report.Evidence(0);
      uint64_t v22 = v21[6];
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      long long v25 = *(_OWORD *)((char *)v8 + v22 + 16);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)((char *)v8 + v22);
      *((_OWORD *)v23 + 1) = v25;
      long long v26 = *(_OWORD *)((char *)v8 + v22 + 48);
      *((_OWORD *)v23 + 2) = *(_OWORD *)((char *)v8 + v22 + 32);
      *((_OWORD *)v23 + 3) = v26;
      long long v27 = *(_OWORD *)((char *)v8 + v22 + 112);
      *((_OWORD *)v23 + 6) = *(_OWORD *)((char *)v8 + v22 + 96);
      *((_OWORD *)v23 + 7) = v27;
      long long v28 = *(_OWORD *)((char *)v8 + v22 + 144);
      *((_OWORD *)v23 + 8) = *(_OWORD *)((char *)v8 + v22 + 128);
      *((_OWORD *)v23 + 9) = v28;
      long long v29 = *(_OWORD *)((char *)v8 + v22 + 80);
      *((_OWORD *)v23 + 4) = *(_OWORD *)((char *)v8 + v22 + 64);
      *((_OWORD *)v23 + 5) = v29;
      uint64_t v30 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[*(int *)(v30 + 40)], &v24[*(int *)(v30 + 40)], v14);
      *(void *)((char *)v7 + v21[7]) = *(void *)((char *)v8 + v21[7]);
      *(void *)((char *)v7 + v21[8]) = *(void *)((char *)v8 + v21[8]);
      *(_OWORD *)((char *)v7 + v21[9]) = *(_OWORD *)((char *)v8 + v21[9]);
      *((unsigned char *)v7 + v21[10]) = *((unsigned char *)v8 + v21[10]);
      *((unsigned char *)v7 + v21[11]) = *((unsigned char *)v8 + v21[11]);
      *(_OWORD *)((char *)v7 + v21[12]) = *(_OWORD *)((char *)v8 + v21[12]);
      *(void *)((char *)v7 + v21[13]) = *(void *)((char *)v8 + v21[13]);
      *(_OWORD *)((char *)v7 + v21[14]) = *(_OWORD *)((char *)v8 + v21[14]);
      *(_OWORD *)((char *)v7 + v21[15]) = *(_OWORD *)((char *)v8 + v21[15]);
      *(void *)((char *)v7 + v21[16]) = *(void *)((char *)v8 + v21[16]);
      *(_OWORD *)((char *)v7 + v21[17]) = *(_OWORD *)((char *)v8 + v21[17]);
      *(_OWORD *)((char *)v7 + v21[18]) = *(_OWORD *)((char *)v8 + v21[18]);
      *(void *)((char *)v7 + v21[19]) = *(void *)((char *)v8 + v21[19]);
      swift_storeEnumTagMultiPayload();
      a3 = v34;
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = type metadata accessor for Report.Authority(0);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        long long v17 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v17;
        v7[2] = v8[2];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
        *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
        uint64_t v18 = *(int *)(v11 + 28);
        uint64_t v32 = (char *)v8 + v18;
        uint64_t v33 = (char *)v7 + v18;
        uint64_t v19 = sub_25C0EA238();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
        v20(v33, v32, v19);
        v20((char *)v7 + *(int *)(v11 + 32), (char *)v8 + *(int *)(v11 + 32), v19);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_25C09E7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C09E808);
}

uint64_t sub_25C09E808(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ReportScreen(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25C09E8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C09E8CC);
}

void *sub_25C09E8CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ReportScreen(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25C09E974()
{
  uint64_t result = type metadata accessor for ReportScreen(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Report.ReportNavigationHostingController(uint64_t a1)
{
  return sub_25C02BF00(a1, qword_26A5920B0);
}

uint64_t sub_25C09EA3C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25C09EA7C()
{
  return type metadata accessor for Report.ReportNavigationHostingController(0);
}

uint64_t sub_25C09EA84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C09EB60()
{
  return sub_25C0583D0(&qword_26A5897A8, &qword_26A5897B0);
}

uint64_t sub_25C09EB9C()
{
  return sub_25C0972D8(&qword_26A5897B8, &qword_26A5897C0, (void (*)(void))sub_25C096980, (void (*)(void))sub_25C097188);
}

uint64_t sub_25C09EBEC()
{
  return sub_25C095C90(&qword_26A5897D0, type metadata accessor for Code);
}

uint64_t sub_25C09EC34()
{
  return sub_25C095C90(&qword_26A5897D8, type metadata accessor for CKError);
}

void type metadata accessor for CKError(uint64_t a1)
{
}

uint64_t sub_25C09EC90()
{
  return sub_25C095C90(&qword_26A5897E0, type metadata accessor for CKError);
}

uint64_t sub_25C09ECD8()
{
  return sub_25C095C90(&qword_26A5897E8, type metadata accessor for CKError);
}

uint64_t sub_25C09ED20()
{
  return sub_25C095C90(&qword_26A5897F0, type metadata accessor for CKError);
}

uint64_t sub_25C09ED68()
{
  return sub_25C095C90(&qword_26A5894B8, type metadata accessor for Code);
}

uint64_t sub_25C09EDB0()
{
  return sub_25C095C90(&qword_26A5897F8, type metadata accessor for Code);
}

unint64_t sub_25C09EDFC()
{
  unint64_t result = qword_26A589800;
  if (!qword_26A589800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589800);
  }
  return result;
}

uint64_t sub_25C09EE50()
{
  return sub_25C095C90(&qword_26A589808, type metadata accessor for CKError);
}

uint64_t sub_25C09EE98()
{
  return sub_25C095C90(&qword_26A589810, type metadata accessor for CKError);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25C09EEF8()
{
  return sub_25C0949E0(*(void *)(v0 + 16));
}

uint64_t sub_25C09EF4C()
{
  return sub_25C0949E0(*(void *)(v0 + 16));
}

uint64_t sub_25C09EF9C()
{
  return sub_25C0949E0(*(void *)(v0 + 16));
}

uint64_t sub_25C09EFEC()
{
  return sub_25C0949E0(*(void *)(v0 + 16));
}

uint64_t objectdestroy_70Tm()
{
  uint64_t v1 = sub_25C0EA838();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25C09F0CC()
{
  return sub_25C0EA828();
}

uint64_t sub_25C09F128()
{
  uint64_t v1 = type metadata accessor for Report.Evidence(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  uint64_t v8 = v5 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8 + *(int *)(v9 + 40), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v1 + 56));
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_25C035294(*v10, v11);
  }
  unint64_t v12 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v12 + 8, v2 | 7);
}

uint64_t sub_25C09F39C()
{
  uint64_t v2 = *(void *)(type metadata accessor for Report.Evidence(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_25C03C050;
  return sub_25C08F624((uint64_t)v10, v11, v12, v5, v6, v7, v8, v9);
}

uint64_t sub_25C09F4CC()
{
  type metadata accessor for ReportNavigationStack(0);

  return sub_25C08CA6C();
}

uint64_t objectdestroy_101Tm()
{
  uint64_t v1 = (int *)type metadata accessor for ReportNavigationStack(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589490);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_25C0EA838();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_25C0EA858();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(void *)(v5 + v1[8]);
  if ((~v10 & 0xF000000000000007) != 0) {

  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25C09F700@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ReportNavigationStack(0) - 8);
  uint64_t v6 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_25C08BA7C(a1, v6, a2);
}

uint64_t sub_25C09F784(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ReportNavigationStack(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_25C08BD3C(a1, v4);
}

unint64_t sub_25C09F7F4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return (unint64_t)(id)(result & 0x3FFFFFFFFFFFFFFFLL);
  }
  return result;
}

uint64_t sub_25C09F80C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25C09F844(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(v2 + 16), sel_evidenceToReportWithContext_completionHandler_, a1, a2);
}

uint64_t sub_25C09F85C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25C09F894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25C089D44(a1, a2, a3, *(void (**)(void *, void *))(v3 + 16));
}

uint64_t sub_25C09F89C()
{
  return objectdestroy_18Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_18Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x270FA0238](v1, 40, 7);
}

uint64_t sub_25C09F904(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 32);
  if (v6) {
    uint64_t v7 = sub_25C089EC4(v6);
  }
  else {
    uint64_t v7 = 0;
  }
  v5(v7, a1, a2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C09F980(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25C09F9A0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_25C09F9E0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25C09FA00(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

double sub_25C09FA88@<D0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  v18[2] = *(_OWORD *)(v1 + 32);
  long long v19 = v3;
  uint64_t v20 = *(void *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v4;
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(void *)(v5 + 80) = *(void *)(v1 + 64);
  long long v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v8 + 64) = v9;
  *(void *)(v8 + 80) = *(void *)(v1 + 64);
  long long v10 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v8 + 32) = v10;
  sub_25C09FCFC((uint64_t)v18);
  sub_25C09FCFC((uint64_t)v18);
  unsigned __int8 v11 = sub_25C0EAEE8();
  unsigned __int8 v12 = sub_25C0EAEF8();
  char v13 = sub_25C0EAF18();
  sub_25C0EAF18();
  if (sub_25C0EAF18() != v11) {
    char v13 = sub_25C0EAF18();
  }
  sub_25C0EAF18();
  if (sub_25C0EAF18() != v12) {
    char v13 = sub_25C0EAF18();
  }
  char v14 = v19;
  uint64_t v15 = sub_25C0EB538();
  *(void *)a1 = sub_25C09FC14;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = sub_25C09FCD4;
  *(void *)(a1 + 32) = v8;
  *(_WORD *)(a1 + 40) = 256;
  *(unsigned char *)(a1 + 48) = v13;
  double result = 0.0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = 1;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v17;
  return result;
}

id sub_25C09FC14()
{
  id v0 = objc_msgSend(self, sel_boldButton);
  uint64_t v1 = (void *)sub_25C0EB828();
  objc_msgSend(v0, sel_setTitle_forState_, v1, 0);

  return v0;
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_25C09FCD4()
{
  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_25C09FCFC(uint64_t a1)
{
  return a1;
}

__n128 sub_25C09FD54@<Q0>(__n128 *a1@<X0>, unsigned __int8 a2@<W1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 result = *a1;
  unint64_t v6 = a1[1].n128_u64[0];
  unint64_t v7 = a1[1].n128_u64[1];
  unsigned __int8 v8 = a1[2].n128_u8[0];
  unint64_t v9 = a1[2].n128_u64[1];
  *a5 = *a1;
  a5[1].n128_u64[0] = v6;
  a5[1].n128_u64[1] = v7;
  a5[2].n128_u8[0] = v8;
  a5[2].n128_u64[1] = v9;
  a5[3].n128_u8[0] = a2;
  a5[3].n128_u64[1] = a3;
  a5[4].n128_u64[0] = a4;
  return result;
}

id sub_25C09FD84()
{
  return sub_25C0A0008();
}

id sub_25C09FDC4(void *a1)
{
  return sub_25C0A00CC(a1);
}

uint64_t sub_25C09FE04(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_25C0630F0(a1, a2, WitnessTable);
}

uint64_t sub_25C09FE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_25C063104(a1, a2, a3, WitnessTable);
}

uint64_t sub_25C09FED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F01780](a1, a2, a3, WitnessTable);
}

uint64_t sub_25C09FF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F01718](a1, a2, a3, WitnessTable);
}

void sub_25C09FFC8()
{
}

id sub_25C0A0008()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(*v0)();
  sub_25C0A09CC();
  long long v4 = v1[3];
  long long v3 = v1[4];
  id v5 = v2;
  swift_retain();
  unsigned __int8 v8 = v3;
  unint64_t v6 = (void *)sub_25C0EBD18();
  objc_msgSend(v5, sel_addAction_forControlEvents_, v6, 64, 0, 0, 0, v4, v8);

  return v5;
}

id sub_25C0A00CC(id a1)
{
  if (!*(unsigned char *)(v1 + 16))
  {
    objc_msgSend(a1, sel_showsBusyIndicator);
    long long v3 = sel_setEnabled_;
    id v4 = a1;
    uint64_t v5 = 1;
LABEL_5:
    return objc_msgSend(v4, v3, v5);
  }
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    objc_msgSend(a1, sel_hidesBusyIndicator);
    long long v3 = sel_setEnabled_;
    id v4 = a1;
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  objc_msgSend(a1, sel_setEnabled_, 1);
  long long v3 = sel_hidesBusyIndicator;
  id v4 = a1;

  return objc_msgSend(v4, v3, v5);
}

unint64_t sub_25C0A0190()
{
  unint64_t result = qword_26A589970;
  if (!qword_26A589970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589970);
  }
  return result;
}

uint64_t sub_25C0A01E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0A0200(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25C0A023C()
{
  return swift_getWitnessTable();
}

uint64_t destroy for ReportButton()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ReportButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReportButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ReportButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportButton()
{
  return &type metadata for ReportButton;
}

unsigned char *storeEnumTagSinglePayload for ReportButton.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0A05DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportButton.State()
{
  return &type metadata for ReportButton.State;
}

uint64_t sub_25C0A0614()
{
  swift_release();

  return swift_release();
}

uint64_t sub_25C0A0650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_25C0A0698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_25C0A0714(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_25C0A0764(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25C0A07AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for TrayButtonWrapper()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_25C0A0810()
{
  unint64_t result = qword_26A589978;
  if (!qword_26A589978)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589980);
    sub_25C0A08B0();
    sub_25C0583D0(&qword_26A5899B8, &qword_26A5899C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589978);
  }
  return result;
}

unint64_t sub_25C0A08B0()
{
  unint64_t result = qword_26A589988;
  if (!qword_26A589988)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589990);
    sub_25C0A092C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589988);
  }
  return result;
}

unint64_t sub_25C0A092C()
{
  unint64_t result = qword_26A589998;
  if (!qword_26A589998)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5899A0);
    sub_25C0583D0(&qword_26A5899A8, &qword_26A5899B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589998);
  }
  return result;
}

unint64_t sub_25C0A09CC()
{
  unint64_t result = qword_26A588428;
  if (!qword_26A588428)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A588428);
  }
  return result;
}

const char *SCAUIFeatures.domain.getter()
{
  return "SensitiveContentAnalysisUI";
}

const char *SCAUIFeatures.feature.getter()
{
  uint64_t v1 = "improved_reporting";
  if (*v0 != 1) {
    uint64_t v1 = "u13_intervention";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "report_to_apple";
  }
}

void sub_25C0A0A68()
{
  qword_26A5929C8 = MEMORY[0x263F8EE80];
}

uint64_t sub_25C0A0A7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5899E8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_26A5929D8 = result;
  return result;
}

uint64_t SCAUIFeatures.isEnabled.getter(uint64_t a1)
{
  char v2 = *v1;
  if (qword_26A5929D0 != -1) {
    a1 = swift_once();
  }
  long long v3 = (os_unfair_lock_s *)qword_26A5929D8;
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v4);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  sub_25C0A1ADC(v8);
  os_unfair_lock_unlock(v3 + 4);
  int v5 = v8[0];
  swift_release();
  if (v5 == 2)
  {
    unint64_t v9 = &type metadata for SCAUIFeatures;
    unint64_t v10 = sub_25C0A1B20();
    v8[0] = v2;
    char v6 = sub_25C0EA488();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    char v6 = v5 & 1;
  }
  return v6 & 1;
}

uint64_t sub_25C0A0BF8@<X0>(char *a1@<X8>)
{
  unsigned __int8 v3 = *(unsigned char *)(v1 + 16);
  if (qword_26A5929C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = qword_26A5929C8;
  if (*(void *)(qword_26A5929C8 + 16) && (unint64_t v5 = sub_25C0A15AC(v3), (v6 & 1) != 0)) {
    char v7 = *(unsigned char *)(*(void *)(v4 + 56) + v5);
  }
  else {
    char v7 = 2;
  }
  *a1 = v7;
  return swift_endAccess();
}

void static SCAUIFeatures.withForcedFeatureFlags<A>(_:_:)(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, os_unfair_lock_s *a3@<X8>)
{
  if (qword_26A5929D0 != -1) {
    a1 = swift_once();
  }
  char v6 = (os_unfair_lock_s *)qword_26A5929D8;
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v7);
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  sub_25C0A1B8C(&v12);
  os_unfair_lock_unlock(v6 + 4);
  if (v3)
  {
    __break(1u);
    os_unfair_lock_unlock(a3);
    __break(1u);
  }
  else
  {
    uint64_t v8 = swift_release();
    uint64_t v9 = a2(v8);
    unint64_t v10 = (os_unfair_lock_s *)qword_26A5929D8;
    uint64_t v11 = MEMORY[0x270FA5388](v9);
    MEMORY[0x270FA5388](v11);
    swift_retain();
    os_unfair_lock_lock(v10 + 4);
    sub_25C0A2160();
    os_unfair_lock_unlock(v10 + 4);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t static SCAUIFeatures.withForcedFeatureFlags<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_25C0A0F5C, 0, 0);
}

uint64_t sub_25C0A0F5C()
{
  uint64_t v11 = v0;
  if (qword_26A5929D0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  char v2 = (os_unfair_lock_s *)qword_26A5929D8;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_25C0A1B74;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_25C0A1B8C(&v10);
  os_unfair_lock_unlock(v2 + 4);
  unint64_t v5 = (int *)v0[4];
  v0[6] = v10;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  char v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *char v6 = v0;
  v6[1] = sub_25C0A1128;
  uint64_t v7 = v0[2];
  return v9(v7);
}

uint64_t sub_25C0A1128()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_25C0A1364;
  }
  else {
    char v2 = sub_25C0A123C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25C0A123C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = (os_unfair_lock_s *)qword_26A5929D8;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = sub_25C0A2148;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  sub_25C0A2160();
  if (v1)
  {
    os_unfair_lock_unlock(v3 + 4);
    return swift_task_dealloc();
  }
  else
  {
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_25C0A1364()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = (os_unfair_lock_s *)qword_26A5929D8;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_25C0A2148;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_25C0A2160();
  os_unfair_lock_unlock(v2 + 4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

SensitiveContentAnalysisUI::SCAUIFeatures_optional __swiftcall SCAUIFeatures.init(rawValue:)(Swift::UInt rawValue)
{
  char v2 = 3;
  if (rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (SensitiveContentAnalysisUI::SCAUIFeatures_optional)rawValue;
}

uint64_t SCAUIFeatures.rawValue.getter()
{
  return *v0;
}

SensitiveContentAnalysisUI::SCAUIFeatures_optional sub_25C0A14A8(Swift::UInt *a1)
{
  return SCAUIFeatures.init(rawValue:)(*a1);
}

void sub_25C0A14B0(void *a1@<X8>)
{
  *a1 = *v1;
}

const char *sub_25C0A14BC()
{
  return "SensitiveContentAnalysisUI";
}

const char *sub_25C0A14D0()
{
  uint64_t v1 = "improved_reporting";
  if (*v0 != 1) {
    uint64_t v1 = "u13_intervention";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "report_to_apple";
  }
}

uint64_t sub_25C0A1518(uint64_t a1)
{
  if (qword_26A5929C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26A5929C8 = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_25C0A15AC(unsigned __int8 a1)
{
  sub_25C0EC348();
  sub_25C0EC358();
  uint64_t v2 = sub_25C0EC368();

  return sub_25C0A1618(a1, v2);
}

unint64_t sub_25C0A1618(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_25C0A16B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5899E0);
  uint64_t result = sub_25C0EC0A8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1)) {
          goto LABEL_38;
        }
        if (v8 >= v13)
        {
LABEL_29:
          if ((v31 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v3 = v2;
            goto LABEL_36;
          }
          uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
          if (v30 >= 64) {
            bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *uint64_t v9 = -1 << v30;
          }
          uint64_t v3 = v2;
          *(void *)(v5 + 16) = 0;
          break;
        }
        unint64_t v19 = v9[v8];
        if (!v19)
        {
          int64_t v20 = v8 + 1;
          if (v8 + 1 >= v13) {
            goto LABEL_29;
          }
          unint64_t v19 = v9[v20];
          if (!v19)
          {
            while (1)
            {
              int64_t v8 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              if (v8 >= v13) {
                goto LABEL_29;
              }
              unint64_t v19 = v9[v8];
              ++v20;
              if (v19) {
                goto LABEL_19;
              }
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_19:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      sub_25C0EC348();
      sub_25C0EC358();
      uint64_t result = sub_25C0EC368();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_36:
  *uint64_t v3 = v7;
  return result;
}

void *sub_25C0A1968()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5899E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25C0EC098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    if (!v18) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_25C0A1ADC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_25C0A1B20()
{
  unint64_t result = qword_26A5899C8;
  if (!qword_26A5899C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5899C8);
  }
  return result;
}

uint64_t sub_25C0A1B74@<X0>(uint64_t *a1@<X8>)
{
  return sub_25C0A1BF8(a1);
}

void *sub_25C0A1B8C@<X0>(void *a1@<X8>)
{
  return sub_25C0A1F50(a1);
}

uint64_t sub_25C0A1BA4()
{
  return sub_25C0A1518(*(void *)(v0 + 16));
}

uint64_t sub_25C0A1BD0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25C0A1BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v1 + 16);
  if (qword_26A5929C0 != -1) {
LABEL_42:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v30 = isUniquelyReferenced_nonNull_native + 64;
  uint64_t v3 = 1 << *(unsigned char *)(isUniquelyReferenced_nonNull_native + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(isUniquelyReferenced_nonNull_native + 64);
  int64_t v31 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v28 = qword_26A5929C8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v6 << 6);
      goto LABEL_27;
    }
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_41;
    }
    if (v9 >= v31)
    {
LABEL_38:
      uint64_t result = swift_release();
      *a1 = v28;
      return result;
    }
    unint64_t v10 = *(void *)(v30 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v31) {
        goto LABEL_38;
      }
      unint64_t v10 = *(void *)(v30 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v31) {
          goto LABEL_38;
        }
        unint64_t v10 = *(void *)(v30 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v31) {
            goto LABEL_38;
          }
          unint64_t v10 = *(void *)(v30 + 8 * v6);
          if (!v10)
          {
            int64_t v6 = v9 + 4;
            if (v9 + 4 >= v31) {
              goto LABEL_38;
            }
            unint64_t v10 = *(void *)(v30 + 8 * v6);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v6 << 6);
LABEL_27:
    uint64_t v12 = isUniquelyReferenced_nonNull_native;
    unsigned __int8 v13 = *(unsigned char *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + v8);
    char v14 = *(unsigned char *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + v8);
    swift_beginAccess();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = (void *)qword_26A5929C8;
    uint64_t v32 = qword_26A5929C8;
    qword_26A5929C8 = 0x8000000000000000;
    unint64_t v17 = sub_25C0A15AC(v13);
    uint64_t v18 = v15[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    char v21 = v16;
    if (v15[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_25C0A1968();
        unint64_t v15 = (void *)v32;
        if (v21) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_25C0A16B8(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v15 = (void *)v32;
      unint64_t v22 = sub_25C0A15AC(v13);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_44;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_5:
        *(unsigned char *)(v15[7] + v17) = v14;
        goto LABEL_6;
      }
    }
    v15[(v17 >> 6) + 8] |= 1 << v17;
    *(unsigned char *)(v15[6] + v17) = v13;
    *(unsigned char *)(v15[7] + v17) = v14;
    uint64_t v24 = v15[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_40;
    }
    v15[2] = v26;
LABEL_6:
    qword_26A5929C8 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t isUniquelyReferenced_nonNull_native = v12;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v31) {
    goto LABEL_38;
  }
  unint64_t v10 = *(void *)(v30 + 8 * v11);
  if (v10)
  {
    int64_t v6 = v11;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v31) {
      goto LABEL_38;
    }
    unint64_t v10 = *(void *)(v30 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_44:
  uint64_t result = sub_25C0EC298();
  __break(1u);
  return result;
}

void *sub_25C0A1F50@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_25C0A1F98()
{
  unint64_t result = qword_26A5899D8;
  if (!qword_26A5899D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5899D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SCAUIFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0A20B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SCAUIFeatures()
{
  return &type metadata for SCAUIFeatures;
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_26A5899F0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A5899F0);
    }
  }
}

uint64_t sub_25C0A2148()
{
  return sub_25C0A1BA4();
}

uint64_t sub_25C0A2160()
{
  return sub_25C0A1BD0();
}

uint64_t sub_25C0A2178()
{
  uint64_t v0 = sub_25C0EA638();
  __swift_allocate_value_buffer(v0, qword_26A592BE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A592BE8);
  return sub_25C0EA628();
}

uint64_t chunkSizeInBytes.getter()
{
  return 0x100000;
}

uint64_t HPKEEnvelope.encapsulatedKey.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_25C034EC8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t HPKEEnvelope.publicKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25C034EC8(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t HPKEEnvelope.cipherText.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25C034EC8(v1, *(void *)(v0 + 40));
  return v1;
}

uint64_t HPKEEnvelope.encryptionVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_25C0A22C8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C75737061636E65;
      break;
    case 2:
      unint64_t result = 0x654B63696C627570;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x6554726568706963;
      break;
  }
  return result;
}

unint64_t sub_25C0A2374()
{
  return sub_25C0A22C8(*v0);
}

uint64_t sub_25C0A237C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C0A5CBC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C0A23A4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_25C0A23B0(uint64_t a1)
{
  unint64_t v2 = sub_25C0A5E84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0A23EC(uint64_t a1)
{
  unint64_t v2 = sub_25C0A5E84();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HPKEEnvelope.init(encapsulatedKey:publicKey:cipherText:encryptionVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v16 = sub_25C0EB6C8();
  uint64_t v18 = v17;
  uint64_t v19 = sub_25C0EB6E8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a3, v19);
  *a8 = a1;
  a8[1] = a2;
  a8[2] = v16;
  a8[3] = v18;
  a8[4] = a4;
  a8[5] = a5;
  a8[6] = a6;
  a8[7] = a7;
  return result;
}

uint64_t HPKEEnvelope.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5899F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v19 = v1[1];
  uint64_t v20 = v7;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[4];
  uint64_t v17 = v1[3];
  uint64_t v18 = v8;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  v16[1] = v1[7];
  v16[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C0A5E84();
  sub_25C0EC388();
  uint64_t v22 = v9;
  uint64_t v23 = v11;
  char v24 = 0;
  sub_25C04D428();
  uint64_t v12 = v21;
  sub_25C0EC208();
  if (!v12)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    uint64_t v22 = v20;
    uint64_t v23 = v19;
    char v24 = 1;
    sub_25C0EC208();
    uint64_t v22 = v14;
    uint64_t v23 = v13;
    char v24 = 2;
    sub_25C0EC208();
    LOBYTE(v22) = 3;
    sub_25C0EC1D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HPKEEnvelope.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C0A5E84();
  sub_25C0EC378();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v36 = a2;
  char v39 = 0;
  sub_25C04F2AC();
  sub_25C0EC168();
  uint64_t v9 = v37;
  unint64_t v10 = v38;
  char v39 = 1;
  sub_25C034EC8(v37, v38);
  sub_25C0EC168();
  unint64_t v34 = v10;
  uint64_t v35 = v9;
  uint64_t v11 = v37;
  unint64_t v12 = v38;
  char v39 = 2;
  sub_25C034EC8(v37, v38);
  sub_25C0EC168();
  uint64_t v32 = v11;
  unint64_t v33 = v12;
  uint64_t v13 = v37;
  LOBYTE(v37) = 3;
  uint64_t v14 = v13;
  unint64_t v15 = v38;
  sub_25C034EC8(v13, v38);
  uint64_t v16 = sub_25C0EC148();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v30 = v18;
  uint64_t v31 = v16;
  v17(v8, v5);
  uint64_t v20 = v32;
  unint64_t v19 = v33;
  sub_25C034EC8(v32, v33);
  uint64_t v21 = v14;
  uint64_t v22 = v14;
  unint64_t v23 = v15;
  sub_25C034EC8(v22, v15);
  unint64_t v25 = v34;
  uint64_t v24 = v35;
  sub_25C034EC8(v35, v34);
  uint64_t v26 = v30;
  swift_bridgeObjectRetain();
  sub_25C035294(v24, v25);
  sub_25C035294(v21, v23);
  sub_25C035294(v20, v19);
  unint64_t v27 = v36;
  *uint64_t v36 = v20;
  v27[1] = v19;
  v27[2] = v21;
  v27[3] = v23;
  v27[4] = v24;
  v27[5] = v25;
  v27[6] = v31;
  v27[7] = v26;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_25C035294(v20, v19);
  sub_25C035294(v21, v23);
  sub_25C035294(v24, v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25C0A2AEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return HPKEEnvelope.init(from:)(a1, a2);
}

uint64_t sub_25C0A2B04(void *a1)
{
  return HPKEEnvelope.encode(to:)(a1);
}

uint64_t EncryptedCSV.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25C0EA238();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t EncryptedCSV.sha256.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EncryptedCSV() + 20);
  uint64_t v4 = sub_25C0EB618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EncryptedCSV.numberOfChunks.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EncryptedCSV() + 24));
}

uint64_t EncryptedCSV.init(from:with:under:prefix:progress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_25C0EB618();
  uint64_t v25 = *(void *)(v12 - 8);
  uint64_t v26 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_25C0EBF78();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3;
  unint64_t v28 = a4;
  sub_25C0EB8E8();
  sub_25C0EA1D8();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_25C05E238();
  uint64_t v16 = v29;
  uint64_t v17 = HPKE.Sender.writeChunkedEncryptedCSV(from:to:progress:chunkSizeInBytes:)((uint64_t)v14, a1, a6, a5, v15);
  if (v16)
  {
    swift_release();
    uint64_t v18 = sub_25C0EA238();
    unint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    v19(a2, v18);
    v19(a1, v18);
    return ((uint64_t (*)(uint64_t, uint64_t))v19)(a6, v18);
  }
  else
  {
    uint64_t v21 = v17;
    swift_release();
    uint64_t v22 = sub_25C0EA238();
    unint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
    v23(a2, v22);
    v23(a1, v22);
    uint64_t v24 = type metadata accessor for EncryptedCSV();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(a6 + *(int *)(v24 + 20), v14, v26);
    *(void *)(a6 + *(int *)(v24 + 24)) = v21;
  }
  return result;
}

uint64_t Report.Evidence.prepareForCK(with:at:progress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v59 = sub_25C0EB718();
  uint64_t v50 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EB618();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25C0EA238();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(self, sel_defaultManager);
  uint64_t v18 = (void *)sub_25C0EA1A8();
  v62[0] = 0;
  unsigned int v19 = objc_msgSend(v17, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v18, 1, 0, v62);

  if (v19)
  {
    id v20 = (id)v62[0];
    uint64_t result = (uint64_t)Report.Evidence.createFileAssetsForCloudKit(with:chunkSizeInBytes:reportDirectoryURL:progress:)((uint64_t)v16, a1, v21, a2);
    if (!v3)
    {
      uint64_t v23 = result;
      uint64_t v25 = Report.Evidence.createReportMetadataAssetsForCloudKit(with:enrichedEvidence:reportDirectoryURL:)((uint64_t)v13, a1, (uint64_t)v16, a2);
      unint64_t v27 = v26;
      uint64_t v48 = v23;
      uint64_t v28 = sub_25C0A5F48(&qword_26A588DA8, MEMORY[0x263F047F8]);
      uint64_t v30 = v58;
      uint64_t v29 = v59;
      sub_25C0EB608();
      unint64_t v49 = v27;
      uint64_t v47 = v25;
      switch(v27 >> 62)
      {
        case 1uLL:
          uint64_t v46 = v28;
          if (v25 >> 32 < (int)v25) {
            __break(1u);
          }
          uint64_t v45 = v27 & 0x3FFFFFFFFFFFFFFFLL;
          sub_25C034EC8(v25, v27);
          sub_25C061FF4((int)v25, v25 >> 32);
          uint64_t v34 = v25;
          unint64_t v35 = v27;
          goto LABEL_13;
        case 2uLL:
          uint64_t v46 = v28;
          unint64_t v31 = v27;
          uint64_t v32 = *(void *)(v25 + 16);
          uint64_t v33 = *(void *)(v25 + 24);
          sub_25C034EC8(v25, v31);
          swift_retain();
          swift_retain();
          sub_25C061FF4(v32, v33);
          swift_release();
          swift_release();
          uint64_t v34 = v25;
          unint64_t v35 = v49;
LABEL_13:
          sub_25C035294(v34, v35);
          goto LABEL_14;
        case 3uLL:
          memset(v62, 0, 14);
          goto LABEL_10;
        default:
          v62[0] = v25;
          LOWORD(v62[1]) = v27;
          BYTE2(v62[1]) = BYTE2(v27);
          BYTE3(v62[1]) = BYTE3(v27);
          BYTE4(v62[1]) = BYTE4(v27);
          BYTE5(v62[1]) = BYTE5(v27);
LABEL_10:
          sub_25C0EB5E8();
          sub_25C035294(v25, v27);
LABEL_14:
          uint64_t v36 = v51;
          sub_25C0EB5F8();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v29);
          uint64_t v37 = v54;
          uint64_t v63 = v54;
          uint64_t v64 = sub_25C0A5F48(&qword_26A589A10, MEMORY[0x263F045C0]);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v62);
          uint64_t v39 = v53;
          (*(void (**)(uint64_t *, char *, uint64_t))(v53 + 16))(boxed_opaque_existential_1, v36, v37);
          __swift_project_boxed_opaque_existential_1(v62, v63);
          sub_25C0EA088();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v37);
          uint64_t v40 = v60;
          uint64_t v41 = v61;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
          uint64_t v43 = v55;
          uint64_t v42 = v56;
          uint64_t v44 = (uint64_t)v52;
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v13, v56);
          sub_25C044948(v40, v41, v44, v48, v57);
          sub_25C035294(v47, v49);
          (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v42);
          uint64_t result = sub_25C0A7398((uint64_t)v16, type metadata accessor for Report.Evidence);
          break;
      }
    }
  }
  else
  {
    id v24 = (id)v62[0];
    sub_25C0EA158();

    return swift_willThrow();
  }
  return result;
}

char *Report.Evidence.createFileAssetsForCloudKit(with:chunkSizeInBytes:reportDirectoryURL:progress:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v40 = a1;
  uint64_t v42 = type metadata accessor for Report.Evidence(0);
  MEMORY[0x270FA5388](v42);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EB638();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_25C0EB6E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25C0EB6A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  static HPKE.Ciphersuite.reportToApple.getter();
  uint64_t v16 = v44;
  sub_25C0EB678();
  if (!v16)
  {
    uint64_t v39 = v13;
    uint64_t v44 = v12;
    sub_25C0A7330(v41, (uint64_t)v6, type metadata accessor for Report.Evidence);
    uint64_t v17 = MEMORY[0x263F8EE78];
    uint64_t v46 = (char *)MEMORY[0x263F8EE78];
    uint64_t v18 = sub_25C0EB688();
    uint64_t v20 = v19;
    uint64_t v21 = v42;
    uint64_t v22 = &v6[*(int *)(v42 + 56)];
    sub_25C03DA24(*(void *)v22, *((void *)v22 + 1));
    *(void *)uint64_t v22 = v18;
    *((void *)v22 + 1) = v20;
    uint64_t v42 = *(int *)(v21 + 52);
    uint64_t v23 = *(void *)&v6[v42];
    uint64_t v45 = v17;
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v25 = v15;
    if (v24)
    {
      uint64_t v26 = *(void *)(type metadata accessor for Report.Message() - 8);
      unint64_t v27 = v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      uint64_t v28 = *(void *)(v26 + 72);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v29 = swift_bridgeObjectRetain();
        sub_25C0A562C(v29);
        v27 += v28;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v17 = v45;
    }
    uint64_t v30 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    type metadata accessor for ProgressTracker();
    uint64_t v31 = ProgressTracker.__allocating_init(fileCount:sizeLimitInBytes:filesPerMessageLimit:)(v30, 0, 0x100000000, 0, 10, 0);
    *(&v38 - 4) = MEMORY[0x270FA5388](v31);
    *(&v38 - 3) = (uint64_t)v25;
    *(&v38 - 2) = v43;
    *(&v38 - 1) = (uint64_t)&v46;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_25C0A4A58((void (*)(uint64_t, uint64_t *))sub_25C0A5F24, (uint64_t)(&v38 - 6), v23);
    uint64_t v33 = v44;
    uint64_t v34 = v39;
    uint64_t v36 = v32;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v37 = v42;
    swift_bridgeObjectRelease();
    *(void *)&v6[v37] = v36;
    sub_25C0A7330((uint64_t)v6, v40, type metadata accessor for Report.Evidence);
    uint64_t v15 = v46;
    sub_25C0A7398((uint64_t)v6, type metadata accessor for Report.Evidence);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v33);
  }
  return v15;
}

uint64_t Report.Evidence.createReportMetadataAssetsForCloudKit(with:enrichedEvidence:reportDirectoryURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v65 = a4;
  uint64_t v73 = a3;
  uint64_t v64 = a1;
  uint64_t v5 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v74 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0E9F78();
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v72 = (unint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25C0E9F98();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v69 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v68 = (char *)&v57 - v12;
  uint64_t v13 = sub_25C0EB638();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_25C0EB6E8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = sub_25C0EB6A8();
  uint64_t v67 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = (const char *)v15;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v24 = v15 + 16;
  uint64_t v25 = v26;
  v26(v20, a2, v14);
  static HPKE.Ciphersuite.reportToApple.getter();
  unint64_t v27 = v84;
  uint64_t result = sub_25C0EB678();
  if (!v27)
  {
    uint64_t v58 = v25;
    uint64_t v59 = v24;
    uint64_t v60 = v18;
    uint64_t v61 = v14;
    uint64_t v62 = a2;
    uint64_t v84 = v23;
    uint64_t v63 = v21;
    uint64_t v29 = v67;
    uint64_t v30 = sub_25C0E9FF8();
    uint64_t v32 = v70;
    uint64_t v31 = v71;
    uint64_t v33 = v68;
    (*(void (**)(char *, void, uint64_t))(v70 + 104))(v68, *MEMORY[0x263F06198], v71);
    uint64_t v34 = sub_25C0E9FD8();
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v69, v33, v31);
    sub_25C0E9FA8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
    sub_25C0E9F68();
    sub_25C0E9F88();
    uint64_t v35 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    uint64_t v36 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v74, 1, 1, v35);
    type metadata accessor for Report.Evidence(0);
    sub_25C0A5F48(&qword_26A589A18, (void (*)(uint64_t))type metadata accessor for Report.Evidence);
    uint64_t v37 = sub_25C0E9FB8();
    uint64_t v39 = v38;
    uint64_t v71 = v30;
    uint64_t v73 = v34;
    sub_25C0A7398(v36, type metadata accessor for Report.Authority);
    uint64_t v75 = v37;
    uint64_t v76 = v39;
    long long v83 = xmmword_25C0F1370;
    sub_25C06220C();
    uint64_t v40 = sub_25C0EB698();
    unint64_t v42 = v41;
    uint64_t v57 = v39;
    uint64_t v68 = (char *)v37;
    uint64_t v43 = sub_25C0EB688();
    uint64_t v69 = v44;
    uint64_t v70 = v43;
    uint64_t v74 = v40;
    uint64_t v45 = v60;
    uint64_t v46 = v61;
    v58(v60, v62, v61);
    sub_25C034EC8(v74, v42);
    uint64_t v47 = sub_25C0EB6C8();
    unint64_t v49 = v48;
    (*((void (**)(char *, uint64_t))v66 + 1))(v45, v46);
    swift_allocObject();
    sub_25C0E9FE8();
    sub_25C0E9F68();
    sub_25C0E9F88();
    uint64_t v75 = v70;
    uint64_t v76 = v69;
    uint64_t v71 = v47;
    unint64_t v72 = v49;
    uint64_t v77 = v47;
    unint64_t v78 = v49;
    uint64_t v79 = v74;
    unint64_t v80 = v42;
    unint64_t v81 = 0xD00000000000002ELL;
    unint64_t v82 = 0x800000025C0F6C80;
    sub_25C0A5F90();
    uint64_t v50 = sub_25C0E9FC8();
    unint64_t v52 = v51;
    uint64_t v66 = "com.apple.usersafety.userreport";
    uint64_t v53 = v70;
    uint64_t v54 = v71;
    unint64_t v55 = (unint64_t)v69;
    swift_release();
    sub_25C0A4F84(v50, v52, 0xE800000000000000, v65, v64);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v84, v63);
    uint64_t v56 = v74;
    sub_25C035294(v74, v42);
    sub_25C035294(v50, v52);
    sub_25C035294(v53, v55);
    sub_25C035294(v54, v72);
    sub_25C035294(v56, v42);
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v68;
  }
  return result;
}

uint64_t sub_25C0A42DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(void))(*(void *)a2 + 256))();
  sub_25C0A7330(a1, a7, (uint64_t (*)(void))type metadata accessor for Report.Message);
  uint64_t v15 = type metadata accessor for Report.Message();
  uint64_t v16 = *(void *)(a1 + *(int *)(v15 + 32));
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a2;
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_25C0A4744((void (*)(void))sub_25C0A6C80, (uint64_t)v24, v16);
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t result = sub_25C0A7398(a7, (uint64_t (*)(void))type metadata accessor for Report.Message);
    *a6 = v7;
  }
  else
  {
    uint64_t v19 = sub_25C0A4C04(v17);
    uint64_t v20 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v20);
    void v23[2] = a5;
    uint64_t v21 = sub_25C0A70C0(v19, (void (*)(uint64_t, uint64_t, void))sub_25C0A6CA0, (uint64_t)v23);
    swift_bridgeObjectRelease();
    uint64_t v22 = *(int *)(v15 + 32);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a7 + v22) = v21;
  }
  return result;
}

void sub_25C0A44A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v25[1] = a2;
  v25[0] = a3;
  uint64_t v8 = sub_25C0EA238();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A50);
  uint64_t v16 = a5 + *(int *)(v15 + 48);
  uint64_t v26 = a5;
  sub_25C0A7330(a1, a5, type metadata accessor for Report.Media);
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, a1, v8);
  v17(v12, v25[0], v8);
  uint64_t v18 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Report.Media(0) + 32));
  uint64_t v19 = *v18;
  unint64_t v20 = v18[1];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v21 = v19;
  uint64_t v22 = (void *)v25[2];
  EncryptedCSV.init(from:with:under:prefix:progress:)((uint64_t)v14, (uint64_t)v12, v21, v20, a4, v16);
  if (v22)
  {
    uint64_t v23 = v26;
    sub_25C0A7398(v26, type metadata accessor for Report.Media);
    id v27 = v22;
    id v24 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
    if (swift_dynamicCast())
    {

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v23, 1, 1, v15);
    }
  }
  else
  {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v26, 0, 1, v15);
  }
}

unint64_t sub_25C0A4744(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A60);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A50);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v29 = (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v27 = (uint64_t)&v23 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(type metadata accessor for Report.Media(0) - 8);
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v24 = v10;
  unint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v28 = *(void *)(v15 + 72);
  uint64_t v23 = a3;
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v25 = v9;
  uint64_t v26 = a1;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v17)(v8, 1, v9) == 1)
    {
      sub_25C02FBF0((uint64_t)v8, &qword_26A589A60);
    }
    else
    {
      uint64_t v19 = v27;
      sub_25C0516EC((uint64_t)v8, v27, &qword_26A589A50);
      sub_25C0516EC(v19, v29, &qword_26A589A50);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_25C0A5344(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v18 = sub_25C0A5344(v20 > 1, v21 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v21 + 1;
      sub_25C0516EC(v29, v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, &qword_26A589A50);
      uint64_t v9 = v25;
      a1 = v26;
    }
    v16 += v28;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_25C0A4A58(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v6 = type metadata accessor for Report.Message();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_25C0A57D0(0, v10, 0);
    uint64_t v11 = v21;
    unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = a3 + v17;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      v18(v12, &v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_25C0A57D0(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_25C0A72C8((uint64_t)v9, v11 + v17 + v15 * v13, (uint64_t (*)(void))type metadata accessor for Report.Message);
      v12 += v13;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_25C0A4C04(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A48);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v19[1] = v1;
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_25C0A580C(0, v7, 0);
    uint64_t v8 = v22;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A50);
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80));
    uint64_t v20 = *(void *)(*(void *)(v21 - 8) + 72);
    do
    {
      uint64_t v10 = v9 + *(int *)(v21 + 48);
      uint64_t v11 = (uint64_t)&v6[*(int *)(v3 + 48)];
      uint64_t v12 = *(int *)(v3 + 64);
      sub_25C0A7330(v9, (uint64_t)v6, type metadata accessor for Report.Media);
      sub_25C0A7330(v10, v11, (uint64_t (*)(void))type metadata accessor for EncryptedCSV);
      id v13 = objc_allocWithZone(MEMORY[0x263EFD5E0]);
      unint64_t v14 = (void *)sub_25C0EA1A8();
      id v15 = objc_msgSend(v13, sel_initWithFileURL_, v14);

      *(void *)&v6[v12] = v15;
      uint64_t v22 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      unint64_t v16 = *(void *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_25C0A580C(v16 > 1, v17 + 1, 1);
        uint64_t v8 = v22;
      }
      *(void *)(v8 + 16) = v17 + 1;
      sub_25C0516EC((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v17, &qword_26A589A48);
      v9 += v20;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t JSONEncoder.init(dateEncodingStrategy:)(uint64_t a1)
{
  uint64_t v2 = sub_25C0E9F98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25C0E9FD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_retain();
  sub_25C0E9FA8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

void sub_25C0A4F84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v28[4] = a2;
  v28[1] = a3;
  v28[2] = a4;
  v28[3] = a1;
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  v28[0] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25C0EA358();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA348();
  uint64_t v13 = sub_25C0EA338();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v30[0] = v13;
  v30[1] = v15;
  swift_bridgeObjectRetain();
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  sub_25C0EA1D8();
  swift_bridgeObjectRelease();
  uint64_t v16 = v29;
  sub_25C0EA298();
  if (v16)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a5, v6);
  }
  else
  {
    uint64_t v17 = v28[0];
    uint64_t v18 = v6;
    if (qword_26A592BE0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_25C0EA638();
    __swift_project_value_buffer(v19, (uint64_t)qword_26A592BE8);
    uint64_t v20 = v17;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v17, a5, v18);
    uint64_t v21 = sub_25C0EA618();
    os_log_type_t v22 = sub_25C0EBC58();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = v7;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v29 = v18;
      v30[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v26 = sub_25C0EA208();
      v30[3] = sub_25C079E24(v26, v27, v30);
      sub_25C0EBE58();
      swift_bridgeObjectRelease();
      (*(void (**)(void, uint64_t))(v23 + 8))(v28[0], v29);
      _os_log_impl(&dword_25C01A000, v21, v22, "Saved encrypted metadata to URL: %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v25, -1, -1);
      MEMORY[0x26117E790](v24, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v18);
    }
  }
}

uint64_t sub_25C0A5344(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A68);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589A50) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_25C0EC068();
    __break(1u);
    return result;
  }
  id v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589A50) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25C0A6F64(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unsigned char *sub_25C0A55B4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_25C0A73F8(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_25C0A74BC((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_25C0A7538((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_25C0A562C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  size_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  uint64_t v3 = (void *)sub_25C049E00(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  uint64_t v9 = (v3[3] >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for Report.Media(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (char *)v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  uint64_t v16 = &v13[v15];
  unint64_t v17 = v14 + v15;
  if (v14 < (unint64_t)v16 && (unint64_t)v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = v3[2];
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    v3[2] = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25C0EC0C8();
  __break(1u);
  return result;
}

uint64_t sub_25C0A57D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25C0A582C(a1, a2, a3, (void *)*v3, &qword_26A589A40, (uint64_t (*)(void))type metadata accessor for Report.Message);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25C0A580C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25C0A5A74(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25C0A582C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  int64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25C0EC0C8();
  __break(1u);
  return result;
}

uint64_t sub_25C0A5A74(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A58);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589A48) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  id v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589A48) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_25C0EC0C8();
  __break(1u);
  return result;
}

uint64_t sub_25C0A5CBC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6554726568706963 && a2 == 0xEA00000000007478;
  if (v3 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C75737061636E65 && a2 == 0xEF79654B64657461 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654B63696C627570 && a2 == 0xE900000000000079 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025C0F6CB0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_25C0A5E84()
{
  unint64_t result = qword_26A589A00;
  if (!qword_26A589A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589A00);
  }
  return result;
}

uint64_t type metadata accessor for EncryptedCSV()
{
  uint64_t result = qword_26A592F80;
  if (!qword_26A592F80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25C0A5F24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25C0A42DC(a1, v3[2], v3[3], v3[4], v3[5], a2, a3);
}

uint64_t sub_25C0A5F48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C0A5F90()
{
  unint64_t result = qword_26A589A20;
  if (!qword_26A589A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589A20);
  }
  return result;
}

unint64_t sub_25C0A5FE8()
{
  unint64_t result = qword_26A589A28;
  if (!qword_26A589A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589A28);
  }
  return result;
}

unint64_t sub_25C0A6040()
{
  unint64_t result = qword_26A589A30;
  if (!qword_26A589A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589A30);
  }
  return result;
}

unint64_t sub_25C0A6098()
{
  unint64_t result = qword_26A589A38;
  if (!qword_26A589A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589A38);
  }
  return result;
}

uint64_t destroy for HPKEEnvelope(uint64_t a1)
{
  sub_25C035294(*(void *)a1, *(void *)(a1 + 8));
  sub_25C035294(*(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_25C035294(*(void *)(a1 + 32), *(void *)(a1 + 40));

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for HPKEEnvelope(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_25C034EC8(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_25C034EC8(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_25C034EC8(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  uint64_t v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for HPKEEnvelope(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_25C034EC8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_25C035294(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_25C034EC8(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_25C035294(v10, v11);
  uint64_t v12 = a2[4];
  unint64_t v13 = a2[5];
  sub_25C034EC8(v12, v13);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_25C035294(v14, v15);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for HPKEEnvelope(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_25C035294(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_25C035294(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_25C035294(v8, v9);
  uint64_t v10 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HPKEEnvelope(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HPKEEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HPKEEnvelope()
{
  return &type metadata for HPKEEnvelope;
}

unsigned char *storeEnumTagSinglePayload for HPKEEnvelope.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0A644CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HPKEEnvelope.CodingKeys()
{
  return &type metadata for HPKEEnvelope.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for EncryptedCSV(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25C0EA238();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25C0EB618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for EncryptedCSV(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_25C0EB618();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for EncryptedCSV(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for EncryptedCSV(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for EncryptedCSV(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for EncryptedCSV(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EB618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptedCSV(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0A698C);
}

uint64_t sub_25C0A698C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_25C0EB618();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for EncryptedCSV(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C0A6A98);
}

uint64_t sub_25C0A6A98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25C0EA238();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_25C0EB618();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_25C0A6B9C()
{
  uint64_t result = sub_25C0EA238();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25C0EB618();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *_s9ConstantsVMa()
{
  return &_s9ConstantsVN;
}

void sub_25C0A6C80(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25C0A44A8(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_25C0A6CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void **)(v4 + 16);
  sub_25C0A7330(a1, a4, type metadata accessor for Report.Media);
  uint64_t v9 = type metadata accessor for EncryptedCSV();
  uint64_t v10 = a2 + *(int *)(v9 + 20);
  uint64_t v11 = sub_25C0EB618();
  uint64_t v30 = v11;
  uint64_t v31 = sub_25C0A5F48(&qword_26A589A10, MEMORY[0x263F045C0]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_1, v10, v11);
  __swift_project_boxed_opaque_existential_1(v29, v30);
  sub_25C0EA088();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  uint64_t v13 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v14 = a4 + v13[9];
  sub_25C03DA24(*(void *)v14, *(void *)(v14 + 8));
  *(void *)uint64_t v14 = v27;
  *(void *)(v14 + 8) = v28;
  uint64_t v15 = a4 + v13[11];
  sub_25C02FBF0(v15, &qword_26A589EC0);
  uint64_t v16 = sub_25C0EA238();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  uint64_t v18 = a4 + v13[12];
  *(void *)uint64_t v18 = *(void *)(a2 + *(int *)(v9 + 24));
  *(unsigned char *)(v18 + 8) = 0;
  id v19 = a3;
  MEMORY[0x26117D310]();
  if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25C0EB9F8();
  }
  sub_25C0EBA28();
  sub_25C0EB9E8();
  id v20 = objc_msgSend(v19, sel_UUID);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_25C0EB858();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  unint64_t v25 = (uint64_t *)(a4 + v13[10]);
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v25 = v22;
  v25[1] = v24;
  return result;
}

uint64_t sub_25C0A6F64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589A50) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_25C0EC0C8();
  __break(1u);
  return result;
}

uint64_t sub_25C0A70C0(uint64_t a1, void (*a2)(uint64_t, uint64_t, void), uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v5 = type metadata accessor for Report.Media(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v16 = v3;
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_25C04A214(0, v9, 0);
    uint64_t v10 = v20;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A48);
    uint64_t v12 = a1
        + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80));
    uint64_t v17 = *(void *)(*(void *)(v11 - 8) + 72);
    do
    {
      v18(v12, v12 + *(int *)(v11 + 48), *(void *)(v12 + *(int *)(v11 + 64)));
      uint64_t v20 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_25C04A214(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v20;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_25C0A72C8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, type metadata accessor for Report.Media);
      v12 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_25C0A72C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0A7330(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0A7398(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C0A73F8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_25C0A74BC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25C0EA078();
  swift_allocObject();
  uint64_t result = sub_25C0EA038();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25C0EA278();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_25C0A7538(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25C0EA078();
  swift_allocObject();
  uint64_t result = sub_25C0EA038();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t _s14descr27097BA99O9YouScreenVMa(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A593690);
}

uint64_t sub_25C0A75DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s14descr27097BA99O9YouScreenVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A70);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t (**)())((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C0A79D4(v1, (uint64_t)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr27097BA99O9YouScreenVMa);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  sub_25C0A8460((uint64_t)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, _s14descr27097BA99O9YouScreenVMa);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A78);
  uint64_t v11 = sub_25C0583D0(&qword_26A589A80, &qword_26A589A78);
  sub_25C07B970((uint64_t)sub_25C0A7A54, v9, v10, v11, v7);
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v23);
  v18[1] = v23;
  uint64_t v19 = v24;
  uint64_t v20 = v25;
  char v21 = v26;
  uint64_t v22 = v27;
  uint64_t v12 = sub_25C026FAC();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_25C0583D0(&qword_26A589A88, &qword_26A589A70);
  sub_25C0EB0E8();
  sub_25C05CED4(v12, v14, v16);
  swift_bridgeObjectRelease();
  return sub_25C02FBF0((uint64_t)v7, &qword_26A589A70);
}

uint64_t sub_25C0A7868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s14descr27097BA99O9YouScreenVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_25C0A79D4(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr27097BA99O9YouScreenVMa);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_25C0A8460((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, _s14descr27097BA99O9YouScreenVMa);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589D60);
  sub_25C0583D0(&qword_26A589D68, &qword_26A589D60);
  return sub_25C07C668((uint64_t)sub_25C0B36C0, v8, a2);
}

uint64_t sub_25C0A79D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0A7A3C()
{
  return objectdestroyTm_2(_s14descr27097BA99O9YouScreenVMa);
}

uint64_t sub_25C0A7A54()
{
  return sub_25C0A84F4(_s14descr27097BA99O9YouScreenVMa, (uint64_t (*)(uint64_t))sub_25C0A7868);
}

uint64_t sub_25C0A7A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x270FA5388](v39);
  v37[0] = (uint64_t)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s14descr27097BA99O3RowVMa();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v42 = (uint64_t)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)v37 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v40 = (uint64_t)v37 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v37 - v11;
  v37[1] = a1;
  uint64_t v38 = (uint64_t)v37 - v11;
  sub_25C0EB468();
  uint64_t v13 = a1 + *(int *)(_s14descr27097BA99O9YouScreenVMa(0) + 20);
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v16 = *(void *)(v13 + 16);
  char v17 = *(unsigned char *)(v13 + 24);
  uint64_t v44 = *(void *)v13;
  uint64_t v14 = v44;
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  char v47 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
  sub_25C0EA718();
  uint64_t v19 = v48;
  uint64_t v18 = v49;
  uint64_t v20 = v50;
  char v21 = v51;
  char v22 = sub_25C03CC84();
  uint64_t v23 = (uint64_t)v12;
  uint64_t v24 = v37[0];
  sub_25C07E030(3, 12, v37[0], v19, v18, v20, v21, v22 & 1, v23);
  sub_25C0EB468();
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  char v47 = v17;
  sub_25C0EA718();
  uint64_t v25 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  char v28 = v51;
  char v29 = sub_25C03CC84();
  uint64_t v30 = v40;
  sub_25C07E030(2, 12, v24, v25, v26, v27, v28, v29 & 1, v40);
  uint64_t v31 = v38;
  uint64_t v32 = v41;
  sub_25C0A79D4(v38, v41, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  uint64_t v33 = v42;
  sub_25C0A79D4(v30, v42, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  uint64_t v34 = v43;
  sub_25C0A79D4(v32, v43, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589D70);
  sub_25C0A79D4(v33, v34 + *(int *)(v35 + 48), (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  sub_25C0ACF8C(v30, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  sub_25C0ACF8C(v31, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  sub_25C0ACF8C(v33, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
  return sub_25C0ACF8C(v32, (uint64_t (*)(void))_s14descr27097BA99O3RowVMa);
}

uint64_t _s14descr27097BA99O13SuspectScreenVMa(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A5936A0);
}

uint64_t sub_25C0A7DAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s14descr27097BA99O13SuspectScreenVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A90);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t (**)())((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25C0A79D4(v1, (uint64_t)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr27097BA99O13SuspectScreenVMa);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  sub_25C0A8460((uint64_t)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, _s14descr27097BA99O13SuspectScreenVMa);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589A98);
  uint64_t v11 = sub_25C0583D0(&qword_26A589AA0, &qword_26A589A98);
  sub_25C07B970((uint64_t)sub_25C0A84C8, v9, v10, v11, v7);
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v23);
  v18[1] = v23;
  uint64_t v19 = v24;
  uint64_t v20 = v25;
  char v21 = v26;
  uint64_t v22 = v27;
  uint64_t v12 = sub_25C026FAC();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_25C0583D0(&qword_26A589AA8, &qword_26A589A90);
  sub_25C0EB0E8();
  sub_25C05CED4(v12, v14, v16);
  swift_bridgeObjectRelease();
  return sub_25C02FBF0((uint64_t)v7, &qword_26A589A90);
}

uint64_t sub_25C0A8038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s14descr27097BA99O13SuspectScreenVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_25C0A79D4(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr27097BA99O13SuspectScreenVMa);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_25C0A8460((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, _s14descr27097BA99O13SuspectScreenVMa);
  _s14descr27097BA99O3RowVMa();
  sub_25C0AC2EC(&qword_26A589D58, (void (*)(uint64_t))_s14descr27097BA99O3RowVMa);
  return sub_25C07C668((uint64_t)sub_25C0B367C, v8, a2);
}

uint64_t sub_25C0A81AC()
{
  return objectdestroyTm_2(_s14descr27097BA99O13SuspectScreenVMa);
}

uint64_t objectdestroyTm_2(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v14 = *(void *)(v2 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v1 + v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = type metadata accessor for Report.Evidence(0);
  uint64_t v9 = v5 + *(int *)(v8 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9 + *(int *)(v10 + 40), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(v5 + *(int *)(v8 + 56));
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_25C035294(*v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v1, v4 + v14, v3 | 7);
}

uint64_t sub_25C0A8460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0A84C8()
{
  return sub_25C0A84F4(_s14descr27097BA99O13SuspectScreenVMa, (uint64_t (*)(uint64_t))sub_25C0A8038);
}

uint64_t sub_25C0A84F4(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_25C0A8580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr27097BA99O13SuspectScreenVMa(0);
  uint64_t v8 = *(void *)(a1 + *(int *)(v7 + 24));
  sub_25C0EB468();
  uint64_t v9 = (long long *)(a1 + *(int *)(v7 + 20));
  long long v10 = *v9;
  uint64_t v11 = *((void *)v9 + 2);
  LOBYTE(v9) = *((unsigned char *)v9 + 24);
  long long v18 = v10;
  uint64_t v19 = v11;
  char v20 = (char)v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589170);
  sub_25C0EA718();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  char v15 = v24;
  char v16 = sub_25C03CC84();
  return sub_25C07E030(v8, 1, (uint64_t)v6, v12, v13, v14, v15, v16 & 1, a2);
}

uint64_t sub_25C0A86A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AC0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v5 + 96) = v6;
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a1 + 96);
  *(void *)(v5 + 128) = *(void *)(a1 + 112);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v8;
  sub_25C0A8814(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589D28);
  sub_25C0B35CC();
  sub_25C07C668((uint64_t)sub_25C0B3494, v5, (uint64_t)v4);
  sub_25C0EA7B8();
  sub_25C0583D0(&qword_26A589AC8, &qword_26A589AC0);
  sub_25C0EB108();
  return sub_25C02FBF0((uint64_t)v4, &qword_26A589AC0);
}

uint64_t sub_25C0A880C()
{
  return sub_25C0A86A8(v0 + 16);
}

uint64_t sub_25C0A8814(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C0A88AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = sub_25C0EAC08();
  uint64_t v31 = sub_25C0B46C0();
  uint64_t v32 = v3;
  sub_25C027054();
  uint64_t v4 = sub_25C0EB048();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_25C0EAF68();
  uint64_t v9 = sub_25C0EB028();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  char v14 = v13 & 1;
  sub_25C05CED4(v4, v6, v8);
  swift_bridgeObjectRelease();
  sub_25C0EB2F8();
  uint64_t v15 = sub_25C0EAFE8();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  v19 &= 1u;
  sub_25C05CED4(v9, v11, v14);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_25C0EAB38();
  sub_25C0A8AA0(a1, (uint64_t)&v31);
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  LOBYTE(v11) = v33;
  uint64_t v25 = v34;
  LOBYTE(v31) = v19;
  char v30 = v33;
  sub_25C05CE24(v15, v17, v19);
  swift_bridgeObjectRetain();
  sub_25C05CE24(v23, v24, v11);
  swift_bridgeObjectRetain();
  sub_25C05CED4(v23, v24, v11);
  swift_bridgeObjectRelease();
  sub_25C05CED4(v15, v17, v19);
  uint64_t result = swift_bridgeObjectRelease();
  char v27 = v31;
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = 0x4014000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 72) = 1;
  *(void *)(a2 + 80) = v23;
  *(void *)(a2 + 88) = v24;
  *(unsigned char *)(a2 + 96) = v30;
  *(void *)(a2 + 104) = v25;
  return result;
}

uint64_t sub_25C0A8AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SCLocalizedStringKey.StringInterpolation();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  SCLocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  Swift::String v8 = *(Swift::String *)(a1 + *(int *)(type metadata accessor for Report.Message() + 24));
  SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v8);
  v9._countAndFlagsBits = 10272;
  v9._object = (void *)0xE200000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
  v10._countAndFlagsBits = sub_25C047F58();
  SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 2112041;
  v11._object = (void *)0xE300000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
  v12._countAndFlagsBits = sub_25C047FE0();
  SCLocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  SCLocalizedStringKey.StringInterpolation.appendLiteral(_:)(v13);
  SCLocalizedStringKey.init(stringInterpolation:)((uint64_t)v6, (uint64_t)&v32);
  v27[1] = v32;
  uint64_t v28 = v33;
  uint64_t v29 = v34;
  char v30 = v35;
  uint64_t v31 = v36;
  uint64_t v14 = sub_25C026FAC();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_25C0EAF48();
  uint64_t v19 = sub_25C0EB028();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  sub_25C05CED4(v14, v16, v18);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v21;
  *(unsigned char *)(a2 + 16) = v23 & 1;
  *(void *)(a2 + 24) = v25;
  return result;
}

uint64_t sub_25C0A8C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589D08);
  MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589638);
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  Swift::String v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25C0EAD98();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589D10);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  Swift::String v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EAD88();
  uint64_t v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589D18);
  sub_25C0583D0(&qword_26A589D20, &qword_26A589D18);
  sub_25C0EA778();
  sub_25C0EAD68();
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  sub_25C0583D0(&qword_26A589560, &qword_26A589568);
  sub_25C0EA778();
  Swift::String v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  uint64_t v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  sub_25C0EAC38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_25C0A8FB0@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0A8C68(*(void *)(v1 + 16), a1);
}

uint64_t sub_25C0A8FB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void (**)(char *))(a1 + 104);
  swift_storeEnumTagMultiPayload();
  v5(v4);
  return sub_25C0ACF8C((uint64_t)v4, type metadata accessor for ReportScreen.Control);
}

__n128 sub_25C0A9068@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __n128 result = *a2;
  unint64_t v7 = a2[1].n128_u64[0];
  unint64_t v8 = a2[1].n128_u64[1];
  unsigned __int8 v9 = a2[2].n128_u8[0];
  unint64_t v10 = a2[2].n128_u64[1];
  long long v11 = *a3;
  uint64_t v12 = *((void *)a3 + 2);
  uint64_t v13 = *((void *)a3 + 3);
  char v14 = *((unsigned char *)a3 + 32);
  uint64_t v15 = *((void *)a3 + 5);
  *(void *)a6 = a1;
  *(__n128 *)(a6 + 8) = result;
  *(void *)(a6 + 24) = v7;
  *(void *)(a6 + 32) = v8;
  *(unsigned char *)(a6 + 40) = v9;
  *(void *)(a6 + 48) = v10;
  *(_OWORD *)(a6 + 56) = v11;
  *(void *)(a6 + 72) = v12;
  *(void *)(a6 + 80) = v13;
  *(unsigned char *)(a6 + 88) = v14;
  *(void *)(a6 + 96) = v15;
  *(void *)(a6 + 104) = a4;
  *(void *)(a6 + 112) = a5;
  return result;
}

uint64_t sub_25C0A90B4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AB0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t (**)())&v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v4 = *(_OWORD *)(v0 + 80);
  v20[4] = *(_OWORD *)(v0 + 64);
  _OWORD v20[5] = v4;
  v20[6] = *(_OWORD *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 112);
  long long v5 = *(_OWORD *)(v0 + 16);
  v20[0] = *(_OWORD *)v0;
  v20[1] = v5;
  long long v6 = *(_OWORD *)(v0 + 48);
  v20[2] = *(_OWORD *)(v0 + 32);
  v20[3] = v6;
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v7 + 96) = v8;
  *(_OWORD *)(v7 + 112) = *(_OWORD *)(v0 + 96);
  *(void *)(v7 + 128) = *(void *)(v0 + 112);
  long long v9 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v7 + 32) = v9;
  long long v10 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 64) = v10;
  sub_25C0A8814((uint64_t)v20);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AB8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589AC0);
  uint64_t v13 = sub_25C0583D0(&qword_26A589AC8, &qword_26A589AC0);
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_25C07B970((uint64_t)sub_25C0B36F4, v7, v11, OpaqueTypeConformance2, v3);
  uint64_t v17 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AD0);
  sub_25C0583D0(&qword_26A589AD8, &qword_26A589AB0);
  sub_25C0583D0(&qword_26A589AE0, &qword_26A589AD0);
  sub_25C0EB1E8();
  return sub_25C02FBF0((uint64_t)v3, &qword_26A589AB0);
}

uint64_t sub_25C0A92FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v30 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AE8);
  MEMORY[0x270FA5388](v7);
  long long v9 = (uint64_t (**)())((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AF0);
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  uint64_t v12[3] = a2;
  uint64_t v26 = a3;
  v12[4] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589AF8);
  uint64_t v14 = sub_25C0583D0(&qword_26A589B00, &qword_26A589AF8);
  sub_25C07B970((uint64_t)sub_25C0A9694, (uint64_t)v12, v13, v14, v9);
  SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v39);
  long long v34 = v39;
  uint64_t v35 = v40;
  uint64_t v36 = v41;
  char v37 = v42;
  uint64_t v38 = v43;
  uint64_t v15 = sub_25C026FAC();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = sub_25C0583D0(&qword_26A589B08, &qword_26A589AE8);
  sub_25C0EB0E8();
  sub_25C05CED4(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_25C02FBF0((uint64_t)v9, &qword_26A589AE8);
  uint64_t v31 = a1;
  uint64_t v32 = v27;
  uint64_t v33 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
  *(void *)&long long v39 = v7;
  *((void *)&v39 + 1) = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
  uint64_t v22 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
  *(void *)&long long v39 = v21;
  *((void *)&v39 + 1) = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v28;
  sub_25C0EB1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v23);
}

uint64_t sub_25C0A9694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(v4 + 32) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589CE0);
  sub_25C0B2F84();

  return sub_25C07C668((uint64_t)sub_25C0B2E18, v4, a1);
}

uint64_t sub_25C0A973C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EAD98();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589638);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25C0EAD68();
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  sub_25C0583D0(&qword_26A589560, &qword_26A589568);
  sub_25C0EA778();
  uint64_t v11 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
  MEMORY[0x26117C730](v10, v7, v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25C0A9918()
{
  return sub_25C0A973C(v0[2], v0[3], v0[4]);
}

uint64_t _s14descr27097BA99O9MediaCellVMa(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A5936B0);
}

uint64_t sub_25C0A9944(void (*a1)(char *))
{
  uint64_t v2 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_25C0ACF8C((uint64_t)v4, type metadata accessor for ReportScreen.Control);
}

uint64_t sub_25C0A99F4@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0A92FC(*v1, v1[1], v1[2], a1);
}

uint64_t type metadata accessor for MediaPreviewScreen(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A5936C0);
}

uint64_t sub_25C0A9A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_25C0EAB38();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C48);
  return sub_25C0A9A78(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_25C0A9A70@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0A9A20(*(void *)(v1 + 16), a1);
}

uint64_t sub_25C0A9A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v54 = sub_25C0EABE8();
  uint64_t v3 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_25C0EA948() - 8;
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C50);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C58);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C60);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C68);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v56 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v57 = (uint64_t)&v48 - v19;
  uint64_t v51 = a1;
  sub_25C0AA058(a1, (uint64_t)v8);
  uint64_t v59 = a1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B60);
  uint64_t v21 = sub_25C0AC334(&qword_26A589C70, &qword_26A589C50, (void (*)(void))sub_25C0B2B0C);
  uint64_t v22 = sub_25C0AC334(&qword_26A589B98, &qword_26A589B60, (void (*)(void))sub_25C0794F8);
  uint64_t v23 = v6;
  uint64_t v24 = sub_25C06745C();
  uint64_t v25 = v49;
  sub_25C067460(v24, v26, (uint64_t)sub_25C0B2AEC, (uint64_t)v58, v23, v20, v21, v22, v49);
  sub_25C02FBF0((uint64_t)v8, &qword_26A589C50);
  uint64_t v28 = v53;
  uint64_t v27 = v54;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v53, *MEMORY[0x263F19860], v54);
  uint64_t v29 = v50;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v50[*(int *)(v52 + 28)], v28, v27);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v29 = _Q0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v27);
  uint64_t v35 = (uint64_t)&v14[*(int *)(v12 + 44)];
  sub_25C0A79D4((uint64_t)v29, v35, MEMORY[0x263F19048]);
  *(_WORD *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589CA8) + 36)) = 256;
  sub_25C02FB8C(v25, (uint64_t)v14, &qword_26A589C58);
  sub_25C0ACF8C((uint64_t)v29, MEMORY[0x263F19048]);
  sub_25C02FBF0(v25, &qword_26A589C58);
  LOBYTE(v35) = sub_25C0EAF28();
  uint64_t v36 = v56;
  sub_25C02FB8C((uint64_t)v14, v56, &qword_26A589C60);
  uint64_t v37 = v36 + *(int *)(v16 + 44);
  *(unsigned char *)uint64_t v37 = v35;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  *(unsigned char *)(v37 + 40) = 1;
  sub_25C02FBF0((uint64_t)v14, &qword_26A589C60);
  uint64_t v38 = v57;
  sub_25C0516EC(v36, v57, &qword_26A589C68);
  uint64_t v54 = sub_25C0EAC08();
  sub_25C0AA958((uint64_t)v60);
  uint64_t v39 = v60[0];
  uint64_t v40 = v60[1];
  LOBYTE(v14) = v61;
  uint64_t v42 = v62;
  uint64_t v41 = v63;
  uint64_t v43 = v64;
  LOBYTE(v3) = v65;
  uint64_t v53 = v66;
  sub_25C02FB8C(v38, v36, &qword_26A589C68);
  uint64_t v44 = v55;
  sub_25C02FB8C(v36, v55, &qword_26A589C68);
  uint64_t v45 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589CB0) + 48);
  uint64_t v46 = v53;
  *(void *)uint64_t v45 = v54;
  *(void *)(v45 + 8) = 0;
  *(unsigned char *)(v45 + 16) = 1;
  *(void *)(v45 + 24) = v39;
  *(void *)(v45 + 32) = v40;
  *(unsigned char *)(v45 + 40) = (_BYTE)v14;
  *(void *)(v45 + 48) = v42;
  *(void *)(v45 + 56) = v41;
  *(void *)(v45 + 64) = v43;
  *(unsigned char *)(v45 + 72) = v3;
  *(void *)(v45 + 80) = v46;
  sub_25C05CE24(v39, v40, (char)v14);
  swift_bridgeObjectRetain();
  sub_25C05CE24(v41, v43, v3);
  swift_bridgeObjectRetain();
  sub_25C02FBF0(v57, &qword_26A589C68);
  sub_25C05CED4(v39, v40, (char)v14);
  swift_bridgeObjectRelease();
  sub_25C05CED4(v41, v43, v3);
  swift_bridgeObjectRelease();
  return sub_25C02FBF0(v56, &qword_26A589C68);
}

uint64_t sub_25C0AA058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589CA0);
  uint64_t v30 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589CB8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Video(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C90);
  uint64_t v12 = MEMORY[0x270FA5388](v32);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  type metadata accessor for Report.Media(0);
  char v17 = sub_25C046B10();
  uint64_t v18 = sub_25C0EA238();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  if (v17)
  {
    v19(v11, a1, v18);
    v11[*(int *)(v9 + 20)] = 0;
    uint64_t v20 = *(int *)(v9 + 24);
    uint64_t v35 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B28);
    sub_25C0EB378();
    *(_OWORD *)&v11[v20] = v36;
    sub_25C0EB538();
    sub_25C0EA818();
    sub_25C0A79D4((uint64_t)v11, (uint64_t)v14, type metadata accessor for Video);
    uint64_t v21 = &v14[*(int *)(v32 + 36)];
    long long v22 = v37;
    *(_OWORD *)uint64_t v21 = v36;
    *((_OWORD *)v21 + 1) = v22;
    *((_OWORD *)v21 + 2) = v38;
    sub_25C0ACF8C((uint64_t)v11, type metadata accessor for Video);
    sub_25C0516EC((uint64_t)v14, (uint64_t)v16, &qword_26A589C90);
    sub_25C02FB8C((uint64_t)v16, (uint64_t)v8, &qword_26A589C90);
    swift_storeEnumTagMultiPayload();
    sub_25C0B2BAC();
    sub_25C0583D0(&qword_26A589C98, &qword_26A589CA0);
    sub_25C0EAD28();
    return sub_25C02FBF0((uint64_t)v16, &qword_26A589C90);
  }
  else
  {
    uint64_t v24 = *(void *)(v18 - 8);
    v19(v5, a1, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v5, 0, 1, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589CC0);
    sub_25C0B2C58(&qword_26A589CC8, &qword_26A589CC0, (void (*)(void))sub_25C0B2CD8);
    uint64_t v25 = v29;
    sub_25C0EA678();
    uint64_t v26 = v30;
    uint64_t v27 = v33;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v8, v25, v33);
    swift_storeEnumTagMultiPayload();
    sub_25C0B2BAC();
    sub_25C0583D0(&qword_26A589C98, &qword_26A589CA0);
    sub_25C0EAD28();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  }
}

uint64_t type metadata accessor for Video(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A5936D0);
}

uint64_t sub_25C0AA598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25C0EB338();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25C0EA8D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) == *MEMORY[0x263F18C58])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B4B8], v4);
    uint64_t v12 = sub_25C0EB358();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_25C0EB538();
    sub_25C0EA818();
    v24[0] = v12;
    *(_OWORD *)&v24[1] = xmmword_25C0F19F0;
    void v24[3] = v34;
    *(void *)&long long v25 = v35;
    *((void *)&v25 + 1) = v36;
    v26[0] = v37;
    *(_OWORD *)&v26[1] = v38;
    char v27 = 0;
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589CD8);
    sub_25C0B2CD8();
    sub_25C0EAD28();
    swift_release_n();
    uint64_t result = swift_release();
    long long v14 = v28;
    long long v15 = v29;
    long long v16 = v30;
    long long v17 = v31;
    uint64_t v18 = v32;
    char v19 = v33;
  }
  else
  {
    long long v25 = 0u;
    memset(v26, 0, sizeof(v26));
    memset(v24, 0, sizeof(v24));
    char v27 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589CD8);
    sub_25C0B2CD8();
    sub_25C0EAD28();
    long long v23 = v28;
    long long v22 = v29;
    long long v21 = v30;
    long long v20 = v31;
    uint64_t v18 = v32;
    char v19 = v33;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    long long v17 = v20;
    long long v16 = v21;
    long long v15 = v22;
    long long v14 = v23;
  }
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v15;
  *(_OWORD *)(a2 + 32) = v16;
  *(_OWORD *)(a2 + 48) = v17;
  *(void *)(a2 + 64) = v18;
  *(unsigned char *)(a2 + 72) = v19;
  return result;
}

uint64_t sub_25C0AA958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25C0EA238();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA1B8();
  uint64_t v6 = sub_25C0EA198();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v36 = v6;
  uint64_t v37 = v8;
  sub_25C027054();
  uint64_t v9 = sub_25C0EB048();
  uint64_t v11 = v10;
  char v13 = v12;
  uint64_t v15 = v14;
  type metadata accessor for Report.Media(0);
  sub_25C04835C((uint64_t)&v30);
  uint64_t v16 = v31;
  if (v31)
  {
    uint64_t v17 = v35;
    uint64_t v19 = v32;
    uint64_t v18 = v33;
    uint64_t v20 = v30;
    uint64_t v36 = v30;
    char v21 = v34 & 1;
  }
  else
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v36);
    uint64_t v20 = v36;
    uint64_t v16 = v37;
    uint64_t v19 = v38;
    uint64_t v18 = v39;
    char v21 = v40;
    uint64_t v17 = v41;
  }
  char v22 = v13 & 1;
  uint64_t v30 = v20;
  uint64_t v31 = v16;
  uint64_t v32 = v19;
  uint64_t v33 = v18;
  LOBYTE(v34) = v21;
  uint64_t v35 = v17;
  uint64_t v23 = sub_25C026FAC();
  uint64_t v25 = v24;
  LOBYTE(v36) = v22;
  char v27 = v26 & 1;
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v24;
  *(unsigned char *)(a1 + 48) = v26 & 1;
  *(void *)(a1 + 56) = v28;
  sub_25C05CE24(v9, v11, v22);
  swift_bridgeObjectRetain();
  sub_25C05CE24(v23, v25, v27);
  swift_bridgeObjectRetain();
  sub_25C05CED4(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_25C05CED4(v9, v11, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25C0AAB80(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for MediaPreviewScreen(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v3;
  sub_25C0A79D4(v3, (uint64_t)v6, type metadata accessor for Report.Media);
  uint64_t v7 = (uint64_t *)(v3 + *(int *)(a1 + 20));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = &v6[*(int *)(v4 + 20)];
  *uint64_t v10 = v9;
  v10[1] = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B10);
  sub_25C0583D0(&qword_26A589B18, &qword_26A589B10);
  sub_25C0AC2EC(&qword_26A589B20, (void (*)(uint64_t))type metadata accessor for MediaPreviewScreen);
  return sub_25C0EA888();
}

uint64_t sub_25C0AACF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v2 = sub_25C0EAB18();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B30);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B40);
  MEMORY[0x270FA5388](v36);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B48);
  uint64_t v11 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B50);
  MEMORY[0x270FA5388](v35);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_25C0EABF8();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v16 = (uint64_t)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589B58) + 44)];
  uint64_t v32 = v1;
  uint64_t v33 = v16;
  sub_25C0AB274(v1, (uint64_t)v5);
  uint64_t v44 = v1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B60);
  uint64_t v18 = sub_25C0AC334(&qword_26A589B68, &qword_26A589B30, (void (*)(void))sub_25C0AC21C);
  uint64_t v19 = sub_25C0AC334(&qword_26A589B98, &qword_26A589B60, (void (*)(void))sub_25C0794F8);
  uint64_t v20 = v34;
  uint64_t v21 = sub_25C06745C();
  sub_25C067460(v21, v22, (uint64_t)sub_25C0AC1FC, (uint64_t)v43, v20, v17, v18, v19, (uint64_t)v8);
  sub_25C02FBF0((uint64_t)v5, &qword_26A589B30);
  sub_25C0516EC((uint64_t)v8, v33, &qword_26A589B38);
  uint64_t v23 = v32;
  uint64_t v45 = sub_25C0EA198();
  uint64_t v46 = v24;
  char v26 = v38;
  uint64_t v25 = v39;
  uint64_t v27 = v40;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x263F19698], v40);
  sub_25C0583D0(&qword_26A589BA0, &qword_26A589B40);
  sub_25C027054();
  sub_25C0EB138();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  swift_bridgeObjectRelease();
  sub_25C02FBF0((uint64_t)v10, &qword_26A589B40);
  LOBYTE(v10) = sub_25C0EAED8();
  uint64_t v28 = v37;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v37);
  v15[*(int *)(v35 + 36)] = (char)v10;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  uint64_t v42 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589620);
  sub_25C0AC3A8();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589638);
  uint64_t v30 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
  uint64_t v45 = v29;
  uint64_t v46 = v30;
  swift_getOpaqueTypeConformance2();
  sub_25C0EB1E8();
  return sub_25C02FBF0((uint64_t)v15, &qword_26A589B50);
}

uint64_t sub_25C0AB274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B90);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C30);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Video(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Report.Media(0);
  char v15 = sub_25C046B10();
  uint64_t v16 = sub_25C0EA238();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  if (v15)
  {
    v17(v14, a1, v16);
    v14[*(int *)(v12 + 20)] = 1;
    uint64_t v18 = *(int *)(v12 + 24);
    uint64_t v26 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589B28);
    sub_25C0EB378();
    *(_OWORD *)&v14[v18] = v27;
    sub_25C0A79D4((uint64_t)v14, (uint64_t)v11, type metadata accessor for Video);
    swift_storeEnumTagMultiPayload();
    sub_25C0AC2EC(&qword_26A589B80, (void (*)(uint64_t))type metadata accessor for Video);
    sub_25C0583D0(&qword_26A589B88, &qword_26A589B90);
    sub_25C0EAD28();
    return sub_25C0ACF8C((uint64_t)v14, type metadata accessor for Video);
  }
  else
  {
    uint64_t v20 = *(void *)(v16 - 8);
    v17(v5, a1, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v5, 0, 1, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C38);
    sub_25C0B2C58(&qword_26A589C40, &qword_26A589C38, (void (*)(void))sub_25C088BE0);
    sub_25C0EA678();
    uint64_t v22 = v23;
    uint64_t v21 = v24;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v11, v8, v24);
    swift_storeEnumTagMultiPayload();
    sub_25C0AC2EC(&qword_26A589B80, (void (*)(uint64_t))type metadata accessor for Video);
    sub_25C0583D0(&qword_26A589B88, &qword_26A589B90);
    sub_25C0EAD28();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  }
}

uint64_t sub_25C0AB6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25C0EB338();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25C0EA8D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) == *MEMORY[0x263F18C58])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B4B8], v4);
    uint64_t v12 = sub_25C0EB358();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v18 = v12;
    uint64_t v19 = 0;
    __int16 v20 = 1;
    char v21 = 0;
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589360);
    sub_25C088BE0();
    sub_25C0EAD28();
    swift_release_n();
    uint64_t result = swift_release();
    long long v14 = v22;
    __int16 v15 = v23;
    char v16 = v24;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    __int16 v20 = 0;
    char v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589360);
    sub_25C088BE0();
    sub_25C0EAD28();
    long long v17 = v22;
    __int16 v15 = v23;
    char v16 = v24;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    long long v14 = v17;
  }
  *(_OWORD *)a2 = v14;
  *(_WORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 18) = v16;
  return result;
}

uint64_t sub_25C0AB9F4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  int v32 = a2;
  uint64_t v33 = a3;
  uint64_t v4 = sub_25C0EA608();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888D8);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  long long v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v31 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = type metadata accessor for Report.Media(0);
  sub_25C02FB8C(a1 + *(int *)(v20 + 24), (uint64_t)v19, &qword_26A5888C8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v17, *MEMORY[0x263F17628], v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_25C02FB8C((uint64_t)v19, (uint64_t)v10, &qword_26A5888C8);
  sub_25C02FB8C((uint64_t)v17, v21, &qword_26A5888C8);
  long long v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) != 1)
  {
    sub_25C02FB8C((uint64_t)v10, (uint64_t)v14, &qword_26A5888C8);
    if (v22(v21, 1, v4) != 1)
    {
      char v24 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v21, v4);
      sub_25C0AC2EC(&qword_26A588918, MEMORY[0x263F17630]);
      char v25 = sub_25C0EB7A8();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v24, v4);
      sub_25C02FBF0((uint64_t)v17, &qword_26A5888C8);
      sub_25C02FBF0((uint64_t)v19, &qword_26A5888C8);
      v26(v14, v4);
      uint64_t result = sub_25C02FBF0((uint64_t)v10, &qword_26A5888C8);
      if (v25) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v29 = 0;
      uint64_t v28 = 7;
      goto LABEL_10;
    }
    sub_25C02FBF0((uint64_t)v17, &qword_26A5888C8);
    sub_25C02FBF0((uint64_t)v19, &qword_26A5888C8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    uint64_t result = sub_25C02FBF0((uint64_t)v10, &qword_26A5888D8);
    goto LABEL_9;
  }
  sub_25C02FBF0((uint64_t)v17, &qword_26A5888C8);
  sub_25C02FBF0((uint64_t)v19, &qword_26A5888C8);
  if (v22(v21, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_25C02FBF0((uint64_t)v10, &qword_26A5888C8);
LABEL_8:
  v34[0] = v32;
  uint64_t v27 = sub_25C044ECC();
  uint64_t result = *(_OWORD *)&SensitiveContentBlurView.init(mode:options:)((SensitiveContentAnalysisUI::SensitiveContentBlurView::Mode)v34, (__C::SCUISensitiveContentOverlayOptions)v27);
  uint64_t v28 = v34[1];
  uint64_t v29 = v35;
LABEL_10:
  uint64_t v30 = v33;
  *uint64_t v33 = v28;
  v30[1] = v29;
  return result;
}

uint64_t sub_25C0ABE18(uint64_t a1)
{
  uint64_t v2 = sub_25C0EAD98();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589638);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25C0EAD68();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  sub_25C0583D0(&qword_26A589560, &qword_26A589568);
  sub_25C0EA778();
  uint64_t v7 = sub_25C0583D0(&qword_26A589640, &qword_26A589638);
  MEMORY[0x26117C730](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25C0ABFE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaPreviewScreen(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_25C0A79D4(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MediaPreviewScreen);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_25C0A8460((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for MediaPreviewScreen);
  return sub_25C0EB3C8();
}

uint64_t sub_25C0AC134(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for MediaPreviewScreen(0) + 20));
  swift_storeEnumTagMultiPayload();
  v5(v4);
  return sub_25C0ACF8C((uint64_t)v4, type metadata accessor for ReportScreen.Control);
}

uint64_t sub_25C0AC1FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_25C0AB9F4(*(void *)(v1 + 16), 5, a1);
}

unint64_t sub_25C0AC21C()
{
  unint64_t result = qword_26A589B70;
  if (!qword_26A589B70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589B78);
    sub_25C0AC2EC(&qword_26A589B80, (void (*)(uint64_t))type metadata accessor for Video);
    sub_25C0583D0(&qword_26A589B88, &qword_26A589B90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589B70);
  }
  return result;
}

uint64_t sub_25C0AC2EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0AC334(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0AC3A0()
{
  return sub_25C0ABE18(*(void *)(v0 + 16));
}

unint64_t sub_25C0AC3A8()
{
  unint64_t result = qword_26A589BA8;
  if (!qword_26A589BA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589B50);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589B40);
    sub_25C0583D0(&qword_26A589BA0, &qword_26A589B40);
    sub_25C027054();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A589BA8);
  }
  return result;
}

uint64_t sub_25C0AC498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25C0EA868();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_25C0EBB08();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Video(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v25 = sub_25C0EABF8();
  sub_25C0AC774(v2, (uint64_t)v27);
  uint64_t v14 = v27[0];
  uint64_t v24 = v27[1];
  int v23 = v28;
  sub_25C0A79D4(v2, (uint64_t)&v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for Video);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  sub_25C0A8460((uint64_t)&v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15, type metadata accessor for Video);
  sub_25C0EBAE8();
  long long v17 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v18 = v26;
  (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 16))(v17, v10, v26);
  *uint64_t v7 = &unk_26A589BB8;
  v7[1] = v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589BC0);
  sub_25C0A79D4((uint64_t)v7, a1 + *(int *)(v19 + 36), MEMORY[0x263F189F8]);
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v20 = v24;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v20;
  *(_WORD *)(a1 + 40) = v23;
  swift_retain();
  sub_25C0ACF8C((uint64_t)v7, MEMORY[0x263F189F8]);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v18);
  return swift_release();
}

uint64_t sub_25C0AC774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25C0EB338();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Video(0);
  long long v13 = *(_OWORD *)(a1 + *(int *)(v8 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C28);
  uint64_t result = sub_25C0EB388();
  __int16 v10 = (__int16)v14;
  if (v14)
  {
    id v11 = v14;
    sub_25C0EB318();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B4B8], v4);
    uint64_t v12 = sub_25C0EB358();
    swift_release();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (*(unsigned char *)(a1 + *(int *)(v8 + 20))) {
      __int16 v10 = 1;
    }
    else {
      __int16 v10 = 257;
    }
  }
  else
  {
    uint64_t v12 = 0;
  }
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = v10;
  return result;
}

uint64_t sub_25C0AC918(uint64_t a1)
{
  v1[5] = a1;
  sub_25C0EBAD8();
  void v1[6] = sub_25C0EBAC8();
  uint64_t v3 = sub_25C0EBA78();
  v1[7] = v3;
  unsigned char v1[8] = v2;
  return MEMORY[0x270FA2498](sub_25C0AC9B0, v3, v2);
}

uint64_t sub_25C0AC9B0()
{
  id v1 = objc_allocWithZone(MEMORY[0x263EFA8D0]);
  uint64_t v2 = (void *)sub_25C0EA1A8();
  id v3 = objc_msgSend(v1, sel_initWithURL_options_, v2, 0);
  v0[9] = v3;

  v0[10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA4B0]), sel_initWithAsset_, v3);
  uint64_t v4 = *MEMORY[0x263F010E0];
  uint64_t v5 = *(void *)(MEMORY[0x263F010E0] + 8);
  uint64_t v6 = *(void *)(MEMORY[0x263F010E0] + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[11] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25C0ACAC8;
  return MEMORY[0x270F9C8D0](v4, v5, v6);
}

uint64_t sub_25C0ACAC8(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v5 = v4[7];
    uint64_t v6 = v4[8];
    uint64_t v7 = sub_25C0ACCE8;
  }
  else
  {
    v4[12] = a1;
    uint64_t v5 = v4[7];
    uint64_t v6 = v4[8];
    uint64_t v7 = sub_25C0ACBF4;
  }
  return MEMORY[0x270FA2498](v7, v5, v6);
}

uint64_t sub_25C0ACBF4()
{
  id v1 = (void *)v0[12];
  swift_release();
  uint64_t v2 = (void *)v0[9];
  id v3 = (void *)v0[10];
  uint64_t v4 = v0[5];
  uint64_t v5 = v4 + *(int *)(type metadata accessor for Video(0) + 24);
  uint64_t v7 = *(void **)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  v0[2] = *(void *)v5;
  v0[3] = v6;
  v0[4] = v1;
  id v8 = v1;
  id v9 = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C28);
  sub_25C0EB398();

  swift_release();
  __int16 v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_25C0ACCE8()
{
  swift_release();
  uint64_t v2 = (void *)v0[9];
  id v1 = (void *)v0[10];
  uint64_t v3 = v0[5];
  uint64_t v4 = v3 + *(int *)(type metadata accessor for Video(0) + 24);
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  v0[2] = *(void *)v4;
  v0[3] = v6;
  v0[4] = 0;
  id v7 = v5;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589C28);
  sub_25C0EB398();

  swift_release();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25C0ACDC4()
{
  id v1 = (int *)(type metadata accessor for Video(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_25C0ACEC0()
{
  uint64_t v2 = *(void *)(type metadata accessor for Video(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25C03C050;
  return sub_25C0AC918(v3);
}

uint64_t sub_25C0ACF8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C0ACFEC(uint64_t a1)
{
  uint64_t result = sub_25C0AC2EC(&qword_26A589BC8, (void (*)(uint64_t))_s14descr27097BA99O9YouScreenVMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25C0AD044()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0AD060(uint64_t a1)
{
  uint64_t result = sub_25C0AC2EC(&qword_26A589BD0, (void (*)(uint64_t))_s14descr27097BA99O13SuspectScreenVMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25C0AD0B8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25C0AD0D4(uint64_t a1)
{
  unint64_t result = sub_25C0AD0FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25C0AD0FC()
{
  unint64_t result = qword_26A589BD8;
  if (!qword_26A589BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589BD8);
  }
  return result;
}

uint64_t sub_25C0AD150()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25C0AD16C(uint64_t a1)
{
  unint64_t result = sub_25C0AD194();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25C0AD194()
{
  unint64_t result = qword_26A589BE0;
  if (!qword_26A589BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589BE0);
  }
  return result;
}

uint64_t sub_25C0AD1E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0AD204()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0AD220(uint64_t a1)
{
  uint64_t result = sub_25C0AC2EC(&qword_26A589B20, (void (*)(uint64_t))type metadata accessor for MediaPreviewScreen);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25C0AD278()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25C0AD298()
{
  unint64_t result = qword_26A589BE8;
  if (!qword_26A589BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589BE8);
  }
  return result;
}

uint64_t sub_25C0AD2EC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_25C0AD30C(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    long long v13 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
    id v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25C0EA328();
    uint64_t v11 = *(void *)(v10 - 8);
    char v61 = a2;
    uint64_t v62 = a1;
    uint64_t v65 = v10;
    uint64_t v66 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    id v14 = (int *)type metadata accessor for Report.Evidence(0);
    uint64_t v15 = v14[6];
    uint64_t v16 = &v8[v15];
    long long v17 = &v9[v15];
    uint64_t v18 = *(void *)&v9[v15 + 8];
    *(void *)uint64_t v16 = *(void *)&v9[v15];
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)&v9[v15 + 24];
    *((void *)v16 + 2) = *(void *)&v9[v15 + 16];
    *((void *)v16 + 3) = v19;
    uint64_t v20 = *(void *)&v9[v15 + 40];
    *((void *)v16 + 4) = *(void *)&v9[v15 + 32];
    *((void *)v16 + 5) = v20;
    uint64_t v21 = *(void *)&v9[v15 + 56];
    *((void *)v16 + 6) = *(void *)&v9[v15 + 48];
    *((void *)v16 + 7) = v21;
    uint64_t v22 = *(void *)&v9[v15 + 72];
    *((void *)v16 + 8) = *(void *)&v9[v15 + 64];
    *((void *)v16 + 9) = v22;
    uint64_t v23 = *(void *)&v9[v15 + 88];
    *((void *)v16 + 10) = *(void *)&v9[v15 + 80];
    *((void *)v16 + 11) = v23;
    uint64_t v24 = *(void *)&v9[v15 + 104];
    *((void *)v16 + 12) = *(void *)&v9[v15 + 96];
    *((void *)v16 + 13) = v24;
    uint64_t v25 = *(void *)&v9[v15 + 120];
    *((void *)v16 + 14) = *(void *)&v9[v15 + 112];
    *((void *)v16 + 15) = v25;
    uint64_t v26 = *(void *)&v9[v15 + 136];
    *((void *)v16 + 16) = *(void *)&v9[v15 + 128];
    *((void *)v16 + 17) = v26;
    uint64_t v27 = *(void *)&v9[v15 + 152];
    *((void *)v16 + 18) = *(void *)&v9[v15 + 144];
    *((void *)v16 + 19) = v27;
    uint64_t v28 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
    uint64_t v63 = &v17[v28];
    uint64_t v64 = &v16[v28];
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v64, v63, v65);
    *(void *)&v8[v14[7]] = *(void *)&v9[v14[7]];
    *(void *)&v8[v14[8]] = *(void *)&v9[v14[8]];
    uint64_t v30 = v14[9];
    uint64_t v31 = &v8[v30];
    int v32 = &v9[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    v8[v14[10]] = v9[v14[10]];
    v8[v14[11]] = v9[v14[11]];
    uint64_t v34 = v14[12];
    uint64_t v35 = &v8[v34];
    uint64_t v36 = &v9[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    *(void *)&v8[v14[13]] = *(void *)&v9[v14[13]];
    uint64_t v38 = v14[14];
    uint64_t v39 = &v8[v38];
    uint64_t v40 = (uint64_t *)&v9[v38];
    unint64_t v41 = *(void *)&v9[v38 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    }
    else
    {
      uint64_t v42 = *v40;
      sub_25C034EC8(*v40, v41);
      *(void *)uint64_t v39 = v42;
      *((void *)v39 + 1) = v41;
    }
    long long v13 = v62;
    uint64_t v43 = v14[15];
    uint64_t v44 = &v8[v43];
    uint64_t v45 = &v9[v43];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    *(void *)&v8[v14[16]] = *(void *)&v9[v14[16]];
    uint64_t v47 = v14[17];
    uint64_t v48 = &v8[v47];
    uint64_t v49 = &v9[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = v14[18];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = &v9[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    *(void *)&v8[v14[19]] = *(void *)&v9[v14[19]];
    uint64_t v55 = *(int *)(a3 + 20);
    uint64_t v56 = (char *)v62 + v55;
    uint64_t v57 = (char *)v61 + v55;
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    *((void *)v56 + 2) = *((void *)v57 + 2);
    v56[24] = v57[24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

void *sub_25C0AD718(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_retain();
  swift_retain();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v59 = a2;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25C0EA328();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v60 = a1;
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v13 = v12[6];
  id v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = *(void *)&v8[v13 + 8];
  *(void *)id v14 = *(void *)&v8[v13];
  *((void *)v14 + 1) = v16;
  uint64_t v17 = *(void *)&v8[v13 + 24];
  *((void *)v14 + 2) = *(void *)&v8[v13 + 16];
  *((void *)v14 + 3) = v17;
  uint64_t v18 = *(void *)&v8[v13 + 40];
  *((void *)v14 + 4) = *(void *)&v8[v13 + 32];
  *((void *)v14 + 5) = v18;
  uint64_t v19 = *(void *)&v8[v13 + 56];
  *((void *)v14 + 6) = *(void *)&v8[v13 + 48];
  *((void *)v14 + 7) = v19;
  uint64_t v20 = *(void *)&v8[v13 + 72];
  *((void *)v14 + 8) = *(void *)&v8[v13 + 64];
  *((void *)v14 + 9) = v20;
  uint64_t v21 = *(void *)&v8[v13 + 88];
  *((void *)v14 + 10) = *(void *)&v8[v13 + 80];
  *((void *)v14 + 11) = v21;
  uint64_t v22 = *(void *)&v8[v13 + 104];
  *((void *)v14 + 12) = *(void *)&v8[v13 + 96];
  *((void *)v14 + 13) = v22;
  uint64_t v23 = *(void *)&v8[v13 + 120];
  *((void *)v14 + 14) = *(void *)&v8[v13 + 112];
  *((void *)v14 + 15) = v23;
  uint64_t v24 = *(void *)&v8[v13 + 136];
  *((void *)v14 + 16) = *(void *)&v8[v13 + 128];
  *((void *)v14 + 17) = v24;
  uint64_t v25 = *(void *)&v8[v13 + 152];
  *((void *)v14 + 18) = *(void *)&v8[v13 + 144];
  *((void *)v14 + 19) = v25;
  uint64_t v26 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
  char v61 = &v15[v26];
  uint64_t v62 = &v14[v26];
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v62, v61, v63);
  *(void *)&v7[v12[7]] = *(void *)&v8[v12[7]];
  *(void *)&v7[v12[8]] = *(void *)&v8[v12[8]];
  uint64_t v28 = v12[9];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  v7[v12[10]] = v8[v12[10]];
  v7[v12[11]] = v8[v12[11]];
  uint64_t v32 = v12[12];
  uint64_t v33 = &v7[v32];
  uint64_t v34 = &v8[v32];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  *(void *)&v7[v12[13]] = *(void *)&v8[v12[13]];
  uint64_t v36 = v12[14];
  uint64_t v37 = &v7[v36];
  uint64_t v38 = (uint64_t *)&v8[v36];
  unint64_t v39 = *(void *)&v8[v36 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  }
  else
  {
    uint64_t v40 = *v38;
    sub_25C034EC8(*v38, v39);
    *(void *)uint64_t v37 = v40;
    *((void *)v37 + 1) = v39;
  }
  uint64_t v41 = v12[15];
  uint64_t v42 = &v7[v41];
  uint64_t v43 = &v8[v41];
  uint64_t v44 = *((void *)v43 + 1);
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = v44;
  *(void *)&v7[v12[16]] = *(void *)&v8[v12[16]];
  uint64_t v45 = v12[17];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  uint64_t v48 = *((void *)v47 + 1);
  *(void *)uint64_t v46 = *(void *)v47;
  *((void *)v46 + 1) = v48;
  uint64_t v49 = v12[18];
  uint64_t v50 = &v7[v49];
  uint64_t v51 = &v8[v49];
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = v52;
  *(void *)&v7[v12[19]] = *(void *)&v8[v12[19]];
  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = (char *)v60 + v53;
  uint64_t v55 = (char *)v59 + v53;
  uint64_t v56 = *((void *)v55 + 1);
  *(void *)uint64_t v54 = *(void *)v55;
  *((void *)v54 + 1) = v56;
  *((void *)v54 + 2) = *((void *)v55 + 2);
  v54[24] = v55[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v60;
}

void *sub_25C0ADAD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_25C0EA328();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
LABEL_7:
  id v14 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v15 = v14[6];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  *(void *)uint64_t v16 = *(void *)&v7[v15];
  *((void *)v16 + 1) = *(void *)&v7[v15 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = *((void *)v17 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 4) = *((void *)v17 + 4);
  *((void *)v16 + 5) = *((void *)v17 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 6) = *((void *)v17 + 6);
  *((void *)v16 + 7) = *((void *)v17 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 8) = *((void *)v17 + 8);
  *((void *)v16 + 9) = *((void *)v17 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 10) = *((void *)v17 + 10);
  *((void *)v16 + 11) = *((void *)v17 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 12) = *((void *)v17 + 12);
  *((void *)v16 + 13) = *((void *)v17 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 14) = *((void *)v17 + 14);
  *((void *)v16 + 15) = *((void *)v17 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 16) = *((void *)v17 + 16);
  *((void *)v16 + 17) = *((void *)v17 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 18) = *((void *)v17 + 18);
  *((void *)v16 + 19) = *((void *)v17 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(&v16[*(int *)(v18 + 40)], &v17[*(int *)(v18 + 40)], v8);
  *(void *)&v6[v14[7]] = *(void *)&v7[v14[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[8]] = *(void *)&v7[v14[8]];
  uint64_t v19 = v14[9];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v14[10]] = v7[v14[10]];
  v6[v14[11]] = v7[v14[11]];
  uint64_t v22 = v14[12];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[13]] = *(void *)&v7[v14[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v14[14];
  uint64_t v26 = (uint64_t *)&v6[v25];
  uint64_t v27 = (uint64_t *)&v7[v25];
  unint64_t v28 = *(void *)&v7[v25 + 8];
  if (*(void *)&v6[v25 + 8] >> 60 != 15)
  {
    if (v28 >> 60 != 15)
    {
      uint64_t v30 = *v27;
      sub_25C034EC8(*v27, v28);
      uint64_t v31 = *v26;
      unint64_t v32 = v26[1];
      *uint64_t v26 = v30;
      v26[1] = v28;
      sub_25C035294(v31, v32);
      goto LABEL_14;
    }
    sub_25C052A18((uint64_t)v26);
    goto LABEL_12;
  }
  if (v28 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_14;
  }
  uint64_t v29 = *v27;
  sub_25C034EC8(*v27, v28);
  *uint64_t v26 = v29;
  v26[1] = v28;
LABEL_14:
  uint64_t v33 = v14[15];
  uint64_t v34 = &v6[v33];
  uint64_t v35 = &v7[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[16]] = *(void *)&v7[v14[16]];
  uint64_t v36 = v14[17];
  uint64_t v37 = &v6[v36];
  uint64_t v38 = &v7[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = v14[18];
  uint64_t v40 = &v6[v39];
  uint64_t v41 = &v7[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[19]] = *(void *)&v7[v14[19]];
  uint64_t v42 = *(int *)(a3 + 20);
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  swift_retain();
  swift_release();
  *((void *)v43 + 1) = *((void *)v44 + 1);
  swift_retain();
  swift_release();
  uint64_t v45 = *((void *)v44 + 2);
  v43[24] = v44[24];
  *((void *)v43 + 2) = v45;
  return a1;
}

void *sub_25C0AE040(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25C0EA328();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  long long v17 = *(_OWORD *)&v9[v14 + 16];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)&v9[v14];
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = *(_OWORD *)&v9[v14 + 48];
  *((_OWORD *)v15 + 2) = *(_OWORD *)&v9[v14 + 32];
  *((_OWORD *)v15 + 3) = v18;
  long long v19 = *(_OWORD *)&v9[v14 + 112];
  *((_OWORD *)v15 + 6) = *(_OWORD *)&v9[v14 + 96];
  *((_OWORD *)v15 + 7) = v19;
  long long v20 = *(_OWORD *)&v9[v14 + 144];
  *((_OWORD *)v15 + 8) = *(_OWORD *)&v9[v14 + 128];
  *((_OWORD *)v15 + 9) = v20;
  long long v21 = *(_OWORD *)&v9[v14 + 80];
  *((_OWORD *)v15 + 4) = *(_OWORD *)&v9[v14 + 64];
  *((_OWORD *)v15 + 5) = v21;
  uint64_t v22 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[*(int *)(v22 + 40)], &v16[*(int *)(v22 + 40)], v10);
  *(void *)&v8[v13[7]] = *(void *)&v9[v13[7]];
  *(void *)&v8[v13[8]] = *(void *)&v9[v13[8]];
  *(_OWORD *)&v8[v13[9]] = *(_OWORD *)&v9[v13[9]];
  v8[v13[10]] = v9[v13[10]];
  v8[v13[11]] = v9[v13[11]];
  *(_OWORD *)&v8[v13[12]] = *(_OWORD *)&v9[v13[12]];
  *(void *)&v8[v13[13]] = *(void *)&v9[v13[13]];
  *(_OWORD *)&v8[v13[14]] = *(_OWORD *)&v9[v13[14]];
  *(_OWORD *)&v8[v13[15]] = *(_OWORD *)&v9[v13[15]];
  *(void *)&v8[v13[16]] = *(void *)&v9[v13[16]];
  *(_OWORD *)&v8[v13[17]] = *(_OWORD *)&v9[v13[17]];
  *(_OWORD *)&v8[v13[18]] = *(_OWORD *)&v9[v13[18]];
  *(void *)&v8[v13[19]] = *(void *)&v9[v13[19]];
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (_OWORD *)((char *)a1 + v23);
  uint64_t v25 = (_OWORD *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v25 + 9);
  return a1;
}

void *sub_25C0AE29C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25C0EA328();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v16 = v15[6];
  long long v17 = &v7[v16];
  long long v18 = &v8[v16];
  uint64_t v19 = *(void *)&v8[v16 + 8];
  *(void *)long long v17 = *(void *)&v8[v16];
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v18 + 5);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v18 + 7);
  *((void *)v17 + 6) = *((void *)v18 + 6);
  *((void *)v17 + 7) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v18 + 9);
  *((void *)v17 + 8) = *((void *)v18 + 8);
  *((void *)v17 + 9) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v18 + 11);
  *((void *)v17 + 10) = *((void *)v18 + 10);
  *((void *)v17 + 11) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v18 + 13);
  *((void *)v17 + 12) = *((void *)v18 + 12);
  *((void *)v17 + 13) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v18 + 15);
  *((void *)v17 + 14) = *((void *)v18 + 14);
  *((void *)v17 + 15) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v18 + 17);
  *((void *)v17 + 16) = *((void *)v18 + 16);
  *((void *)v17 + 17) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v18 + 19);
  *((void *)v17 + 18) = *((void *)v18 + 18);
  *((void *)v17 + 19) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&v17[*(int *)(v29 + 40)], &v18[*(int *)(v29 + 40)], v9);
  *(void *)&v7[v15[7]] = *(void *)&v8[v15[7]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[8]] = *(void *)&v8[v15[8]];
  uint64_t v30 = v15[9];
  uint64_t v31 = &v7[v30];
  unint64_t v32 = &v8[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v7[v15[10]] = v8[v15[10]];
  v7[v15[11]] = v8[v15[11]];
  uint64_t v35 = v15[12];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  uint64_t v39 = *(void *)v37;
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[13]] = *(void *)&v8[v15[13]];
  swift_bridgeObjectRelease();
  uint64_t v40 = v15[14];
  uint64_t v41 = (uint64_t *)&v7[v40];
  uint64_t v42 = (uint64_t *)&v8[v40];
  unint64_t v43 = *(void *)&v7[v40 + 8];
  if (v43 >> 60 != 15)
  {
    unint64_t v44 = v42[1];
    if (v44 >> 60 != 15)
    {
      uint64_t v45 = *v41;
      *uint64_t v41 = *v42;
      v41[1] = v44;
      sub_25C035294(v45, v43);
      goto LABEL_12;
    }
    sub_25C052A18((uint64_t)v41);
  }
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
LABEL_12:
  uint64_t v46 = v15[15];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  uint64_t v50 = *(void *)v48;
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)uint64_t v47 = v50;
  *((void *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[16]] = *(void *)&v8[v15[16]];
  uint64_t v51 = v15[17];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  uint64_t v55 = *(void *)v53;
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = v55;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v15[18];
  uint64_t v57 = &v7[v56];
  uint64_t v58 = &v8[v56];
  uint64_t v60 = *(void *)v58;
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = v60;
  *((void *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[19]] = *(void *)&v8[v15[19]];
  uint64_t v61 = *(int *)(a3 + 20);
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)((char *)a1 + v61) = *(void *)v63;
  swift_release();
  *((void *)v62 + 1) = *((void *)v63 + 1);
  swift_release();
  *((void *)v62 + 2) = *((void *)v63 + 2);
  v62[24] = v63[24];
  return a1;
}

uint64_t sub_25C0AE6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_25C0AE6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_25C0AE6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25C0B1B18(a1, a2, a3, (uint64_t (*)(uint64_t))sub_25C0AE6FC);
}

void sub_25C0AE6FC()
{
  if (!qword_26A589310)
  {
    type metadata accessor for Report.Evidence(255);
    unint64_t v0 = sub_25C0EB498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A589310);
    }
  }
}

void *sub_25C0AE754(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v13 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25C0EA328();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v62 = a2;
    uint64_t v63 = a1;
    uint64_t v66 = v10;
    uint64_t v67 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = (int *)type metadata accessor for Report.Evidence(0);
    uint64_t v15 = v14[6];
    uint64_t v16 = &v8[v15];
    long long v17 = &v9[v15];
    uint64_t v18 = *(void *)&v9[v15 + 8];
    *(void *)uint64_t v16 = *(void *)&v9[v15];
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)&v9[v15 + 24];
    *((void *)v16 + 2) = *(void *)&v9[v15 + 16];
    *((void *)v16 + 3) = v19;
    uint64_t v20 = *(void *)&v9[v15 + 40];
    *((void *)v16 + 4) = *(void *)&v9[v15 + 32];
    *((void *)v16 + 5) = v20;
    uint64_t v21 = *(void *)&v9[v15 + 56];
    *((void *)v16 + 6) = *(void *)&v9[v15 + 48];
    *((void *)v16 + 7) = v21;
    uint64_t v22 = *(void *)&v9[v15 + 72];
    *((void *)v16 + 8) = *(void *)&v9[v15 + 64];
    *((void *)v16 + 9) = v22;
    uint64_t v23 = *(void *)&v9[v15 + 88];
    *((void *)v16 + 10) = *(void *)&v9[v15 + 80];
    *((void *)v16 + 11) = v23;
    uint64_t v24 = *(void *)&v9[v15 + 104];
    *((void *)v16 + 12) = *(void *)&v9[v15 + 96];
    *((void *)v16 + 13) = v24;
    uint64_t v25 = *(void *)&v9[v15 + 120];
    *((void *)v16 + 14) = *(void *)&v9[v15 + 112];
    *((void *)v16 + 15) = v25;
    uint64_t v26 = *(void *)&v9[v15 + 136];
    *((void *)v16 + 16) = *(void *)&v9[v15 + 128];
    *((void *)v16 + 17) = v26;
    uint64_t v27 = *(void *)&v9[v15 + 152];
    *((void *)v16 + 18) = *(void *)&v9[v15 + 144];
    *((void *)v16 + 19) = v27;
    uint64_t v28 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
    uint64_t v64 = &v17[v28];
    uint64_t v65 = &v16[v28];
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v65, v64, v66);
    *(void *)&v8[v14[7]] = *(void *)&v9[v14[7]];
    *(void *)&v8[v14[8]] = *(void *)&v9[v14[8]];
    uint64_t v30 = v14[9];
    uint64_t v31 = &v8[v30];
    unint64_t v32 = &v9[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    v8[v14[10]] = v9[v14[10]];
    v8[v14[11]] = v9[v14[11]];
    uint64_t v34 = v14[12];
    uint64_t v35 = &v8[v34];
    uint64_t v36 = &v9[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    *(void *)&v8[v14[13]] = *(void *)&v9[v14[13]];
    uint64_t v38 = v14[14];
    uint64_t v39 = &v8[v38];
    uint64_t v40 = (uint64_t *)&v9[v38];
    unint64_t v41 = *(void *)&v9[v38 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    }
    else
    {
      uint64_t v42 = *v40;
      sub_25C034EC8(*v40, v41);
      *(void *)uint64_t v39 = v42;
      *((void *)v39 + 1) = v41;
    }
    int v13 = v63;
    uint64_t v43 = v14[15];
    unint64_t v44 = &v8[v43];
    uint64_t v45 = &v9[v43];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)unint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    *(void *)&v8[v14[16]] = *(void *)&v9[v14[16]];
    uint64_t v47 = v14[17];
    uint64_t v48 = &v8[v47];
    uint64_t v49 = &v9[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = v14[18];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = &v9[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    *(void *)&v8[v14[19]] = *(void *)&v9[v14[19]];
    uint64_t v55 = *(int *)(a3 + 20);
    uint64_t v56 = *(int *)(a3 + 24);
    uint64_t v57 = (char *)v63 + v55;
    uint64_t v58 = (char *)v62 + v55;
    uint64_t v59 = *((void *)v58 + 1);
    *(void *)uint64_t v57 = *(void *)v58;
    *((void *)v57 + 1) = v59;
    *((void *)v57 + 2) = *((void *)v58 + 2);
    v57[24] = v58[24];
    *(void *)((char *)v63 + v56) = *(void *)((char *)v62 + v56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

uint64_t sub_25C0AEB64(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v3 = sub_25C0EA328();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  uint64_t v5 = type metadata accessor for Report.Evidence(0);
  uint64_t v6 = v2 + *(int *)(v5 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6 + *(int *)(v7 + 40), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(v2 + *(int *)(v5 + 56));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_25C035294(*v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_25C0AED70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_retain();
  swift_retain();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v60 = a2;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25C0EA328();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v61 = a1;
  uint64_t v64 = v9;
  uint64_t v65 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = *(void *)&v8[v13 + 8];
  *(void *)uint64_t v14 = *(void *)&v8[v13];
  *((void *)v14 + 1) = v16;
  uint64_t v17 = *(void *)&v8[v13 + 24];
  *((void *)v14 + 2) = *(void *)&v8[v13 + 16];
  *((void *)v14 + 3) = v17;
  uint64_t v18 = *(void *)&v8[v13 + 40];
  *((void *)v14 + 4) = *(void *)&v8[v13 + 32];
  *((void *)v14 + 5) = v18;
  uint64_t v19 = *(void *)&v8[v13 + 56];
  *((void *)v14 + 6) = *(void *)&v8[v13 + 48];
  *((void *)v14 + 7) = v19;
  uint64_t v20 = *(void *)&v8[v13 + 72];
  *((void *)v14 + 8) = *(void *)&v8[v13 + 64];
  *((void *)v14 + 9) = v20;
  uint64_t v21 = *(void *)&v8[v13 + 88];
  *((void *)v14 + 10) = *(void *)&v8[v13 + 80];
  *((void *)v14 + 11) = v21;
  uint64_t v22 = *(void *)&v8[v13 + 104];
  *((void *)v14 + 12) = *(void *)&v8[v13 + 96];
  *((void *)v14 + 13) = v22;
  uint64_t v23 = *(void *)&v8[v13 + 120];
  *((void *)v14 + 14) = *(void *)&v8[v13 + 112];
  *((void *)v14 + 15) = v23;
  uint64_t v24 = *(void *)&v8[v13 + 136];
  *((void *)v14 + 16) = *(void *)&v8[v13 + 128];
  *((void *)v14 + 17) = v24;
  uint64_t v25 = *(void *)&v8[v13 + 152];
  *((void *)v14 + 18) = *(void *)&v8[v13 + 144];
  *((void *)v14 + 19) = v25;
  uint64_t v26 = *(int *)(_s14descr27097BA99O6VictimVMa(0) + 40);
  uint64_t v62 = &v15[v26];
  uint64_t v63 = &v14[v26];
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v63, v62, v64);
  *(void *)&v7[v12[7]] = *(void *)&v8[v12[7]];
  *(void *)&v7[v12[8]] = *(void *)&v8[v12[8]];
  uint64_t v28 = v12[9];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  v7[v12[10]] = v8[v12[10]];
  v7[v12[11]] = v8[v12[11]];
  uint64_t v32 = v12[12];
  uint64_t v33 = &v7[v32];
  uint64_t v34 = &v8[v32];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  *(void *)&v7[v12[13]] = *(void *)&v8[v12[13]];
  uint64_t v36 = v12[14];
  uint64_t v37 = &v7[v36];
  uint64_t v38 = (uint64_t *)&v8[v36];
  unint64_t v39 = *(void *)&v8[v36 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  }
  else
  {
    uint64_t v40 = *v38;
    sub_25C034EC8(*v38, v39);
    *(void *)uint64_t v37 = v40;
    *((void *)v37 + 1) = v39;
  }
  uint64_t v41 = v12[15];
  uint64_t v42 = &v7[v41];
  uint64_t v43 = &v8[v41];
  uint64_t v44 = *((void *)v43 + 1);
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = v44;
  *(void *)&v7[v12[16]] = *(void *)&v8[v12[16]];
  uint64_t v45 = v12[17];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  uint64_t v48 = *((void *)v47 + 1);
  *(void *)uint64_t v46 = *(void *)v47;
  *((void *)v46 + 1) = v48;
  uint64_t v49 = v12[18];
  uint64_t v50 = &v7[v49];
  uint64_t v51 = &v8[v49];
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = v52;
  *(void *)&v7[v12[19]] = *(void *)&v8[v12[19]];
  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = *(int *)(a3 + 24);
  uint64_t v55 = (char *)v61 + v53;
  uint64_t v56 = (char *)v60 + v53;
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = *(void *)v56;
  *((void *)v55 + 1) = v57;
  *((void *)v55 + 2) = *((void *)v56 + 2);
  v55[24] = v56[24];
  *(void *)((char *)v61 + v54) = *(void *)((char *)v60 + v54);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v61;
}

void *sub_25C0AF134(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_25C0EA328();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
LABEL_7:
  uint64_t v14 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v15 = v14[6];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  *(void *)uint64_t v16 = *(void *)&v7[v15];
  *((void *)v16 + 1) = *(void *)&v7[v15 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = *((void *)v17 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 4) = *((void *)v17 + 4);
  *((void *)v16 + 5) = *((void *)v17 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 6) = *((void *)v17 + 6);
  *((void *)v16 + 7) = *((void *)v17 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 8) = *((void *)v17 + 8);
  *((void *)v16 + 9) = *((void *)v17 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 10) = *((void *)v17 + 10);
  *((void *)v16 + 11) = *((void *)v17 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 12) = *((void *)v17 + 12);
  *((void *)v16 + 13) = *((void *)v17 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 14) = *((void *)v17 + 14);
  *((void *)v16 + 15) = *((void *)v17 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 16) = *((void *)v17 + 16);
  *((void *)v16 + 17) = *((void *)v17 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 18) = *((void *)v17 + 18);
  *((void *)v16 + 19) = *((void *)v17 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(&v16[*(int *)(v18 + 40)], &v17[*(int *)(v18 + 40)], v8);
  *(void *)&v6[v14[7]] = *(void *)&v7[v14[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[8]] = *(void *)&v7[v14[8]];
  uint64_t v19 = v14[9];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v14[10]] = v7[v14[10]];
  v6[v14[11]] = v7[v14[11]];
  uint64_t v22 = v14[12];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[13]] = *(void *)&v7[v14[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v14[14];
  uint64_t v26 = (uint64_t *)&v6[v25];
  uint64_t v27 = (uint64_t *)&v7[v25];
  unint64_t v28 = *(void *)&v7[v25 + 8];
  if (*(void *)&v6[v25 + 8] >> 60 != 15)
  {
    if (v28 >> 60 != 15)
    {
      uint64_t v30 = *v27;
      sub_25C034EC8(*v27, v28);
      uint64_t v31 = *v26;
      unint64_t v32 = v26[1];
      *uint64_t v26 = v30;
      v26[1] = v28;
      sub_25C035294(v31, v32);
      goto LABEL_14;
    }
    sub_25C052A18((uint64_t)v26);
    goto LABEL_12;
  }
  if (v28 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_14;
  }
  uint64_t v29 = *v27;
  sub_25C034EC8(*v27, v28);
  *uint64_t v26 = v29;
  v26[1] = v28;
LABEL_14:
  uint64_t v33 = v14[15];
  uint64_t v34 = &v6[v33];
  uint64_t v35 = &v7[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[16]] = *(void *)&v7[v14[16]];
  uint64_t v36 = v14[17];
  uint64_t v37 = &v6[v36];
  uint64_t v38 = &v7[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = v14[18];
  uint64_t v40 = &v6[v39];
  uint64_t v41 = &v7[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v14[19]] = *(void *)&v7[v14[19]];
  uint64_t v42 = *(int *)(a3 + 20);
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  swift_retain();
  swift_release();
  *((void *)v43 + 1) = *((void *)v44 + 1);
  swift_retain();
  swift_release();
  uint64_t v45 = *((void *)v44 + 2);
  v43[24] = v44[24];
  *((void *)v43 + 2) = v45;
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_25C0AF6AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25C0EA328();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  long long v17 = *(_OWORD *)&v9[v14 + 16];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)&v9[v14];
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = *(_OWORD *)&v9[v14 + 48];
  *((_OWORD *)v15 + 2) = *(_OWORD *)&v9[v14 + 32];
  *((_OWORD *)v15 + 3) = v18;
  long long v19 = *(_OWORD *)&v9[v14 + 112];
  *((_OWORD *)v15 + 6) = *(_OWORD *)&v9[v14 + 96];
  *((_OWORD *)v15 + 7) = v19;
  long long v20 = *(_OWORD *)&v9[v14 + 144];
  *((_OWORD *)v15 + 8) = *(_OWORD *)&v9[v14 + 128];
  *((_OWORD *)v15 + 9) = v20;
  long long v21 = *(_OWORD *)&v9[v14 + 80];
  *((_OWORD *)v15 + 4) = *(_OWORD *)&v9[v14 + 64];
  *((_OWORD *)v15 + 5) = v21;
  uint64_t v22 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[*(int *)(v22 + 40)], &v16[*(int *)(v22 + 40)], v10);
  *(void *)&v8[v13[7]] = *(void *)&v9[v13[7]];
  *(void *)&v8[v13[8]] = *(void *)&v9[v13[8]];
  *(_OWORD *)&v8[v13[9]] = *(_OWORD *)&v9[v13[9]];
  v8[v13[10]] = v9[v13[10]];
  v8[v13[11]] = v9[v13[11]];
  *(_OWORD *)&v8[v13[12]] = *(_OWORD *)&v9[v13[12]];
  *(void *)&v8[v13[13]] = *(void *)&v9[v13[13]];
  *(_OWORD *)&v8[v13[14]] = *(_OWORD *)&v9[v13[14]];
  *(_OWORD *)&v8[v13[15]] = *(_OWORD *)&v9[v13[15]];
  *(void *)&v8[v13[16]] = *(void *)&v9[v13[16]];
  *(_OWORD *)&v8[v13[17]] = *(_OWORD *)&v9[v13[17]];
  *(_OWORD *)&v8[v13[18]] = *(_OWORD *)&v9[v13[18]];
  *(void *)&v8[v13[19]] = *(void *)&v9[v13[19]];
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = *(int *)(a3 + 24);
  uint64_t v25 = (_OWORD *)((char *)a1 + v23);
  uint64_t v26 = (_OWORD *)((char *)a2 + v23);
  *uint64_t v25 = *v26;
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  return a1;
}

void *sub_25C0AF910(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589168) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25C0EA328();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589720);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for Report.Evidence(0);
  uint64_t v16 = v15[6];
  long long v17 = &v7[v16];
  long long v18 = &v8[v16];
  uint64_t v19 = *(void *)&v8[v16 + 8];
  *(void *)long long v17 = *(void *)&v8[v16];
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v18 + 5);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v18 + 7);
  *((void *)v17 + 6) = *((void *)v18 + 6);
  *((void *)v17 + 7) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v18 + 9);
  *((void *)v17 + 8) = *((void *)v18 + 8);
  *((void *)v17 + 9) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v18 + 11);
  *((void *)v17 + 10) = *((void *)v18 + 10);
  *((void *)v17 + 11) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v18 + 13);
  *((void *)v17 + 12) = *((void *)v18 + 12);
  *((void *)v17 + 13) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v18 + 15);
  *((void *)v17 + 14) = *((void *)v18 + 14);
  *((void *)v17 + 15) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v18 + 17);
  *((void *)v17 + 16) = *((void *)v18 + 16);
  *((void *)v17 + 17) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v18 + 19);
  *((void *)v17 + 18) = *((void *)v18 + 18);
  *((void *)v17 + 19) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = _s14descr27097BA99O6VictimVMa(0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&v17[*(int *)(v29 + 40)], &v18[*(int *)(v29 + 40)], v9);
  *(void *)&v7[v15[7]] = *(void *)&v8[v15[7]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[8]] = *(void *)&v8[v15[8]];
  uint64_t v30 = v15[9];
  uint64_t v31 = &v7[v30];
  unint64_t v32 = &v8[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v7[v15[10]] = v8[v15[10]];
  v7[v15[11]] = v8[v15[11]];
  uint64_t v35 = v15[12];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  uint64_t v39 = *(void *)v37;
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[13]] = *(void *)&v8[v15[13]];
  swift_bridgeObjectRelease();
  uint64_t v40 = v15[14];
  uint64_t v41 = (uint64_t *)&v7[v40];
  uint64_t v42 = (uint64_t *)&v8[v40];
  unint64_t v43 = *(void *)&v7[v40 + 8];
  if (v43 >> 60 != 15)
  {
    unint64_t v44 = v42[1];
    if (v44 >> 60 != 15)
    {
      uint64_t v45 = *v41;
      *uint64_t v41 = *v42;
      v41[1] = v44;
      sub_25C035294(v45, v43);
      goto LABEL_12;
    }
    sub_25C052A18((uint64_t)v41);
  }
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
LABEL_12:
  uint64_t v46 = v15[15];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  uint64_t v50 = *(void *)v48;
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)uint64_t v47 = v50;
  *((void *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[16]] = *(void *)&v8[v15[16]];
  uint64_t v51 = v15[17];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  uint64_t v55 = *(void *)v53;
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = v55;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v15[18];
  uint64_t v57 = &v7[v56];
  uint64_t v58 = &v8[v56];
  uint64_t v60 = *(void *)v58;
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = v60;
  *((void *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  *(void *)&v7[v15[19]] = *(void *)&v8[v15[19]];
  uint64_t v61 = *(int *)(a3 + 20);
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  *(void *)((char *)a1 + v61) = *(void *)((char *)a2 + v61);
  swift_release();
  *((void *)v62 + 1) = *((void *)v63 + 1);
  swift_release();
  *((void *)v62 + 2) = *((void *)v63 + 2);
  v62[24] = v63[24];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25C0AFD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0AFD40);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25C0AFE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C0AFE20);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25C0AFEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25C0B215C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_25C0AE6FC);
}

uint64_t _s14descr27097BA99O14MessagesScreenVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t _s14descr27097BA99O14MessagesScreenVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t _s14descr27097BA99O14MessagesScreenVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14descr27097BA99O14MessagesScreenVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v8;
  swift_release();
  return a1;
}

uint64_t _s14descr27097BA99O14MessagesScreenVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr27097BA99O14MessagesScreenVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O14MessagesScreenVMa()
{
  return &_s14descr27097BA99O14MessagesScreenVN;
}

uint64_t _s14descr27097BA99O21PhotosAndVideosScreenVwxx()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t _s14descr27097BA99O21PhotosAndVideosScreenVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *_s14descr27097BA99O21PhotosAndVideosScreenVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s14descr27097BA99O21PhotosAndVideosScreenVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t _s14descr27097BA99O21PhotosAndVideosScreenVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr27097BA99O21PhotosAndVideosScreenVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O21PhotosAndVideosScreenVMa()
{
  return &_s14descr27097BA99O21PhotosAndVideosScreenVN;
}

uint64_t sub_25C0B04D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_22Tm);
}

uint64_t sub_25C0B04EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_23Tm);
}

uint64_t sub_25C0B0504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25C0B1B18(a1, a2, a3, type metadata accessor for Report.Media);
}

char *sub_25C0B0528(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_25C0EA238();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v47(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for Report.Media(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    int v12 = &a2[v10];
    uint64_t v13 = sub_25C0EA4E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = v9[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_25C0EA608();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    a1[v9[7]] = a2[v9[7]];
    uint64_t v21 = v9[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v9[9];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    unint64_t v28 = *(void *)&a2[v25 + 8];
    swift_bridgeObjectRetain();
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    }
    else
    {
      uint64_t v29 = *(void *)v27;
      sub_25C034EC8(v29, v28);
      *(void *)uint64_t v26 = v29;
      *((void *)v26 + 1) = v28;
    }
    uint64_t v30 = v9[10];
    uint64_t v31 = &a1[v30];
    unint64_t v32 = &a2[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = v9[11];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    if (v37(v36, 1, v7))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
      memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v47(v35, v36, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v7);
    }
    uint64_t v39 = v9[12];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    *(void *)uint64_t v40 = *(void *)v41;
    v40[8] = v41[8];
    uint64_t v42 = *(int *)(a3 + 20);
    unint64_t v43 = &a1[v42];
    unint64_t v44 = &a2[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *(void *)unint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = v45;
  }
  swift_retain();
  return a1;
}

uint64_t sub_25C0B08AC(uint64_t a1)
{
  uint64_t v2 = sub_25C0EA238();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(a1, v2);
  int v5 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v6 = a1 + v5[5];
  uint64_t v7 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + v5[6];
  uint64_t v9 = sub_25C0EA608();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(a1 + v5[9]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_25C035294(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + v5[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2)) {
    v4(v13, v2);
  }

  return swift_release();
}

char *sub_25C0B0AB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_25C0EA238();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v44 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
  v44(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_25C0EA4E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_25C0EA608();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  a1[v7[7]] = a2[v7[7]];
  uint64_t v18 = v7[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = v7[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  unint64_t v25 = *(void *)&a2[v22 + 8];
  swift_bridgeObjectRetain();
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v26 = *(void *)v24;
    sub_25C034EC8(v26, v25);
    *(void *)uint64_t v23 = v26;
    *((void *)v23 + 1) = v25;
  }
  uint64_t v27 = v7[10];
  unint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)unint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  uint64_t v31 = v7[11];
  unint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  swift_bridgeObjectRetain();
  if (v34(v33, 1, v5))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v44(v32, v33, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v32, 0, 1, v5);
  }
  uint64_t v36 = v7[12];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = v42;
  swift_retain();
  return a1;
}

uint64_t sub_25C0B0DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25C0EA238();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  uint64_t v50 = *(void (**)(void *, const void *, uint64_t))(v51 + 24);
  ((void (*)(uint64_t, uint64_t))v50)(a1, a2);
  uint64_t v6 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_25C0EA608();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  uint64_t v20 = v6[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v6[9];
  uint64_t v24 = (uint64_t *)(a1 + v23);
  unint64_t v25 = (uint64_t *)(a2 + v23);
  unint64_t v26 = *(void *)(a2 + v23 + 8);
  if (*(void *)(a1 + v23 + 8) >> 60 == 15)
  {
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = *v25;
      sub_25C034EC8(*v25, v26);
      *uint64_t v24 = v27;
      v24[1] = v26;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v26 >> 60 == 15)
  {
    sub_25C052A18((uint64_t)v24);
LABEL_12:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  uint64_t v28 = *v25;
  sub_25C034EC8(*v25, v26);
  uint64_t v29 = *v24;
  unint64_t v30 = v24[1];
  *uint64_t v24 = v28;
  v24[1] = v26;
  sub_25C035294(v29, v30);
LABEL_14:
  uint64_t v31 = v6[10];
  unint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v6[11];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  int v38 = v37(a1 + v34, 1, v52);
  int v39 = v37((uint64_t)v36, 1, v52);
  if (!v38)
  {
    if (!v39)
    {
      v50(v35, v36, v52);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v51 + 8))(v35, v52);
    goto LABEL_19;
  }
  if (v39)
  {
LABEL_19:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v35, v36, v52);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v35, 0, 1, v52);
LABEL_20:
  uint64_t v41 = v6[12];
  uint64_t v42 = a1 + v41;
  unint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  *(unsigned char *)(v42 + 8) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  void *v46 = *v47;
  v46[1] = v48;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_25C0B1268(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_25C0EA238();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v26 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v26(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_25C0EA4E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_25C0EA608();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  a1[v7[7]] = a2[v7[7]];
  *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
  *(_OWORD *)&a1[v7[9]] = *(_OWORD *)&a2[v7[9]];
  *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
  uint64_t v18 = v7[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(&a2[v18], 1, v5))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v26(v19, v20, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  uint64_t v22 = v7[12];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_25C0B1550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25C0EA238();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  uint64_t v47 = *(void (**)(void *, const void *, uint64_t))(v48 + 40);
  ((void (*)(uint64_t, uint64_t))v47)(a1, a2);
  uint64_t v6 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = v6[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_25C0EA608();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  *(unsigned char *)(a1 + v6[7]) = *(unsigned char *)(a2 + v6[7]);
  uint64_t v20 = v6[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v6[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  unint64_t v28 = *(void *)(a1 + v25 + 8);
  if (v28 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_12;
  }
  unint64_t v29 = *(void *)(v27 + 8);
  if (v29 >> 60 == 15)
  {
    sub_25C052A18(v26);
    goto LABEL_10;
  }
  uint64_t v30 = *(void *)v26;
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v29;
  sub_25C035294(v30, v28);
LABEL_12:
  uint64_t v31 = v6[10];
  unint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = v6[11];
  uint64_t v37 = (void *)(a1 + v36);
  int v38 = (const void *)(a2 + v36);
  int v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  int v40 = v39(a1 + v36, 1, v49);
  int v41 = v39((uint64_t)v38, 1, v49);
  if (!v40)
  {
    if (!v41)
    {
      v47(v37, v38, v49);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v37, v49);
    goto LABEL_17;
  }
  if (v41)
  {
LABEL_17:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
    memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v37, v38, v49);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v37, 0, 1, v49);
LABEL_18:
  uint64_t v43 = v6[12];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_25C0B196C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0B1980);
}

uint64_t __swift_get_extra_inhabitant_index_22Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Report.Media(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25C0B1A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C0B1A58);
}

uint64_t __swift_store_extra_inhabitant_index_23Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Report.Media(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25C0B1B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25C0B1BAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_25C0EA238();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (void *)((char *)v4 + v8);
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)v10;
    uint64_t v12 = *((void *)v10 + 1);
    *uint64_t v9 = *(void *)v10;
    v9[1] = v12;
    id v13 = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_25C0B1C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return swift_release();
}

uint64_t sub_25C0B1D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void **)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  void *v8 = *(void *)v9;
  v8[1] = v11;
  id v12 = v10;
  swift_retain();
  return a1;
}

uint64_t sub_25C0B1DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void **)(a1 + v7);
  uint64_t v11 = *(void **)v9;
  void *v8 = *(void *)v9;
  id v12 = v11;

  v8[1] = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25C0B1E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_25C0B1EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (void *)(a2 + v7);
  unint64_t v10 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *v9;

  *(void *)(v8 + 8) = v9[1];
  swift_release();
  return a1;
}

uint64_t sub_25C0B1F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0B1F98);
}

uint64_t sub_25C0B1F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA238();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_25C0B2064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C0B2078);
}

uint64_t sub_25C0B2078(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25C0EA238();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_25C0B2134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25C0B215C(a1, a2, a3, MEMORY[0x263F06EA8]);
}

uint64_t sub_25C0B215C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Video.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0B22CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Video.Mode()
{
  return &type metadata for Video.Mode;
}

uint64_t sub_25C0B2304(uint64_t a1)
{
  return get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE15navigationTitleyQrAA4TextVFQOy024SensitiveContentAnalysisB06ReportC4ListVy_AaJVys5NeverOAI7SectionVy_AA05TupleC0VyAI3RowV_ATtGAA05EmptyC0VGGG_Qo_HOTm(a1, &qword_26A589A70, &qword_26A589A88);
}

uint64_t sub_25C0B2318(uint64_t a1)
{
  return get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE15navigationTitleyQrAA4TextVFQOy024SensitiveContentAnalysisB06ReportC4ListVy_AaJVys5NeverOAI7SectionVy_AA05TupleC0VyAI3RowV_ATtGAA05EmptyC0VGGG_Qo_HOTm(a1, &qword_26A589A90, &qword_26A589AA8);
}

uint64_t get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE15navigationTitleyQrAA4TextVFQOy024SensitiveContentAnalysisB06ReportC4ListVy_AaJVys5NeverOAI7SectionVy_AA05TupleC0VyAI3RowV_ATtGAA05EmptyC0VGGG_Qo_HOTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0B23B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0B2478()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0B25B0()
{
  return sub_25C0583D0(&qword_26A589BF0, &qword_26A589BF8);
}

uint64_t sub_25C0B25EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_25C0B26D0()
{
  unint64_t result = qword_26A589C00;
  if (!qword_26A589C00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589BC0);
    sub_25C0583D0(&qword_26A589C08, &qword_26A589C10);
    sub_25C0AC2EC(&qword_26A589C18, MEMORY[0x263F189F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589C00);
  }
  return result;
}

void type metadata accessor for CGImage()
{
  if (!qword_26A589C20)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A589C20);
    }
  }
}

uint64_t sub_25C0B27FC()
{
  return sub_25C0ABFE0(*(void *)(v0 + 16));
}

uint64_t sub_25C0B2804()
{
  uint64_t v1 = *(void *)(type metadata accessor for MediaPreviewScreen(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v18 = *(void *)(v1 + 64);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_25C0EA238();
  uint64_t v6 = *(void *)(v5 - 8);
  int v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v17(v0 + v3, v5);
  uint64_t v7 = (int *)type metadata accessor for Report.Media(0);
  uint64_t v8 = v0 + v3 + v7[5];
  uint64_t v9 = sub_25C0EA4E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v0 + v3 + v7[6];
  uint64_t v11 = sub_25C0EA608();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  id v13 = (uint64_t *)(v4 + v7[9]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_25C035294(*v13, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v4 + v7[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5)) {
    v17(v15, v5);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v18, v2 | 7);
}

uint64_t sub_25C0B2A8C()
{
  uint64_t v1 = *(void *)(type metadata accessor for MediaPreviewScreen(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_25C0AC134(v2);
}

uint64_t sub_25C0B2AEC@<X0>(uint64_t *a1@<X8>)
{
  return sub_25C0AB9F4(*(void *)(v1 + 16), 4, a1);
}

unint64_t sub_25C0B2B0C()
{
  unint64_t result = qword_26A589C78;
  if (!qword_26A589C78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589C80);
    sub_25C0B2BAC();
    sub_25C0583D0(&qword_26A589C98, &qword_26A589CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589C78);
  }
  return result;
}

unint64_t sub_25C0B2BAC()
{
  unint64_t result = qword_26A589C88;
  if (!qword_26A589C88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589C90);
    sub_25C0AC2EC(&qword_26A589B80, (void (*)(uint64_t))type metadata accessor for Video);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589C88);
  }
  return result;
}

uint64_t sub_25C0B2C58(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25C0B2CD8()
{
  unint64_t result = qword_26A589CD0;
  if (!qword_26A589CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589CD8);
    sub_25C088BE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589CD0);
  }
  return result;
}

uint64_t sub_25C0B2D54()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 32) = v1;
  swift_bridgeObjectRetain();
  swift_retain();

  return sub_25C0EB3C8();
}

uint64_t sub_25C0B2E0C()
{
  return sub_25C0A9944(*(void (**)(char *))(v0 + 24));
}

uint64_t sub_25C0B2E18()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 32) = v1;
  swift_bridgeObjectRetain_n();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888B0);
  _s14descr27097BA99O9MediaCellVMa(0);
  sub_25C0583D0(&qword_26A589CF8, &qword_26A5888B0);
  sub_25C0AC2EC(&qword_26A589CF0, (void (*)(uint64_t))_s14descr27097BA99O9MediaCellVMa);
  sub_25C0AC2EC(&qword_26A589D00, (void (*)(uint64_t))type metadata accessor for Report.Media);
  return sub_25C0EB4A8();
}

unint64_t sub_25C0B2F84()
{
  unint64_t result = qword_26A589CE8;
  if (!qword_26A589CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589CE0);
    sub_25C0AC2EC(&qword_26A589CF0, (void (*)(uint64_t))_s14descr27097BA99O9MediaCellVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589CE8);
  }
  return result;
}

uint64_t objectdestroy_9Tm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25C0B306C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v4 = *(void *)(v2 + 32);
  sub_25C0A79D4(a1, a2, type metadata accessor for Report.Media);
  uint64_t v6 = (void *)(a2 + *(int *)(_s14descr27097BA99O9MediaCellVMa(0) + 20));
  *uint64_t v6 = v5;
  v6[1] = v4;

  return swift_retain();
}

uint64_t sub_25C0B30DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v37 = sub_25C0EABF8();
  long long v4 = *(_OWORD *)(v3 + 8);
  long long v5 = *(_OWORD *)(v3 + 40);
  v41[1] = *(_OWORD *)(v3 + 24);
  v41[2] = v5;
  v41[0] = v4;
  long long v38 = *(_OWORD *)(v3 + 8);
  long long v39 = *(_OWORD *)(v3 + 24);
  long long v40 = *(_OWORD *)(v3 + 40);
  sub_25C088A68((uint64_t)v41);
  uint64_t v6 = sub_25C026FAC();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  sub_25C0EAF88();
  uint64_t v11 = sub_25C0EB028();
  uint64_t v13 = v12;
  char v15 = v14;
  swift_release();
  sub_25C05CED4(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_25C0EB018();
  uint64_t v34 = v17;
  uint64_t v35 = v16;
  uint64_t v36 = v18;
  char v33 = v19 & 1;
  sub_25C05CED4(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  long long v20 = *(_OWORD *)(v3 + 72);
  long long v38 = *(_OWORD *)(v3 + 56);
  long long v39 = v20;
  long long v40 = *(_OWORD *)(v3 + 88);
  sub_25C088A68((uint64_t)&v38);
  uint64_t v21 = sub_25C026FAC();
  uint64_t v23 = v22;
  LOBYTE(v8) = v24 & 1;
  sub_25C0EAF68();
  uint64_t v25 = sub_25C0EB028();
  uint64_t v27 = v26;
  char v29 = v28;
  uint64_t v31 = v30;
  swift_release();
  sub_25C05CED4(v21, v23, v8);
  swift_bridgeObjectRelease();
  sub_25C05CE24(v35, v34, v33);
  swift_bridgeObjectRetain();
  sub_25C05CE24(v25, v27, v29 & 1);
  swift_bridgeObjectRetain();
  sub_25C05CED4(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  sub_25C05CED4(v35, v34, v33);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v37;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v35;
  *(void *)(a1 + 32) = v34;
  *(unsigned char *)(a1 + 40) = v33;
  *(void *)(a1 + 48) = v36;
  *(void *)(a1 + 56) = v25;
  *(void *)(a1 + 64) = v27;
  *(unsigned char *)(a1 + 72) = v29 & 1;
  *(void *)(a1 + 80) = v31;
  return result;
}

uint64_t sub_25C0B334C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(v1 + 48);
  long long v5 = *(_OWORD *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  long long v7 = *(_OWORD *)(v1 + 80);
  long long v6 = *(_OWORD *)(v1 + 96);
  long long v8 = *(_OWORD *)(v1 + 64);
  *(void *)(v2 + 128) = *(void *)(v1 + 112);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  sub_25C0A8814(v1);

  return sub_25C0EB3C8();
}

uint64_t sub_25C0B3418()
{
  return sub_25C0A8FB8(v0 + 16);
}

uint64_t objectdestroy_5Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_25C0B3494()
{
  return sub_25C0EB4A8();
}

unint64_t sub_25C0B35CC()
{
  unint64_t result = qword_26A589D30;
  if (!qword_26A589D30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589D28);
    sub_25C0583D0(&qword_26A589D38, &qword_26A589D40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589D30);
  }
  return result;
}

uint64_t sub_25C0B3664()
{
  return objectdestroyTm_2(_s14descr27097BA99O13SuspectScreenVMa);
}

uint64_t sub_25C0B367C()
{
  return sub_25C0A84F4(_s14descr27097BA99O13SuspectScreenVMa, (uint64_t (*)(uint64_t))sub_25C0A8580);
}

uint64_t sub_25C0B36A8()
{
  return objectdestroyTm_2(_s14descr27097BA99O9YouScreenVMa);
}

uint64_t sub_25C0B36C0()
{
  return sub_25C0A84F4(_s14descr27097BA99O9YouScreenVMa, (uint64_t (*)(uint64_t))sub_25C0A7A80);
}

void sub_25C0B36F8()
{
  qword_26A595688 = 0x74726F706552;
  unk_26A595690 = 0xE600000000000000;
}

void sub_25C0B3718()
{
  unk_26A5956A7 = -18;
}

void sub_25C0B3748()
{
  qword_26A5956A8 = 0x656D686361747461;
  unk_26A5956B0 = 0xEB0000000073746ELL;
}

uint64_t sub_25C0B3774()
{
  uint64_t v0 = swift_allocObject();
  sub_25C0EA628();
  uint64_t v1 = (void *)sub_25C0EB828();
  id v2 = objc_msgSend(self, sel_containerWithIdentifier_, v1);

  id v3 = objc_msgSend(v2, sel_publicCloudDatabase);
  *(void *)(v0 + 16) = v3;
  return v0;
}

uint64_t sub_25C0B3860(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  uint64_t v3 = sub_25C0EA358();
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  v2[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25C0B3920, 0, 0);
}

uint64_t sub_25C0B3920()
{
  sub_25C031870(0, &qword_26A589D80);
  if (qword_26A5936E0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  sub_25C031870(0, &qword_26A589D88);
  swift_bridgeObjectRetain();
  sub_25C0EA348();
  sub_25C0EA338();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_25C031870(0, &qword_26A589D90);
  sub_25C0EBC68();
  sub_25C0EBBC8();
  uint64_t v4 = sub_25C0EBCC8();
  v0[27] = v4;
  if (qword_26A5936E8 != -1) {
    swift_once();
  }
  type metadata accessor for CloudKitReport(0);
  id v5 = objc_allocWithZone(MEMORY[0x263EFD5E0]);
  swift_bridgeObjectRetain();
  long long v6 = (void *)sub_25C0EA1A8();
  objc_msgSend(v5, sel_initWithFileURL_, v6);

  sub_25C0EBCD8();
  if (qword_26A5936F0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[23];
  sub_25C031870(0, &qword_26A589D98);
  swift_bridgeObjectRetain();
  sub_25C0EB9B8();
  sub_25C0EBCD8();
  long long v8 = *(void **)(v7 + 16);
  v0[2] = v0;
  v0[7] = v0 + 19;
  v0[3] = sub_25C0B3C64;
  uint64_t v9 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_25C06DD68;
  v0[13] = &block_descriptor_1;
  v0[14] = v9;
  objc_msgSend(v8, sel_saveRecord_completionHandler_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25C0B3C64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    uint64_t v2 = sub_25C0B3F24;
  }
  else {
    uint64_t v2 = sub_25C0B3D74;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25C0B3D74()
{
  id v1 = *(id *)(v0 + 152);
  uint64_t v2 = sub_25C0EA618();
  os_log_type_t v3 = sub_25C0EBC28();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    id v6 = objc_msgSend(v1, sel_recordID);
    *(void *)(v0 + 168) = v6;
    sub_25C0EBE58();
    void *v5 = v6;

    _os_log_impl(&dword_25C01A000, v2, v3, "Successfully uploaded encrypted report with ID: %@", v4, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v5, -1, -1);
    MEMORY[0x26117E790](v4, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(id))(v0 + 8);
  return v7(v1);
}

uint64_t sub_25C0B3F24()
{
  uint64_t v16 = v0;
  id v1 = (void *)v0[28];
  swift_willThrow();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_25C0EA618();
  os_log_type_t v5 = sub_25C0EBC38();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (void *)v0[28];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_25C0EC2E8();
    v0[20] = sub_25C079E24(v9, v10, &v15);
    sub_25C0EBE58();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25C01A000, v4, v5, "Failed to upload encrypted report: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26117E790](v8, -1, -1);
    MEMORY[0x26117E790](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[28];
  }
  uint64_t v12 = (void *)v0[27];
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_25C0B4124()
{
  id v1 = (char *)v0 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI15CloudKitWrapper_logger;
  uint64_t v2 = sub_25C0EA638();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_25C0B41CC()
{
  return type metadata accessor for CloudKitWrapper();
}

uint64_t type metadata accessor for CloudKitWrapper()
{
  uint64_t result = qword_26A593700;
  if (!qword_26A593700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25C0B4220()
{
  uint64_t result = sub_25C0EA638();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudKitWrapper.Constants()
{
  return &type metadata for CloudKitWrapper.Constants;
}

uint64_t sub_25C0B42D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25C0EA328();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t type metadata accessor for Report.Message()
{
  uint64_t result = qword_26A5939B0;
  if (!qword_26A5939B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Report.Message.media.getter()
{
  type metadata accessor for Report.Message();

  return swift_bridgeObjectRetain();
}

uint64_t Report.Message.media.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Report.Message() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Report.Message.media.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_25C0B4444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v14 = type metadata accessor for Report.Media(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  long long v20 = (char *)&v34 - v19;
  uint64_t v21 = sub_25C0EA328();
  uint64_t v38 = *(void *)(v21 - 8);
  uint64_t v39 = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v38 + 16);
  uint64_t v40 = a1;
  v22(a9, a1);
  uint64_t v23 = (int *)type metadata accessor for Report.Message();
  char v24 = (void *)(a9 + v23[5]);
  *char v24 = a2;
  v24[1] = a3;
  uint64_t v25 = (void *)(a9 + v23[6]);
  uint64_t v26 = v35;
  *uint64_t v25 = v34;
  v25[1] = v26;
  uint64_t v27 = (void *)(a9 + v23[7]);
  uint64_t v28 = v37;
  *uint64_t v27 = v36;
  v27[1] = v28;
  *(void *)(a9 + v23[8]) = a8;
  uint64_t v29 = *(void *)(a8 + 16);
  uint64_t v41 = a8;
  if (v29)
  {
    uint64_t v30 = a8 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v31 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    char v32 = 0;
    do
    {
      sub_25C0B8414(v30, (uint64_t)v20, type metadata accessor for Report.Media);
      sub_25C0B8414((uint64_t)v20, (uint64_t)v18, type metadata accessor for Report.Media);
      if (v32) {
        char v32 = 1;
      }
      else {
        char v32 = v18[*(int *)(v14 + 28)];
      }
      sub_25C0B847C((uint64_t)v18, type metadata accessor for Report.Media);
      sub_25C0B847C((uint64_t)v20, type metadata accessor for Report.Media);
      v30 += v31;
      --v29;
    }
    while (v29);
  }
  else
  {
    swift_bridgeObjectRetain();
    char v32 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(a9 + v23[9]) = v32;
  return result;
}

uint64_t sub_25C0B46C0()
{
  if (qword_26A593710 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26A593718;
  uint64_t v1 = (void *)sub_25C0EA2D8();
  id v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  uint64_t v3 = sub_25C0EB858();
  return v3;
}

uint64_t Report.Message.encode(to:configuration:)(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589DA0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0B8414(a2, (uint64_t)v13, type metadata accessor for Report.Authority);
  uint64_t v14 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) == 1)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_25C0B6124();
    sub_25C0EC388();
    sub_25C047FE0();
    char v21 = 0;
    sub_25C0EC1D8();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v20 = 1;
      sub_25C0EA328();
      sub_25C0B9898(&qword_26A588758, MEMORY[0x263F07490]);
      sub_25C0EC208();
      uint64_t v16 = type metadata accessor for Report.Message();
      char v19 = 2;
      sub_25C0EC1D8();
      v17[1] = *(void *)(v4 + *(int *)(v16 + 32));
      char v18 = 3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888B0);
      sub_25C0B61CC(&qword_26A589DA8, &qword_26A589DB0);
      sub_25C0EC198();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    Report.Message.encode(to:)(a1);
    return sub_25C0B847C((uint64_t)v13, type metadata accessor for Report.Authority);
  }
}

uint64_t Report.Message.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589DB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C0B6178();
  sub_25C0EC388();
  char v16 = 0;
  sub_25C0EA328();
  sub_25C0B9898(&qword_26A588758, MEMORY[0x263F07490]);
  sub_25C0EC208();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for Report.Message();
    char v15 = 1;
    sub_25C0EC1D8();
    char v14 = 2;
    sub_25C0EC1D8();
    char v13 = 3;
    sub_25C0EC1D8();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 32));
    v11[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888B0);
    sub_25C0B61CC((unint64_t *)&qword_26A5888B8, &qword_26A5888C0);
    sub_25C0EC208();
    v11[14] = 5;
    sub_25C0EC1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25C0B4DC4(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x63417265646E6573;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 2036625250;
      break;
    case 4:
      unint64_t result = 0x616964656DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25C0B4E90()
{
  return sub_25C0B4DC4(*v0);
}

uint64_t sub_25C0B4E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25C0B84DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25C0B4EC0(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_25C0B4ECC(uint64_t a1)
{
  unint64_t v2 = sub_25C0B6178();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0B4F08(uint64_t a1)
{
  unint64_t v2 = sub_25C0B6178();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Report.Message.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_25C0EA328();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589DC0);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for Report.Message();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C0B6178();
  uint64_t v31 = v7;
  sub_25C0EC378();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v25 = a1;
  uint64_t v11 = (uint64_t)v10;
  char v38 = 0;
  sub_25C0B9898(&qword_26A588810, MEMORY[0x263F07490]);
  uint64_t v12 = v29;
  uint64_t v13 = v30;
  sub_25C0EC168();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v11, v12, v4);
  char v37 = 1;
  uint64_t v14 = sub_25C0EC148();
  char v15 = (uint64_t *)(v11 + v8[5]);
  *char v15 = v14;
  v15[1] = v16;
  char v36 = 2;
  uint64_t v17 = sub_25C0EC148();
  char v18 = (uint64_t *)(v11 + v8[6]);
  *char v18 = v17;
  v18[1] = v19;
  char v35 = 3;
  uint64_t v20 = sub_25C0EC148();
  char v21 = (uint64_t *)(v11 + v8[7]);
  *char v21 = v20;
  v21[1] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888B0);
  char v34 = 4;
  sub_25C0B61CC((unint64_t *)&qword_26A588A58, &qword_26A588A60);
  sub_25C0EC168();
  *(void *)(v11 + v8[8]) = v32;
  char v33 = 5;
  char v23 = sub_25C0EC158();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v13);
  *(unsigned char *)(v11 + v8[9]) = v23 & 1;
  sub_25C0B8414(v11, v26, (uint64_t (*)(void))type metadata accessor for Report.Message);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_25C0B847C(v11, (uint64_t (*)(void))type metadata accessor for Report.Message);
}

uint64_t sub_25C0B54D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Report.Message.init(from:)(a1, a2);
}

uint64_t sub_25C0B54F0(void *a1)
{
  return Report.Message.encode(to:)(a1);
}

uint64_t sub_25C0B550C(void *a1, uint64_t a2)
{
  return Report.Message.encode(to:configuration:)(a1, a2);
}

uint64_t sub_25C0B5524(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_25C0EC088();
    swift_bridgeObjectRelease();
    unint64_t v42 = a1;
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v42 = a1;
    if (v4)
    {
LABEL_3:
      unint64_t v44 = v2 & 0xC000000000000001;
      uint64_t v5 = (void *)MEMORY[0x263F8EE80];
      uint64_t v6 = 4;
      uint64_t v43 = v2;
      while (1)
      {
        uint64_t v10 = v6 - 4;
        if (v44)
        {
          id v11 = (id)MEMORY[0x26117D920](v6 - 4, v2);
          uint64_t v12 = v6 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_22;
          }
        }
        else
        {
          id v11 = *(id *)(v2 + 8 * v6);
          uint64_t v12 = v6 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        uint64_t v2 = v4;
        a1 = (unint64_t)v11;
        id v13 = objc_msgSend(v11, sel_identifier, v42);
        uint64_t v14 = sub_25C0EB858();
        uint64_t v16 = v15;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v45 = v5;
        unint64_t v19 = sub_25C0B7B6C(v14, v16);
        uint64_t v20 = v5[2];
        BOOL v21 = (v18 & 1) == 0;
        uint64_t v22 = v20 + v21;
        if (__OFADD__(v20, v21)) {
          goto LABEL_23;
        }
        char v23 = v18;
        if (v5[3] >= v22)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v5 = v45;
            if (v18) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_25C0B7FB8();
            uint64_t v5 = v45;
            if (v23) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_25C0B7BE4(v22, isUniquelyReferenced_nonNull_native);
          unint64_t v24 = sub_25C0B7B6C(v14, v16);
          if ((v23 & 1) != (v25 & 1))
          {
            sub_25C0EC298();
            __break(1u);
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          unint64_t v19 = v24;
          uint64_t v5 = v45;
          if (v23)
          {
LABEL_4:
            uint64_t v7 = v5[7];
            uint64_t v8 = *(void **)(v7 + 8 * v19);
            *(void *)(v7 + 8 * v19) = a1;

            goto LABEL_5;
          }
        }
        v5[(v19 >> 6) + 8] |= 1 << v19;
        uint64_t v26 = (uint64_t *)(v5[6] + 16 * v19);
        *uint64_t v26 = v14;
        v26[1] = v16;
        *(void *)(v5[7] + 8 * v19) = a1;
        uint64_t v27 = v5[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_24;
        }
        uint64_t v5[2] = v29;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v6;
        uint64_t v4 = v2;
        BOOL v9 = v12 == v2;
        uint64_t v2 = v43;
        if (v9) {
          goto LABEL_27;
        }
      }
    }
  }
  uint64_t v5 = (void *)MEMORY[0x263F8EE80];
LABEL_27:
  swift_bridgeObjectRelease_n();
  if ((v42 & 0x8000000000000000) != 0 || (v42 & 0x4000000000000000) != 0)
  {
    unint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v30 = (uint64_t)sub_25C0B6A74(v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = v42 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = (void *)v30;
  sub_25C0B69F8((uint64_t *)&v45);
  swift_bridgeObjectRelease();
  unint64_t v31 = (unint64_t)v45;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_25C0B8880(v31, (uint64_t)v5);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v34 = type metadata accessor for Report.Message();
    Swift::Int v35 = 0;
    uint64_t v36 = *(void *)(v34 - 8);
    uint64_t v37 = *(void *)(v36 + 72);
    char v38 = (unsigned char *)(v32
                  + *(int *)(v34 + 36)
                  + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)));
    while ((*v38 & 1) == 0)
    {
      ++v35;
      v38 += v37;
      if (v33 == v35) {
        goto LABEL_34;
      }
    }
  }
  else
  {
LABEL_34:
    Swift::Int v35 = 0;
  }
  type metadata accessor for Report.Message();
  uint64_t v39 = Array.keeping(upTo:beforeAndAfter:)(10, v35, v32);
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t sub_25C0B58DC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)v69 - v12;
  uint64_t v13 = sub_25C0EA238();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v77 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A90);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for Report.Media(0);
  uint64_t v76 = *(void *)(v83 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v83);
  uint64_t v82 = (uint64_t)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v75 = (uint64_t)v69 - v20;
  uint64_t v21 = sub_25C0EA328();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v71 = (char *)v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v70 = *a1;
  id v23 = objc_msgSend(v70, sel_attachmentIdentifiers);
  uint64_t v24 = sub_25C0EB9D8();

  swift_bridgeObjectRetain();
  unint64_t v25 = sub_25C0B8750(v24, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25C0EC088();
    uint64_t v26 = result;
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v28 = (uint64_t)v77;
  uint64_t v72 = a3;
  v69[1] = v4;
  if (!v26)
  {
    uint64_t v85 = (void *)MEMORY[0x263F8EE78];
LABEL_24:
    swift_bridgeObjectRelease_n();
    id v54 = v70;
    id v55 = objc_msgSend(v70, sel_date);
    uint64_t v56 = (uint64_t)v71;
    sub_25C0EA308();

    id v57 = objc_msgSend(v54, sel_senderAccountID);
    uint64_t v58 = sub_25C0EB858();
    uint64_t v60 = v59;

    id v61 = objc_msgSend(v54, sel_senderDisplayName);
    uint64_t v62 = sub_25C0EB858();
    uint64_t v64 = v63;

    id v65 = objc_msgSend(v54, sel_body);
    uint64_t v66 = sub_25C0EB858();
    uint64_t v68 = v67;

    return sub_25C0B4444(v56, v58, v60, v62, v64, v66, v68, (uint64_t)v85, v72);
  }
  if (v26 >= 1)
  {
    uint64_t v29 = 0;
    unint64_t v79 = v25 & 0xC000000000000001;
    unsigned int v30 = *MEMORY[0x263F17620];
    unsigned int v73 = *MEMORY[0x263F17628];
    unsigned int v74 = v30;
    unint64_t v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    uint64_t v85 = (void *)MEMORY[0x263F8EE78];
    uint64_t v80 = v26;
    unint64_t v81 = v25;
    do
    {
      if (v79) {
        id v31 = (id)MEMORY[0x26117D920](v29, v25);
      }
      else {
        id v31 = *(id *)(v25 + 8 * v29 + 32);
      }
      uint64_t v32 = v31;
      id v33 = [v31 url];
      sub_25C0EA1F8();

      id v34 = objc_msgSend(v32, sel_UTIType);
      uint64_t v35 = sub_25C0EB858();
      uint64_t v37 = v36;

      id v38 = objc_msgSend(v32, sel_isSensitive);
      if (v38)
      {
        uint64_t v39 = v38;
        uint64_t v40 = v11;
        unsigned __int8 v41 = objc_msgSend(v38, sel_BOOLValue);

        uint64_t v42 = sub_25C0EA608();
        uint64_t v43 = *(void *)(v42 - 8);
        unint64_t v44 = (void (**)(char *, void, uint64_t, uint64_t))(v43 + 56);
        if (v41)
        {
          id v11 = v40;
          uint64_t v45 = v40;
          uint64_t v46 = v73;
        }
        else
        {
          id v11 = v40;
          uint64_t v45 = v40;
          uint64_t v46 = v74;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v45, v46, v42);
        (*v44)(v40, 0, 1, v42);
        uint64_t v28 = (uint64_t)v77;
      }
      else
      {
        uint64_t v47 = sub_25C0EA608();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v11, 1, 1, v47);
      }
      uint64_t v48 = v84;
      sub_25C0B9830((uint64_t)v11, v84);
      Report.Media.init(url:utiType:sensitivity:wasImpetusOfReport:)(v28, v35, v37, v48, (int)objc_msgSend(v32, sel_wasImpetusOfReport), (uint64_t)v17);

      if ((*v78)(v17, 1, v83) == 1)
      {
        sub_25C02FBF0((uint64_t)v17, &qword_26A588A90);
        unint64_t v25 = v81;
      }
      else
      {
        uint64_t v49 = v75;
        sub_25C0A72C8((uint64_t)v17, v75, type metadata accessor for Report.Media);
        sub_25C0A72C8(v49, v82, type metadata accessor for Report.Media);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v25 = v81;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v85 = (void *)sub_25C049E00(0, v85[2] + 1, 1, v85);
        }
        unint64_t v52 = v85[2];
        unint64_t v51 = v85[3];
        if (v52 >= v51 >> 1) {
          uint64_t v85 = (void *)sub_25C049E00(v51 > 1, v52 + 1, 1, v85);
        }
        uint64_t v53 = v85;
        v85[2] = v52 + 1;
        sub_25C0A72C8(v82, (uint64_t)v53+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v52, type metadata accessor for Report.Media);
      }
      ++v29;
    }
    while (v80 != v29);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_25C0B5FEC@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_isSensitive);
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned __int8 v5 = objc_msgSend(v3, sel_BOOLValue);

    uint64_t v6 = sub_25C0EA608();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v15 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    if (v5) {
      uint64_t v8 = (unsigned int *)MEMORY[0x263F17628];
    }
    else {
      uint64_t v8 = (unsigned int *)MEMORY[0x263F17620];
    }
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(a1, *v8, v6);
    uint64_t v10 = *v15;
    uint64_t v12 = a1;
    uint64_t v13 = 0;
    uint64_t v11 = v6;
  }
  else
  {
    uint64_t v9 = sub_25C0EA608();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v11 = v9;
    uint64_t v12 = a1;
    uint64_t v13 = 1;
  }

  return v10(v12, v13, 1, v11);
}

id sub_25C0B6114(uint64_t a1)
{
  return sub_25C0B6260(a1, 1, &qword_26A593718);
}

unint64_t sub_25C0B6124()
{
  unint64_t result = qword_26A593720;
  if (!qword_26A593720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A593720);
  }
  return result;
}

unint64_t sub_25C0B6178()
{
  unint64_t result = qword_26A593728[0];
  if (!qword_26A593728[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A593728);
  }
  return result;
}

uint64_t sub_25C0B61CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A5888B0);
    sub_25C0B9898(a2, (void (*)(uint64_t))type metadata accessor for Report.Media);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_25C0B6260(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v5, sel_setDateStyle_, 1);
  id result = objc_msgSend(v5, sel_setTimeStyle_, a2);
  *a3 = v5;
  return result;
}

uint64_t sub_25C0B62D0(unsigned __int8 *a1, char *a2)
{
  return sub_25C0B62DC(*a1, *a2);
}

uint64_t sub_25C0B62DC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE00746E65746E6FLL;
  uint64_t v3 = 0x436567617373656DLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x436567617373656DLL;
  unint64_t v6 = 0xEE00746E65746E6FLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6563655265746164;
      unint64_t v6 = 0xEC00000064657669;
      break;
    case 2:
      uint64_t v5 = 0x63417265646E6573;
      unint64_t v6 = 0xEF4449746E756F63;
      break;
    case 3:
      uint64_t v5 = 0x656D686361747461;
      unint64_t v6 = 0xEB0000000073746ELL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000064657669;
      if (v5 == 0x6563655265746164) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x63417265646E6573;
      unint64_t v2 = 0xEF4449746E756F63;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEB0000000073746ELL;
      if (v5 == 0x656D686361747461) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_25C0EC268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25C0B64BC()
{
  return sub_25C0EC368();
}

uint64_t sub_25C0B65C0()
{
  sub_25C0EB8C8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25C0B66AC()
{
  return sub_25C0EC368();
}

uint64_t sub_25C0B67AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C0B9748();
  *a1 = result;
  return result;
}

void sub_25C0B67DC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEE00746E65746E6FLL;
  uint64_t v3 = 0x436567617373656DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000064657669;
      uint64_t v3 = 0x6563655265746164;
      goto LABEL_3;
    case 2:
      *a1 = 0x63417265646E6573;
      a1[1] = 0xEF4449746E756F63;
      break;
    case 3:
      *a1 = 0x656D686361747461;
      a1[1] = 0xEB0000000073746ELL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_25C0B68A0()
{
  uint64_t result = 0x436567617373656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6563655265746164;
      break;
    case 2:
      uint64_t result = 0x63417265646E6573;
      break;
    case 3:
      uint64_t result = 0x656D686361747461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25C0B6958@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25C0B9748();
  *a1 = result;
  return result;
}

uint64_t sub_25C0B6980(uint64_t a1)
{
  unint64_t v2 = sub_25C0B6124();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0B69BC(uint64_t a1)
{
  unint64_t v2 = sub_25C0B6124();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C0B69F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_25C0B82F4();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_25C0B6B6C(v6);
  return sub_25C0EC018();
}

void *sub_25C0B6A74(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895B0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_25C0B8154((uint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25C0EC088();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

void sub_25C0B6B6C(uint64_t *a1)
{
  uint64_t v136 = sub_25C0EA328();
  uint64_t v2 = *(void *)(v136 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v136);
  uint64_t v135 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  int v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_25C0EC228();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_25C0B74A8(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_133;
  }
  uint64_t v126 = v7;
  if (v6 > 1)
  {
    uint64_t v9 = v8 >> 1;
    sub_25C0B9794();
    uint64_t v10 = sub_25C0EBA18();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
LABEL_12:
    uint64_t v12 = 0;
    uint64_t v13 = *a1;
    uint64_t v133 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v124 = v13 + 16;
    uint64_t v122 = a1;
    uint64_t v123 = v13 - 8;
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    uint64_t v129 = v6;
    uint64_t v137 = v13;
    while (1)
    {
      uint64_t v15 = v12;
      uint64_t v16 = v12 + 1;
      uint64_t v128 = v12;
      if (v12 + 1 < v6)
      {
        uint64_t v17 = *(void **)(v13 + 8 * v12);
        id v18 = *(id *)(v13 + 8 * v16);
        id v19 = v17;
        id v20 = objc_msgSend(v18, sel_date);
        uint64_t v21 = v134;
        sub_25C0EA308();

        id v22 = objc_msgSend(v19, sel_date);
        id v23 = v135;
        sub_25C0EA308();

        LODWORD(v138) = sub_25C0EA2E8();
        uint64_t v24 = *v133;
        unint64_t v25 = v23;
        uint64_t v26 = v136;
        (*v133)(v25, v136);
        v24(v21, v26);

        uint64_t v6 = v129;
        uint64_t v16 = v15 + 2;
        if (v15 + 2 < v6)
        {
          uint64_t v125 = v11;
          uint64_t v27 = (id *)(v124 + 8 * v15);
          while (1)
          {
            uint64_t v28 = *(v27 - 1);
            id v29 = *v27;
            id v30 = v28;
            id v31 = objc_msgSend(v29, sel_date);
            uint64_t v32 = v134;
            sub_25C0EA308();

            id v33 = objc_msgSend(v30, sel_date);
            id v34 = v135;
            sub_25C0EA308();

            LODWORD(v33) = sub_25C0EA2E8();
            uint64_t v35 = v34;
            uint64_t v36 = v136;
            v24(v35, v136);
            v24(v32, v36);

            if ((v138 ^ v33)) {
              break;
            }
            ++v27;
            uint64_t v6 = v129;
            if (v129 == ++v16)
            {
              uint64_t v16 = v129;
              uint64_t v11 = v125;
              goto LABEL_22;
            }
          }
          uint64_t v11 = v125;
          uint64_t v6 = v129;
LABEL_22:
          uint64_t v15 = v128;
        }
        uint64_t v13 = v137;
        if (v138)
        {
          if (v16 < v15) {
            goto LABEL_135;
          }
          if (v15 < v16)
          {
            uint64_t v37 = (uint64_t *)(v123 + 8 * v16);
            uint64_t v38 = v16;
            uint64_t v39 = v15;
            uint64_t v40 = (uint64_t *)(v137 + 8 * v15);
            do
            {
              if (v39 != --v38)
              {
                if (!v13) {
                  goto LABEL_140;
                }
                uint64_t v41 = *v40;
                *uint64_t v40 = *v37;
                *uint64_t v37 = v41;
              }
              ++v39;
              --v37;
              ++v40;
            }
            while (v39 < v38);
          }
        }
      }
      if (v16 < v6)
      {
        if (__OFSUB__(v16, v15)) {
          goto LABEL_132;
        }
        if (v16 - v15 < v126)
        {
          if (__OFADD__(v15, v126)) {
            goto LABEL_136;
          }
          if (v15 + v126 >= v6) {
            uint64_t v42 = v6;
          }
          else {
            uint64_t v42 = v15 + v126;
          }
          if (v42 < v15)
          {
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
            return;
          }
          if (v16 != v42)
          {
            uint64_t v125 = v11;
            uint64_t v43 = v123 + 8 * v16;
            uint64_t v127 = v42;
            do
            {
              unint64_t v44 = *(void **)(v13 + 8 * v16);
              uint64_t v45 = v15;
              uint64_t v130 = v43;
              while (1)
              {
                uint64_t v46 = v16;
                uint64_t v47 = *(void **)v43;
                id v48 = v44;
                id v138 = v48;
                id v49 = v47;
                id v50 = objc_msgSend(v48, sel_date);
                unint64_t v51 = v134;
                sub_25C0EA308();

                id v52 = objc_msgSend(v49, sel_date);
                uint64_t v53 = v135;
                sub_25C0EA308();

                LOBYTE(v52) = sub_25C0EA2E8();
                id v54 = *v133;
                id v55 = v53;
                uint64_t v56 = v136;
                (*v133)(v55, v136);
                v54(v51, v56);

                if ((v52 & 1) == 0) {
                  break;
                }
                uint64_t v13 = v137;
                if (!v137) {
                  goto LABEL_138;
                }
                uint64_t v16 = v46;
                id v57 = *(void **)v43;
                unint64_t v44 = *(void **)(v43 + 8);
                *(void *)uint64_t v43 = v44;
                *(void *)(v43 + 8) = v57;
                v43 -= 8;
                if (v46 == ++v45) {
                  goto LABEL_42;
                }
              }
              uint64_t v13 = v137;
              uint64_t v16 = v46;
LABEL_42:
              ++v16;
              uint64_t v43 = v130 + 8;
              uint64_t v15 = v128;
            }
            while (v16 != v127);
            uint64_t v16 = v127;
            uint64_t v11 = v125;
          }
        }
      }
      if (v16 < v15) {
        goto LABEL_127;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v138 = (id)v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v11 = sub_25C04B2FC(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v60 = *((void *)v11 + 2);
      unint64_t v59 = *((void *)v11 + 3);
      unint64_t v14 = v60 + 1;
      uint64_t v13 = v137;
      if (v60 >= v59 >> 1)
      {
        uint64_t v111 = sub_25C04B2FC((char *)(v59 > 1), v60 + 1, 1, v11);
        uint64_t v13 = v137;
        uint64_t v11 = v111;
      }
      *((void *)v11 + 2) = v14;
      id v61 = v11 + 32;
      uint64_t v62 = &v11[16 * v60 + 32];
      id v63 = v138;
      *(void *)uint64_t v62 = v15;
      *((void *)v62 + 1) = v63;
      if (v60)
      {
        while (1)
        {
          unint64_t v64 = v14 - 1;
          if (v14 >= 4)
          {
            uint64_t v69 = &v61[16 * v14];
            uint64_t v70 = *((void *)v69 - 8);
            uint64_t v71 = *((void *)v69 - 7);
            BOOL v75 = __OFSUB__(v71, v70);
            uint64_t v72 = v71 - v70;
            if (v75) {
              goto LABEL_116;
            }
            uint64_t v74 = *((void *)v69 - 6);
            uint64_t v73 = *((void *)v69 - 5);
            BOOL v75 = __OFSUB__(v73, v74);
            uint64_t v67 = v73 - v74;
            char v68 = v75;
            if (v75) {
              goto LABEL_117;
            }
            unint64_t v76 = v14 - 2;
            uint64_t v77 = &v61[16 * v14 - 32];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v75 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v75) {
              goto LABEL_118;
            }
            BOOL v75 = __OFADD__(v67, v80);
            uint64_t v81 = v67 + v80;
            if (v75) {
              goto LABEL_120;
            }
            if (v81 >= v72)
            {
              uint64_t v99 = &v61[16 * v64];
              uint64_t v101 = *(void *)v99;
              uint64_t v100 = *((void *)v99 + 1);
              BOOL v75 = __OFSUB__(v100, v101);
              uint64_t v102 = v100 - v101;
              if (v75) {
                goto LABEL_126;
              }
              BOOL v92 = v67 < v102;
              goto LABEL_86;
            }
          }
          else
          {
            if (v14 != 3)
            {
              uint64_t v93 = *((void *)v11 + 4);
              uint64_t v94 = *((void *)v11 + 5);
              BOOL v75 = __OFSUB__(v94, v93);
              uint64_t v86 = v94 - v93;
              char v87 = v75;
              goto LABEL_80;
            }
            uint64_t v66 = *((void *)v11 + 4);
            uint64_t v65 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v65, v66);
            uint64_t v67 = v65 - v66;
            char v68 = v75;
          }
          if (v68) {
            goto LABEL_119;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v82 = &v61[16 * v14 - 32];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v85 = __OFSUB__(v83, v84);
          uint64_t v86 = v83 - v84;
          char v87 = v85;
          if (v85) {
            goto LABEL_121;
          }
          uint64_t v88 = &v61[16 * v64];
          uint64_t v90 = *(void *)v88;
          uint64_t v89 = *((void *)v88 + 1);
          BOOL v75 = __OFSUB__(v89, v90);
          uint64_t v91 = v89 - v90;
          if (v75) {
            goto LABEL_123;
          }
          if (__OFADD__(v86, v91)) {
            goto LABEL_125;
          }
          if (v86 + v91 >= v67)
          {
            BOOL v92 = v67 < v91;
LABEL_86:
            if (v92) {
              unint64_t v64 = v76;
            }
            goto LABEL_88;
          }
LABEL_80:
          if (v87) {
            goto LABEL_122;
          }
          uint64_t v95 = &v61[16 * v64];
          uint64_t v97 = *(void *)v95;
          uint64_t v96 = *((void *)v95 + 1);
          BOOL v75 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          if (v75) {
            goto LABEL_124;
          }
          if (v98 < v86) {
            goto LABEL_14;
          }
LABEL_88:
          unint64_t v103 = v64 - 1;
          if (v64 - 1 >= v14)
          {
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
            goto LABEL_137;
          }
          if (!v13) {
            goto LABEL_139;
          }
          uint64_t v104 = v11;
          uint64_t v105 = &v61[16 * v103];
          uint64_t v106 = *(void *)v105;
          uint64_t v107 = &v61[16 * v64];
          uint64_t v108 = *((void *)v107 + 1);
          uint64_t v109 = v132;
          sub_25C0B76E0((void **)(v13 + 8 * *(void *)v105), (void **)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
          uint64_t v132 = v109;
          if (v109) {
            goto LABEL_110;
          }
          if (v108 < v106) {
            goto LABEL_113;
          }
          if (v64 > *((void *)v104 + 2)) {
            goto LABEL_114;
          }
          *(void *)uint64_t v105 = v106;
          *(void *)&v61[16 * v103 + 8] = v108;
          unint64_t v110 = *((void *)v104 + 2);
          if (v64 >= v110) {
            goto LABEL_115;
          }
          uint64_t v11 = v104;
          unint64_t v14 = v110 - 1;
          memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
          *((void *)v104 + 2) = v110 - 1;
          uint64_t v13 = v137;
          if (v110 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v14 = 1;
LABEL_14:
      uint64_t v6 = v129;
      uint64_t v12 = (uint64_t)v138;
      if ((uint64_t)v138 >= v129)
      {
        a1 = v122;
        goto LABEL_99;
      }
    }
  }
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v139 = MEMORY[0x263F8EE78];
  uint64_t v131 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
  if (v6 == 1) {
    goto LABEL_12;
  }
  unint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_99:
  uint64_t v112 = v132;
  if (v14 >= 2)
  {
    uint64_t v113 = *a1;
    do
    {
      unint64_t v114 = v14 - 2;
      if (v14 < 2) {
        goto LABEL_128;
      }
      if (!v113) {
        goto LABEL_141;
      }
      uint64_t v115 = v11;
      unint64_t v116 = v11 + 32;
      uint64_t v117 = *(void *)&v11[16 * v114 + 32];
      uint64_t v118 = *(void *)&v11[16 * v14 + 24];
      sub_25C0B76E0((void **)(v113 + 8 * v117), (void **)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
      if (v112) {
        break;
      }
      if (v118 < v117) {
        goto LABEL_129;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v115 = sub_25C04B3F8((uint64_t)v115);
      }
      if (v114 >= *((void *)v115 + 2)) {
        goto LABEL_130;
      }
      uint64_t v119 = &v115[16 * v114 + 32];
      *(void *)uint64_t v119 = v117;
      *((void *)v119 + 1) = v118;
      unint64_t v120 = *((void *)v115 + 2);
      if (v14 > v120) {
        goto LABEL_131;
      }
      uint64_t v11 = v115;
      memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
      *((void *)v115 + 2) = v120 - 1;
      unint64_t v14 = v120 - 1;
    }
    while (v120 > 2);
  }
LABEL_110:
  swift_bridgeObjectRelease();
  *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_25C0EB9E8();
  swift_bridgeObjectRelease();
}

void sub_25C0B74A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = sub_25C0EA328();
  uint64_t v7 = MEMORY[0x270FA5388](v35);
  id v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    unint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      uint64_t v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_date);
      id v20 = v33;
      sub_25C0EA308();

      id v21 = objc_msgSend(v18, sel_date);
      id v22 = v34;
      sub_25C0EA308();

      LOBYTE(v21) = sub_25C0EA2E8();
      uint64_t v23 = a3;
      uint64_t v24 = *v13;
      unint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      uint64_t v27 = *(void **)v12;
      unint64_t v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_25C0B76E0(void **a1, void **a2, id *a3, void **a4)
{
  uint64_t v56 = sub_25C0EA328();
  uint64_t v9 = *(void *)(v56 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v56);
  id v55 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = a3;
  id v54 = (char *)&v48 - v12;
  uint64_t v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v13 = (char *)a2 - (char *)a1;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = (char *)a3 - (char *)a2;
  uint64_t v16 = v15 / 8;
  if (v13 >> 3 >= v15 / 8)
  {
    uint64_t v32 = a2;
    if (a4 != a2 || &a2[v16] <= a4) {
      memmove(a4, a2, 8 * v16);
    }
    id v17 = &a4[v16];
    if (v15 < 8 || a1 >= a2) {
      goto LABEL_38;
    }
    uint64_t v48 = v4;
    id v49 = (void (**)(char *, uint64_t))(v9 + 8);
    id v33 = v53 - 1;
    uint64_t v58 = a4;
    id v50 = a1;
    while (1)
    {
      unint64_t v57 = (unint64_t)v17;
      id v52 = v32;
      uint64_t v53 = v33 + 1;
      id v34 = *--v17;
      uint64_t v36 = v32 - 1;
      uint64_t v35 = *(v32 - 1);
      id v37 = v34;
      id v51 = v37;
      id v38 = v35;
      id v39 = objc_msgSend(v37, sel_date);
      uint64_t v40 = v54;
      sub_25C0EA308();

      id v41 = objc_msgSend(v38, sel_date);
      uint64_t v42 = v55;
      sub_25C0EA308();

      LOBYTE(v41) = sub_25C0EA2E8();
      uint64_t v43 = *v49;
      unint64_t v44 = v42;
      uint64_t v45 = v56;
      (*v49)(v44, v56);
      v43(v40, v45);

      if (v41)
      {
        id v17 = (void **)v57;
        a4 = v58;
        if (v53 == v52)
        {
          uint64_t v32 = v36;
          unint64_t v46 = (unint64_t)v50;
          if (v33 < v52) {
            goto LABEL_36;
          }
          goto LABEL_35;
        }
        uint64_t v32 = v36;
      }
      else
      {
        uint64_t v32 = v52;
        a4 = v58;
        if (v53 == (id *)v57)
        {
          uint64_t v36 = v17;
          unint64_t v46 = (unint64_t)v50;
          if ((unint64_t)v33 < v57) {
            goto LABEL_36;
          }
          goto LABEL_35;
        }
        uint64_t v36 = v17;
      }
      unint64_t v46 = (unint64_t)v50;
LABEL_35:
      *id v33 = *v36;
LABEL_36:
      if (v17 > a4)
      {
        --v33;
        if ((unint64_t)v32 > v46) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
  if (a4 != a1 || &a1[v14] <= a4) {
    memmove(a4, a1, 8 * v14);
  }
  id v17 = &a4[v14];
  if ((char *)a2 - (char *)a1 < 8)
  {
    uint64_t v32 = a1;
  }
  else
  {
    uint64_t v48 = v4;
    if (a2 < v53)
    {
      id v18 = a2;
      id v52 = (id *)(v9 + 8);
      unint64_t v57 = (unint64_t)v17;
      id v19 = v54;
      id v20 = (void (**)(char *, uint64_t))(v9 + 8);
      while (1)
      {
        uint64_t v58 = a4;
        id v21 = *a4;
        id v22 = *v18;
        id v23 = v21;
        id v24 = objc_msgSend(v22, sel_date);
        sub_25C0EA308();

        id v25 = objc_msgSend(v23, sel_date);
        uint64_t v26 = v55;
        sub_25C0EA308();

        LOBYTE(v25) = sub_25C0EA2E8();
        uint64_t v27 = *v20;
        uint64_t v28 = v26;
        uint64_t v29 = v56;
        (*v20)(v28, v56);
        v27(v19, v29);

        if ((v25 & 1) == 0) {
          break;
        }
        uint64_t v30 = v18;
        BOOL v31 = a1 == v18++;
        a4 = v58;
        if (!v31) {
          goto LABEL_15;
        }
LABEL_16:
        ++a1;
        id v17 = (void **)v57;
        if ((unint64_t)a4 >= v57 || v18 >= v53) {
          goto LABEL_18;
        }
      }
      uint64_t v30 = v58;
      a4 = v58 + 1;
      if (a1 == v58) {
        goto LABEL_16;
      }
LABEL_15:
      *a1 = *v30;
      goto LABEL_16;
    }
LABEL_18:
    uint64_t v32 = a1;
  }
LABEL_38:
  if (v32 != a4
    || v32 >= (void **)((char *)a4
                      + (((char *)v17 - (char *)a4 + ((char *)v17 - (char *)a4 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8)))
  {
    memmove(v32, a4, 8 * (v17 - a4));
  }
  return 1;
}

unint64_t sub_25C0B7B6C(uint64_t a1, uint64_t a2)
{
  sub_25C0EC348();
  sub_25C0EB8C8();
  uint64_t v4 = sub_25C0EC368();

  return sub_25C0B7ED4(a1, a2, v4);
}

uint64_t sub_25C0B7BE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589DD0);
  char v38 = a2;
  uint64_t v6 = sub_25C0EC0A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v11) {
      break;
    }
    id v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v14);
    if (!v24)
    {
      int64_t v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v36;
        if ((v38 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v14 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v14 >= v11) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v14);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void **)(*(void *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v30 = v29;
    }
    sub_25C0EC348();
    sub_25C0EB8C8();
    uint64_t result = sub_25C0EC368();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v17 == v32;
        if (v17 == v32) {
          unint64_t v17 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v17);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    id v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *id v19 = v28;
    v19[1] = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  id v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_25C0B7ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25C0EC268() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25C0EC268() & 1) == 0);
    }
  }
  return v6;
}

id sub_25C0B7FB8()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589DD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25C0EC098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (id)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    if (!v23) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25C0B8154(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_25C0EC088();
    id result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_25C0EC088();
      id result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_25C0B97D4();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A589DD8);
            uint64_t v10 = sub_25C04BFEC(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void (**)(id *), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_25C0B9794();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_25C0B82F4()
{
}

uint64_t _s26SensitiveContentAnalysisUI6ReportC7MessageV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_25C0EA2F8() & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v4 = (int *)type metadata accessor for Report.Message();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_25C0EC268(), char v11 = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = v4[6];
    uint64_t v13 = *(void *)(a1 + v12);
    uint64_t v14 = *(void *)(a1 + v12 + 8);
    unint64_t v15 = (void *)(a2 + v12);
    BOOL v16 = v13 == *v15 && v14 == v15[1];
    if (v16 || (v17 = sub_25C0EC268(), char v11 = 0, (v17 & 1) != 0))
    {
      uint64_t v18 = v4[7];
      uint64_t v19 = *(void *)(a1 + v18);
      uint64_t v20 = *(void *)(a1 + v18 + 8);
      unint64_t v21 = (void *)(a2 + v18);
      BOOL v22 = v19 == *v21 && v20 == v21[1];
      if (v22 || (v23 = sub_25C0EC268(), char v11 = 0, (v23 & 1) != 0))
      {
        if (sub_25C03FE4C(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])))
        {
          char v11 = *(unsigned char *)(a1 + v4[9]) ^ *(unsigned char *)(a2 + v4[9]) ^ 1;
          return v11 & 1;
        }
LABEL_19:
        char v11 = 0;
      }
    }
  }
  return v11 & 1;
}

uint64_t sub_25C0B8414(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0B847C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C0B84DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63417265646E6573 && a2 == 0xEF4449746E756F63 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025C0F6DE0 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616964656DLL && a2 == 0xE500000000000000 || (sub_25C0EC268() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025C0F5FC0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_25C0B8750(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    char v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        unint64_t v9 = sub_25C0B7B6C(v7, v8);
        if (v10)
        {
          id v11 = *(id *)(*(void *)(a2 + 56) + 8 * v9);
          uint64_t v12 = swift_bridgeObjectRelease_n();
          MEMORY[0x26117D310](v12);
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25C0EB9F8();
          }
          sub_25C0EBA28();
          sub_25C0EB9E8();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_25C0B8880(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v19 = a2;
  uint64_t v5 = type metadata accessor for Report.Message();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25C0A57D0(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v21;
    unint64_t v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18) {
        id v13 = (id)MEMORY[0x26117D920](v12, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      id v20 = v13;
      sub_25C0B58DC(&v20, v19, (uint64_t)v8);
      if (v3)
      {
        swift_release();

        return v10;
      }
      uint64_t v3 = 0;

      uint64_t v21 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_25C0A57D0(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v21;
      }
      ++v12;
      *(void *)(v10 + 16) = v16 + 1;
      sub_25C0A72C8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, (uint64_t (*)(void))type metadata accessor for Report.Message);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25C0EC088();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_25C0B8AA4()
{
  return sub_25C0B9898(&qword_26A589DC8, MEMORY[0x263F07490]);
}

void *_s14descr27097BA99O7MessageVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25C0EA328();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    id v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    id v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    unint64_t v18 = (void *)((char *)a1 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *unint64_t v18 = *v19;
    v18[1] = v20;
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s14descr27097BA99O7MessageVwxx(uint64_t a1)
{
  uint64_t v2 = sub_25C0EA328();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr27097BA99O7MessageVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  unint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr27097BA99O7MessageVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t _s14descr27097BA99O7MessageVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t _s14descr27097BA99O7MessageVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25C0EA328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  unint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *unint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t _s14descr27097BA99O7MessageVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25C0B9058);
}

uint64_t sub_25C0B9058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25C0EA328();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s14descr27097BA99O7MessageVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25C0B9130);
}

uint64_t sub_25C0B9130(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25C0EA328();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25C0B91F0()
{
  uint64_t result = sub_25C0EA328();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14descr27097BA99O7MessageV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr27097BA99O7MessageV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0B93FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O7MessageV10CodingKeysOMa()
{
  return &_s14descr27097BA99O7MessageV10CodingKeysON;
}

unsigned char *_s14descr27097BA99O7MessageV23ReportToAppleCodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C0B9500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27097BA99O7MessageV23ReportToAppleCodingKeysOMa()
{
  return &_s14descr27097BA99O7MessageV23ReportToAppleCodingKeysON;
}

unint64_t sub_25C0B953C()
{
  unint64_t result = qword_26A593B40[0];
  if (!qword_26A593B40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A593B40);
  }
  return result;
}

unint64_t sub_25C0B9594()
{
  unint64_t result = qword_26A593D50[0];
  if (!qword_26A593D50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A593D50);
  }
  return result;
}

unint64_t sub_25C0B95EC()
{
  unint64_t result = qword_26A593E60;
  if (!qword_26A593E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A593E60);
  }
  return result;
}

unint64_t sub_25C0B9644()
{
  unint64_t result = qword_26A593E68[0];
  if (!qword_26A593E68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A593E68);
  }
  return result;
}

unint64_t sub_25C0B969C()
{
  unint64_t result = qword_26A593EF0;
  if (!qword_26A593EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A593EF0);
  }
  return result;
}

unint64_t sub_25C0B96F4()
{
  unint64_t result = qword_26A593EF8[0];
  if (!qword_26A593EF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A593EF8);
  }
  return result;
}

uint64_t sub_25C0B9748()
{
  unint64_t v0 = sub_25C0EC0E8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_25C0B9794()
{
  unint64_t result = qword_26A588730;
  if (!qword_26A588730)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A588730);
  }
  return result;
}

unint64_t sub_25C0B97D4()
{
  unint64_t result = qword_26A589DE0;
  if (!qword_26A589DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A589DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589DE0);
  }
  return result;
}

uint64_t sub_25C0B9830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5888C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C0B9898(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0B98E0()
{
  uint64_t v0 = sub_25C0EA638();
  __swift_allocate_value_buffer(v0, qword_26A593F88);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A593F88);
  return sub_25C0EA628();
}

uint64_t (*sub_25C0B9960())()
{
  return j__swift_endAccess;
}

uint64_t sub_25C0B99BC@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v1 + 192))();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel__evidence;
  swift_beginAccess();
  return sub_25C0B9B48(v3, a1);
}

uint64_t sub_25C0B9A54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 144))();
}

uint64_t sub_25C0B9A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0B9B48(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 152))(v6);
}

uint64_t sub_25C0B9B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C0B9BB0(uint64_t a1)
{
  swift_getKeyPath();
  uint64_t v4 = v1;
  uint64_t v5 = a1;
  (*(void (**)(void))(*(void *)v1 + 200))();
  swift_release();
  return sub_25C02FBF0(a1, (uint64_t *)&unk_26A589590);
}

uint64_t sub_25C0B9C58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel__evidence;
  swift_beginAccess();
  sub_25C0BF738(v2, v3);
  return swift_endAccess();
}

void (*sub_25C0B9CC4(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v1 + 192))();
  swift_release();
  v3[5] = OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_25C0BE9C8((unint64_t *)&unk_26A589DE8, (void (*)(uint64_t))type metadata accessor for ReportToAuthoritiesViewModel);
  sub_25C0EA458();
  swift_release();
  v3[7] = sub_25C0B9960();
  return sub_25C0B9DE4;
}

void sub_25C0B9DE4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_25C0EA448();
  swift_release();

  free(v1);
}

uint64_t type metadata accessor for ReportToAuthoritiesViewModel(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A594040);
}

uint64_t sub_25C0B9E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel__evidence;
  uint64_t v10 = type metadata accessor for Report.Evidence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_25C0EA468();
  sub_25C0BC730(a1, v8 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, type metadata accessor for Report.Authority);
  uint64_t v11 = (void *)(v8 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_evidenceBlock);
  *uint64_t v11 = a3;
  v11[1] = a4;
  *(void *)(v8 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType) = a2;
  return v8;
}

uint64_t sub_25C0B9F88()
{
  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  void v1[6] = sub_25C0EBAD8();
  v1[7] = sub_25C0EBAC8();
  uint64_t v3 = sub_25C0EBA78();
  unsigned char v1[8] = v3;
  v1[9] = v2;
  return MEMORY[0x270FA2498](sub_25C0BA068, v3, v2);
}

uint64_t sub_25C0BA068()
{
  uint64_t v1 = *(void *)(v0 + 40);
  (*(void (**)(void))(**(void **)(v0 + 16) + 144))();
  uint64_t v2 = type metadata accessor for Report.Evidence(0);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 40);
  if (v3 == 1)
  {
    uint64_t v5 = *(void *)(v0 + 16);
    sub_25C02FBF0(*(void *)(v0 + 40), (uint64_t *)&unk_26A589590);
    uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType);
    uint64_t v7 = sub_25C0EBAC8();
    *(void *)(v0 + 80) = v7;
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 88) = v8;
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v6;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_25C0BA260;
    uint64_t v11 = *(void *)(v0 + 24);
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v12 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA2360](v10, v7, v12, 0xD000000000000015, 0x800000025C0F6E00, sub_25C0BA704, v8, v11);
  }
  else
  {
    swift_release();
    sub_25C02FBF0(v4, (uint64_t *)&unk_26A589590);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_25C0BA260()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25C0BA428;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_25C0BA384;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25C0BA384()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v2 + 152))(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25C0BA428()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_25C0BA70C();
  swift_allocError();
  *uint64_t v2 = v1 | 0x4000000000000000;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_25C0BA4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25C0EBB08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_25C0EBAD8();
  swift_retain();
  uint64_t v14 = sub_25C0EBAC8();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = MEMORY[0x263F8F500];
  *((void *)v17 + 2) = v14;
  *((void *)v17 + 3) = v18;
  *((void *)v17 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v15], v9, v6);
  *(void *)&v17[v16] = a3;
  sub_25C06DE28((uint64_t)v12, (uint64_t)&unk_26A589F48, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_25C0BA704(uint64_t a1)
{
  return sub_25C0BA4F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_25C0BA70C()
{
  unint64_t result = qword_26A589DF8;
  if (!qword_26A589DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589DF8);
  }
  return result;
}

uint64_t sub_25C0BA760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38);
  _OWORD v6[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[6] = v8;
  v6[7] = *(void *)(v8 + 64);
  v6[8] = swift_task_alloc();
  sub_25C0EBAD8();
  v6[9] = sub_25C0EBAC8();
  uint64_t v10 = sub_25C0EBA78();
  return MEMORY[0x270FA2498](sub_25C0BA864, v10, v9);
}

uint64_t sub_25C0BA864()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t (*)(void *, void *), uint64_t))(v6
                                                                              + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_evidenceBlock);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v7, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v1, v4);
  *(void *)(v10 + ((v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v8(sub_25C0BF688, v10);
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_25C0BA9A0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  uint64_t result = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    Report.Evidence.init(_:interventionType:)(a1, a4, (uint64_t)v10);
    uint64_t v11 = type metadata accessor for Report.Evidence(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38);
    return sub_25C0EBA98();
  }
  else if (a2)
  {
    v13[1] = a2;
    id v12 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38);
    return sub_25C0EBA88();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25C0BAAC8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  type metadata accessor for Report.Authority(0);
  unsigned char v3[8] = swift_task_alloc();
  sub_25C0EBAD8();
  v3[9] = sub_25C0EBAC8();
  uint64_t v6 = sub_25C0EBA78();
  v3[10] = v6;
  v3[11] = v5;
  return MEMORY[0x270FA2498](sub_25C0BABEC, v6, v5);
}

uint64_t sub_25C0BABEC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_25C0BE1A8(v0[4] + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, v1, type metadata accessor for Report.Authority);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[17] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25C0BAF74;
    uint64_t v6 = v0[2];
    uint64_t v5 = v0[3];
    return sub_25C0BB298(v6, v5);
  }
  else
  {
    sub_25C0BC730(v0[8], v0[7], type metadata accessor for Report.Authority.DirectAuthorityDetails);
    v0[12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DirectReportNetworkManager(0)), sel_init);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[13] = v8;
    void *v8 = v0;
    v8[1] = sub_25C0BAD90;
    uint64_t v9 = v0[7];
    uint64_t v10 = v0[2];
    return sub_25C0BD278(v10, v9);
  }
}

uint64_t sub_25C0BAD90(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 112) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[10];
    uint64_t v8 = v6[11];
    uint64_t v9 = sub_25C0BB188;
  }
  else
  {
    v6[15] = a2;
    v6[16] = a1;
    uint64_t v7 = v6[10];
    uint64_t v8 = v6[11];
    uint64_t v9 = sub_25C0BAEC4;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_25C0BAEC4()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[7];
  swift_release();

  sub_25C0BEEDC(v2, type metadata accessor for Report.Authority.DirectAuthorityDetails);
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v4, v3);
}

uint64_t sub_25C0BAF74(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_25C0BB224;
  }
  else
  {
    v4[19] = a1;
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_25C0BB09C;
  }
  return MEMORY[0x270FA2498](v7, v5, v6);
}

uint64_t sub_25C0BB09C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();
  id v2 = objc_msgSend(v1, sel_recordID);
  id v3 = objc_msgSend(v2, sel_recordName);

  uint64_t v4 = sub_25C0EB858();
  uint64_t v5 = nullsub_1(v4);
  uint64_t v7 = v6;

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v8(v5, v7);
}

uint64_t sub_25C0BB188()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[7];
  swift_release();

  sub_25C0BEEDC(v2, type metadata accessor for Report.Authority.DirectAuthorityDetails);
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25C0BB224()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C0BB298(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589E18);
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_25C0EB5B8();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  type metadata accessor for CloudKitReport(0);
  v2[10] = swift_task_alloc();
  type metadata accessor for Report.Evidence(0);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_25C0EB6E8();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_25C0EA238();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25C0BB4B8, 0, 0);
}

uint64_t sub_25C0BB4B8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v4 = NSTemporaryDirectory();
  sub_25C0EB858();

  sub_25C0EA188();
  swift_bridgeObjectRelease();
  sub_25C0EA1C8();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[19] = v5;
  v0[20] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  v0[21] = sub_25C0EB5A8();
  uint64_t v6 = (uint64_t *)sub_25C0EB588();
  v0[22] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[23] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25C0BB640;
  uint64_t v8 = *v6;
  v7[4] = v0[14];
  v7[5] = v8;
  return MEMORY[0x270FA2498](sub_25C0BCDB8, 0, 0);
}

uint64_t sub_25C0BB640()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25C0BC4F4;
  }
  else {
    uint64_t v2 = sub_25C0BB754;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25C0BB754()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v5 = *(void **)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 24);
  swift_release();
  sub_25C0BE1A8(v6, v4, type metadata accessor for Report.Evidence);
  Report.Evidence.prepareForCK(with:at:progress:)(v3, v2, v5);
  if (v1)
  {
    uint64_t v7 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 96);
    sub_25C0BEEDC(*(void *)(v0 + 88), type metadata accessor for Report.Evidence);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_25C0BC9F0(v7);
    (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 144), *(void *)(v0 + 120));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    type metadata accessor for CloudKitWrapper();
    uint64_t v13 = sub_25C0B3774();
    *(void *)(v0 + 200) = v13;
    unint64_t v16 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v13 + 104) + **(int **)(*(void *)v13 + 104));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_25C0BB9C4;
    uint64_t v15 = *(void *)(v0 + 80);
    return v16(v15);
  }
}

uint64_t sub_25C0BB9C4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_25C0BC5E4;
  }
  else {
    uint64_t v4 = sub_25C0BBAD8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_25C0BBAD8()
{
  if (qword_26A593F80 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25C0EA638();
  *(void *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)qword_26A593F88);
  uint64_t v2 = sub_25C0EA618();
  os_log_type_t v3 = sub_25C0EBC58();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25C01A000, v2, v3, "Successfully uploaded encrypted report to CloudKit", v4, 2u);
    MEMORY[0x26117E790](v4, -1, -1);
  }
  uint64_t v5 = *(void **)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = *(uint64_t **)(v0 + 80);

  id v8 = objc_msgSend(v5, sel_recordID);
  id v9 = objc_msgSend(v8, sel_recordName);

  sub_25C0EB858();
  uint64_t v10 = *v7;
  unint64_t v11 = v7[1];
  sub_25C0EB5D8();
  swift_allocObject();
  sub_25C034EC8(v10, v11);
  uint64_t v12 = sub_25C0EB5C8();
  *(void *)(v0 + 240) = v12;
  if (v6)
  {
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 80);

    swift_release();
    sub_25C0BEEDC(v18, type metadata accessor for CloudKitReport);
    sub_25C0BEEDC(v17, type metadata accessor for Report.Evidence);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    sub_25C0BC9F0(v13);
    (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 144), *(void *)(v0 + 120));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  else
  {
    uint64_t v21 = v12;
    *(void *)(v0 + 248) = sub_25C0EB588();
    BOOL v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v22;
    *BOOL v22 = v0;
    v22[1] = sub_25C0BBE1C;
    uint64_t v23 = *(void *)(v0 + 40);
    return MEMORY[0x270F80738](v23, v21);
  }
}

uint64_t sub_25C0BBE1C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_25C0BBF34, 0, 0);
}

uint64_t sub_25C0BBF34()
{
  uint64_t v45 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_25C02FBF0(v3, &qword_26A589E18);
    uint64_t v4 = sub_25C0EA618();
    os_log_type_t v5 = sub_25C0EBC58();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_25C01A000, v4, v5, "Successfully uploaded TKRecord to TrustKit.", v6, 2u);
      MEMORY[0x26117E790](v6, -1, -1);
    }
    uint64_t v7 = v0[18];
    uint64_t v36 = (void (*)(uint64_t, uint64_t))v0[19];
    uint64_t v8 = v0[14];
    uint64_t v34 = v0[15];
    uint64_t v9 = v0[12];
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[11];

    swift_release();
    swift_release();
    sub_25C0BEEDC(v11, type metadata accessor for CloudKitReport);
    sub_25C0BEEDC(v12, type metadata accessor for Report.Evidence);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    sub_25C0BC9F0(v7);
    v36(v7, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v14 = v0[27];
    return v13(v14);
  }
  else
  {
    uint64_t v17 = v0[8];
    uint64_t v16 = v0[9];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v16, v3, v1);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v43(v17, v16, v1);
    uint64_t v18 = sub_25C0EA618();
    os_log_type_t v19 = sub_25C0EBC38();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v22 = v0[7];
    uint64_t v21 = v0[8];
    uint64_t v23 = v0[6];
    if (v20)
    {
      os_log_t log = v18;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v44 = v41;
      *(_DWORD *)uint64_t v24 = 136315138;
      sub_25C0BE9C8((unint64_t *)&unk_26A589E28, MEMORY[0x263F80ED8]);
      uint64_t v25 = sub_25C0EC2E8();
      v0[2] = sub_25C079E24(v25, v26, &v44);
      sub_25C0EBE58();
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v42(v21, v23);
      _os_log_impl(&dword_25C01A000, log, v19, "Failed to upload TKRecord to TrustKit: %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v41, -1, -1);
      MEMORY[0x26117E790](v24, -1, -1);
    }
    else
    {
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v42(v0[8], v0[6]);
    }
    uint64_t v27 = (void *)v0[27];
    uint64_t v28 = v0[13];
    uint64_t v38 = v0[14];
    os_log_t loga = (os_log_t)v0[18];
    uint64_t v35 = v0[11];
    uint64_t v37 = v0[12];
    uint64_t v29 = v0[9];
    uint64_t v33 = v0[10];
    uint64_t v30 = v0[6];
    sub_25C0BE9C8((unint64_t *)&unk_26A589E28, MEMORY[0x263F80ED8]);
    swift_allocError();
    v43(v31, v29, v30);
    swift_willThrow();
    swift_release();

    swift_release();
    v42(v29, v30);
    sub_25C0BEEDC(v33, type metadata accessor for CloudKitReport);
    sub_25C0BEEDC(v35, type metadata accessor for Report.Evidence);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v38, v37);
    sub_25C0BC9F0((uint64_t)loga);
    ((void (*)(void, void))v0[19])(v0[18], v0[15]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
}

uint64_t sub_25C0BC4F4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  sub_25C0BC9F0(v1);
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 144), *(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25C0BC5E4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  swift_release();
  sub_25C0BEEDC(v6, type metadata accessor for CloudKitReport);
  sub_25C0BEEDC(v5, type metadata accessor for Report.Evidence);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_25C0BC9F0(v1);
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 144), *(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_25C0BC730(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DirectReportNetworkManager(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A594058);
}

uint64_t sub_25C0BC7B8()
{
  return sub_25C0EA438();
}

uint64_t sub_25C0BC840()
{
  return sub_25C0EA428();
}

uint64_t sub_25C0BC900()
{
  sub_25C0BEEDC(v0 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, type metadata accessor for Report.Authority);
  swift_release();
  sub_25C02FBF0(v0 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel__evidence, (uint64_t *)&unk_26A589590);
  uint64_t v1 = v0 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel___observationRegistrar;
  uint64_t v2 = sub_25C0EA478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

void sub_25C0BC9F0(uint64_t a1)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_25C0EA238();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_defaultManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v7 = (void *)sub_25C0EA1A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22[0] = 0;
  LODWORD(v2) = objc_msgSend(v6, sel_removeItemAtURL_error_, v7, v22);

  id v8 = v22[0];
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588D78);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_25C0EED70;
    *(void *)(v9 + 56) = MEMORY[0x263F8D310];
    *(void *)(v9 + 32) = 0xD000000000000023;
    *(void *)(v9 + 40) = 0x800000025C0F6F90;
    sub_25C0EC338();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v8;
    uint64_t v11 = (void *)sub_25C0EA158();

    swift_willThrow();
    if (qword_26A593F80 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_25C0EA638();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A593F88);
    id v13 = v11;
    id v14 = v11;
    uint64_t v15 = sub_25C0EA618();
    os_log_type_t v16 = sub_25C0EBC38();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      id v19 = v11;
      BOOL v20 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v22[0] = v20;
      sub_25C0EBE58();
      *uint64_t v18 = v20;

      _os_log_impl(&dword_25C01A000, v15, v16, "Failed to delete report folder: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A5894C0);
      swift_arrayDestroy();
      MEMORY[0x26117E790](v18, -1, -1);
      MEMORY[0x26117E790](v17, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_25C0BCD74(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_25C0BCDB8, 0, 0);
}

uint64_t sub_25C0BCDB8()
{
  if (qword_26A593F80 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25C0EA638();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_26A593F88);
  uint64_t v2 = sub_25C0EA618();
  os_log_type_t v3 = sub_25C0EBC58();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25C01A000, v2, v3, "Fetching encryption key from TrustKit.", v4, 2u);
    MEMORY[0x26117E790](v4, -1, -1);
  }

  v0[7] = sub_25C0EB588();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  void *v5 = v0;
  v5[1] = sub_25C0BCF18;
  return MEMORY[0x270F80728]();
}

uint64_t sub_25C0BCF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = sub_25C0BD158;
  }
  else
  {
    swift_release();
    uint64_t v5 = sub_25C0BD038;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_25C0BD038()
{
  uint64_t v1 = sub_25C0EA618();
  os_log_type_t v2 = sub_25C0EBC58();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_25C01A000, v1, v2, "Successfully fetched encryption key data.", v3, 2u);
    MEMORY[0x26117E790](v3, -1, -1);
  }
  long long v6 = *(_OWORD *)(v0 + 72);

  *(_OWORD *)(v0 + 16) = v6;
  sub_25C0EB6D8();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25C0BD158()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_25C0BD1BC()
{
  uint64_t v1 = OBJC_IVAR____TtC26SensitiveContentAnalysisUIP33_8A6FFD33D440B432C1F2FAE6B8721B9326DirectReportNetworkManager____lazy_storage___session;
  os_log_type_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26SensitiveContentAnalysisUIP33_8A6FFD33D440B432C1F2FAE6B8721B9326DirectReportNetworkManager____lazy_storage___session);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26SensitiveContentAnalysisUIP33_8A6FFD33D440B432C1F2FAE6B8721B9326DirectReportNetworkManager____lazy_storage___session);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_defaultSessionConfiguration);
    id v5 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v4, v0, 0);

    long long v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    os_log_type_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_25C0BD278(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = sub_25C0EA238();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = sub_25C0E9F28();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  uint64_t v6 = sub_25C0EC048();
  v3[24] = v6;
  v3[25] = *(void *)(v6 - 8);
  v3[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25C0BD3F4, 0, 0);
}

uint64_t sub_25C0BD3F4()
{
  uint64_t v1 = sub_25C08AE48();
  v0[27] = v1;
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v3 = v0[19];
    uint64_t v2 = v0[20];
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[16];
    uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5 + *(int *)(v6 + 32), v4);
    sub_25C0E9EF8();
    sub_25C0E9EE8();
    sub_25C0E9F08();
    sub_25C0E9FF8();
    swift_allocObject();
    sub_25C0E9FE8();
    type metadata accessor for Report.Evidence(0);
    sub_25C0BE9C8(&qword_26A589F10, (void (*)(uint64_t))type metadata accessor for Report.Evidence);
    uint64_t v7 = sub_25C0E9FC8();
    v0[30] = v7;
    v0[31] = v8;
    uint64_t v13 = v7;
    unint64_t v14 = v8;
    uint64_t v15 = v0[27];
    swift_release();
    swift_beginAccess();
    uint64_t v16 = type metadata accessor for Report.TestingOptions(0);
    v0[32] = v16;
    if (*(unsigned char *)(v15 + *(int *)(v16 + 28)) == 1)
    {
      swift_allocObject();
      sub_25C0E9FE8();
      v0[13] = 0x796D6D7544;
      v0[14] = 0xE500000000000000;
      sub_25C0BF3A0();
      sub_25C0E9FC8();
      swift_release();
    }
    else
    {
      sub_25C034EC8(v13, v14);
    }
    sub_25C0E9F18();
    v0[33] = sub_25C0BD1BC();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[34] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_25C0BDD80;
    uint64_t v18 = v0[23];
    return MEMORY[0x270EF1EB0](v18, 0);
  }
  else
  {
    uint64_t v10 = *(void *)v1;
    uint64_t v9 = *(void *)(v1 + 8);
    sub_25C0EC038();
    id v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A589F20 + dword_26A589F20);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[28] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25C0BD82C;
    return v19(v10, v9, 0, 0, 1);
  }
}

uint64_t sub_25C0BD82C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[25] + 8))(v2[26], v2[24]);
  if (v0) {
    uint64_t v3 = sub_25C0BDCFC;
  }
  else {
    uint64_t v3 = sub_25C0BD994;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25C0BD994()
{
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5 + *(int *)(v6 + 32), v4);
  sub_25C0E9EF8();
  sub_25C0E9EE8();
  sub_25C0E9F08();
  sub_25C0E9FF8();
  swift_allocObject();
  sub_25C0E9FE8();
  type metadata accessor for Report.Evidence(0);
  sub_25C0BE9C8(&qword_26A589F10, (void (*)(uint64_t))type metadata accessor for Report.Evidence);
  uint64_t v7 = sub_25C0E9FC8();
  v0[30] = v7;
  v0[31] = v8;
  if (v1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    uint64_t v11 = v7;
    unint64_t v12 = v8;
    uint64_t v13 = v0[27];
    swift_release();
    swift_beginAccess();
    uint64_t v14 = type metadata accessor for Report.TestingOptions(0);
    v0[32] = v14;
    if (*(unsigned char *)(v13 + *(int *)(v14 + 28)) == 1)
    {
      swift_allocObject();
      sub_25C0E9FE8();
      v0[13] = 0x796D6D7544;
      v0[14] = 0xE500000000000000;
      sub_25C0BF3A0();
      sub_25C0E9FC8();
      swift_release();
    }
    else
    {
      sub_25C034EC8(v11, v12);
    }
    sub_25C0E9F18();
    v0[33] = sub_25C0BD1BC();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[34] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_25C0BDD80;
    uint64_t v16 = v0[23];
    return MEMORY[0x270EF1EB0](v16, 0);
  }
}

uint64_t sub_25C0BDCFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C0BDD80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)*v4;
  uint64_t v7 = (void *)*v4;
  v7[35] = a1;
  v7[36] = a2;
  v7[37] = v3;
  swift_task_dealloc();
  unint64_t v8 = (void *)v6[33];
  if (v3)
  {

    uint64_t v9 = sub_25C0BE0FC;
  }
  else
  {

    uint64_t v9 = sub_25C0BDECC;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_25C0BDECC()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[27];
  swift_beginAccess();
  if (*(unsigned char *)(v2 + *(int *)(v1 + 32)))
  {
    uint64_t v4 = v0[35];
    unint64_t v3 = v0[36];
    uint64_t v6 = v0[30];
    unint64_t v5 = v0[31];
    uint64_t v8 = v0[22];
    uint64_t v7 = v0[23];
    uint64_t v9 = v0[21];
    uint64_t v10 = nullsub_1(0x3535353535353535);
    uint64_t v12 = v11;
    sub_25C035294(v4, v3);
    sub_25C035294(v6, v5);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v20(v10, v12);
  }
  uint64_t v13 = v0[37];
  sub_25C0E9F58();
  swift_allocObject();
  sub_25C0E9F48();
  sub_25C0BF34C();
  sub_25C0E9F38();
  uint64_t v15 = v0[35];
  unint64_t v14 = v0[36];
  uint64_t v17 = v0[30];
  unint64_t v16 = v0[31];
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  sub_25C035294(v17, v16);
  swift_release();
  sub_25C035294(v15, v14);
  if (!v13)
  {
    uint64_t v10 = v0[11];
    uint64_t v12 = v0[12];
    goto LABEL_8;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_25C0BE0FC()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  sub_25C035294(v0[30], v0[31]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25C0BE1A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0BE394(int a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  (*((void (**)(void *, void, void))v4 + 2))(v4, 0, 0);
  _Block_release(v4);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return sub_25C0BF344(v5);
}

id sub_25C0BE434()
{
  uint64_t v16 = sub_25C0EA168();
  uint64_t v1 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EA358();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC26SensitiveContentAnalysisUIP33_8A6FFD33D440B432C1F2FAE6B8721B9326DirectReportNetworkManager____lazy_storage___session] = 0;
  uint64_t v18 = 0x454D454C504D492FLL;
  unint64_t v19 = 0xEB000000002F544ELL;
  uint64_t v11 = v0;
  sub_25C0EA348();
  sub_25C0BE9C8((unint64_t *)&unk_26A589EC8, MEMORY[0x263F07508]);
  sub_25C0EC238();
  sub_25C0EB8E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = sub_25C0EA238();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06E50], v16);
  sub_25C0EA228();

  uint64_t v13 = (objc_class *)type metadata accessor for DirectReportNetworkManager(0);
  v17.receiver = v11;
  v17.super_class = v13;
  return objc_msgSendSuper2(&v17, sel_init);
}

id sub_25C0BE72C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DirectReportNetworkManager(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25C0BE7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_25C0BF9F4(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_25C0BE818(uint64_t a1)
{
  unint64_t v2 = sub_25C0BF7C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25C0BE854(uint64_t a1)
{
  unint64_t v2 = sub_25C0BF7C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25C0BE890(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F68);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25C0BF7C4();
  sub_25C0EC388();
  sub_25C0EC1D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25C0BE9C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0BEA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_25C0EC028();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_25C0BEB14, 0, 0);
}

uint64_t sub_25C0BEB14()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_25C0EC048();
  uint64_t v5 = sub_25C0BE9C8(&qword_26A589F28, MEMORY[0x263F8F710]);
  sub_25C0EC2A8();
  sub_25C0BE9C8(&qword_26A589F30, MEMORY[0x263F8F6D8]);
  sub_25C0EC058();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25C0BECB4;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_25C0BECB4()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25C0BEE70, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_25C0BEE70()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C0BEEDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C0BEF3C()
{
  return type metadata accessor for ReportToAuthoritiesViewModel(0);
}

void sub_25C0BEF44()
{
  type metadata accessor for Report.Authority(319);
  if (v0 <= 0x3F)
  {
    sub_25C0BF064();
    if (v1 <= 0x3F)
    {
      sub_25C0EA478();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_25C0BF064()
{
  if (!qword_26A589E38)
  {
    type metadata accessor for Report.Evidence(255);
    unint64_t v0 = sub_25C0EBE08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A589E38);
    }
  }
}

uint64_t sub_25C0BF0BC()
{
  return type metadata accessor for DirectReportNetworkManager(0);
}

uint64_t sub_25C0BF0C4()
{
  uint64_t result = sub_25C0EA238();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25C0BF160()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25C0BF1B0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_25C03C050;
  uint64_t v6 = (uint64_t (*)(int, int, void *))((char *)&dword_26A589ED8 + dword_26A589ED8);
  return v6(v2, v3, v4);
}

uint64_t sub_25C0BF278(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25C03CC80;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26A5886F0 + dword_26A5886F0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_25C0BF344(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_25C0BF34C()
{
  unint64_t result = qword_26A589F18;
  if (!qword_26A589F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589F18);
  }
  return result;
}

unint64_t sub_25C0BF3A0()
{
  unint64_t result = qword_26A594068[0];
  if (!qword_26A594068[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A594068);
  }
  return result;
}

uint64_t sub_25C0BF3F4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25C0BF4D8()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_25C03CC80;
  return sub_25C0BA760((uint64_t)v7, v8, v9, v4, v5, v6);
}

uint64_t sub_25C0BF5E8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25C0BF688(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A589F38) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_25C0BA9A0(a1, a2, v2 + v6, v7);
}

uint64_t sub_25C0BF738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DirectReportNetworkManager.DummyReport()
{
  return &type metadata for DirectReportNetworkManager.DummyReport;
}

void type metadata accessor for AuthChallengeDisposition(uint64_t a1)
{
}

unint64_t sub_25C0BF7C4()
{
  unint64_t result = qword_26A5940F0;
  if (!qword_26A5940F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A5940F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DirectReportNetworkManager.DummyReport.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25C0BF8B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectReportNetworkManager.DummyReport.CodingKeys()
{
  return &type metadata for DirectReportNetworkManager.DummyReport.CodingKeys;
}

unint64_t sub_25C0BF8F0()
{
  unint64_t result = qword_26A594200[0];
  if (!qword_26A594200[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A594200);
  }
  return result;
}

unint64_t sub_25C0BF948()
{
  unint64_t result = qword_26A594310;
  if (!qword_26A594310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A594310);
  }
  return result;
}

unint64_t sub_25C0BF9A0()
{
  unint64_t result = qword_26A594318[0];
  if (!qword_26A594318[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A594318);
  }
  return result;
}

uint64_t sub_25C0BF9F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x676E6968746F6ELL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25C0EC268();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25C0BFA7C()
{
  return 0x676E6968746F6ELL;
}

void static Entitlements.current.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Entitlements.init(testDict:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Entitlements.check(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = *v1;
  sub_25C0C05EC((uint64_t)a1._rawValue);
  if (v3)
  {
    sub_25C0BFB48(0, 0xE000000000000000, 0, v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25C0C0964();
    swift_allocError();
    *(_OWORD *)uint64_t v4 = xmmword_25C0F35C0;
    *(void *)(v4 + 16) = 0x8000000000000000;
    swift_willThrow();
  }
}

{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void v10[6];

  uint64_t v3 = v2;
  uint64_t v4 = *((void *)a1._rawValue + 2);
  if (v4)
  {
    unint64_t v6 = *v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)((char *)a1._rawValue + 40);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      v10[5] = v6;
      swift_bridgeObjectRetain();
      sub_25C0C0C34(v8, v9, (uint64_t)v10);
      if (v3) {
        break;
      }
      v7 += 2;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      swift_bridgeObjectRelease();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

void sub_25C0BFB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v6 = v5;
  uint64_t v62 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v63 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v64 = a3;
  while (1)
  {
    if (v10)
    {
      uint64_t v67 = (v10 - 1) & v10;
      unint64_t v12 = __clz(__rbit64(v10)) | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v11 >= v63) {
      goto LABEL_65;
    }
    unint64_t v14 = *(void *)(v62 + 8 * v11);
    if (!v14) {
      break;
    }
LABEL_16:
    uint64_t v67 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_17:
    uint64_t v16 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = *(void **)(*(void *)(a4 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    id v20 = v19;
    uint64_t v21 = (void *)sub_25C0EB828();
    uint64_t v22 = (void *)sub_25C0EB828();
    id v23 = objc_msgSend(v21, sel_stringByAppendingPathComponent_, v22);

    uint64_t v24 = sub_25C0EB858();
    uint64_t v26 = v25;

    uint64_t v68 = v26;
    uint64_t v65 = v24;
    if (!a3)
    {
      id v72 = a5;
      sub_25C0C0C34(v17, v18, (uint64_t)v70);
      unint64_t v32 = v6;
      if (v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = 0;
LABEL_25:
        id v72 = v32;
        id v34 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0);
        if (swift_dynamicCast())
        {
          uint64_t v35 = v70[0];
          uint64_t v36 = v70[1];
          unint64_t v37 = v71;
          if (v71 >> 61 == 3)
          {

            self;
            uint64_t v38 = swift_dynamicCastObjCClass();
            if (!v38
              || (uint64_t v39 = v38, v69 = 2,
                             id v40 = v20,
                             MEMORY[0x26117D3D0](v39, &v69),
                             v40,
                             v69 == 2)
              || (v69 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              sub_25C0C0964();
              swift_allocError();
              *(void *)uint64_t v56 = v35;
              *(_OWORD *)(v56 + 8) = xmmword_25C0F35D0;
              swift_willThrow();
              swift_release();

              return;
            }
            sub_25C0C1114(v35, v36, v37);
            id v30 = (id)sub_25C0EBA58();

            goto LABEL_34;
          }

          swift_bridgeObjectRelease();
          sub_25C0C1114(v35, v36, v37);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_release();

        return;
      }
      sub_25C02FCA0();
      if (swift_dynamicCast())
      {
        uint64_t v29 = 0;
        id v30 = v72;
        goto LABEL_33;
      }
      sub_25C0C0964();
      unint64_t v32 = (void *)swift_allocError();
      *id v54 = v17;
      v54[1] = v18;
      v54[2] = 0x2000000000000000;
LABEL_22:
      swift_willThrow();
      uint64_t v29 = 0;
      goto LABEL_25;
    }
    if (!*(void *)(a3 + 16) || (unint64_t v27 = sub_25C0B7B6C(v17, v18), (v28 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A10);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_25C0EED70;
      *(void *)(v31 + 32) = v24;
      *(void *)(v31 + 40) = v26;
      sub_25C0C0964();
      unint64_t v32 = (void *)swift_allocError();
      *(void *)uint64_t v33 = v31;
      *(_OWORD *)(v33 + 8) = xmmword_25C0F35D0;
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    uint64_t v29 = v6;
    id v30 = *(id *)(*(void *)(a3 + 56) + 8 * v27);
LABEL_33:
    swift_bridgeObjectRelease();
LABEL_34:
    self;
    if (swift_dynamicCastObjCClass()
      && (v70[0] = 0, sub_25C02FCA0(), id v41 = v30, sub_25C0EB748(), v41, (v42 = v70[0]) != 0))
    {
      self;
      if (!swift_dynamicCastObjCClass()
        || (v70[0] = 0, id v43 = v20, sub_25C0EB748(), v43, !v70[0]))
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      sub_25C0BFB48(v65, v26, v42, v70[0], a5);
      unint64_t v6 = v29;
      if (v29)
      {
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_52:
      a3 = v64;
      unint64_t v10 = v67;
    }
    else
    {
LABEL_41:
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_50;
      }
      v70[0] = 0;
      id v44 = v30;
      sub_25C0EB9C8();

      uint64_t v45 = v70[0];
      if (!v70[0]) {
        goto LABEL_50;
      }
      self;
      if (!swift_dynamicCastObjCClass()
        || (v70[0] = 0, v46 = v20, sub_25C0EB9C8(), v46, (uint64_t v47 = v70[0]) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_50:
        sub_25C02FCA0();
        if ((sub_25C0EBCE8() & 1) == 0)
        {
          sub_25C0C0964();
          swift_allocError();
          *unint64_t v57 = v65;
          v57[1] = v68;
          v57[2] = 0x4000000000000000;
          swift_willThrow();
          swift_release();

          return;
        }
        swift_bridgeObjectRelease();

        unint64_t v6 = v29;
        goto LABEL_52;
      }
      unint64_t v60 = v46;
      uint64_t v48 = (void *)sub_25C0EBB38();
      id v72 = v48;
      uint64_t v49 = *(void *)(v47 + 16);
      if (v49)
      {
        id v50 = (uint64_t *)(v47 + 40);
        do
        {
          uint64_t v51 = *(v50 - 1);
          uint64_t v52 = *v50;
          swift_bridgeObjectRetain();
          sub_25C04A738(v70, v51, v52);
          swift_bridgeObjectRelease();
          v50 += 2;
          --v49;
        }
        while (v49);
        swift_bridgeObjectRelease();
        uint64_t v53 = (uint64_t)v72;
      }
      else
      {
        uint64_t v53 = (uint64_t)v48;
        swift_bridgeObjectRelease();
      }
      uint64_t v55 = sub_25C0C1540(v45, v53);
      swift_bridgeObjectRelease();
      unint64_t v6 = v29;
      a3 = v64;
      if (*(void *)(v55 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_25C0C1E9C(v55);
        swift_release();
        swift_bridgeObjectRelease_n();
        sub_25C0C0964();
        swift_allocError();
        *(void *)uint64_t v59 = v58;
        *(_OWORD *)(v59 + 8) = xmmword_25C0F35D0;
        swift_willThrow();
        swift_release();

        return;
      }
      swift_release();
      swift_bridgeObjectRelease();

      unint64_t v10 = v67;
    }
  }
  int64_t v15 = v11 + 1;
  if (v11 + 1 >= v63) {
    goto LABEL_65;
  }
  unint64_t v14 = *(void *)(v62 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v11 + 2;
  if (v11 + 2 >= v63) {
    goto LABEL_65;
  }
  unint64_t v14 = *(void *)(v62 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v11 + 3;
  if (v11 + 3 >= v63)
  {
LABEL_65:
    swift_release();
    return;
  }
  unint64_t v14 = *(void *)(v62 + 8 * v15);
  if (v14)
  {
LABEL_15:
    int64_t v11 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v11 >= v63) {
      goto LABEL_65;
    }
    unint64_t v14 = *(void *)(v62 + 8 * v11);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_70:
  __break(1u);
}

void Entitlements.value<A>(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = sub_25C0EBE08();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v18[-v12];
  uint64_t v19 = *v4;
  sub_25C0C0C34(a1, a2, (uint64_t)v18);
  if (!v5)
  {
    char v14 = swift_dynamicCast();
    int64_t v15 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
    if (v14)
    {
      uint64_t v16 = *(void *)(a3 - 8);
      v15(v13, 0, 1, a3);
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(a4, v13, a3);
    }
    else
    {
      v15(v13, 1, 1, a3);
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
      sub_25C0C0964();
      swift_allocError();
      *uint64_t v17 = a1;
      v17[1] = a2;
      void v17[2] = 0x2000000000000000;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
  }
}

void sub_25C0C05EC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F80);
    uint64_t v2 = (void *)sub_25C0EC0B8();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v30 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v29 = (unint64_t)(63 - v4) >> 6;
  unint64_t v6 = &v35;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = (uint64_t *)&unk_26A589F88;
  while (1)
  {
    if (v5)
    {
      uint64_t v31 = (v5 - 1) & v5;
      unint64_t v14 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v15 = v7;
    }
    else
    {
      int64_t v16 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_36;
      }
      if (v16 >= v29)
      {
LABEL_33:
        sub_25C058188();
        return;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v16);
      int64_t v15 = v7 + 1;
      if (!v17)
      {
        int64_t v15 = v7 + 2;
        if (v7 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v15);
        if (!v17)
        {
          int64_t v15 = v7 + 3;
          if (v7 + 3 >= v29) {
            goto LABEL_33;
          }
          unint64_t v17 = *(void *)(v30 + 8 * v15);
          if (!v17)
          {
            int64_t v15 = v7 + 4;
            if (v7 + 4 >= v29) {
              goto LABEL_33;
            }
            unint64_t v17 = *(void *)(v30 + 8 * v15);
            if (!v17)
            {
              int64_t v18 = v7 + 5;
              if (v7 + 5 >= v29) {
                goto LABEL_33;
              }
              unint64_t v17 = *(void *)(v30 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v15 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_37;
                  }
                  if (v15 >= v29) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = *(void *)(v30 + 8 * v15);
                  ++v18;
                  if (v17) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v15 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v31 = (v17 - 1) & v17;
      unint64_t v14 = __clz(__rbit64(v17)) + (v15 << 6);
    }
    uint64_t v19 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25C07A0B4(*(void *)(v1 + 56) + 32 * v14, (uint64_t)v6);
    v34[0] = v20;
    v34[1] = v21;
    sub_25C07A0B4((uint64_t)v6, (uint64_t)v33);
    swift_bridgeObjectRetain_n();
    sub_25C02FBF0((uint64_t)v34, v8);
    sub_25C02FCA0();
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();

      sub_25C058188();
      swift_release();
      return;
    }
    unint64_t v22 = sub_25C0B7B6C(v20, v21);
    unint64_t v23 = v22;
    if (v24)
    {
      uint64_t v9 = v6;
      uint64_t v10 = v1;
      uint64_t v11 = v8;
      uint64_t v12 = (uint64_t *)(v2[6] + 16 * v22);
      swift_bridgeObjectRelease();
      *uint64_t v12 = v20;
      v12[1] = v21;
      uint64_t v13 = v2[7];

      *(void *)(v13 + 8 * v23) = v32;
      uint64_t v8 = v11;
      uint64_t v1 = v10;
      unint64_t v6 = v9;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v22;
    uint64_t v25 = (uint64_t *)(v2[6] + 16 * v22);
    *uint64_t v25 = v20;
    v25[1] = v21;
    *(void *)(v2[7] + 8 * v22) = v32;
    uint64_t v26 = v2[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_35;
    }
    v2[2] = v28;
LABEL_8:
    int64_t v7 = v15;
    unint64_t v5 = v31;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

unint64_t sub_25C0C0964()
{
  unint64_t result = qword_26A589F70;
  if (!qword_26A589F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A589F70);
  }
  return result;
}

void Entitlements.check<A>(_:equals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *v4;
  Entitlements.value<A>(for:)(v10, v13, v14, (uint64_t)v12);
  if (!v5)
  {
    if ((sub_25C0EB7A8() & 1) == 0)
    {
      sub_25C0C0964();
      swift_allocError();
      *int64_t v15 = a1;
      v15[1] = a2;
      v15[2] = 0x4000000000000000;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, a4);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Entitlements.check(_:)(Swift::String a1)
{
  sub_25C0C0C34(a1._countAndFlagsBits, (uint64_t)a1._object, (uint64_t)v2);
  if (!v1) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
}

void sub_25C0C0C34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  error[4] = *(CFErrorRef *)MEMORY[0x263EF8340];
  uint64_t v7 = *v3;
  if (v7)
  {
    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_25C0B7B6C(a1, a2);
      if (v9)
      {
        sub_25C07A0B4(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v22);
        swift_bridgeObjectRelease();
        if (*((void *)&v23 + 1))
        {
          sub_25C031DA8(&v22, error);
          sub_25C031DA8(error, (_OWORD *)a3);
          return;
        }
      }
      else
      {
        long long v22 = 0u;
        long long v23 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
    sub_25C02FBF0((uint64_t)&v22, &qword_26A589818);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A10);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_25C0EED70;
    *(void *)(v14 + 32) = a1;
    *(void *)(v14 + 40) = a2;
    sub_25C0C0964();
    swift_allocError();
    *(void *)uint64_t v15 = v14;
    *(_OWORD *)(v15 + 8) = xmmword_25C0F35D0;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  SecTaskRef v10 = SecTaskCreateFromSelf(0);
  if (!v10)
  {
    sub_25C0C0964();
    swift_allocError();
    *int64_t v16 = 0;
    v16[1] = 0;
    void v16[2] = 0x8000000000000000;
LABEL_13:
    swift_willThrow();
    return;
  }
  uint64_t v11 = v10;
  error[0] = 0;
  uint64_t v12 = (__CFString *)sub_25C0EB828();
  CFTypeRef v13 = SecTaskCopyValueForEntitlement(v11, v12, error);

  if (v13)
  {
    *(void *)(a3 + 24) = swift_getObjectType();

    *(void *)a3 = v13;
  }
  else if (error[0] {
         && (*(CFErrorRef *)&long long v22 = error[0],
  }
             __swift_instantiateConcreteTypeFromMangledName(&qword_26A589F78),
             __swift_instantiateConcreteTypeFromMangledName(&qword_26A5894B0),
             (swift_dynamicCast() & 1) != 0))
  {
    sub_25C0C0964();
    swift_allocError();
    *unint64_t v17 = a1;
    v17[1] = a2;
    void v17[2] = (uint64_t)v21;
    swift_bridgeObjectRetain();
    id v18 = v21;
    swift_willThrow();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A10);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_25C0EED70;
    *(void *)(v19 + 32) = a1;
    *(void *)(v19 + 40) = a2;
    sub_25C0C0964();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(_OWORD *)(v20 + 8) = xmmword_25C0F35D0;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
}

void *assignWithCopy for Entitlements(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Entitlements(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Entitlements(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Entitlements(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Entitlements()
{
  return &type metadata for Entitlements;
}

void sub_25C0C1074(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
      swift_bridgeObjectRetain();
      id v5 = (id)a3;
      break;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      swift_bridgeObjectRetain();
      break;
    default:
      return;
  }
}

void destroy for Entitlements.Error(uint64_t a1)
{
}

void sub_25C0C1114(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
      swift_bridgeObjectRelease();

      break;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t *_s26SensitiveContentAnalysisUI12EntitlementsV5ErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_25C0C1074(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for Entitlements.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_25C0C1074(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  unint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_25C0C1114(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for Entitlements.Error(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_25C0C1114(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Entitlements.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 57) >> 4) | (8
                                                           * ((*(void *)(a1 + 16) >> 57) & 8 | *(void *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Entitlements.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_25C0C1340(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_25C0C135C(uint64_t result)
{
  *(void *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_25C0C136C(uint64_t result, uint64_t a2)
{
  if (a2 < 4)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    *(void *)unint64_t result = (a2 - 4);
    *(_OWORD *)(result + 8) = xmmword_25C0F35E0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Entitlements.Error()
{
  return &type metadata for Entitlements.Error;
}

void *initializeBufferWithCopyOfBuffer for Entitlements.Source(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Entitlements.Source()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for Entitlements.Source(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Entitlements.Source(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Entitlements.Source(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Entitlements.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_25C0C14F8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25C0C1510(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Entitlements.Source()
{
  return &type metadata for Entitlements.Source;
}

uint64_t sub_25C0C1540(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_25C0EC348();
      swift_bridgeObjectRetain();
      sub_25C0EB8C8();
      uint64_t v9 = sub_25C0EC368();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        CFTypeRef v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_25C0EC268() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_19:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x270FA5388](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_25C0C1854((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            long long v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_25C0C1854((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x26117E790](v23, -1, -1);
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          int64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_25C0EC268() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_25C0C1854(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_25C0C1A80(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_25C0EC348();
    swift_bridgeObjectRetain();
    sub_25C0EB8C8();
    uint64_t v14 = sub_25C0EC368();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    unint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_25C0EC268() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_25C0EC268() & 1) != 0)
        {
          unint64_t result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      unint64_t result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    unint64_t result = swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x263F8EE88];
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25C0C1A80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A588A20);
  uint64_t result = sub_25C0EBF48();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_25C0EC348();
    swift_bridgeObjectRetain();
    sub_25C0EB8C8();
    uint64_t result = sub_25C0EC368();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_25C0C1D18(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_25C0C1DB8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_25C0C1E9C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_25C04A234(0, v1, 0);
  uint64_t v2 = v23;
  uint64_t result = sub_25C0C1D18(v3);
  int64_t v5 = result;
  int v7 = v6;
  char v9 = v8 & 1;
  uint64_t v21 = v3;
  uint64_t v22 = v3 + 56;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v3 + 32))
  {
    if (((*(void *)(v22 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(v3 + 36) != v7) {
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    unint64_t v10 = (void *)sub_25C0EB828();
    unint64_t v11 = (void *)sub_25C0EB828();
    id v12 = objc_msgSend(v10, sel_stringByAppendingPathComponent_, v11);

    uint64_t v13 = sub_25C0EB858();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();

    unint64_t v17 = *(void *)(v23 + 16);
    unint64_t v16 = *(void *)(v23 + 24);
    if (v17 >= v16 >> 1) {
      sub_25C04A234((char *)(v16 > 1), v17 + 1, 1);
    }
    *(void *)(v23 + 16) = v17 + 1;
    uint64_t v18 = v23 + 16 * v17;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v15;
    uint64_t v3 = v21;
    uint64_t result = sub_25C0C1DB8(v5, v7, v9 & 1, v21);
    int64_t v5 = result;
    int v7 = v19;
    char v9 = v20 & 1;
    if (!--v1)
    {
      sub_25C0C2078(result, v19, v20 & 1);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_25C0C2078(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void type metadata accessor for CFError()
{
  if (!qword_26A589F90)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A589F90);
    }
  }
}

uint64_t (*sub_25C0C20E4())()
{
  return j__swift_endAccess;
}

uint64_t sub_25C0C2140@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0C24AC(&OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__content, &qword_26A588E10, a1);
}

uint64_t sub_25C0C215C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 144))();
}

uint64_t sub_25C0C21A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(a1, (uint64_t)v6, &qword_26A588E10);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 152))(v6);
}

uint64_t sub_25C0C2258(uint64_t a1)
{
  return sub_25C0C2678(a1, (uint64_t)&unk_25C0F36B0, (uint64_t)sub_25C0C2280, &qword_26A588E10);
}

uint64_t sub_25C0C2280()
{
  return sub_25C0C2748(&OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__content, &qword_26A588E10);
}

void (*sub_25C0C22A8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))(*(void *)v1 + 272))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_25C0C3B14(&qword_26A589F98, (void (*)(uint64_t))_s14ForwardedStateCMa);
  sub_25C0EA458();
  swift_release();
  v3[7] = sub_25C0C20E4();
  return sub_25C0C23DC;
}

void sub_25C0C23DC(void *a1)
{
}

uint64_t _s14ForwardedStateCMa()
{
  uint64_t result = qword_26A594560;
  if (!qword_26A594560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t (*sub_25C0C2434())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25C0C2490@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0C24AC(&OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__analysis, &qword_26A588E30, a1);
}

uint64_t sub_25C0C24AC@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v3 + 272))();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_25C02FB8C(v7, a3, a2);
}

uint64_t sub_25C0C2554(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 192))();
}

uint64_t sub_25C0C2598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C02FB8C(a1, (uint64_t)v6, &qword_26A588E30);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 200))(v6);
}

uint64_t sub_25C0C2650(uint64_t a1)
{
  return sub_25C0C2678(a1, (uint64_t)&unk_25C0F36D8, (uint64_t)sub_25C0C2720, &qword_26A588E30);
}

uint64_t sub_25C0C2678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v4 + 280))();
  swift_release();
  return sub_25C02FBF0(a1, a4);
}

uint64_t sub_25C0C2720()
{
  return sub_25C0C2748(&OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__analysis, &qword_26A588E30);
}

uint64_t sub_25C0C2748(void *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = v4 + *a1;
  swift_beginAccess();
  sub_25C0C5238(v5, v6, a2);
  return swift_endAccess();
}

void (*sub_25C0C27B8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))(*(void *)v1 + 272))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_25C0C3B14(&qword_26A589F98, (void (*)(uint64_t))_s14ForwardedStateCMa);
  sub_25C0EA458();
  swift_release();
  v3[7] = sub_25C0C2434();
  return sub_25C0C28EC;
}

void sub_25C0C28EC(void *a1)
{
}

void (*sub_25C0C28F8(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__delegate;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x26117E860](v5);
  return sub_25C0C297C;
}

void sub_25C0C297C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_25C0C29FC()
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v0 + 272))();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__delegate;
  swift_beginAccess();
  return MEMORY[0x26117E860](v1);
}

uint64_t sub_25C0C2A8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 240))();
  *a2 = result;
  return result;
}

uint64_t sub_25C0C2AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 248);
  uint64_t v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t sub_25C0C2B2C(uint64_t a1)
{
  swift_getKeyPath();
  uint64_t v4 = v1;
  uint64_t v5 = a1;
  (*(void (**)(void))(*(void *)v1 + 280))();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_25C0C2BD4()
{
  return swift_unknownObjectWeakAssign();
}

void (*sub_25C0C2C38(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))(*(void *)v1 + 272))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_25C0C3B14(&qword_26A589F98, (void (*)(uint64_t))_s14ForwardedStateCMa);
  sub_25C0EA458();
  swift_release();
  v3[7] = sub_25C0C28F8(v3);
  return sub_25C0C2D6C;
}

void sub_25C0C2D6C(void *a1)
{
}

void sub_25C0C2D78(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_25C0EA448();
  swift_release();

  free(v1);
}

uint64_t sub_25C0C2E04(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__content;
  uint64_t v4 = type metadata accessor for ScannableContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v2 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__analysis;
  uint64_t v6 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_unknownObjectWeakInit();
  sub_25C0EA468();
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t sub_25C0C2F04()
{
  return sub_25C0EA438();
}

uint64_t sub_25C0C2F8C()
{
  return sub_25C0EA428();
}

uint64_t sub_25C0C304C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25C0C3074()
{
  sub_25C02FBF0(v0 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__content, &qword_26A588E10);
  sub_25C02FBF0(v0 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__analysis, &qword_26A588E30);
  sub_25C0C304C(v0 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__delegate);
  uint64_t v1 = v0
     + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState___observationRegistrar;
  uint64_t v2 = sub_25C0EA478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_25C0C3154@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v33);
  uint64_t v30 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E18);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A008);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v12);
  int64_t v29 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_25C0EB308();
  __int16 v41 = 256;
  uint64_t v37 = (uint64_t)a1;
  unint64_t v38 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A000);
  uint64_t v15 = sub_25C0EB388();
  (*(void (**)(uint64_t))(*v35 + 144))(v15);
  swift_release();
  uint64_t v35 = a1;
  unint64_t v36 = a2;
  sub_25C0EB3A8();
  uint64_t v16 = v37;
  unint64_t v17 = v38;
  uint64_t v18 = v39;
  swift_getKeyPath();
  uint64_t v37 = v16;
  unint64_t v38 = v17;
  uint64_t v39 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A010);
  sub_25C0EB458();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = (uint64_t)a1;
  unint64_t v38 = a2;
  sub_25C0EB388();
  Swift::UInt v19 = v35[2];
  swift_release();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588C30);
  unint64_t v21 = sub_25C0C3570();
  uint64_t v22 = v29;
  sub_25C0634FC((uint64_t)v11, (uint64_t)v8, v19, v20, v21, v29);
  sub_25C02FBF0((uint64_t)v8, &qword_26A588E18);
  sub_25C02FBF0((uint64_t)v11, &qword_26A588E10);
  swift_release();
  uint64_t v37 = (uint64_t)a1;
  unint64_t v38 = a2;
  uint64_t v23 = sub_25C0EB388();
  uint64_t v24 = (uint64_t)v30;
  (*(void (**)(uint64_t))(*v35 + 192))(v23);
  swift_release();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  swift_retain();
  swift_retain();
  uint64_t v37 = v20;
  unint64_t v38 = v21;
  swift_getOpaqueTypeConformance2();
  sub_25C078824();
  uint64_t v26 = v31;
  sub_25C0EB218();
  swift_release();
  sub_25C02FBF0(v24, &qword_26A588E30);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v22, v26);
}

unint64_t sub_25C0C3570()
{
  unint64_t result = qword_26A588C88;
  if (!qword_26A588C88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A588C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A588C88);
  }
  return result;
}

uint64_t sub_25C0C35CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25C0EA578();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v33 - v15;
  *(void *)&long long v35 = a1;
  *((void *)&v35 + 1) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A000);
  uint64_t v17 = sub_25C0EB388();
  (*(void (**)(uint64_t))(*(void *)v33[0] + 192))(v17);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    *(void *)&long long v35 = a1;
    *((void *)&v35 + 1) = a2;
    uint64_t v20 = sub_25C0EB388();
    unint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v33[0] + 240))(v20);
    swift_release();
    if (v21)
    {
      if (objc_msgSend(v21, sel_respondsToSelector_, sel_analysisChanged_forContent_))
      {
        sub_25C031870(0, (unint64_t *)&qword_26A5884D8);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
        uint64_t v22 = (void *)sub_25C0EBC98();
        *(void *)&long long v35 = a1;
        *((void *)&v35 + 1) = a2;
        uint64_t v23 = sub_25C0EB388();
        (*(void (**)(uint64_t))(*(void *)v33[0] + 144))(v23);
        swift_release();
        uint64_t v24 = type metadata accessor for ScannableContent();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v6, 1, v24) == 1)
        {
          sub_25C02FBF0((uint64_t)v6, &qword_26A588E10);
          long long v35 = 0u;
          long long v36 = 0u;
        }
        else
        {
          *((void *)&v36 + 1) = v24;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v35);
          sub_25C0C51D4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1);
        }
        sub_25C02FB8C((uint64_t)&v35, (uint64_t)v33, &qword_26A589818);
        uint64_t v27 = v34;
        if (v34)
        {
          uint64_t v28 = __swift_project_boxed_opaque_existential_1(v33, v34);
          uint64_t v29 = *(void *)(v27 - 8);
          MEMORY[0x270FA5388](v28);
          uint64_t v31 = (char *)v33 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v29 + 16))(v31);
          uint64_t v32 = sub_25C0EC258();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v27);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        }
        else
        {
          uint64_t v32 = 0;
        }
        objc_msgSend(v21, sel_analysisChanged_forContent_, v22, v32);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        uint64_t v18 = &qword_26A589818;
        Swift::UInt v19 = (char *)&v35;
        return sub_25C02FBF0((uint64_t)v19, v18);
      }
      swift_unknownObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  uint64_t v18 = &qword_26A588E30;
  Swift::UInt v19 = v9;
  return sub_25C02FBF0((uint64_t)v19, v18);
}

uint64_t sub_25C0C3ACC()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25C0C3B0C()
{
  return sub_25C0C35CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25C0C3B14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0C3B5C@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0C3154(*(void **)v1, *(void *)(v1 + 8), a1);
}

uint64_t SCUISensitiveContentOverlayView.delegate.getter()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + OBJC_IVAR___SCUISensitiveContentOverlayView_state) + 240))();
}

uint64_t SCUISensitiveContentOverlayView.delegate.setter()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + OBJC_IVAR___SCUISensitiveContentOverlayView_state) + 248))();
}

id sub_25C0C3D08@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_delegate);
  *a2 = result;
  return result;
}

id sub_25C0C3D44(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDelegate_, *a1);
}

id sub_25C0C3D58(uint64_t a1)
{
  _s14ForwardedStateCMa();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__content;
  uint64_t v5 = type metadata accessor for ScannableContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtCE26SensitiveContentAnalysisUICSo31SCUISensitiveContentOverlayView14ForwardedState__analysis;
  uint64_t v7 = sub_25C0EA578();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_unknownObjectWeakInit();
  uint64_t v8 = v1;
  sub_25C0EA468();
  *(void *)(v3 + 16) = a1;
  *(void *)&v8[OBJC_IVAR___SCUISensitiveContentOverlayView_state] = v3;

  v28.receiver = v8;
  v28.super_class = (Class)SCUISensitiveContentOverlayView;
  id v9 = objc_msgSendSuper2(&v28, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  swift_retain();
  sub_25C0EB378();
  id v10 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26A58A020));
  uint64_t v11 = (void *)sub_25C0EA8C8();
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_addSubview_, v11);
  uint64_t v12 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A5895B0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_25C0F1EA0;
  id v14 = objc_msgSend(v11, sel_topAnchor);
  id v15 = objc_msgSend(v9, sel_topAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v13 + 32) = v16;
  id v17 = objc_msgSend(v11, sel_bottomAnchor);
  id v18 = objc_msgSend(v9, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v13 + 40) = v19;
  id v20 = objc_msgSend(v11, sel_trailingAnchor);
  id v21 = objc_msgSend(v9, sel_trailingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(void *)(v13 + 48) = v22;
  id v23 = objc_msgSend(v11, sel_leadingAnchor);
  id v24 = objc_msgSend(v9, sel_leadingAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(void *)(v13 + 56) = v25;
  sub_25C0EB9E8();
  sub_25C031870(0, &qword_26A5895B8);
  uint64_t v26 = (void *)sub_25C0EB9B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_activateConstraints_, v26);

  return v9;
}

void __swiftcall SCUISensitiveContentOverlayView.init(coder:)(SCUISensitiveContentOverlayView_optional *__return_ptr retstr, NSCoder coder)
{
}

void SCUISensitiveContentOverlayView.init(coder:)()
{
}

uint64_t sub_25C0C4274(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v22 - v12);
  if (a2)
  {
    *uint64_t v13 = a2;
    uint64_t v14 = type metadata accessor for ScannableContent();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  }
  else
  {
    uint64_t v15 = type metadata accessor for ScannableContent();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR___SCUISensitiveContentOverlayView_state);
  sub_25C02FB8C((uint64_t)v13, (uint64_t)v11, &qword_26A588E10);
  id v17 = *(void (**)(char *))(*(void *)v16 + 152);
  id v18 = a2;
  v17(v11);
  if (a1)
  {
    sub_25C0EBC88();
    uint64_t v19 = sub_25C0EA578();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_25C0EA578();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  }
  (*(void (**)(char *))(*(void *)v16 + 200))(v7);
  return sub_25C02FBF0((uint64_t)v13, &qword_26A588E10);
}

uint64_t sub_25C0C4598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25C0EA238();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589EC0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  id v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v26 - v18;
  sub_25C02FB8C(a2, (uint64_t)v13, &qword_26A589EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    uint64_t v20 = type metadata accessor for ScannableContent();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v19, v10, v7);
    uint64_t v21 = type metadata accessor for ScannableContent();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 0, 1, v21);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v22 = *(void *)(v26[1] + OBJC_IVAR___SCUISensitiveContentOverlayView_state);
  sub_25C02FB8C((uint64_t)v19, (uint64_t)v17, &qword_26A588E10);
  (*(void (**)(char *))(*(void *)v22 + 152))(v17);
  if (a1)
  {
    sub_25C0EBC88();
    uint64_t v23 = sub_25C0EA578();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 0, 1, v23);
  }
  else
  {
    uint64_t v24 = sub_25C0EA578();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 1, 1, v24);
  }
  (*(void (**)(char *))(*(void *)v22 + 200))(v6);
  return sub_25C02FBF0((uint64_t)v19, &qword_26A588E10);
}

uint64_t sub_25C0C4ACC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E30);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A588E10);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = type metadata accessor for ScannableContent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR___SCUISensitiveContentOverlayView_state);
  sub_25C02FB8C((uint64_t)v11, (uint64_t)v9, &qword_26A588E10);
  (*(void (**)(char *))(*(void *)v13 + 152))(v9);
  if (a1)
  {
    sub_25C0EBC88();
    uint64_t v14 = sub_25C0EA578();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 0, 1, v14);
  }
  else
  {
    uint64_t v15 = sub_25C0EA578();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
  }
  (*(void (**)(char *))(*(void *)v13 + 200))(v5);
  return sub_25C02FBF0((uint64_t)v11, &qword_26A588E10);
}

void __swiftcall SCUISensitiveContentOverlayView.init(frame:)(SCUISensitiveContentOverlayView *__return_ptr retstr, __C::CGRect frame)
{
  double height = frame.size.height;
  double width = frame.size.width;
  double y = frame.origin.y;
  double x = frame.origin.x;
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v6, sel_initWithFrame_, x, y, width, height);
}

void SCUISensitiveContentOverlayView.init(frame:)()
{
}

uint64_t sub_25C0C4E48()
{
  return swift_getOpaqueTypeConformance2();
}

char *keypath_get_selector_delegate()
{
  return sel_delegate;
}

uint64_t sub_25C0C4E70()
{
  return _s14ForwardedStateCMa();
}

void sub_25C0C4E78()
{
  sub_25C0C4FCC(319, &qword_26A588E50, (void (*)(uint64_t))type metadata accessor for ScannableContent);
  if (v0 <= 0x3F)
  {
    sub_25C0C4FCC(319, &qword_26A58A028, MEMORY[0x263F175F0]);
    if (v1 <= 0x3F)
    {
      sub_25C0EA478();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_25C0C4FCC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25C0EBE08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_25C0C5024(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *_s11OverlayViewVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s11OverlayViewVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *_s11OverlayViewVMa()
{
  return &_s11OverlayViewVN;
}

uint64_t type metadata accessor for SCUISensitiveContentOverlayView(uint64_t a1)
{
  return sub_25C031870(a1, qword_26A594570);
}

uint64_t sub_25C0C5120()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0C51D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScannableContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25C0C5238(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t Array.lastIndex.getter()
{
  uint64_t result = MEMORY[0x26117D3A0]();
  if (__OFSUB__(0, result))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (result)
  {
    if (__OFSUB__(result--, 1)) {
      goto LABEL_6;
    }
  }
  return result;
}

Swift::Int __swiftcall Array.index(_:boundedOffsetBy:)(Swift::Int _, Swift::Int boundedOffsetBy)
{
  if (boundedOffsetBy < 1)
  {
    if (!__OFSUB__(0, _))
    {
      if (_ >= 0 && -_ > boundedOffsetBy) {
        return 0;
      }
LABEL_15:
      Swift::Int result = _ + boundedOffsetBy;
      if (!__OFADD__(_, boundedOffsetBy)) {
        return result;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v4 = MEMORY[0x26117D3A0]();
  Swift::Int v5 = v4 - _;
  if (__OFSUB__(v4, _))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v5 & 0x8000000000000000) == 0 && v5 < boundedOffsetBy)
  {
LABEL_20:
    JUMPOUT(0x26117D3A0);
  }
  Swift::Int result = _ + boundedOffsetBy;
  if (__OFADD__(_, boundedOffsetBy))
  {
    __break(1u);
    goto LABEL_15;
  }
  return result;
}

uint64_t Array.keeping(upTo:beforeAndAfter:)(Swift::Int a1, Swift::Int a2, uint64_t a3)
{
  return a3;
}

Swift::Void __swiftcall Array.keep(upTo:beforeAndAfter:)(Swift::Int upTo, Swift::Int beforeAndAfter)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v3;
  swift_getWitnessTable();
  sub_25C0EBB58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A030);
  if (sub_25C0EBBB8())
  {
    uint64_t v8 = *(void *)(v4 + 16);
    Swift::Int v9 = Array.index(_:boundedOffsetBy:)(beforeAndAfter, 1);
    if (v9 < beforeAndAfter)
    {
      __break(1u);
    }
    else
    {
      Swift::Int v10 = Array.index(_:boundedOffsetBy:)(v9, upTo);
      if (!__OFSUB__(0, upTo))
      {
        uint64_t v11 = v10;
        Swift::Int v12 = Array.index(_:boundedOffsetBy:)(beforeAndAfter, -upTo);
        if (MEMORY[0x26117D3A0](v7, v8) >= v11)
        {
          swift_getWitnessTable();
          sub_25C0EBBA8();
          if ((v12 & 0x8000000000000000) == 0)
          {
            sub_25C0EBBA8();
            return;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  *uint64_t v3 = sub_25C0EBA08();
}

uint64_t sub_25C0C55A4@<X0>(uint64_t *a1@<X8>)
{
  sub_25C031870(0, &qword_26A58A050);
  uint64_t result = sub_25C0EBFA8();
  *a1 = result;
  return result;
}

uint64_t sub_25C0C55F8@<X0>(uint64_t *a1@<X8>)
{
  sub_25C031870(0, &qword_26A58A048);
  uint64_t result = sub_25C0EBFA8();
  *a1 = result;
  return result;
}

uint64_t SCUIMoreHelpContextMenuSwiftUI.SCUIHelpMenuActions.init(messageSomeoneAction:blockContactAction:blockContactsAction:moreHelpAction:leaveChatAction:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t SCUIMoreHelpContextMenuSwiftUI.init(options:contentView:showTitle:actions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, long long *a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v12 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(self, sel_getCurrentInterventionType);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, a5);
  long long v16 = a4[1];
  v20[0] = *a4;
  v20[1] = v16;
  long long v17 = a4[3];
  v20[2] = a4[2];
  v20[3] = v17;
  v20[4] = a4[4];
  double v18 = SCUIMoreHelpContextMenuSwiftUI.init(options:interventionType:contentView:showTitle:actions:)(a1, (uint64_t)v15, (uint64_t)v14, a3, v20, a5, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t, double))(v12 + 8))(a2, a5, v18);
}

double SCUIMoreHelpContextMenuSwiftUI.init(options:interventionType:contentView:showTitle:actions:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, long long *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  int v32 = a4;
  uint64_t v31 = a3;
  uint64_t v12 = sub_25C0EA3C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25C0EA3B8();
  long long v16 = (void *)sub_25C0EA368();
  id v17 = objc_msgSend(self, sel_modelWithOptions_contextDictionary_interventionType_locale_, a1, 0, a2, v16);

  double v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  long long v19 = *a5;
  long long v29 = a5[1];
  long long v30 = v19;
  long long v20 = a5[2];
  long long v27 = a5[3];
  long long v28 = v20;
  long long v26 = a5[4];
  v18(v15, v12);
  *(void *)a7 = v17;
  uint64_t v21 = (int *)type metadata accessor for SCUIMoreHelpContextMenuSwiftUI();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[v21[9]], v31, a6);
  a7[v21[10]] = v32;
  uint64_t v22 = &a7[v21[11]];
  long long v23 = v29;
  *(_OWORD *)uint64_t v22 = v30;
  *((_OWORD *)v22 + 1) = v23;
  long long v24 = v27;
  *((_OWORD *)v22 + 2) = v28;
  *((_OWORD *)v22 + 3) = v24;
  double result = *(double *)&v26;
  *((_OWORD *)v22 + 4) = v26;
  return result;
}

uint64_t type metadata accessor for SCUIMoreHelpContextMenuSwiftUI()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SCUIMoreHelpContextMenuSwiftUI.body.getter@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A58A038);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v27 = v7;
  uint64_t v28 = sub_25C0583D0(&qword_26A58A040, &qword_26A58A038);
  uint64_t v8 = sub_25C0EAFD8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v18[-v13];
  uint64_t v22 = v5;
  uint64_t v23 = v7;
  uint64_t v24 = v2;
  uint64_t v19 = v5;
  uint64_t v20 = v7;
  uint64_t v21 = v2;
  sub_25C0EAFC8();
  swift_getWitnessTable();
  id v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
  v15(v14, v12, v8);
  long long v16 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  v15(a2, v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v16)(v14, v8);
}

uint64_t sub_25C0C5BC8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SCUIMoreHelpContextMenuSwiftUI();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v47 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A058);
  uint64_t v12 = *(void *)(v53 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v45 - v15;
  long long v16 = *a1;
  if (*((unsigned char *)a1 + *(int *)(v8 + 40)) == 1)
  {
    id v46 = *a1;
    id v17 = objc_msgSend(v16, sel_title);
    uint64_t v45 = v8;
    double v18 = v11;
    uint64_t v19 = v12;
    uint64_t v20 = a2;
    id v21 = v17;
    uint64_t v22 = v9;
    uint64_t v23 = a1;
    uint64_t v24 = a3;
    uint64_t v25 = sub_25C0EB858();
    uint64_t v27 = v26;

    a2 = v20;
    uint64_t v12 = v19;
    uint64_t v11 = v18;
    uint64_t v8 = v45;
    uint64_t v57 = v25;
    uint64_t v58 = v27;
    a3 = v24;
    a1 = v23;
    uint64_t v9 = v22;
    sub_25C027054();
    uint64_t v55 = sub_25C0EB048();
    uint64_t v50 = v29;
    uint64_t v51 = v28;
    uint64_t v49 = v30 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    long long v16 = v46;
    int v48 = 1;
  }
  else
  {
    uint64_t KeyPath = 0;
    uint64_t v55 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v49 = 0;
    int v48 = 0;
  }
  id v31 = objc_msgSend(v16, sel_actions);
  sub_25C031870(0, &qword_26A58A048);
  uint64_t v32 = sub_25C0EB9D8();

  uint64_t v57 = v32;
  (*(void (**)(char *, void **, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v33 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a2;
  *(void *)(v34 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v34 + v33, v11, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A060);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  sub_25C0583D0(&qword_26A58A068, &qword_26A58A060);
  sub_25C0583D0(&qword_26A589560, &qword_26A589568);
  sub_25C0C7428();
  long long v35 = v56;
  sub_25C0EB4A8();
  long long v36 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  unint64_t v38 = v52;
  uint64_t v37 = v53;
  v36(v52, v35, v53);
  uint64_t v39 = v50;
  uint64_t v40 = v51;
  *(void *)a4 = v55;
  *(void *)(a4 + 8) = v40;
  LOBYTE(v32) = v49;
  *(void *)(a4 + 16) = v49;
  *(void *)(a4 + 24) = v39;
  *(void *)(a4 + 32) = KeyPath;
  *(void *)(a4 + 40) = 0;
  *(unsigned char *)(a4 + 48) = v48;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A078);
  v36((char *)(a4 + *(int *)(v41 + 48)), v38, v37);
  uint64_t v42 = v55;
  sub_25C0C7490(v55, v40, v32, v39);
  id v43 = *(void (**)(char *, uint64_t))(v12 + 8);
  v43(v56, v37);
  v43(v38, v37);
  return sub_25C0C74E0(v42, v40, v32, v39);
}

uint64_t sub_25C0C6060@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0C5BC8(*(void ***)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25C0C606C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v30 = a3;
  uint64_t v29 = type metadata accessor for SCUIMoreHelpContextMenuSwiftUI();
  uint64_t v6 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A080);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589568);
  uint64_t v12 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  id v16 = objc_msgSend(v15, sel_title);
  uint64_t v17 = sub_25C0EB858();
  uint64_t v19 = v18;

  uint64_t v33 = v17;
  uint64_t v34 = v19;
  if (objc_msgSend(v15, sel_destructive)) {
    sub_25C0EA688();
  }
  else {
    sub_25C0EA698();
  }
  uint64_t v20 = sub_25C0EA6A8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
  uint64_t v21 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v27, v29);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = v31;
  *((void *)v23 + 2) = v30;
  *((void *)v23 + 3) = v24;
  *((void *)v23 + 4) = v15;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v23[v22], v8, v21);
  sub_25C027054();
  id v25 = v15;
  sub_25C0EB3D8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v32, v14, v28);
}

uint64_t sub_25C0C636C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for SCUIMoreHelpContextMenuSwiftUI() + 36);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10(v8, v9, a2);
  v10(a3, (uint64_t)v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_25C0C6470@<X0>(char *a1@<X8>)
{
  return sub_25C0C636C(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_25C0C647C()
{
  return MEMORY[0x263F8D1F8];
}

uint64_t sub_25C0C6488()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25C0C64D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_25C0C6584(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  int v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  uint64_t v8 = (char *)*a2;
  *a1 = *a2;
  if (v5 > 7 || v7 != 0 || ((((v5 + 8) & ~v5) + v6) & 0xFFFFFFFFFFFFFFF8) + 88 > 0x18)
  {
    uint64_t v11 = (void **)&v8[(v5 & 0xF8 ^ 0x1F8) & (v5 + 16)];
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = ((unint64_t)a1 + v5 + 8) & ~v5;
    uint64_t v13 = ((unint64_t)a2 + v5 + 8) & ~v5;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v15 = v8;
    v14(v12, v13, v3);
    *(unsigned char *)(v12 + v6) = *(unsigned char *)(v13 + v6);
    id v16 = (void *)((v12 + v6) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)((v13 + v6) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = v17[2];
    v16[1] = v17[1];
    void v16[2] = v18;
    uint64_t v19 = v17[4];
    void v16[3] = v17[3];
    void v16[4] = v19;
    uint64_t v20 = v17[6];
    v16[5] = v17[5];
    v16[6] = v20;
    uint64_t v21 = v17[8];
    v16[7] = v17[7];
    v16[8] = v21;
    uint64_t v22 = v17[10];
    v16[9] = v17[9];
    v16[10] = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_25C0C66F8(id *a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(((unint64_t)a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void **sub_25C0C67AC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  id v12 = v4;
  v7(v10, v11, v5);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = v13 + v10;
  uint64_t v15 = v13 + v11;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  v14 &= 0xFFFFFFFFFFFFFFF8;
  v15 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 16);
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = v16;
  uint64_t v17 = *(void *)(v15 + 32);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  *(void *)(v14 + 32) = v17;
  uint64_t v18 = *(void *)(v15 + 48);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  *(void *)(v14 + 48) = v18;
  uint64_t v19 = *(void *)(v15 + 64);
  *(void *)(v14 + 56) = *(void *)(v15 + 56);
  *(void *)(v14 + 64) = v19;
  uint64_t v20 = *(void *)(v15 + 80);
  *(void *)(v14 + 72) = *(void *)(v15 + 72);
  *(void *)(v14 + 80) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void **sub_25C0C68A4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  int v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)a1 + v11 + 8) & ~v11;
  uint64_t v13 = ((unint64_t)a2 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 40);
  unint64_t v15 = v14 + v12;
  unint64_t v16 = v14 + v13;
  *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
  uint64_t v17 = (void *)(v15 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(v16 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 16);
  v17[1] = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 8);
  void v17[2] = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = v18[4];
  v17[3] = v18[3];
  v17[4] = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = v18[6];
  v17[5] = v18[5];
  v17[6] = v21;
  swift_retain();
  swift_release();
  uint64_t v22 = v18[8];
  v17[7] = v18[7];
  v17[8] = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = v18[10];
  v17[9] = v18[9];
  v17[10] = v23;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_25C0C69CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = v9 + v7;
  uint64_t v11 = v9 + v8;
  *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  v11 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
  long long v12 = *(_OWORD *)(v11 + 72);
  long long v13 = *(_OWORD *)(v11 + 56);
  long long v14 = *(_OWORD *)(v11 + 40);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
  *(_OWORD *)(v10 + 40) = v14;
  *(_OWORD *)(v10 + 56) = v13;
  *(_OWORD *)(v10 + 72) = v12;
  return a1;
}

void **sub_25C0C6A90(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  unint64_t v13 = v12 + v10;
  unint64_t v14 = v12 + v11;
  *(unsigned char *)unint64_t v13 = *(unsigned char *)v14;
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)((v13 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(v16 + 24);
  swift_release();
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
  swift_release();
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
  swift_release();
  *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
  swift_release();
  return a1;
}

uint64_t sub_25C0C6B8C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8) + 88;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25C0C6CE0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_25C0C6CF4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8) + 88;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v18 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v18 = a2 - 1;
              }
              *(void *)a1 = v18;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 8) & ~v9) + *(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)) & 0xFFFFFFF8) == 0xFFFFFFA8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 8) & ~v9) + *(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)) & 0xFFFFFFF8) == 0xFFFFFFA8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 8) & ~v9) + *(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)) & 0xFFFFFFF8) != 0xFFFFFFA8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x25C0C6EE0);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_25C0C6F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25C0C6F10()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_25C0C6F64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_25C0C7000(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_25C0C70A8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t sub_25C0C7120(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25C0C7168(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SCUIMoreHelpContextMenuSwiftUI.SCUIHelpMenuActions()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25C0C71D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25C0C726C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for SCUIMoreHelpContextMenuSwiftUI() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;

  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v2[11], v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25C0C738C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for SCUIMoreHelpContextMenuSwiftUI() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_25C0C606C(a1, v8, v5, v6, a2);
}

unint64_t sub_25C0C7428()
{
  unint64_t result = qword_26A58A070;
  if (!qword_26A58A070)
  {
    sub_25C031870(255, &qword_26A58A048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A070);
  }
  return result;
}

uint64_t sub_25C0C7490(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_25C05CE24(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_25C0C74E0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_25C05CED4(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25C0C7530()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for SCUIMoreHelpContextMenuSwiftUI() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;

  uint64_t v7 = (id *)(v0 + v4);
  (*(void (**)(char *, uint64_t))(*(void *)(v1 - 8) + 8))((char *)v7 + v2[11], v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_25C0C7658()
{
  uint64_t v1 = type metadata accessor for SCUIMoreHelpContextMenuSwiftUI();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  id result = objc_msgSend(*(id *)(v0 + 32), sel_actionID);
  uint64_t v4 = v0 + ((v2 + 40) & ~v2);
  switch((unint64_t)result)
  {
    case 1uLL:
      uint64_t v5 = (uint64_t (**)(void))(v4 + *(int *)(v1 + 44));
      goto LABEL_7;
    case 2uLL:
      uint64_t v5 = (uint64_t (**)(void))(v4 + *(int *)(v1 + 44) + 48);
      goto LABEL_7;
    case 3uLL:
      uint64_t v5 = (uint64_t (**)(void))(v4 + *(int *)(v1 + 44) + 64);
      goto LABEL_7;
    case 4uLL:
      uint64_t v5 = (uint64_t (**)(void))(v4 + *(int *)(v1 + 44) + 16);
      goto LABEL_7;
    case 5uLL:
      uint64_t v5 = (uint64_t (**)(void))(v4 + *(int *)(v1 + 44) + 32);
LABEL_7:
      id result = (id)(*v5)();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for ReportOverviewScreen(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A594D20);
}

uint64_t type metadata accessor for ReportOverviewScreen._Alert(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A594D30);
}

uint64_t sub_25C0C77C0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A090);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReportOverviewScreen(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A0B0);
  sub_25C0EB388();
  uint64_t v5 = type metadata accessor for ReportOverviewScreen._Alert(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) != 1;
  uint64_t result = sub_25C02FBF0((uint64_t)v4, &qword_26A58A090);
  *a1 = v6;
  return result;
}

uint64_t sub_25C0C78B4(unsigned char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A090);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v10 - v7;
  if (*a1 == 1)
  {
    uint64_t v9 = type metadata accessor for ReportOverviewScreen._Alert(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for ReportOverviewScreen(0);
    sub_25C02FB8C((uint64_t)v8, (uint64_t)v5, &qword_26A58A090);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A0B0);
    sub_25C0EB398();
    return sub_25C02FBF0((uint64_t)v8, &qword_26A58A090);
  }
  return result;
}

uint64_t sub_25C0C79EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v35 = sub_25C0EBB08();
  uint64_t v2 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ReportOverviewScreen(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(void))(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  v33[2] = v7;
  uint64_t v8 = (char *)v33 - (((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A098);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A0A0);
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v12);
  int v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = v1;
  sub_25C0C7E34(v1, (uint64_t)v11);
  v33[0] = type metadata accessor for ReportOverviewScreen;
  sub_25C0C92D4((uint64_t)v1, (uint64_t)v8, type metadata accessor for ReportOverviewScreen);
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  v33[1] = (uint64_t (*)(void))(v15 | 7);
  uint64_t v16 = swift_allocObject();
  sub_25C0CB3E8((uint64_t)v8, v16 + ((v15 + 16) & ~v15), type metadata accessor for ReportOverviewScreen);
  sub_25C0EBAE8();
  uint64_t v17 = *(int *)(v12 + 36);
  uint64_t v18 = (uint64_t)v14;
  uint64_t v34 = v14;
  unint64_t v19 = &v14[v17];
  uint64_t v20 = sub_25C0EA868();
  uint64_t v21 = v35;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v19[*(int *)(v20 + 20)], v4, v35);
  *(void *)unint64_t v19 = &unk_26A58A0B8;
  *((void *)v19 + 1) = v16;
  sub_25C02FB8C((uint64_t)v11, v18, &qword_26A58A098);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  sub_25C02FBF0((uint64_t)v11, &qword_26A58A098);
  uint64_t v22 = (uint64_t)v38;
  uint64_t v23 = v33[0];
  sub_25C0C92D4((uint64_t)v38, (uint64_t)v8, v33[0]);
  sub_25C0EBAD8();
  uint64_t v24 = sub_25C0EBAC8();
  uint64_t v25 = (v15 + 32) & ~v15;
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = MEMORY[0x263F8F500];
  *(void *)(v26 + 16) = v24;
  *(void *)(v26 + 24) = v27;
  uint64_t v28 = v27;
  sub_25C0CB3E8((uint64_t)v8, v26 + v25, type metadata accessor for ReportOverviewScreen);
  sub_25C0C92D4(v22, (uint64_t)v8, v23);
  uint64_t v29 = sub_25C0EBAC8();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = v28;
  sub_25C0CB3E8((uint64_t)v8, v30 + v25, type metadata accessor for ReportOverviewScreen);
  sub_25C0EB478();
  uint64_t v39 = (uint64_t)v38;
  sub_25C0CA530();
  uint64_t v31 = (uint64_t)v34;
  sub_25C0EB188();
  swift_release();
  swift_release();
  return sub_25C02FBF0(v31, &qword_26A58A0A0);
}

uint64_t sub_25C0C7E34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = a2;
  uint64_t v81 = type metadata accessor for ReportOverviewScreen(0);
  unint64_t v76 = *(uint64_t (**)(uint64_t))(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v83 = v3;
  uint64_t v77 = (uint64_t)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A589168);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v79 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v84 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReportScreen(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v82 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for _ReportOverviewScreen(0);
  MEMORY[0x270FA5388](v88);
  uint64_t v78 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A508);
  MEMORY[0x270FA5388](v86);
  uint64_t v87 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898E8);
  uint64_t v73 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Report.Evidence(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v74 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v68 - v21;
  uint64_t v24 = *a1;
  uint64_t v23 = a1[1];
  uint64_t v80 = a1;
  uint64_t v92 = v24;
  uint64_t v93 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
  uint64_t v25 = sub_25C0EB388();
  (*(void (**)(uint64_t))(*(void *)v90 + 144))(v25);
  swift_release();
  uint64_t v72 = v18;
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v75 = v17;
  if (v26(v16, 1, v17) == 1)
  {
    sub_25C02FBF0((uint64_t)v16, (uint64_t *)&unk_26A589590);
    sub_25C0EA798();
    uint64_t v27 = v73;
    uint64_t v28 = v85;
    (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v87, v13, v85);
    swift_storeEnumTagMultiPayload();
    sub_25C0CA704(&qword_26A58A0E0, (void (*)(uint64_t))type metadata accessor for _ReportOverviewScreen);
    sub_25C0583D0(&qword_26A58A0E8, &qword_26A5898E8);
    sub_25C0EAD28();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  }
  else
  {
    char v69 = type metadata accessor for Report.Evidence;
    uint64_t v30 = (uint64_t)v22;
    unint64_t v71 = v22;
    sub_25C0CB3E8((uint64_t)v16, (uint64_t)v22, type metadata accessor for Report.Evidence);
    uint64_t v31 = (uint64_t)v80;
    uint64_t v32 = v81;
    sub_25C0C92D4((uint64_t)v80 + *(int *)(v81 + 20), v82, type metadata accessor for ReportScreen);
    uint64_t v92 = v24;
    uint64_t v93 = v23;
    sub_25C0EB388();
    sub_25C0C92D4(v90 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, v84, type metadata accessor for Report.Authority);
    swift_release();
    uint64_t v33 = v31;
    uint64_t v34 = (uint64_t *)(v31 + *(int *)(v32 + 24));
    uint64_t v35 = v34[1];
    uint64_t v73 = *v34;
    uint64_t v70 = v35;
    uint64_t v68 = type metadata accessor for ReportOverviewScreen;
    uint64_t v36 = v77;
    sub_25C0C92D4(v33, v77, type metadata accessor for ReportOverviewScreen);
    uint64_t v37 = v74;
    sub_25C0C92D4(v30, v74, type metadata accessor for Report.Evidence);
    sub_25C0EBAD8();
    swift_retain();
    uint64_t v38 = sub_25C0EBAC8();
    uint64_t v39 = *((unsigned __int8 *)v76 + 80);
    uint64_t v40 = (v39 + 32) & ~v39;
    unint64_t v41 = (v40 + v83 + *(unsigned __int8 *)(v72 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = MEMORY[0x263F8F500];
    *(void *)(v42 + 16) = v38;
    *(void *)(v42 + 24) = v43;
    unint64_t v76 = type metadata accessor for ReportOverviewScreen;
    sub_25C0CB3E8(v36, v42 + v40, type metadata accessor for ReportOverviewScreen);
    sub_25C0CB3E8(v37, v42 + v41, v69);
    uint64_t v44 = (uint64_t)v80;
    uint64_t v45 = v68;
    sub_25C0C92D4((uint64_t)v80, v36, v68);
    uint64_t v46 = sub_25C0EBAC8();
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v46;
    *(void *)(v47 + 24) = MEMORY[0x263F8F500];
    int v48 = v76;
    sub_25C0CB3E8(v36, v47 + v40, v76);
    uint64_t v49 = (uint64_t)v79;
    sub_25C0EB478();
    uint64_t v50 = v44;
    uint64_t v51 = v44 + *(int *)(v81 + 28);
    char v52 = *(unsigned char *)v51;
    uint64_t v53 = *(void *)(v51 + 8);
    LOBYTE(v90) = v52;
    uint64_t v91 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A4F0);
    sub_25C0EB3A8();
    uint64_t v55 = v92;
    uint64_t v54 = v93;
    LODWORD(v81) = v94;
    sub_25C0C92D4(v50, v36, v45);
    uint64_t v56 = swift_allocObject();
    sub_25C0CB3E8(v36, v56 + ((v39 + 16) & ~v39), v48);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v58 = (int *)v88;
    uint64_t v59 = (uint64_t)v78;
    *(void *)&v78[*(int *)(v88 + 44)] = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A5890F0);
    swift_storeEnumTagMultiPayload();
    sub_25C0CB3E8(v82, v59, type metadata accessor for ReportScreen);
    sub_25C0CB3E8(v84, v59 + v58[5], type metadata accessor for Report.Authority);
    unint64_t v60 = (void *)(v59 + v58[6]);
    uint64_t v61 = v70;
    *unint64_t v60 = v73;
    v60[1] = v61;
    sub_25C0516EC(v49, v59 + v58[7], &qword_26A589168);
    sub_25C0842F0();
    sub_25C0EA728();
    uint64_t v62 = v59 + v58[9];
    *(void *)uint64_t v62 = v55;
    *(void *)(v62 + 8) = v54;
    *(unsigned char *)(v62 + 16) = v81;
    int64_t v63 = (uint64_t (**)(uint64_t))(v59 + v58[10]);
    *int64_t v63 = sub_25C0E6F2C;
    v63[1] = (uint64_t (*)(uint64_t))v56;
    uint64_t v64 = v59 + v58[12];
    LOBYTE(v90) = 0;
    sub_25C0EB378();
    uint64_t v65 = v93;
    *(unsigned char *)uint64_t v64 = v92;
    *(void *)(v64 + 8) = v65;
    uint64_t v66 = v59 + v58[13];
    LOBYTE(v90) = 0;
    sub_25C0EB378();
    uint64_t v67 = v93;
    *(unsigned char *)uint64_t v66 = v92;
    *(void *)(v66 + 8) = v67;
    sub_25C0C92D4(v59, v87, type metadata accessor for _ReportOverviewScreen);
    swift_storeEnumTagMultiPayload();
    sub_25C0CA704(&qword_26A58A0E0, (void (*)(uint64_t))type metadata accessor for _ReportOverviewScreen);
    sub_25C0583D0(&qword_26A58A0E8, &qword_26A5898E8);
    sub_25C0EAD28();
    sub_25C0D14C8(v59, type metadata accessor for _ReportOverviewScreen);
    return sub_25C0D14C8((uint64_t)v71, type metadata accessor for Report.Evidence);
  }
}

uint64_t sub_25C0C8898@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Report.Evidence(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[1];
  v16[1] = *a1;
  void v16[2] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
  uint64_t v14 = sub_25C0EB388();
  (*(void (**)(uint64_t))(*(void *)v16[3] + 144))(v14);
  swift_release();
  sub_25C0C92D4(a2, (uint64_t)v9, type metadata accessor for Report.Evidence);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_25C0CB3E8((uint64_t)v9, a3, type metadata accessor for Report.Evidence);
    return sub_25C02FBF0((uint64_t)v12, (uint64_t *)&unk_26A589590);
  }
  else
  {
    sub_25C0D14C8((uint64_t)v9, type metadata accessor for Report.Evidence);
    return sub_25C0CB3E8((uint64_t)v12, a3, type metadata accessor for Report.Evidence);
  }
}

uint64_t sub_25C0C8AA8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A589590);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2[1];
  v11[1] = *a2;
  v11[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
  sub_25C0EB388();
  uint64_t v8 = v11[3];
  sub_25C0C92D4(a1, (uint64_t)v6, type metadata accessor for Report.Evidence);
  uint64_t v9 = type metadata accessor for Report.Evidence(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 0, 1, v9);
  (*(void (**)(char *))(*(void *)v8 + 152))(v6);
  return swift_release();
}

uint64_t sub_25C0C8BD8(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ReportOverviewScreen(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ReportScreen.Control(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = a2[1];
  unint64_t v20 = *a2;
  unint64_t v21 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
  sub_25C0EB388();
  unint64_t v11 = *(void *)(v17 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType);
  swift_release();
  if (v11 > 2)
  {
    sub_25C0C92D4((uint64_t)a2, (uint64_t)v6, type metadata accessor for ReportOverviewScreen);
    unint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_25C0EBF78();
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xD00000000000001BLL;
    unint64_t v21 = 0x800000025C0F72B0;
    uint64_t v14 = v6[1];
    uint64_t v17 = *v6;
    uint64_t v18 = v14;
    sub_25C0EB388();
    uint64_t v15 = *(void *)(v19 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_interventionType);
    swift_release();
    uint64_t v17 = v15;
    sub_25C0EC238();
    sub_25C0EB8E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25C0EC078();
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void (**)(char *))((char *)a2 + *(int *)(v4 + 24));
    sub_25C0C92D4(a1, (uint64_t)v9, type metadata accessor for Report.Evidence);
    type metadata accessor for ReportScreen(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v12(v9);
    return sub_25C0D14C8((uint64_t)v9, type metadata accessor for ReportScreen.Control);
  }
  return result;
}

uint64_t sub_25C0C8E6C(uint64_t a1)
{
  v1[5] = a1;
  void v1[6] = type metadata accessor for ReportScreen.Control(0);
  v1[7] = swift_task_alloc();
  sub_25C0EBAD8();
  unsigned char v1[8] = sub_25C0EBAC8();
  uint64_t v3 = sub_25C0EBA78();
  v1[9] = v3;
  v1[10] = v2;
  return MEMORY[0x270FA2498](sub_25C0C8F34, v3, v2);
}

uint64_t sub_25C0C8F34()
{
  uint64_t v1 = (uint64_t *)v0[5];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  v0[2] = v3;
  v0[3] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
  sub_25C0EB388();
  uint64_t v4 = v0[4];
  v0[11] = v4;
  uint64_t v7 = (uint64_t (*)(void))(*(void *)(*(void *)v4 + 176) + **(int **)(*(void *)v4 + 176));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  void *v5 = v0;
  v5[1] = sub_25C0C9064;
  return v7();
}

uint64_t sub_25C0C9064()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_25C0C91E8;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_25C0C9180;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25C0C9180()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25C0C91E8()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = (void *)v0[7];
  uint64_t v3 = v0[5];
  swift_release();
  swift_release();
  uint64_t v4 = *(void (**)(void *))(v3 + *(int *)(type metadata accessor for ReportOverviewScreen(0) + 24));
  *uint64_t v2 = v1;
  swift_storeEnumTagMultiPayload();
  id v5 = v1;
  v4(v2);

  sub_25C0D14C8((uint64_t)v2, type metadata accessor for ReportScreen.Control);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_25C0C92D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25C0C9340()
{
  uint64_t v2 = *(void *)(type metadata accessor for ReportOverviewScreen(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25C03CC80;
  return sub_25C0C8E6C(v3);
}

uint64_t sub_25C0C9410@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for ReportOverviewScreen(0);

  return sub_25C0C77C0(a1);
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = type metadata accessor for ReportOverviewScreen(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = (id *)(v0 + v3 + *(int *)(v1 + 20));
  type metadata accessor for ReportScreen(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Report.Authority.DirectAuthorityDetails(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = (char *)v5 + *(int *)(v6 + 28);
        uint64_t v7 = sub_25C0EA238();
        uint64_t v27 = v4;
        uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
        v8(v26, v7);
        v8((char *)v5 + *(int *)(v6 + 32), v7);
        uint64_t v4 = v27;
      }
      break;
    case 1u:
      uint64_t v28 = v4;
      uint64_t v9 = sub_25C0EA328();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9)) {
        (*(void (**)(id *, uint64_t))(v10 + 8))(v5, v9);
      }
      uint64_t v11 = type metadata accessor for Report.Evidence(0);
      uint64_t v12 = (char *)v5 + *(int *)(v11 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = _s14descr27097BA99O6VictimVMa(0);
      (*(void (**)(char *, uint64_t))(v10 + 8))(&v12[*(int *)(v13 + 40)], v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)((char *)v5 + *(int *)(v11 + 56));
      unint64_t v15 = v14[1];
      if (v15 >> 60 != 15) {
        sub_25C035294(*v14, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v28;
      break;
    case 2u:

      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_release();
  swift_release();
  uint64_t v16 = v0 + v3 + *(int *)(v1 + 32);
  uint64_t v17 = type metadata accessor for ReportOverviewScreen._Alert(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    uint64_t v18 = sub_25C0EA328();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
    }
    uint64_t v20 = type metadata accessor for Report.Evidence(0);
    uint64_t v21 = v16 + *(int *)(v20 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = _s14descr27097BA99O6VictimVMa(0);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21 + *(int *)(v22 + 40), v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = (uint64_t *)(v16 + *(int *)(v20 + 56));
    unint64_t v24 = v23[1];
    if (v24 >> 60 != 15) {
      sub_25C035294(*v23, v24);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A0B0);
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25C0C9A7C(unsigned char *a1)
{
  type metadata accessor for ReportOverviewScreen(0);

  return sub_25C0C78B4(a1);
}

uint64_t sub_25C0C9AEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A4E8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReportOverviewScreen(0);
  uint64_t v81 = *(void **)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v83 = v7;
  uint64_t v80 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25C0EB2B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v82 = (char *)&v65 - v13;
  uint64_t v14 = type metadata accessor for Report.Authority(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Report.Evidence(0);
  uint64_t v78 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v78 + 64);
  uint64_t v19 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v79 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v65 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A090);
  MEMORY[0x270FA5388](v22 - 8);
  unint64_t v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A0B0);
  sub_25C0EB388();
  uint64_t v25 = type metadata accessor for ReportOverviewScreen._Alert(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) == 1)
  {
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v90);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v82 = (char *)sub_25C026FAC();
    uint64_t v79 = v26;
    LODWORD(v77) = v27;
    uint64_t v78 = v28;
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v90);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v76 = sub_25C026FAC();
    uint64_t v75 = v29;
    uint64_t v74 = v30;
    uint64_t v73 = v31 & 1;
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v90);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v32 = sub_25C026FAC();
    uint64_t v34 = v33;
    uint64_t v35 = v80;
    char v37 = v36 & 1;
    sub_25C0C92D4((uint64_t)a1, v80, type metadata accessor for ReportOverviewScreen);
    unint64_t v38 = (*((unsigned __int8 *)v81 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v81 + 80);
    uint64_t v39 = swift_allocObject();
    sub_25C0CB3E8(v35, v39 + v38, type metadata accessor for ReportOverviewScreen);
    sub_25C0EB2A8();
    sub_25C05CED4(v32, v34, v37);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    return sub_25C0EB278();
  }
  else
  {
    uint64_t v72 = type metadata accessor for Report.Evidence;
    uint64_t v67 = v21;
    sub_25C0CB3E8((uint64_t)v24, (uint64_t)v21, type metadata accessor for Report.Evidence);
    uint64_t v41 = a1[1];
    *(void *)&long long v90 = *a1;
    *((void *)&v90 + 1) = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
    sub_25C0EB388();
    uint64_t v77 = v12;
    sub_25C0C92D4(v85 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, (uint64_t)v16, type metadata accessor for Report.Authority);
    swift_release();
    sub_25C028300((uint64_t)&v90);
    sub_25C0D14C8((uint64_t)v16, type metadata accessor for Report.Authority);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v76 = sub_25C026FAC();
    uint64_t v75 = v42;
    LODWORD(v73) = v43;
    uint64_t v74 = v44;
    uint64_t v45 = a1[1];
    *(void *)&long long v90 = *a1;
    *((void *)&v90 + 1) = v45;
    sub_25C0EB388();
    sub_25C0C92D4(v85 + OBJC_IVAR____TtC26SensitiveContentAnalysisUI28ReportToAuthoritiesViewModel_authority, (uint64_t)v16, type metadata accessor for Report.Authority);
    swift_release();
    sub_25C0284C4((uint64_t)&v90);
    sub_25C0D14C8((uint64_t)v16, type metadata accessor for Report.Authority);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v71 = sub_25C026FAC();
    uint64_t v70 = v46;
    uint64_t v69 = v47;
    uint64_t v68 = v48 & 1;
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v90);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v49 = sub_25C026FAC();
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    uint64_t v66 = type metadata accessor for ReportOverviewScreen;
    uint64_t v54 = v80;
    sub_25C0C92D4((uint64_t)a1, v80, type metadata accessor for ReportOverviewScreen);
    uint64_t v55 = v79;
    sub_25C0C92D4((uint64_t)v21, v79, type metadata accessor for Report.Evidence);
    uint64_t v56 = *((unsigned __int8 *)v81 + 80);
    uint64_t v81 = a1;
    uint64_t v57 = (v56 + 16) & ~v56;
    v83 += v57;
    uint64_t v65 = v56 | 7;
    unint64_t v58 = (v83 + *(unsigned __int8 *)(v78 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    uint64_t v59 = swift_allocObject();
    sub_25C0CB3E8(v54, v59 + v57, type metadata accessor for ReportOverviewScreen);
    sub_25C0CB3E8(v55, v59 + v58, v72);
    sub_25C0EB2A8();
    sub_25C05CED4(v49, v51, v53);
    swift_release();
    swift_bridgeObjectRelease();
    SCLocalizedStringKey.init(stringLiteral:)((uint64_t)&v90);
    long long v85 = v90;
    uint64_t v86 = v91;
    uint64_t v87 = v92;
    char v88 = v93;
    uint64_t v89 = v94;
    uint64_t v60 = sub_25C026FAC();
    uint64_t v62 = v61;
    LOBYTE(v58) = v63 & 1;
    sub_25C0C92D4((uint64_t)v81, v54, v66);
    uint64_t v64 = swift_allocObject();
    sub_25C0CB3E8(v54, v64 + v57, type metadata accessor for ReportOverviewScreen);
    sub_25C0EB298();
    sub_25C05CED4(v60, v62, v58);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25C0EB288();
    return sub_25C0D14C8((uint64_t)v67, type metadata accessor for Report.Evidence);
  }
}

uint64_t sub_25C0CA528@<X0>(uint64_t a1@<X8>)
{
  return sub_25C0C9AEC(*(void **)(v1 + 16), a1);
}

unint64_t sub_25C0CA530()
{
  unint64_t result = qword_26A58A0C0;
  if (!qword_26A58A0C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A58A0A0);
    sub_25C0E557C(&qword_26A58A0C8, &qword_26A58A098, (void (*)(void))sub_25C0CA614);
    sub_25C0CA704(&qword_26A589C18, MEMORY[0x263F189F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A0C0);
  }
  return result;
}

unint64_t sub_25C0CA614()
{
  unint64_t result = qword_26A58A0D0;
  if (!qword_26A58A0D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A58A0D8);
    sub_25C0CA704(&qword_26A58A0E0, (void (*)(uint64_t))type metadata accessor for _ReportOverviewScreen);
    sub_25C0583D0(&qword_26A58A0E8, &qword_26A5898E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A58A0D0);
  }
  return result;
}

uint64_t type metadata accessor for _ReportOverviewScreen(uint64_t a1)
{
  return sub_25C02BF00(a1, (uint64_t *)&unk_26A594D40);
}

uint64_t sub_25C0CA704(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25C0CA74C(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for Report.Evidence(0);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReportOverviewScreen(0);
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v26 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A5898D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A090);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = type metadata accessor for ReportOverviewScreen._Alert(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_25C02FB8C((uint64_t)v16, (uint64_t)v14, &qword_26A58A090);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A0B0);
  sub_25C0EB398();
  sub_25C02FBF0((uint64_t)v16, &qword_26A58A090);
  uint64_t v18 = sub_25C0EBB08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  sub_25C0C92D4(a1, (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportOverviewScreen);
  sub_25C0C92D4(v27, (uint64_t)v5, type metadata accessor for Report.Evidence);
  sub_25C0EBAD8();
  uint64_t v19 = sub_25C0EBAC8();
  unint64_t v20 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v21 = (v7 + *(unsigned __int8 *)(v28 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = MEMORY[0x263F8F500];
  *(void *)(v22 + 16) = v19;
  *(void *)(v22 + 24) = v23;
  sub_25C0CB3E8((uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v20, type metadata accessor for ReportOverviewScreen);
  sub_25C0CB3E8((uint64_t)v5, v22 + v21, type metadata accessor for Report.Evidence);
  sub_25C06DE28((uint64_t)v10, (uint64_t)&unk_26A58A500, v22);
  return swift_release();
}

uint64_t sub_25C0CAAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[9] = type metadata accessor for ReportScreen.Control(0);
  v5[10] = swift_task_alloc();
  sub_25C0EBAD8();
  v5[11] = sub_25C0EBAC8();
  uint64_t v7 = sub_25C0EBA78();
  v5[12] = v7;
  v5[13] = v6;
  return MEMORY[0x270FA2498](sub_25C0CABB8, v7, v6);
}

uint64_t sub_25C0CABB8()
{
  uint64_t v1 = (void *)v0[7];
  id v2 = objc_msgSend(self, sel_progressWithTotalUnitCount_, 100);
  v0[14] = v2;
  uint64_t v3 = v1[1];
  v0[2] = *v1;
  v0[3] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A088);
  sub_25C0EB388();
  uint64_t v4 = v0[6];
  v0[15] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, id))(*(void *)(*(void *)v4 + 184) + **(int **)(*(void *)v4 + 184));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  void *v5 = v0;
  v5[1] = sub_25C0CAD20;
  uint64_t v6 = v0[8];
  return v8(v6, v2);
}

uint64_t sub_25C0CAD20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 136) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[12];
    uint64_t v8 = v6[13];
    uint64_t v9 = sub_25C0CAF58;
  }
  else
  {
    swift_release();
    v6[18] = a2;
    v6[19] = a1;
    uint64_t v7 = v6[12];
    uint64_t v8 = v6[13];
    uint64_t v9 = sub_25C0CAE5C;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_25C0CAE5C()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = (void *)v0[14];
  uint64_t v4 = (void *)v0[10];
  uint64_t v5 = v0[7];
  swift_release();
  uint64_t v6 = *(void (**)(void *))(v5 + *(int *)(type metadata accessor for ReportOverviewScreen(0) + 24));
  *uint64_t v4 = v1;
  v4[1] = v2;
  type metadata accessor for ReportScreen(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v6(v4);

  sub_25C0D14C8((uint64_t)v4, type metadata accessor for ReportScreen.Control);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_25C0CAF58()
{
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(void **)(v0 + 112);
  uint64_t v3 = *(void **)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);
  swift_release();
  swift_release();

  uint64_t v5 = type metadata accessor for ReportOverviewScreen(0);
  uint64_t v6 = *(void (**)(void *))(v4 + *(int *)(v5 + 24));
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  id v7 = v1;
  v6(v3);
  sub_25C0D14C8((uint64_t)v3, type metadata accessor for ReportScreen.Control);
  uint64_t v8 = v4 + *(int *)(v5 + 28);
  uint64_t v9 = *(void *)(v8 + 8);
  *(unsigned char *)(v0 + 32) = *(unsigned char *)v8;
  *(void *)(v0 + 40) = v9;
  *(unsigned char *)(v0 + 160) = 2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A58A4F0);
  sub_25C0EB398();

  swift_release();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}