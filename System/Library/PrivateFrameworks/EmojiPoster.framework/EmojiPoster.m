void JCColor::JCColor(JCColor *this)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
}

{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
}

void JCColor::JCColor(JCColor *this, CGColorRef color)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  if (color) {
    *(void *)this = CGColorCreateCopy(color);
  }
}

{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  if (color) {
    *(void *)this = CGColorCreateCopy(color);
  }
}

void JCColor::~JCColor(CGColor **this)
{
  v2 = *this;
  if (v2)
  {
    CGColorRelease(v2);
    *this = 0;
  }
  v3 = this[1];
  if (v3)
  {
    CGColorRelease(v3);
    this[1] = 0;
  }
}

void __clang_call_terminate(void *a1)
{
}

void JCColor::JCColor(JCColor *this, CGColorRef *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  if (*a2) {
    *(void *)this = CGColorCreateCopy(*a2);
  }
  v4 = a2[1];
  if (v4) {
    *((void *)this + 1) = CGColorCreateCopy(v4);
  }
}

void JCColor::JCColor(JCColor *this, CGColorRef *a2, CGFloat a3)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  CGColorRelease(0);
  *(void *)this = 0;
  CGColorRelease(*((CGColorRef *)this + 1));
  *((void *)this + 1) = 0;
  if (*a2) {
    *(void *)this = CGColorCreateCopyWithAlpha(*a2, a3);
  }
  v6 = a2[1];
  if (v6) {
    *((void *)this + 1) = CGColorCreateCopyWithAlpha(v6, a3);
  }
}

CGColorRef *JCColor::operator=(CGColorRef *a1, CGColorRef *a2)
{
  if (a1 != a2)
  {
    CGColorRelease(*a1);
    *a1 = 0;
    CGColorRelease(a1[1]);
    a1[1] = 0;
    if (*a2) {
      *a1 = CGColorCreateCopy(*a2);
    }
    v4 = a2[1];
    if (v4) {
      a1[1] = CGColorCreateCopy(v4);
    }
  }
  return a1;
}

BOOL JCColor::operator==(CGColorRef *a1, CGColorRef *a2)
{
  return CGColorEqualToColor(*a1, *a2);
}

void JCColor::JCColor(JCColor *this, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  components[4] = *(CGFloat *)MEMORY[0x263EF8340];
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  components[0] = a2;
  components[1] = a3;
  components[2] = a4;
  components[3] = a5;
  DeviceRGB = (CGColorSpace *)_rgbSpace;
  if (!_rgbSpace)
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    _rgbSpace = (uint64_t)DeviceRGB;
  }
  *(void *)this = CGColorCreate(DeviceRGB, components);
}

CGColorSpaceRef GetRGBColorSpace(void)
{
  CGColorSpaceRef result = (CGColorSpaceRef)_rgbSpace;
  if (!_rgbSpace)
  {
    CGColorSpaceRef result = CGColorSpaceCreateDeviceRGB();
    _rgbSpace = (uint64_t)result;
  }
  return result;
}

void JCColor::JCColor(JCColor *this, CGFloat a2, CGFloat a3)
{
  components[2] = *(CGFloat *)MEMORY[0x263EF8340];
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  components[0] = a2;
  components[1] = a3;
  DeviceGray = (CGColorSpace *)_graySpace;
  if (!_graySpace)
  {
    DeviceGray = CGColorSpaceCreateDeviceGray();
    _graySpace = (uint64_t)DeviceGray;
  }
  *(void *)this = CGColorCreate(DeviceGray, components);
}

CGColorSpaceRef GetGrayscaleColorSpace(void)
{
  CGColorSpaceRef result = (CGColorSpaceRef)_graySpace;
  if (!_graySpace)
  {
    CGColorSpaceRef result = CGColorSpaceCreateDeviceGray();
    _graySpace = (uint64_t)result;
  }
  return result;
}

void JCColor::JCColor(JCColor *this, double a2, double a3, double a4)
{
  components[4] = *(CGFloat *)MEMORY[0x263EF8340];
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  CGFloat v7 = 0.0;
  CGFloat v8 = 0.0;
  CGFloat v6 = 0.0;
  _HSBToRGB(a2, a3, a4, &v8, &v7, &v6);
  components[0] = v8;
  components[1] = v7;
  components[2] = v6;
  CGFloat components[3] = 1.0;
  DeviceRGB = (CGColorSpace *)_rgbSpace;
  if (!_rgbSpace)
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    _rgbSpace = (uint64_t)DeviceRGB;
  }
  *(void *)this = CGColorCreate(DeviceRGB, components);
}

double _HSBToRGB(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v6 = a1 * 6.0;
  BOOL v7 = a1 == 1.0;
  double v8 = 0.0;
  if (!v7) {
    double v8 = v6;
  }
  uint64_t v9 = (uint64_t)v8;
  double v10 = v8 - (double)(uint64_t)v8;
  double result = (1.0 - a2) * a3;
  double v12 = (1.0 - a2 * v10) * a3;
  double v13 = (1.0 - a2 * (1.0 - v10)) * a3;
  switch(v9)
  {
    case 0:
      if (a4) {
        *a4 = a3;
      }
      if (!a5) {
        goto LABEL_29;
      }
      *a5 = v13;
      if (a6) {
        goto LABEL_30;
      }
      return result;
    case 1:
      if (a4) {
        *a4 = v12;
      }
      if (!a5) {
        goto LABEL_29;
      }
      *a5 = a3;
      if (a6) {
        goto LABEL_30;
      }
      return result;
    case 2:
      if (a4) {
        *a4 = result;
      }
      if (a5) {
        *a5 = a3;
      }
      double result = v13;
      if (a6) {
        goto LABEL_30;
      }
      return result;
    case 3:
      if (a4) {
        *a4 = result;
      }
      if (a5) {
        *a5 = v12;
      }
      goto LABEL_28;
    case 4:
      if (a4) {
        *a4 = v13;
      }
      if (a5) {
        *a5 = result;
      }
LABEL_28:
      double result = a3;
LABEL_29:
      if (a6) {
        goto LABEL_30;
      }
      return result;
    case 5:
      if (a4) {
        *a4 = a3;
      }
      if (a5) {
        *a5 = result;
      }
      double result = v12;
      if (!a6) {
        return result;
      }
LABEL_30:
      *a6 = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t JCColor::ColorModel(CGColorRef *this)
{
  ColorSpace = CGColorGetColorSpace(*this);
  return CGColorSpaceGetModel(ColorSpace);
}

CGFloat JCColor::AlphaComponent(CGColorRef *this)
{
  return CGColorGetAlpha(*this);
}

CGFloat JCColor::WhiteComponent(CGColorRef *this)
{
  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace) == kCGColorSpaceModelRGB)
  {
    double v7 = 0.0;
    double v8 = 0.0;
    double v6 = 0.0;
    JCColor::GetRGB((JCColor *)this, &v8, &v7, &v6);
    return v7 * 0.589999974 + v8 * 0.300000012 + v6 * 0.109999999;
  }
  else
  {
    v4 = CGColorGetColorSpace(*this);
    CGColorSpaceModel Model = CGColorSpaceGetModel(v4);
    CGFloat result = 0.0;
    if (Model == kCGColorSpaceModelMonochrome) {
      return *CGColorGetComponents(*this);
    }
  }
  return result;
}

void JCColor::GetRGB(CGColorRef *this, double *a2, double *a3, double *a4)
{
  double v8 = *this;
  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace))
  {
    double v10 = CGColorGetColorSpace(*this);
    if (CGColorSpaceGetModel(v10) == kCGColorSpaceModelRGB)
    {
      Components = CGColorGetComponents(v8);
      if (a2) {
        *a2 = *Components;
      }
      if (a3) {
        *a3 = Components[1];
      }
      if (a4)
      {
        double v12 = Components[2];
LABEL_14:
        *a4 = v12;
      }
    }
  }
  else
  {
    double v12 = JCColor::WhiteComponent(this);
    if (a2) {
      *a2 = v12;
    }
    if (a3) {
      *a3 = v12;
    }
    if (a4) {
      goto LABEL_14;
    }
  }
}

double _RGBToWhite(double a1, double a2, double a3)
{
  return a2 * 0.589999974 + a1 * 0.300000012 + a3 * 0.109999999;
}

double JCColor::RedComponent(CGColorRef *this)
{
  double v2 = 0.0;
  JCColor::GetRGB(this, &v2, 0, 0);
  return v2;
}

double JCColor::GreenComponent(CGColorRef *this)
{
  double v2 = 0.0;
  JCColor::GetRGB(this, 0, &v2, 0);
  return v2;
}

double JCColor::BlueComponent(CGColorRef *this)
{
  double v2 = 0.0;
  JCColor::GetRGB(this, 0, 0, &v2);
  return v2;
}

double *JCColor::GetHSB(CGColorRef *this, double *a2, double *a3, double *a4)
{
  double v9 = 0.0;
  double v10 = 0.0;
  double v8 = 0.0;
  JCColor::GetRGB(this, &v10, &v9, &v8);
  return _RGBToHSB(v10, v9, v8, a2, a3, a4);
}

double *_RGBToHSB(double a1, double a2, double a3, double *result, double *a5, double *a6)
{
  if (a1 < a2 || a1 < a3)
  {
    if (a2 < a1 || a2 < a3)
    {
      if (a2 >= a1) {
        double v8 = a1;
      }
      else {
        double v8 = a2;
      }
      double v9 = a3;
    }
    else
    {
      if (a1 >= a3) {
        double v8 = a3;
      }
      else {
        double v8 = a1;
      }
      double v9 = a2;
    }
  }
  else
  {
    if (a2 >= a3) {
      double v8 = a3;
    }
    else {
      double v8 = a2;
    }
    double v9 = a1;
  }
  double v10 = 0.0;
  if (v9 <= 0.0)
  {
    double v12 = 0.0;
  }
  else
  {
    double v11 = v9 - v8;
    double v12 = (v9 - v8) / v9;
    if (v12 != 0.0)
    {
      double v13 = (v9 - a2) / v11;
      double v14 = (v9 - a3) / v11;
      if (v9 == a1)
      {
        if (v8 == a2) {
          double v10 = v14 + 5.0;
        }
        else {
          double v10 = 1.0 - v13;
        }
      }
      else
      {
        BOOL v15 = v9 == a2;
        double v16 = (v9 - a1) / v11;
        if (v15)
        {
          if (v8 == a3) {
            double v10 = v16 + 1.0;
          }
          else {
            double v10 = 3.0 - v14;
          }
        }
        else if (v8 == a1)
        {
          double v10 = v13 + 3.0;
        }
        else
        {
          double v10 = 5.0 - v16;
        }
      }
    }
  }
  if (result) {
    *CGFloat result = v10 / 6.0;
  }
  if (a5) {
    *a5 = v12;
  }
  if (a6) {
    *a6 = v9;
  }
  return result;
}

double JCColor::HueComponent(CGColorRef *this)
{
  double v2 = 0.0;
  JCColor::GetHSB(this, &v2, 0, 0);
  return v2;
}

double JCColor::SaturationComponent(CGColorRef *this)
{
  double v2 = 0.0;
  JCColor::GetHSB(this, 0, &v2, 0);
  return v2;
}

double JCColor::BrightnessComponent(CGColorRef *this)
{
  double v2 = 0.0;
  JCColor::GetHSB(this, 0, 0, &v2);
  return v2;
}

CGFloat JCColor::GetLAB(JCColor *this, double *a2, double *a3, double *a4)
{
  double v7 = JCColor::LABColor(this);
  ColorSpace = CGColorGetColorSpace(v7);
  if (CGColorSpaceGetModel(ColorSpace) == kCGColorSpaceModelLab)
  {
    Components = CGColorGetComponents(v7);
    if (a2)
    {
      CGFloat result = *Components / 100.0;
      *a2 = result;
    }
    if (a3)
    {
      CGFloat result = Components[1] / 100.0;
      *a3 = result;
    }
    if (a4)
    {
      CGFloat result = Components[2] / 100.0;
      *a4 = result;
    }
  }
  return result;
}

CGColorRef JCColor::LABColor(JCColor *this)
{
  components[4] = *(CGFloat *)MEMORY[0x263EF8340];
  CGColorRef result = (CGColorRef)*((void *)this + 1);
  if (!result)
  {
    if (*(void *)this)
    {
      double v12 = 0.0;
      double v13 = 0.0;
      double v11 = 0.0;
      JCColor::GetXYZ((CGColorRef *)this, &v13, &v12, &v11);
      double v3 = v11;
      double v4 = v13 / 95.0469971;
      double v5 = v12 / 100.0;
      if (v13 / 95.0469971 <= 0.00885600038) {
        double v6 = v4 * 7.78700018 + 0.137931034;
      }
      else {
        double v6 = pow(v4, 0.333333343);
      }
      double v7 = v3 / 108.883003;
      if (v5 <= 0.00885600038) {
        double v8 = v5 * 7.78700018 + 0.137931034;
      }
      else {
        double v8 = pow(v5, 0.333333343);
      }
      if (v7 <= 0.00885600038) {
        double v9 = v7 * 7.78700018 + 0.137931034;
      }
      else {
        double v9 = pow(v7, 0.333333343);
      }
      components[0] = v8 * 116.0 + -16.0;
      components[1] = (v6 - v8) * 500.0;
      components[2] = (v8 - v9) * 200.0;
      CGFloat components[3] = CGColorGetAlpha(*(CGColorRef *)this);
      LABColorSpace = GetLABColorSpace();
      CGColorRef result = CGColorCreate(LABColorSpace, components);
      *((void *)this + 1) = result;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

double JCColor::LightnessComponent(JCColor *this)
{
  double v2 = 0.0;
  JCColor::GetLAB(this, &v2, 0, 0);
  return v2;
}

double JCColor::AComponent(JCColor *this)
{
  double v2 = 0.0;
  JCColor::GetLAB(this, 0, &v2, 0);
  return v2;
}

double JCColor::BComponent(JCColor *this)
{
  double v2 = 0.0;
  JCColor::GetLAB(this, 0, 0, &v2);
  return v2;
}

uint64_t JCColor::BlackColor(JCColor *this)
{
  if (JCColor::BlackColor(void)::onceToken != -1) {
    dispatch_once(&JCColor::BlackColor(void)::onceToken, &__block_literal_global);
  }
  return JCColor::BlackColor(void)::blackColor;
}

void ___ZN7JCColor10BlackColorEv_block_invoke()
{
}

void sub_20B8D6B18(_Unwind_Exception *a1)
{
  MEMORY[0x21053AA70](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

uint64_t JCColor::WhiteColor(JCColor *this)
{
  if (JCColor::WhiteColor(void)::onceToken != -1) {
    dispatch_once(&JCColor::WhiteColor(void)::onceToken, &__block_literal_global_3);
  }
  return JCColor::WhiteColor(void)::whiteColor;
}

void ___ZN7JCColor10WhiteColorEv_block_invoke()
{
}

void sub_20B8D6BCC(_Unwind_Exception *a1)
{
  MEMORY[0x21053AA70](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

void JCColor::GetXYZ(CGColorRef *this, double *a2, double *a3, double *a4)
{
  double v8 = 0.0;
  double v9 = 0.0;
  double v7 = 0.0;
  JCColor::GetRGB(this, &v9, &v8, &v7);
  _RGBToXYZ(v9, v8, v7, a2, a3, a4);
}

void _XYZToLab(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v10 = a1 / 95.0469971;
  double v11 = a2 / 100.0;
  if (v10 <= 0.00885600038) {
    double v12 = v10 * 7.78700018 + 0.137931034;
  }
  else {
    double v12 = pow(v10, 0.333333343);
  }
  double v13 = a3 / 108.883003;
  if (v11 <= 0.00885600038) {
    double v14 = v11 * 7.78700018 + 0.137931034;
  }
  else {
    double v14 = pow(v11, 0.333333343);
  }
  if (v13 <= 0.00885600038)
  {
    double v15 = v13 * 7.78700018 + 0.137931034;
    if (!a4) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  double v15 = pow(v13, 0.333333343);
  if (a4) {
LABEL_11:
  }
    *a4 = v14 * 116.0 + -16.0;
LABEL_12:
  if (a5) {
    *a5 = (v12 - v14) * 500.0;
  }
  if (a6) {
    *a6 = (v14 - v15) * 200.0;
  }
}

CGColorSpaceRef GetLABColorSpace(void)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  CGColorSpaceRef result = (CGColorSpaceRef)_labSpace;
  if (!_labSpace)
  {
    *(_OWORD *)whitePoint = xmmword_20B928560;
    uint64_t v4 = 0x3FF16BD900000000;
    memset(blackPoint, 0, sizeof(blackPoint));
    v1[0] = xmmword_20B928578;
    v1[1] = unk_20B928588;
    CGColorSpaceRef result = CGColorSpaceCreateLab(whitePoint, blackPoint, (const CGFloat *)v1);
    _labSpace = (uint64_t)result;
  }
  return result;
}

void _RGBToXYZ(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  if (a1 <= 0.0404499993) {
    double v11 = a1 / 12.9200001;
  }
  else {
    double v11 = pow((a1 + 0.0549999997) / 1.05499995, 2.4000001);
  }
  if (a2 <= 0.0404499993) {
    double v12 = a2 / 12.9200001;
  }
  else {
    double v12 = pow((a2 + 0.0549999997) / 1.05499995, 2.4000001);
  }
  if (a3 <= 0.0404499993) {
    double v13 = a3 / 12.9200001;
  }
  else {
    double v13 = pow((a3 + 0.0549999997) / 1.05499995, 2.4000001);
  }
  double v14 = v11 * 100.0;
  double v15 = v12 * 100.0;
  double v16 = v13 * 100.0;
  if (a4) {
    *a4 = v15 * 0.357600003 + v14 * 0.412400007 + v16 * 0.180500001;
  }
  if (a5) {
    *a5 = v15 * 0.715200007 + v14 * 0.212599993 + v16 * 0.0722000003;
  }
  if (a6) {
    *a6 = v15 * 0.119199999 + v14 * 0.0193000007 + v16 * 0.950500011;
  }
}

double JCColor::Luminance(CGColorRef *this)
{
  v7[1] = *(double *)MEMORY[0x263EF8340];
  double v5 = 0.0;
  double v6 = 0.0;
  v7[0] = 0.0;
  JCColor::GetRGB(this, &v5, &v6, v7);
  for (uint64_t i = 0; i != 24; i += 8)
  {
    double v2 = *(double *)((char *)&v5 + i);
    if (v2 <= 0.0392800011) {
      double v3 = v2 / 12.9200001;
    }
    else {
      double v3 = pow((v2 + 0.0549999997) / 1.05499995, 2.4000001);
    }
    *(double *)((char *)&v5 + i) = v3;
  }
  return v6 * 0.715200007 + v5 * 0.212599993 + v7[0] * 0.0722000003;
}

BOOL JCColor::IsCloseToColor(CGColorRef *this, JCColor *a2)
{
  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace) || (double v5 = CGColorGetColorSpace(*(CGColorRef *)a2), CGColorSpaceGetModel(v5)))
  {
    double v14 = 0.0;
    double v15 = 0.0;
    double v13 = 0.0;
    JCColor::GetLAB((JCColor *)this, &v15, &v14, &v13);
    double v11 = 0.0;
    double v12 = 0.0;
    double v10 = 0.0;
    JCColor::GetLAB(a2, &v12, &v11, &v10);
    if (vabdd_f64(v15, v12) > 0.2) {
      return 0;
    }
    if (v15 < 0.200000003 && v12 < 0.200000003) {
      return 1;
    }
    double v7 = sqrt((v15 - v12) * (v15 - v12) + (v14 - v11) * 0.5 * ((v14 - v11) * 0.5) + (v13 - v10)
                                                                                  * 0.5
                                                                                  * ((v13 - v10)
                                                                                   * 0.5));
    double v8 = 0.09;
  }
  else
  {
    double v9 = JCColor::WhiteComponent(this);
    double v7 = vabdd_f64(v9, JCColor::WhiteComponent((CGColorRef *)a2));
    double v8 = 0.2;
  }
  return v7 < v8;
}

BOOL JCColor::IsReallyCloseToColor(CGColorRef *this, JCColor *a2)
{
  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace) || (double v5 = CGColorGetColorSpace(*(CGColorRef *)a2), CGColorSpaceGetModel(v5)))
  {
    double v14 = 0.0;
    double v15 = 0.0;
    double v13 = 0.0;
    JCColor::GetLAB((JCColor *)this, &v15, &v14, &v13);
    double v11 = 0.0;
    double v12 = 0.0;
    double v10 = 0.0;
    JCColor::GetLAB(a2, &v12, &v11, &v10);
    if (vabdd_f64(v15, v12) > 0.1) {
      return 0;
    }
    if (v15 < 0.200000003 && v12 < 0.200000003) {
      return 1;
    }
    double v7 = sqrt((v15 - v12) * (v15 - v12) + (v14 - v11) * 0.5 * ((v14 - v11) * 0.5) + (v13 - v10)
                                                                                  * 0.5
                                                                                  * ((v13 - v10)
                                                                                   * 0.5));
    double v8 = 0.05;
  }
  else
  {
    double v9 = JCColor::WhiteComponent(this);
    double v7 = vabdd_f64(v9, JCColor::WhiteComponent((CGColorRef *)a2));
    double v8 = 0.2;
  }
  return v7 < v8;
}

double JCColor::GetContrastWithColorLuminanceMethod(CGColorRef *this, CGColorRef *a2)
{
  double v3 = JCColor::Luminance(this);
  double v4 = JCColor::Luminance(a2);
  if (v3 <= v4) {
    double v5 = v4;
  }
  else {
    double v5 = v3;
  }
  if (v3 <= v4) {
    double v4 = v3;
  }
  return (v5 + 0.0500000007) / (v4 + 0.0500000007);
}

BOOL JCColor::ContrastsWithColor(CGColorRef *this, CGColorRef *a2)
{
  CFNumberRef v4 = (const __CFNumber *)CFPreferencesCopyAppValue(@"TextColorContrast", (CFStringRef)*MEMORY[0x263EFFE60]);
  if (v4)
  {
    CFNumberRef v5 = v4;
    double valuePtr = 0.0;
    if (CFNumberGetValue(v4, kCFNumberCGFloatType, &valuePtr)) {
      double v6 = valuePtr;
    }
    else {
      double v6 = 4.19999981;
    }
    CFRelease(v5);
  }
  else
  {
    double v6 = 4.19999981;
  }
  double v7 = JCColor::Luminance(this);
  double v8 = JCColor::Luminance(a2);
  if (v7 <= v8) {
    double v9 = v8;
  }
  else {
    double v9 = v7;
  }
  if (v7 <= v8) {
    double v8 = v7;
  }
  return (v9 + 0.0500000007) / (v8 + 0.0500000007) > v6;
}

BOOL JCColor::ContrastsEnoughWithColor(CGColorRef *this, CGColorRef *a2)
{
  CFNumberRef v4 = (const __CFNumber *)CFPreferencesCopyAppValue(@"SecondaryTextColorContrast", (CFStringRef)*MEMORY[0x263EFFE60]);
  if (v4)
  {
    CFNumberRef v5 = v4;
    double valuePtr = 0.0;
    if (CFNumberGetValue(v4, kCFNumberCGFloatType, &valuePtr)) {
      double v6 = valuePtr;
    }
    else {
      double v6 = 2.20000005;
    }
    CFRelease(v5);
  }
  else
  {
    double v6 = 2.20000005;
  }
  double v7 = JCColor::Luminance(this);
  double v8 = JCColor::Luminance(a2);
  if (v7 <= v8) {
    double v9 = v8;
  }
  else {
    double v9 = v7;
  }
  if (v7 <= v8) {
    double v8 = v7;
  }
  return (v9 + 0.0500000007) / (v8 + 0.0500000007) > v6;
}

BOOL JCColor::IsSaturated(CGColorRef *this)
{
  double v2 = 0.0;
  double v3 = 0.0;
  JCColor::GetHSB(this, 0, &v3, &v2);
  return v2 > 0.449999988 && v3 > 0.800000012;
}

void JCColor::CreateBlendedColorWithFraction(CGColorRef *this@<X0>, double a2@<D0>, CGColorRef *a3@<X1>, JCColor *a4@<X8>)
{
  CFNumberRef v4 = a3;
  if (a2 >= 1.0)
  {
    double v13 = a4;
  }
  else
  {
    if (a2 > 0.0)
    {
      double v18 = 0.0;
      double v19 = 0.0;
      double v17 = 0.0;
      JCColor::GetRGB(a3, &v19, &v18, &v17);
      double v15 = 0.0;
      double v16 = 0.0;
      double v14 = 0.0;
      JCColor::GetRGB(this, &v16, &v15, &v14);
      CGFloat v8 = (1.0 - a2) * v16 + v19 * a2;
      CGFloat v9 = (1.0 - a2) * v15 + v18 * a2;
      CGFloat v10 = (1.0 - a2) * v14 + v17 * a2;
      double Alpha = CGColorGetAlpha(*v4);
      CGFloat v12 = CGColorGetAlpha(*this);
      JCColor::JCColor(a4, v8, v9, v10, (1.0 - a2) * v12 + Alpha * a2);
      return;
    }
    double v13 = a4;
    a3 = this;
  }
  JCColor::JCColor(v13, a3);
}

CGColorRef *JCColor::LightenColorByPercent(CGColorRef *this, double a2)
{
  components[4] = *(CGFloat *)MEMORY[0x263EF8340];
  if (a2 != 0.0)
  {
    double v3 = this;
    double v19 = 0.0;
    double v20 = 0.0;
    double v18 = 0.0;
    JCColor::GetXYZ(this, &v20, &v19, &v18);
    double v4 = v18;
    double v5 = v20 / 95.0469971;
    double v6 = v19 / 100.0;
    if (v20 / 95.0469971 <= 0.00885600038) {
      double v7 = v5 * 7.78700018 + 0.137931034;
    }
    else {
      double v7 = pow(v5, 0.333333343);
    }
    double v8 = v4 / 108.883003;
    if (v6 <= 0.00885600038) {
      double v9 = v6 * 7.78700018 + 0.137931034;
    }
    else {
      double v9 = pow(v6, 0.333333343);
    }
    if (v8 <= 0.00885600038) {
      double v10 = v8 * 7.78700018 + 0.137931034;
    }
    else {
      double v10 = pow(v8, 0.333333343);
    }
    double v11 = (v9 - v10) * 200.0;
    double v12 = (a2 + 1.0) * (v9 * 116.0 + -16.0);
    if (v12 > 100.0) {
      double v12 = 100.0;
    }
    if (v12 < 0.0) {
      double v12 = 0.0;
    }
    _LabToXYZ(v12, (v7 - v9) * 500.0, v11, &v20, &v19, &v18);
    CGFloat v16 = 0.0;
    CGFloat v17 = 0.0;
    CGFloat v15 = 0.0;
    _XYZToRGB(v20, v19, v18, &v17, &v16, &v15);
    CGFloat Alpha = CGColorGetAlpha(*v3);
    CGColorRelease(*v3);
    CGColorRef *v3 = 0;
    CGColorRelease(v3[1]);
    v3[1] = 0;
    components[0] = v17;
    components[1] = v16;
    components[2] = v15;
    CGFloat components[3] = Alpha;
    DeviceRGB = (CGColorSpace *)_rgbSpace;
    if (!_rgbSpace)
    {
      DeviceRGB = CGColorSpaceCreateDeviceRGB();
      _rgbSpace = (uint64_t)DeviceRGB;
    }
    this = (CGColorRef *)CGColorCreate(DeviceRGB, components);
    CGColorRef *v3 = (CGColorRef)this;
  }
  return this;
}

void _LabToXYZ(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v9 = (a1 + 16.0) / 116.0;
  double v10 = a2 / 500.0 + v9;
  double v11 = a3 / -200.0;
  double v12 = pow(v9, 3.0);
  if (v12 <= 0.00885600038) {
    double v12 = (v9 + -0.137931034) / 7.78700018;
  }
  double v13 = v9 + v11;
  double v14 = pow(v10, 3.0);
  if (v14 <= 0.00885600038) {
    double v14 = (v10 + -0.137931034) / 7.78700018;
  }
  double v15 = pow(v13, 3.0);
  if (v15 <= 0.00885600038) {
    double v15 = (v13 + -0.137931034) / 7.78700018;
  }
  if (a4) {
    *a4 = v14 * 95.0469971;
  }
  if (a5) {
    *a5 = v12 * 100.0;
  }
  if (a6) {
    *a6 = v15 * 108.883003;
  }
}

void _XYZToRGB(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v9 = a1 / 100.0;
  double v10 = a2 / 100.0;
  double v11 = a3 / 100.0;
  double v12 = v10 * -1.53719997 + a1 / 100.0 * 3.24060011 + a3 / 100.0 * -0.498600006;
  double v13 = v10 * 1.87580001 + v9 * -0.968900025 + a3 / 100.0 * 0.0414999984;
  double v14 = v10 * -0.203999996 + v9 * 0.0557000004;
  if (v12 <= 0.00313080009) {
    double v15 = v12 * 12.9200001;
  }
  else {
    double v15 = pow(v12, 0.416666657) * 1.05499995 + -0.0549999997;
  }
  double v16 = v14 + v11 * 1.05700004;
  if (v13 <= 0.00313080009) {
    double v17 = v13 * 12.9200001;
  }
  else {
    double v17 = pow(v13, 0.416666657) * 1.05499995 + -0.0549999997;
  }
  if (v16 <= 0.00313080009)
  {
    double v18 = v16 * 12.9200001;
    if (!a4) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  double v18 = pow(v16, 0.416666657) * 1.05499995 + -0.0549999997;
  if (a4) {
LABEL_11:
  }
    *a4 = v15;
LABEL_12:
  if (a5) {
    *a5 = v17;
  }
  if (a6) {
    *a6 = v18;
  }
}

CGColorRef *JCColor::EnsureContrastWithColor(CGColorRef *this, CGColorRef *a2)
{
  CGColorSpaceRef result = (CGColorRef *)JCColor::ContrastsWithColor(this, a2);
  if ((result & 1) == 0)
  {
    double v5 = JCColor::Luminance(this);
    double v6 = JCColor::Luminance(a2);
    double v7 = JCColor::Luminance(this);
    double v8 = JCColor::Luminance(a2);
    if (v7 <= v8) {
      double v9 = v8;
    }
    else {
      double v9 = v7;
    }
    if (v7 <= v8) {
      double v8 = v7;
    }
    double v10 = (v9 + 0.0500000007) / (v8 + 0.0500000007) + (4.19999981 - (v9 + 0.0500000007) / (v8 + 0.0500000007)) * 0.5;
    double v11 = v6 + 0.0500000007;
    if (v5 <= v6) {
      double v12 = v11 / v10 + -0.0500000007;
    }
    else {
      double v12 = v10 * v11 + -0.0500000007;
    }
    double v13 = (v12 - v5) / v5;
    return JCColor::LightenColorByPercent(this, v13);
  }
  return result;
}

uint64_t CGColorSpaceGetSRGB(void)
{
  uint64_t result = CGColorSpaceGetSRGB(void)::space;
  if (!CGColorSpaceGetSRGB(void)::space)
  {
    uint64_t v1 = CGDataProviderCreateWithData(0, &CGColorSpaceGetSRGB(void)::kSRGBProfile, 0xC48uLL, 0);
    CGColorSpaceGetSRGB(void)::space = (uint64_t)CGColorSpaceCreateICCBased(3uLL, 0, v1, 0);
    CGDataProviderRelease(v1);
    return CGColorSpaceGetSRGB(void)::space;
  }
  return result;
}

void sub_20B8D7FD8(_Unwind_Exception *a1)
{
  MEMORY[0x21053AA70](v3, 0x1020C40CC7EA6EELL);

  _Unwind_Resume(a1);
}

void sub_20B8D8240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_20B8D8338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_20B8D8444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_20B8D84D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_20B8D857C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);

  _Unwind_Resume(a1);
}

void sub_20B8D8688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);
  JCColor::~JCColor((JCColor *)&a13);

  _Unwind_Resume(a1);
}

void sub_20B8D87A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_20B8D88A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double CreateHSVColorFromInts(unsigned int a1)
{
  return (double)a1 / 359.0;
}

BOOL ColorIsGrayscale(uint64_t a1)
{
  double v1 = *(double *)(a1 + 8);
  if (v1 < 0.0399999991) {
    return 1;
  }
  double v3 = 1.0;
  if (v1 <= 1.0) {
    double v3 = *(double *)(a1 + 8);
  }
  if (v1 >= 0.0) {
    double v4 = v3;
  }
  else {
    double v4 = 0.0;
  }
  return v4 * 0.100000001 + 0.0 + *(double *)(a1 + 16) < 0.200000003;
}

void JCImageAnalyzer::JCImageAnalyzer(JCImageAnalyzer *this)
{
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 24), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 40), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 56), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 72), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 88), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 104));
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 120));
  *((_OWORD *)this + 449) = 0u;
  *((_OWORD *)this + 448) = 0u;
  *((_OWORD *)this + 447) = 0u;
  JCColor::JCColor((JCColor *)v2, 0);
  JCColor::operator=((CGColorRef *)this + 5, v2);
  JCColor::~JCColor((JCColor *)v2);
  *(void *)this = 0;
  bzero((char *)this + 136, 0x1340uLL);
  *((_OWORD *)this + 450) = 0u;
}

void sub_20B8D8A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  a9 = v13 + 7176;
  std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  a9 = v13 + 7152;
  std::vector<JCColor>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  JCColor::~JCColor(v16);
  JCColor::~JCColor(v15);
  JCColor::~JCColor(v14);
  JCColor::~JCColor(v12);
  JCColor::~JCColor(v11);
  JCColor::~JCColor(v10);
  JCColor::~JCColor(v9);
  _Unwind_Resume(a1);
}

void sub_20B8D8AE8()
{
}

void sub_20B8D8AF0()
{
}

void sub_20B8D8AF8()
{
}

void JCImageAnalyzer::ClearMainHistograms(JCImageAnalyzer *this)
{
}

void JCImageAnalyzer::~JCImageAnalyzer(void **this)
{
  double v2 = *this;
  if (v2)
  {
    free(v2);
    *this = 0;
  }
  double v3 = this + 897;
  std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100](&v3);
  double v3 = this + 894;
  std::vector<JCColor>::__destroy_vector::operator()[abi:ne180100](&v3);
  JCColor::~JCColor((JCColor *)(this + 15));
  JCColor::~JCColor((JCColor *)(this + 13));
  JCColor::~JCColor((JCColor *)(this + 11));
  JCColor::~JCColor((JCColor *)(this + 9));
  JCColor::~JCColor((JCColor *)(this + 7));
  JCColor::~JCColor((JCColor *)(this + 5));
  JCColor::~JCColor((JCColor *)(this + 3));
}

void JCImageAnalyzer::ClearSaturationAndBrightnessHistograms(JCImageAnalyzer *this)
{
}

double JCImageAnalyzer::GetBorderMarginInPercentage(JCImageAnalyzer *this)
{
  return *((double *)this + 901);
}

double JCImageAnalyzer::GetBorderMarginInPixels(JCImageAnalyzer *this)
{
  double v1 = *((double *)this + 2);
  if (v1 <= *((double *)this + 1)) {
    double v1 = *((double *)this + 1);
  }
  return ceil(v1 * *((double *)this + 901));
}

uint64_t JCImageAnalyzer::GetPrefValue(JCImageAnalyzer *this, CFStringRef key, unsigned __int8 *a3)
{
  unsigned int valuePtr = 0;
  CFNumberRef v4 = (const __CFNumber *)CFPreferencesCopyAppValue(key, (CFStringRef)*MEMORY[0x263EFFE60]);
  if (!v4)
  {
    unsigned __int8 v7 = 0;
    if (!a3) {
      return valuePtr;
    }
    goto LABEL_11;
  }
  CFNumberRef v5 = v4;
  CFTypeID v6 = CFGetTypeID(v4);
  if (v6 == CFNumberGetTypeID())
  {
    double v9 = 0.0;
    if (CFNumberGetValue(v5, kCFNumberIntType, &valuePtr))
    {
LABEL_6:
      unsigned __int8 v7 = 1;
      goto LABEL_10;
    }
    if (CFNumberGetValue(v5, kCFNumberCGFloatType, &v9))
    {
      unsigned int valuePtr = v9;
      goto LABEL_6;
    }
  }
  unsigned __int8 v7 = 0;
LABEL_10:
  CFRelease(v5);
  if (a3) {
LABEL_11:
  }
    *a3 = v7;
  return valuePtr;
}

uint64_t JCImageAnalyzer::Reset(JCImageAnalyzer *this)
{
  CGColorRef v2 = *(CGColorRef *)this;
  if (v2)
  {
    free(v2);
    *(void *)this = 0;
  }
  *(_OWORD *)((char *)this + 8) = *MEMORY[0x263F001B0];
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 3, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 5, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 7, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 9, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 11, v26);
  JCColor::~JCColor((JCColor *)v26);
  bzero((char *)this + 136, 0x1B40uLL);
  double v3 = (JCImageAnalyzer *)*((void *)this + 895);
  CFNumberRef v4 = (JCImageAnalyzer *)*((void *)this + 894);
  while (v3 != v4)
    JCColor::~JCColor((JCImageAnalyzer *)((char *)v3 - 16));
  *((void *)this + 895) = v4;
  uint64_t v5 = *((void *)this + 898);
  uint64_t v6 = *((void *)this + 897);
  if (v5 != v6)
  {
    do
    {
      uint64_t v7 = v5 - 32;
      JCColor::~JCColor((JCColor *)(v5 - 16));
      uint64_t v5 = v7;
    }
    while (v7 != v6);
  }
  *((void *)this + 898) = v6;
  *((_OWORD *)this + 450) = 0u;
  LOBYTE(v26[0]) = 0;
  PrefValue = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v3, @"HueSpread", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v9 = (int)PrefValue;
  }
  else {
    int v9 = 7;
  }
  *((_DWORD *)this + 1778) = v9;
  double v10 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(PrefValue, @"SaturationSpread", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v11 = (int)v10;
  }
  else {
    int v11 = 10;
  }
  *((_DWORD *)this + 1779) = v11;
  double v12 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v10, @"BrightnessSpread", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v13 = (int)v12;
  }
  else {
    int v13 = 10;
  }
  *((_DWORD *)this + 1780) = v13;
  double v14 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v12, @"GrayscaleSpread", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v15 = (int)v14;
  }
  else {
    int v15 = 15;
  }
  *((_DWORD *)this + 1781) = v15;
  double v16 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v14, @"BackgroundMultiplier-LeftTop", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v17 = (int)v16;
  }
  else {
    int v17 = 1;
  }
  *((_DWORD *)this + 1782) = v17;
  double v18 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v16, @"BackgroundMultiplier-LeftBottom", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v19 = (int)v18;
  }
  else {
    int v19 = 1;
  }
  *((_DWORD *)this + 1783) = v19;
  double v20 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v18, @"BackgroundMultiplier-Top", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v21 = (int)v20;
  }
  else {
    int v21 = 1;
  }
  *((_DWORD *)this + 1784) = v21;
  v22 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v20, @"BackgroundMultiplier-Bottom", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v23 = (int)v22;
  }
  else {
    int v23 = 1;
  }
  *((_DWORD *)this + 1785) = v23;
  uint64_t result = JCImageAnalyzer::GetPrefValue(v22, @"BackgroundMultiplier-Right", (unsigned __int8 *)v26);
  if (LOBYTE(v26[0])) {
    int v25 = result;
  }
  else {
    int v25 = 1;
  }
  *((_DWORD *)this + 1786) = v25;
  return result;
}

void sub_20B8D8F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t JCImageAnalyzer::AnalyzeImage(JCImageAnalyzer *this, CGImage *a2)
{
  JCImageAnalyzer::Reset(this);
  if (!a2) {
    return 0;
  }
  ContextForImage = JCImageAnalyzer::CreateContextForImage((CGFloat *)this, a2);
  JCImageAnalyzer::CreateHSVMap((uint64_t)this, ContextForImage);
  CGContextRelease(ContextForImage);
  if (!*(void *)this) {
    return 0;
  }
  JCImageAnalyzer::CalculateBackgroundColor(this);
  JCImageAnalyzer::PickTextColors((CGColorRef *)this);
  JCImageAnalyzer::DoPostImageAnalysis((CGColorRef *)this);
  return 1;
}

CGContext *JCImageAnalyzer::CreateContextForImage(CGFloat *this, CGImageRef image)
{
  size_t Width = CGImageGetWidth(image);
  size_t Height = CGImageGetHeight(image);
  if (Width >= 0x80) {
    size_t v6 = 128;
  }
  else {
    size_t v6 = Width;
  }
  size_t v7 = vcvtad_u64_f64((double)Width / (double)Height * (double)v6);
  SRGB = (CGColorSpace *)CGColorSpaceGetSRGB();
  CopyWithColorSpace = CGImageCreateCopyWithColorSpace(image, SRGB);
  double v10 = CopyWithColorSpace;
  if (CopyWithColorSpace) {
    int v11 = CopyWithColorSpace;
  }
  else {
    int v11 = image;
  }
  RGBBitmapContext = JCImageAnalyzer::CreateRGBBitmapContext(CopyWithColorSpace, v11, v7, v6);
  int v13 = RGBBitmapContext;
  if (RGBBitmapContext)
  {
    CGFloat v14 = (double)CGBitmapContextGetWidth(RGBBitmapContext);
    v16.size.height = (double)CGBitmapContextGetHeight(v13);
    this[1] = v14;
    this[2] = v16.size.height;
    v16.origin.x = *(CGFloat *)MEMORY[0x263F00148];
    v16.origin.y = *(CGFloat *)(MEMORY[0x263F00148] + 8);
    v16.size.width = v14;
    CGContextDrawImage(v13, v16, v11);
  }
  CGImageRelease(v10);
  return v13;
}

uint64_t JCImageAnalyzer::CreateHSVMap(uint64_t this, CGContextRef context)
{
  if (context)
  {
    uint64_t v3 = this;
    size_t BytesPerRow = CGBitmapContextGetBytesPerRow(context);
    this = (uint64_t)CGBitmapContextGetData(context);
    uint64_t v17 = this;
    if (this)
    {
      uint64_t v4 = *(double *)(v3 + 16);
      unsigned int v21 = *(double *)(v3 + 8);
      this = (uint64_t)malloc_type_calloc(v21 * v4, 0x18uLL, 0x1000040504FFAC1uLL);
      *(void *)uint64_t v3 = this;
      if (this)
      {
        this = CGBitmapContextGetBitmapInfo(context);
        unsigned int v8 = v21;
        if (v4)
        {
          int v9 = 0;
          uint64_t v20 = 0;
          int v10 = this & 0x3000;
          if ((this & 0x3000) != 0) {
            uint64_t v11 = 0;
          }
          else {
            uint64_t v11 = 3;
          }
          uint64_t v19 = v4;
          do
          {
            if (v8)
            {
              int v12 = 0;
              size_t v13 = v17 + BytesPerRow * v20;
              do
              {
                if (v10) {
                  uint64_t v14 = 2;
                }
                else {
                  uint64_t v14 = 1;
                }
                if (v10) {
                  uint64_t v15 = 1;
                }
                else {
                  uint64_t v15 = 2;
                }
                LOBYTE(v5) = *(unsigned char *)(v13 + v11);
                LOBYTE(v6) = *(unsigned char *)(v13 + v15);
                LOBYTE(v7) = *(unsigned char *)(v13 + v14);
                this = (uint64_t)_RGBToHSB((float)((float)v7 / 255.0), (float)((float)v6 / 255.0), (float)((float)v5 / 255.0), (double *)&v22, (double *)&v22 + 1, (double *)&v23);
                unsigned int v8 = v21;
                uint64_t v16 = *(void *)v3 + 24 * (v9 + v12);
                long long v5 = v22;
                *(void *)(v16 + 16) = v23;
                *(_OWORD *)uint64_t v16 = v5;
                v13 += 4;
                ++v12;
              }
              while (v21 != v12);
            }
            v9 += v8;
            ++v20;
          }
          while (v20 != v19);
        }
      }
    }
  }
  return this;
}

void JCImageAnalyzer::CalculateBackgroundColor(JCImageAnalyzer *this)
{
  v36[4] = *MEMORY[0x263EF8340];
  CGColorRef v2 = operator new(0x20uLL);
  void *v2 = &unk_26C066210;
  v2[1] = JCImageAnalyzer::pixelBlock_GenerateMainHueHistogram;
  CGColorRef v2[2] = 0;
  v2[3] = this;
  v36[3] = v2;
  JCImageAnalyzer::IterateOverPixels((uint64_t)this, (uint64_t)v36, 0);
  uint64_t v3 = (JCImageAnalyzer *)std::__function::__value_func<void ()(CGPoint,JCHSVColor &,unsigned int)>::~__value_func[abi:ne180100](v36);
  uint64_t v4 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v3, (unsigned int *)this + 650, 0x168u, *((_DWORD *)this + 1778));
  unsigned int v5 = v4;
  unsigned int v6 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v4, (unsigned int *)this + 1010, 0x100u, *((_DWORD *)this + 1781));
  unsigned int v7 = v6;
  unsigned int v8 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v6, (unsigned int *)this + 34, 0x168u, *((_DWORD *)this + 1778));
  JCImageAnalyzer::WeightHistogram(v8, (unsigned int *)this + 394, 0x100u, *((_DWORD *)this + 1781));
  unsigned int v9 = *((_DWORD *)this + v5 + 650);
  unsigned int v10 = *((_DWORD *)this + v7 + 1010);
  JCColor::JCColor((JCColor *)v33, 0);
  if (v10 <= v9)
  {
    bzero((char *)this + 5064, 0x800uLL);
    v35 = 0;
    uint64_t v11 = operator new(0x20uLL);
    *uint64_t v11 = &unk_26C066210;
    v11[1] = JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHueInBackground;
    v11[2] = 0;
    v11[3] = this;
    v35 = v11;
    JCImageAnalyzer::IterateOverPixels((uint64_t)this, (uint64_t)v34, v5);
    int v12 = (JCImageAnalyzer *)std::__function::__value_func<void ()(CGPoint,JCHSVColor &,unsigned int)>::~__value_func[abi:ne180100](v34);
    size_t v13 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v12, (unsigned int *)this + 1266, 0x100u, *((_DWORD *)this + 1779));
    unsigned int v14 = v13;
    unsigned int v15 = JCImageAnalyzer::WeightHistogram(v13, (unsigned int *)this + 1522, 0x100u, *((_DWORD *)this + 1780));
    JCColor::JCColor((JCColor *)v32, (double)v5 / 359.0, (double)v14 / 255.0, (double)v15 / 255.0);
  }
  else
  {
    JCColor::JCColor((JCColor *)v32, (double)v7 / 255.0, 1.0);
  }
  JCColor::operator=(v33, v32);
  JCColor::~JCColor((JCColor *)v32);
  double v16 = *((double *)this + 1);
  double v17 = *((double *)this + 2);
  double v18 = v16 / v17;
  double v19 = v17 / v16;
  if (v18 >= 1.0) {
    double v19 = v18;
  }
  if (v19 < 1.20000005)
  {
    double v20 = 0.0;
    for (uint64_t i = 136; i != 1576; i += 16)
    {
      long long v22 = *(_OWORD *)((char *)this + i);
      v23.i64[0] = DWORD2(v22);
      v23.i64[1] = HIDWORD(v22);
      float64x2_t v24 = vcvtq_f64_u64(v23);
      v23.i64[0] = v22;
      v23.i64[1] = DWORD1(v22);
      float64x2_t v25 = vcvtq_f64_u64(v23);
      double v20 = v20 + v25.f64[0] + v25.f64[1] + v24.f64[0] + v24.f64[1];
    }
    for (uint64_t j = 0; j != 1024; j += 16)
    {
      long long v27 = *(_OWORD *)((char *)this + j + 1576);
      v28.i64[0] = DWORD2(v27);
      v28.i64[1] = HIDWORD(v27);
      float64x2_t v29 = vcvtq_f64_u64(v28);
      v28.i64[0] = v27;
      v28.i64[1] = DWORD1(v27);
      float64x2_t v30 = vcvtq_f64_u64(v28);
      double v20 = v20 + v30.f64[0] + v30.f64[1] + v29.f64[0] + v29.f64[1];
    }
    if (v10 <= v9) {
      unsigned int v31 = v9;
    }
    else {
      unsigned int v31 = v10;
    }
    *((double *)this + 900) = (double)v31 / v20;
  }
  JCImageAnalyzer::ValidateBackgroundColor(this, (JCColor *)v33, (JCColor *)v32);
  JCColor::operator=((CGColorRef *)this + 3, v32);
  JCColor::~JCColor((JCColor *)v32);
  JCColor::~JCColor((JCColor *)v33);
}

void sub_20B8D9580(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  JCColor::~JCColor((JCColor *)va);
  JCColor::~JCColor((JCColor *)va1);
  _Unwind_Resume(a1);
}

void JCImageAnalyzer::PickTextColors(CGColorRef *this)
{
  CGColorRef v2 = this + 3;
  JCImageAnalyzer::GetTextColorForBackgroundColor((JCImageAnalyzer *)this, this + 3, (JCColor *)v3);
  JCColor::operator=(this + 5, v3);
  JCColor::~JCColor((JCColor *)v3);
  JCImageAnalyzer::GetSecondaryTextColorForBackgroundColor((JCImageAnalyzer *)this, v2, (JCColor *)v3);
  JCColor::operator=(this + 7, v3);
  JCColor::~JCColor((JCColor *)v3);
}

void sub_20B8D9658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void JCImageAnalyzer::DoPostImageAnalysis(CGColorRef *this)
{
  JCColor::JCColor((JCColor *)v2, (const JCColor *)(this + 5), 0.75);
  JCColor::operator=(this + 9, v2);
  JCColor::~JCColor((JCColor *)v2);
  JCColor::JCColor((JCColor *)v2, (const JCColor *)(this + 7), 0.75);
  JCColor::operator=(this + 11, v2);
  JCColor::~JCColor((JCColor *)v2);
}

void sub_20B8D96E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

CGContextRef JCImageAnalyzer::CreateRGBBitmapContext(JCImageAnalyzer *this, CGImage *a2, size_t a3, size_t a4)
{
  if (!a2) {
    return 0;
  }
  SRGB = (CGColorSpace *)CGColorSpaceGetSRGB();
  if (!SRGB) {
    return 0;
  }
  return CGBitmapContextCreate(0, a3, a4, 8uLL, 4 * a3, SRGB, 2u);
}

JCColor *JCImageAnalyzer::CalculateAlternateTextColorForColor@<X0>(JCColor *a1@<X1>, JCColor *a2@<X8>)
{
  return JCColor::JCColor(a2, a1, 0.75);
}

uint64_t JCImageAnalyzer::IterateOverPixels(uint64_t result, uint64_t a2, int a3)
{
  if (*(void *)(a2 + 24))
  {
    uint64_t v3 = result;
    if (*(void *)result)
    {
      double v4 = *(double *)(result + 8);
      double v5 = *(double *)(result + 16);
      unsigned int v6 = v5;
      if (v5 <= v4) {
        double v5 = *(double *)(result + 8);
      }
      unsigned int v7 = vcvtpd_u64_f64(*(double *)(result + 7208) * v5);
      unsigned int v8 = v6 - 2 * v7;
      if (v8 > v7)
      {
        unsigned int v11 = v4 - 2 * v7;
        unsigned int v15 = v4 - 3 * v7;
        unsigned int v12 = v7;
        do
        {
          if (v11 > v7)
          {
            unsigned int v13 = v15;
            unsigned int v14 = v7;
            do
            {
              uint64_t result = std::function<void ()(CGPoint,JCHSVColor &,unsigned int)>::operator()(a2, *(void *)v3 + 24 * (v14 + v12 * *(double *)(v3 + 8)), a3, (double)v14 - (double)v7, (double)v12 - (double)v7);
              ++v14;
              --v13;
            }
            while (v13);
          }
          ++v12;
        }
        while (v12 != v8);
      }
    }
  }
  return result;
}

uint64_t JCImageAnalyzer::pixelBlock_GenerateMainHueHistogram(JCImageAnalyzer *this, double *a2, double a3, double a4)
{
  double v6 = a2[1];
  unsigned int v7 = vcvtad_u64_f64(*a2 * 359.0);
  double v8 = a2[2];
  unsigned int v9 = (char *)this + 4 * vcvtad_u64_f64(v8 * 255.0);
  if (v6 < 0.0399999991) {
    goto LABEL_8;
  }
  double v10 = 1.0;
  if (v6 <= 1.0) {
    double v10 = a2[1];
  }
  double v11 = v6 >= 0.0 ? v10 : 0.0;
  if (v8 + v11 * 0.100000001 + 0.0 >= 0.200000003) {
    unsigned int v12 = (_DWORD *)((char *)this + 4 * v7 + 136);
  }
  else {
LABEL_8:
  }
    unsigned int v12 = v9 + 1576;
  ++*v12;
  uint64_t result = JCImageAnalyzer::MultiplierForPointInBackground(this, *(CGPoint *)&a3);
  if (result)
  {
    double v14 = a2[1];
    if (v14 < 0.0399999991) {
      goto LABEL_18;
    }
    double v15 = 1.0;
    if (v14 <= 1.0) {
      double v15 = a2[1];
    }
    double v16 = v14 >= 0.0 ? v15 : 0.0;
    if (v16 * 0.100000001 + 0.0 + a2[2] >= 0.200000003) {
      double v17 = (_DWORD *)((char *)this + 4 * v7 + 2600);
    }
    else {
LABEL_18:
    }
      double v17 = v9 + 4040;
    *v17 += result;
  }
  return result;
}

uint64_t JCImageAnalyzer::WeightHistogram(JCImageAnalyzer *this, unsigned int *a2, unsigned int a3, int a4)
{
  size_t v7 = 4 * a3;
  double v8 = malloc_type_malloc(v7, 0x100004052888210uLL);
  memcpy(v8, a2, v7);
  if (a3)
  {
    uint64_t v10 = 0;
    unsigned int v11 = 0;
    LODWORD(v12) = 0;
    do
    {
      unsigned int v13 = *((_DWORD *)v8 + v10);
      if (a4 < 1) {
        goto LABEL_26;
      }
      int v14 = 0;
      double v15 = (double)v13;
      int v16 = 1;
      char v17 = 1;
      do
      {
        int v18 = v10 + v14 - 1;
        BOOL v19 = v18 < 0 && a3 == 360;
        LODWORD(v20) = v10 + v14 + 359;
        if (v19) {
          uint64_t v20 = v20;
        }
        else {
          uint64_t v20 = v18;
        }
        if ((v20 & 0x80000000) == 0)
        {
          LODWORD(v9) = *((_DWORD *)v8 + v20);
          double v9 = (double)*(unint64_t *)&v9;
          if (v15 >= v9)
          {
            double v9 = ((double)v16 * -0.0500000007 + 1.0) * v9;
            v13 += vcvtad_u64_f64(v9);
            a2[v20] = 0;
          }
          else
          {
            char v17 = 0;
          }
        }
        int v21 = v10 + v16;
        if ((int)v10 + v16 > 360 && a3 == 360) {
          int v21 = v10 + v16 - 360;
        }
        if (v21 < (int)a3)
        {
          LODWORD(v9) = *((_DWORD *)v8 + v21);
          double v9 = (double)*(unint64_t *)&v9;
          if (v15 >= v9)
          {
            double v9 = ((double)v16 * -0.0500000007 + 1.0) * v9;
            v13 += vcvtad_u64_f64(v9);
            a2[v21] = 0;
          }
          else
          {
            char v17 = 0;
          }
        }
        ++v16;
        --v14;
      }
      while (-a4 != v14);
      if (v17) {
LABEL_26:
      }
        a2[v10] = v13;
      else {
        unsigned int v13 = a2[v10];
      }
      if (v13 <= v11) {
        uint64_t v12 = v12;
      }
      else {
        uint64_t v12 = v10;
      }
      if (v13 > v11) {
        unsigned int v11 = v13;
      }
      ++v10;
    }
    while (v10 != a3);
  }
  else
  {
    uint64_t v12 = 0;
  }
  free(v8);
  return v12;
}

double JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHueInBackground(JCImageAnalyzer *a1, double *a2, int a3, double result, double a5)
{
  double v5 = a2[1];
  if (v5 >= 0.0399999991)
  {
    double v7 = 1.0;
    if (v5 <= 1.0) {
      double v7 = a2[1];
    }
    if (v5 >= 0.0) {
      double v8 = v7;
    }
    else {
      double v8 = 0.0;
    }
    if (v8 * 0.100000001 + 0.0 + a2[2] >= 0.200000003)
    {
      int v11 = JCImageAnalyzer::MultiplierForPointInBackground(a1, *(CGPoint *)&result);
      if (v11)
      {
        uint64_t result = *a2 * 359.0;
        int v12 = vcvtad_u64_f64(result) - a3;
        if (v12 >= 0) {
          int v13 = v12;
        }
        else {
          int v13 = -v12;
        }
        if (v12 + 360 < 0) {
          unsigned int v14 = -360 - v12;
        }
        else {
          unsigned int v14 = v12 + 360;
        }
        if (v13 >= v14) {
          int v13 = v14;
        }
        if (v12 >= -360) {
          int v15 = v12 + 360;
        }
        else {
          int v15 = -360 - v12;
        }
        if (v13 < v15) {
          int v15 = v13;
        }
        if (v15 <= *((_DWORD *)a1 + 1778))
        {
          unsigned int v16 = vcvtad_u64_f64(a2[2] * 255.0);
          uint64_t result = a2[1] * 255.0;
          char v17 = (_DWORD *)((char *)a1 + 4 * vcvtad_u64_f64(result));
          v17[1266] += v11;
          *((_DWORD *)a1 + v16 + 1522) += v11;
        }
      }
    }
  }
  return result;
}

void JCImageAnalyzer::ValidateBackgroundColor(JCImageAnalyzer *this@<X0>, JCColor *a2@<X1>, JCColor *a3@<X8>)
{
  JCColor::JCColor((JCColor *)v50, a2);
  if (*((double *)this + 900) <= 0.4) {
    goto LABEL_6;
  }
  double v6 = *((double *)this + 1);
  double v7 = v6 * 0.0500000007 * 3.0;
  if (*((double *)this + 2) > v6) {
    double v6 = *((double *)this + 2);
  }
  if (ceil(*((double *)this + 901) * v6) >= v7
    || (double BorderLengthForColor = JCImageAnalyzer::GetBorderLengthForColor(this, (CGColorRef *)a2),
        BorderLengthForColor <= 0.0))
  {
LABEL_6:
    HistogramColorValues = JCImageAnalyzer::GetHistogramColorValues(this);
    if (HistogramColorValues[1] == *HistogramColorValues)
    {
      JCColor::JCColor(a3, a2);
      goto LABEL_83;
    }
    JCColor::JCColor((JCColor *)v49, (const JCColor *)(*HistogramColorValues + 16));
    if (JCColor::IsCloseToColor(v50, (JCColor *)v49))
    {
      JCColor::operator=(v50, v49);
    }
    else
    {
      uint64_t v10 = *HistogramColorValues;
      if ((int)((unint64_t)(HistogramColorValues[1] - *HistogramColorValues) >> 5) >= 1)
      {
        uint64_t v11 = 0;
        int v12 = -1;
        double v13 = 0.0;
        uint64_t v14 = 8;
        while (1)
        {
          JCColor::JCColor((JCColor *)v48, (const JCColor *)(v10 + v14 + 8));
          double v15 = *(double *)(*HistogramColorValues + v14);
          if (v12 == -1)
          {
            if (JCColor::ColorModel(v48) && JCColor::ColorModel(v50))
            {
              double v16 = JCColor::HueComponent(v48);
              int v17 = (int)(v16 * 360.0) - (int)(JCColor::HueComponent(v50) * 360.0);
              if (v17 >= 0) {
                int v18 = v17;
              }
              else {
                int v18 = -v17;
              }
              if (v17 + 360 < 0) {
                unsigned int v19 = -360 - v17;
              }
              else {
                unsigned int v19 = v17 + 360;
              }
              if (v18 >= v19) {
                int v18 = v19;
              }
              if (v17 >= -360) {
                int v20 = v17 + 360;
              }
              else {
                int v20 = -360 - v17;
              }
              if (v18 < v20) {
                int v20 = v18;
              }
              if (v20 >= (uint64_t)*((unsigned int *)this + 1778)) {
                int v12 = -1;
              }
              else {
                int v12 = v11;
              }
            }
            else
            {
              int v12 = -1;
            }
          }
          BOOL IsReallyCloseToColor = JCColor::IsReallyCloseToColor(v48, (JCColor *)v50);
          JCColor::~JCColor((JCColor *)v48);
          if (IsReallyCloseToColor) {
            goto LABEL_42;
          }
          double v13 = v13 + v15;
          ++v11;
          uint64_t v10 = *HistogramColorValues;
          v14 += 32;
          if (v11 >= (int)((unint64_t)(HistogramColorValues[1] - *HistogramColorValues) >> 5))
          {
            if (v13 > 0.899999976 && *(double *)(v10 + 8) > 0.330000013)
            {
              double v22 = JCColor::BrightnessComponent(v49);
              double v23 = JCColor::BrightnessComponent(v50);
              uint64_t v24 = *HistogramColorValues;
              if (*(double *)(*HistogramColorValues + 8) > 0.699999988
                && (unint64_t)(HistogramColorValues[1] - v24) > 0x20)
              {
                goto LABEL_86;
              }
              if (v12 != -1 && (unint64_t)(HistogramColorValues[1] - v24) >= 0x21)
              {
                JCColor::JCColor((JCColor *)v48, (const JCColor *)(v24 + 32 * v12 + 16));
                JCColor::operator=(v50, v48);
                JCColor::~JCColor((JCColor *)v48);
                goto LABEL_42;
              }
              if (v23 > 0.75 && v22 < v23) {
LABEL_86:
              }
                JCColor::operator=(v50, v49);
            }
            goto LABEL_42;
          }
        }
      }
    }
    int v12 = -1;
LABEL_42:
    if (!JCColor::IsSaturated(v50)) {
      goto LABEL_80;
    }
    double v25 = *(double *)(*HistogramColorValues + 8);
    BOOL v26 = JCColor::operator==(v50, v49);
    BOOL v27 = v25 > 0.33 && v26;
    uint64_t v28 = *HistogramColorValues;
    uint64_t v29 = HistogramColorValues[1];
    if (v27 && v25 < 0.66)
    {
      unint64_t v30 = (v29 - v28) >> 5;
      if (v30 >= 3) {
        unint64_t v30 = 3;
      }
      if (v30 >= 2)
      {
        char v31 = 0;
        uint64_t v32 = 40;
        for (unint64_t i = 1; i < v38; ++i)
        {
          if (*(double *)(v28 + v32) < 0.2) {
            break;
          }
          v34 = JCColor::JCColor((JCColor *)v48, (const JCColor *)(v28 + v32 + 8));
          v35 = (const JCColor *)JCColor::WhiteColor(v34);
          JCColor::JCColor((JCColor *)v47, v35);
          BOOL v36 = JCColor::IsReallyCloseToColor(v48, (JCColor *)v47);
          BOOL v37 = v36;
          if (v36)
          {
            JCColor::operator=(v50, v48);
            char v31 = 1;
          }
          JCColor::~JCColor((JCColor *)v47);
          JCColor::~JCColor((JCColor *)v48);
          if (v37) {
            break;
          }
          uint64_t v28 = *HistogramColorValues;
          unint64_t v38 = (HistogramColorValues[1] - *HistogramColorValues) >> 5;
          if (v38 >= 3) {
            unint64_t v38 = 3;
          }
          v32 += 32;
        }
        if (v31) {
          goto LABEL_80;
        }
      }
      uint64_t v28 = *HistogramColorValues;
      uint64_t v29 = HistogramColorValues[1];
    }
    if ((unint64_t)(v29 - v28) < 0x41)
    {
LABEL_80:
      JCImageAnalyzer::GetSecondaryTextColorForBackgroundColor(this, v50, (JCColor *)v48);
      JCColor::EnsureContrastWithColor(v48, v50);
      if (JCColor::GetContrastWithColorLuminanceMethod(v48, v50) < 3.5) {
        JCColor::EnsureContrastWithColor(v50, v48);
      }
      JCColor::JCColor(a3, (const JCColor *)v50);
      JCColor::~JCColor((JCColor *)v48);
      JCColor::~JCColor((JCColor *)v49);
      goto LABEL_83;
    }
    JCColor::JCColor((JCColor *)v48, (const JCColor *)(v28 + 48));
    JCColor::JCColor((JCColor *)v47, (const JCColor *)(*HistogramColorValues + 80));
    if (v25 - *(double *)(*HistogramColorValues + 72) < 0.1
      && JCColor::IsSaturated(v48)
      && (BOOL IsSaturated = JCColor::IsSaturated(v47)))
    {
      v40 = (CGColorRef *)JCColor::WhiteColor((JCColor *)IsSaturated);
    }
    else
    {
      if (v12 == -1) {
        goto LABEL_79;
      }
      if (*(double *)(*HistogramColorValues + 32 * v12 + 8) >= 0.25 || v25 <= 0.25) {
        goto LABEL_79;
      }
      v40 = v49;
    }
    JCColor::operator=(v50, v40);
LABEL_79:
    JCColor::~JCColor((JCColor *)v47);
    JCColor::~JCColor((JCColor *)v48);
    goto LABEL_80;
  }
  *((double *)this + 901) = BorderLengthForColor + *((double *)this + 901);
  bzero((char *)this + 136, 0x1340uLL);
  uint64_t v41 = *((void *)this + 895);
  uint64_t v42 = *((void *)this + 894);
  while (v41 != v42)
    JCColor::~JCColor((JCColor *)(v41 - 16));
  *((void *)this + 895) = v42;
  uint64_t v43 = *((void *)this + 898);
  uint64_t v44 = *((void *)this + 897);
  if (v43 != v44)
  {
    do
    {
      uint64_t v45 = v43 - 32;
      JCColor::~JCColor((JCColor *)(v43 - 16));
      uint64_t v43 = v45;
    }
    while (v45 != v44);
  }
  *((void *)this + 898) = v44;
  JCImageAnalyzer::CalculateBackgroundColor(this);
  JCColor::JCColor(a3, (JCImageAnalyzer *)((char *)this + 24));
LABEL_83:
  JCColor::~JCColor((JCColor *)v50);
}

void sub_20B8DA1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v7 = va_arg(va2, void);
  uint64_t v9 = va_arg(va2, void);
  JCColor::~JCColor((JCColor *)va);
  JCColor::~JCColor((JCColor *)va1);
  JCColor::~JCColor((JCColor *)va2);
  _Unwind_Resume(a1);
}

BOOL JCImageAnalyzer::GetColorLuminanceTypeOfColor(CGColorRef *this, JCColor *a2)
{
  return JCColor::Luminance(this) <= 0.300000012;
}

void JCImageAnalyzer::GetTextColorForBackgroundColor(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  JCImageAnalyzer::SuggestedTextColorForBackground(this, a2, (JCColor *)v11);
  JCImageAnalyzer::SuggestedSecondaryTextColorForBackground(this, a2, (JCColor *)v10);
  if (JCColor::IsReallyCloseToColor(v11, (JCColor *)v10)
    || (double v6 = JCColor::Luminance(v11),
        uint64_t v7 = (CGColorRef *)((char *)this + 24),
        double v8 = JCColor::Luminance(v7),
        double v9 = JCColor::Luminance(v10),
        vabdd_f64(v9, JCColor::Luminance(v7)) <= fabs(v6 - v8)))
  {
    JCColor::JCColor(a3, (const JCColor *)v11);
  }
  else
  {
    JCColor::JCColor(a3, (const JCColor *)v10);
  }
  JCColor::~JCColor((JCColor *)v10);
  JCColor::~JCColor((JCColor *)v11);
}

void sub_20B8DA374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void JCImageAnalyzer::GetSecondaryTextColorForBackgroundColor(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  JCImageAnalyzer::SuggestedTextColorForBackground(this, a2, (JCColor *)v11);
  JCImageAnalyzer::SuggestedSecondaryTextColorForBackground(this, a2, (JCColor *)v10);
  if (JCColor::IsReallyCloseToColor(v11, (JCColor *)v10)
    || (double v6 = JCColor::Luminance(v11),
        uint64_t v7 = (CGColorRef *)((char *)this + 24),
        double v8 = JCColor::Luminance(v7),
        double v9 = JCColor::Luminance(v10),
        vabdd_f64(v9, JCColor::Luminance(v7)) <= fabs(v6 - v8)))
  {
    JCColor::JCColor(a3, (const JCColor *)v10);
  }
  else
  {
    JCColor::JCColor(a3, (const JCColor *)v11);
  }
  JCColor::~JCColor((JCColor *)v10);
  JCColor::~JCColor((JCColor *)v11);
}

void sub_20B8DA480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t JCImageAnalyzer::PrintHistogram(JCImageAnalyzer *this, unsigned int *a2, unsigned int a3)
{
  if (a3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a3;
    do
    {
      uint64_t v6 = a2[v4];
      if (v6) {
        uint64_t result = printf("%ld - %ld\n", v4, v6);
      }
      ++v4;
    }
    while (v5 != v4);
  }
  return result;
}

uint64_t JCImageAnalyzer::MultiplierForPointInBackground(JCImageAnalyzer *this, CGPoint a2)
{
  CGFloat y = a2.y;
  CGFloat x = a2.x;
  double v5 = *((double *)this + 1);
  double v6 = *((double *)this + 2);
  if (v6 <= v5) {
    double v7 = *((double *)this + 1);
  }
  else {
    double v7 = *((double *)this + 2);
  }
  double v8 = (double)(2 * vcvtpd_u64_f64(*((double *)this + 901) * v7));
  double v9 = v5 - v8;
  double v10 = v6 - v8;
  double v11 = (v5 - v8) * 0.0500000007;
  double v12 = (v6 - v8) * 0.5;
  v19.origin.CGFloat x = 0.0;
  v19.origin.CGFloat y = 0.0;
  v19.size.width = v11;
  v19.size.height = v12;
  v14.CGFloat x = x;
  v14.CGFloat y = y;
  if (CGRectContainsPoint(v19, v14)) {
    return *((unsigned int *)this + 1782);
  }
  v20.size.height = v12 + v12;
  v20.origin.CGFloat x = 0.0;
  v20.origin.CGFloat y = 0.0;
  v20.size.width = v11;
  v15.CGFloat x = x;
  v15.CGFloat y = y;
  if (CGRectContainsPoint(v20, v15)) {
    return *((unsigned int *)this + 1783);
  }
  v21.origin.CGFloat x = 0.0;
  v21.origin.CGFloat y = 0.0;
  v21.size.width = v9;
  v21.size.height = v10 * 0.0500000007;
  v16.CGFloat x = x;
  v16.CGFloat y = y;
  if (CGRectContainsPoint(v21, v16)) {
    return *((unsigned int *)this + 1784);
  }
  v22.origin.CGFloat x = 0.0;
  v22.origin.CGFloat y = 0.0;
  v22.size.width = v9;
  v22.size.height = v10;
  v23.origin.CGFloat y = CGRectGetMaxY(v22) - v10 * 0.0500000007;
  v23.origin.CGFloat x = 0.0;
  v23.size.width = v9;
  v23.size.height = v10 * 0.0500000007;
  v17.CGFloat x = x;
  v17.CGFloat y = y;
  if (CGRectContainsPoint(v23, v17)) {
    return *((unsigned int *)this + 1785);
  }
  v24.origin.CGFloat x = 0.0;
  v24.origin.CGFloat y = 0.0;
  v24.size.width = v9;
  v24.size.height = v10;
  v25.origin.CGFloat x = CGRectGetMaxX(v24) - v11;
  v25.origin.CGFloat y = 0.0;
  v25.size.width = v11;
  v25.size.height = v10;
  v18.CGFloat x = x;
  v18.CGFloat y = y;
  uint64_t result = CGRectContainsPoint(v25, v18);
  if (result) {
    return *((unsigned int *)this + 1786);
  }
  return result;
}

double JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHue(uint64_t a1, double *a2, int a3)
{
  double result = a2[1];
  if (result >= 0.0399999991)
  {
    double v4 = 1.0;
    if (result <= 1.0) {
      double v4 = a2[1];
    }
    if (result < 0.0) {
      double v4 = 0.0;
    }
    double v5 = a2[2];
    if (v4 * 0.100000001 + 0.0 + v5 >= 0.200000003)
    {
      int v6 = vcvtad_u64_f64(*a2 * 359.0) - a3;
      if (v6 >= 0) {
        int v7 = v6;
      }
      else {
        int v7 = -v6;
      }
      if (v6 + 360 < 0) {
        unsigned int v8 = -360 - v6;
      }
      else {
        unsigned int v8 = v6 + 360;
      }
      if (v7 >= v8) {
        int v7 = v8;
      }
      if (v6 >= -360) {
        int v9 = v6 + 360;
      }
      else {
        int v9 = -360 - v6;
      }
      if (v7 < v9) {
        int v9 = v7;
      }
      if (v9 <= *(_DWORD *)(a1 + 7112))
      {
        double result = result * 255.0;
        uint64_t v10 = a1 + 4 * vcvtad_u64_f64(result);
        ++*(_DWORD *)(v10 + 5064);
        uint64_t v11 = a1 + 4 * vcvtad_u64_f64(v5 * 255.0);
        ++*(_DWORD *)(v11 + 6088);
      }
    }
  }
  return result;
}

uint64_t std::function<void ()(CGPoint,JCHSVColor &,unsigned int)>::operator()(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  *(double *)unsigned int v8 = a4;
  *(double *)&v8[1] = a5;
  int v7 = a3;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!v5) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, int *))(*(void *)v5 + 48))(v5, v8, a2, &v7);
}

double JCImageAnalyzer::GetBorderLengthForColor(JCImageAnalyzer *this, CGColorRef *a2)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  if (!*(void *)this) {
    return 0.0;
  }
  uint64_t v4 = 0;
  double v6 = *((double *)this + 1);
  double v5 = *((double *)this + 2);
  unsigned int v7 = v5;
  if (v5 <= v6) {
    double v5 = *((double *)this + 1);
  }
  unsigned int v8 = vcvtpd_u64_f64(*((double *)this + 901) * v5);
  int v71 = 2 * v8;
  unsigned int v72 = v6;
  unsigned int v9 = v6 - 2 * v8;
  unsigned int v10 = v7 - 2 * v8;
  float v70 = (float)v9;
  float v11 = roundf((float)((float)v9 * 0.05) + (float)((float)v9 * 0.05));
  double v12 = v11;
  float v13 = roundf((float)((float)v10 * 0.05) + (float)((float)v10 * 0.05));
  unsigned int v74 = v10;
  unsigned int v75 = v8;
  double v14 = (double)v10;
  double v15 = (double)v8;
  double v16 = v13;
  int v76 = ~v8;
  do
  {
    uint64_t v17 = v4 + 1;
    unsigned int v18 = 0;
    if (v11 <= 0.0)
    {
      *(_DWORD *)&v78[4 * v4 + 52] = 0;
LABEL_18:
      double v25 = 0.0;
      goto LABEL_19;
    }
    unsigned int v19 = (v15 + (double)v17 * 0.25 * v14);
    double v20 = 0.0;
    do
    {
      CGRect v21 = (double *)(*(void *)this + 24 * (v75 + v9 * v19 + v18));
      JCColor::JCColor((JCColor *)v78, *v21, v21[1], v21[2]);
      BOOL IsCloseToColor = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!IsCloseToColor) {
        break;
      }
      double v20 = (double)++v18;
    }
    while ((double)v18 < v12);
    if (v20 >= v12) {
      unsigned int v23 = 0;
    }
    else {
      unsigned int v23 = v18;
    }
    *(_DWORD *)&v78[4 * v4 + 52] = v23;
    unsigned int v18 = 0;
    if (v11 <= 0.0) {
      goto LABEL_18;
    }
    unsigned int v24 = v9 + v9 * v19 + v76;
    double v25 = 0.0;
    do
    {
      JCColor::JCColor((JCColor *)v78, *(double *)(*(void *)this + 24 * v24), *(double *)(*(void *)this + 24 * v24 + 8), *(double *)(*(void *)this + 24 * v24 + 16));
      BOOL v26 = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!v26) {
        break;
      }
      double v25 = (double)++v18;
      --v24;
    }
    while ((double)v18 < v12);
LABEL_19:
    if (v25 >= v12) {
      unsigned int v27 = 0;
    }
    else {
      unsigned int v27 = v18;
    }
    *(_DWORD *)&v78[4 * v4++ + 28] = v27;
  }
  while (v17 != 3);
  uint64_t v28 = 0;
  double v29 = (double)v9;
  int v73 = (v74 + v76) * v9;
  do
  {
    uint64_t v30 = v28 + 1;
    unsigned int v31 = 0;
    if (v13 <= 0.0)
    {
      *(_DWORD *)&v78[4 * v28 + 40] = 0;
LABEL_37:
      double v37 = 0.0;
      goto LABEL_38;
    }
    unsigned int v77 = (v15 + (double)v30 * 0.25 * v29);
    unsigned int v32 = v75 * v9 + v77;
    double v33 = 0.0;
    do
    {
      JCColor::JCColor((JCColor *)v78, *(double *)(*(void *)this + 24 * v32), *(double *)(*(void *)this + 24 * v32 + 8), *(double *)(*(void *)this + 24 * v32 + 16));
      BOOL v34 = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!v34) {
        break;
      }
      double v33 = (double)++v31;
      v32 += v9;
    }
    while ((double)v31 < v16);
    if (v33 >= v16) {
      unsigned int v35 = 0;
    }
    else {
      unsigned int v35 = v31;
    }
    *(_DWORD *)&v78[4 * v28 + 40] = v35;
    unsigned int v31 = 0;
    if (v13 <= 0.0) {
      goto LABEL_37;
    }
    unsigned int v36 = v73 + v77;
    double v37 = 0.0;
    do
    {
      JCColor::JCColor((JCColor *)v78, *(double *)(*(void *)this + 24 * v36), *(double *)(*(void *)this + 24 * v36 + 8), *(double *)(*(void *)this + 24 * v36 + 16));
      BOOL v38 = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!v38) {
        break;
      }
      double v37 = (double)++v31;
      v36 += v71 - v72;
    }
    while ((double)v31 < v16);
LABEL_38:
    if (v37 >= v16) {
      unsigned int v39 = 0;
    }
    else {
      unsigned int v39 = v31;
    }
    *(_DWORD *)&v78[4 * v28++ + 16] = v39;
  }
  while (v30 != 3);
  uint64_t v40 = 0;
  unsigned int v41 = 0;
  unsigned int v42 = 0;
  unsigned int v43 = 0;
  unsigned int v44 = 0;
  unsigned int v45 = 0x40000000;
  unsigned int v46 = 0x40000000;
  unsigned int v47 = 0x40000000;
  unsigned int v48 = 0x40000000;
  do
  {
    unsigned int v49 = *(_DWORD *)&v78[v40 + 52];
    if (v44 <= v49) {
      unsigned int v44 = *(_DWORD *)&v78[v40 + 52];
    }
    unsigned int v50 = *(_DWORD *)&v78[v40 + 28];
    if (v43 <= v50) {
      unsigned int v43 = *(_DWORD *)&v78[v40 + 28];
    }
    unsigned int v51 = *(_DWORD *)&v78[v40 + 40];
    if (v42 <= v51) {
      unsigned int v42 = *(_DWORD *)&v78[v40 + 40];
    }
    unsigned int v52 = *(_DWORD *)&v78[v40 + 16];
    if (v41 <= v52) {
      unsigned int v41 = *(_DWORD *)&v78[v40 + 16];
    }
    if (v48 >= v49) {
      unsigned int v48 = *(_DWORD *)&v78[v40 + 52];
    }
    if (v47 >= v50) {
      unsigned int v47 = *(_DWORD *)&v78[v40 + 28];
    }
    if (v46 >= v51) {
      unsigned int v46 = *(_DWORD *)&v78[v40 + 40];
    }
    if (v45 >= v52) {
      unsigned int v45 = *(_DWORD *)&v78[v40 + 16];
    }
    v40 += 4;
  }
  while (v40 != 12);
  unsigned int v53 = vcvtps_u32_f32(v70 * 0.02);
  unsigned int v54 = v42 - v46;
  unsigned int v55 = v41 - v45;
  if (v43) {
    BOOL v56 = v43 - v47 >= v53;
  }
  else {
    BOOL v56 = 1;
  }
  int v57 = !v56;
  if (v56) {
    int v58 = 1;
  }
  else {
    int v58 = 2;
  }
  if (v44) {
    BOOL v59 = v44 - v48 >= v53;
  }
  else {
    BOOL v59 = 1;
  }
  int v60 = !v59;
  if (v59) {
    int v58 = v57;
  }
  if (v42) {
    BOOL v61 = v54 >= v53;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = !v61;
  if (!v61) {
    ++v58;
  }
  if (v41) {
    BOOL v63 = v55 >= v53;
  }
  else {
    BOOL v63 = 1;
  }
  int v64 = !v63;
  if (v63) {
    unsigned int v65 = v58;
  }
  else {
    unsigned int v65 = v58 + 1;
  }
  if (v65 >= 3)
  {
    if (!v60) {
      unsigned int v44 = 0;
    }
    if (v44 > v43) {
      unsigned int v43 = v44;
    }
    if (!v57) {
      unsigned int v43 = v44;
    }
    if (v43 > v42) {
      unsigned int v42 = v43;
    }
    if (!v62) {
      unsigned int v42 = v43;
    }
    if (v42 > v41) {
      unsigned int v41 = v42;
    }
    if (!v64) {
      unsigned int v41 = v42;
    }
    return (double)(v41 + 1) / v29;
  }
  else
  {
    v66 = (double *)(*(void *)this + 24 * (v9 + (float)((float)v75 + (float)(v70 * 0.25))));
    JCColor::JCColor((JCColor *)v78, *v66, v66[1], v66[2]);
    double v67 = 0.0;
    if (!JCColor::IsCloseToColor(a2, (JCColor *)v78))
    {
      JCImageAnalyzer::GetBorderLengthForColor(this, (JCColor *)v78);
      double v67 = v68;
    }
    JCColor::~JCColor((JCColor *)v78);
  }
  return v67;
}

void sub_20B8DAD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  JCColor::~JCColor((JCColor *)va);
  _Unwind_Resume(a1);
}

uint64_t *JCImageAnalyzer::GetHistogramColorValues(JCImageAnalyzer *this)
{
  double v1 = (uint64_t *)((char *)this + 7176);
  if (*((void *)this + 898) == *((void *)this + 897))
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    __p = 0;
    int v57 = 0;
    int v58 = 0;
    do
    {
      uint64_t v5 = *((unsigned int *)this + v4 + 34);
      if (v5 >= 0x65)
      {
        if (v3 >= v58)
        {
          uint64_t v6 = (v3 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v6 + 1) >> 61) {
            std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v7 = (v58 - (unsigned char *)__p) >> 2;
          if (v7 <= v6 + 1) {
            unint64_t v7 = v6 + 1;
          }
          if ((unint64_t)(v58 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v8 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v8 = v7;
          }
          if (v8) {
            unsigned int v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<sortHueEntry>>((uint64_t)&v58, v8);
          }
          else {
            unsigned int v9 = 0;
          }
          unsigned int v10 = &v9[8 * v6];
          *(void *)unsigned int v10 = v4 | (v5 << 32);
          uint64_t v3 = v10 + 8;
          double v12 = (char *)__p;
          float v11 = v57;
          if (v57 != __p)
          {
            do
            {
              uint64_t v13 = *((void *)v11 - 1);
              v11 -= 8;
              *((void *)v10 - 1) = v13;
              v10 -= 8;
            }
            while (v11 != v12);
            float v11 = (char *)__p;
          }
          __p = v10;
          int v57 = v3;
          int v58 = &v9[8 * v8];
          if (v11) {
            operator delete(v11);
          }
        }
        else
        {
          *(void *)uint64_t v3 = v4 | (v5 << 32);
          v3 += 8;
        }
        int v57 = v3;
      }
      ++v4;
    }
    while (v4 != 360);
    unint64_t v14 = 126 - 2 * __clz((v3 - (unsigned char *)__p) >> 3);
    *(void *)&long long v50 = CompareHueEntry;
    if (v3 == __p) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = v14;
    }
    std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,false>((uint64_t)__p, v3, (uint64_t (**)(uint64_t, uint64_t))&v50, v15, 1);
    unsigned int v53 = 0;
    unsigned int v54 = 0;
    unint64_t v55 = 0;
    unint64_t v16 = (v57 - (unsigned char *)__p) >> 3;
    if (v16 >= 8) {
      unint64_t v16 = 8;
    }
    if (v16)
    {
      uint64_t v17 = 0;
      uint64_t v18 = 8 * v16;
      do
      {
        uint64_t v19 = *(unsigned int *)((char *)__p + v17);
        double v20 = (char *)this + 4 * v19;
        unsigned int v22 = *((_DWORD *)v20 + 34);
        CGRect v21 = v20 + 136;
        if (v22 >= 0x65)
        {
          JCImageAnalyzer::GetDominantColorForHue(this, v19, (JCColor *)v52);
          JCColor::JCColor((JCColor *)v51, 0);
          JCColor::JCColor((JCColor *)v49, (const JCColor *)v52);
          JCColor::operator=(v51, v49);
          JCColor::~JCColor((JCColor *)v49);
          LODWORD(v50) = *v21;
          unsigned int v23 = v54;
          if ((unint64_t)v54 >= v55)
          {
            unsigned int v24 = (CGColorRef *)std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>((uint64_t *)&v53, &v50);
          }
          else
          {
            *(_OWORD *)unsigned int v54 = v50;
            JCColor::JCColor((JCColor *)(v23 + 2), (const JCColor *)v51);
            unsigned int v24 = v23 + 4;
          }
          unsigned int v54 = v24;
          JCColor::~JCColor((JCColor *)v51);
          JCColor::~JCColor((JCColor *)v52);
        }
        v17 += 8;
      }
      while (v18 != v17);
    }
    uint64_t v25 = 0;
    BOOL v26 = (char *)this + 1576;
    do
    {
      if (*(_DWORD *)&v26[4 * v25] >= 0x65u)
      {
        JCColor::JCColor((JCColor *)v52, (double)v25 / 255.0, 1.0);
        JCColor::JCColor((JCColor *)v51, 0);
        JCColor::JCColor((JCColor *)v48, (const JCColor *)v52);
        JCColor::operator=(v51, v48);
        JCColor::~JCColor((JCColor *)v48);
        LODWORD(v50) = *(_DWORD *)&v26[4 * v25];
        unsigned int v27 = v54;
        if ((unint64_t)v54 >= v55)
        {
          uint64_t v28 = (CGColorRef *)std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>((uint64_t *)&v53, &v50);
        }
        else
        {
          *(_OWORD *)unsigned int v54 = v50;
          JCColor::JCColor((JCColor *)(v27 + 2), (const JCColor *)v51);
          uint64_t v28 = v27 + 4;
        }
        unsigned int v54 = v28;
        JCColor::~JCColor((JCColor *)v51);
        JCColor::~JCColor((JCColor *)v52);
      }
      ++v25;
    }
    while (v25 != 256);
    unint64_t v29 = 126 - 2 * __clz(((char *)v54 - (char *)v53) >> 5);
    v52[0] = (uint64_t (*)(long long *, long long *))CompareSortColor;
    if (v54 == v53) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = v29;
    }
    std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,false>(v53, v54, v52, v30, 1);
    unint64_t v32 = (char *)v54 - (char *)v53;
    unint64_t v33 = (unint64_t)((char *)v54 - (char *)v53) >> 5;
    if ((int)v33 >= 1)
    {
      unsigned int v34 = 0;
      uint64_t v35 = (v32 >> 5);
      uint64_t v36 = v35;
      double v37 = v53;
      do
      {
        int v38 = *(_DWORD *)v37;
        v37 += 4;
        v34 += v38;
        --v36;
      }
      while (v36);
      unsigned int v39 = (double *)(v53 + 1);
      do
      {
        LODWORD(v31) = *((_DWORD *)v39 - 2);
        double v31 = (double)*(unint64_t *)&v31 / (double)v34;
        *unsigned int v39 = v31;
        v39 += 4;
        --v35;
      }
      while (v35);
    }
    uint64_t v40 = (_OWORD *)*((void *)this + 898);
    unsigned int v41 = (_OWORD *)*((void *)this + 897);
    if (v40 != v41)
    {
      do
      {
        unsigned int v42 = v40 - 2;
        JCColor::~JCColor((JCColor *)(v40 - 1));
        uint64_t v40 = v42;
      }
      while (v42 != v41);
      unint64_t v32 = (char *)v54 - (char *)v53;
      unint64_t v33 = (unint64_t)((char *)v54 - (char *)v53) >> 5;
    }
    *((void *)this + 898) = v41;
    if (v32 >= 0x100) {
      int v43 = 8;
    }
    else {
      int v43 = v33;
    }
    if (v43 >= 1)
    {
      unint64_t v44 = 0;
      uint64_t v45 = 32 * v43;
      do
      {
        unsigned int v46 = &v53[v44 / 8];
        if ((unint64_t)v41 >= *((void *)this + 899))
        {
          unsigned int v41 = (_OWORD *)std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>(v1, v46);
        }
        else
        {
          *unsigned int v41 = *(_OWORD *)v46;
          JCColor::JCColor((JCColor *)(v41 + 1), (const JCColor *)(v46 + 2));
          v41 += 2;
          *((void *)this + 898) = v41;
        }
        *((void *)this + 898) = v41;
        v44 += 32;
      }
      while (v45 != v44);
    }
    *(void *)&long long v50 = &v53;
    std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
    if (__p)
    {
      int v57 = (char *)__p;
      operator delete(__p);
    }
  }
  return v1;
}

void sub_20B8DB1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  a13 = &a19;
  std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

JCColor *JCImageAnalyzer::GetDominantColorForHue@<X0>(JCImageAnalyzer *this@<X0>, unsigned int a2@<W1>, JCColor *a3@<X8>)
{
  v15[4] = *MEMORY[0x263EF8340];
  uint64_t v6 = (unsigned int *)((char *)this + 5064);
  bzero((char *)this + 5064, 0x800uLL);
  unint64_t v7 = operator new(0x20uLL);
  *unint64_t v7 = &unk_26C066210;
  v7[1] = JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHue;
  double v7[2] = 0;
  v7[3] = this;
  v15[3] = v7;
  JCImageAnalyzer::IterateOverPixels((uint64_t)this, (uint64_t)v15, a2);
  unint64_t v8 = (JCImageAnalyzer *)std::__function::__value_func<void ()(CGPoint,JCHSVColor &,unsigned int)>::~__value_func[abi:ne180100](v15);
  unsigned int v9 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v8, v6, 0x100u, *((_DWORD *)this + 1779));
  JCImageAnalyzer::WeightHistogram(v9, (unsigned int *)this + 1522, 0x100u, *((_DWORD *)this + 1780));
  uint64_t v10 = 0;
  unsigned int v11 = 0;
  do
  {
    if (*((_DWORD *)this + v10 + 1266) > *((_DWORD *)this + v11 + 1266)) {
      unsigned int v11 = v10;
    }
    ++v10;
  }
  while (v10 != 256);
  uint64_t v12 = 0;
  unsigned int v13 = 0;
  do
  {
    if (*((_DWORD *)this + v12 + 1522) > *((_DWORD *)this + v13 + 1522)) {
      unsigned int v13 = v12;
    }
    ++v12;
  }
  while (v12 != 256);
  return JCColor::JCColor(a3, (double)a2 / 359.0, (double)v11 / 255.0, (double)v13 / 255.0);
}

void sub_20B8DB3E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__function::__value_func<void ()(CGPoint,JCHSVColor &,unsigned int)>::~__value_func[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL CompareHueEntry(uint64_t a1, uint64_t a2)
{
  return HIDWORD(a1) > HIDWORD(a2);
}

BOOL CompareSortColor(_DWORD *a1, _DWORD *a2)
{
  return *a1 > *a2;
}

uint64_t *JCImageAnalyzer::DominantColors(JCImageAnalyzer *this)
{
  double v1 = (uint64_t *)((char *)this + 7152);
  if (*((void *)this + 895) == *((void *)this + 894))
  {
    HistogramColorValues = JCImageAnalyzer::GetHistogramColorValues(this);
    uint64_t v3 = *HistogramColorValues;
    if ((int)((unint64_t)(HistogramColorValues[1] - *HistogramColorValues) >> 5) >= 1)
    {
      uint64_t v4 = HistogramColorValues;
      uint64_t v5 = 0;
      uint64_t v6 = 16;
      do
      {
        JCColor::JCColor((JCColor *)v8, (const JCColor *)(v3 + v6));
        std::vector<JCColor>::push_back[abi:ne180100](v1, (JCColor *)v8);
        JCColor::~JCColor((JCColor *)v8);
        ++v5;
        uint64_t v3 = *v4;
        v6 += 32;
      }
      while (v5 < (int)((unint64_t)(v4[1] - *v4) >> 5));
    }
  }
  return v1;
}

void sub_20B8DB4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

JCColor *std::vector<JCColor>::push_back[abi:ne180100](uint64_t *a1, JCColor *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v10 = (uint64_t)(v7 - *a1) >> 4;
    if ((unint64_t)(v10 + 1) >> 60) {
      std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v5 - *a1;
    uint64_t v12 = v11 >> 3;
    if (v11 >> 3 <= (unint64_t)(v10 + 1)) {
      uint64_t v12 = v10 + 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      unint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<JCColor>>(v4, v13);
    }
    else {
      unint64_t v14 = 0;
    }
    uint64_t v15 = v14;
    unint64_t v16 = (JCColor *)&v14[16 * v10];
    uint64_t v18 = &v14[16 * v13];
    JCColor::JCColor(v16, a2);
    uint64_t v17 = (char *)v16 + 16;
    std::vector<JCColor>::__swap_out_circular_buffer(a1, &v15);
    uint64_t v9 = a1[1];
    double result = (JCColor *)std::__split_buffer<JCColor>::~__split_buffer((uint64_t)&v15);
  }
  else
  {
    double result = JCColor::JCColor(*(JCColor **)(v4 - 8), a2);
    uint64_t v9 = v7 + 16;
    a1[1] = v7 + 16;
  }
  a1[1] = v9;
  return result;
}

void sub_20B8DB5D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void JCImageAnalyzer::SuggestedTextColorForBackground(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  unint64_t v5 = JCImageAnalyzer::DominantColors(this);
  unint64_t v6 = (const JCColor *)JCColor::BlackColor((JCColor *)v5);
  JCColor::JCColor((JCColor *)v15, v6);
  uint64_t v7 = *v5;
  unint64_t v8 = (v5[1] - *v5) >> 4;
  if (v8 >= 5) {
    unint64_t v8 = 5;
  }
  if (v8)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      JCColor::JCColor((JCColor *)v14, (const JCColor *)(v7 + v10));
      if (JCColor::ContrastsWithColor(v14, a2)) {
        break;
      }
      JCColor::~JCColor((JCColor *)v14);
      uint64_t v7 = *v5;
      unint64_t v11 = (v5[1] - *v5) >> 4;
      if (v11 >= 5) {
        unint64_t v11 = 5;
      }
      v10 += 16;
      if (v11 <= ++v9) {
        goto LABEL_9;
      }
    }
    JCColor::operator=(v15, v14);
    JCColor::~JCColor((JCColor *)v14);
  }
  else
  {
LABEL_9:
    if (JCColor::Luminance(a2) <= 0.300000012) {
      unint64_t v13 = (CGColorRef *)JCColor::WhiteColor(v12);
    }
    else {
      unint64_t v13 = (CGColorRef *)JCColor::BlackColor(v12);
    }
    JCColor::operator=(v15, v13);
  }
  JCColor::JCColor(a3, (const JCColor *)v15, 0.899999976);
  JCColor::~JCColor((JCColor *)v15);
}

void sub_20B8DB720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void JCImageAnalyzer::SuggestedSecondaryTextColorForBackground(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  JCImageAnalyzer::SuggestedTextColorForBackground(this, a2, (JCColor *)v15);
  JCColor::JCColor((JCColor *)v14, 0);
  if ((JCImageAnalyzer::FindSecondaryTextColorCandidate(this, a2, v15, v14, 1) & 1) == 0)
  {
    unint64_t v6 = JCImageAnalyzer::DominantColors(this);
    if ((unint64_t)(v6[1] - *v6) < 0x31)
    {
      double v7 = JCColor::Luminance(v15);
      if (v7 - JCColor::Luminance(a2) <= 0.0) {
        uint64_t v9 = (CGColorRef *)JCColor::BlackColor(v8);
      }
      else {
        uint64_t v9 = (CGColorRef *)JCColor::WhiteColor(v8);
      }
      JCColor::operator=(v14, v9);
    }
    else if (!JCImageAnalyzer::FindSecondaryTextColorCandidate(this, a2, v15, v14, 0))
    {
      goto LABEL_12;
    }
  }
  if (!JCColor::ContrastsWithColor(v14, a2)) {
    JCColor::EnsureContrastWithColor(v14, a2);
  }
  if (!JCColor::IsReallyCloseToColor(v14, (JCColor *)v15))
  {
    double v13 = 0.899999976;
    goto LABEL_19;
  }
LABEL_12:
  if (JCColor::GetContrastWithColorLuminanceMethod(v15, a2) >= 5.5)
  {
    uint64_t v12 = v15;
  }
  else
  {
    double v10 = JCColor::Luminance(v15);
    if (v10 - JCColor::Luminance(a2) <= 0.0) {
      uint64_t v12 = (CGColorRef *)JCColor::BlackColor(v11);
    }
    else {
      uint64_t v12 = (CGColorRef *)JCColor::WhiteColor(v11);
    }
  }
  JCColor::operator=(v14, v12);
  double v13 = 0.699999988;
LABEL_19:
  JCColor::JCColor(a3, (const JCColor *)v14, v13);
  JCColor::~JCColor((JCColor *)v14);
  JCColor::~JCColor((JCColor *)v15);
}

void sub_20B8DB8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  JCColor::~JCColor((JCColor *)va);
  _Unwind_Resume(a1);
}

uint64_t JCImageAnalyzer::FindSecondaryTextColorCandidate(JCImageAnalyzer *this, CGColorRef *a2, CGColorRef *a3, CGColorRef *a4, int a5)
{
  uint64_t v9 = JCImageAnalyzer::DominantColors(this);
  double v10 = JCColor::Luminance(a3);
  double v11 = JCColor::Luminance(a2);
  uint64_t v12 = *v9;
  if ((int)((unint64_t)(v9[1] - *v9) >> 4) < 1) {
    return 0;
  }
  double v13 = v11;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  double v16 = v10 - v11;
  while (1)
  {
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(v12 + v14));
    if (v22 != a3)
    {
      double v17 = JCColor::Luminance(v22);
      BOOL v18 = v16 < 0.0;
      double v19 = v17 - v13;
      if (v19 <= 0.0) {
        BOOL v18 = 0;
      }
      BOOL v20 = v19 >= 0.0 || v16 <= 0.0;
      if (v20
        && !v18
        && (!a5 || !JCColor::IsCloseToColor(v22, (JCColor *)a3))
        && JCColor::ContrastsEnoughWithColor(v22, a2))
      {
        break;
      }
    }
    JCColor::~JCColor((JCColor *)v22);
    ++v15;
    uint64_t v12 = *v9;
    v14 += 16;
    if (v15 >= (int)((unint64_t)(v9[1] - *v9) >> 4)) {
      return 0;
    }
  }
  JCColor::operator=(a4, v22);
  JCColor::~JCColor((JCColor *)v22);
  return 1;
}

void sub_20B8DBA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void JCImageAnalyzer::GetTextShadowColor(CGColorRef *a1@<X1>, CGColorRef *a2@<X2>, JCColor *a3@<X8>)
{
  JCColor::JCColor((JCColor *)v19);
  double v7 = JCColor::Luminance(a1);
  if (v7 >= JCColor::Luminance(a2))
  {
    uint64_t v15 = (CGColorRef *)JCColor::BlackColor(v8);
    JCColor::operator=(v19, v15);
    double v16 = JCColor::Luminance(v19);
    double v17 = vabdd_f64(v16, JCColor::Luminance(a2));
    double v18 = v17 + v17;
    double v13 = 0.0;
    if (v18 >= 0.0)
    {
      double v13 = v18;
      if (v18 > 1.0) {
        double v13 = 1.0;
      }
    }
    double v14 = -0.599999994;
  }
  else
  {
    uint64_t v9 = (CGColorRef *)JCColor::WhiteColor(v8);
    JCColor::operator=(v19, v9);
    double v10 = JCColor::Luminance(v19);
    double v11 = vabdd_f64(v10, JCColor::Luminance(a2));
    double v12 = v11 + v11;
    double v13 = 0.0;
    if (v12 >= 0.0)
    {
      double v13 = v12;
      if (v12 > 1.0) {
        double v13 = 1.0;
      }
    }
    double v14 = -0.699999988;
  }
  JCColor::JCColor(a3, (const JCColor *)v19, v13 * v14 + 1.0);
  JCColor::~JCColor((JCColor *)v19);
}

void sub_20B8DBB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::vector<JCColor>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  double v1 = *a1;
  CGColorRef v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    unint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        JCColor::~JCColor((JCColor *)(v4 - 16));
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  double v1 = *a1;
  CGColorRef v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        unint64_t v6 = v4 - 32;
        JCColor::~JCColor((JCColor *)(v4 - 16));
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  double v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::~__func()
{
}

__n128 std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::__clone(uint64_t a1)
{
  CGColorRef v2 = (char *)operator new(0x20uLL);
  *(void *)CGColorRef v2 = &unk_26C066210;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26C066210;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::operator()(uint64_t a1, double *a2, uint64_t a3, unsigned int *a4)
{
  return std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>::operator()[abi:ne180100]<CGPoint,JCHSVColor &,unsigned int>(a1 + 8, a2, a3, a4);
}

uint64_t std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::target_type()
{
}

uint64_t std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>::operator()[abi:ne180100]<CGPoint,JCHSVColor &,unsigned int>(uint64_t a1, double *a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(uint64_t (**)(void *, uint64_t, void, double, double))a1;
  unint64_t v6 = (void *)(*(void *)(a1 + 16) + (v4 >> 1));
  if (v4) {
    unint64_t v5 = *(uint64_t (**)(void *, uint64_t, void, double, double))(*v6 + v5);
  }
  return v5(v6, a3, *a4, *a2, a2[1]);
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void *std::__function::__value_func<void ()(CGPoint,JCHSVColor &,unsigned int)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x21053AA70);
}

void std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264087F08, MEMORY[0x263F8C060]);
}

void sub_20B8DBFDC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<sortHueEntry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,false>(uint64_t result, char *a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4, char a5)
{
  double v10 = (char *)result;
LABEL_2:
  double v11 = v10;
LABEL_3:
  uint64_t v12 = 1 - a4;
  while (1)
  {
    double v10 = v11;
    uint64_t v13 = v12;
    uint64_t v14 = a2 - v11;
    unint64_t v15 = (a2 - v11) >> 3;
    if (!(!v6 & v5))
    {
      switch(v15)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          __n128 result = (*a3)(*((void *)a2 - 1), *(void *)v11);
          if (result)
          {
            uint64_t v22 = *(void *)v11;
            *(void *)double v11 = *((void *)a2 - 1);
            *((void *)a2 - 1) = v22;
          }
          break;
        case 3uLL:
          __n128 result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v11, (void *)v11 + 1, (void *)a2 - 1, (unsigned int (**)(void))a3);
          break;
        case 4uLL:
          __n128 result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v11, (void *)v11 + 1, (void *)v11 + 2, (void *)a2 - 1, (unsigned int (**)(void))a3);
          break;
        case 5uLL:
          __n128 result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v11, (void *)v11 + 1, (void *)v11 + 2, (void *)v11 + 3, (void *)a2 - 1, (unsigned int (**)(void))a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v14 <= 191) {
      break;
    }
    if (v13 == 1)
    {
      if (v11 != a2)
      {
        return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,sortHueEntry*>(v11, a2, (uint64_t *)a2, a3);
      }
      return result;
    }
    unint64_t v16 = v15 >> 1;
    double v17 = &v11[8 * (v15 >> 1)];
    if ((unint64_t)v14 >= 0x401)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v11, &v11[8 * (v15 >> 1)], (void *)a2 - 1, (unsigned int (**)(void))a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((void *)v11 + 1, (void *)v17 - 1, (void *)a2 - 2, (unsigned int (**)(void))a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((void *)v11 + 2, &v11[8 * v16 + 8], (void *)a2 - 3, (unsigned int (**)(void))a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((void *)v17 - 1, v17, &v11[8 * v16 + 8], (unsigned int (**)(void))a3);
      uint64_t v18 = *(void *)v11;
      *(void *)double v11 = *(void *)v17;
      *(void *)double v17 = v18;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(&v11[8 * (v15 >> 1)], v11, (void *)a2 - 1, (unsigned int (**)(void))a3);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (((*a3)(*((void *)v11 - 1), *(void *)v11) & 1) == 0)
    {
      __n128 result = (uint64_t)std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>((uint64_t *)v11, (uint64_t *)a2, a3);
      double v11 = (char *)result;
      goto LABEL_19;
    }
LABEL_14:
    double v19 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>((uint64_t *)v11, (uint64_t *)a2, a3);
    if ((v20 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v21 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v11, v19, (unsigned int (**)(void))a3);
    double v11 = (char *)(v19 + 1);
    __n128 result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v19 + 1, a2, (unsigned int (**)(void))a3);
    if (result)
    {
      a4 = -v13;
      a2 = (char *)v19;
      if (v21) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v12 = v13 + 1;
    if (!v21)
    {
LABEL_17:
      __n128 result = std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,false>(v10, v19, a3, -v13, a5 & 1);
      double v11 = (char *)(v19 + 1);
LABEL_19:
      a5 = 0;
      a4 = -v13;
      goto LABEL_3;
    }
  }
  if (a5)
  {
    return std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)v11, (uint64_t *)a2, a3);
  }
  else
  {
    return std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)v11, a2, a3);
  }
}

uint64_t std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  if ((uint64_t *)result != a2)
  {
    uint64_t v4 = (void *)result;
    char v5 = (uint64_t *)(result + 8);
    if ((uint64_t *)(result + 8) != a2)
    {
      uint64_t v7 = 0;
      unint64_t v8 = (uint64_t *)result;
      do
      {
        uint64_t v10 = *v8;
        uint64_t v9 = v8[1];
        unint64_t v8 = v5;
        __n128 result = (*a3)(v9, v10);
        if (result)
        {
          uint64_t v11 = *v8;
          uint64_t v12 = v7;
          while (1)
          {
            *(void *)((char *)v4 + v12 + 8) = *(void *)((char *)v4 + v12);
            if (!v12) {
              break;
            }
            __n128 result = (*a3)(v11, *(void *)((char *)v4 + v12 - 8));
            v12 -= 8;
            if ((result & 1) == 0)
            {
              uint64_t v13 = (void *)((char *)v4 + v12 + 8);
              goto LABEL_10;
            }
          }
          uint64_t v13 = v4;
LABEL_10:
          *uint64_t v13 = v11;
        }
        char v5 = v8 + 1;
        v7 += 8;
      }
      while (v8 + 1 != a2);
    }
  }
  return result;
}

uint64_t std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, void *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  if ((void *)result != a2)
  {
    uint64_t v4 = (void *)result;
    for (unint64_t i = (void *)(result + 8); v4 + 1 != a2; unint64_t i = v4 + 1)
    {
      uint64_t v8 = *v4;
      uint64_t v7 = v4[1];
      uint64_t v4 = i;
      __n128 result = (*a3)(v7, v8);
      if (result)
      {
        uint64_t v9 = *v4;
        uint64_t v10 = v4;
        do
        {
          uint64_t v11 = v10;
          uint64_t v12 = *--v10;
          *uint64_t v11 = v12;
          __n128 result = (*a3)(v9, *(v11 - 2));
        }
        while ((result & 1) != 0);
        *uint64_t v10 = v9;
      }
    }
  }
  return result;
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(void *a1, void *a2, void *a3, unsigned int (**a4)(void))
{
  char v8 = ((uint64_t (*)(void, void))*a4)(*a2, *a1);
  uint64_t result = ((uint64_t (*)(void, void))*a4)(*a3, *a2);
  if ((v8 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    uint64_t v11 = *a2;
    *a2 = *a3;
    *a3 = v11;
    if (!((unsigned int (*)(void, void))*a4)(*a2, *a1)) {
      return 1;
    }
    uint64_t v12 = *a1;
    *a1 = *a2;
    *a2 = v12;
    return 2;
  }
  uint64_t v10 = *a1;
  if (!result)
  {
    *a1 = *a2;
    *a2 = v10;
    if (!(*a4)(*a3)) {
      return 1;
    }
    uint64_t v13 = *a2;
    *a2 = *a3;
    *a3 = v13;
    return 2;
  }
  *a1 = *a3;
  *a3 = v10;
  return 1;
}

uint64_t *std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>(uint64_t *a1, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  uint64_t v4 = a2;
  uint64_t v6 = *a1;
  if ((*a3)(*a1, *(a2 - 1)))
  {
    uint64_t v7 = a1;
    do
    {
      uint64_t v8 = v7[1];
      ++v7;
    }
    while (((*a3)(v6, v8) & 1) == 0);
  }
  else
  {
    uint64_t v9 = a1 + 1;
    do
    {
      uint64_t v7 = v9;
      if (v9 >= v4) {
        break;
      }
      ++v9;
    }
    while (!(*a3)(v6, *v7));
  }
  if (v7 < v4)
  {
    do
      uint64_t v10 = *--v4;
    while (((*a3)(v6, v10) & 1) != 0);
  }
  while (v7 < v4)
  {
    uint64_t v11 = *v7;
    *uint64_t v7 = *v4;
    uint64_t *v4 = v11;
    do
    {
      uint64_t v12 = v7[1];
      ++v7;
    }
    while (!(*a3)(v6, v12));
    do
      uint64_t v13 = *--v4;
    while (((*a3)(v6, v13) & 1) != 0);
  }
  if (v7 - 1 != a1) {
    *a1 = *(v7 - 1);
  }
  *(v7 - 1) = v6;
  return v7;
}

uint64_t *std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>(uint64_t *a1, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  do
    char v8 = (*a3)(a1[++v6], v7);
  while ((v8 & 1) != 0);
  uint64_t v9 = &a1[v6];
  uint64_t v10 = &a1[v6 - 1];
  if (v6 == 1)
  {
    do
    {
      if (v9 >= a2) {
        break;
      }
      uint64_t v12 = *--a2;
    }
    while (((*a3)(v12, v7) & 1) == 0);
  }
  else
  {
    do
      uint64_t v11 = *--a2;
    while (!(*a3)(v11, v7));
  }
  if (v9 < a2)
  {
    uint64_t v13 = &a1[v6];
    uint64_t v14 = a2;
    do
    {
      uint64_t v15 = *v13;
      *uint64_t v13 = *v14;
      *uint64_t v14 = v15;
      do
      {
        uint64_t v16 = v13[1];
        ++v13;
      }
      while (((*a3)(v16, v7) & 1) != 0);
      do
        uint64_t v17 = *--v14;
      while (!(*a3)(v17, v7));
    }
    while (v13 < v14);
    uint64_t v10 = v13 - 1;
  }
  if (v10 != a1) {
    *a1 = *v10;
  }
  *uint64_t v10 = v7;
  return v10;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(void *a1, void *a2, unsigned int (**a3)(void))
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (((unsigned int (*)(void, void))*a3)(*(a2 - 1), *a1))
      {
        uint64_t v8 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      uint64_t v9 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a1 + 2, a3);
      uint64_t v10 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  while (1)
  {
    if (((unsigned int (*)(void, void))*a3)(*v10, *v9))
    {
      uint64_t v13 = *v10;
      uint64_t v14 = v11;
      while (1)
      {
        uint64_t v15 = (char *)a1 + v14;
        *(void *)((char *)a1 + v14 + 24) = *(void *)((char *)a1 + v14 + 16);
        if (v14 == -16) {
          break;
        }
        v14 -= 8;
        if ((((uint64_t (*)(uint64_t, void))*a3)(v13, *((void *)v15 + 1)) & 1) == 0)
        {
          uint64_t v16 = (void *)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      uint64_t v16 = a1;
LABEL_12:
      *uint64_t v16 = v13;
      if (++v12 == 8) {
        return v10 + 1 == a2;
      }
    }
    uint64_t v9 = v10;
    v11 += 8;
    if (++v10 == a2) {
      return 1;
    }
  }
}

uint64_t std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(void *a1, void *a2, void *a3, void *a4, unsigned int (**a5)(void))
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a2, a3, a5);
  uint64_t result = ((uint64_t (*)(void, void))*a5)(*a4, *a3);
  if (result)
  {
    uint64_t v11 = *a3;
    *a3 = *a4;
    *a4 = v11;
    uint64_t result = ((uint64_t (*)(void, void))*a5)(*a3, *a2);
    if (result)
    {
      uint64_t v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      uint64_t result = ((uint64_t (*)(void, void))*a5)(*a2, *a1);
      if (result)
      {
        uint64_t v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

uint64_t std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(void *a1, void *a2, void *a3, void *a4, void *a5, unsigned int (**a6)(void))
{
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a2, a3, a4, a6);
  uint64_t result = ((uint64_t (*)(void, void))*a6)(*a5, *a4);
  if (result)
  {
    uint64_t v13 = *a4;
    *a4 = *a5;
    *a5 = v13;
    uint64_t result = ((uint64_t (*)(void, void))*a6)(*a4, *a3);
    if (result)
    {
      uint64_t v14 = *a3;
      *a3 = *a4;
      *a4 = v14;
      uint64_t result = ((uint64_t (*)(void, void))*a6)(*a3, *a2);
      if (result)
      {
        uint64_t v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
        uint64_t result = ((uint64_t (*)(void, void))*a6)(*a2, *a1);
        if (result)
        {
          uint64_t v16 = *a1;
          *a1 = *a2;
          *a2 = v16;
        }
      }
    }
  }
  return result;
}

uint64_t *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,sortHueEntry*>(char *a1, char *a2, uint64_t *a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  if (a1 != a2)
  {
    uint64_t v8 = a2 - a1;
    uint64_t v9 = (a2 - a1) >> 3;
    if (a2 - a1 >= 9)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = &a1[8 * v10];
      do
      {
        std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)a1, (unsigned int (**)(void, void))a4, v9, v12);
        v12 -= 8;
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = a2;
    if (a2 != (char *)a3)
    {
      uint64_t v14 = (uint64_t *)a2;
      do
      {
        if ((*a4)(*v14, *(void *)a1))
        {
          uint64_t v15 = *v14;
          *uint64_t v14 = *(void *)a1;
          *(void *)a1 = v15;
          std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)a1, (unsigned int (**)(void, void))a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      uint64_t v13 = (char *)a3;
    }
    if (v8 >= 9)
    {
      uint64_t v16 = (unint64_t)v8 >> 3;
      uint64_t v17 = a2 - 8;
      do
      {
        uint64_t v18 = *(void *)a1;
        double v19 = (char *)std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, (unsigned int (**)(void, void))a4, v16);
        if (v17 == v19)
        {
          *(void *)double v19 = v18;
        }
        else
        {
          *(void *)double v19 = *(void *)v17;
          *(void *)uint64_t v17 = v18;
          std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)a1, (uint64_t)(v19 + 8), a4, (v19 + 8 - a1) >> 3);
        }
        v17 -= 8;
      }
      while (v16-- > 2);
    }
    return (uint64_t *)v13;
  }
  return a3;
}

uint64_t std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, unsigned int (**a2)(void, void), uint64_t a3, void *a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    char v5 = a4;
    uint64_t v6 = result;
    int64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      uint64_t v10 = ((uint64_t)a4 - result) >> 2;
      uint64_t v11 = v10 + 1;
      uint64_t v12 = (void *)(result + 8 * (v10 + 1));
      uint64_t v13 = v10 + 2;
      if (v10 + 2 < a3 && (*a2)(*v12, v12[1]))
      {
        ++v12;
        uint64_t v11 = v13;
      }
      uint64_t result = ((uint64_t (*)(void, void))*a2)(*v12, *v5);
      if ((result & 1) == 0)
      {
        uint64_t v14 = *v5;
        do
        {
          uint64_t v15 = v12;
          *char v5 = *v12;
          if (v7 < v11) {
            break;
          }
          uint64_t v16 = (2 * v11) | 1;
          uint64_t v12 = (void *)(v6 + 8 * v16);
          if (2 * v11 + 2 < a3)
          {
            if ((*a2)(*v12, v12[1]))
            {
              ++v12;
              uint64_t v16 = 2 * v11 + 2;
            }
          }
          uint64_t result = ((uint64_t (*)(void, uint64_t))*a2)(*v12, v14);
          char v5 = v15;
          uint64_t v11 = v16;
        }
        while (!result);
        *uint64_t v15 = v14;
      }
    }
  }
  return result;
}

void *std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(void *a1, unsigned int (**a2)(void, void), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = &a1[v6 + 1];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3 && (*a2)(a1[v6 + 1], a1[v6 + 2]))
    {
      ++v9;
      uint64_t v10 = v11;
    }
    *a1 = *v9;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

uint64_t std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v6 = result;
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = (uint64_t *)(result + 8 * (v4 >> 1));
    uint64_t v9 = (uint64_t *)(a2 - 8);
    uint64_t result = (*a3)(*v8, *(void *)(a2 - 8));
    if (result)
    {
      uint64_t v10 = *v9;
      do
      {
        uint64_t v11 = v8;
        *uint64_t v9 = *v8;
        if (!v7) {
          break;
        }
        unint64_t v7 = (v7 - 1) >> 1;
        uint64_t v8 = (uint64_t *)(v6 + 8 * v7);
        uint64_t result = (*a3)(*v8, v10);
        uint64_t v9 = v11;
      }
      while ((result & 1) != 0);
      *uint64_t v11 = v10;
    }
  }
  return result;
}

uint64_t std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 5;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59) {
    std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v5) {
    unint64_t v5 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<sortColorEntry>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[32 * v4];
  v14[0] = v10;
  v14[1] = v11;
  uint64_t v15 = v11;
  uint64_t v16 = &v10[32 * v9];
  *(_OWORD *)uint64_t v11 = *a2;
  JCColor::JCColor((JCColor *)(v11 + 16), (const JCColor *)(a2 + 1));
  v15 += 32;
  std::vector<sortColorEntry>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<sortColorEntry>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_20B8DD0A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<sortColorEntry>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<sortColorEntry>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<sortColorEntry>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<sortColorEntry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<sortColorEntry>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  for (uint64_t i = 48; ; i -= 32)
  {
    uint64_t v12 = a3 + i;
    if (a3 + i - 48 == a5) {
      break;
    }
    *(_OWORD *)(a7 + i - 80) = *(_OWORD *)(v12 - 80);
    uint64_t v13 = (JCColor *)(a7 + i - 64);
    JCColor::JCColor(v13, (const JCColor *)(v12 - 64));
  }
  return a6;
}

uint64_t std::__split_buffer<sortColorEntry>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
    JCColor::~JCColor((JCColor *)(i - 16));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,false>(CGColorRef *a1, CGColorRef *a2, uint64_t (**a3)(long long *, long long *), uint64_t a4, char a5)
{
  unint64_t v9 = (long long *)a2;
  uint64_t v10 = a1;
  unsigned int v34 = a2;
  v35[0] = a1;
LABEL_2:
  for (uint64_t i = 1 - a4; ; ++i)
  {
    uint64_t v12 = (char *)v9 - (char *)v10;
    unint64_t v13 = ((char *)v9 - (char *)v10) >> 5;
    if (!(!v6 & v5))
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          unsigned int v24 = *a3;
          unsigned int v34 = (CGColorRef *)(v9 - 2);
          long long v32 = *(v9 - 2);
          JCColor::JCColor((JCColor *)v33, (const JCColor *)(v9 - 1));
          long long v30 = *(_OWORD *)v35[0];
          JCColor::JCColor((JCColor *)v31, (const JCColor *)(v35[0] + 2));
          LODWORD(v24) = v24(&v32, &v30);
          JCColor::~JCColor((JCColor *)v31);
          JCColor::~JCColor((JCColor *)v33);
          if (v24) {
            std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(v35, (uint64_t *)&v34);
          }
          break;
        case 3uLL:
          unsigned int v34 = (CGColorRef *)(v9 - 2);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v10, v10 + 4, v9 - 2, a3);
          break;
        case 4uLL:
          unsigned int v34 = (CGColorRef *)(v9 - 2);
          std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v10, v10 + 4, v10 + 8, v9 - 2, a3);
          break;
        case 5uLL:
          unsigned int v34 = (CGColorRef *)(v9 - 2);
          std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v10, v10 + 4, v10 + 8, v10 + 12, v9 - 2, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v12 <= 767)
    {
      if (a5) {
        std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((long long *)v10, v9, a3);
      }
      else {
        std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((long long *)v10, v9, a3);
      }
      return;
    }
    if (i == 1) {
      break;
    }
    unint64_t v14 = v13 >> 1;
    uint64_t v15 = v9 - 2;
    if ((unint64_t)v12 > 0x1000)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v10, &v10[4 * (v13 >> 1)], v15, a3);
      uint64_t v16 = v34;
      uint64_t v17 = 32 * v14 - 32;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v35[0] + 4, (CGColorRef *)((char *)v35[0] + v17), (long long *)v34 - 4, a3);
      uint64_t v18 = 32 * v14 + 32;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v35[0] + 8, (CGColorRef *)((char *)v35[0] + v18), (long long *)v16 - 6, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((CGColorRef *)((char *)v35[0] + v17), &v35[0][4 * v14], (long long *)((char *)v35[0] + v18), a3);
      unint64_t v29 = &v35[0][4 * v14];
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *>(v35, (uint64_t *)&v29);
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(&v10[4 * (v13 >> 1)], v10, v15, a3);
      if (a5)
      {
LABEL_13:
        unint64_t v9 = (long long *)v34;
        goto LABEL_14;
      }
    }
    double v19 = *a3;
    long long v27 = *((_OWORD *)v35[0] - 2);
    JCColor::JCColor((JCColor *)v28, (const JCColor *)(v35[0] - 2));
    long long v25 = *(_OWORD *)v35[0];
    JCColor::JCColor((JCColor *)v26, (const JCColor *)(v35[0] + 2));
    char v20 = v19(&v27, &v25);
    JCColor::~JCColor((JCColor *)v26);
    JCColor::~JCColor((JCColor *)v28);
    unint64_t v9 = (long long *)v34;
    if ((v20 & 1) == 0)
    {
      uint64_t v10 = std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(v35[0], v34, a3);
LABEL_22:
      a5 = 0;
      v35[0] = v10;
      a4 = -i;
      goto LABEL_2;
    }
LABEL_14:
    BOOL v21 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(v35[0], (CGColorRef *)v9, a3);
    if ((v22 & 1) == 0) {
      goto LABEL_21;
    }
    int v23 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v35[0], (uint64_t)v21, a3);
    uint64_t v10 = v21 + 4;
    if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v21 + 4, (uint64_t)v9, a3))
    {
      if (v23) {
        return;
      }
      unsigned int v34 = v21;
      uint64_t v10 = v35[0];
      unint64_t v9 = (long long *)v21;
    }
    else
    {
      if (!v23)
      {
LABEL_21:
        std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,false>(v35[0], v21, a3, -i, a5 & 1);
        uint64_t v10 = v21 + 4;
        goto LABEL_22;
      }
      v35[0] = v21 + 4;
    }
  }
  if (v10 != (CGColorRef *)v9) {
    std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,sortColorEntry*>(v10, (CGColorRef *)v9, (CGColorRef *)v9, a3);
  }
}

void sub_20B8DD5DC(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(CGColorRef **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  long long v4 = *(_OWORD *)*a1;
  JCColor::JCColor((JCColor *)v5, (const JCColor *)(*a1 + 2));
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v3;
  JCColor::operator=(v2 + 2, (CGColorRef *)(v3 + 16));
  *(_OWORD *)uint64_t v3 = v4;
  JCColor::operator=((CGColorRef *)(v3 + 16), v5);
  JCColor::~JCColor((JCColor *)v5);
}

void sub_20B8DD6A8(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(long long *a1, long long *a2, uint64_t (**a3)(long long *, long long *))
{
  if (a1 != a2)
  {
    long long v4 = a1 + 2;
    if (a1 + 2 != a2)
    {
      uint64_t v6 = 0;
      uint64_t v7 = a1;
      do
      {
        uint64_t v8 = v7;
        unint64_t v9 = *a3;
        uint64_t v17 = v4;
        long long v26 = *v4;
        uint64_t v10 = (const JCColor *)(v7 + 3);
        JCColor::JCColor((JCColor *)v27, (const JCColor *)(v7 + 3));
        long long v24 = *v8;
        JCColor::JCColor((JCColor *)v25, (const JCColor *)(v8 + 1));
        LODWORD(v9) = v9(&v26, &v24);
        JCColor::~JCColor((JCColor *)v25);
        JCColor::~JCColor((JCColor *)v27);
        if (v9)
        {
          long long v22 = *v17;
          JCColor::JCColor((JCColor *)v23, v10);
          uint64_t v11 = v6;
          while (1)
          {
            uint64_t v12 = v11;
            unint64_t v13 = (char *)a1 + v11;
            *((_OWORD *)v13 + 2) = *(_OWORD *)v13;
            JCColor::operator=((CGColorRef *)v13 + 6, (CGColorRef *)v13 + 2);
            if (!v12) {
              break;
            }
            unint64_t v14 = *a3;
            long long v20 = v22;
            JCColor::JCColor((JCColor *)v21, (const JCColor *)v23);
            long long v18 = *(long long *)((char *)a1 + v12 - 32);
            JCColor::JCColor((JCColor *)v19, (const JCColor *)((char *)a1 + v12 - 16));
            LOBYTE(v14) = v14(&v20, &v18);
            JCColor::~JCColor((JCColor *)v19);
            JCColor::~JCColor((JCColor *)v21);
            uint64_t v11 = v12 - 32;
            if ((v14 & 1) == 0)
            {
              uint64_t v15 = (long long *)((char *)a1 + v12);
              goto LABEL_10;
            }
          }
          uint64_t v15 = a1;
LABEL_10:
          *uint64_t v15 = v22;
          JCColor::operator=((CGColorRef *)((char *)a1 + v12 + 16), v23);
          JCColor::~JCColor((JCColor *)v23);
        }
        uint64_t v7 = v17;
        long long v4 = v17 + 2;
        v6 += 32;
      }
      while (v17 + 2 != a2);
    }
  }
}

void sub_20B8DD890(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(long long *a1, long long *a2, uint64_t (**a3)(long long *, long long *))
{
  if (a1 != a2)
  {
    uint64_t v3 = a1;
    long long v4 = a1 + 2;
    if (a1 + 2 != a2)
    {
      uint64_t v6 = (CGColorRef *)(a1 + 1);
      do
      {
        uint64_t v7 = v3;
        uint64_t v3 = v4;
        uint64_t v8 = *a3;
        long long v20 = *v4;
        JCColor::JCColor((JCColor *)v21, (const JCColor *)(v7 + 3));
        long long v18 = *v7;
        JCColor::JCColor((JCColor *)v19, (const JCColor *)(v7 + 1));
        LODWORD(v8) = v8(&v20, &v18);
        JCColor::~JCColor((JCColor *)v19);
        JCColor::~JCColor((JCColor *)v21);
        if (v8)
        {
          long long v16 = *v3;
          JCColor::JCColor((JCColor *)v17, (const JCColor *)(v7 + 3));
          unint64_t v9 = v6;
          do
          {
            *((_OWORD *)v9 + 1) = *((_OWORD *)v9 - 1);
            JCColor::operator=(v9 + 4, v9);
            uint64_t v10 = *a3;
            long long v14 = v16;
            JCColor::JCColor((JCColor *)v15, (const JCColor *)v17);
            long long v12 = *((_OWORD *)v9 - 3);
            v9 -= 4;
            JCColor::JCColor((JCColor *)v13, (const JCColor *)v9);
            LOBYTE(v10) = v10(&v14, &v12);
            JCColor::~JCColor((JCColor *)v13);
            JCColor::~JCColor((JCColor *)v15);
          }
          while ((v10 & 1) != 0);
          *((_OWORD *)v9 + 1) = v16;
          JCColor::operator=(v9 + 4, v17);
          JCColor::~JCColor((JCColor *)v17);
        }
        long long v4 = v3 + 2;
        v6 += 4;
      }
      while (v3 + 2 != a2);
    }
  }
}

void sub_20B8DDA88(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, long long *a3, uint64_t (**a4)(long long *, long long *))
{
  uint64_t v6 = a1;
  int v38 = a2;
  unsigned int v39 = a1;
  double v37 = a3;
  uint64_t v7 = *a4;
  long long v35 = *(_OWORD *)a2;
  JCColor::JCColor((JCColor *)v36, (const JCColor *)(a2 + 2));
  long long v33 = *(_OWORD *)v6;
  JCColor::JCColor((JCColor *)v34, (const JCColor *)(v6 + 2));
  LOBYTE(v6) = v7(&v35, &v33);
  JCColor::~JCColor((JCColor *)v34);
  JCColor::~JCColor((JCColor *)v36);
  uint64_t v8 = *a4;
  unint64_t v9 = (const JCColor *)(a3 + 1);
  if (v6)
  {
    long long v23 = *a3;
    JCColor::JCColor((JCColor *)v24, v9);
    long long v21 = *(_OWORD *)v38;
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(v38 + 2));
    int v10 = v8(&v23, &v21);
    JCColor::~JCColor((JCColor *)v22);
    JCColor::~JCColor((JCColor *)v24);
    if (v10)
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v39, (uint64_t *)&v37);
      return 1;
    }
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v39, (uint64_t *)&v38);
    uint64_t v15 = *a4;
    long long v19 = *v37;
    JCColor::JCColor((JCColor *)v20, (const JCColor *)(v37 + 1));
    long long v17 = *(_OWORD *)v38;
    JCColor::JCColor((JCColor *)v18, (const JCColor *)(v38 + 2));
    LODWORD(v15) = v15(&v19, &v17);
    JCColor::~JCColor((JCColor *)v18);
    JCColor::~JCColor((JCColor *)v20);
    if (!v15) {
      return 1;
    }
    unint64_t v13 = &v38;
    long long v14 = (uint64_t *)&v37;
LABEL_9:
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(v13, v14);
    return 2;
  }
  long long v31 = *a3;
  JCColor::JCColor((JCColor *)v32, v9);
  long long v29 = *(_OWORD *)v38;
  JCColor::JCColor((JCColor *)v30, (const JCColor *)(v38 + 2));
  char v11 = v8(&v31, &v29);
  JCColor::~JCColor((JCColor *)v30);
  JCColor::~JCColor((JCColor *)v32);
  if (v11)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v38, (uint64_t *)&v37);
    long long v12 = *a4;
    long long v27 = *(_OWORD *)v38;
    JCColor::JCColor((JCColor *)v28, (const JCColor *)(v38 + 2));
    long long v25 = *(_OWORD *)v39;
    JCColor::JCColor((JCColor *)v26, (const JCColor *)(v39 + 2));
    LODWORD(v12) = v12(&v27, &v25);
    JCColor::~JCColor((JCColor *)v26);
    JCColor::~JCColor((JCColor *)v28);
    if (!v12) {
      return 1;
    }
    unint64_t v13 = &v39;
    long long v14 = (uint64_t *)&v38;
    goto LABEL_9;
  }
  return 0;
}

void sub_20B8DDD68(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *>(CGColorRef **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  long long v4 = *(_OWORD *)*a1;
  JCColor::JCColor((JCColor *)v5, (const JCColor *)(*a1 + 2));
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v3;
  JCColor::operator=(v2 + 2, (CGColorRef *)(v3 + 16));
  *(_OWORD *)uint64_t v3 = v4;
  JCColor::operator=((CGColorRef *)(v3 + 16), v5);
  JCColor::~JCColor((JCColor *)v5);
}

void sub_20B8DDE3C(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(CGColorRef *a1, CGColorRef *a2, uint64_t (**a3)(long long *, long long *))
{
  long long v4 = a2;
  unsigned int v47 = a2;
  unsigned int v48 = a1;
  long long v45 = *(_OWORD *)a1;
  uint64_t v6 = a1 + 2;
  JCColor::JCColor((JCColor *)v46, (const JCColor *)(a1 + 2));
  uint64_t v7 = *a3;
  long long v43 = v45;
  JCColor::JCColor((JCColor *)v44, (const JCColor *)v46);
  long long v41 = *((_OWORD *)v4 - 2);
  JCColor::JCColor((JCColor *)v42, (const JCColor *)(v4 - 2));
  LOBYTE(v7) = v7(&v43, &v41);
  JCColor::~JCColor((JCColor *)v42);
  JCColor::~JCColor((JCColor *)v44);
  if (v7)
  {
    uint64_t v8 = a1 + 4;
    do
    {
      unsigned int v48 = v8;
      unint64_t v9 = *a3;
      long long v39 = v45;
      JCColor::JCColor((JCColor *)v40, (const JCColor *)v46);
      long long v37 = *(_OWORD *)v8;
      JCColor::JCColor((JCColor *)v38, (const JCColor *)(v8 + 2));
      LOBYTE(v9) = v9(&v39, &v37);
      JCColor::~JCColor((JCColor *)v38);
      JCColor::~JCColor((JCColor *)v40);
      v8 += 4;
    }
    while ((v9 & 1) == 0);
    int v10 = v47;
    char v11 = v8 - 4;
    long long v4 = v47;
  }
  else
  {
    long long v12 = a1 + 4;
    do
    {
      char v11 = v12;
      unsigned int v48 = v12;
      if (v12 >= v4) {
        break;
      }
      unint64_t v13 = *a3;
      long long v35 = v45;
      JCColor::JCColor((JCColor *)v36, (const JCColor *)v46);
      long long v33 = *(_OWORD *)v11;
      JCColor::JCColor((JCColor *)v34, (const JCColor *)(v11 + 2));
      LOBYTE(v13) = v13(&v35, &v33);
      JCColor::~JCColor((JCColor *)v34);
      JCColor::~JCColor((JCColor *)v36);
      long long v12 = v11 + 4;
    }
    while ((v13 & 1) == 0);
    int v10 = v47;
  }
  if (v11 < v4)
  {
    long long v14 = v10 - 4;
    do
    {
      unsigned int v47 = v14;
      uint64_t v15 = *a3;
      long long v31 = v45;
      JCColor::JCColor((JCColor *)v32, (const JCColor *)v46);
      long long v29 = *(_OWORD *)v14;
      JCColor::JCColor((JCColor *)v30, (const JCColor *)(v14 + 2));
      LOBYTE(v15) = v15(&v31, &v29);
      JCColor::~JCColor((JCColor *)v30);
      JCColor::~JCColor((JCColor *)v32);
      v14 -= 4;
    }
    while ((v15 & 1) != 0);
    int v10 = v47;
    char v11 = v48;
  }
  if (v11 < v10)
  {
    do
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v48, (uint64_t *)&v47);
      do
      {
        v48 += 4;
        long long v16 = *a3;
        long long v27 = v45;
        JCColor::JCColor((JCColor *)v28, (const JCColor *)v46);
        long long v25 = *(_OWORD *)v48;
        JCColor::JCColor((JCColor *)v26, (const JCColor *)(v48 + 2));
        LODWORD(v16) = v16(&v27, &v25);
        JCColor::~JCColor((JCColor *)v26);
        JCColor::~JCColor((JCColor *)v28);
      }
      while (!v16);
      do
      {
        v47 -= 4;
        long long v17 = *a3;
        long long v23 = v45;
        JCColor::JCColor((JCColor *)v24, (const JCColor *)v46);
        long long v21 = *(_OWORD *)v47;
        JCColor::JCColor((JCColor *)v22, (const JCColor *)(v47 + 2));
        LOBYTE(v17) = v17(&v23, &v21);
        JCColor::~JCColor((JCColor *)v22);
        JCColor::~JCColor((JCColor *)v24);
      }
      while ((v17 & 1) != 0);
      char v11 = v48;
    }
    while (v48 < v47);
  }
  long long v18 = v11 - 4;
  if (v11 - 4 != a1)
  {
    *(_OWORD *)a1 = *(_OWORD *)v18;
    JCColor::operator=(v6, v11 - 2);
  }
  *(_OWORD *)long long v18 = v45;
  JCColor::operator=(v11 - 2, v46);
  long long v19 = v48;
  JCColor::~JCColor((JCColor *)v46);
  return v19;
}

void sub_20B8DE1D8(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v3);
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(CGColorRef *a1, CGColorRef *a2, uint64_t (**a3)(long long *, long long *))
{
  unsigned int v42 = a2;
  long long v40 = *(_OWORD *)a1;
  char v5 = a1 + 2;
  JCColor::JCColor((JCColor *)v41, (const JCColor *)(a1 + 2));
  uint64_t v6 = 0;
  do
  {
    long long v43 = &a1[v6 + 4];
    uint64_t v7 = *a3;
    long long v38 = *(_OWORD *)v43;
    JCColor::JCColor((JCColor *)v39, (const JCColor *)&a1[v6 + 6]);
    long long v36 = v40;
    JCColor::JCColor((JCColor *)v37, (const JCColor *)v41);
    LOBYTE(v7) = v7(&v38, &v36);
    JCColor::~JCColor((JCColor *)v37);
    JCColor::~JCColor((JCColor *)v39);
    v6 += 4;
  }
  while ((v7 & 1) != 0);
  if (v6 == 4)
  {
    int v10 = a1 + 4;
    char v11 = v42 - 4;
    do
    {
      if (v10 >= v11 + 4) {
        break;
      }
      long long v12 = *a3;
      unsigned int v42 = v11;
      long long v34 = *(_OWORD *)v11;
      JCColor::JCColor((JCColor *)v35, (const JCColor *)(v11 + 2));
      long long v32 = v40;
      JCColor::JCColor((JCColor *)v33, (const JCColor *)v41);
      LOBYTE(v12) = v12(&v34, &v32);
      JCColor::~JCColor((JCColor *)v33);
      JCColor::~JCColor((JCColor *)v35);
      v11 -= 4;
    }
    while ((v12 & 1) == 0);
  }
  else
  {
    uint64_t v8 = v42 - 4;
    do
    {
      unsigned int v42 = v8;
      unint64_t v9 = *a3;
      long long v30 = *(_OWORD *)v8;
      JCColor::JCColor((JCColor *)v31, (const JCColor *)(v8 + 2));
      long long v28 = v40;
      JCColor::JCColor((JCColor *)v29, (const JCColor *)v41);
      LOBYTE(v9) = v9(&v30, &v28);
      JCColor::~JCColor((JCColor *)v29);
      JCColor::~JCColor((JCColor *)v31);
      v8 -= 4;
    }
    while ((v9 & 1) == 0);
    int v10 = v43;
  }
  unint64_t v13 = v10;
  if (v10 < v42)
  {
    do
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v43, (uint64_t *)&v42);
      do
      {
        long long v14 = v43;
        v43 += 4;
        uint64_t v15 = *a3;
        long long v26 = *(_OWORD *)v43;
        JCColor::JCColor((JCColor *)v27, (const JCColor *)(v14 + 6));
        long long v24 = v40;
        JCColor::JCColor((JCColor *)v25, (const JCColor *)v41);
        LOBYTE(v15) = v15(&v26, &v24);
        JCColor::~JCColor((JCColor *)v25);
        JCColor::~JCColor((JCColor *)v27);
      }
      while ((v15 & 1) != 0);
      do
      {
        long long v16 = v42;
        v42 -= 4;
        long long v17 = *a3;
        long long v22 = *(_OWORD *)v42;
        JCColor::JCColor((JCColor *)v23, (const JCColor *)(v16 - 2));
        long long v20 = v40;
        JCColor::JCColor((JCColor *)v21, (const JCColor *)v41);
        LODWORD(v17) = v17(&v22, &v20);
        JCColor::~JCColor((JCColor *)v21);
        JCColor::~JCColor((JCColor *)v23);
      }
      while (!v17);
      unint64_t v13 = v43;
    }
    while (v43 < v42);
  }
  long long v18 = v13 - 4;
  if (v13 - 4 != a1)
  {
    *(_OWORD *)a1 = *(_OWORD *)v18;
    JCColor::operator=(v5, v13 - 2);
  }
  *(_OWORD *)long long v18 = v40;
  JCColor::operator=(v13 - 2, v41);
  JCColor::~JCColor((JCColor *)v41);
  return v13 - 4;
}

void sub_20B8DE5A8(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, uint64_t a2, uint64_t (**a3)(long long *, long long *))
{
  long long v30 = (CGColorRef *)a2;
  long long v31 = a1;
  BOOL v6 = 1;
  switch((a2 - (uint64_t)a1) >> 5)
  {
    case 0:
    case 1:
      return v6;
    case 2:
      uint64_t v7 = *a3;
      long long v30 = (CGColorRef *)(a2 - 32);
      long long v28 = *(_OWORD *)(a2 - 32);
      JCColor::JCColor((JCColor *)v29, (const JCColor *)(a2 - 16));
      long long v26 = *(_OWORD *)a1;
      JCColor::JCColor((JCColor *)v27, (const JCColor *)(a1 + 2));
      LODWORD(v7) = v7(&v28, &v26);
      JCColor::~JCColor((JCColor *)v27);
      JCColor::~JCColor((JCColor *)v29);
      if (v7) {
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v31, (uint64_t *)&v30);
      }
      return v6;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, (long long *)(a2 - 32), a3);
      return v6;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, a1 + 8, (_OWORD *)(a2 - 32), a3);
      return v6;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, a1 + 8, a1 + 12, (_OWORD *)(a2 - 32), a3);
      return v6;
    default:
      uint64_t v8 = a1 + 8;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, (long long *)a1 + 4, a3);
      unint64_t v9 = a1 + 12;
      if (a1 + 12 == (CGColorRef *)a2) {
        return 1;
      }
      int v10 = 0;
      break;
  }
  while (1)
  {
    char v11 = *a3;
    long long v24 = *(_OWORD *)v9;
    JCColor::JCColor((JCColor *)v25, (const JCColor *)(v9 + 2));
    long long v22 = *(_OWORD *)v8;
    JCColor::JCColor((JCColor *)v23, (const JCColor *)(v8 + 2));
    LODWORD(v11) = v11(&v24, &v22);
    JCColor::~JCColor((JCColor *)v23);
    JCColor::~JCColor((JCColor *)v25);
    if (v11) {
      break;
    }
LABEL_13:
    uint64_t v8 = v9;
    v9 += 4;
    if (v9 == v30) {
      return 1;
    }
  }
  long long v20 = *(_OWORD *)v9;
  JCColor::JCColor((JCColor *)v21, (const JCColor *)(v9 + 2));
  do
  {
    long long v12 = v8;
    *((_OWORD *)v8 + 2) = *(_OWORD *)v8;
    JCColor::operator=(v8 + 6, v8 + 2);
    if (v8 == v31) {
      break;
    }
    unint64_t v13 = *a3;
    long long v18 = v20;
    JCColor::JCColor((JCColor *)v19, (const JCColor *)v21);
    long long v16 = *((_OWORD *)v12 - 2);
    JCColor::JCColor((JCColor *)v17, (const JCColor *)(v12 - 2));
    char v14 = v13(&v18, &v16);
    uint64_t v8 = v12 - 4;
    JCColor::~JCColor((JCColor *)v17);
    JCColor::~JCColor((JCColor *)v19);
  }
  while ((v14 & 1) != 0);
  *(_OWORD *)long long v12 = v20;
  JCColor::operator=(v12 + 2, v21);
  if (++v10 != 8)
  {
    JCColor::~JCColor((JCColor *)v21);
    goto LABEL_13;
  }
  BOOL v6 = v9 + 4 == v30;
  JCColor::~JCColor((JCColor *)v21);
  return v6;
}

void sub_20B8DE91C(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, CGColorRef *a3, _OWORD *a4, uint64_t (**a5)(long long *, long long *))
{
  uint64_t v7 = a3;
  long long v29 = a2;
  long long v30 = a1;
  long long v27 = a4;
  long long v28 = a3;
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a2, (long long *)a3, a5);
  int v10 = *a5;
  long long v25 = *a4;
  JCColor::JCColor((JCColor *)v26, (const JCColor *)(a4 + 1));
  long long v23 = *(_OWORD *)v7;
  JCColor::JCColor((JCColor *)v24, (const JCColor *)(v7 + 2));
  LODWORD(v7) = v10(&v25, &v23);
  JCColor::~JCColor((JCColor *)v24);
  JCColor::~JCColor((JCColor *)v26);
  if (v7)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v28, (uint64_t *)&v27);
    char v11 = *a5;
    long long v21 = *(_OWORD *)v28;
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(v28 + 2));
    long long v19 = *(_OWORD *)a2;
    JCColor::JCColor((JCColor *)v20, (const JCColor *)(a2 + 2));
    int v12 = v11(&v21, &v19);
    JCColor::~JCColor((JCColor *)v20);
    JCColor::~JCColor((JCColor *)v22);
    if (v12)
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v29, (uint64_t *)&v28);
      unint64_t v13 = *a5;
      long long v17 = *(_OWORD *)v29;
      JCColor::JCColor((JCColor *)v18, (const JCColor *)(v29 + 2));
      long long v15 = *(_OWORD *)a1;
      JCColor::JCColor((JCColor *)v16, (const JCColor *)(a1 + 2));
      int v14 = v13(&v17, &v15);
      JCColor::~JCColor((JCColor *)v16);
      JCColor::~JCColor((JCColor *)v18);
      if (v14) {
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v30, (uint64_t *)&v29);
      }
    }
  }
}

void sub_20B8DEB3C(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, CGColorRef *a3, CGColorRef *a4, _OWORD *a5, uint64_t (**a6)(long long *, long long *))
{
  uint64_t v8 = a4;
  long long v38 = a2;
  long long v39 = a1;
  long long v36 = a4;
  long long v37 = a3;
  long long v35 = a5;
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a2, a3, a4, a6);
  int v12 = *a6;
  long long v33 = *a5;
  JCColor::JCColor((JCColor *)v34, (const JCColor *)(a5 + 1));
  long long v31 = *(_OWORD *)v8;
  JCColor::JCColor((JCColor *)v32, (const JCColor *)(v8 + 2));
  LODWORD(v8) = v12(&v33, &v31);
  JCColor::~JCColor((JCColor *)v32);
  JCColor::~JCColor((JCColor *)v34);
  if (v8)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v36, (uint64_t *)&v35);
    unint64_t v13 = *a6;
    long long v29 = *(_OWORD *)v36;
    JCColor::JCColor((JCColor *)v30, (const JCColor *)(v36 + 2));
    long long v27 = *(_OWORD *)a3;
    JCColor::JCColor((JCColor *)v28, (const JCColor *)(a3 + 2));
    int v14 = v13(&v29, &v27);
    JCColor::~JCColor((JCColor *)v28);
    JCColor::~JCColor((JCColor *)v30);
    if (v14)
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v37, (uint64_t *)&v36);
      long long v15 = *a6;
      long long v25 = *(_OWORD *)v37;
      JCColor::JCColor((JCColor *)v26, (const JCColor *)(v37 + 2));
      long long v23 = *(_OWORD *)a2;
      JCColor::JCColor((JCColor *)v24, (const JCColor *)(a2 + 2));
      int v16 = v15(&v25, &v23);
      JCColor::~JCColor((JCColor *)v24);
      JCColor::~JCColor((JCColor *)v26);
      if (v16)
      {
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v38, (uint64_t *)&v37);
        long long v17 = *a6;
        long long v21 = *(_OWORD *)v38;
        JCColor::JCColor((JCColor *)v22, (const JCColor *)(v38 + 2));
        long long v19 = *(_OWORD *)a1;
        JCColor::JCColor((JCColor *)v20, (const JCColor *)(a1 + 2));
        int v18 = v17(&v21, &v19);
        JCColor::~JCColor((JCColor *)v20);
        JCColor::~JCColor((JCColor *)v22);
        if (v18) {
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v39, (uint64_t *)&v38);
        }
      }
    }
  }
}

void sub_20B8DEDA4(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, CGColorRef *a3, uint64_t (**a4)(long long *, long long *))
{
  long long v23 = a1;
  if (a1 != a2)
  {
    BOOL v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = ((char *)a2 - (char *)a1) >> 5;
    if ((char *)a2 - (char *)a1 >= 33)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      int v12 = &a1[4 * v10];
      do
      {
        std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((uint64_t)v7, a4, v9, v12);
        v12 -= 4;
        --v11;
      }
      while (v11);
    }
    long long v22 = v6;
    if (v6 == a3)
    {
      a3 = v6;
    }
    else
    {
      unint64_t v13 = v6;
      do
      {
        int v14 = *a4;
        long long v20 = *(_OWORD *)v13;
        JCColor::JCColor((JCColor *)v21, (const JCColor *)(v13 + 2));
        long long v18 = *(_OWORD *)v23;
        JCColor::JCColor((JCColor *)v19, (const JCColor *)(v23 + 2));
        LODWORD(v14) = v14(&v20, &v18);
        JCColor::~JCColor((JCColor *)v19);
        JCColor::~JCColor((JCColor *)v21);
        if (v14)
        {
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v22, (uint64_t *)&v23);
          std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((uint64_t)v23, a4, v9, v23);
        }
        unint64_t v13 = v22 + 4;
        long long v22 = v13;
      }
      while (v13 != a3);
      uint64_t v7 = v23;
      uint64_t v8 = (char *)v6 - (char *)v23;
    }
    if (v8 >= 33)
    {
      unint64_t v15 = (unint64_t)v8 >> 5;
      do
      {
        std::__pop_heap[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*)(sortColorEntry,sortColorEntry),sortColorEntry*>(v7, (uint64_t)v6, a4, v15);
        v6 -= 4;
      }
      while (v15-- > 2);
      return v22;
    }
  }
  return a3;
}

void sub_20B8DEF7C(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(uint64_t a1, uint64_t (**a2)(long long *, long long *), uint64_t a3, CGColorRef *a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    char v5 = a4;
    uint64_t v21 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - a1) >> 5)
    {
      uint64_t v8 = ((uint64_t)a4 - a1) >> 4;
      uint64_t v9 = v8 + 1;
      unint64_t v10 = (CGColorRef *)(a1 + 32 * (v8 + 1));
      uint64_t v11 = v8 + 2;
      if (v8 + 2 < a3)
      {
        int v12 = *a2;
        long long v39 = *(_OWORD *)v10;
        JCColor::JCColor((JCColor *)v40, (const JCColor *)(v10 + 2));
        long long v37 = *((_OWORD *)v10 + 2);
        JCColor::JCColor((JCColor *)v38, (const JCColor *)(v10 + 6));
        LODWORD(v12) = v12(&v39, &v37);
        JCColor::~JCColor((JCColor *)v38);
        JCColor::~JCColor((JCColor *)v40);
        v10 += 4 * v12;
        if (v12) {
          uint64_t v9 = v11;
        }
      }
      unint64_t v13 = *a2;
      long long v35 = *(_OWORD *)v10;
      JCColor::JCColor((JCColor *)v36, (const JCColor *)(v10 + 2));
      long long v33 = *(_OWORD *)v5;
      JCColor::JCColor((JCColor *)v34, (const JCColor *)(v5 + 2));
      char v14 = v13(&v35, &v33);
      JCColor::~JCColor((JCColor *)v34);
      JCColor::~JCColor((JCColor *)v36);
      if ((v14 & 1) == 0)
      {
        long long v31 = *(_OWORD *)v5;
        uint64_t v20 = a1;
        JCColor::JCColor((JCColor *)v32, (const JCColor *)(v5 + 2));
        do
        {
          unint64_t v15 = v10;
          *(_OWORD *)char v5 = *(_OWORD *)v10;
          int v16 = v10 + 2;
          JCColor::operator=(v5 + 2, v10 + 2);
          if (v21 < v9) {
            break;
          }
          uint64_t v17 = (2 * v9) | 1;
          unint64_t v10 = (CGColorRef *)(v20 + 32 * v17);
          uint64_t v9 = 2 * v9 + 2;
          if (v9 >= a3)
          {
            uint64_t v9 = v17;
          }
          else
          {
            long long v18 = *a2;
            long long v29 = *(_OWORD *)v10;
            JCColor::JCColor((JCColor *)v30, (const JCColor *)(v10 + 2));
            long long v27 = *((_OWORD *)v10 + 2);
            JCColor::JCColor((JCColor *)v28, (const JCColor *)(v10 + 6));
            LODWORD(v18) = v18(&v29, &v27);
            JCColor::~JCColor((JCColor *)v28);
            JCColor::~JCColor((JCColor *)v30);
            v10 += 4 * v18;
            if (!v18) {
              uint64_t v9 = v17;
            }
          }
          long long v19 = *a2;
          long long v25 = *(_OWORD *)v10;
          JCColor::JCColor((JCColor *)v26, (const JCColor *)(v10 + 2));
          long long v23 = v31;
          JCColor::JCColor((JCColor *)v24, (const JCColor *)v32);
          LODWORD(v19) = v19(&v25, &v23);
          JCColor::~JCColor((JCColor *)v24);
          JCColor::~JCColor((JCColor *)v26);
          char v5 = v15;
        }
        while (!v19);
        *(_OWORD *)unint64_t v15 = v31;
        JCColor::operator=(v16, v32);
        JCColor::~JCColor((JCColor *)v32);
      }
    }
  }
}

void sub_20B8DF260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, JCColor *a12)
{
}

void std::__pop_heap[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, uint64_t a2, uint64_t (**a3)(long long *, long long *), uint64_t a4)
{
  if (a4 >= 2)
  {
    long long v12 = *(_OWORD *)a1;
    JCColor::JCColor((JCColor *)v13, (const JCColor *)(a1 + 2));
    uint64_t v8 = std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a3, a4);
    uint64_t v9 = (_OWORD *)(a2 - 32);
    unint64_t v10 = v8 + 2;
    if (v8 == (CGColorRef *)(a2 - 32))
    {
      *(_OWORD *)uint64_t v8 = v12;
      JCColor::operator=(v10, v13);
    }
    else
    {
      *(_OWORD *)uint64_t v8 = *v9;
      uint64_t v11 = (CGColorRef *)(a2 - 16);
      JCColor::operator=(v10, v11);
      *uint64_t v9 = v12;
      JCColor::operator=(v11, v13);
      std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((uint64_t)a1, (uint64_t)(v8 + 4), a3, ((char *)(v8 + 4) - (char *)a1) >> 5);
    }
    JCColor::~JCColor((JCColor *)v13);
  }
}

void sub_20B8DF3C8(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, uint64_t (**a2)(long long *, long long *), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = &a1[4 * v6 + 4];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      long long v12 = *a2;
      long long v16 = *(_OWORD *)v9;
      JCColor::JCColor((JCColor *)v17, (const JCColor *)(v9 + 2));
      long long v14 = *((_OWORD *)v9 + 2);
      JCColor::JCColor((JCColor *)v15, (const JCColor *)(v9 + 6));
      LODWORD(v12) = v12(&v16, &v14);
      JCColor::~JCColor((JCColor *)v15);
      JCColor::~JCColor((JCColor *)v17);
      v9 += 4 * v12;
      if (v12) {
        uint64_t v10 = v11;
      }
    }
    *(_OWORD *)a1 = *(_OWORD *)v9;
    JCColor::operator=(a1 + 2, v9 + 2);
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

void sub_20B8DF4F4(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(uint64_t a1, uint64_t a2, uint64_t (**a3)(long long *, long long *), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = (CGColorRef *)(a1 + 32 * (v4 >> 1));
    uint64_t v9 = *a3;
    long long v23 = *(_OWORD *)v8;
    JCColor::JCColor((JCColor *)v24, (const JCColor *)(v8 + 2));
    long long v21 = *(_OWORD *)(a2 - 32);
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(a2 - 16));
    LODWORD(v9) = v9(&v23, &v21);
    JCColor::~JCColor((JCColor *)v22);
    JCColor::~JCColor((JCColor *)v24);
    if (v9)
    {
      uint64_t v10 = (CGColorRef *)(a2 - 32);
      long long v19 = *(_OWORD *)(a2 - 32);
      JCColor::JCColor((JCColor *)v20, (const JCColor *)(a2 - 16));
      do
      {
        uint64_t v11 = v8;
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v8;
        long long v12 = v8 + 2;
        JCColor::operator=(v10 + 2, v8 + 2);
        if (!v7) {
          break;
        }
        unint64_t v7 = (v7 - 1) >> 1;
        uint64_t v8 = (CGColorRef *)(a1 + 32 * v7);
        unint64_t v13 = *a3;
        long long v17 = *(_OWORD *)v8;
        JCColor::JCColor((JCColor *)v18, (const JCColor *)(v8 + 2));
        long long v15 = v19;
        JCColor::JCColor((JCColor *)v16, (const JCColor *)v20);
        LOBYTE(v13) = v13(&v17, &v15);
        JCColor::~JCColor((JCColor *)v16);
        JCColor::~JCColor((JCColor *)v18);
        uint64_t v10 = v11;
      }
      while ((v13 & 1) != 0);
      *(_OWORD *)uint64_t v11 = v19;
      JCColor::operator=(v12, v20);
      JCColor::~JCColor((JCColor *)v20);
    }
  }
}

void sub_20B8DF6B0(_Unwind_Exception *a1)
{
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

uint64_t std::vector<JCColor>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<JCColor>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<JCColor>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<JCColor>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = 0;
  uint64_t v11 = a7 - 16;
  while (a3 + v10 != a5)
  {
    long long v12 = (JCColor *)(v11 + v10);
    v10 -= 16;
    JCColor::JCColor(v12, (const JCColor *)(v10 + a3));
  }
  return a6;
}

uint64_t std::__split_buffer<JCColor>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 16;
    JCColor::~JCColor((JCColor *)(i - 16));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

BOOL static EmojiPosterLayoutStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EmojiPosterLayoutStyle.hash(into:)()
{
  return sub_20B926F68();
}

uint64_t sub_20B8DF960()
{
  return 0;
}

uint64_t sub_20B8DF96C()
{
  return 0;
}

void sub_20B8DF978(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_20B8DF984(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0100();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8DF9C0(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0100();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_20B8DF9FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20B8DFA14()
{
  return sub_20B926F68();
}

uint64_t sub_20B8DFA44()
{
  uint64_t v1 = 0x72616C7563726963;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C6172697073;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x724774657366666FLL;
  }
}

uint64_t sub_20B8DFAA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8E6A98(a1, a2);
  *a3 = result;
  return result;
}

void sub_20B8DFAC8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_20B8DFAD4(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0058();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8DFB10(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0058();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8DFB4C(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0154();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8DFB88(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0154();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8DFBC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_20B8DFBF4(uint64_t a1)
{
  unint64_t v2 = sub_20B8E00AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8DFC30(uint64_t a1)
{
  unint64_t v2 = sub_20B8E00AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmojiPosterLayoutStyle.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33F0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388]();
  long long v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33F8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3400);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33E8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388]();
  long long v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E0058();
  sub_20B926FC8();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_20B8E0100();
      sub_20B926E58();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_20B8E00AC();
      long long v17 = v23;
      sub_20B926E58();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_20B8E0154();
    sub_20B926E58();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_20B8E0058()
{
  unint64_t result = qword_26ACA29B0;
  if (!qword_26ACA29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29B0);
  }
  return result;
}

unint64_t sub_20B8E00AC()
{
  unint64_t result = qword_26ACA30B0;
  if (!qword_26ACA30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30B0);
  }
  return result;
}

unint64_t sub_20B8E0100()
{
  unint64_t result = qword_26ACA30B8;
  if (!qword_26ACA30B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30B8);
  }
  return result;
}

unint64_t sub_20B8E0154()
{
  unint64_t result = qword_26ACA29E8;
  if (!qword_26ACA29E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29E8);
  }
  return result;
}

uint64_t EmojiPosterLayoutStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F00);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388]();
  long long v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F08);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F10);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EF8);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E0058();
  uint64_t v12 = (uint64_t)v39;
  sub_20B926FA8();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  long long v39 = a1;
  long long v15 = v11;
  uint64_t v16 = sub_20B926E48();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_20B926CA8();
    swift_allocError();
    long long v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5838);
    *long long v23 = &type metadata for EmojiPosterLayoutStyle;
    sub_20B926DD8();
    sub_20B926C98();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_20B8E0100();
      uint64_t v18 = v30;
      sub_20B926DC8();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_20B8E00AC();
      uint64_t v25 = v30;
      sub_20B926DC8();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_20B8E0154();
    uint64_t v24 = v30;
    sub_20B926DC8();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_20B8E07B4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return EmojiPosterLayoutStyle.init(from:)(a1, a2);
}

uint64_t sub_20B8E07CC(void *a1)
{
  return EmojiPosterLayoutStyle.encode(to:)(a1);
}

uint64_t sub_20B8E07E4()
{
  uint64_t v1 = 0x6D756964656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656772616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6C616D73;
  }
}

uint64_t sub_20B8E0834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8E6FA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20B8E085C(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0DA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E0898(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0DA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E08D4(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0DF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E0910(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0DF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E094C(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0E48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E0988(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0E48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E09C4(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0E9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E0A00(uint64_t a1)
{
  unint64_t v2 = sub_20B8E0E9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmojiPosterSizeVariant.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3410);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388]();
  long long v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3420);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3418);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3408);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388]();
  long long v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E0DA0();
  sub_20B926FC8();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_20B8E0E48();
      sub_20B926E58();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_20B8E0DF4();
      int v17 = v23;
      sub_20B926E58();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_20B8E0E9C();
    sub_20B926E58();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_20B8E0DA0()
{
  unint64_t result = qword_26ACA2A08;
  if (!qword_26ACA2A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A08);
  }
  return result;
}

unint64_t sub_20B8E0DF4()
{
  unint64_t result = qword_26ACA3050;
  if (!qword_26ACA3050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3050);
  }
  return result;
}

unint64_t sub_20B8E0E48()
{
  unint64_t result = qword_26ACA30C8;
  if (!qword_26ACA30C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30C8);
  }
  return result;
}

unint64_t sub_20B8E0E9C()
{
  unint64_t result = qword_26ACA2A30;
  if (!qword_26ACA2A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A30);
  }
  return result;
}

uint64_t EmojiPosterSizeVariant.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F20);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388]();
  long long v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F30);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F28);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F18);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E0DA0();
  uint64_t v12 = (uint64_t)v39;
  sub_20B926FA8();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  long long v39 = a1;
  long long v15 = v11;
  uint64_t v16 = sub_20B926E48();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_20B926CA8();
    swift_allocError();
    long long v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5838);
    *long long v23 = &type metadata for EmojiPosterSizeVariant;
    sub_20B926DD8();
    sub_20B926C98();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_20B8E0E48();
      uint64_t v18 = v30;
      sub_20B926DC8();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_20B8E0DF4();
      uint64_t v25 = v30;
      sub_20B926DC8();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_20B8E0E9C();
    uint64_t v24 = v30;
    sub_20B926DC8();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_20B8E14AC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return EmojiPosterSizeVariant.init(from:)(a1, a2);
}

uint64_t sub_20B8E14C4(void *a1)
{
  return EmojiPosterSizeVariant.encode(to:)(a1);
}

uint64_t sub_20B8E14DC(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1E78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E1518(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1E78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E1554()
{
  uint64_t result = 0x64696C6F73;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x7261656E696CLL;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x6C6169646172;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7247000000000000;
      break;
    case 3:
      uint64_t result = 0x6172476D6F6F6C62;
      break;
    case 4:
      uint64_t result = 0x657474656E676976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B8E1610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8E70E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_20B8E1638(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_20B8E1644(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1DD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E1680(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1DD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E16BC(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1F20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E16F8(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1F20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E1734(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1ECC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E1770(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1ECC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E17AC(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1F74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E17E8(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1F74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E1824(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1E24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E1860(uint64_t a1)
{
  unint64_t v2 = sub_20B8E1E24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmojiPosterBackgroundStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3448);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388]();
  long long v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3450);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x270FA5388]();
  uint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3460);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388]();
  uint64_t v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3458);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3440);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3438);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x270FA5388]();
  int v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E1DD0();
  sub_20B926FC8();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_20B8E1F20();
      uint64_t v21 = v39;
      sub_20B926E58();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_20B8E1ECC();
      uint64_t v22 = v29;
      uint64_t v21 = v39;
      sub_20B926E58();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_20B8E1E78();
      uint64_t v22 = v32;
      uint64_t v21 = v39;
      sub_20B926E58();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_20B8E1E24();
      uint64_t v22 = v35;
      uint64_t v21 = v39;
      sub_20B926E58();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_20B8E1F74();
      uint64_t v19 = v39;
      sub_20B926E58();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

unint64_t sub_20B8E1DD0()
{
  unint64_t result = qword_26ACA2A98;
  if (!qword_26ACA2A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A98);
  }
  return result;
}

unint64_t sub_20B8E1E24()
{
  unint64_t result = qword_2676A5840;
  if (!qword_2676A5840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5840);
  }
  return result;
}

unint64_t sub_20B8E1E78()
{
  unint64_t result = qword_26ACA30E0;
  if (!qword_26ACA30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30E0);
  }
  return result;
}

unint64_t sub_20B8E1ECC()
{
  unint64_t result = qword_2676A5848;
  if (!qword_2676A5848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5848);
  }
  return result;
}

unint64_t sub_20B8E1F20()
{
  unint64_t result = qword_2676A5850;
  if (!qword_2676A5850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5850);
  }
  return result;
}

unint64_t sub_20B8E1F74()
{
  unint64_t result = qword_26ACA2AB0;
  if (!qword_26ACA2AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AB0);
  }
  return result;
}

uint64_t _s11EmojiPoster0aB11LayoutStyleO9hashValueSivg_0()
{
  return sub_20B926F88();
}

uint64_t EmojiPosterBackgroundStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F58);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388]();
  unsigned int v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F60);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388]();
  unsigned int v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F70);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388]();
  unsigned int v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F68);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F50);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F48);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  unint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_20B8E1DD0();
  uint64_t v18 = v56;
  sub_20B926FA8();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_1(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  uint64_t v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_20B926E48();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_20B926CA8();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5838);
    *uint64_t v32 = &type metadata for EmojiPosterBackgroundStyle;
    sub_20B926DD8();
    sub_20B926C98();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_20B8E1F20();
      uint64_t v35 = v41;
      sub_20B926DC8();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_20B8E1ECC();
      uint64_t v36 = v41;
      sub_20B926DC8();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_20B8E1E78();
      uint64_t v37 = v41;
      sub_20B926DC8();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_20B8E1E24();
      uint64_t v38 = v41;
      sub_20B926DC8();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_20B8E1F74();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      sub_20B926DC8();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return __swift_destroy_boxed_opaque_existential_1(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      break;
  }
  return result;
}

uint64_t sub_20B8E276C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return EmojiPosterBackgroundStyle.init(from:)(a1, a2);
}

uint64_t sub_20B8E2784(void *a1)
{
  return EmojiPosterBackgroundStyle.encode(to:)(a1);
}

void static EmojiPosterBackgroundColor.white(withAlpha:)(uint64_t a1@<X8>, double a2@<D0>)
{
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)a1 = _Q1;
  *(void *)(a1 + 16) = 0x3FF0000000000000;
  *(double *)(a1 + 24) = a2;
}

EmojiPoster::EmojiPosterBackgroundColor __swiftcall EmojiPosterBackgroundColor.init(red:green:blue:alpha:)(Swift::Double red, Swift::Double green, Swift::Double blue, Swift::Double alpha)
{
  Swift::Double *v4 = red;
  v4[1] = green;
  v4[2] = blue;
  v4[3] = alpha;
  result.alpha = alpha;
  result.blue = blue;
  result.green = green;
  result.red = red;
  return result;
}

void static EmojiPosterBackgroundColor.black(withAlpha:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(double *)(a1 + 24) = a2;
}

double static EmojiPosterBackgroundColor.clear()@<D0>(_OWORD *a1@<X8>)
{
  double result = 1.0;
  __asm { FMOV            V1.2D, #1.0 }
  *a1 = _Q1;
  a1[1] = xmmword_20B9294D0;
  return result;
}

EmojiPoster::EmojiPosterBackgroundColor __swiftcall EmojiPosterBackgroundColor.init(_:)(UIColor a1)
{
  uint64_t v3 = v1;
  v11[1] = *MEMORY[0x263EF8340];
  double v10 = 0.0;
  v11[0] = 0;
  double v8 = 0.0;
  double v9 = 0.0;
  [(objc_class *)a1.super.isa getRed:v11 green:&v10 blue:&v9 alpha:&v8];

  double v5 = v10;
  double v4 = *(double *)v11;
  double v7 = v8;
  double v6 = v9;
  *(void *)uint64_t v3 = v11[0];
  *(double *)(v3 + 8) = v5;
  *(double *)(v3 + 16) = v6;
  *(double *)(v3 + 24) = v7;
  result.alpha = v7;
  result.blue = v6;
  result.green = v5;
  result.red = v4;
  return result;
}

uint64_t sub_20B8E2874()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34B8);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x263F8D538];
  *(_OWORD *)(v4 + 16) = xmmword_20B9294E0;
  uint64_t v6 = MEMORY[0x263F8D5B8];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = v1;
  uint64_t v7 = sub_20B926958();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20B9294E0;
  *(void *)(v8 + 56) = v5;
  *(void *)(v8 + 64) = v6;
  *(void *)(v8 + 32) = v2;
  sub_20B926958();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20B9294E0;
  *(void *)(v9 + 56) = v5;
  *(void *)(v9 + 64) = v6;
  *(void *)(v9 + 32) = v3;
  sub_20B926958();
  sub_20B926A08();
  sub_20B926A08();
  swift_bridgeObjectRelease();
  sub_20B926A08();
  sub_20B926A08();
  swift_bridgeObjectRelease();
  return v7;
}

UIColor __swiftcall EmojiPosterBackgroundColor.uiColor()()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  double v4 = v0[3];
  id v5 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return (UIColor)objc_msgSend(v5, sel_initWithRed_green_blue_alpha_, v1, v2, v3, v4);
}

BOOL static EmojiPosterBackgroundColor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_20B8E2A94()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B8E2B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8E7368(a1, a2);
  *a3 = result;
  return result;
}

void sub_20B8E2B34(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_20B8E2B40(uint64_t a1)
{
  unint64_t v2 = sub_20B8E2D7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E2B7C(uint64_t a1)
{
  unint64_t v2 = sub_20B8E2D7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmojiPosterBackgroundColor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3430);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E2D7C();
  sub_20B926FC8();
  v8[15] = 0;
  sub_20B926E98();
  if (!v1)
  {
    v8[14] = 1;
    sub_20B926E98();
    v8[13] = 2;
    sub_20B926E98();
    v8[12] = 3;
    sub_20B926E98();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20B8E2D7C()
{
  unint64_t result = qword_26ACA2A78;
  if (!qword_26ACA2A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A78);
  }
  return result;
}

uint64_t EmojiPosterBackgroundColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E2D7C();
  sub_20B926FA8();
  if (!v2)
  {
    char v22 = 0;
    sub_20B926E18();
    uint64_t v10 = v9;
    char v21 = 1;
    sub_20B926E18();
    uint64_t v12 = v11;
    char v20 = 2;
    sub_20B926E18();
    uint64_t v15 = v14;
    char v19 = 3;
    sub_20B926E18();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v15;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20B8E2FD0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EmojiPosterBackgroundColor.init(from:)(a1, a2);
}

uint64_t sub_20B8E2FE8(void *a1)
{
  return EmojiPosterBackgroundColor.encode(to:)(a1);
}

BOOL sub_20B8E3000(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t static EmojiPosterConfiguration.localizedString(forStyle:sizeVariant:)()
{
  _s11EmojiPoster0aB13ConfigurationV21layoutLocalizationKey8forStyle11sizeVariantSSAA0ab6LayoutH0O_AA0ab4SizeJ0OtFZ_0();
  type metadata accessor for BackgroundViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20B926708();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t EmojiPosterConfiguration.customIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmojiPosterConfiguration.backgroundConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  char v8 = *(unsigned char *)(v1 + 104);
  char v9 = *(unsigned char *)(v1 + 105);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 89) = v9;
  return sub_20B8E7644(v2, v3, v4, v5, v6);
}

void EmojiPosterConfiguration.layoutStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 106);
}

void EmojiPosterConfiguration.sizeVariant.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 107);
}

uint64_t EmojiPosterConfiguration.emoji.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmojiPosterConfiguration.usesParalax.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t EmojiPosterConfiguration.localizedLayoutName.getter()
{
  return _s11EmojiPoster0aB13ConfigurationV21layoutLocalizationKey8forStyle11sizeVariantSSAA0ab6LayoutH0O_AA0ab4SizeJ0OtFZ_0();
}

double EmojiPosterConfiguration.init(backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 88);
  char v8 = *(unsigned char *)(a1 + 89);
  char v9 = *a2;
  char v10 = *a3;
  v17[0] = *(unsigned char *)a1;
  long long v18 = *(_OWORD *)(a1 + 8);
  long long v19 = *(_OWORD *)(a1 + 24);
  long long v20 = *(_OWORD *)(a1 + 40);
  long long v21 = *(_OWORD *)(a1 + 56);
  long long v22 = *(_OWORD *)(a1 + 72);
  char v23 = v7;
  char v24 = v8;
  char v16 = v9;
  char v15 = v10;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0, 0, v17, &v16, &v15, a4, a5, (uint64_t)v25);
  long long v11 = v29;
  a6[4] = v28;
  a6[5] = v11;
  a6[6] = v30[0];
  *(_OWORD *)((char *)a6 + 105) = *(_OWORD *)((char *)v30 + 9);
  long long v12 = v25[1];
  *a6 = v25[0];
  a6[1] = v12;
  double result = *(double *)&v26;
  long long v14 = v27;
  a6[2] = v26;
  a6[3] = v14;
  return result;
}

uint64_t EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v36[1] = *MEMORY[0x263EF8340];
  char v9 = *a3;
  uint64_t v10 = *((void *)a3 + 1);
  uint64_t v11 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  uint64_t v13 = *((void *)a3 + 4);
  long long v14 = *(_OWORD *)(a3 + 40);
  long long v15 = *(_OWORD *)(a3 + 56);
  long long v16 = *(_OWORD *)(a3 + 72);
  char v17 = a3[88];
  int v18 = a3[89];
  char v19 = *a4;
  char v20 = *a5;
  if (v18 == 1)
  {
    uint64_t v29 = result;
    uint64_t v21 = a7;
    uint64_t v22 = a2;
    long long v31 = *(_OWORD *)(a3 + 56);
    long long v32 = *(_OWORD *)(a3 + 40);
    long long v30 = *(_OWORD *)(a3 + 72);
    char v23 = *a3;
    char v24 = *a4;
    char v25 = *a5;
    unint64_t v26 = a6;
    id v27 = _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(a6);
    a6 = v26;
    char v20 = v25;
    char v19 = v24;
    char v9 = v23;
    long long v16 = v30;
    long long v15 = v31;
    long long v14 = v32;
    a2 = v22;
    LOBYTE(a7) = v21;
    long long v28 = v27;
    double result = v29;
    if (v28)
    {
      uint64_t v35 = 0;
      v36[0] = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      objc_msgSend(v28, sel_getRed_green_blue_alpha_, v36, &v35, &v34, &v33, v21, *(double *)&v32, *(double *)&v31, *(double *)&v30);

      a6 = v26;
      char v20 = v25;
      char v19 = v24;
      char v9 = v23;
      long long v16 = v30;
      long long v15 = v31;
      long long v14 = v32;
      double result = v29;
      a2 = v22;
      LOBYTE(a7) = v21;
      uint64_t v11 = v35;
      uint64_t v10 = v36[0];
      uint64_t v13 = v33;
      uint64_t v12 = v34;
      char v17 = 1;
    }
  }
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = v9;
  *(void *)(a8 + 24) = v10;
  *(void *)(a8 + 32) = v11;
  *(void *)(a8 + 40) = v12;
  *(void *)(a8 + 48) = v13;
  *(_OWORD *)(a8 + 56) = v14;
  *(_OWORD *)(a8 + 72) = v15;
  *(_OWORD *)(a8 + 88) = v16;
  *(unsigned char *)(a8 + 104) = v17;
  *(unsigned char *)(a8 + 105) = v18;
  *(unsigned char *)(a8 + 106) = v19;
  *(unsigned char *)(a8 + 107) = v20;
  *(void *)(a8 + 112) = a6;
  *(unsigned char *)(a8 + 120) = a7 & 1;
  return result;
}

uint64_t EmojiPosterBackgroundConfiguration.shouldRecalculateSuggestedColor.getter()
{
  return *(unsigned __int8 *)(v0 + 89);
}

__n128 EmojiPosterBackgroundConfiguration.init(backgroundStyle:backgroundColor:gradientProperties:isSuggestedColor:shouldRecalculateSuggestedColor:)@<Q0>(unsigned char *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  long long v6 = a2[1];
  *(_OWORD *)(a6 + 8) = *a2;
  *(_OWORD *)(a6 + 24) = v6;
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a6 + 40) = *(_OWORD *)a3;
  *(unsigned char *)a6 = *a1;
  *(_OWORD *)(a6 + 56) = v7;
  __n128 result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a6 + 72) = result;
  *(unsigned char *)(a6 + 88) = a4 | a5;
  *(unsigned char *)(a6 + 89) = a5;
  return result;
}

Swift::String __swiftcall EmojiPosterConfiguration.identifier()()
{
  if (*(void *)(v0 + 8))
  {
    uint64_t v1 = *(void *)v0;
    uint64_t v2 = *(void **)(v0 + 8);
  }
  else
  {
    int v3 = *(unsigned __int8 *)(v0 + 106);
    uint64_t v4 = 0x72616C7563726963;
    unint64_t v5 = 0xE600000000000000;
    if (v3 == 1) {
      unint64_t v5 = 0xE800000000000000;
    }
    else {
      uint64_t v4 = 0x6C6172697073;
    }
    BOOL v6 = v3 == 0;
    if (*(unsigned char *)(v0 + 106)) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 0x724774657366666FLL;
    }
    if (v6) {
      unint64_t v8 = 0xEA00000000006469;
    }
    else {
      unint64_t v8 = v5;
    }
    uint64_t v12 = v7;
    swift_bridgeObjectRetain();
    sub_20B926A08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20B926A08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
    sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
    sub_20B9268D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20B926A08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20B926A08();
    swift_bridgeObjectRelease();
    EmojiPosterBackgroundConfiguration.identifier()();
    swift_bridgeObjectRetain();
    sub_20B926A08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v12;
    uint64_t v2 = (void *)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall EmojiPosterBackgroundConfiguration.identifier()()
{
  uint64_t v1 = *v0;
  int v2 = v0[88];
  if (*((void *)v0 + 9))
  {
    uint64_t v3 = sub_20B8E4528();
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v3 = 1701736302;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F98);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20B9294F0;
  unint64_t v7 = 0xE500000000000000;
  uint64_t v8 = 0x64696C6F73;
  uint64_t v9 = (void *)v6;
  switch(v1)
  {
    case 1:
      uint64_t v10 = 0x7261656E696CLL;
      goto LABEL_7;
    case 2:
      uint64_t v10 = 0x6C6169646172;
LABEL_7:
      uint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0x7247000000000000;
      unint64_t v7 = 0xEE00746E65696461;
      break;
    case 3:
      unint64_t v7 = 0xED0000746E656964;
      uint64_t v8 = 0x6172476D6F6F6C62;
      break;
    case 4:
      unint64_t v7 = 0xE900000000000064;
      uint64_t v8 = 0x657474656E676976;
      break;
    default:
      break;
  }
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = sub_20B8E2874();
  v9[7] = v11;
  v9[8] = v3;
  v9[9] = v5;
  uint64_t v12 = 0x677553746F4E7369;
  if (v2) {
    uint64_t v12 = 0x7365676775537369;
  }
  unint64_t v13 = 0xEE00646574736567;
  if (v2) {
    unint64_t v13 = 0xEB00000000646574;
  }
  v9[10] = v12;
  v9[11] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
  uint64_t v14 = sub_20B9268D8();
  long long v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v14;
  int v18 = v16;
  result._object = v18;
  result._countAndFlagsBits = v17;
  return result;
}

unint64_t sub_20B8E39A0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x745374756F79616CLL;
      break;
    case 3:
      unint64_t result = 0x69726156657A6973;
      break;
    case 4:
      unint64_t result = 0x696A6F6D65;
      break;
    case 5:
      unint64_t result = 0x6172615073657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20B8E3A84()
{
  return sub_20B8E39A0(*v0);
}

uint64_t sub_20B8E3A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8EA7CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_20B8E3AB4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_20B8E3AC0(uint64_t a1)
{
  unint64_t v2 = sub_20B8E76D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E3AFC(uint64_t a1)
{
  unint64_t v2 = sub_20B8E76D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmojiPosterConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3428);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v44 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v11 = *(void *)(v1 + 56);
  uint64_t v28 = *(void *)(v1 + 64);
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v26 = *(void *)(v1 + 80);
  uint64_t v27 = v12;
  uint64_t v25 = *(void *)(v1 + 88);
  uint64_t v24 = *(void *)(v1 + 96);
  int v23 = *(unsigned __int8 *)(v1 + 104);
  int v22 = *(unsigned __int8 *)(v1 + 105);
  int v21 = *(unsigned __int8 *)(v1 + 106);
  int v20 = *(unsigned __int8 *)(v1 + 107);
  uint64_t v19 = *(void *)(v1 + 112);
  v18[1] = *(unsigned __int8 *)(v1 + 120);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E76D0();
  sub_20B926FC8();
  LOBYTE(v31) = 0;
  uint64_t v13 = v30;
  sub_20B926E68();
  if (!v13)
  {
    char v14 = v21;
    char v15 = v20;
    uint64_t v16 = v19;
    LOBYTE(v31) = v44;
    uint64_t v32 = v7;
    uint64_t v33 = v8;
    uint64_t v34 = v9;
    uint64_t v35 = v10;
    uint64_t v36 = v29;
    uint64_t v37 = v28;
    uint64_t v38 = v27;
    uint64_t v39 = v26;
    uint64_t v40 = v25;
    uint64_t v41 = v24;
    char v42 = v23;
    char v43 = v22;
    char v45 = 1;
    sub_20B8E7724();
    sub_20B926EB8();
    LOBYTE(v31) = v14;
    char v45 = 2;
    sub_20B8E7778();
    sub_20B926EB8();
    LOBYTE(v31) = v15;
    char v45 = 3;
    sub_20B8E77CC();
    sub_20B926EB8();
    uint64_t v31 = v16;
    char v45 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
    sub_20B8E7F48(&qword_26ACA33C8, &qword_26ACA2EB0);
    sub_20B926EB8();
    LOBYTE(v31) = 5;
    sub_20B926E88();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *EmojiPosterConfiguration.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  unint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_20B8E76D0();
  sub_20B926FA8();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  uint64_t v10 = v6;
  unsigned int v54 = a2;
  LOBYTE(v63) = 0;
  uint64_t v11 = v5;
  uint64_t v12 = sub_20B926DE8();
  uint64_t v14 = v13;
  LOBYTE(v56) = 1;
  sub_20B8E7864();
  swift_bridgeObjectRetain();
  sub_20B926E38();
  uint64_t v47 = v12;
  uint64_t v51 = v14;
  int v82 = v63;
  uint64_t v15 = v64;
  uint64_t v16 = v65;
  uint64_t v17 = v66;
  uint64_t v18 = v67;
  uint64_t v19 = v71;
  int v48 = BYTE1(v74);
  int v49 = v74;
  LOBYTE(v56) = 2;
  uint64_t v50 = v68;
  uint64_t v20 = v69;
  uint64_t v21 = v70;
  uint64_t v52 = v73;
  uint64_t v53 = v72;
  sub_20B8E7644(v68, v69, v70, v71, v72);
  sub_20B8E78B8();
  sub_20B926E38();
  uint64_t v45 = v19;
  uint64_t v46 = v21;
  uint64_t v44 = v20;
  LODWORD(v19) = v63;
  LOBYTE(v56) = 3;
  sub_20B8E790C();
  sub_20B926E38();
  int v43 = v19;
  LODWORD(v19) = v63;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  LOBYTE(v56) = 4;
  sub_20B8E7F48(&qword_26ACA2EB8, &qword_26ACA2EB0);
  sub_20B926E38();
  char v83 = 5;
  uint64_t v42 = v63;
  swift_bridgeObjectRetain();
  char v22 = sub_20B926E08();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  int v40 = v22 & 1;
  uint64_t v23 = v46;
  uint64_t v24 = v50;
  *(void *)&long long v56 = v47;
  *((void *)&v56 + 1) = v51;
  LOBYTE(v57) = v82;
  *((void *)&v57 + 1) = v15;
  *(void *)&long long v58 = v16;
  *((void *)&v58 + 1) = v17;
  *(void *)&long long v59 = v18;
  char v25 = v19;
  int v41 = v19;
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  *((void *)&v59 + 1) = v50;
  *(void *)&long long v60 = v44;
  *((void *)&v60 + 1) = v46;
  *(void *)&long long v61 = v45;
  uint64_t v28 = v52;
  uint64_t v29 = v53;
  *((void *)&v61 + 1) = v53;
  *(void *)&v62[0] = v52;
  BYTE8(v62[0]) = v49;
  BYTE9(v62[0]) = v48;
  BYTE10(v62[0]) = v43;
  BYTE11(v62[0]) = v25;
  *(void *)&v62[1] = v42;
  BYTE8(v62[1]) = v40;
  sub_20B8E7960(&v56);
  swift_bridgeObjectRelease();
  uint64_t v30 = v24;
  uint64_t v31 = v28;
  sub_20B8E7820(v30, v26, v23, v27, v29);
  uint64_t v32 = v51;
  swift_bridgeObjectRelease();
  long long v33 = v61;
  uint64_t v35 = v54;
  uint64_t v34 = (uint64_t)v55;
  v54[4] = v60;
  v35[5] = v33;
  v35[6] = v62[0];
  *(_OWORD *)((char *)v35 + 105) = *(_OWORD *)((char *)v62 + 9);
  long long v36 = v57;
  _OWORD *v35 = v56;
  v35[1] = v36;
  long long v37 = v59;
  v35[2] = v58;
  v35[3] = v37;
  __swift_destroy_boxed_opaque_existential_1(v34);
  uint64_t v63 = v47;
  uint64_t v64 = v32;
  LOBYTE(v65) = v82;
  uint64_t v66 = v15;
  uint64_t v67 = v16;
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  uint64_t v70 = v50;
  uint64_t v71 = v26;
  uint64_t v72 = v23;
  uint64_t v73 = v27;
  uint64_t v74 = v29;
  uint64_t v75 = v31;
  char v76 = v49;
  char v77 = v48;
  char v78 = v43;
  char v79 = v41;
  uint64_t v80 = v42;
  char v81 = v40;
  return sub_20B8E79D8(&v63);
}

void *sub_20B8E44B4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return EmojiPosterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_20B8E44CC(void *a1)
{
  return EmojiPosterConfiguration.encode(to:)(a1);
}

void EmojiPosterBackgroundConfiguration.backgroundStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

__n128 EmojiPosterBackgroundConfiguration.backgroundColor.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t EmojiPosterBackgroundConfiguration.gradientProperties.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_20B8E7644(v2, v3, v4, v5, v6);
}

uint64_t EmojiPosterBackgroundConfiguration.isSuggestedColor.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_20B8E4528()
{
  int v1 = *(unsigned __int8 *)v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34B8);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8D538];
  *(_OWORD *)(v5 + 16) = xmmword_20B9294E0;
  uint64_t v7 = MEMORY[0x263F8D5B8];
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = v2;
  uint64_t v8 = sub_20B926958();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20B9294E0;
  *(void *)(v11 + 56) = v6;
  *(void *)(v11 + 64) = v7;
  *(void *)(v11 + 32) = v3;
  uint64_t v12 = sub_20B926958();
  uint64_t v14 = v13;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20B9294E0;
  *(void *)(v15 + 56) = v6;
  *(void *)(v15 + 64) = v7;
  *(void *)(v15 + 32) = v4;
  uint64_t v16 = sub_20B926958();
  uint64_t v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F98);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (void *)v19;
  *(_OWORD *)(v19 + 16) = xmmword_20B929500;
  uint64_t v21 = 0x7261656E696CLL;
  if (v1) {
    uint64_t v21 = 0x6C6169646172;
  }
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = 0xE600000000000000;
  *(void *)(v19 + 48) = v8;
  *(void *)(v19 + 56) = v10;
  *(void *)(v19 + 64) = v12;
  *(void *)(v19 + 72) = v14;
  *(void *)(v19 + 80) = v16;
  *(void *)(v19 + 88) = v18;
  *(void *)(v19 + 96) = sub_20B8E59E0();
  v20[13] = v22;
  v20[14] = sub_20B8E5C8C();
  v20[15] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
  uint64_t v24 = sub_20B9268D8();
  swift_bridgeObjectRelease();
  return v24;
}

unint64_t sub_20B8E4764(char a1)
{
  unint64_t result = 0x756F72676B636162;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20B8E4828()
{
  return sub_20B8E4764(*v0);
}

uint64_t sub_20B8E4830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8EAA88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20B8E4858(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7A50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E4894(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7A50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmojiPosterBackgroundConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3468) - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v30 = *((void *)v1 + 6);
  uint64_t v31 = v12;
  uint64_t v13 = *((void *)v1 + 7);
  uint64_t v28 = *((void *)v1 + 8);
  uint64_t v29 = v13;
  uint64_t v14 = *((void *)v1 + 9);
  uint64_t v26 = *((void *)v1 + 10);
  uint64_t v27 = v14;
  int v38 = v1[88];
  int v15 = v1[89];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1;
  uint64_t v19 = v18;
  __swift_project_boxed_opaque_existential_1(v17, v16);
  sub_20B8E7A50();
  sub_20B926FC8();
  LOBYTE(v32) = v7;
  char v39 = 0;
  sub_20B8E7AA4();
  sub_20B926EB8();
  if (!v2)
  {
    uint64_t v21 = v29;
    uint64_t v20 = v30;
    uint64_t v22 = v31;
    int v25 = v15;
    uint64_t v32 = v8;
    uint64_t v33 = v9;
    uint64_t v34 = v10;
    uint64_t v35 = v11;
    char v39 = 1;
    sub_20B8E7AF8();
    sub_20B926EB8();
    uint64_t v32 = v22;
    uint64_t v33 = v20;
    uint64_t v34 = v21;
    uint64_t v35 = v28;
    uint64_t v36 = v27;
    uint64_t v37 = v26;
    char v39 = 2;
    sub_20B8E7B4C();
    sub_20B926E78();
    LOBYTE(v32) = v38;
    char v39 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2BE8);
    sub_20B8E7F48(&qword_2676A5858, &qword_26ACA2BE8);
    sub_20B926EB8();
    LOBYTE(v32) = v25;
    char v39 = 4;
    sub_20B926EB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
}

uint64_t EmojiPosterBackgroundConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2F78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E7A50();
  sub_20B926FA8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unsigned __int8 v41 = 0;
  sub_20B8E7BA0();
  sub_20B926E38();
  int v9 = v34;
  unsigned __int8 v41 = 1;
  sub_20B8E7BF4();
  sub_20B926E38();
  uint64_t v10 = v34;
  uint64_t v11 = v35;
  uint64_t v12 = v36;
  uint64_t v13 = v37;
  unsigned __int8 v41 = 2;
  sub_20B8E7C48();
  sub_20B926DF8();
  int v40 = v9;
  uint64_t v32 = v35;
  uint64_t v33 = v34;
  uint64_t v14 = v37;
  uint64_t v31 = v36;
  uint64_t v15 = v39;
  uint64_t v28 = v38;
  LOBYTE(v34) = 3;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2BE8);
  uint64_t v29 = v15;
  uint64_t v30 = v14;
  uint64_t v17 = v14;
  uint64_t v18 = v28;
  sub_20B8E7644(v33, v32, v31, v17, v28);
  sub_20B8E7C9C(&qword_26ACA2BE0, &qword_26ACA2BE8);
  uint64_t v27 = v16;
  sub_20B926DF8();
  HIDWORD(v26) = v41;
  LOBYTE(v34) = 4;
  sub_20B926DF8();
  int v20 = BYTE4(v26) & 1;
  HIDWORD(v26) = v41 & 1;
  LODWORD(v27) = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(unsigned char *)a2 = v40;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v13;
  uint64_t v22 = v32;
  uint64_t v21 = v33;
  *(void *)(a2 + 40) = v33;
  *(void *)(a2 + 48) = v22;
  uint64_t v24 = v30;
  uint64_t v23 = v31;
  *(void *)(a2 + 56) = v31;
  *(void *)(a2 + 64) = v24;
  uint64_t v25 = v29;
  *(void *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v25;
  *(unsigned char *)(a2 + 88) = v27;
  *(unsigned char *)(a2 + 89) = BYTE4(v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20B8E7820(v21, v22, v23, v24, v18);
}

uint64_t sub_20B8E4FB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EmojiPosterBackgroundConfiguration.init(from:)(a1, a2);
}

uint64_t sub_20B8E4FD0(void *a1)
{
  return EmojiPosterBackgroundConfiguration.encode(to:)(a1);
}

BOOL static GradientType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GradientType.hash(into:)()
{
  return sub_20B926F68();
}

BOOL sub_20B8E5030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20B8E5048()
{
  if (*v0) {
    return 0x6C6169646172;
  }
  else {
    return 0x7261656E696CLL;
  }
}

uint64_t sub_20B8E5074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8EACC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_20B8E509C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_20B8E50A8(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7CE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E50E4(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7CE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E5120(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7D88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E515C(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7D88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B8E5198(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7D34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E51D4(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7D34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GradientType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3480);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388]();
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3478);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3470);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E7CE0();
  sub_20B926FC8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_20B8E7D34();
    uint64_t v14 = v18;
    sub_20B926E58();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_20B8E7D88();
    sub_20B926E58();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t GradientType.hashValue.getter()
{
  return sub_20B926F88();
}

uint64_t GradientType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5868);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5870);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5878);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E7CE0();
  uint64_t v11 = v32;
  sub_20B926FA8();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_20B926E48();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_20B926CA8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5838);
    void *v22 = &type metadata for GradientType;
    sub_20B926DD8();
    sub_20B926C98();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_20B8E7D34();
    uint64_t v18 = v14;
    sub_20B926DC8();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_20B8E7D88();
    sub_20B926DC8();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_20B8E5954()
{
  return sub_20B926F88();
}

uint64_t sub_20B8E5998@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GradientType.init(from:)(a1, a2);
}

uint64_t sub_20B8E59B0(void *a1)
{
  return GradientType.encode(to:)(a1);
}

void __swiftcall GradientProperties.init(type:angle:leftColorValue:rightColorValue:colors:locations:)(EmojiPoster::GradientProperties *__return_ptr retstr, EmojiPoster::GradientType type, Swift::Double angle, Swift::Double leftColorValue, Swift::Double rightColorValue, Swift::OpaquePointer colors, Swift::OpaquePointer locations)
{
  retstr->type = *(unsigned char *)type;
  retstr->angle = angle;
  retstr->leftColorValue = leftColorValue;
  retstr->rightColorValue = rightColorValue;
  retstr->colors = colors;
  retstr->locations = locations;
}

uint64_t sub_20B8E59E0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 16);
  if (v1)
  {
    unint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v4 = *(v2 - 2);
      uint64_t v5 = *(v2 - 1);
      uint64_t v6 = *v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34B8);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_20B9294E0;
      uint64_t v8 = MEMORY[0x263F8D538];
      *(void *)(v7 + 56) = MEMORY[0x263F8D538];
      uint64_t v9 = MEMORY[0x263F8D5B8];
      *(void *)(v7 + 64) = MEMORY[0x263F8D5B8];
      *(void *)(v7 + 32) = v4;
      uint64_t v10 = sub_20B926958();
      uint64_t v12 = v11;
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_20B9294E0;
      *(void *)(v13 + 56) = v8;
      *(void *)(v13 + 64) = v9;
      *(void *)(v13 + 32) = v5;
      sub_20B926958();
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_20B9294E0;
      *(void *)(v14 + 56) = v8;
      *(void *)(v14 + 64) = v9;
      *(void *)(v14 + 32) = v6;
      sub_20B926958();
      sub_20B926A08();
      sub_20B926A08();
      swift_bridgeObjectRelease();
      sub_20B926A08();
      sub_20B926A08();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_20B908918(0, v3[2] + 1, 1, v3);
      }
      unint64_t v16 = v3[2];
      unint64_t v15 = v3[3];
      if (v16 >= v15 >> 1) {
        uint64_t v3 = sub_20B908918((void *)(v15 > 1), v16 + 1, 1, v3);
      }
      CGColorRef v3[2] = v16 + 1;
      char v17 = &v3[2 * v16];
      v17[4] = v10;
      v17[5] = v12;
      v2 += 4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
  uint64_t v18 = sub_20B9268D8();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_20B8E5C8C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_20B926AE8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_20B908918(0, v3[2] + 1, 1, v3);
      }
      unint64_t v5 = v3[2];
      unint64_t v4 = v3[3];
      if (v5 >= v4 >> 1) {
        uint64_t v3 = sub_20B908918((void *)(v4 > 1), v5 + 1, 1, v3);
      }
      ++v2;
      CGColorRef v3[2] = v5 + 1;
      uint64_t v6 = &v3[2 * v5];
      v6[4] = 0;
      v6[5] = 0xE000000000000000;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
  uint64_t v7 = sub_20B9268D8();
  swift_bridgeObjectRelease();
  return v7;
}

void static GradientProperties.bloomProperties()(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0x3FF0000000000000;
  *(void *)(a1 + 32) = &unk_26C0662E8;
  *(void *)(a1 + 40) = &unk_26C066348;
}

void static GradientProperties.vignetteProperties()(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0x3FF0000000000000;
  *(void *)(a1 + 32) = &unk_26C066378;
  *(void *)(a1 + 40) = &unk_26C0663F8;
}

uint64_t sub_20B8E5E78()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C676E61;
      break;
    case 2:
      uint64_t result = 0x6F6C6F437466656CLL;
      break;
    case 3:
      uint64_t result = 0x6C6F437468676972;
      break;
    case 4:
      uint64_t result = 0x73726F6C6F63;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B8E5F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B8EADAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20B8E5F74(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7DDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B8E5FB0(uint64_t a1)
{
  unint64_t v2 = sub_20B8E7DDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GradientProperties.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA3488);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 4);
  uint64_t v14 = *((void *)v1 + 5);
  uint64_t v15 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E7DDC();
  uint64_t v10 = v4;
  sub_20B926FC8();
  LOBYTE(v16) = v8;
  char v17 = 0;
  sub_20B8E7E30();
  sub_20B926EB8();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v12 = v15;
    LOBYTE(v16) = 1;
    sub_20B926E98();
    LOBYTE(v16) = 2;
    sub_20B926E98();
    LOBYTE(v16) = 3;
    sub_20B926E98();
    uint64_t v16 = v12;
    char v17 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33B8);
    sub_20B8E7ED8(&qword_26ACA33C0, (void (*)(void))sub_20B8E7AF8);
    sub_20B926EB8();
    uint64_t v16 = v11;
    char v17 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33D0);
    sub_20B8E7F48(&qword_26ACA33D8, &qword_26ACA33D0);
    sub_20B926EB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v10);
}

uint64_t GradientProperties.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5880);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B8E7DDC();
  sub_20B926FA8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v23 = 0;
  sub_20B8E7E84();
  sub_20B926E38();
  char v9 = v22;
  LOBYTE(v22) = 1;
  sub_20B926E18();
  uint64_t v11 = v10;
  LOBYTE(v22) = 2;
  sub_20B926E18();
  uint64_t v13 = v12;
  LOBYTE(v22) = 3;
  sub_20B926E18();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33B8);
  char v23 = 4;
  sub_20B8E7ED8(&qword_2676A5890, (void (*)(void))sub_20B8E7BF4);
  sub_20B926E38();
  uint64_t v16 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA33D0);
  char v23 = 5;
  sub_20B8E7F48(&qword_26ACA38A8, &qword_26ACA33D0);
  uint64_t v21 = v16;
  swift_bridgeObjectRetain();
  sub_20B926E38();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v21;
  uint64_t v17 = v22;
  *(unsigned char *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v17;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20B8E6634@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GradientProperties.init(from:)(a1, a2);
}

uint64_t sub_20B8E664C(void *a1)
{
  return GradientProperties.encode(to:)(a1);
}

uint64_t sub_20B8E6668(uint64_t a1, uint64_t a2)
{
  return sub_20B8E67D4(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_20B8E6680(uint64_t a1, id *a2)
{
  uint64_t result = sub_20B926928();
  *a2 = 0;
  return result;
}

uint64_t sub_20B8E66F8(uint64_t a1, id *a2)
{
  char v3 = sub_20B926938();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_20B8E6778@<X0>(uint64_t *a1@<X8>)
{
  sub_20B926948();
  uint64_t v2 = sub_20B926908();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_20B8E67BC(uint64_t a1, uint64_t a2)
{
  return sub_20B8E67D4(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_20B8E67D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_20B926948();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20B8E6818()
{
  sub_20B926948();
  sub_20B9269C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20B8E686C()
{
  sub_20B926948();
  sub_20B926F58();
  sub_20B9269C8();
  uint64_t v0 = sub_20B926F88();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_20B8E68E0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_20B8E68EC(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_20B8E68F4()
{
  uint64_t v0 = sub_20B926948();
  uint64_t v2 = v1;
  if (v0 == sub_20B926948() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_20B926ED8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_20B8E6980@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_20B8E698C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20B926908();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_20B8E69D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20B926948();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20B8E6A00(uint64_t a1)
{
  uint64_t v2 = sub_20B8EB164((unint64_t *)&qword_26ACA2EC8);
  uint64_t v3 = sub_20B8EB164(&qword_2676A5998);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_20B8E6A98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x724774657366666FLL && a2 == 0xEA00000000006469;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C7563726963 && a2 == 0xE800000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6172697073 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BOOL _s11EmojiPoster18GradientPropertiesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    return 0;
  }
  BOOL v2 = *((double *)a1 + 1) == *((double *)a2 + 1) && *((double *)a1 + 2) == *((double *)a2 + 2);
  if (!v2 || *((double *)a1 + 3) != *((double *)a2 + 3)) {
    return 0;
  }
  uint64_t v4 = *((void *)a2 + 5);
  uint64_t v5 = *((void *)a1 + 5);
  if ((sub_20B8EF040(*((void *)a1 + 4), *((void *)a2 + 4)) & 1) == 0) {
    return 0;
  }
  return sub_20B8EF0C4(v5, v4);
}

uint64_t _s11EmojiPoster0aB23BackgroundConfigurationV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *a1 == *a2)
  {
    uint64_t v4 = *((void *)a1 + 5);
    uint64_t v5 = *((void *)a1 + 6);
    uint64_t v7 = *((void *)a1 + 7);
    uint64_t v6 = *((void *)a1 + 8);
    uint64_t v9 = *((void *)a1 + 9);
    uint64_t v8 = *((void *)a1 + 10);
    int v10 = a1[88];
    int v11 = a1[89];
    uint64_t v13 = *((void *)a2 + 5);
    uint64_t v12 = *((void *)a2 + 6);
    uint64_t v15 = *((void *)a2 + 7);
    uint64_t v14 = *((void *)a2 + 8);
    uint64_t v17 = *((void *)a2 + 9);
    uint64_t v16 = *((void *)a2 + 10);
    int v18 = a2[88];
    int v19 = a2[89];
    if (v9)
    {
      v32[0] = v4;
      v32[1] = v5;
      CGColorRef v32[2] = v7;
      v32[3] = v6;
      v32[4] = v9;
      v32[5] = v8;
      if (v17)
      {
        int v20 = v18;
        int v25 = v19;
        int v21 = v10;
        int v23 = v11;
        v26[0] = v13 & 1;
        uint64_t v27 = v12;
        uint64_t v28 = v15;
        uint64_t v29 = v14;
        uint64_t v30 = v17;
        uint64_t v31 = v16;
        BOOL v22 = _s11EmojiPoster18GradientPropertiesV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)v32, v26);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if (!v22) {
          return result;
        }
        int v11 = v23;
        int v19 = v25;
        if ((v21 ^ v20)) {
          return result;
        }
        return v11 ^ v19 ^ 1u;
      }
      uint64_t v24 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = v6;
      if (!v17)
      {
        if (v10 == v18) {
          return v11 ^ v19 ^ 1u;
        }
        return 0;
      }
    }
    sub_20B8E7644(v13, v12, v15, v14, v17);
    sub_20B8E7820(v4, v5, v7, v24, v9);
    sub_20B8E7820(v13, v12, v15, v14, v17);
    return 0;
  }
  return result;
}

uint64_t _s11EmojiPoster0aB13ConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = 0;
  if (*(unsigned __int8 *)(a1 + 106) == *(unsigned __int8 *)(a2 + 106)
    && *(unsigned __int8 *)(a1 + 107) == *(unsigned __int8 *)(a2 + 107))
  {
    unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
    long long v21 = *(_OWORD *)(a1 + 40);
    long long v22 = *(_OWORD *)(a1 + 24);
    long long v19 = *(_OWORD *)(a1 + 72);
    long long v20 = *(_OWORD *)(a1 + 56);
    char v4 = *(unsigned char *)(a1 + 104);
    char v5 = *(unsigned char *)(a1 + 105);
    unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
    long long v17 = *(_OWORD *)(a2 + 24);
    long long v18 = *(_OWORD *)(a1 + 88);
    long long v15 = *(_OWORD *)(a2 + 56);
    long long v16 = *(_OWORD *)(a2 + 40);
    long long v13 = *(_OWORD *)(a2 + 88);
    long long v14 = *(_OWORD *)(a2 + 72);
    char v7 = *(unsigned char *)(a2 + 104);
    char v8 = *(unsigned char *)(a2 + 105);
    int v9 = *(unsigned __int8 *)(a2 + 120);
    int v10 = *(unsigned __int8 *)(a1 + 120);
    char v11 = sub_20B8EF130(*(void **)(a1 + 112), *(void **)(a2 + 112));
    char v2 = 0;
    if ((v11 & 1) != 0 && ((v9 ^ v10) & 1) == 0)
    {
      v31[0] = v3;
      long long v32 = v22;
      long long v33 = v21;
      long long v34 = v20;
      long long v35 = v19;
      long long v36 = v18;
      char v37 = v4;
      char v38 = v5;
      v23[0] = v6;
      long long v24 = v17;
      long long v25 = v16;
      long long v26 = v15;
      long long v27 = v14;
      long long v28 = v13;
      char v29 = v7;
      char v30 = v8;
      char v2 = _s11EmojiPoster0aB23BackgroundConfigurationV2eeoiySbAC_ACtFZ_0(v31, v23);
    }
  }
  return v2 & 1;
}

uint64_t sub_20B8E6FA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6C616D73 && a2 == 0xE500000000000000;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20B8E70E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64696C6F73 && a2 == 0xE500000000000000;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72477261656E696CLL && a2 == 0xEE00746E65696461 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72476C6169646172 && a2 == 0xEE00746E65696461 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172476D6F6F6C62 && a2 == 0xED0000746E656964 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657474656E676976 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20B8E7368(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s11EmojiPoster0aB13ConfigurationV21layoutLocalizationKey8forStyle11sizeVariantSSAA0ab6LayoutH0O_AA0ab4SizeJ0OtFZ_0()
{
  sub_20B926C48();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "LAYOUT_STYLE_");
  sub_20B926A08();
  swift_bridgeObjectRelease();
  sub_20B926A08();
  sub_20B926A08();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_20B8E7644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_20B8E76D0()
{
  unint64_t result = qword_26ACA2A60;
  if (!qword_26ACA2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A60);
  }
  return result;
}

unint64_t sub_20B8E7724()
{
  unint64_t result = qword_26ACA30F0;
  if (!qword_26ACA30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30F0);
  }
  return result;
}

unint64_t sub_20B8E7778()
{
  unint64_t result = qword_26ACA30C0;
  if (!qword_26ACA30C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30C0);
  }
  return result;
}

unint64_t sub_20B8E77CC()
{
  unint64_t result = qword_26ACA30D0;
  if (!qword_26ACA30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30D0);
  }
  return result;
}

uint64_t sub_20B8E7820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_20B8E7864()
{
  unint64_t result = qword_26ACA2B28;
  if (!qword_26ACA2B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2B28);
  }
  return result;
}

unint64_t sub_20B8E78B8()
{
  unint64_t result = qword_26ACA2A00;
  if (!qword_26ACA2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A00);
  }
  return result;
}

unint64_t sub_20B8E790C()
{
  unint64_t result = qword_26ACA2A58;
  if (!qword_26ACA2A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A58);
  }
  return result;
}

void *sub_20B8E7960(void *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[9];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  swift_bridgeObjectRetain();
  sub_20B8E7644(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_20B8E79D8(void *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[9];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  swift_bridgeObjectRelease();
  sub_20B8E7820(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_20B8E7A50()
{
  unint64_t result = qword_26ACA2B10;
  if (!qword_26ACA2B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2B10);
  }
  return result;
}

unint64_t sub_20B8E7AA4()
{
  unint64_t result = qword_26ACA30E8;
  if (!qword_26ACA30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30E8);
  }
  return result;
}

unint64_t sub_20B8E7AF8()
{
  unint64_t result = qword_26ACA30D8;
  if (!qword_26ACA30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30D8);
  }
  return result;
}

unint64_t sub_20B8E7B4C()
{
  unint64_t result = qword_26ACA3158;
  if (!qword_26ACA3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3158);
  }
  return result;
}

unint64_t sub_20B8E7BA0()
{
  unint64_t result = qword_26ACA2B08;
  if (!qword_26ACA2B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2B08);
  }
  return result;
}

unint64_t sub_20B8E7BF4()
{
  unint64_t result = qword_26ACA2A90;
  if (!qword_26ACA2A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A90);
  }
  return result;
}

unint64_t sub_20B8E7C48()
{
  unint64_t result = qword_26ACA2BF0;
  if (!qword_26ACA2BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2BF0);
  }
  return result;
}

uint64_t sub_20B8E7C9C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20B8E7CE0()
{
  unint64_t result = qword_26ACA30F8;
  if (!qword_26ACA30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA30F8);
  }
  return result;
}

unint64_t sub_20B8E7D34()
{
  unint64_t result = qword_26ACA3120;
  if (!qword_26ACA3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3120);
  }
  return result;
}

unint64_t sub_20B8E7D88()
{
  unint64_t result = qword_2676A5860;
  if (!qword_2676A5860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5860);
  }
  return result;
}

unint64_t sub_20B8E7DDC()
{
  unint64_t result = qword_26ACA3140;
  if (!qword_26ACA3140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3140);
  }
  return result;
}

unint64_t sub_20B8E7E30()
{
  unint64_t result = qword_26ACA3138;
  if (!qword_26ACA3138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3138);
  }
  return result;
}

unint64_t sub_20B8E7E84()
{
  unint64_t result = qword_2676A5888;
  if (!qword_2676A5888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5888);
  }
  return result;
}

uint64_t sub_20B8E7ED8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA33B8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B8E7F48(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20B8E7FAC()
{
  unint64_t result = qword_2676A5898;
  if (!qword_2676A5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5898);
  }
  return result;
}

unint64_t sub_20B8E8004()
{
  unint64_t result = qword_2676A58A0;
  if (!qword_2676A58A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A58A0);
  }
  return result;
}

unint64_t sub_20B8E805C()
{
  unint64_t result = qword_2676A58A8;
  if (!qword_2676A58A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A58A8);
  }
  return result;
}

unint64_t sub_20B8E80B4()
{
  unint64_t result = qword_2676A58B0;
  if (!qword_2676A58B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A58B0);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle()
{
  return &type metadata for EmojiPosterLayoutStyle;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant()
{
  return &type metadata for EmojiPosterSizeVariant;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle()
{
  return &type metadata for EmojiPosterBackgroundStyle;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for EmojiPosterBackgroundColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EmojiPosterBackgroundColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundColor()
{
  return &type metadata for EmojiPosterBackgroundColor;
}

uint64_t initializeBufferWithCopyOfBuffer for EmojiPosterConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EmojiPosterConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmojiPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v5;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmojiPosterConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v6)
    {
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20B8E84A4(a1 + 56);
      long long v8 = *(_OWORD *)(a2 + 72);
      long long v7 = *(_OWORD *)(a2 + 88);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v8;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    _OWORD *v4 = v9;
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t sub_20B8E84A4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for EmojiPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  if (!*(void *)(a1 + 88)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 88);
  if (!v5)
  {
    sub_20B8E84A4(a1 + 56);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(_WORD *)(a1 + 106) = *(_WORD *)(a2 + 106);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiPosterConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 121)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiPosterConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterConfiguration()
{
  return &type metadata for EmojiPosterConfiguration;
}

uint64_t destroy for EmojiPosterBackgroundConfiguration(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 72);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for EmojiPosterBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 72);
  if (v4)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v4;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v5;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for EmojiPosterBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = (_OWORD *)(a1 + 40);
  long long v5 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v6)
    {
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20B8E84A4(a1 + 40);
      long long v8 = v5[1];
      long long v7 = v5[2];
      _OWORD *v4 = *v5;
      v4[1] = v8;
      v4[2] = v7;
    }
  }
  else if (v6)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
    _OWORD *v4 = v9;
  }
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  return a1;
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EmojiPosterBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v4 = (_OWORD *)(a1 + 40);
  long long v5 = (_OWORD *)(a2 + 40);
  if (!*(void *)(a1 + 72)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 72);
  if (!v6)
  {
    sub_20B8E84A4((uint64_t)v4);
LABEL_5:
    long long v7 = v5[1];
    _OWORD *v4 = *v5;
    v4[1] = v7;
    v4[2] = v5[2];
    goto LABEL_6;
  }
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiPosterBackgroundConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 90)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiPosterBackgroundConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 90) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 90) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundConfiguration()
{
  return &type metadata for EmojiPosterBackgroundConfiguration;
}

ValueMetadata *type metadata accessor for GradientType()
{
  return &type metadata for GradientType;
}

uint64_t destroy for GradientProperties()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GradientProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GradientProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GradientProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientProperties()
{
  return &type metadata for GradientProperties;
}

void type metadata accessor for CGFont(uint64_t a1)
{
}

void type metadata accessor for CTFont(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void type metadata accessor for ATXPosterDescriptorFocus(uint64_t a1)
{
}

uint64_t sub_20B8E8D38(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_20B8E8D58(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for GradientProperties.CodingKeys()
{
  return &type metadata for GradientProperties.CodingKeys;
}

uint64_t getEnumTagSinglePayload for GridLayoutEmojiSize(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11EmojiPoster12GradientTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B8E8F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_20B8E8F30(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_20B8E8F38(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GradientType.CodingKeys()
{
  return &type metadata for GradientType.CodingKeys;
}

ValueMetadata *type metadata accessor for GradientType.LinearCodingKeys()
{
  return &type metadata for GradientType.LinearCodingKeys;
}

ValueMetadata *type metadata accessor for GradientType.RadialCodingKeys()
{
  return &type metadata for GradientType.RadialCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundConfiguration.CodingKeys()
{
  return &type metadata for EmojiPosterBackgroundConfiguration.CodingKeys;
}

uint64_t _s11EmojiPoster18GradientPropertiesV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11EmojiPoster18GradientPropertiesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B8E90E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterConfiguration.CodingKeys()
{
  return &type metadata for EmojiPosterConfiguration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for EmojiPosterBackgroundColor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EmojiPosterBackgroundColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B8E9274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundColor.CodingKeys()
{
  return &type metadata for EmojiPosterBackgroundColor.CodingKeys;
}

uint64_t _s11EmojiPoster26EmojiPosterBackgroundStyleOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11EmojiPoster26EmojiPosterBackgroundStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B8E9408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.CodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.SolidCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.SolidCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.LinearGradientCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.LinearGradientCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.RadialGradientCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.RadialGradientCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.BloomGradientCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.BloomGradientCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.VignettedCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.VignettedCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.CodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.CodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.SmallCodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.SmallCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.MediumCodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.LargeCodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.LargeCodingKeys;
}

uint64_t _s11EmojiPoster22EmojiPosterLayoutStyleOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11EmojiPoster22EmojiPosterLayoutStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B8E962CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_20B8E9654(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.CodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.OffsetGridCodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.OffsetGridCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.CircularCodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.CircularCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.SpiralCodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.SpiralCodingKeys;
}

unint64_t sub_20B8E96A0()
{
  unint64_t result = qword_2676A5938;
  if (!qword_2676A5938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5938);
  }
  return result;
}

unint64_t sub_20B8E96F8()
{
  unint64_t result = qword_2676A5940;
  if (!qword_2676A5940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5940);
  }
  return result;
}

unint64_t sub_20B8E9750()
{
  unint64_t result = qword_2676A5948;
  if (!qword_2676A5948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5948);
  }
  return result;
}

unint64_t sub_20B8E97A8()
{
  unint64_t result = qword_2676A5950;
  if (!qword_2676A5950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5950);
  }
  return result;
}

unint64_t sub_20B8E9800()
{
  unint64_t result = qword_2676A5958;
  if (!qword_2676A5958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5958);
  }
  return result;
}

unint64_t sub_20B8E9858()
{
  unint64_t result = qword_2676A5960;
  if (!qword_2676A5960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5960);
  }
  return result;
}

unint64_t sub_20B8E98B0()
{
  unint64_t result = qword_2676A5968;
  if (!qword_2676A5968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5968);
  }
  return result;
}

unint64_t sub_20B8E9908()
{
  unint64_t result = qword_2676A5970;
  if (!qword_2676A5970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5970);
  }
  return result;
}

unint64_t sub_20B8E9960()
{
  unint64_t result = qword_26ACA3150;
  if (!qword_26ACA3150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3150);
  }
  return result;
}

unint64_t sub_20B8E99B8()
{
  unint64_t result = qword_26ACA3148;
  if (!qword_26ACA3148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3148);
  }
  return result;
}

unint64_t sub_20B8E9A10()
{
  unint64_t result = qword_26ACA3118;
  if (!qword_26ACA3118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3118);
  }
  return result;
}

unint64_t sub_20B8E9A68()
{
  unint64_t result = qword_26ACA3110;
  if (!qword_26ACA3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3110);
  }
  return result;
}

unint64_t sub_20B8E9AC0()
{
  unint64_t result = qword_26ACA3130;
  if (!qword_26ACA3130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3130);
  }
  return result;
}

unint64_t sub_20B8E9B18()
{
  unint64_t result = qword_26ACA3128;
  if (!qword_26ACA3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3128);
  }
  return result;
}

unint64_t sub_20B8E9B70()
{
  unint64_t result = qword_26ACA3108;
  if (!qword_26ACA3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3108);
  }
  return result;
}

unint64_t sub_20B8E9BC8()
{
  unint64_t result = qword_26ACA3100;
  if (!qword_26ACA3100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3100);
  }
  return result;
}

unint64_t sub_20B8E9C20()
{
  unint64_t result = qword_26ACA2B20;
  if (!qword_26ACA2B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2B20);
  }
  return result;
}

unint64_t sub_20B8E9C78()
{
  unint64_t result = qword_26ACA2B18;
  if (!qword_26ACA2B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2B18);
  }
  return result;
}

unint64_t sub_20B8E9CD0()
{
  unint64_t result = qword_26ACA2A70;
  if (!qword_26ACA2A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A70);
  }
  return result;
}

unint64_t sub_20B8E9D28()
{
  unint64_t result = qword_26ACA2A68;
  if (!qword_26ACA2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A68);
  }
  return result;
}

unint64_t sub_20B8E9D80()
{
  unint64_t result = qword_26ACA2A88;
  if (!qword_26ACA2A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A88);
  }
  return result;
}

unint64_t sub_20B8E9DD8()
{
  unint64_t result = qword_26ACA2A80;
  if (!qword_26ACA2A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A80);
  }
  return result;
}

unint64_t sub_20B8E9E30()
{
  unint64_t result = qword_26ACA2AC0;
  if (!qword_26ACA2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AC0);
  }
  return result;
}

unint64_t sub_20B8E9E88()
{
  unint64_t result = qword_26ACA2AB8;
  if (!qword_26ACA2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AB8);
  }
  return result;
}

unint64_t sub_20B8E9EE0()
{
  unint64_t result = qword_26ACA2AF0;
  if (!qword_26ACA2AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AF0);
  }
  return result;
}

unint64_t sub_20B8E9F38()
{
  unint64_t result = qword_26ACA2AE8;
  if (!qword_26ACA2AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AE8);
  }
  return result;
}

unint64_t sub_20B8E9F90()
{
  unint64_t result = qword_26ACA2B00;
  if (!qword_26ACA2B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2B00);
  }
  return result;
}

unint64_t sub_20B8E9FE8()
{
  unint64_t result = qword_26ACA2AF8;
  if (!qword_26ACA2AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AF8);
  }
  return result;
}

unint64_t sub_20B8EA040()
{
  unint64_t result = qword_26ACA2AE0;
  if (!qword_26ACA2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AE0);
  }
  return result;
}

unint64_t sub_20B8EA098()
{
  unint64_t result = qword_26ACA2AD8;
  if (!qword_26ACA2AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AD8);
  }
  return result;
}

unint64_t sub_20B8EA0F0()
{
  unint64_t result = qword_26ACA2AD0;
  if (!qword_26ACA2AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AD0);
  }
  return result;
}

unint64_t sub_20B8EA148()
{
  unint64_t result = qword_26ACA2AC8;
  if (!qword_26ACA2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AC8);
  }
  return result;
}

unint64_t sub_20B8EA1A0()
{
  unint64_t result = qword_26ACA2AA8;
  if (!qword_26ACA2AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AA8);
  }
  return result;
}

unint64_t sub_20B8EA1F8()
{
  unint64_t result = qword_26ACA2AA0;
  if (!qword_26ACA2AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2AA0);
  }
  return result;
}

unint64_t sub_20B8EA250()
{
  unint64_t result = qword_26ACA2A40;
  if (!qword_26ACA2A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A40);
  }
  return result;
}

unint64_t sub_20B8EA2A8()
{
  unint64_t result = qword_26ACA2A38;
  if (!qword_26ACA2A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A38);
  }
  return result;
}

unint64_t sub_20B8EA300()
{
  unint64_t result = qword_26ACA2A50;
  if (!qword_26ACA2A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A50);
  }
  return result;
}

unint64_t sub_20B8EA358()
{
  unint64_t result = qword_26ACA2A48;
  if (!qword_26ACA2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A48);
  }
  return result;
}

unint64_t sub_20B8EA3B0()
{
  unint64_t result = qword_26ACA2A28;
  if (!qword_26ACA2A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A28);
  }
  return result;
}

unint64_t sub_20B8EA408()
{
  unint64_t result = qword_26ACA2A20;
  if (!qword_26ACA2A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A20);
  }
  return result;
}

unint64_t sub_20B8EA460()
{
  unint64_t result = qword_26ACA2A18;
  if (!qword_26ACA2A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A18);
  }
  return result;
}

unint64_t sub_20B8EA4B8()
{
  unint64_t result = qword_26ACA2A10;
  if (!qword_26ACA2A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2A10);
  }
  return result;
}

unint64_t sub_20B8EA510()
{
  unint64_t result = qword_26ACA29F8;
  if (!qword_26ACA29F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29F8);
  }
  return result;
}

unint64_t sub_20B8EA568()
{
  unint64_t result = qword_26ACA29F0;
  if (!qword_26ACA29F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29F0);
  }
  return result;
}

unint64_t sub_20B8EA5C0()
{
  unint64_t result = qword_26ACA29E0;
  if (!qword_26ACA29E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29E0);
  }
  return result;
}

unint64_t sub_20B8EA618()
{
  unint64_t result = qword_26ACA29D8;
  if (!qword_26ACA29D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29D8);
  }
  return result;
}

unint64_t sub_20B8EA670()
{
  unint64_t result = qword_26ACA29D0;
  if (!qword_26ACA29D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29D0);
  }
  return result;
}

unint64_t sub_20B8EA6C8()
{
  unint64_t result = qword_26ACA29C8;
  if (!qword_26ACA29C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29C8);
  }
  return result;
}

unint64_t sub_20B8EA720()
{
  unint64_t result = qword_26ACA29C0;
  if (!qword_26ACA29C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29C0);
  }
  return result;
}

unint64_t sub_20B8EA778()
{
  unint64_t result = qword_26ACA29B8;
  if (!qword_26ACA29B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA29B8);
  }
  return result;
}

uint64_t sub_20B8EA7CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000020B92D2C0 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020B92D2E0 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x745374756F79616CLL && a2 == 0xEB00000000656C79 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69726156657A6973 && a2 == 0xEB00000000746E61 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696A6F6D65 && a2 == 0xE500000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6172615073657375 && a2 == 0xEB0000000078616CLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20B8EAA88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F72676B636162 && a2 == 0xEF656C797453646ELL;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020B92D300 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020B92D320 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000020B92D340)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20B8EACC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7261656E696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6169646172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20B8EADAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F437466656CLL && a2 == 0xEE0065756C615672 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F437468676972 && a2 == 0xEF65756C6156726FLL || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for CTRun(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void sub_20B8EB0B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_20B8EB0FC()
{
  return sub_20B8EB164(&qword_2676A5988);
}

uint64_t sub_20B8EB130()
{
  return sub_20B8EB164(&qword_2676A5990);
}

uint64_t sub_20B8EB164(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Key(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B8EB1A8()
{
  return sub_20B8EB164(&qword_26ACA2ED0);
}

void sub_20B8EB218(uint64_t a1, char a2)
{
  CGFloat v3 = 0.0;
  if ((unint64_t)(a1 - 2) <= 2) {
    CGFloat v3 = dbl_20B92B070[a1 - 2];
  }
  if ((a2 & 1) == 0)
  {
    long long v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    *(CGFloat *)(v10 + 24) = v3;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_20B8EB624;
    *(void *)(v11 + 24) = v10;
    *(void *)&aBlock.tCGFloat x = sub_20B8EB668;
    *(void *)&aBlock.tCGFloat y = v11;
    *(void *)&aBlock.a = MEMORY[0x263EF8330];
    *(void *)&aBlock.b = 1107296256;
    *(void *)&aBlock.c = sub_20B8EB690;
    *(void *)&aBlock.d = &block_descriptor;
    uint64_t v12 = _Block_copy(&aBlock);
    long long v13 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_performWithoutAnimation_, v12);
    _Block_release(v12);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      goto LABEL_17;
    }
    return;
  }
  uint64_t v4 = &v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
  swift_beginAccess();
  for (uint64_t i = 0; ; ++i)
  {
    if (*(void *)v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (i >= v8) {
        return;
      }
    }
    else if (i >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    uint64_t v6 = *(void *)v4;
    if ((*(void *)v4 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v7 = (id)MEMORY[0x21053A2B0](i, v6);
    swift_bridgeObjectRelease();
LABEL_10:
    CGAffineTransformMakeRotation(&aBlock, v3);
    objc_msgSend(v7, sel_setTransform_, &aBlock);
  }
  if ((unint64_t)i < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v6 + 8 * i + 32);
    goto LABEL_10;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_20B8EB4A8(uint64_t a1, CGFloat a2)
{
  CGFloat v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews);
  swift_beginAccess();
  for (uint64_t i = 0; ; ++i)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (i >= v7) {
        return;
      }
    }
    else if (i >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    uint64_t v5 = *v3;
    if ((*v3 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v6 = (id)MEMORY[0x21053A2B0](i, v5);
    swift_bridgeObjectRelease();
LABEL_7:
    CGAffineTransformMakeRotation(&v8, a2);
    objc_msgSend(v6, sel_setTransform_, &v8);
  }
  if ((unint64_t)i < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v5 + 8 * i + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_20B8EB5EC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_20B8EB624()
{
  sub_20B8EB4A8(*(void *)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_20B8EB630(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20B8EB658()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B8EB668()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20B8EB690(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_20B8EB6D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a2);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8EB750(uint64_t a1, void *a2)
{
  sub_20B8EBE30(a1, (uint64_t)v6);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v7);
  sub_20B8EBE30(v3, (uint64_t)v8);
  sub_20B8EBE30((uint64_t)v6, v3);
  sub_20B8EC000((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30((uint64_t)v7, (uint64_t)v5);
  sub_20B8EB83C((uint64_t)v5);
  return sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

void sub_20B8EB83C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_20B8EBE30(a1, (uint64_t)v34);
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v35);
  sub_20B8EBE30((uint64_t)v35, (uint64_t)v36);
  if (sub_20B8EEAF4((uint64_t)v36) != 1)
  {
    sub_20B8EBE30((uint64_t)v34, (uint64_t)v32);
    if (sub_20B8EEAF4((uint64_t)v32) == 1)
    {
      char v4 = v37;
    }
    else
    {
      char v5 = v33;
      char v4 = v37;
      if (v33 == v37)
      {
        sub_20B8EBE30((uint64_t)v34, (uint64_t)v30);
        uint64_t v6 = v30[14];
        sub_20B8EBE30((uint64_t)v35, (uint64_t)v31);
        sub_20B8E7960(v31);
        uint64_t v7 = *(void *)(v6 + 16);
        CGAffineTransform v8 = v38;
        uint64_t v9 = v38[2];
        if (v7 == v9)
        {
          int v10 = 0;
          goto LABEL_23;
        }
        char v4 = v5;
        goto LABEL_15;
      }
    }
    sub_20B8EBE30((uint64_t)v35, (uint64_t)v30);
    sub_20B8EBE30((uint64_t)v35, (uint64_t)v31);
    sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8E7960(v31);
    sub_20B8E7960(v30);
    uint64_t v11 = sub_20B9267D8();
    os_log_type_t v12 = sub_20B926B08();
    if (os_log_type_enabled(v11, v12))
    {
      long long v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v29[0] = v14;
      *(_DWORD *)long long v13 = 136315138;
      uint64_t v28 = sub_20B91B148(qword_20B92B088[v4], 0xE100000000000000, v29);
      sub_20B926BC8();
      swift_bridgeObjectRelease();
      sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      _os_log_impl(&dword_20B8D3000, v11, v12, "Size variant did change to %s, will update layout", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21053B150](v14, -1, -1);
      MEMORY[0x21053B150](v13, -1, -1);
    }
    else
    {

      sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
    sub_20B8EBE30((uint64_t)v34, (uint64_t)v29);
    if (sub_20B8EEAF4((uint64_t)v29) == 1)
    {
      CGAffineTransform v8 = v38;
      uint64_t v9 = v38[2];
    }
    else
    {
      uint64_t v15 = *(void *)(v29[14] + 16);
      CGAffineTransform v8 = v38;
      uint64_t v9 = v38[2];
      if (v15 == v9)
      {
LABEL_19:
        id v19 = objc_msgSend(v2, sel_view, v28);
        if (!v19)
        {
          __break(1u);
          return;
        }
        long long v20 = v19;
        if (v15 <= 1) {
          uint64_t v15 = 1;
        }
        objc_msgSend(v19, sel_bounds);
        uint64_t v22 = v21;
        uint64_t v24 = v23;

        sub_20B9018B8((char *)v31);
        char v25 = v31[0];
        type metadata accessor for GridLayoutProvider();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 56) = 0;
        *(void *)(v26 + 64) = 0x3FEBB67AE8584CAALL;
        *(void *)(v26 + 16) = v22;
        *(void *)(v26 + 24) = v24;
        *(unsigned char *)(v26 + 32) = v4;
        *(void *)(v26 + 40) = v15;
        *(unsigned char *)(v26 + 48) = v25;
        *(void *)(v26 + 56) = sub_20B91F060();
        swift_bridgeObjectRelease();
        *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = v26;
        swift_release();
        int v10 = 1;
LABEL_23:
        if (!objc_msgSend(v2, sel_isViewLoaded))
        {
          sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
          return;
        }
        sub_20B8EBE30((uint64_t)v34, (uint64_t)v31);
        if (sub_20B8EEAF4((uint64_t)v31) == 1)
        {
          sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
        }
        else
        {
          char v27 = sub_20B8EF130((void *)v31[14], v8);
          sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
          if (v27)
          {
            if (!v10) {
              return;
            }
            sub_20B8ED800();
            sub_20B8EDEE8();
            goto LABEL_31;
          }
        }
        sub_20B8EE0CC();
LABEL_31:
        sub_20B8ED578();
        return;
      }
    }
LABEL_15:
    sub_20B8EBE30((uint64_t)v35, (uint64_t)v31);
    sub_20B8E7960(v31);
    long long v16 = sub_20B9267D8();
    os_log_type_t v17 = sub_20B926B08();
    if (os_log_type_enabled(v16, v17))
    {
      long long v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)long long v18 = 134217984;
      v30[0] = v9;
      sub_20B926BC8();
      sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      _os_log_impl(&dword_20B8D3000, v16, v17, "Emoji count did change to %ld, will update layout", v18, 0xCu);
      MEMORY[0x21053B150](v18, -1, -1);
    }
    else
    {

      sub_20B8EC000((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
    uint64_t v15 = v9;
    goto LABEL_19;
  }
}

uint64_t sub_20B8EBDB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8EBE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A59A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B8EBE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a15)
  {
    swift_bridgeObjectRetain();
    sub_20B8E7644(a8, a9, a10, a11, a12);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20B8EBF34(uint64_t a1)
{
  sub_20B8EBE30(a1, (uint64_t)v5);
  uint64_t v2 = v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v6);
  sub_20B8EBE30(v2, (uint64_t)v7);
  sub_20B8EBE30((uint64_t)v5, v2);
  sub_20B8EC000((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30((uint64_t)v6, (uint64_t)v4);
  sub_20B8EB83C((uint64_t)v4);
  return sub_20B8EC000((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

uint64_t sub_20B8EC000(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_20B8EC06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a15)
  {
    swift_bridgeObjectRelease();
    sub_20B8E7820(a8, a9, a10, a11, a12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void (*sub_20B8EC108(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x3A8uLL);
  *a1 = v3;
  v3[115] = v1;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  v3[116] = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_20B8EBE30(v5, (uint64_t)v3);
  sub_20B8EBE30((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_20B8EC000((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  return sub_20B8EC1BC;
}

void sub_20B8EC1BC(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)(*a1 + 16);
  uint64_t v4 = (uint64_t)(*a1 + 32);
  uint64_t v5 = (uint64_t)(*a1 + 48);
  uint64_t v6 = (uint64_t)(*a1 + 64);
  uint64_t v7 = (uint64_t)(*a1 + 80);
  if (a2)
  {
    uint64_t v8 = v2[115] + v2[116];
    sub_20B8EBE30((uint64_t)(*a1 + 16), v7);
    sub_20B8EBE30(v8, v6);
    sub_20B8EBE30(v8, v5);
    sub_20B8EBE30(v7, v8);
    sub_20B8EC000(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EC000(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EBE30(v6, (uint64_t)(v2 + 96));
    sub_20B8EB83C((uint64_t)(v2 + 96));
    sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EBE30(v3, v4);
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v9 = v2[115] + v2[116];
    sub_20B8EBE30((uint64_t)(*a1 + 16), v7);
    sub_20B8EBE30(v9, v6);
    sub_20B8EBE30(v9, v5);
    sub_20B8EBE30(v7, v9);
    sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EC000(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EBE30(v6, v4);
    sub_20B8EB83C(v4);
  }
  sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  free(v2);
}

double sub_20B8EC38C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8EC3D4(double a1)
{
}

uint64_t (*sub_20B8EC3E0(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8EC440;
}

double sub_20B8EC444()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8EC48C(double a1)
{
}

void sub_20B8EC498(void *a1, double a2)
{
  uint64_t v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  double *v4 = a2;
  sub_20B8ED578();
}

uint64_t (*sub_20B8EC4EC(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8EC440;
}

void sub_20B8EC54C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B8ED578();
  }
}

uint64_t sub_20B8EC580()
{
  return 1;
}

id EmojiForegroundGridLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_20B8EE92C(a1);
  swift_release();
  return v4;
}

id EmojiForegroundGridLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1 = sub_20B8EE92C(a1);
  swift_release();
  return v1;
}

id EmojiForegroundGridLayersViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundGridLayersViewController.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_20B9267E8();
  id v4 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize];
  *(void *)id v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  sub_20B8EEA8C(v14);
  sub_20B8EBE30((uint64_t)v14, v5);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = 0;
  uint64_t v6 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfRows];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  uint64_t v7 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfItemsInRow];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages] = v8;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 10;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  *(void *)(v9 + 24) = v10;
  objc_msgSend(v10, sel_setCountLimit_, 10);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiRenderer] = v9;

  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

void sub_20B8EC820()
{
  id v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  objc_msgSendSuper2(&v23, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v3 = v2;
  objc_msgSend(v2, sel_setClipsToBounds_, 0);

  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  swift_beginAccess();
  sub_20B8EBE30(v7, (uint64_t)v20);
  sub_20B8EBE30((uint64_t)v20, (uint64_t)v21);
  if (sub_20B8EEAF4((uint64_t)v21) == 1) {
    return;
  }
  unint64_t v8 = *(void *)(v22 + 16);
  sub_20B8EBE30((uint64_t)v20, (uint64_t)v19);
  sub_20B8E7960(v19);
  id v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v10 = v9;
  if (v8 <= 1) {
    unint64_t v8 = 1;
  }
  objc_msgSend(v9, sel_bounds);
  uint64_t v12 = v11;
  uint64_t v14 = v13;

  char v15 = v21[107];
  sub_20B9018B8(&v18);
  char v16 = v18;
  type metadata accessor for GridLayoutProvider();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 56) = 0;
  *(void *)(v17 + 64) = 0x3FEBB67AE8584CAALL;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v14;
  *(unsigned char *)(v17 + 32) = v15;
  *(void *)(v17 + 40) = v8;
  *(unsigned char *)(v17 + 48) = v16;
  *(void *)(v17 + 56) = sub_20B91F060();
  swift_bridgeObjectRelease();
  sub_20B8EC000((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = v17;
  swift_release();
  sub_20B8ECE28();
  sub_20B8ED220();
}

void sub_20B8ECAA0()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  objc_msgSendSuper2(&v16, sel_viewDidLayoutSubviews);
  id v1 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize];
  if ((v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize + 16] & 1) == 0)
  {
    CGFloat v3 = *v1;
    CGFloat v2 = v1[1];
    id v4 = objc_msgSend(v0, sel_view);
    if (!v4) {
      goto LABEL_7;
    }
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_bounds);
    CGFloat v7 = v6;
    CGFloat v9 = v8;

    v17.width = v3;
    v17.height = v2;
    v18.width = v7;
    v18.height = v9;
    CGSizeEqualToSize(v17, v18);
  }
  sub_20B8ECBF0();
  id v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_msgSend(v10, sel_bounds);
    uint64_t v13 = v12;
    uint64_t v15 = v14;

    *(void *)id v1 = v13;
    *((void *)v1 + 1) = v15;
    *((unsigned char *)v1 + 16) = 0;
    return;
  }
  __break(1u);
LABEL_7:
  __break(1u);
}

void sub_20B8ECBF0()
{
  id v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v15);
  sub_20B8EBE30((uint64_t)v15, (uint64_t)v16);
  if (sub_20B8EEAF4((uint64_t)v16) != 1)
  {
    unint64_t v3 = *(void *)(v17 + 16);
    sub_20B8EBE30((uint64_t)v15, (uint64_t)v14);
    sub_20B8E7960(v14);
    id v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      uint64_t v5 = v4;
      if (v3 <= 1) {
        unint64_t v3 = 1;
      }
      objc_msgSend(v4, sel_bounds);
      uint64_t v7 = v6;
      uint64_t v9 = v8;

      char v10 = v16[107];
      sub_20B9018B8(&v13);
      char v11 = v13;
      type metadata accessor for GridLayoutProvider();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 56) = 0;
      *(void *)(v12 + 64) = 0x3FEBB67AE8584CAALL;
      *(void *)(v12 + 16) = v7;
      *(void *)(v12 + 24) = v9;
      *(unsigned char *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v3;
      *(unsigned char *)(v12 + 48) = v11;
      *(void *)(v12 + 56) = sub_20B91F060();
      swift_bridgeObjectRelease();
      sub_20B8EC000((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = v12;
      swift_release();
      sub_20B8ED578();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_20B8ECD70(uint64_t a1)
{
  sub_20B8ECBF0();
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  return objc_msgSendSuper2(&v4, sel_didMoveToParentViewController_, a1);
}

uint64_t sub_20B8ECE28()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v32);
  sub_20B8EBE30((uint64_t)v32, (uint64_t)v33);
  uint64_t result = sub_20B8EEAF4((uint64_t)v33);
  if (result != 1)
  {
    uint64_t result = v34;
    uint64_t v4 = *(void *)(v34 + 16);
    if (v4)
    {
      uint64_t v30 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiRenderer;
      uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages);
      uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      int64x2_t v26 = vdupq_n_s64(0x4069000000000000uLL);
      uint64_t v25 = v1;
      char v29 = v5;
      while (1)
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        uint64_t v9 = *(void *)(v1 + v30);
        id v10 = objc_allocWithZone(NSString);
        swift_bridgeObjectRetain_n();
        swift_retain();
        char v11 = (void *)sub_20B926908();
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(v10, sel_initWithString_, v11);

        id v13 = objc_msgSend(*(id *)(v9 + 24), sel_objectForKey_, v12);
        if (v13)
        {
          id v14 = v13;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v27 = v12;
          id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
          objc_msgSend(v15, sel_setOpaque_, 0);
          uint64_t v28 = v15;
          id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v15, 200.0, 200.0);
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v7;
          *(void *)(v17 + 24) = v8;
          *(int64x2_t *)(v17 + 32) = v26;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = sub_20B8EF014;
          *(void *)(v18 + 24) = v17;
          aBlock[4] = sub_20B8EF030;
          aBlock[5] = v18;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_20B8F48A4;
          aBlock[3] = &block_descriptor_44;
          id v19 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          long long v20 = v16;
          id v21 = objc_msgSend(v16, sel_imageWithActions_, v19);
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          if (v19)
          {
            __break(1u);
            return result;
          }
          uint64_t v22 = *(void **)(v9 + 24);
          id v14 = v21;
          id v23 = v22;
          id v12 = v27;
          objc_msgSend(v23, sel_setObject_forKey_, v14, v27);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v1 = v25;
        }

        swift_beginAccess();
        id v24 = v14;
        MEMORY[0x21053A0A0]();
        if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B926AC8();
        }
        v6 += 2;
        sub_20B926AD8();
        sub_20B926AB8();
        swift_endAccess();

        if (!--v4) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

void sub_20B8ED220()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v1, (uint64_t)v19);
  sub_20B8EBE30((uint64_t)v19, (uint64_t)v20);
  if (sub_20B8EEAF4((uint64_t)v20) != 1)
  {
    uint64_t v2 = v0;
    unint64_t v3 = sub_20B9267D8();
    LOBYTE(v4) = sub_20B926B18();
    uint64_t v5 = (uint64_t)&unk_26ACA6000;
    if (os_log_type_enabled(v3, (os_log_type_t)v4))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      uint64_t v7 = &v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
      swift_beginAccess();
      if (*(void *)v7 >> 62)
      {
LABEL_23:
        swift_bridgeObjectRetain();
        sub_20B926D58();
        swift_bridgeObjectRelease();
      }
      sub_20B926BC8();

      _os_log_impl(&dword_20B8D3000, v3, (os_log_type_t)v4, "[createEmojiViews] created %ld emoji views", v6, 0xCu);
      MEMORY[0x21053B150](v6, -1, -1);
    }
    else
    {
    }
    uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider;
    uint64_t v4 = &v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages];
    uint64_t v9 = *(void *)(v5 + 1368);
    swift_beginAccess();
    uint64_t v10 = *(void *)&v2[v8];
    if (v10)
    {
      unint64_t v3 = &v2[v9];
      uint64_t v5 = -1;
      uint64_t v11 = 72;
      while (1)
      {
        uint64_t v12 = *(void *)(v10 + 56);
        if (!v12) {
          break;
        }
        if ((unint64_t)++v5 >= *(void *)(v12 + 16)) {
          return;
        }
        unint64_t v13 = *(void *)(v12 + v11);
        uint64_t v6 = (uint8_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
        uint64_t v14 = *(void *)v4;
        if ((*(void *)v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v15 = (id)MEMORY[0x21053A2B0](v13, v14);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
          if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_22;
          }
          id v15 = *(id *)(v14 + 8 * v13 + 32);
        }
        [(uint8_t *)v6 setImage:v15];

        [(uint8_t *)v6 setContentMode:1];
        id v16 = objc_msgSend(v2, sel_view);
        if (!v16) {
          goto LABEL_25;
        }
        uint64_t v17 = v16;
        objc_msgSend(v16, sel_addSubview_, v6);

        swift_beginAccess();
        uint64_t v18 = v6;
        MEMORY[0x21053A0A0]();
        if (*(void *)(((uint64_t)v3->isa & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((uint64_t)v3->isa & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
          sub_20B926AC8();
        v11 += 48;
        sub_20B926AD8();
        sub_20B926AB8();
        swift_endAccess();

        uint64_t v10 = *(void *)&v2[v8];
        if (!v10) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
    }
LABEL_26:
    __break(1u);
  }
}

void sub_20B8ED578()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!(*(void *)v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_20B926D58();
  if (!v3) {
    goto LABEL_21;
  }
LABEL_3:
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider;
  uint64_t v5 = &v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress];
  unint64_t v24 = v2 & 0xC000000000000001;
  swift_beginAccess();
  id v23 = v5;
  swift_beginAccess();
  uint64_t v6 = 0;
  uint64_t v7 = 4;
  while (1)
  {
    unint64_t v10 = v7 - 4;
    if (v24)
    {
      id v11 = (id)MEMORY[0x21053A2B0](v7 - 4, v2);
      uint64_t v12 = v7 - 3;
      if (__OFADD__(v10, 1)) {
        goto LABEL_19;
      }
    }
    else
    {
      id v11 = *(id *)(v2 + 8 * v7);
      uint64_t v12 = v7 - 3;
      if (__OFADD__(v10, 1))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    uint64_t v13 = v2;
    uint64_t v14 = v3;
    id v15 = v11;
    id v16 = objc_msgSend(v0, sel_viewIfLoaded);

    double v17 = 0.0;
    if (v16)
    {
      uint64_t v18 = *(void *)&v0[v4];
      if (!v18) {
        goto LABEL_24;
      }
      uint64_t v19 = *(void *)(v18 + 56);
      if (!v19) {
        goto LABEL_25;
      }
      double v20 = 0.0;
      if (v10 < *(void *)(v19 + 16))
      {
        uint64_t v21 = v19 + v6;
        double v17 = *(double *)(v21 + 48);
        double v20 = *(double *)(v21 + 56);
      }
    }
    else
    {
      double v20 = 0.0;
    }
    objc_msgSend(v15, sel_setCenter_, v17, v20, v23);

    uint64_t v22 = *(void *)&v0[v4];
    if (!v22) {
      break;
    }
    if (!*(void *)(v22 + 56)) {
      goto LABEL_23;
    }
    id v8 = v15;
    objc_msgSend(v8, sel_bounds);
    objc_msgSend(v8, sel_setBounds_);

    v6 += 48;
    ++v7;
    uint64_t v3 = v14;
    BOOL v9 = v12 == v14;
    uint64_t v2 = v13;
    if (v9) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_20B8ED800()
{
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider];
  if (!v2) {
    goto LABEL_80;
  }
  uint64_t v3 = *(void *)(v2 + 56);
  if (!v3)
  {
LABEL_81:
    __break(1u);
    return;
  }
  uint64_t v4 = v0;
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = (uint64_t *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
  swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *v6;
  unint64_t v9 = (unint64_t)*v6 >> 62;
  if (v7 >= v5)
  {
    if (!v9)
    {
      if (v5 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return;
      }
      goto LABEL_17;
    }
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v5 >= v46) {
      return;
    }
LABEL_17:
    if ((unint64_t)*v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_20B926D58();
      swift_bridgeObjectRelease();
      uint64_t v18 = v47 - v5;
      if (!__OFSUB__(v47, v5))
      {
LABEL_19:
        uint64_t v19 = sub_20B9267D8();
        os_log_type_t v20 = sub_20B926B18();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v5 = 12;
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 134217984;
          sub_20B926BC8();
          _os_log_impl(&dword_20B8D3000, v19, v20, "[updateEmojiViews] removing %ld emoji views", v21, 0xCu);
          MEMORY[0x21053B150](v21, -1, -1);
        }

        if (!((unint64_t)*v6 >> 62))
        {
          uint64_t v22 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v23 = v22 - v18;
          if (!__OFSUB__(v22, v18)) {
            goto LABEL_23;
          }
          goto LABEL_65;
        }
LABEL_63:
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_20B926D58();
        swift_bridgeObjectRelease();
        uint64_t v23 = v48 - v18;
        if (!__OFSUB__(v48, v18))
        {
LABEL_23:
          if (!((unint64_t)*v6 >> 62))
          {
            uint64_t v24 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v24 >= v23) {
              goto LABEL_25;
            }
            goto LABEL_67;
          }
LABEL_66:
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_20B926D58();
          swift_bridgeObjectRelease();
          if (v24 >= v23)
          {
LABEL_25:
            uint64_t v5 = *v6;
            unint64_t v1 = (unint64_t)*v6 >> 62;
            if (!v1)
            {
              uint64_t v25 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v25 >= v23) {
                goto LABEL_27;
              }
              goto LABEL_69;
            }
LABEL_68:
            swift_bridgeObjectRetain_n();
            uint64_t v49 = sub_20B926D58();
            swift_bridgeObjectRelease();
            if (v49 >= v23)
            {
LABEL_27:
              if ((v23 & 0x8000000000000000) == 0)
              {
                if (v1)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v26 = sub_20B926D58();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v26 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                if (v26 >= v24)
                {
                  if ((v5 & 0xC000000000000001) != 0 && v23 != v24)
                  {
                    if (v23 >= (unint64_t)v24)
                    {
LABEL_77:
                      __break(1u);
                      goto LABEL_78;
                    }
                    sub_20B8EEF9C();
                    uint64_t v30 = v23;
                    do
                    {
                      uint64_t v31 = v30 + 1;
                      sub_20B926C68();
                      uint64_t v30 = v31;
                    }
                    while (v24 != v31);
                  }
                  if (v1)
                  {
                    swift_bridgeObjectRetain();
                    sub_20B926D68();
                    uint64_t v32 = v36;
                    uint64_t v23 = v37;
                    unint64_t v39 = v38;
                    swift_bridgeObjectRelease_n();
                    v39 >>= 1;
                    BOOL v33 = __OFSUB__(v39, v23);
                    uint64_t v35 = v39 - v23;
                    char v34 = (v35 < 0) ^ v33 | (v35 == 0);
                    if (!v35) {
                      goto LABEL_48;
                    }
                  }
                  else
                  {
                    uint64_t v32 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
                    BOOL v33 = __OFSUB__(v24, v23);
                    uint64_t v35 = v24 - v23;
                    char v34 = (v35 < 0) ^ v33 | (v35 == 0);
                    if (!v35) {
                      goto LABEL_48;
                    }
                  }
                  if (v34)
                  {
LABEL_78:
                    __break(1u);
LABEL_79:
                    __break(1u);
LABEL_80:
                    __break(1u);
                    goto LABEL_81;
                  }
                  swift_unknownObjectRetain();
                  int v40 = (void **)(v32 + 8 * v23);
                  do
                  {
                    unsigned __int8 v41 = *v40++;
                    objc_msgSend(v41, sel_removeFromSuperview);
                    --v35;
                  }
                  while (v35);
                  swift_unknownObjectRelease();
LABEL_48:
                  if (!((unint64_t)*v6 >> 62))
                  {
                    uint64_t v42 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    uint64_t v43 = v42 - v18;
                    if (!__OFSUB__(v42, v18)) {
                      goto LABEL_50;
                    }
                    goto LABEL_74;
                  }
LABEL_72:
                  swift_bridgeObjectRetain();
                  uint64_t v50 = sub_20B926D58();
                  swift_bridgeObjectRelease();
                  uint64_t v43 = v50 - v18;
                  if (!__OFSUB__(v50, v18))
                  {
LABEL_50:
                    if (!((unint64_t)*v6 >> 62))
                    {
                      uint64_t v44 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      if (v44 >= v43)
                      {
LABEL_52:
                        swift_beginAccess();
                        sub_20B8FD2A8(v43, v44);
                        swift_endAccess();
                        swift_unknownObjectRelease();
                        return;
                      }
                      goto LABEL_76;
                    }
LABEL_75:
                    swift_bridgeObjectRetain();
                    uint64_t v44 = sub_20B926D58();
                    swift_bridgeObjectRelease();
                    if (v44 >= v43) {
                      goto LABEL_52;
                    }
LABEL_76:
                    __break(1u);
                    goto LABEL_77;
                  }
LABEL_74:
                  __break(1u);
                  goto LABEL_75;
                }
LABEL_71:
                __break(1u);
                goto LABEL_72;
              }
LABEL_70:
              __break(1u);
              goto LABEL_71;
            }
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v5;
      if (!__OFSUB__(v17, v5)) {
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_63;
  }
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_20B926D58();
    swift_bridgeObjectRelease();
    uint64_t v11 = v5 - v45;
    if (!__OFSUB__(v5, v45)) {
      goto LABEL_8;
    }
    goto LABEL_57;
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v5 - v10;
  if (__OFSUB__(v5, v10))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_8:
  if (v11 >= 1)
  {
    uint64_t v12 = v11;
    do
    {
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
      objc_msgSend(v13, sel_setContentMode_, 1);
      id v14 = objc_msgSend(v4, sel_view);
      if (!v14) {
        goto LABEL_79;
      }
      id v15 = v14;
      objc_msgSend(v14, sel_addSubview_, v13);

      swift_beginAccess();
      id v16 = v13;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20B926AC8();
      }
      sub_20B926AD8();
      sub_20B926AB8();
      swift_endAccess();
    }
    while (--v12);
  }
  id v27 = sub_20B9267D8();
  os_log_type_t v28 = sub_20B926B18();
  if (os_log_type_enabled(v27, v28))
  {
    char v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v29 = 134217984;
    sub_20B926BC8();
    _os_log_impl(&dword_20B8D3000, v27, v28, "[updateEmojiViews] creating %ld new emoji views", v29, 0xCu);
    MEMORY[0x21053B150](v29, -1, -1);
  }
}

void sub_20B8EDEE8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v1, (uint64_t)v14);
  sub_20B8EBE30((uint64_t)v14, (uint64_t)v15);
  if (sub_20B8EEAF4((uint64_t)v15) != 1)
  {
    uint64_t v2 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider;
    uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews);
    uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages);
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v5 = *(void *)(v0 + v2);
    if (v5)
    {
      unint64_t v6 = 0;
      uint64_t v7 = 72;
      while (1)
      {
        uint64_t v8 = *(void *)(v5 + 56);
        if (!v8) {
          break;
        }
        if (v6 >= *(void *)(v8 + 16)) {
          return;
        }
        unint64_t v9 = *(void *)(v8 + v7);
        uint64_t v10 = *v3;
        if ((*v3 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v11 = (id)MEMORY[0x21053A2B0](v6, v10);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v6 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_19:
            __break(1u);
LABEL_20:
            __break(1u);
            break;
          }
          id v11 = *(id *)(v10 + 8 * v6 + 32);
        }
        uint64_t v12 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v13 = (id)MEMORY[0x21053A2B0](v9, v12);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_19;
          }
          if (v9 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_20;
          }
          id v13 = *(id *)(v12 + 8 * v9 + 32);
        }
        objc_msgSend(v11, sel_setImage_, v13);

        ++v6;
        uint64_t v5 = *(void *)(v0 + v2);
        v7 += 48;
        if (!v5) {
          goto LABEL_22;
        }
      }
      __break(1u);
    }
LABEL_22:
    __break(1u);
  }
}

void sub_20B8EE0CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v14);
  sub_20B8EBE30((uint64_t)v14, (uint64_t)v15);
  if (sub_20B8EEAF4((uint64_t)v15) != 1)
  {
    sub_20B8EBE30((uint64_t)v14, (uint64_t)v12);
    sub_20B8EBE30((uint64_t)v14, (uint64_t)v13);
    sub_20B8E7960(v13);
    sub_20B8E7960(v12);
    uint64_t v3 = sub_20B9267D8();
    os_log_type_t v4 = sub_20B926B18();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      v11[0] = v6;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
      sub_20B8EEF40();
      uint64_t v7 = sub_20B9268D8();
      unint64_t v9 = v8;
      swift_bridgeObjectRelease();
      sub_20B91B148(v7, v9, v11);
      sub_20B926BC8();
      swift_bridgeObjectRelease();
      sub_20B8EC000((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      sub_20B8EC000((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      _os_log_impl(&dword_20B8D3000, v3, v4, "Updating for changed emoji: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21053B150](v6, -1, -1);
      MEMORY[0x21053B150](v5, -1, -1);
    }
    else
    {

      sub_20B8EC000((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      sub_20B8EC000((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
    uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages);
    swift_beginAccess();
    *uint64_t v10 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    sub_20B8ECE28();
    sub_20B8ED800();
    sub_20B8EDEE8();
  }
}

id EmojiForegroundGridLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundGridLayersViewController.init(nibName:bundle:)()
{
}

id EmojiForegroundGridLayersViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20B8EE55C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8EE5DC(uint64_t a1)
{
  uint64_t v2 = *v1;
  sub_20B8EBE30(a1, (uint64_t)v6);
  uint64_t v3 = v2 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v7);
  sub_20B8EBE30(v3, (uint64_t)v8);
  sub_20B8EBE30((uint64_t)v6, v3);
  sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30((uint64_t)v7, (uint64_t)v5);
  sub_20B8EB83C((uint64_t)v5);
  return sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

void (*sub_20B8EE6B4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B8EC108(v2);
  return sub_20B8EE710;
}

void sub_20B8EE710(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

double sub_20B8EE758()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8EE7A4(uint64_t a1, uint64_t a2, double a3)
{
}

uint64_t (*sub_20B8EE7B0(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8EC440;
}

double sub_20B8EE814()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8EE860(uint64_t a1, uint64_t a2, double a3)
{
}

void sub_20B8EE86C(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  double *v6 = a1;
  sub_20B8ED578();
}

uint64_t (*sub_20B8EE8C4(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8EC440;
}

id sub_20B8EE92C(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_20B9267E8();
  os_log_type_t v4 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize];
  *(void *)os_log_type_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  sub_20B8EEA8C(v11);
  sub_20B8EBE30((uint64_t)v11, v5);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = 0;
  uint64_t v6 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfRows];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  id v7 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfItemsInRow];
  *(void *)id v7 = 0;
  v7[8] = 1;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages] = v8;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

double sub_20B8EEA8C(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t type metadata accessor for EmojiForegroundGridLayersViewController()
{
  uint64_t result = qword_26ACA28D0;
  if (!qword_26ACA28D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20B8EEAF4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 112);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_20B8EEB14@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress, a2);
}

void sub_20B8EEB20(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

double sub_20B8EEB2C@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress, a2);
}

double keypath_get_5Tm@<D0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  os_log_type_t v4 = (double *)(*a1 + *a2);
  swift_beginAccess();
  double result = *v4;
  *a3 = *(void *)v4;
  return result;
}

void sub_20B8EEB88(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void keypath_set_6Tm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v6 = v5;
  sub_20B8ED578();
}

uint64_t sub_20B8EEBEC()
{
  return type metadata accessor for EmojiForegroundGridLayersViewController();
}

uint64_t sub_20B8EEBF4()
{
  uint64_t result = sub_20B9267F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for EmojiForegroundGridLayersViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiForegroundGridLayersViewController);
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.configuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.configuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.configuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.wakeProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.wakeProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.wakeProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.unlockProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x188))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.unlockProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.unlockProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.__allocating_init(emojiRenderer:)()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

unint64_t sub_20B8EEF40()
{
  unint64_t result = qword_26ACA3058;
  if (!qword_26ACA3058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA2EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3058);
  }
  return result;
}

unint64_t sub_20B8EEF9C()
{
  unint64_t result = qword_26ACA33E0;
  if (!qword_26ACA33E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACA33E0);
  }
  return result;
}

uint64_t sub_20B8EEFDC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_20B8EF014()
{
  sub_20B8F4664(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_20B8EF020()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B8EF030(uint64_t a1)
{
  return sub_20B8F4844(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_20B8EF040(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (float64x2_t *)(a1 + 32);
  os_log_type_t v4 = (float64x2_t *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    char v6 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v3, *v4), (int32x4_t)vceqq_f64(v3[1], v4[1]))), 0xFuLL)));
    BOOL v8 = v5-- != 0;
    if ((v6 & 1) == 0) {
      break;
    }
    v3 += 2;
    v4 += 2;
  }
  while (v8);
  return v6 & 1;
}

BOOL sub_20B8EF0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  os_log_type_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_20B8EF130(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_20B926ED8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    double v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_20B926ED8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

void sub_20B8EF1F8(uint64_t a1, char a2)
{
  *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation] = a1;
  if (a2)
  {
    sub_20B8F07BC();
  }
  else
  {
    uint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_20B8EF3C8;
    *(void *)(v5 + 24) = v4;
    v9[4] = sub_20B8EF3FC;
    v9[5] = v5;
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 1107296256;
    v9[2] = sub_20B8EB690;
    v9[3] = &block_descriptor_0;
    char v6 = _Block_copy(v9);
    double v7 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_performWithoutAnimation_, v6);
    _Block_release(v6);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

uint64_t sub_20B8EF390()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B8EF3C8()
{
}

uint64_t sub_20B8EF3EC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B8EF3FC()
{
  return sub_20B8EB630(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_20B8EF41C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a2);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8EF49C(uint64_t a1)
{
  sub_20B8EBE30(a1, (uint64_t)v3);
  sub_20B8EBE30((uint64_t)v3, (uint64_t)v2);
  sub_20B8EC000((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  return sub_20B8EF584((uint64_t)v2);
}

uint64_t sub_20B8EF508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8EF584(uint64_t a1)
{
  sub_20B8EBE30(a1, (uint64_t)v7);
  uint64_t v2 = (uint64_t)v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v8);
  sub_20B8EBE30(v2, (uint64_t)v9);
  sub_20B8EBE30((uint64_t)v7, v2);
  sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30(v2, (uint64_t)v10);
  sub_20B8EBE30((uint64_t)v10, (uint64_t)v11);
  if (sub_20B8EEAF4((uint64_t)v11) != 1)
  {
    sub_20B8EBE30((uint64_t)v10, (uint64_t)v6);
    sub_20B8E7960(v6);
    if (objc_msgSend(v1, sel_isViewLoaded))
    {
      sub_20B8EBE30((uint64_t)v8, (uint64_t)v5);
      if (sub_20B8EEAF4((uint64_t)v5) == 1)
      {
        sub_20B8EC000((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
LABEL_7:
        sub_20B8F12E0();
        sub_20B8F07BC();
        return sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      }
      char v3 = sub_20B8EF130(v5[14], v12);
      sub_20B8EC000((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      if ((v3 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_20B8EC000((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
  }
  return sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

void (*sub_20B8EF738(void *a1))(void **a1, char a2)
{
  char v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v4, (uint64_t)v3);
  sub_20B8EBE30((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_20B8EC000((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  return sub_20B8EF7E8;
}

void sub_20B8EF7E8(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 128;
  uint64_t v4 = (uint64_t)*a1 + 256;
  uint64_t v5 = (uint64_t)*a1 + 384;
  if (a2)
  {
    sub_20B8EBE30((uint64_t)*a1 + 128, v5);
    sub_20B8EBE30(v5, (uint64_t)v2 + 512);
    sub_20B8EC000(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EF584((uint64_t)v2 + 512);
    sub_20B8EBE30(v3, v4);
    sub_20B8EC000(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  }
  else
  {
    sub_20B8EBE30((uint64_t)*a1 + 128, v5);
    sub_20B8EBE30(v5, v4);
    sub_20B8EF584(v4);
  }
  free(v2);
}

double sub_20B8EF8D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8EF918(double a1)
{
}

uint64_t (*sub_20B8EF924(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8EF984;
}

double sub_20B8EF988()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8EF9D0(double a1)
{
}

void sub_20B8EF9DC(void *a1, double a2)
{
  uint64_t v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  double *v4 = a2;
  sub_20B8F07BC();
}

uint64_t (*sub_20B8EFA30(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8EF984;
}

void sub_20B8EFA90(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B8F07BC();
  }
}

id EmojiForegroundCircularLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_20B8F1E6C(a1);
  swift_release();
  return v4;
}

id EmojiForegroundCircularLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1 = sub_20B8F1E6C(a1);
  swift_release();
  return v1;
}

id EmojiForegroundCircularLayersViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundCircularLayersViewController.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_20B9267E8();
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation] = 1;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateEmojiWithDevice] = 0;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateCenterEmojiWithDevice] = 1;
  uint64_t v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  sub_20B8EEA8C(v11);
  sub_20B8EBE30((uint64_t)v11, v4);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages] = v5;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 10;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  *(void *)(v6 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiRenderer] = v6;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_20B8EFD60()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    id result = objc_msgSend(v0, sel_view);
    if (result)
    {
      id v3 = result;
      id v4 = objc_msgSend(self, sel_clearColor);
      objc_msgSend(v3, sel_setBackgroundColor_, v4);

      return (id)sub_20B8EFFD8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20B8EFE8C(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  objc_msgSendSuper2(&v3, sel_viewIsAppearing_, a1 & 1);
  sub_20B8F03D0();
}

void sub_20B8EFF40()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLayoutSubviews);
  sub_20B8F07BC();
}

uint64_t sub_20B8EFFD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v32);
  sub_20B8EBE30((uint64_t)v32, (uint64_t)v33);
  uint64_t result = sub_20B8EEAF4((uint64_t)v33);
  if (result != 1)
  {
    uint64_t result = v34;
    uint64_t v4 = *(void *)(v34 + 16);
    if (v4)
    {
      uint64_t v30 = OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiRenderer;
      objc_super v5 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages);
      uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      int64x2_t v26 = vdupq_n_s64(0x4069000000000000uLL);
      uint64_t v25 = v1;
      char v29 = v5;
      while (1)
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        uint64_t v9 = *(void *)(v1 + v30);
        id v10 = objc_allocWithZone(NSString);
        swift_bridgeObjectRetain_n();
        swift_retain();
        BOOL v11 = (void *)sub_20B926908();
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(v10, sel_initWithString_, v11);

        id v13 = objc_msgSend(*(id *)(v9 + 24), sel_objectForKey_, v12);
        if (v13)
        {
          id v14 = v13;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v27 = v12;
          id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
          objc_msgSend(v15, sel_setOpaque_, 0);
          os_log_type_t v28 = v15;
          id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v15, 200.0, 200.0);
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v7;
          *(void *)(v17 + 24) = v8;
          *(int64x2_t *)(v17 + 32) = v26;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = sub_20B8EF014;
          *(void *)(v18 + 24) = v17;
          aBlock[4] = sub_20B8EF030;
          aBlock[5] = v18;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_20B8F48A4;
          aBlock[3] = &block_descriptor_37;
          uint64_t v19 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          os_log_type_t v20 = v16;
          id v21 = objc_msgSend(v16, sel_imageWithActions_, v19);
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          if (v19)
          {
            __break(1u);
            return result;
          }
          uint64_t v22 = *(void **)(v9 + 24);
          id v14 = v21;
          id v23 = v22;
          id v12 = v27;
          objc_msgSend(v23, sel_setObject_forKey_, v14, v27);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v1 = v25;
        }

        swift_beginAccess();
        id v24 = v14;
        MEMORY[0x21053A0A0]();
        if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B926AC8();
        }
        v6 += 2;
        sub_20B926AD8();
        sub_20B926AB8();
        swift_endAccess();

        if (!--v4) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

void sub_20B8F03D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v20);
  sub_20B8EBE30((uint64_t)v20, (uint64_t)v21);
  if (sub_20B8EEAF4((uint64_t)v21) != 1)
  {
    sub_20B8EBE30((uint64_t)v20, (uint64_t)v19);
    sub_20B8E7960(v19);
    uint64_t v18 = sub_20B8F1C5C();
    swift_retain();
    id v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_bounds);

      unint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages];
      uint64_t v8 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews];
      do
      {
        swift_beginAccess();
        uint64_t v9 = 1;
        do
        {
          id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
          uint64_t v11 = *(void *)v7;
          if ((*(void *)v7 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            id v12 = (id)MEMORY[0x21053A2B0](v5, v11);
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((v5 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_27:
              __break(1u);
              goto LABEL_28;
            }
            if (v5 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_27;
            }
            id v12 = *(id *)(v11 + 8 * v5 + 32);
          }
          -[NSObject setImage:](v10, sel_setImage_, v12, v18);

          [v10 setContentMode:1];
          id v13 = objc_msgSend(v1, sel_view);
          if (!v13) {
            goto LABEL_33;
          }
          id v14 = v13;
          objc_msgSend(v13, sel_insertSubview_atIndex_, v10, 0);

          swift_beginAccess();
          id v15 = v10;
          MEMORY[0x21053A0A0]();
          if (*(void *)(((uint64_t)v8->isa & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((uint64_t)v8->isa & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
            sub_20B926AC8();
          id v10 = v8;
          sub_20B926AD8();
          sub_20B926AB8();
          swift_endAccess();

          if (!v6) {
            break;
          }
        }
        while (6 * v6 > v9++);
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        if (__OFADD__(v5, 1)) {
          goto LABEL_32;
        }
        if (v5 + 1 == *(void *)(v22 + 16)) {
          unint64_t v5 = 0;
        }
        else {
          ++v5;
        }
      }
      while (v6 < 9);
      sub_20B8EC000((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      uint64_t v1 = v1;
      id v10 = sub_20B9267D8();
      LOBYTE(v7) = sub_20B926B18();
      if (os_log_type_enabled(v10, (os_log_type_t)v7))
      {
        unint64_t v5 = swift_slowAlloc();
        *(_DWORD *)unint64_t v5 = 134217984;
        swift_beginAccess();
        if (!((unint64_t)v8->isa >> 62))
        {
LABEL_25:
          sub_20B926BC8();

          _os_log_impl(&dword_20B8D3000, v10, (os_log_type_t)v7, "[createEmojiViews] created %ld emoji views", (uint8_t *)v5, 0xCu);
          MEMORY[0x21053B150](v5, -1, -1);
          goto LABEL_29;
        }
LABEL_34:
        swift_bridgeObjectRetain();
        sub_20B926D58();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
LABEL_28:

LABEL_29:
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_20B8F07BC()
{
  sub_20B8F1C5C();
  uint64_t v1 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews);
  swift_beginAccess();
  unint64_t v2 = *v1;
  unint64_t v30 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_28:
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_20B926D58();
  if (!v3) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t v29 = OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation;
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  unint64_t v6 = v30 + 32;
  uint64_t v7 = 1;
  uint64_t v8 = v3;
  while (1)
  {
    uint64_t v9 = 0;
    double v31 = 360.0 / (double)(6 * v4);
    unint64_t v28 = v6 + 8 * v5;
    while (1)
    {
      unint64_t v10 = v5 + v9;
      if ((v30 & 0xC000000000000001) != 0)
      {
        id v11 = (id)MEMORY[0x21053A2B0](v5 + v9, v30);
      }
      else
      {
        if (v10 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_27;
        }
        id v11 = *(id *)(v28 + 8 * v9);
      }
      id v12 = v11;
      BOOL v13 = __OFADD__(v10, 1);
      unint64_t v14 = v10 + 1;
      if (v13)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      double v15 = 0.0;
      if (!(v4 | v9))
      {
        unint64_t v16 = *(void *)(v0 + v29) - 2;
        if (v16 <= 2) {
          double v15 = dbl_20B92B198[v16];
        }
      }
      CGAffineTransformMakeRotation(&t1, v15);
      CGFloat a = t1.a;
      CGFloat b = t1.b;
      CGFloat c = t1.c;
      CGFloat d = t1.d;
      tCGFloat x = t1.tx;
      tCGFloat y = t1.ty;
      double v23 = 0.0;
      if (v4) {
        double v23 = v31 * (double)v9;
      }
      objc_msgSend(v12, sel_setCenter_, sub_20B8F1D30(v4, v15 + v23));
      sub_20B8F1C5C();
      id v24 = v12;
      objc_msgSend(v24, sel_bounds);
      objc_msgSend(v24, sel_setBounds_);

      if (v4)
      {
        CGAffineTransformMakeRotation(&t1, (360.0 - v31 * (double)v9) * -0.0174532925);
        long long v25 = *(_OWORD *)&t1.a;
        long long v26 = *(_OWORD *)&t1.c;
        long long v27 = *(_OWORD *)&t1.tx;
      }
      else
      {
        long long v27 = 0uLL;
        long long v25 = xmmword_20B9294D0;
        long long v26 = xmmword_20B92B0B0;
      }
      *(_OWORD *)&t1.CGFloat a = v25;
      *(_OWORD *)&t1.CGFloat c = v26;
      *(_OWORD *)&t1.tCGFloat x = v27;
      t2.CGFloat a = a;
      t2.CGFloat b = b;
      t2.CGFloat c = c;
      t2.CGFloat d = d;
      t2.tCGFloat x = tx;
      t2.tCGFloat y = ty;
      CGAffineTransformConcat(&v32, &t1, &t2);
      CGAffineTransform t1 = v32;
      objc_msgSend(v24, sel_setTransform_, &t1);

      if (__OFADD__(v9, 1)) {
        goto LABEL_26;
      }
      if (v9 + 1 == v7) {
        break;
      }
      ++v9;
      if (v14 == v8) {
        goto LABEL_29;
      }
    }
    ++v4;
    uint64_t v7 = 6 * v4;
    if ((unsigned __int128)(v4 * (__int128)6) >> 64 != (6 * v4) >> 63) {
      break;
    }
    if (v14 == v8) {
      goto LABEL_29;
    }
    unint64_t v5 = v14;
    unint64_t v6 = v30 + 32;
  }
  __break(1u);
}

void sub_20B8F0BC4()
{
  uint64_t v3 = v1;
  sub_20B8F1C5C();
  swift_retain();
  id v4 = objc_msgSend(v1, sel_view);
  if (!v4) {
    goto LABEL_79;
  }
  unint64_t v5 = v4;
  objc_msgSend(v4, sel_bounds);

  unint64_t v6 = &v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews];
  swift_beginAccess();
  if (*(void *)v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)v6;
  uint64_t v9 = *(void *)v6 >> 62;
  if (v7 > 216)
  {
    if (!v9)
    {
      if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < 218)
      {
LABEL_58:
        swift_release();
        return;
      }
LABEL_18:
      if (*(void *)v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_20B926D58();
        swift_bridgeObjectRelease();
        uint64_t v18 = v45 - 217;
        if (!__OFSUB__(v45, 217))
        {
LABEL_20:
          uint64_t v19 = sub_20B9267D8();
          os_log_type_t v20 = sub_20B926B18();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v0 = 12;
            id v21 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)id v21 = 134217984;
            sub_20B926BC8();
            _os_log_impl(&dword_20B8D3000, v19, v20, "[updateEmojiViews] removing %ld emoji views", v21, 0xCu);
            MEMORY[0x21053B150](v21, -1, -1);
          }

          if (!(*(void *)v6 >> 62))
          {
            uint64_t v22 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v23 = v22 - v18;
            if (!__OFSUB__(v22, v18)) {
              goto LABEL_24;
            }
            goto LABEL_64;
          }
LABEL_62:
          swift_bridgeObjectRetain();
          uint64_t v46 = sub_20B926D58();
          swift_bridgeObjectRelease();
          uint64_t v23 = v46 - v18;
          if (!__OFSUB__(v46, v18))
          {
LABEL_24:
            if (!(*(void *)v6 >> 62))
            {
              uint64_t v24 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v24 >= v23) {
                goto LABEL_26;
              }
              goto LABEL_66;
            }
LABEL_65:
            swift_bridgeObjectRetain();
            uint64_t v24 = sub_20B926D58();
            swift_bridgeObjectRelease();
            if (v24 >= v23)
            {
LABEL_26:
              uint64_t v2 = *(void *)v6;
              uint64_t v0 = *(void *)v6 >> 62;
              if (!v0)
              {
                uint64_t v25 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (v25 >= v23) {
                  goto LABEL_28;
                }
                goto LABEL_68;
              }
LABEL_67:
              swift_bridgeObjectRetain_n();
              uint64_t v47 = sub_20B926D58();
              swift_bridgeObjectRelease();
              if (v47 >= v23)
              {
LABEL_28:
                if ((v23 & 0x8000000000000000) == 0)
                {
                  if (v0)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v26 = sub_20B926D58();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    uint64_t v26 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  }
                  if (v26 >= v24)
                  {
                    if ((v2 & 0xC000000000000001) != 0 && v23 != v24)
                    {
                      if (v23 >= (unint64_t)v24)
                      {
LABEL_76:
                        __break(1u);
                        goto LABEL_77;
                      }
                      sub_20B8EEF9C();
                      uint64_t v30 = v23;
                      do
                      {
                        uint64_t v31 = v30 + 1;
                        sub_20B926C68();
                        uint64_t v30 = v31;
                      }
                      while (v24 != v31);
                    }
                    if (v0)
                    {
                      swift_bridgeObjectRetain();
                      sub_20B926D68();
                      uint64_t v32 = v35;
                      uint64_t v23 = v36;
                      unint64_t v38 = v37;
                      swift_bridgeObjectRelease_n();
                      v38 >>= 1;
                      uint64_t v34 = v38 - v23;
                      BOOL v33 = (uint64_t)v38 <= v23;
                      if (v38 == v23) {
                        goto LABEL_49;
                      }
                    }
                    else
                    {
                      uint64_t v32 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
                      uint64_t v34 = v24 - v23;
                      BOOL v33 = v24 <= v23;
                      if (v24 == v23) {
                        goto LABEL_49;
                      }
                    }
                    if (v33)
                    {
LABEL_77:
                      __break(1u);
LABEL_78:
                      __break(1u);
LABEL_79:
                      __break(1u);
                      return;
                    }
                    swift_unknownObjectRetain();
                    unint64_t v39 = (void **)(v32 + 8 * v23);
                    do
                    {
                      int v40 = *v39++;
                      objc_msgSend(v40, sel_removeFromSuperview);
                      --v34;
                    }
                    while (v34);
                    swift_unknownObjectRelease();
LABEL_49:
                    if (!(*(void *)v6 >> 62))
                    {
                      uint64_t v41 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      uint64_t v42 = v41 - v18;
                      if (!__OFSUB__(v41, v18)) {
                        goto LABEL_51;
                      }
                      goto LABEL_73;
                    }
LABEL_71:
                    swift_bridgeObjectRetain();
                    uint64_t v48 = sub_20B926D58();
                    swift_bridgeObjectRelease();
                    uint64_t v42 = v48 - v18;
                    if (!__OFSUB__(v48, v18))
                    {
LABEL_51:
                      if (!(*(void *)v6 >> 62))
                      {
                        uint64_t v43 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v43 >= v42)
                        {
LABEL_53:
                          swift_beginAccess();
                          sub_20B8FD2A8(v42, v43);
                          swift_endAccess();
                          swift_release();
                          swift_unknownObjectRelease();
                          return;
                        }
                        goto LABEL_75;
                      }
LABEL_74:
                      swift_bridgeObjectRetain();
                      uint64_t v43 = sub_20B926D58();
                      swift_bridgeObjectRelease();
                      if (v43 >= v42) {
                        goto LABEL_53;
                      }
LABEL_75:
                      __break(1u);
                      goto LABEL_76;
                    }
LABEL_73:
                    __break(1u);
                    goto LABEL_74;
                  }
LABEL_70:
                  __break(1u);
                  goto LABEL_71;
                }
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v18 = v17 - 217;
        if (!__OFSUB__(v17, 217)) {
          goto LABEL_20;
        }
      }
      __break(1u);
      goto LABEL_62;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v44 < 218) {
      goto LABEL_58;
    }
    goto LABEL_18;
  }
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(217, v10))
  {
    __break(1u);
    goto LABEL_57;
  }
  if (217 - v10 >= 1)
  {
    uint64_t v11 = v10 - 217;
    do
    {
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
      objc_msgSend(v12, sel_setContentMode_, 1);
      id v13 = objc_msgSend(v3, sel_view);
      if (!v13) {
        goto LABEL_78;
      }
      unint64_t v14 = v13;
      objc_msgSend(v13, sel_addSubview_, v12);

      swift_beginAccess();
      id v15 = v12;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        sub_20B926AC8();
      sub_20B926AD8();
      sub_20B926AB8();
      swift_endAccess();
    }
    while (!__CFADD__(v11++, 1));
  }
  long long v27 = sub_20B9267D8();
  os_log_type_t v28 = sub_20B926B18();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 134217984;
    sub_20B926BC8();
    _os_log_impl(&dword_20B8D3000, v27, v28, "[updateEmojiViews] creating %ld new emoji views", v29, 0xCu);
    MEMORY[0x21053B150](v29, -1, -1);
  }
  swift_release();
}

void sub_20B8F12E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v31);
  sub_20B8EBE30((uint64_t)v31, (uint64_t)v32);
  if (sub_20B8EEAF4((uint64_t)v32) == 1) {
    return;
  }
  sub_20B8EBE30((uint64_t)v31, (uint64_t)v29);
  sub_20B8EBE30((uint64_t)v31, (uint64_t)v30);
  sub_20B8E7960(v30);
  sub_20B8E7960(v29);
  uint64_t v3 = sub_20B9267D8();
  os_log_type_t v4 = sub_20B926B18();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v28[0] = v6;
    *(_DWORD *)unint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
    sub_20B8EEF40();
    uint64_t v7 = sub_20B9268D8();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v27[0] = sub_20B91B148(v7, v9, v28);
    sub_20B926BC8();
    swift_bridgeObjectRelease();
    sub_20B8EC000((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EC000((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    _os_log_impl(&dword_20B8D3000, v3, v4, "Updating for changed emoji: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21053B150](v6, -1, -1);
    MEMORY[0x21053B150](v5, -1, -1);
  }
  else
  {

    sub_20B8EC000((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EC000((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  }
  uint64_t v10 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages];
  swift_beginAccess();
  *(void *)uint64_t v10 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  sub_20B8EFFD8();
  sub_20B8F0BC4();
  sub_20B8EBE30(v2, (uint64_t)v27);
  sub_20B8EBE30((uint64_t)v27, (uint64_t)v28);
  if (sub_20B8EEAF4((uint64_t)v28) == 1) {
    return;
  }
  sub_20B8EBE30((uint64_t)v27, (uint64_t)v26);
  sub_20B8E7960(v26);
  uint64_t v24 = sub_20B8F1C5C();
  swift_retain();
  id v11 = objc_msgSend(v1, sel_view);
  if (!v11) {
    goto LABEL_39;
  }
  id v12 = v11;
  objc_msgSend(v11, sel_bounds);

  unint64_t v13 = 0;
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  unint64_t v16 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews];
  uint64_t v25 = *(void *)(v28[14] + 16);
LABEL_8:
  swift_beginAccess();
  uint64_t v17 = 1;
  while (1)
  {
    uint64_t v18 = *(void *)v16;
    if ((*(void *)v16 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v19 = (id)MEMORY[0x21053A2B0](v14, v18);
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v20 = *(void *)v10;
    if ((*(void *)v10 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v21 = (id)MEMORY[0x21053A2B0](v13, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_34;
      }
      if (v13 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_36;
      }
      id v21 = *(id *)(v20 + 8 * v13 + 32);
    }
    objc_msgSend(v19, sel_setImage_, v21, v24);

    if (v14 == 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_35;
    }
    ++v14;
    if (v15)
    {
      if (6 * v15 > v17++) {
        continue;
      }
    }
    if (__OFADD__(v15++, 1)) {
      goto LABEL_37;
    }
    if (__OFADD__(v13, 1)) {
      goto LABEL_38;
    }
    if (v13 + 1 == v25) {
      unint64_t v13 = 0;
    }
    else {
      ++v13;
    }
    if (v15 >= 9)
    {
      sub_20B8EC000((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      swift_release();
      return;
    }
    goto LABEL_8;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (v14 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_33;
    }
    id v19 = *(id *)(v18 + 8 * v14 + 32);
    goto LABEL_13;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

id EmojiForegroundCircularLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundCircularLayersViewController.init(nibName:bundle:)()
{
}

id EmojiForegroundCircularLayersViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20B8F1988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8F1A08(uint64_t a1)
{
  return sub_20B8EF584(a1);
}

void (*sub_20B8F1A2C(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B8EF738(v2);
  return sub_20B8EE710;
}

double sub_20B8F1A88()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8F1AD4(uint64_t a1, uint64_t a2, double a3)
{
}

uint64_t (*sub_20B8F1AE0(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8EF984;
}

double sub_20B8F1B44()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8F1B90(uint64_t a1, uint64_t a2, double a3)
{
}

void sub_20B8F1B9C(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  double *v6 = a1;
  sub_20B8F07BC();
}

uint64_t (*sub_20B8F1BF4(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8EF984;
}

double *sub_20B8F1C5C()
{
  uint64_t result = (double *)objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  objc_super v2 = result;
  objc_msgSend(result, sel_bounds);
  double v4 = v3;
  double v6 = v5;

  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider;
  uint64_t result = *(double **)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider];
  if (!result
    || (result[3] == v4 ? (BOOL v8 = result[4] == v6) : (BOOL v8 = 0),
        !v8
     && (*(void *)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider] = 0,
         swift_release(),
         (uint64_t result = *(double **)&v0[v7]) == 0)))
  {
    type metadata accessor for CircularLayoutProvider();
    uint64_t v9 = swift_allocObject();
    sub_20B9018B8((char *)(v9 + 16));
    *(double *)(v9 + 24) = v4;
    *(double *)(v9 + 32) = v6;
    *(void *)&v0[v7] = v9;
    swift_release();
    uint64_t result = *(double **)&v0[v7];
    if (!result) {
      goto LABEL_11;
    }
  }
  return result;
}

double sub_20B8F1D30(uint64_t a1, double a2)
{
  id v5 = objc_msgSend(v2, sel_view);
  if (!v5) {
    return 0.0;
  }
  double v6 = v5;
  sub_20B8F1C5C();
  double v7 = sub_20B9264D4(a1);
  swift_retain();
  objc_msgSend(v6, sel_bounds);
  double MidX = CGRectGetMidX(v16);
  objc_msgSend(v6, sel_bounds);
  double v9 = CGRectGetMidY(v17) - v7;
  objc_msgSend(v6, sel_bounds);
  double v10 = CGRectGetMidX(v18);
  objc_msgSend(v6, sel_bounds);
  double MidY = CGRectGetMidY(v19);
  swift_release();

  if (a2 > 0.0)
  {
    long double v12 = v9 - MidY;
    double v13 = sqrt((MidX - v10) * (MidX - v10) + v12 * v12);
    long double v14 = atan2(v12, MidX - v10);
    return v10 + v13 * __sincos_stret(a2 * 0.0174532925 + v14).__cosval;
  }
  return MidX;
}

id sub_20B8F1E6C(uint64_t a1)
{
  double v3 = v1;
  sub_20B9267E8();
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation] = 1;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateEmojiWithDevice] = 0;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateCenterEmojiWithDevice] = 1;
  uint64_t v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  sub_20B8EEA8C(v8);
  sub_20B8EBE30((uint64_t)v8, v4);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages] = v5;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  return objc_msgSendSuper2(&v7, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for EmojiForegroundCircularLayersViewController()
{
  uint64_t result = qword_26ACA30A0;
  if (!qword_26ACA30A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_20B8F2024@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress, a2);
}

void sub_20B8F2030(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

double sub_20B8F203C@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress, a2);
}

void sub_20B8F2048(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void keypath_set_6Tm_0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  double v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v6 = v5;
  sub_20B8F07BC();
}

uint64_t sub_20B8F20AC()
{
  return type metadata accessor for EmojiForegroundCircularLayersViewController();
}

uint64_t sub_20B8F20B4()
{
  uint64_t result = sub_20B9267F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for EmojiForegroundCircularLayersViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiForegroundCircularLayersViewController);
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.configuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.configuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.configuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.wakeProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.wakeProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.wakeProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.unlockProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.unlockProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.unlockProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.__allocating_init(emojiRenderer:)()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t sub_20B8F2400()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B8F2438()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t dispatch thunk of EmojiConfigurationHandling.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.configuration.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.wakeProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.wakeProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.wakeProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.unlockProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.unlockProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.unlockProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

void sub_20B8F2504(char *a1)
{
  char v2 = *a1;
  double v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant);
  swift_beginAccess();
  unsigned char *v3 = v2;
  id v4 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v4, sel_bounds);
  uint64_t v6 = v5;
  uint64_t v8 = v7;

  type metadata accessor for CircularLayoutProvider();
  uint64_t v9 = swift_allocObject();
  sub_20B9018B8((char *)(v9 + 16));
  *(void *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v8;
  *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) = v9;
  swift_release();
  sub_20B8F381C();
}

void (*sub_20B8F25D8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8F2638;
}

void sub_20B8F2638(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    id v5 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v5, sel_bounds);
    uint64_t v7 = v6;
    uint64_t v9 = v8;

    type metadata accessor for CircularLayoutProvider();
    uint64_t v10 = swift_allocObject();
    sub_20B9018B8((char *)(v10 + 16));
    *(void *)(v10 + 24) = v7;
    *(void *)(v10 + 32) = v9;
    *(void *)(v4 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) = v10;
    swift_release();
    sub_20B8F381C();
  }
}

void sub_20B8F26E8(uint64_t a1)
{
  double v3 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji];
  swift_beginAccess();
  *(void *)double v3 = a1;
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeAllChildren);
  uint64_t v4 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures];
  swift_beginAccess();
  *(void *)uint64_t v4 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  if (!*(void *)(*(void *)v3 + 16)) {
    return;
  }
  sub_20B8F3430();
  objc_msgSend(v1, sel_size);
  unint64_t v5 = 0;
  uint64_t v6 = 0;
LABEL_3:
  uint64_t v7 = 1;
  while (1)
  {
    uint64_t v8 = *(void *)v4;
    if ((*(void *)v4 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v9 = (id)MEMORY[0x21053A2B0](v5, v8);
    swift_bridgeObjectRelease();
LABEL_8:
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C20]), sel_initWithTexture_, v9);

    id v11 = v10;
    long double v12 = (void *)sub_20B926908();
    objc_msgSend(v11, sel_setName_, v12);

    objc_msgSend(v1, sel_addChild_, v11);
    if (v6)
    {
      if (6 * v6 > v7++) {
        continue;
      }
    }
    if (__OFADD__(v6++, 1)) {
      goto LABEL_23;
    }
    if (__OFADD__(v5, 1)) {
      goto LABEL_24;
    }
    if (v5 + 1 == *(void *)(*(void *)v3 + 16)) {
      unint64_t v5 = 0;
    }
    else {
      ++v5;
    }
    if (v6 >= 9)
    {
      sub_20B8F381C();
      return;
    }
    goto LABEL_3;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v5 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_22;
    }
    id v9 = *(id *)(v8 + 8 * v5 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void (*sub_20B8F28FC(void *a1))(void **a1, char a2)
{
  double v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_20B8F2968;
}

void sub_20B8F2968(void **a1, char a2)
{
  double v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0
    || (uint64_t v4 = (char *)v3[3],
        uint64_t v5 = v3[4],
        objc_msgSend(v4, sel_removeAllChildren),
        uint64_t v6 = &v4[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures],
        swift_beginAccess(),
        *(void *)uint64_t v6 = MEMORY[0x263F8EE78],
        swift_bridgeObjectRelease(),
        !*(void *)(*(void *)&v4[v5] + 16)))
  {
LABEL_19:
    free(v3);
    return;
  }
  uint64_t v7 = (void *)v3[3];
  sub_20B8F3430();
  objc_msgSend(v7, sel_size);
  unint64_t v8 = 0;
  uint64_t v9 = 0;
LABEL_4:
  unint64_t v10 = 1;
  while (1)
  {
    uint64_t v11 = *(void *)v6;
    if ((*(void *)v6 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v12 = (id)MEMORY[0x21053A2B0](v8, v11);
    swift_bridgeObjectRelease();
LABEL_9:
    double v13 = (void *)v3[3];
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C20]), sel_initWithTexture_, v12);

    id v15 = v14;
    CGRect v16 = (void *)sub_20B926908();
    objc_msgSend(v15, sel_setName_, v16);

    objc_msgSend(v13, sel_addChild_, v15);
    if (v9)
    {
      if (6 * v9 > v10++) {
        continue;
      }
    }
    if (__OFADD__(v8, 1)) {
      goto LABEL_24;
    }
    ++v9;
    if (v8 + 1 == *(void *)(*(void *)(v3[3] + v3[4]) + 16)) {
      unint64_t v8 = 0;
    }
    else {
      ++v8;
    }
    if (v9 == 9)
    {
      sub_20B8F381C();
      goto LABEL_19;
    }
    goto LABEL_4;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_23;
    }
    id v12 = *(id *)(v11 + 8 * v8 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

id sub_20B8F2B6C(void *a1)
{
  v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant] = 1;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji] = &unk_26C066430;
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 10;
  id v5 = objc_allocWithZone(MEMORY[0x263EFF8E0]);
  uint64_t v6 = v1;
  id v7 = objc_msgSend(v5, sel_init);
  *(void *)(v4 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(void *)&v1[v3] = v4;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures] = MEMORY[0x263F8EE78];
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider;
  id v9 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v9, sel_bounds);
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  type metadata accessor for CircularLayoutProvider();
  uint64_t v14 = swift_allocObject();
  sub_20B9018B8((char *)(v14 + 16));
  *(void *)(v14 + 24) = v11;
  *(void *)(v14 + 32) = v13;
  *(void *)&v6[v8] = v14;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress] = 0x3FF0000000000000;

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for CircularScene();
  id v15 = objc_msgSendSuper2(&v20, sel_initWithCoder_, a1);
  if (v15)
  {
    CGRect v16 = self;
    id v17 = v15;
    id v18 = objc_msgSend(v16, sel_clearColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v18);
  }
  return v15;
}

id sub_20B8F2D84(double a1, double a2)
{
  v2[OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant] = 1;
  *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji] = &unk_26C066460;
  uint64_t v5 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 10;
  id v7 = objc_allocWithZone(MEMORY[0x263EFF8E0]);
  uint64_t v8 = v2;
  id v9 = objc_msgSend(v7, sel_init);
  *(void *)(v6 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(void *)&v2[v5] = v6;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures] = MEMORY[0x263F8EE78];
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider;
  id v11 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v11, sel_bounds);
  uint64_t v13 = v12;
  uint64_t v15 = v14;

  type metadata accessor for CircularLayoutProvider();
  uint64_t v16 = swift_allocObject();
  sub_20B9018B8((char *)(v16 + 16));
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(void *)&v8[v10] = v16;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress] = 0x3FF0000000000000;

  v22.receiver = v8;
  v22.super_class = (Class)type metadata accessor for CircularScene();
  id v17 = objc_msgSendSuper2(&v22, sel_initWithSize_, a1, a2);
  id v18 = self;
  id v19 = v17;
  id v20 = objc_msgSend(v18, sel_clearColor);
  objc_msgSend(v19, sel_setBackgroundColor_, v20);

  return v19;
}

void sub_20B8F2F98(uint64_t a1)
{
  objc_msgSend(v1, sel_removeAllChildren);
  uint64_t v3 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures];
  swift_beginAccess();
  *(void *)uint64_t v3 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v4 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji];
  swift_beginAccess();
  if (!*(void *)(*(void *)v4 + 16))
  {
LABEL_20:
    v15.receiver = v1;
    v15.super_class = (Class)type metadata accessor for CircularScene();
    objc_msgSendSuper2(&v15, sel_didMoveToView_, a1);
    return;
  }
  sub_20B8F3430();
  objc_msgSend(v1, sel_size);
  unint64_t v5 = 0;
  uint64_t v6 = 0;
LABEL_3:
  uint64_t v7 = 1;
  while (1)
  {
    uint64_t v8 = *(void *)v3;
    if ((*(void *)v3 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v9 = (id)MEMORY[0x21053A2B0](v5, v8);
    swift_bridgeObjectRelease();
LABEL_8:
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C20]), sel_initWithTexture_, v9);

    id v11 = v10;
    uint64_t v12 = (void *)sub_20B926908();
    objc_msgSend(v11, sel_setName_, v12);

    objc_msgSend(v1, sel_addChild_, v11);
    if (v6)
    {
      if (6 * v6 > v7++) {
        continue;
      }
    }
    if (__OFADD__(v6++, 1)) {
      goto LABEL_23;
    }
    if (__OFADD__(v5, 1)) {
      goto LABEL_24;
    }
    if (v5 + 1 == *(void *)(*(void *)v4 + 16)) {
      unint64_t v5 = 0;
    }
    else {
      ++v5;
    }
    if (v6 >= 9)
    {
      sub_20B8F381C();
      goto LABEL_20;
    }
    goto LABEL_3;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v5 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_22;
    }
    id v9 = *(id *)(v8 + 8 * v5 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_20B8F322C()
{
  objc_msgSend(v0, sel_removeAllChildren);
  uint64_t v1 = &v0[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures];
  swift_beginAccess();
  *(void *)uint64_t v1 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  char v2 = &v0[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji];
  swift_beginAccess();
  if (!*(void *)(*(void *)v2 + 16)) {
    return;
  }
  sub_20B8F3430();
  objc_msgSend(v0, sel_size);
  unint64_t v3 = 0;
  uint64_t v4 = 0;
LABEL_3:
  uint64_t v5 = 1;
  while (1)
  {
    uint64_t v6 = *(void *)v1;
    if ((*(void *)v1 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v7 = (id)MEMORY[0x21053A2B0](v3, v6);
    swift_bridgeObjectRelease();
LABEL_8:
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C20]), sel_initWithTexture_, v7);

    id v9 = v8;
    id v10 = (void *)sub_20B926908();
    objc_msgSend(v9, sel_setName_, v10);

    objc_msgSend(v0, sel_addChild_, v9);
    if (v4)
    {
      if (6 * v4 > v5++) {
        continue;
      }
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_23;
    }
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v3 + 1 == *(void *)(*(void *)v2 + 16)) {
      unint64_t v3 = 0;
    }
    else {
      ++v3;
    }
    if (v4 >= 9)
    {
      sub_20B8F381C();
      return;
    }
    goto LABEL_3;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    if (v3 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_22;
    }
    id v7 = *(id *)(v6 + 8 * v3 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_20B8F3430()
{
  uint64_t v1 = v0;
  char v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5)
  {
    uint64_t v6 = self;
    id v7 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures);
    uint64_t v29 = *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiRenderer);
    swift_bridgeObjectRetain();
    id v8 = (uint64_t *)(v4 + 40);
    int64x2_t v27 = vdupq_n_s64(0x4069000000000000uLL);
    uint64_t v26 = v6;
    os_log_type_t v28 = v7;
    while (1)
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      id v11 = objc_allocWithZone(NSString);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = (void *)sub_20B926908();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v11, sel_initWithString_, v12);

      id v14 = objc_msgSend(*(id *)(v29 + 24), sel_objectForKey_, v13);
      if (v14)
      {
        id v15 = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
        objc_msgSend(v16, sel_setOpaque_, 0);
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v16, 200.0, 200.0);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v9;
        *(void *)(v18 + 24) = v10;
        *(int64x2_t *)(v18 + 32) = v27;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = sub_20B8EF014;
        *(void *)(v19 + 24) = v18;
        aBlock[4] = sub_20B8EF030;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_20B8F48A4;
        aBlock[3] = &block_descriptor_33;
        id v20 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        id v21 = objc_msgSend(v17, sel_imageWithActions_, v20);
        _Block_release(v20);
        LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v20)
        {
          __break(1u);
          return result;
        }
        objc_super v22 = *(void **)(v29 + 24);
        id v15 = v21;
        id v23 = v22;
        objc_msgSend(v23, sel_setObject_forKey_, v15, v13);
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v6 = v26;
      }

      id v24 = objc_msgSend(v6, sel_textureWithImage_, v15);
      swift_beginAccess();
      id v25 = v24;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20B926AC8();
      }
      v8 += 2;
      sub_20B926AD8();
      sub_20B926AB8();
      swift_endAccess();

      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_20B8F381C()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 1;
  uint64_t v4 = (void *)sub_20B926908();
  uint64_t v5 = (void *)swift_allocObject();
  CGColorRef v5[2] = v0;
  v5[3] = v2;
  v5[4] = v1;
  v5[5] = v3;
  v8[4] = sub_20B8F412C;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_20B9222BC;
  v8[3] = &block_descriptor_1;
  uint64_t v6 = _Block_copy(v8);
  id v7 = v0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_enumerateChildNodesWithName_usingBlock_, v4, v6);
  _Block_release(v6);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20B8F39AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result) {
    return result;
  }
  id v11 = (void *)result;
  uint64_t v12 = (uint64_t *)(a4 + 16);
  id v13 = (uint64_t *)(a5 + 16);
  swift_beginAccess();
  uint64_t v14 = *v12;
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *v13;
  if (*v13 < 1)
  {
    double v16 = 0.0;
  }
  else
  {
    if ((unsigned __int128)(v15 * (__int128)6) >> 64 != (6 * v15) >> 63)
    {
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    double v16 = 360.0 / (double)(6 * v15) * (double)v14;
  }
  id v17 = a1;
  objc_msgSend(v11, sel_setPosition_, sub_20B8F4150(v15, v16));
  objc_msgSend(v11, sel_scaleToSize_, sub_20B8F4284());

  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v12 + 1;
  if (__OFADD__(*v12, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v19 = (uint64_t *)(a6 + 16);
  swift_beginAccess();
  if (v18 == *(void *)(a6 + 16))
  {
    uint64_t result = swift_beginAccess();
    if (!__OFADD__(*v13, 1))
    {
      ++*v13;
      uint64_t v20 = 1;
      swift_beginAccess();
      *uint64_t v12 = 0;
      uint64_t result = swift_beginAccess();
      uint64_t v21 = *v13;
      if (*v13 < 1 || (uint64_t v20 = 6 * v21, (unsigned __int128)(v21 * (__int128)6) >> 64 == (6 * v21) >> 63))
      {
        uint64_t result = swift_beginAccess();
        *uint64_t v19 = v20;
        return result;
      }
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*v12, 1))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  ++*v12;
  return result;
}

id sub_20B8F3C20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CircularScene()
{
  return self;
}

uint64_t sub_20B8F3CE4()
{
  return swift_bridgeObjectRetain();
}

void sub_20B8F3D34(uint64_t a1)
{
}

void (*sub_20B8F3D58(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B8F28FC(v2);
  return sub_20B8F3DB4;
}

uint64_t sub_20B8F3DB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(*v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

void sub_20B8F3E0C(char *a1)
{
  char v1 = *a1;
  sub_20B8F2504(&v1);
}

void (*sub_20B8F3E44(void *a1))(void *)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B8F25D8((uint64_t)v2);
  return sub_20B8F3DB4;
}

double sub_20B8F3EA0()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8F3EEC(uint64_t a1, uint64_t a2, double a3)
{
}

uint64_t (*sub_20B8F3EF8(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8F3F5C;
}

double sub_20B8F3F60()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B8F3FAC(uint64_t a1, uint64_t a2, double a3)
{
}

void sub_20B8F3FB8(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  double *v6 = a1;
  sub_20B8F381C();
}

uint64_t (*sub_20B8F4010(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8F3F5C;
}

void sub_20B8F4074(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B8F381C();
  }
}

void sub_20B8F40A8()
{
}

uint64_t sub_20B8F40CC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B8F40DC()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B8F412C(void *a1, uint64_t a2)
{
  return sub_20B8F39AC(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

double sub_20B8F4150(uint64_t a1, double a2)
{
  id v5 = objc_msgSend(v2, sel_view);
  if (!v5) {
    return 0.0;
  }
  uint64_t v6 = v5;
  double v7 = sub_20B9264D4(a1);
  objc_msgSend(v6, sel_bounds);
  double MidX = CGRectGetMidX(v16);
  objc_msgSend(v6, sel_bounds);
  double v9 = v7 + CGRectGetMidY(v17);
  objc_msgSend(v6, sel_bounds);
  double v10 = CGRectGetMidX(v18);
  objc_msgSend(v6, sel_bounds);
  double MidY = CGRectGetMidY(v19);

  if (a2 > 0.0)
  {
    long double v12 = v9 - MidY;
    double v13 = sqrt((MidX - v10) * (MidX - v10) + v12 * v12);
    long double v14 = atan2(v12, MidX - v10);
    return v10 + v13 * __sincos_stret(a2 * 0.0174532925 + v14).__cosval;
  }
  return MidX;
}

double sub_20B8F4284()
{
  return dbl_20B92B270[*(char *)(*(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 16)]
       / dbl_20B92B290[*(char *)(*(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 16)]
       * (*(double *)(*(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 24)
        / dbl_20B92B2B0[*(char *)(*(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 16)]);
}

uint64_t sub_20B8F42D4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B8F430C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t EmojiRenderer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 10;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  *(void *)(v0 + 24) = v1;
  objc_msgSend(v1, sel_setCountLimit_, 10);
  return v0;
}

uint64_t EmojiRenderer.init()()
{
  *(void *)(v0 + 16) = 10;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  *(void *)(v0 + 24) = v1;
  objc_msgSend(v1, sel_setCountLimit_, 10);
  return v0;
}

uint64_t sub_20B8F43D8(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithString_, v6);

  id v8 = objc_msgSend(*(id *)(v2 + 24), sel_objectForKey_, v7);
  if (v8)
  {
    id v9 = v8;
LABEL_5:

    return (uint64_t)v9;
  }
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
  objc_msgSend(v10, sel_setOpaque_, 0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v10, 200.0, 200.0);
  long double v12 = (int64x2_t *)swift_allocObject();
  v12[1].i64[0] = a1;
  v12[1].i64[1] = a2;
  v12[2] = vdupq_n_s64(0x4069000000000000uLL);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_20B8EF014;
  *(void *)(v13 + 24) = v12;
  v19[4] = sub_20B8F487C;
  v19[5] = v13;
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 1107296256;
  CGColorRef v19[2] = sub_20B8F48A4;
  v19[3] = &block_descriptor_2;
  long double v14 = _Block_copy(v19);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v11, sel_imageWithActions_, v14);
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0)
  {
    CGRect v17 = *(void **)(v2 + 24);
    id v9 = v15;
    id v18 = v17;
    objc_msgSend(v18, sel_setObject_forKey_, v9, v7);
    swift_release();

    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_20B8F4664(double a1, double a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FA0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20B9294E0;
  id v5 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_systemFontOfSize_, 200.0);
  *(void *)(inited + 64) = sub_20B8F4A08();
  *(void *)(inited + 40) = v8;
  sub_20B9099B4(inited);
  id v9 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v10 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20B8F4A48();
  id v11 = (void *)sub_20B9268B8();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

  objc_msgSend(v12, sel_size);
  objc_msgSend(v12, sel_drawInRect_, a1 * 0.5 - v13 * 0.5, a2 * 0.5 - v14 * 0.5);
}

uint64_t sub_20B8F480C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B8F4844(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_20B8F486C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B8F487C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_20B8F48A4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

id sub_20B8F4908()
{
  return objc_msgSend(*(id *)(v0 + 24), sel_removeAllObjects);
}

uint64_t EmojiRenderer.deinit()
{
  return v0;
}

uint64_t EmojiRenderer.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for EmojiRenderer()
{
  return self;
}

uint64_t method lookup function for EmojiRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiRenderer);
}

uint64_t dispatch thunk of EmojiRenderer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EmojiRenderer.renderEmoji(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of EmojiRenderer.clearCache()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

unint64_t sub_20B8F4A08()
{
  unint64_t result = qword_26ACA2EE8;
  if (!qword_26ACA2EE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACA2EE8);
  }
  return result;
}

unint64_t sub_20B8F4A48()
{
  unint64_t result = qword_26ACA2EC8;
  if (!qword_26ACA2EC8)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2EC8);
  }
  return result;
}

uint64_t sub_20B8F4AA0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer);
  swift_beginAccess();
  void *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_20B8F4B0C()
{
  return swift_retain();
}

uint64_t sub_20B8F4B58(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_20B8F4BAC())()
{
  return j__swift_endAccess;
}

void sub_20B8F4C0C(uint64_t a1, char a2)
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC);
  if (v3)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 8);
    id v9 = v3;
    v8(a1, a2 & 1, ObjectType, v6);
  }
}

uint64_t sub_20B8F4CD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a2);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8F4D58(uint64_t a1, void *a2)
{
  sub_20B8EBE30(a1, (uint64_t)v6);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v7);
  sub_20B8EBE30(v3, (uint64_t)v8);
  sub_20B8EBE30((uint64_t)v6, v3);
  sub_20B8EC000((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30((uint64_t)v7, (uint64_t)v5);
  sub_20B8F4E44((uint64_t)v5);
  return sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

void sub_20B8F4E44(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_20B8EBE30(a1, (uint64_t)v117);
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration];
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v118);
  sub_20B8EBE30((uint64_t)v118, (uint64_t)v119);
  int v4 = 3;
  if (sub_20B8EEAF4((uint64_t)v119) != 1) {
    int v4 = *(unsigned __int8 *)(v3 + 106);
  }
  sub_20B8EBE30((uint64_t)v117, (uint64_t)v116);
  int v5 = sub_20B8EEAF4((uint64_t)v116);
  unsigned __int8 v6 = v116[106];
  if (v5 == 1) {
    unsigned __int8 v6 = 3;
  }
  if (v4 == 3)
  {
    if (v6 != 3) {
      goto LABEL_14;
    }
  }
  else if (v6 == 3 || v4 != v6)
  {
LABEL_14:
    id v13 = sub_20B8F64C8();
    if (!v13) {
      return;
    }
    id v15 = v13;
    uint64_t v16 = v14;
    CGRect v17 = &v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
    id v18 = *(void **)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
    if (!v18)
    {
      id v28 = v13;
      goto LABEL_30;
    }
    id v19 = v13;
    id v20 = v18;
    id v21 = objc_msgSend(v20, sel_viewIfLoaded);
    if (!v21)
    {

      goto LABEL_30;
    }
    objc_super v22 = v21;
    id v23 = objc_msgSend(v21, sel_superview);
    id v24 = objc_msgSend(v2, sel_view);
    id v25 = v24;
    if (v23)
    {
      if (!v24)
      {

LABEL_30:
        id v29 = objc_msgSend(v15, sel_view);
        if (v29)
        {
          uint64_t v30 = v29;
          objc_msgSend(v29, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

          objc_msgSend(v2, sel_addChildViewController_, v15);
          id v31 = objc_msgSend(v2, sel_view);
          if (v31)
          {
            uint64_t v32 = v31;
            id v33 = objc_msgSend(v15, sel_view);
            if (v33)
            {
              uint64_t v34 = v33;
              objc_msgSend(v32, sel_addSubview_, v33);

              objc_msgSend(v15, sel_didMoveToParentViewController_, v2);
              uint64_t v35 = *(void **)v17;
              *(void *)CGRect v17 = v15;
              *((void *)v17 + 1) = v16;
              id v36 = v15;

              uint64_t v37 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView;
              id v38 = *(id *)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView];
              id v39 = objc_msgSend(v2, sel_view);
              if (v39)
              {
                int v40 = v39;
                objc_msgSend(v39, sel_bounds);
                double v42 = v41;
                double v44 = v43;
                double v46 = v45;
                double v48 = v47;

                objc_msgSend(v38, sel_setFrame_, v42, v44, v46, v48);
                objc_msgSend(*(id *)&v2[v37], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                uint64_t v49 = *(void **)&v2[v37];
                uint64_t v50 = self;
                id v51 = v49;
                id v52 = objc_msgSend(v50, sel_blackColor);
                objc_msgSend(v51, sel_setBackgroundColor_, v52);

                objc_msgSend(*(id *)&v2[v37], sel_setAlpha_, 0.0);
                id v53 = objc_msgSend(v2, sel_view);
                if (v53)
                {
                  unsigned int v54 = v53;
                  objc_msgSend(v53, sel_addSubview_, *(void *)&v2[v37]);

                  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2FD0);
                  uint64_t v55 = swift_allocObject();
                  *(_OWORD *)(v55 + 16) = xmmword_20B92B310;
                  id v56 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                  if (v56)
                  {
                    long long v57 = v56;
                    id v58 = objc_msgSend(v56, sel_leadingAnchor);

                    id v59 = objc_msgSend(v36, (SEL)&selRef_leadingAnchor);
                    if (v59)
                    {
                      long long v60 = v59;
                      id v61 = objc_msgSend(v59, sel_leadingAnchor);

                      id v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v61);
                      *(void *)(v55 + 32) = v62;
                      id v63 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                      if (v63)
                      {
                        uint64_t v64 = v63;
                        id v65 = objc_msgSend(v63, sel_trailingAnchor);

                        id v66 = objc_msgSend(v36, (SEL)&selRef_leadingAnchor);
                        if (v66)
                        {
                          uint64_t v67 = v66;
                          id v68 = objc_msgSend(v66, sel_trailingAnchor);

                          id v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v68);
                          *(void *)(v55 + 40) = v69;
                          id v70 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                          if (v70)
                          {
                            uint64_t v71 = v70;
                            id v72 = objc_msgSend(v70, sel_topAnchor);

                            id v73 = objc_msgSend(v36, (SEL)&selRef_leadingAnchor);
                            if (v73)
                            {
                              uint64_t v74 = v73;
                              id v75 = objc_msgSend(v73, sel_topAnchor);

                              id v76 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v75);
                              *(void *)(v55 + 48) = v76;
                              id v77 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                              if (v77)
                              {
                                char v78 = v77;
                                id v79 = objc_msgSend(v77, sel_bottomAnchor);

                                id v80 = objc_msgSend(v36, (SEL)&selRef_leadingAnchor);
                                if (v80)
                                {
                                  char v81 = v80;
                                  id v82 = objc_msgSend(v80, sel_bottomAnchor);

                                  id v83 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v82);
                                  *(void *)(v55 + 56) = v83;
                                  id v84 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                                  if (v84)
                                  {
                                    v85 = v84;
                                    id v86 = objc_msgSend(v84, sel_leadingAnchor);

                                    id v87 = objc_msgSend(*(id *)&v2[v37], sel_leadingAnchor);
                                    id v88 = objc_msgSend(v86, sel_constraintEqualToAnchor_, v87);

                                    *(void *)(v55 + 64) = v88;
                                    id v89 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                                    if (v89)
                                    {
                                      v90 = v89;
                                      id v91 = objc_msgSend(v89, sel_trailingAnchor);

                                      id v92 = objc_msgSend(*(id *)&v2[v37], sel_trailingAnchor);
                                      id v93 = objc_msgSend(v91, sel_constraintEqualToAnchor_, v92);

                                      *(void *)(v55 + 72) = v93;
                                      id v94 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                                      if (v94)
                                      {
                                        v95 = v94;
                                        id v96 = objc_msgSend(v94, sel_topAnchor);

                                        id v97 = objc_msgSend(*(id *)&v2[v37], sel_topAnchor);
                                        id v98 = objc_msgSend(v96, sel_constraintEqualToAnchor_, v97);

                                        *(void *)(v55 + 80) = v98;
                                        id v99 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                                        if (v99)
                                        {
                                          v100 = v99;
                                          v101 = self;
                                          id v102 = objc_msgSend(v100, sel_bottomAnchor);

                                          id v103 = objc_msgSend(*(id *)&v2[v37], sel_bottomAnchor);
                                          id v104 = objc_msgSend(v102, (SEL)&off_2640882E8 + 6, v103);

                                          *(void *)(v55 + 88) = v104;
                                          v109[0] = v55;
                                          sub_20B926AB8();
                                          sub_20B8F704C(0, &qword_26ACA2EC0);
                                          v105 = (void *)sub_20B926A78();
                                          swift_bridgeObjectRelease();
                                          objc_msgSend(v101, sel_activateConstraints_, v105);

                                          id v106 = objc_msgSend(v2, (SEL)&selRef_leadingAnchor);
                                          if (v106)
                                          {
                                            v107 = v106;
                                            objc_msgSend(v106, sel_layoutIfNeeded);

                                            return;
                                          }
LABEL_67:
                                          __break(1u);
                                          return;
                                        }
LABEL_66:
                                        __break(1u);
                                        goto LABEL_67;
                                      }
LABEL_65:
                                      __break(1u);
                                      goto LABEL_66;
                                    }
LABEL_64:
                                    __break(1u);
                                    goto LABEL_65;
                                  }
LABEL_63:
                                  __break(1u);
                                  goto LABEL_64;
                                }
LABEL_62:
                                __break(1u);
                                goto LABEL_63;
                              }
LABEL_61:
                              __break(1u);
                              goto LABEL_62;
                            }
LABEL_60:
                            __break(1u);
                            goto LABEL_61;
                          }
LABEL_59:
                          __break(1u);
                          goto LABEL_60;
                        }
LABEL_58:
                        __break(1u);
                        goto LABEL_59;
                      }
LABEL_57:
                      __break(1u);
                      goto LABEL_58;
                    }
LABEL_56:
                    __break(1u);
                    goto LABEL_57;
                  }
LABEL_55:
                  __break(1u);
                  goto LABEL_56;
                }
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }
LABEL_53:
              __break(1u);
              goto LABEL_54;
            }
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_52;
      }
      sub_20B8F704C(0, &qword_2676A5A20);
      id v26 = v23;
      char v27 = sub_20B926B98();

      if ((v27 & 1) == 0)
      {
LABEL_28:

        goto LABEL_30;
      }
    }
    else if (v24)
    {

      goto LABEL_30;
    }
    objc_msgSend(v20, sel_willMoveToParentViewController_, 0);
    objc_msgSend(v22, sel_removeFromSuperview);
    objc_msgSend(v20, sel_removeFromParentViewController);
    goto LABEL_28;
  }
  id v7 = *(void **)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
  if (v7
    && (uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8],
        v109[0] = *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC],
        v109[1] = v8,
        id v9 = v7,
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA28C8),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA28C0),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v111 + 1))
    {
      sub_20B8F6FE4(&v110, (uint64_t)v113);
      sub_20B8EBE30(v3, (uint64_t)v109);
      uint64_t v10 = v114;
      uint64_t v11 = v115;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v113, v114);
      sub_20B8EBE30((uint64_t)v109, (uint64_t)v108);
      id v12 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16);
      sub_20B8EC000((uint64_t)v109, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
      v12(v108, v10, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      return;
    }
  }
  else
  {
    uint64_t v112 = 0;
    long long v110 = 0u;
    long long v111 = 0u;
  }
  sub_20B8F6F84((uint64_t)&v110);
}

uint64_t sub_20B8F58AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8F5928(uint64_t a1)
{
  sub_20B8EBE30(a1, (uint64_t)v5);
  uint64_t v2 = v1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v6);
  sub_20B8EBE30(v2, (uint64_t)v7);
  sub_20B8EBE30((uint64_t)v5, v2);
  sub_20B8EC000((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30((uint64_t)v6, (uint64_t)v4);
  sub_20B8F4E44((uint64_t)v4);
  return sub_20B8EC000((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

void (*sub_20B8F59F4(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x3A8uLL);
  *a1 = v3;
  v3[115] = v1;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  v3[116] = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_20B8EBE30(v5, (uint64_t)v3);
  sub_20B8EBE30((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_20B8EC000((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  return sub_20B8F5AA8;
}

void sub_20B8F5AA8(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)(*a1 + 16);
  uint64_t v4 = (uint64_t)(*a1 + 32);
  uint64_t v5 = (uint64_t)(*a1 + 48);
  uint64_t v6 = (uint64_t)(*a1 + 64);
  uint64_t v7 = (uint64_t)(*a1 + 80);
  if (a2)
  {
    uint64_t v8 = v2[115] + v2[116];
    sub_20B8EBE30((uint64_t)(*a1 + 16), v7);
    sub_20B8EBE30(v8, v6);
    sub_20B8EBE30(v8, v5);
    sub_20B8EBE30(v7, v8);
    sub_20B8EC000(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EC000(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EBE30(v6, (uint64_t)(v2 + 96));
    sub_20B8F4E44((uint64_t)(v2 + 96));
    sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EBE30(v3, v4);
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v9 = v2[115] + v2[116];
    sub_20B8EBE30((uint64_t)(*a1 + 16), v7);
    sub_20B8EBE30(v9, v6);
    sub_20B8EBE30(v9, v5);
    sub_20B8EBE30(v7, v9);
    sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8EC000(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EBE30(v6, v4);
    sub_20B8F4E44(v4);
  }
  sub_20B8EC000(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  free(v2);
}

id EmojiForegroundLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_20B8F6A34(a1);
  swift_release();
  return v4;
}

id EmojiForegroundLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1 = sub_20B8F6A34(a1);
  swift_release();
  return v1;
}

id EmojiForegroundLayersViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundLayersViewController.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView;
  id v5 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_deviceOrientation] = 1;
  uint64_t v7 = (uint64_t)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration];
  sub_20B8EEA8C(v13);
  sub_20B8EBE30((uint64_t)v13, v7);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 10;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  *(void *)(v8 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer] = v8;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

void sub_20B8F5EA4()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_setClipsToBounds_, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20B8F5FA0()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC);
  if (!v1
    || (uint64_t v2 = v0,
        uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8),
        v14[0] = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC),
        v14[1] = v3,
        id v4 = v1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA28C8),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA28C0),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    return sub_20B8F6F84((uint64_t)&v11);
  }
  if (!*((void *)&v12 + 1)) {
    return sub_20B8F6F84((uint64_t)&v11);
  }
  sub_20B8F6FE4(&v11, (uint64_t)v14);
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    id v5 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress);
    swift_beginAccess();
    double v6 = *v5;
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    (*(void (**)(uint64_t, uint64_t, double))(v8 + 40))(v7, v8, v6);
  }
  id v9 = (double *)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress);
  swift_beginAccess();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView), sel_setAlpha_, (1.0 - *v9) * 0.75 + 0.0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

double sub_20B8F611C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B8F6164(double a1)
{
  return sub_20B8F63A0(&OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress, (uint64_t (*)(uint64_t))sub_20B8F5FA0, a1);
}

uint64_t (*sub_20B8F6184(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8F61E4;
}

uint64_t sub_20B8F61E4(uint64_t a1, char a2)
{
  return sub_20B8F647C(a1, a2, (uint64_t (*)(uint64_t))sub_20B8F5FA0);
}

uint64_t sub_20B8F61FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC);
  if (!v1
    || (uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8),
        v12[0] = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC),
        v12[1] = v2,
        id v3 = v1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA28C8),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA28C0),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    return sub_20B8F6F84((uint64_t)&v9);
  }
  if (!*((void *)&v10 + 1)) {
    return sub_20B8F6F84((uint64_t)&v9);
  }
  sub_20B8F6FE4(&v9, (uint64_t)v12);
  if (!UIAccessibilityIsReduceMotionEnabled()
    && (objc_msgSend(self, sel_shouldSkipUnlockAnimationForCurrentDevice) & 1) == 0)
  {
    id v4 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress);
    swift_beginAccess();
    double v5 = *v4;
    uint64_t v6 = v13;
    uint64_t v7 = v14;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    (*(void (**)(uint64_t, uint64_t, double))(v7 + 64))(v6, v7, v5);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

double sub_20B8F6338()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B8F6380(double a1)
{
  return sub_20B8F63A0(&OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress, (uint64_t (*)(uint64_t))sub_20B8F61FC, a1);
}

uint64_t sub_20B8F63A0(void *a1, uint64_t (*a2)(uint64_t), double a3)
{
  uint64_t v6 = (double *)(v3 + *a1);
  uint64_t v7 = swift_beginAccess();
  double *v6 = a3;
  return a2(v7);
}

uint64_t (*sub_20B8F6404(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8F6464;
}

uint64_t sub_20B8F6464(uint64_t a1, char a2)
{
  return sub_20B8F647C(a1, a2, (uint64_t (*)(uint64_t))sub_20B8F61FC);
}

uint64_t sub_20B8F647C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id sub_20B8F64C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v1, (uint64_t)v22);
  sub_20B8EBE30((uint64_t)v22, (uint64_t)&v23);
  id v2 = 0;
  if (sub_20B8EEAF4((uint64_t)&v23) != 1)
  {
    if (v29[10])
    {
      if (v29[10] == 1)
      {
        swift_beginAccess();
        id v3 = objc_allocWithZone((Class)type metadata accessor for EmojiForegroundCircularLayersViewController());
        sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
        uint64_t v4 = swift_retain();
        id v2 = sub_20B8F1E6C(v4);
        swift_release();
        long long v18 = v27;
        long long v19 = v28;
        v20[0] = *(_OWORD *)v29;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v29[9];
        long long v14 = v23;
        long long v15 = v24;
        long long v16 = v25;
        long long v17 = v26;
        nullsub_1(&v14);
        sub_20B8EBE30((uint64_t)&v14, (uint64_t)v12);
        sub_20B8EBE30((uint64_t)v22, (uint64_t)v21);
        sub_20B8E7960(v21);
        sub_20B8EF584((uint64_t)v12);
      }
      else
      {
        swift_beginAccess();
        id v8 = objc_allocWithZone((Class)type metadata accessor for EmojiForegroundSpiralLayersViewController());
        sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
        uint64_t v9 = swift_retain();
        id v2 = sub_20B8FD588(v9);
        swift_release();
        long long v18 = v27;
        long long v19 = v28;
        v20[0] = *(_OWORD *)v29;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v29[9];
        long long v14 = v23;
        long long v15 = v24;
        long long v16 = v25;
        long long v17 = v26;
        nullsub_1(&v14);
        sub_20B8EBE30((uint64_t)&v14, (uint64_t)v12);
        sub_20B8EBE30((uint64_t)v22, (uint64_t)v21);
        sub_20B8E7960(v21);
        sub_20B8FAC5C((uint64_t)v12);
      }
      sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
    else
    {
      swift_beginAccess();
      id v5 = objc_allocWithZone((Class)type metadata accessor for EmojiForegroundGridLayersViewController());
      sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
      uint64_t v6 = swift_retain();
      id v2 = sub_20B8EE92C(v6);
      swift_release();
      v12[4] = v27;
      v12[5] = v28;
      v13[0] = *(_OWORD *)v29;
      *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)&v29[9];
      v12[0] = v23;
      v12[1] = v24;
      v12[2] = v25;
      void v12[3] = v26;
      nullsub_1(v12);
      uint64_t v7 = (uint64_t)v2 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
      swift_beginAccess();
      sub_20B8EBE30(v7, (uint64_t)&v14);
      sub_20B8EBE30(v7, (uint64_t)v21);
      sub_20B8EBE30((uint64_t)v12, v7);
      sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
      sub_20B8EC000((uint64_t)&v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
      sub_20B8EC000((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      sub_20B8EBE30((uint64_t)&v14, (uint64_t)v11);
      sub_20B8EB83C((uint64_t)v11);
      sub_20B8EC000((uint64_t)&v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
  }
  return v2;
}

id EmojiForegroundLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundLayersViewController.init(nibName:bundle:)()
{
}

id EmojiForegroundLayersViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_20B8F6A34(uint64_t a1)
{
  id v3 = &v1[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView;
  id v5 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_deviceOrientation] = 1;
  uint64_t v7 = (uint64_t)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration];
  sub_20B8EEA8C(v10);
  sub_20B8EBE30((uint64_t)v10, v7);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  return objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for EmojiForegroundLayersViewController()
{
  return self;
}

uint64_t sub_20B8F6B58@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

double sub_20B8F6BBC@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress, a2);
}

uint64_t sub_20B8F6BC8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress, (uint64_t (*)(uint64_t))sub_20B8F5FA0);
}

double sub_20B8F6BE8@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress, a2);
}

uint64_t sub_20B8F6BF4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress, (uint64_t (*)(uint64_t))sub_20B8F61FC);
}

uint64_t keypath_set_5Tm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v7 = *a1;
  id v8 = (void *)(*a2 + *a5);
  uint64_t v9 = swift_beginAccess();
  *id v8 = v7;
  return a6(v9);
}

uint64_t method lookup function for EmojiForegroundLayersViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiForegroundLayersViewController);
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.emojiRenderer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.emojiRenderer.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.emojiRenderer.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.configuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.configuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.configuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.__allocating_init(emojiRenderer:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.wakeProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.wakeProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.wakeProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.unlockProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.unlockProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.unlockProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t sub_20B8F6F84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5A18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B8F6FE4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_20B8F704C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

double sub_20B8F7104()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1) {
    return 0.0;
  }
  uint64_t v2 = v1;
  objc_msgSend(v1, sel_bounds);
  double v4 = v3;

  return v4;
}

void sub_20B8F7174()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_bounds);
    double v4 = v3;

    *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius] = (v4 + 40.0) * 0.5;
  }
}

id sub_20B8F7288()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  double v3 = (void *)sub_20B926768();
  id v4 = objc_msgSend(self, sel_layoutAttributesForCellWithIndexPath_, v3);

  objc_msgSend(v2, sel_bounds);
  double MidX = CGRectGetMidX(v30);
  objc_msgSend(v2, sel_bounds);
  double MidY = CGRectGetMidY(v31);
  double v7 = 195.0 / (double)(uint64_t)objc_msgSend(v2, sel_numberOfItemsInSection_, sub_20B9267A8());
  uint64_t v8 = sub_20B926798();
  objc_msgSend(v4, sel_setSize_, v7 * ((double)v8 + 1.0), v7 * ((double)v8 + 1.0));
  id v9 = objc_msgSend(v2, sel_numberOfItemsInSection_, sub_20B9267A8());
  if ((double)(uint64_t)v9 > 1.0) {
    double v10 = (double)(uint64_t)v9;
  }
  else {
    double v10 = 1.0;
  }
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius;
  double v12 = *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius];
  double v13 = v12 * (double)sub_20B926798() / v10;
  uint64_t v14 = sub_20B926798();
  long double v15 = v13 * cos((double)v14 * -3.14159265 / v10);
  double v16 = *(double *)&v0[v11];
  double v17 = v16 * (double)sub_20B926798() / v10;
  uint64_t v18 = sub_20B926798();
  double v19 = MidX + v15;
  double v20 = MidY + v17 * sin((double)v18 * -3.14159265 / v10);
  objc_msgSend(v2, sel_bounds);
  double v21 = CGRectGetMidX(v32);
  objc_msgSend(v2, sel_bounds);
  double v22 = CGRectGetMidY(v33);
  double v23 = 360.0 / (double)(uint64_t)objc_msgSend(v2, sel_numberOfSections);
  double v24 = v23 * (double)sub_20B9267A8() + *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle];
  if (v24 > 0.0)
  {
    long double v25 = v20 - v22;
    double v26 = sqrt((v19 - v21) * (v19 - v21) + v25 * v25);
    long double v27 = atan2(v25, v19 - v21);
    __double2 v28 = __sincos_stret(v24 * 0.0174532925 + v27);
    double v19 = v21 + v26 * v28.__cosval;
    double v20 = v22 + v26 * v28.__sinval;
  }
  objc_msgSend(v4, sel_setCenter_, v19, v20);

  return v4;
}

id sub_20B8F7684(double a1, double a2, CGFloat a3, CGFloat a4)
{
  id result = objc_msgSend(v4, sel_collectionView);
  if (result)
  {
    uint64_t v8 = result;
    objc_msgSend(result, sel_bounds);
    v12.width = v9;
    v12.height = v10;
    v13.width = a3;
    v13.height = a4;
    BOOL v11 = CGSizeEqualToSize(v12, v13);

    return (id)!v11;
  }
  return result;
}

id EmojiSpiralLayout.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id EmojiSpiralLayout.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius] = 0x3FF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiSpiralLayout();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EmojiSpiralLayout.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiSpiralLayout.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius] = 0x3FF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for EmojiSpiralLayout();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id EmojiSpiralLayout.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiSpiralLayout();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_20B8F79B8()
{
  id v1 = v0;
  uint64_t v2 = sub_20B9267B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  objc_super v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (char *)objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    id v7 = result;
    uint64_t v19 = MEMORY[0x263F8EE78];
    if ((uint64_t)objc_msgSend(result, sel_numberOfSections) < 1)
    {

      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      id result = (char *)objc_msgSend(v7, sel_numberOfSections);
      if (__OFSUB__(result, 1)) {
        goto LABEL_27;
      }
      if (((unint64_t)(result - 1) & 0x8000000000000000) == 0)
      {
        uint64_t v8 = 0;
        CGFloat v9 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
        double v17 = result - 1;
        id v18 = v7;
        while (1)
        {
          if ((uint64_t)objc_msgSend(v7, sel_numberOfItemsInSection_, v8) >= 1)
          {
            id result = (char *)objc_msgSend(v18, sel_numberOfItemsInSection_, v8);
            CGFloat v10 = result - 1;
            if (__OFSUB__(result, 1))
            {
LABEL_25:
              __break(1u);
LABEL_26:
              __break(1u);
LABEL_27:
              __break(1u);
              break;
            }
            if (((unint64_t)v10 & 0x8000000000000000) != 0) {
              goto LABEL_26;
            }
            BOOL v11 = 0;
            while (1)
            {
              MEMORY[0x210539DC0](v11, v8);
              CGSize v12 = (void *)sub_20B926768();
              id v13 = objc_msgSend(v1, sel_layoutAttributesForItemAtIndexPath_, v12);

              if (v13)
              {
                id v14 = v13;
                MEMORY[0x21053A0A0]();
                if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_20B926AC8();
                }
                sub_20B926AD8();
                sub_20B926AB8();
              }
              id result = (char *)(*v9)(v5, v2);
              if (v10 == v11) {
                break;
              }
              BOOL v15 = __OFADD__(v11++, 1);
              if (v15)
              {
                __break(1u);
                goto LABEL_25;
              }
            }
          }
          if (v8 == v17) {
            goto LABEL_22;
          }
          BOOL v15 = __OFADD__(v8++, 1);
          id v7 = v18;
          if (v15)
          {
            __break(1u);
LABEL_22:

            return (char *)v19;
          }
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for EmojiSpiralLayout()
{
  return self;
}

uint64_t method lookup function for EmojiSpiralLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiSpiralLayout);
}

unint64_t sub_20B8F7C70()
{
  unint64_t result = qword_2676A5A38;
  if (!qword_2676A5A38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2676A5A38);
  }
  return result;
}

uint64_t sub_20B8F7CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_20B8F7CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_20B8F7CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_20B8F7CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

id sub_20B8F7D00(double a1, double a2, double a3, double a4)
{
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for ColorWellView();
  id v9 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  id v10 = objc_msgSend(v9, sel_layer);
  objc_msgSend(v10, sel_setBorderWidth_, 6.0);

  id v11 = objc_msgSend(v9, sel_layer);
  id v12 = objc_msgSend(self, sel_whiteColor);
  id v13 = objc_msgSend(v12, sel_CGColor);

  objc_msgSend(v11, sel_setBorderColor_, v13);
  return v9;
}

id sub_20B8F7E48(void *a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for ColorWellView();
  id v3 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    id v6 = objc_msgSend(v5, sel_layer);
    objc_msgSend(v6, sel_setBorderWidth_, 6.0);

    id v7 = objc_msgSend(v5, sel_layer);
    id v8 = objc_msgSend(self, sel_whiteColor);
    id v9 = objc_msgSend(v8, sel_CGColor);

    objc_msgSend(v7, sel_setBorderColor_, v9);
    a1 = v9;
  }

  return v4;
}

id sub_20B8F8008()
{
  return sub_20B8F9108(type metadata accessor for ColorWellView);
}

uint64_t type metadata accessor for ColorWellView()
{
  return self;
}

void sub_20B8F8048()
{
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView), sel_setBackgroundColor_, *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor));
  uint64_t v2 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView), sel_setBackgroundColor_, *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor));
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5AB0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B92B3B0;
  id v5 = objc_msgSend(*(id *)(v0 + v1), sel_CGColor);
  type metadata accessor for CGColor(0);
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 32) = v5;
  id v8 = objc_msgSend(*(id *)(v0 + v2), sel_CGColor);
  *(void *)(v4 + 88) = v7;
  *(void *)(v4 + 64) = v8;
  id v9 = (id)sub_20B926A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setColors_, v9);
}

id sub_20B8F8190(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  id v10 = self;
  objc_super v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_whiteColor);
  uint64_t v12 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  *(void *)&v11[v12] = objc_msgSend(v10, sel_blackColor);
  *(void *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] = 0;
  *(void *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset] = 0x3FF0000000000000;
  uint64_t v13 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView;
  type metadata accessor for ColorWellView();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v11[v14] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView;
  *(void *)&v11[v16] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v17 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorTapGesture;
  *(void *)&v11[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_init);
  uint64_t v18 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorTapGesture;
  *(void *)&v11[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_init);
  uint64_t v19 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorPanGesture;
  *(void *)&v11[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82A00]), sel_init);
  uint64_t v20 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorPanGesture;
  *(void *)&v11[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82A00]), sel_init);
  *(void *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset] = 0;
  *(void *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset] = 0;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for GradientColorSlider();
  id v21 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  sub_20B8F85F0();

  return v21;
}

id sub_20B8F83C8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  uint64_t v4 = self;
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_whiteColor);
  uint64_t v6 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  *(void *)&v5[v6] = objc_msgSend(v4, sel_blackColor);
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset] = 0x3FF0000000000000;
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer;
  *(void *)&v5[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView;
  type metadata accessor for ColorWellView();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v5[v8] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView;
  *(void *)&v5[v10] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorTapGesture;
  *(void *)&v5[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorTapGesture;
  *(void *)&v5[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorPanGesture;
  *(void *)&v5[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82A00]), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorPanGesture;
  *(void *)&v5[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82A00]), sel_init);
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset] = 0;

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for GradientColorSlider();
  id v15 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);
  id v16 = v15;
  if (v15)
  {
    id v17 = v15;
    sub_20B8F85F0();
  }
  return v16;
}

id sub_20B8F85F0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
  objc_msgSend(v1, sel_setCornerCurve_, *MEMORY[0x263F15A20]);
  uint64_t v2 = self;
  objc_msgSend(v2, sel_begin);
  objc_msgSend(v2, sel_setDisableActions_, 1);
  objc_msgSend(v1, sel_setStartPoint_, *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset], 0.5);
  objc_msgSend(v1, sel_setEndPoint_, *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset], 0.5);
  objc_msgSend(v2, sel_commit);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5AB0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B92B3B0;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  id v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor], sel_CGColor);
  type metadata accessor for CGColor(0);
  uint64_t v7 = v6;
  *(void *)(v3 + 56) = v6;
  *(void *)(v3 + 32) = v5;
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  id v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor], sel_CGColor);
  *(void *)(v3 + 88) = v7;
  *(void *)(v3 + 64) = v9;
  uint64_t v10 = (void *)sub_20B926A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setColors_, v10);

  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView];
  objc_msgSend(v11, sel_setBackgroundColor_, *(void *)&v0[v4]);
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
  objc_msgSend(v12, sel_setBackgroundColor_, *(void *)&v0[v8]);
  sub_20B8F8828();
  id v13 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v13, sel_addSublayer_, v1);

  objc_msgSend(v0, sel_addSubview_, v11);
  return objc_msgSend(v0, sel_addSubview_, v12);
}

id sub_20B8F8828()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorPanGesture);
  objc_msgSend(v1, sel_addTarget_action_, v0, sel_leftColorDidPanWithGr_);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorTapGesture);
  objc_msgSend(v2, sel_addTarget_action_, v0, sel_leftColorWasTappedWithGr_);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView);
  objc_msgSend(v3, sel_addGestureRecognizer_, v1);
  objc_msgSend(v3, sel_addGestureRecognizer_, v2);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorPanGesture);
  objc_msgSend(v4, sel_addTarget_action_, v0, sel_rightColorDidPanWithGr_);
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorTapGesture);
  objc_msgSend(v5, sel_addTarget_action_, v0, sel_rightColorWasTappedWithGr_);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView);
  objc_msgSend(v6, sel_addGestureRecognizer_, v4);
  return objc_msgSend(v6, sel_addGestureRecognizer_, v5);
}

id sub_20B8F8950()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  objc_msgSend(v1, sel_frame);
  objc_msgSend(v1, sel_setCornerRadius_, v2 * 0.5);
  objc_msgSend(v0, sel_bounds);
  double v4 = v3;
  objc_msgSend(v0, sel_bounds);
  double v6 = v5 - v4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView], sel_setFrame_, (v5 - v4) * *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] + 0.0, 0.0, v4, v4);
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
  double v8 = v6 * *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset];
  return objc_msgSend(v7, sel_setFrame_, v8, 0.0, v4, v4);
}

id sub_20B8F8AA8(void *a1)
{
  id result = objc_msgSend(a1, sel_state);
  if (result == (id)2)
  {
    objc_msgSend(a1, sel_translationInView_, v1);
    double v7 = v6 + *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset];
    double v8 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView];
    objc_msgSend(v8, sel_bounds);
    double MidX = CGRectGetMidX(v23);
    if (v7 > MidX) {
      double v10 = v7;
    }
    else {
      double v10 = MidX;
    }
    objc_msgSend(v1, sel_bounds);
    double Width = CGRectGetWidth(v24);
    objc_msgSend(v8, sel_bounds);
    double v12 = Width - CGRectGetMidX(v25);
    if (v12 >= v10) {
      double v13 = v10;
    }
    else {
      double v13 = v12;
    }
    objc_msgSend(v8, sel_center);
    objc_msgSend(v8, sel_setCenter_, v13);
    objc_msgSend(v8, sel_frame);
    double v15 = v14;
    objc_msgSend(v1, sel_bounds);
    double v17 = v16;
    objc_msgSend(v8, sel_bounds);
    uint64_t v19 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset;
    *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] = v15 / (v17 - v18);
    uint64_t v20 = self;
    objc_msgSend(v20, sel_begin);
    objc_msgSend(v20, sel_setDisableActions_, 1);
    id v21 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
    objc_msgSend(v21, sel_setStartPoint_, *(double *)&v1[v19], 0.5);
    objc_msgSend(v21, sel_setEndPoint_, *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset], 0.5);
    objc_msgSend(v20, sel_commit);
    id result = (id)MEMORY[0x21053B1C0](&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate]);
    if (result)
    {
      sub_20B901594(*(double *)&v1[v19]);
      return (id)swift_unknownObjectRelease();
    }
  }
  else if (result == (id)1)
  {
    double v4 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView];
    objc_msgSend(v4, sel_center);
    *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset] = v5;
    return objc_msgSend(v1, sel_bringSubviewToFront_, v4);
  }
  return result;
}

id sub_20B8F8D6C(void *a1)
{
  id result = objc_msgSend(a1, sel_state);
  if (result == (id)2)
  {
    objc_msgSend(a1, sel_translationInView_, v1);
    double v7 = v6 + *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset];
    double v8 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
    objc_msgSend(v8, sel_bounds);
    double MidX = CGRectGetMidX(v23);
    if (v7 > MidX) {
      double v10 = v7;
    }
    else {
      double v10 = MidX;
    }
    objc_msgSend(v1, sel_bounds);
    double Width = CGRectGetWidth(v24);
    objc_msgSend(v8, sel_bounds);
    double v12 = Width - CGRectGetMidX(v25);
    if (v12 >= v10) {
      double v13 = v10;
    }
    else {
      double v13 = v12;
    }
    objc_msgSend(v8, sel_center);
    objc_msgSend(v8, sel_setCenter_, v13);
    objc_msgSend(v8, sel_frame);
    double v15 = v14;
    objc_msgSend(v1, sel_bounds);
    double v17 = v16;
    objc_msgSend(v8, sel_bounds);
    uint64_t v19 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset;
    *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset] = v15 / (v17 - v18);
    uint64_t v20 = self;
    objc_msgSend(v20, sel_begin);
    objc_msgSend(v20, sel_setDisableActions_, 1);
    id v21 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
    objc_msgSend(v21, sel_setStartPoint_, *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset], 0.5);
    objc_msgSend(v21, sel_setEndPoint_, *(double *)&v1[v19], 0.5);
    objc_msgSend(v20, sel_commit);
    id result = (id)MEMORY[0x21053B1C0](&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate]);
    if (result)
    {
      sub_20B901724(*(double *)&v1[v19]);
      return (id)swift_unknownObjectRelease();
    }
  }
  else if (result == (id)1)
  {
    double v4 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
    objc_msgSend(v4, sel_center);
    *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset] = v5;
    return objc_msgSend(v1, sel_bringSubviewToFront_, v4);
  }
  return result;
}

id sub_20B8F90F0()
{
  return sub_20B8F9108(type metadata accessor for GradientColorSlider);
}

id sub_20B8F9108(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for GradientColorSlider()
{
  return self;
}

void sub_20B8F9230()
{
  uint64_t v1 = MEMORY[0x21053B1C0](v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
    swift_beginAccess();
    uint64_t v4 = MEMORY[0x21053B1C0](v3);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)(v3 + 8);
      id v7 = sub_20B8FF494();
      uint64_t v8 = v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
      swift_beginAccess();
      uint64_t v9 = *(void *)(v8 + 32);
      if (*(void *)(v9 + 16))
      {
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v9 + 32), *(double *)(v9 + 40), *(double *)(v9 + 48), *(double *)(v9 + 56));
        objc_msgSend(v7, sel_setSelectedColor_, v10);

        uint64_t v11 = (void (*)(void *))swift_allocObject();
        *((void *)v11 + 2) = v2;
        *((void *)v11 + 3) = v5;
        *((void *)v11 + 4) = v6;
        double v12 = (void (**)(void *))(v2
                                           + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        *double v12 = sub_20B8F9660;
        v12[1] = v11;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_20B8F960C(v13);
        uint64_t ObjectType = swift_getObjectType();
        id v15 = sub_20B8FF494();
        (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v6 + 8))(v2, v15, ObjectType, v6);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_20B8F9414()
{
  uint64_t v1 = MEMORY[0x21053B1C0](v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
    swift_beginAccess();
    uint64_t v4 = MEMORY[0x21053B1C0](v3);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)(v3 + 8);
      id v7 = sub_20B8FF494();
      uint64_t v8 = v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
      swift_beginAccess();
      uint64_t v9 = *(void *)(v8 + 32);
      if (*(void *)(v9 + 16) < 2uLL)
      {
        __break(1u);
      }
      else
      {
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v9 + 64), *(double *)(v9 + 72), *(double *)(v9 + 80), *(double *)(v9 + 88));
        objc_msgSend(v7, sel_setSelectedColor_, v10);

        uint64_t v11 = (void *)swift_allocObject();
        void v11[2] = v2;
        uint64_t v11[3] = v5;
        v11[4] = v6;
        double v12 = (void *)(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        *double v12 = sub_20B8F9600;
        v12[1] = v11;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_20B8F960C(v13);
        uint64_t ObjectType = swift_getObjectType();
        id v15 = sub_20B8FF494();
        (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v6 + 8))(v2, v15, ObjectType, v6);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

_OWORD *sub_20B8F9600(void *a1)
{
  return sub_20B9008E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_20B8F960C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_20B8F9660(void *a1)
{
  sub_20B900788(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_20B8F966C(uint64_t a1)
{
  return a1;
}

void sub_20B8F9694()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  uint64_t v4 = (void *)sub_20B8F9F8C();
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer];
  id v6 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v5, sel_setContents_, v6);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v5, sel_frame);
  objc_msgSend(v5, sel_setFrame_);
  id v7 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer];
  objc_msgSend(v7, sel_addSublayer_, v5);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer];
  objc_msgSend(v8, sel_addSublayer_, v7);
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v9, sel_layer);

  objc_msgSend(v11, sel_addSublayer_, v8);
  double v12 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer];
  id v13 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v12, sel_setContents_, v13);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v12, sel_frame);
  objc_msgSend(v12, sel_setFrame_);
  double v14 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer];
  objc_msgSend(v14, sel_addSublayer_, v12);
  id v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer];
  objc_msgSend(v15, sel_addSublayer_, v14);
  id v16 = objc_msgSend(v0, sel_view);
  if (v16)
  {
    double v17 = v16;
    id v18 = objc_msgSend(v16, sel_layer);

    objc_msgSend(v18, sel_addSublayer_, v15);
    sub_20B8F99DC();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for EmojiForegroundReplicatorViewController()
{
  return self;
}

void sub_20B8F99DC()
{
  double v1 = *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale] * 100.0;
  uint64_t v2 = self;
  objc_msgSend(v2, sel_begin);
  objc_msgSend(v2, sel_setDisableActions_, 1);
  id v3 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer];
  objc_msgSend(v3, sel_frame);
  objc_msgSend(v3, sel_setFrame_);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer];
  objc_msgSend(v4, sel_frame);
  objc_msgSend(v4, sel_setFrame_);
  id v5 = objc_msgSend(v0, sel_view);
  if (!v5) {
    goto LABEL_30;
  }
  id v6 = v5;
  objc_msgSend(v5, sel_bounds);
  double v8 = v7;

  double v9 = ceil(v8 / v1);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = (uint64_t)v9 + 1;
  if (__OFADD__((uint64_t)v9, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v10 & 1) == 0)
  {
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v10 = (uint64_t)v9 + 2;
    if (v11) {
      goto LABEL_29;
    }
  }
  id v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v13 = v12;
  objc_msgSend(v12, sel_bounds);
  double v15 = v14;

  double v16 = ceil(v15 / v1);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0) {
    goto LABEL_25;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v17 = (uint64_t)v16 + 1;
  if (__OFADD__((uint64_t)v16, 1))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v18 = objc_msgSend(v0, sel_view);
  if (!v18)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_super v19 = v18;
  id v62 = v2;
  if (v10 >= 0) {
    uint64_t v20 = v10;
  }
  else {
    uint64_t v20 = v10 + 1;
  }
  objc_msgSend(v18, sel_bounds);
  double v22 = v21;

  id v23 = objc_msgSend(v0, sel_view);
  if (!v23) {
    goto LABEL_33;
  }
  CGRect v24 = v23;
  double v25 = v22 * 0.5 - (v1 * (double)((v20 >> 1) + 1) - v1 * 0.5 + (v1 * 1.8 - v1) * ((double)((v20 >> 1) + 1) + -1.0));
  objc_msgSend(v23, sel_bounds);
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  double v33 = v32;

  double v61 = v25;
  uint64_t v34 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer];
  objc_msgSend(v34, sel_setFrame_, v25 + v27, v29, v31 - v25, v33);
  uint64_t v35 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer];
  objc_msgSend(v35, sel_setFrame_, 0.0, 0.0, v1 * (((double)v10 + -1.0) * 1.8 + (double)v10), v1);
  objc_msgSend(v35, sel_setInstanceCount_, v10);
  CATransform3DMakeTranslation(&v63, v1 * 1.8, 0.0, 0.0);
  objc_msgSend(v35, sel_setInstanceTransform_, &v63);
  objc_msgSend(v34, sel_setInstanceCount_, v17);
  CATransform3DMakeTranslation(&v63, 0.0, v1 * 1.8, 0.0);
  objc_msgSend(v34, sel_setInstanceTransform_, &v63);
  id v36 = objc_msgSend(v0, sel_view);
  if (!v36)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v37 = v36;
  double v60 = v1 * 1.8;
  objc_msgSend(v36, sel_bounds);
  double v59 = v38;
  double v40 = v39;
  double v42 = v41;
  double v44 = v43;

  id v45 = objc_msgSend(v0, sel_view);
  if (v45)
  {
    double v46 = v45;
    double v47 = v1 * 0.9;
    double v48 = v44 - v1 * 0.9;
    objc_msgSend(v45, sel_bounds);
    double v50 = v49;
    double v52 = v51;
    double v54 = v53;
    double v56 = v55;

    long long v57 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer];
    objc_msgSend(v57, sel_setFrame_, v61 + v50 - v47, v52, v47 + v54 - v61, v56);
    id v58 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer];
    objc_msgSend(v58, sel_setFrame_, v59, v47 + v40, v42, v48);
    objc_msgSend(v57, sel_setInstanceCount_, v10);
    CATransform3DMakeTranslation(&v63, v60, 0.0, 0.0);
    objc_msgSend(v57, sel_setInstanceTransform_, &v63);
    objc_msgSend(v58, sel_setInstanceCount_, v17);
    CATransform3DMakeTranslation(&v63, 0.0, v60, 0.0);
    objc_msgSend(v58, sel_setInstanceTransform_, &v63);
    objc_msgSend(v62, sel_commit);
    return;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_20B8F9F8C()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
  objc_msgSend(v1, sel_setOpaque_, 0);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v1, 100.0, 100.0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_20B8FAA4C;
  *(void *)(v4 + 24) = v3;
  v9[4] = sub_20B8EF030;
  v9[5] = v4;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_20B8F48A4;
  v9[3] = &block_descriptor_3;
  id v5 = _Block_copy(v9);
  id v6 = v0;
  swift_retain();
  swift_release();
  id v7 = objc_msgSend(v2, sel_imageWithActions_, v5);

  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v1 & 1) == 0) {
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

void sub_20B8FA154()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FA0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20B9294E0;
  id v1 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v2 = self;
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_systemFontOfSize_, 100.0);
  *(void *)(inited + 64) = sub_20B8F4A08();
  *(void *)(inited + 40) = v4;
  sub_20B9099B4(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v6 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20B8F4A48();
  id v7 = (void *)sub_20B9268B8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  objc_msgSend(v8, sel_size);
  objc_msgSend(v8, sel_drawInRect_, 50.0 - v9 * 0.5, 50.0 - v10 * 0.5, v9);
}

void sub_20B8FA2F4(void *a1)
{
  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 1uLL:
    case 2uLL:
      objc_msgSend(a1, sel_scale);
      *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale) = v3;
      sub_20B8F99DC();
      break;
    default:
      *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scaleDelta) = 0x3FF0000000000000;
      break;
  }
}

void sub_20B8FA40C(double a1)
{
  *(double *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale) = a1;
  sub_20B8F99DC();
}

id EmojiForegroundReplicatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id EmojiForegroundReplicatorViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emoji];
  *(void *)id v6 = 3113983984;
  *((void *)v6 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_spacingFactor] = 0x3FFCCCCCCCCCCCCDLL;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer;
  id v8 = objc_allocWithZone(MEMORY[0x263F157E8]);
  double v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer;
  *(void *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer;
  *(void *)&v9[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(void *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer;
  *(void *)&v9[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer;
  *(void *)&v9[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  *(void *)&v9[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_pinchGestureRecognizer] = 0;

  if (a2)
  {
    double v15 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v15 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  id v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id EmojiForegroundReplicatorViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundReplicatorViewController.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emoji];
  *(void *)id v3 = 3113983984;
  *((void *)v3 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_spacingFactor] = 0x3FFCCCCCCCCCCCCDLL;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale] = 0x3FF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer;
  id v5 = objc_allocWithZone(MEMORY[0x263F157E8]);
  id v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer;
  *(void *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer;
  *(void *)&v6[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(void *)&v6[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer;
  *(void *)&v6[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer;
  *(void *)&v6[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_pinchGestureRecognizer] = 0;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id EmojiForegroundReplicatorViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for EmojiForegroundReplicatorViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiForegroundReplicatorViewController);
}

uint64_t dispatch thunk of EmojiForegroundReplicatorViewController.updateScale(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t sub_20B8FAA14()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B8FAA4C()
{
}

uint64_t sub_20B8FAA54()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_20B8FAA7C()
{
  return MEMORY[0x270FA0228](v0, 17, 7);
}

uint64_t type metadata accessor for LegacyCircularLayoutProvider()
{
  return self;
}

id EmojiForegroundSpiralLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_20B8FD588(a1);
  swift_release();
  return v4;
}

uint64_t sub_20B8FAAF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a2);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8FAB74(uint64_t a1)
{
  sub_20B8EBE30(a1, (uint64_t)v3);
  sub_20B8EBE30((uint64_t)v3, (uint64_t)v2);
  sub_20B8EC000((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  return sub_20B8FAC5C((uint64_t)v2);
}

uint64_t sub_20B8FABE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8FAC5C(uint64_t a1)
{
  sub_20B8EBE30(a1, (uint64_t)v7);
  uint64_t v2 = (uint64_t)v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v8);
  sub_20B8EBE30(v2, (uint64_t)v9);
  sub_20B8EBE30((uint64_t)v7, v2);
  sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B8EBE30(v2, (uint64_t)v10);
  sub_20B8EBE30((uint64_t)v10, (uint64_t)v11);
  if (sub_20B8EEAF4((uint64_t)v11) != 1)
  {
    sub_20B8EBE30((uint64_t)v10, (uint64_t)v6);
    sub_20B8E7960(v6);
    if (objc_msgSend(v1, sel_isViewLoaded))
    {
      sub_20B8EBE30((uint64_t)v8, (uint64_t)v5);
      if (sub_20B8EEAF4((uint64_t)v5) == 1)
      {
        sub_20B8EC000((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
LABEL_7:
        sub_20B8FC9CC();
        sub_20B8FBFC8();
        return sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      }
      char v3 = sub_20B8EF130(v5[14], v12);
      sub_20B8EC000((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      if ((v3 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_20B8EC000((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    }
  }
  return sub_20B8EC000((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
}

void (*sub_20B8FAE10(void *a1))(void **a1, char a2)
{
  char v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v4, (uint64_t)v3);
  sub_20B8EBE30((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_20B8EC000((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  return sub_20B8FAEC0;
}

void sub_20B8FAEC0(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 128;
  uint64_t v4 = (uint64_t)*a1 + 256;
  uint64_t v5 = (uint64_t)*a1 + 384;
  if (a2)
  {
    sub_20B8EBE30((uint64_t)*a1 + 128, v5);
    sub_20B8EBE30(v5, (uint64_t)v2 + 512);
    sub_20B8EC000(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
    sub_20B8FAC5C((uint64_t)v2 + 512);
    sub_20B8EBE30(v3, v4);
    sub_20B8EC000(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  }
  else
  {
    sub_20B8EBE30((uint64_t)*a1 + 128, v5);
    sub_20B8EBE30(v5, v4);
    sub_20B8FAC5C(v4);
  }
  free(v2);
}

double sub_20B8FAFA8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B8FAFF0(double a1)
{
  return sub_20B8FB0B4(&OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress, a1);
}

uint64_t (*sub_20B8FAFFC(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8FB05C;
}

double sub_20B8FB060()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B8FB0A8(double a1)
{
  return sub_20B8FB0B4(&OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress, a1);
}

uint64_t sub_20B8FB0B4(void *a1, double a2)
{
  uint64_t v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  double *v4 = a2;
  return sub_20B8FBFC8();
}

uint64_t (*sub_20B8FB108(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8FB05C;
}

uint64_t sub_20B8FB168(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_20B8FBFC8();
  }
  return result;
}

id EmojiForegroundSpiralLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1 = sub_20B8FD588(a1);
  swift_release();
  return v1;
}

id EmojiForegroundSpiralLayersViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundSpiralLayersViewController.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_20B9267E8();
  v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_shouldRotateEmojiWithDevice] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_deviceOrientation] = 1;
  uint64_t v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration];
  sub_20B8EEA8C(v11);
  sub_20B8EBE30((uint64_t)v11, v4);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages] = v5;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 10;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  *(void *)(v6 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiRenderer] = v6;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_20B8FB3E4()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    id result = objc_msgSend(v0, sel_view);
    if (result)
    {
      id v3 = result;
      id v4 = objc_msgSend(self, sel_clearColor);
      objc_msgSend(v3, sel_setBackgroundColor_, v4);

      return (id)sub_20B8FB65C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20B8FB510(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  objc_msgSendSuper2(&v3, sel_viewIsAppearing_, a1 & 1);
  sub_20B8FBA54();
}

uint64_t sub_20B8FB5C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  return sub_20B8FBFC8();
}

uint64_t sub_20B8FB65C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v32);
  sub_20B8EBE30((uint64_t)v32, (uint64_t)v33);
  uint64_t result = sub_20B8EEAF4((uint64_t)v33);
  if (result != 1)
  {
    uint64_t result = v34;
    uint64_t v4 = *(void *)(v34 + 16);
    if (v4)
    {
      uint64_t v30 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiRenderer;
      objc_super v5 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages);
      uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      int64x2_t v26 = vdupq_n_s64(0x4069000000000000uLL);
      uint64_t v25 = v1;
      double v29 = v5;
      while (1)
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        uint64_t v9 = *(void *)(v1 + v30);
        id v10 = objc_allocWithZone(NSString);
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v11 = (void *)sub_20B926908();
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(v10, sel_initWithString_, v11);

        id v13 = objc_msgSend(*(id *)(v9 + 24), sel_objectForKey_, v12);
        if (v13)
        {
          id v14 = v13;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v27 = v12;
          id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
          objc_msgSend(v15, sel_setOpaque_, 0);
          double v28 = v15;
          id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v15, 200.0, 200.0);
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v7;
          *(void *)(v17 + 24) = v8;
          *(int64x2_t *)(v17 + 32) = v26;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = sub_20B8EF014;
          *(void *)(v18 + 24) = v17;
          aBlock[4] = sub_20B8EF030;
          aBlock[5] = v18;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_20B8F48A4;
          aBlock[3] = &block_descriptor_4;
          objc_super v19 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          uint64_t v20 = v16;
          id v21 = objc_msgSend(v16, sel_imageWithActions_, v19);
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          if (v19)
          {
            __break(1u);
            return result;
          }
          double v22 = *(void **)(v9 + 24);
          id v14 = v21;
          id v23 = v22;
          id v12 = v27;
          objc_msgSend(v23, sel_setObject_forKey_, v14, v27);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v1 = v25;
        }

        swift_beginAccess();
        id v24 = v14;
        MEMORY[0x21053A0A0]();
        if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B926AC8();
        }
        v6 += 2;
        sub_20B926AD8();
        sub_20B926AB8();
        swift_endAccess();

        if (!--v4) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

void sub_20B8FBA54()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v39);
  sub_20B8EBE30((uint64_t)v39, (uint64_t)v40);
  if (sub_20B8EEAF4((uint64_t)v40) != 1)
  {
    uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider;
    uint64_t v4 = ((char *)v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages);
    uint64_t v5 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews;
    sub_20B8EBE30((uint64_t)v39, (uint64_t)v38);
    sub_20B8E7960(v38);
    swift_beginAccess();
    id v6 = [v1 view];
    if (v6)
    {
      id v7 = v6;
      unint64_t v8 = 0;
      uint64_t v9 = (Class *)((char *)&v1->isa + v5);
      uint64_t v10 = 401;
      long long v37 = xmmword_20B92B4E0;
      long long v36 = xmmword_20B92B4F0;
      long long v35 = xmmword_20B92B500;
      long long v34 = xmmword_20B92B510;
      long long v33 = xmmword_20B92B520;
      while (1)
      {
        objc_msgSend(v7, sel_bounds, v33, v34, v35, v36, v37);
        double v12 = v11;
        double v14 = v13;

        uint64_t v15 = *(uint64_t *)((char *)&v1->isa + v3);
        if (!v15
          || (*(double *)(v15 + 16) == v12 ? (BOOL v16 = *(double *)(v15 + 24) == v14) : (BOOL v16 = 0),
              !v16 && (*(Class *)((char *)&v1->isa + v3) = 0, swift_release(), !*(Class *)((char *)&v1->isa + v3))))
        {
          type metadata accessor for NewSpiralLayoutProvider();
          uint64_t v17 = swift_allocObject();
          id v18 = objc_msgSend(self, sel_currentDevice);
          id v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

          if (v19)
          {
            id v20 = objc_msgSend(self, sel_mainScreen);
            objc_msgSend(v20, sel_bounds);
            double v22 = v21;
            double v24 = v23;

            double v25 = v24 >= v22 ? v22 : v24;
            if (v25 >= 768.0) {
              char v26 = v25 <= 820.0 ? 2 : 3;
            }
            else {
              char v26 = 1;
            }
          }
          else
          {
            char v26 = 0;
          }
          *(unsigned char *)(v17 + 32) = v26;
          *(void *)(v17 + 40) = 0x4075E00000000000;
          *(_OWORD *)(v17 + 48) = v37;
          *(unsigned char *)(v17 + 64) = 1;
          *(_OWORD *)(v17 + 72) = v36;
          *(_OWORD *)(v17 + 88) = v35;
          *(_OWORD *)(v17 + 104) = v34;
          *(_OWORD *)(v17 + 120) = v33;
          *(double *)(v17 + 16) = v12;
          *(double *)(v17 + 24) = v14;
          *(Class *)((char *)&v1->isa + v3) = (Class)v17;
          swift_release();
          if (!*(Class *)((char *)&v1->isa + v3)) {
            goto LABEL_48;
          }
        }
        if (!--v10) {
          break;
        }
        id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
        isCGFloat a = v4->isa;
        if (((unint64_t)v4->isa & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v29 = (id)MEMORY[0x21053A2B0](v8, isa);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            swift_bridgeObjectRetain();
            sub_20B926D58();
            swift_bridgeObjectRelease();
LABEL_38:
            sub_20B926BC8();

            _os_log_impl(&dword_20B8D3000, v1, (os_log_type_t)v27, "[createEmojiViews] created %ld emoji views", (uint8_t *)v8, 0xCu);
            MEMORY[0x21053B150](v8, -1, -1);
            goto LABEL_40;
          }
          if (v8 >= *(void *)(((unint64_t)isa & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_43;
          }
          id v29 = *((id *)isa + v8 + 4);
        }
        objc_msgSend(v27, sel_setImage_, v29);

        objc_msgSend(v27, sel_setContentMode_, 1);
        id v30 = [v1 view];
        if (!v30) {
          goto LABEL_47;
        }
        double v31 = v30;
        objc_msgSend(v30, sel_addSubview_, v27);

        swift_beginAccess();
        id v32 = v27;
        MEMORY[0x21053A0A0]();
        if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B926AC8();
        }
        LOBYTE(v27) = (_BYTE)v9;
        sub_20B926AD8();
        sub_20B926AB8();
        swift_endAccess();

        if (__OFADD__(v8, 1)) {
          goto LABEL_44;
        }
        if (v8 + 1 == *(void *)(v41 + 16)) {
          unint64_t v8 = 0;
        }
        else {
          ++v8;
        }
        id v7 = [v1 view];
        if (!v7) {
          goto LABEL_46;
        }
      }
      sub_20B8EC000((uint64_t)v39, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      uint64_t v4 = v1;
      uint64_t v1 = sub_20B9267D8();
      LOBYTE(v27) = sub_20B926B18();
      if (os_log_type_enabled(v1, (os_log_type_t)v27))
      {
        unint64_t v8 = swift_slowAlloc();
        *(_DWORD *)unint64_t v8 = 134217984;
        swift_beginAccess();
        if (*v9 >> 62) {
          goto LABEL_45;
        }
        goto LABEL_38;
      }

LABEL_40:
      return;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
}

uint64_t sub_20B8FBFC8()
{
  sub_20B8FDB0C();
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_deviceOrientation)
     - 2;
  CGFloat v2 = 0.0;
  if (v1 <= 2) {
    CGFloat v2 = dbl_20B92B608[v1];
  }
  CGAffineTransformMakeRotation(&t1, v2);
  CGFloat b = t1.b;
  CGFloat a = t1.a;
  tCGFloat x = t1.tx;
  CGFloat d = t1.d;
  CGFloat c = t1.c;
  tCGFloat y = t1.ty;
  uint64_t v5 = (unint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_5;
    }
LABEL_12:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_20B926D58();
  uint64_t v7 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_5:
  if (v7 >= 1)
  {
    uint64_t v9 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress);
    uint64_t v10 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress);
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v11 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x21053A2B0](v11, v6);
      }
      else {
        id v12 = *(id *)(v6 + 8 * v11 + 32);
      }
      double v13 = v12;
      uint64_t v14 = v11 + 1;
      CGAffineTransformMakeRotation(&t1, ((double)v11 * -29.135 + 180.0 + (double)v11 * 0.000192159 + 106.479) * -0.0174532925);
      t2.CGFloat a = a;
      t2.CGFloat b = b;
      t2.CGFloat c = c;
      t2.CGFloat d = d;
      t2.tCGFloat x = tx;
      t2.tCGFloat y = ty;
      CGAffineTransformConcat(&v25, &t1, &t2);
      CGAffineTransform t1 = v25;
      objc_msgSend(v13, sel_setTransform_, &t1);
      double v15 = *v9;
      double v16 = *v10;
      id v17 = v13;
      sub_20B91BFE4(v11, v15, v16);
      objc_msgSend(v17, sel_setCenter_);

      sub_20B91C144(v11);
      double v19 = v18;
      id v20 = v17;
      objc_msgSend(v20, sel_bounds);
      objc_msgSend(v20, sel_setBounds_);

      objc_msgSend(v20, sel_setHidden_, v19 <= 1.0);
      uint64_t v11 = v14;
    }
    while (v7 != v14);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

char *sub_20B8FC2E0()
{
  uint64_t v3 = v1;
  sub_20B8FDB0C();
  uint64_t v4 = &v1[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews];
  swift_beginAccess();
  if (*(void *)v4 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  uint64_t v6 = *(void *)v4;
  uint64_t v7 = *(void *)v4 >> 62;
  if (v5 <= 399)
  {
    if (v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_20B926D58();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v0 = 400 - v8;
    if (!__OFSUB__(400, v8))
    {
      uint64_t v9 = sub_20B9267D8();
      os_log_type_t v10 = sub_20B926B18();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 134217984;
        sub_20B926BC8();
        _os_log_impl(&dword_20B8D3000, v9, v10, "[updateEmojiViews] creating %ld new emoji views", v11, 0xCu);
        MEMORY[0x21053B150](v11, -1, -1);
      }

      if (v0 >= 1)
      {
        uint64_t v12 = v8 - 400;
        while (1)
        {
          id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
          objc_msgSend(v13, sel_setContentMode_, 1);
          uint64_t result = (char *)objc_msgSend(v3, sel_view);
          if (!result) {
            break;
          }
          double v15 = result;
          objc_msgSend(result, sel_addSubview_, v13);

          swift_beginAccess();
          id v16 = v13;
          MEMORY[0x21053A0A0]();
          if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            sub_20B926AC8();
          sub_20B926AD8();
          sub_20B926AB8();
          swift_endAccess();

          if (__CFADD__(v12++, 1)) {
            return (char *)swift_release();
          }
        }
        goto LABEL_76;
      }
      return (char *)swift_release();
    }
    __break(1u);
    goto LABEL_55;
  }
  if (v7)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v41 < 401) {
      return (char *)swift_release();
    }
    goto LABEL_19;
  }
  if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 401) {
    return (char *)swift_release();
  }
LABEL_19:
  if (!(*(void *)v4 >> 62))
  {
    uint64_t v18 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v19 = v18 - 400;
    if (!__OFSUB__(v18, 400)) {
      goto LABEL_21;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_20B926D58();
  swift_bridgeObjectRelease();
  uint64_t v19 = v42 - 400;
  if (__OFSUB__(v42, 400)) {
    goto LABEL_59;
  }
LABEL_21:
  id v20 = sub_20B9267D8();
  os_log_type_t v21 = sub_20B926B18();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v0 = 12;
    double v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)double v22 = 134217984;
    sub_20B926BC8();
    _os_log_impl(&dword_20B8D3000, v20, v21, "[updateEmojiViews] removing %ld emoji views", v22, 0xCu);
    MEMORY[0x21053B150](v22, -1, -1);
  }

  if (!(*(void *)v4 >> 62))
  {
    uint64_t v23 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v24 = v23 - v19;
    if (!__OFSUB__(v23, v19)) {
      goto LABEL_25;
    }
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_60:
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_20B926D58();
  swift_bridgeObjectRelease();
  uint64_t v24 = v43 - v19;
  if (__OFSUB__(v43, v19)) {
    goto LABEL_62;
  }
LABEL_25:
  if (!(*(void *)v4 >> 62))
  {
    uint64_t v25 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25 >= v24) {
      goto LABEL_27;
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_63:
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_20B926D58();
  swift_bridgeObjectRelease();
  if (v25 < v24) {
    goto LABEL_64;
  }
LABEL_27:
  uint64_t v2 = *(void *)v4;
  uint64_t v0 = *(void *)v4 >> 62;
  if (!v0)
  {
    uint64_t v26 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (char *)swift_bridgeObjectRetain();
    if (v26 >= v24) {
      goto LABEL_29;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_65:
  swift_bridgeObjectRetain_n();
  uint64_t v44 = sub_20B926D58();
  uint64_t result = (char *)swift_bridgeObjectRelease();
  if (v44 < v24) {
    goto LABEL_66;
  }
LABEL_29:
  if (v24 < 0)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_20B926D58();
    uint64_t result = (char *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v27 < v25) {
    goto LABEL_68;
  }
  if ((v2 & 0xC000000000000001) != 0 && v24 != v25)
  {
    if (v24 >= (unint64_t)v25)
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    sub_20B8EEF9C();
    uint64_t result = (char *)v24;
    do
    {
      double v28 = result + 1;
      sub_20B926C68();
      uint64_t result = v28;
    }
    while ((char *)v25 != v28);
  }
  if (v0)
  {
    swift_bridgeObjectRetain();
    sub_20B926D68();
    uint64_t v29 = v32;
    uint64_t v24 = v33;
    unint64_t v35 = v34;
    uint64_t result = (char *)swift_bridgeObjectRelease_n();
    v35 >>= 1;
    uint64_t v31 = v35 - v24;
    BOOL v30 = (uint64_t)v35 <= v24;
    if (v35 == v24) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v29 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v31 = v25 - v24;
    BOOL v30 = v25 <= v24;
    if (v25 == v24) {
      goto LABEL_47;
    }
  }
  if (!v30)
  {
    swift_unknownObjectRetain();
    long long v36 = (void **)(v29 + 8 * v24);
    do
    {
      long long v37 = *v36++;
      objc_msgSend(v37, sel_removeFromSuperview);
      --v31;
    }
    while (v31);
    uint64_t result = (char *)swift_unknownObjectRelease();
LABEL_47:
    if (!(*(void *)v4 >> 62))
    {
      uint64_t v38 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v39 = v38 - v19;
      if (!__OFSUB__(v38, v19)) {
        goto LABEL_49;
      }
      goto LABEL_71;
    }
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_20B926D58();
    uint64_t result = (char *)swift_bridgeObjectRelease();
    uint64_t v39 = v45 - v19;
    if (!__OFSUB__(v45, v19))
    {
LABEL_49:
      if (!(*(void *)v4 >> 62))
      {
        uint64_t v40 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v40 >= v39)
        {
LABEL_51:
          swift_beginAccess();
          sub_20B8FD2A8(v39, v40);
          swift_endAccess();
          swift_release();
          return (char *)swift_unknownObjectRelease();
        }
        goto LABEL_73;
      }
LABEL_72:
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_20B926D58();
      uint64_t result = (char *)swift_bridgeObjectRelease();
      if (v40 >= v39) {
        goto LABEL_51;
      }
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

void sub_20B8FC9CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v2, (uint64_t)v22);
  sub_20B8EBE30((uint64_t)v22, (uint64_t)v23);
  if (sub_20B8EEAF4((uint64_t)v23) == 1) {
    return;
  }
  sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8FDB0C();
  sub_20B8EBE30((uint64_t)v22, (uint64_t)v21);
  sub_20B8E7960(v21);
  sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  swift_retain();
  uint64_t v3 = sub_20B9267D8();
  os_log_type_t v4 = sub_20B926B18();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v20[0] = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
    sub_20B8EEF40();
    uint64_t v7 = sub_20B9268D8();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_20B91B148(v7, v9, v20);
    sub_20B926BC8();
    swift_bridgeObjectRelease();
    sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    _os_log_impl(&dword_20B8D3000, v3, v4, "Updating for changed emoji: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21053B150](v6, -1, -1);
    MEMORY[0x21053B150](v5, -1, -1);
  }
  else
  {

    sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  }
  os_log_type_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages);
  swift_beginAccess();
  *os_log_type_t v10 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  sub_20B8FB65C();
  sub_20B8FC2E0();
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews);
  uint64_t v12 = *(void *)(v24 + 16);
  swift_beginAccess();
  unint64_t v13 = 0;
  unint64_t v14 = 0;
  while (1)
  {
    uint64_t v15 = *v11;
    if ((*v11 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v16 = (id)MEMORY[0x21053A2B0](v14, v15);
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v17 = *v10;
    if ((*v10 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v18 = (id)MEMORY[0x21053A2B0](v13, v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_24;
      }
      if (v13 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_25;
      }
      id v18 = *(id *)(v17 + 8 * v13 + 32);
    }
    objc_msgSend(v16, sel_setImage_, v18);

    if (__OFADD__(v13, 1)) {
      goto LABEL_26;
    }
    if (v13 + 1 == v12) {
      unint64_t v13 = 0;
    }
    else {
      ++v13;
    }
    if (v14++ >= 0x18F)
    {
      sub_20B8EC000((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
      swift_release();
      return;
    }
  }
  if (v14 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v15 + 8 * v14 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

id EmojiForegroundSpiralLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundSpiralLayersViewController.init(nibName:bundle:)()
{
}

id EmojiForegroundSpiralLayersViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20B8FCFD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_20B8EBE30(v3, (uint64_t)v5);
  sub_20B8EBE30((uint64_t)v5, a1);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

uint64_t sub_20B8FD058(uint64_t a1)
{
  return sub_20B8FAC5C(a1);
}

void (*sub_20B8FD07C(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B8FAE10(v2);
  return sub_20B8EE710;
}

double sub_20B8FD0D8()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B8FD124(uint64_t a1, uint64_t a2, double a3)
{
  return sub_20B8FD1EC(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress);
}

uint64_t (*sub_20B8FD130(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8FB05C;
}

double sub_20B8FD194()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B8FD1E0(uint64_t a1, uint64_t a2, double a3)
{
  return sub_20B8FD1EC(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress);
}

uint64_t sub_20B8FD1EC(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  double *v6 = a1;
  return sub_20B8FBFC8();
}

uint64_t (*sub_20B8FD244(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B8FB05C;
}

uint64_t sub_20B8FD2A8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_20B926D58();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_20B926D58();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_20B926D58();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x21053A2C0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  unint64_t *v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_20B8EEF9C();
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_20B926D58();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_20B926DA8();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_20B926D58();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_20B926AB8();
}

id sub_20B8FD588(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_20B9267E8();
  v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_shouldRotateEmojiWithDevice] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_deviceOrientation] = 1;
  uint64_t v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration];
  sub_20B8EEA8C(v8);
  sub_20B8EBE30((uint64_t)v8, v4);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages] = v5;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  return objc_msgSendSuper2(&v7, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for EmojiForegroundSpiralLayersViewController()
{
  uint64_t result = qword_26ACA3090;
  if (!qword_26ACA3090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_20B8FD730@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress, a2);
}

uint64_t sub_20B8FD73C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress);
}

double sub_20B8FD748@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress, a2);
}

uint64_t sub_20B8FD754(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress);
}

uint64_t keypath_set_3Tm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v6 = v5;
  return sub_20B8FBFC8();
}

uint64_t sub_20B8FD7B8()
{
  return type metadata accessor for EmojiForegroundSpiralLayersViewController();
}

uint64_t sub_20B8FD7C0()
{
  uint64_t result = sub_20B9267F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for EmojiForegroundSpiralLayersViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiForegroundSpiralLayersViewController);
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.configuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.configuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.configuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.wakeProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.wakeProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.wakeProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.unlockProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.unlockProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.unlockProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.__allocating_init(emojiRenderer:)()
{
  return (*(uint64_t (**)(void))(v0 + 376))();
}

double *sub_20B8FDB0C()
{
  unint64_t v1 = v0;
  uint64_t result = (double *)objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v3 = result;
  objc_msgSend(result, sel_bounds);
  double v5 = v4;
  double v7 = v6;

  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider;
  uint64_t result = *(double **)&v1[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider];
  if (!result
    || (result[2] == v5 ? (BOOL v9 = result[3] == v7) : (BOOL v9 = 0),
        !v9
     && (*(void *)&v1[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider] = 0,
         swift_release(),
         (uint64_t result = *(double **)&v1[v8]) == 0)))
  {
    type metadata accessor for NewSpiralLayoutProvider();
    swift_allocObject();
    *(void *)&v1[v8] = sub_20B91BF14(v5, v7);
    swift_release();
    uint64_t result = *(double **)&v1[v8];
    if (!result) {
      goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_20B8FDBE8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B8FDC20()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_20B8FDC48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for DecodableDefault.Sources()
{
  return &type metadata for DecodableDefault.Sources;
}

ValueMetadata *type metadata accessor for DecodableDefault.Sources.False()
{
  return &type metadata for DecodableDefault.Sources.False;
}

ValueMetadata *type metadata accessor for DecodableDefault()
{
  return &type metadata for DecodableDefault;
}

uint64_t sub_20B8FDC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_20B8FDC94()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20B8FDD34(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_20B8FDE10(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_20B8FDE8C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_20B8FDF04(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_20B8FDF7C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_20B8FDFF4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_20B8FE06C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        uint64_t v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_20B8FE21C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x20B8FE458);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t type metadata accessor for DecodableDefault.Wrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_20B8FE498()
{
  return MEMORY[0x263F8D518];
}

uint64_t sub_20B8FE4A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v16 - v8;
  uint64_t v22 = type metadata accessor for DecodableDefault.Wrapper();
  uint64_t v9 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  int v11 = (char *)&v16 - v10;
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = v20;
  sub_20B926F98();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  else
  {
    uint64_t v20 = v21[4];
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    swift_getAssociatedConformanceWitness();
    int v13 = v19;
    sub_20B926EE8();
    (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v11, v13, AssociatedTypeWitness);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t v14 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v18, v11, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  }
}

uint64_t sub_20B8FE74C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_20B8FE4A4(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

void sub_20B8FE76C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_20B8FE774()
{
  return swift_getWitnessTable();
}

uint64_t sub_20B8FE7BC()
{
  return sub_20B9268E8() & 1;
}

uint64_t sub_20B8FE828()
{
  swift_getAssociatedTypeWitness();
  return sub_20B9268C8();
}

uint64_t sub_20B8FE890()
{
  return sub_20B926F88();
}

uint64_t sub_20B8FE904()
{
  return sub_20B8FE7BC();
}

uint64_t sub_20B8FE914()
{
  return sub_20B8FE890();
}

uint64_t sub_20B8FE91C()
{
  return sub_20B8FE828();
}

uint64_t sub_20B8FE924()
{
  return sub_20B926F88();
}

uint64_t sub_20B8FE978(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B926FB8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_getAssociatedTypeWitness();
  sub_20B926EF8();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_20B8FEA40(void *a1)
{
  return sub_20B8FE978(a1);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

BOOL static GradientStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GradientStyle.hash(into:)()
{
  return sub_20B926F68();
}

uint64_t GradientStyle.hashValue.getter()
{
  return sub_20B926F88();
}

void sub_20B8FEB18()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ColorButton();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_layer);
  id v2 = objc_msgSend(self, sel_whiteColor);
  id v3 = objc_msgSend(v2, sel_CGColor);

  objc_msgSend(v1, sel_setBorderColor_, v3);
  id v4 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v4, sel_setBorderWidth_, 10.0);

  id v5 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setCornerRadius_, v6 * 0.5);
}

uint64_t type metadata accessor for ColorButton()
{
  return self;
}

id ColorButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ColorButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ColorButton();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id ColorButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ColorButton.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ColorButton();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ColorButton.__deallocating_deinit()
{
  return sub_20B900ED8(type metadata accessor for ColorButton);
}

uint64_t sub_20B8FEEE4@<X0>(unsigned char *a1@<X8>)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_20B8FEF34(char *a1)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t (*sub_20B8FEF88())()
{
  return j__swift_endAccess;
}

uint64_t sub_20B8FEFE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v6 = *(void *)(v3 + 40);
  *(unsigned char *)a2 = *(unsigned char *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_20B8FF064(char *a1, void *a2)
{
  char v2 = *a1;
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 4);
  uint64_t v5 = *((void *)a1 + 5);
  uint64_t v6 = *a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  *(unsigned char *)uint64_t v6 = v2;
  *(_OWORD *)(v6 + 8) = v7;
  *(void *)(v6 + 24) = v3;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20B90050C();
}

uint64_t sub_20B8FF11C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v6 = *(void *)(v3 + 40);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_20B8FF198(char *a1)
{
  char v3 = *a1;
  long long v6 = *(_OWORD *)(a1 + 8);
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  *(unsigned char *)uint64_t v5 = v3;
  *(_OWORD *)(v5 + 8) = v6;
  *(void *)(v5 + 24) = v4;
  *(_OWORD *)(v5 + 32) = *((_OWORD *)a1 + 2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20B90050C();
}

void (*sub_20B8FF234(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B8FF294;
}

void sub_20B8FF294(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B90050C();
  }
}

uint64_t sub_20B8FF2C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  return MEMORY[0x21053B1C0](v1);
}

uint64_t sub_20B8FF318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_20B8FF384(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21053B1C0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_20B8FF40C;
}

void sub_20B8FF40C(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id sub_20B8FF494()
{
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825E0]), sel_init);
    objc_msgSend(v4, sel_setDelegate_, v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *GradientConfigurationController.__allocating_init(gradientProperties:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return GradientConfigurationController.init(gradientProperties:)(a1);
}

char *GradientConfigurationController.init(gradientProperties:)(char *a1)
{
  char v3 = *a1;
  long long v36 = *(_OWORD *)(a1 + 8);
  v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type] = 0;
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  *uint64_t v5 = 0u;
  v5[1] = 0u;
  CGColorRef v5[2] = 0u;
  id v6 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  _OWORD *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView;
  id v8 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  id v9 = v1;
  *(void *)&v1[v7] = objc_msgSend(v8, sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_styleSegmentedControl;
  *(void *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BB0]), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider;
  type metadata accessor for GradientColorSlider();
  *(void *)&v9[v11] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider;
  *(void *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BD8]), sel_init);
  *(void *)&v9[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker] = 0;
  int v13 = &v9[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater];
  *(void *)int v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = &v9[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  *uint64_t v14 = v3;
  *(_OWORD *)(v14 + 8) = v36;
  *((void *)v14 + 3) = v4;
  *((_OWORD *)v14 + 2) = *((_OWORD *)a1 + 2);

  v37.receiver = v9;
  v37.super_class = (Class)type metadata accessor for GradientConfigurationController();
  uint64_t v15 = (char *)objc_msgSendSuper2(&v37, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v16 = &v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  swift_beginAccess();
  uint64_t v17 = *((void *)v16 + 3);
  uint64_t v18 = *((void *)v16 + 4);
  uint64_t v19 = *((void *)v16 + 5);
  uint64_t v20 = &v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  uint64_t v21 = *(void *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  uint64_t v22 = *(void *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 8];
  uint64_t v23 = *(void *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 16];
  uint64_t v24 = *(void *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 24];
  uint64_t v25 = *(void *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 32];
  long long v26 = *(_OWORD *)(v16 + 8);
  *(void *)uint64_t v20 = *v16;
  *(_OWORD *)(v20 + 8) = v26;
  *((void *)v20 + 3) = v17;
  *((void *)v20 + 4) = v18;
  *((void *)v20 + 5) = v19;
  uint64_t v27 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20B8E7820(v21, v22, v23, v24, v25);
  uint64_t v28 = *((void *)v16 + 4);
  uint64_t v29 = &v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  uint64_t v30 = *(void *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  uint64_t v31 = *(void *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 8];
  uint64_t v32 = *(void *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 16];
  uint64_t v33 = *(void *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 24];
  uint64_t v34 = *(void *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 32];
  *(void *)uint64_t v29 = 1;
  *((void *)v29 + 1) = 0;
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0x3FF0000000000000;
  *((void *)v29 + 4) = v28;
  *((void *)v29 + 5) = &unk_26C0664C0;
  swift_bridgeObjectRetain();
  sub_20B8E7820(v30, v31, v32, v33, v34);

  return v27;
}

char *GradientConfigurationController.init(coder:)(void *a1)
{
  v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type] = 0;
  char v3 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  CGColorRef v3[2] = 0u;
  uint64_t v4 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  v4[1] = 0u;
  v4[2] = 0u;
  _OWORD *v4 = 0u;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView;
  id v6 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  uint64_t v7 = v1;
  *(void *)&v1[v5] = objc_msgSend(v6, sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_styleSegmentedControl;
  *(void *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BB0]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider;
  type metadata accessor for GradientColorSlider();
  *(void *)&v7[v9] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider;
  *(void *)&v7[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BD8]), sel_init);
  *(void *)&v7[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker] = 0;
  uint64_t v11 = &v7[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = &v7[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  *uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0x3FF0000000000000;
  *((void *)v12 + 4) = &unk_26C0664F0;
  *((void *)v12 + 5) = &unk_26C066550;

  v37.receiver = v7;
  v37.super_class = (Class)type metadata accessor for GradientConfigurationController();
  int v13 = (char *)objc_msgSendSuper2(&v37, sel_initWithCoder_, a1);
  uint64_t v14 = v13;
  if (v13)
  {
    uint64_t v15 = &v13[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
    swift_beginAccess();
    uint64_t v16 = *((void *)v15 + 3);
    uint64_t v17 = *((void *)v15 + 4);
    uint64_t v18 = *((void *)v15 + 5);
    uint64_t v19 = &v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
    long long v36 = a1;
    uint64_t v20 = *(void *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
    uint64_t v21 = *(void *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 8];
    uint64_t v22 = *(void *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 16];
    uint64_t v23 = *(void *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 24];
    uint64_t v24 = *(void *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 32];
    long long v25 = *(_OWORD *)(v15 + 8);
    *(void *)uint64_t v19 = *v15;
    *(_OWORD *)(v19 + 8) = v25;
    *((void *)v19 + 3) = v16;
    *((void *)v19 + 4) = v17;
    *((void *)v19 + 5) = v18;
    long long v26 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20B8E7820(v20, v21, v22, v23, v24);
    uint64_t v27 = *((void *)v15 + 4);
    uint64_t v28 = &v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
    uint64_t v29 = *(void *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
    uint64_t v30 = *(void *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 8];
    uint64_t v31 = *(void *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 16];
    uint64_t v32 = *(void *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 24];
    uint64_t v33 = *(void *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 32];
    *(void *)uint64_t v28 = 1;
    *((void *)v28 + 1) = 0;
    *((void *)v28 + 2) = 0;
    *((void *)v28 + 3) = 0x3FF0000000000000;
    *((void *)v28 + 4) = v27;
    *((void *)v28 + 5) = &unk_26C0664C0;
    swift_bridgeObjectRetain();
    uint64_t v34 = v33;
    a1 = v36;
    sub_20B8E7820(v29, v30, v31, v32, v34);
  }
  return v14;
}

void sub_20B8FFAA4()
{
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for GradientConfigurationController();
  objc_msgSendSuper2(&v41, sel_viewDidLoad);
  sub_20B900134();
  sub_20B8F704C(0, &qword_2676A5B78);
  type metadata accessor for BackgroundViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20B926708();

  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  uint64_t v5 = v0;
  uint64_t v40 = v4;
  id v6 = (void *)sub_20B926BA8();
  uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_styleSegmentedControl];
  objc_msgSend(v7, sel_insertSegmentWithAction_atIndex_animated_, v6, 0, 0, 0, 0, 0, sub_20B900778, v40);
  id v8 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20B926708();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  uint64_t v10 = v5;
  uint64_t v11 = (void *)sub_20B926BA8();
  objc_msgSend(v7, sel_insertSegmentWithAction_atIndex_animated_, v11, 1, 0, 0, 0, 0, sub_20B900780, v9);
  objc_msgSend(v7, sel_sizeToFit);
  objc_msgSend(v7, sel_setSelectedSegmentIndex_, 0);

  uint64_t v12 = *(char **)&v10[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider];
  *(void *)&v12[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate + 8] = &off_26C068A70;
  swift_unknownObjectWeakAssign();
  int v13 = *(void **)&v10[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider];
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, v10, sel_attributeSliderValueChangedWithSlider_, 4096);
  sub_20B90050C();
  uint64_t v14 = *(void **)&v10[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView];
  objc_msgSend(v14, sel_addArrangedSubview_, v7);
  objc_msgSend(v14, sel_addArrangedSubview_, v12);
  objc_msgSend(v14, sel_addArrangedSubview_, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2FD0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20B92B780;
  id v16 = objc_msgSend(v10, sel_view);
  if (!v16)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_leadingAnchor);

  id v19 = objc_msgSend(v14, sel_leadingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v15 + 32) = v20;
  id v21 = objc_msgSend(v10, sel_view);
  if (!v21)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v21, sel_trailingAnchor);

  id v24 = objc_msgSend(v14, sel_trailingAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(void *)(v15 + 40) = v25;
  id v26 = objc_msgSend(v10, sel_view);
  if (!v26)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_topAnchor);

  id v29 = objc_msgSend(v14, sel_topAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(void *)(v15 + 48) = v30;
  id v31 = objc_msgSend(v10, sel_view);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = self;
    id v34 = objc_msgSend(v32, sel_bottomAnchor);

    id v35 = objc_msgSend(v14, sel_bottomAnchor);
    id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

    *(void *)(v15 + 56) = v36;
    id v37 = objc_msgSend(v12, sel_heightAnchor);
    id v38 = objc_msgSend(v37, sel_constraintEqualToConstant_, 44.0);

    *(void *)(v15 + 64) = v38;
    sub_20B926AB8();
    sub_20B8F704C(0, &qword_26ACA2EC0);
    uint64_t v39 = (void *)sub_20B926A78();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_activateConstraints_, v39);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_20B900134()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView];
  objc_msgSend(v1, sel_setAxis_, 1);
  objc_msgSend(v1, sel_setDistribution_, 2);
  objc_msgSend(v1, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v1, sel_setSpacing_, 10.0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_addSubview_, v1);
  }
  else
  {
    __break(1u);
  }
}

_OWORD *sub_20B900210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  uint64_t result = (_OWORD *)MEMORY[0x21053B1C0](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t v6 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t v8 = *(void *)(v6 + 16);
    uint64_t v9 = *(void *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
    uint64_t result = (_OWORD *)swift_allocObject();
    result[1] = xmmword_20B92B3B0;
    uint64_t v10 = *(void *)(v6 + 32);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = result;
      long long v13 = *(_OWORD *)(v10 + 48);
      result[2] = *(_OWORD *)(v10 + 32);
      result[3] = v13;
      if (v11 != 1)
      {
        long long v14 = *(_OWORD *)(v10 + 80);
        result[4] = *(_OWORD *)(v10 + 64);
        result[5] = v14;
        uint64_t v15 = *(void *)(v6 + 40);
        *(unsigned char *)uint64_t v6 = 0;
        *(void *)(v6 + 32) = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_20B90050C();
        uint64_t ObjectType = swift_getObjectType();
        v17[0] = 0;
        uint64_t v18 = v7;
        uint64_t v19 = v8;
        uint64_t v20 = v9;
        id v21 = v12;
        uint64_t v22 = v15;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v5 + 16))(a2, v17, ObjectType, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (_OWORD *)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

_OWORD *sub_20B900390(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  uint64_t result = (_OWORD *)MEMORY[0x21053B1C0](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t v6 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 16);
    uint64_t v8 = *(void *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
    uint64_t result = (_OWORD *)swift_allocObject();
    result[1] = xmmword_20B92B3B0;
    uint64_t v9 = *(void *)(v6 + 32);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = result;
      long long v12 = *(_OWORD *)(v9 + 48);
      result[2] = *(_OWORD *)(v9 + 32);
      result[3] = v12;
      if (v10 != 1)
      {
        long long v13 = *(_OWORD *)(v9 + 80);
        result[4] = *(_OWORD *)(v9 + 64);
        result[5] = v13;
        uint64_t v14 = *(void *)(v6 + 40);
        *(unsigned char *)uint64_t v6 = 1;
        *(void *)(v6 + 8) = 0;
        *(void *)(v6 + 32) = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_20B90050C();
        uint64_t ObjectType = swift_getObjectType();
        v16[0] = 1;
        uint64_t v17 = 0;
        uint64_t v18 = v7;
        uint64_t v19 = v8;
        uint64_t v20 = v11;
        uint64_t v21 = v14;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v5 + 16))(a2, v16, ObjectType, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (_OWORD *)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_20B90050C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider];
  uint64_t v3 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  swift_beginAccess();
  uint64_t v4 = *((void *)v3 + 4);
  if (!*(void *)(v4 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v4 + 32), *(double *)(v4 + 40), *(double *)(v4 + 48), *(double *)(v4 + 56));
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor);
  *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor) = v5;
  id v7 = v5;

  sub_20B8F8044();
  uint64_t v8 = *((void *)v3 + 4);
  if (*(void *)(v8 + 16) < 2uLL)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v8 + 64), *(double *)(v8 + 72), *(double *)(v8 + 80), *(double *)(v8 + 88));
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor);
  *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor) = v9;
  id v11 = v9;

  sub_20B8F8044();
  *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset) = *((void *)v3 + 2);
  *(void *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset) = *((void *)v3 + 3);
  LOBYTE(v11) = *v3;
  long long v12 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider];
  objc_msgSend(v12, sel_setMinimumValue_, 0.0);
  if ((v11 & 1) == 0)
  {
    LODWORD(v13) = 1135869952;
    objc_msgSend(v12, sel_setMaximumValue_, v13);
    double v17 = *((double *)v3 + 1);
    uint64_t v19 = &selRef_setValue_;
    goto LABEL_7;
  }
  id v14 = objc_msgSend(v1, sel_view);
  if (v14)
  {
    uint64_t v15 = v14;
    objc_msgSend(v14, sel_bounds);
    double v17 = v16;

    uint64_t v19 = &selRef_setMaximumValue_;
LABEL_7:
    *(float *)&double v18 = v17;
    objc_msgSend(v12, *v19, v18);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t type metadata accessor for GradientConfigurationController()
{
  return self;
}

uint64_t sub_20B900740()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

_OWORD *sub_20B900778(uint64_t a1)
{
  return sub_20B900210(a1, *(void *)(v1 + 16));
}

_OWORD *sub_20B900780(uint64_t a1)
{
  return sub_20B900390(a1, *(void *)(v1 + 16));
}

void sub_20B900788(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (char *)(a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  char v8 = *v7;
  uint64_t v9 = *((void *)v7 + 1);
  uint64_t v10 = *((void *)v7 + 2);
  uint64_t v11 = *((void *)v7 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  long long v12 = (_OWORD *)swift_allocObject();
  v12[1] = xmmword_20B92B3B0;
  EmojiPosterBackgroundColor.init(_:)((UIColor)a1);
  uint64_t v13 = *((void *)v7 + 4);
  if (*(void *)(v13 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    long long v14 = *(_OWORD *)(v13 + 80);
    v12[4] = *(_OWORD *)(v13 + 64);
    v12[5] = v14;
    uint64_t v15 = *((void *)v7 + 5);
    *id v7 = v8;
    *((void *)v7 + 1) = v9;
    *((void *)v7 + 2) = v10;
    *((void *)v7 + 3) = v11;
    *((void *)v7 + 4) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_20B90050C();
    uint64_t ObjectType = swift_getObjectType();
    v17[0] = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v10;
    uint64_t v20 = v11;
    uint64_t v21 = v12;
    uint64_t v22 = v15;
    (*(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(a4 + 16))(a2, v17, ObjectType, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

_OWORD *sub_20B9008E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (char *)(a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  char v8 = *v7;
  uint64_t v9 = *((void *)v7 + 1);
  uint64_t v10 = *((void *)v7 + 2);
  uint64_t v11 = *((void *)v7 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  uint64_t result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_20B92B3B0;
  uint64_t v13 = *((void *)v7 + 4);
  if (*(void *)(v13 + 16))
  {
    long long v14 = result;
    long long v15 = *(_OWORD *)(v13 + 48);
    result[2] = *(_OWORD *)(v13 + 32);
    result[3] = v15;
    EmojiPosterBackgroundColor.init(_:)((UIColor)a1);
    uint64_t v16 = *((void *)v7 + 5);
    *id v7 = v8;
    *((void *)v7 + 1) = v9;
    *((void *)v7 + 2) = v10;
    *((void *)v7 + 3) = v11;
    *((void *)v7 + 4) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_20B90050C();
    uint64_t ObjectType = swift_getObjectType();
    v18[0] = v8;
    uint64_t v19 = v9;
    uint64_t v20 = v10;
    uint64_t v21 = v11;
    uint64_t v22 = v14;
    uint64_t v23 = v16;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(a4 + 16))(a2, v18, ObjectType, a4);
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

_OWORD *sub_20B900A3C(void *a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  uint64_t result = (_OWORD *)swift_beginAccess();
  if ((*v3 & 1) == 0)
  {
    id v5 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
    swift_beginAccess();
    char v6 = *v5;
    objc_msgSend(a1, sel_value);
    float v8 = v7;
    uint64_t v9 = *((void *)v5 + 2);
    uint64_t v10 = *((void *)v5 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
    uint64_t result = (_OWORD *)swift_allocObject();
    result[1] = xmmword_20B92B3B0;
    uint64_t v11 = *((void *)v5 + 4);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = result;
      long long v14 = *(_OWORD *)(v11 + 48);
      result[2] = *(_OWORD *)(v11 + 32);
      result[3] = v14;
      if (v12 != 1)
      {
        double v15 = v8;
        long long v16 = *(_OWORD *)(v11 + 80);
        result[4] = *(_OWORD *)(v11 + 64);
        result[5] = v16;
        uint64_t v17 = *((void *)v5 + 5);
        *id v5 = v6;
        *((double *)v5 + 1) = v15;
        *((void *)v5 + 4) = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_20B90050C();
        uint64_t v18 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
        swift_beginAccess();
        if (MEMORY[0x21053B1C0](v18))
        {
          uint64_t v19 = *(void *)(v18 + 8);
          uint64_t ObjectType = swift_getObjectType();
          v21[0] = v6;
          double v22 = v15;
          uint64_t v23 = v9;
          uint64_t v24 = v10;
          id v25 = v13;
          uint64_t v26 = v17;
          (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v19 + 16))(v1, v21, ObjectType, v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (_OWORD *)swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          return (_OWORD *)swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_20B900C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
  if (v3)
  {
    swift_retain();
    v3(a2);
    sub_20B8F960C((uint64_t)v3);
  }
}

uint64_t sub_20B900DB4()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
  *uint64_t v1 = 0;
  v1[1] = 0;
  return sub_20B8F960C(v2);
}

id GradientConfigurationController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    char v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void GradientConfigurationController.init(nibName:bundle:)()
{
}

id GradientConfigurationController.__deallocating_deinit()
{
  return sub_20B900ED8(type metadata accessor for GradientConfigurationController);
}

id sub_20B900ED8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_20B900F14()
{
  unint64_t result = qword_2676A5B80;
  if (!qword_2676A5B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5B80);
  }
  return result;
}

uint64_t sub_20B900F68@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  objc_super v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_20B900FBC(char *a1, void *a2)
{
  char v2 = *a1;
  objc_super v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_20B901014@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21053B1C0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_20B901070(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

unsigned char *storeEnumTagSinglePayload for GradientStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B9011A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientStyle()
{
  return &type metadata for GradientStyle;
}

uint64_t dispatch thunk of GradientConfigurationControllerDelegate.gradientConfigurationController(_:presentColorPicker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of GradientConfigurationControllerDelegate.gradientConfigurationController(_:didUpdateGradientProperties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for GradientConfigurationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GradientConfigurationController);
}

uint64_t dispatch thunk of GradientConfigurationController.type.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of GradientConfigurationController.type.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of GradientConfigurationController.type.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of GradientConfigurationController.gradientProperties.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of GradientConfigurationController.gradientProperties.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of GradientConfigurationController.gradientProperties.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of GradientConfigurationController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of GradientConfigurationController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of GradientConfigurationController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of GradientConfigurationController.__allocating_init(gradientProperties:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of GradientConfigurationController.colorPickerViewController(_:didSelect:continuously:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of GradientConfigurationController.colorPickerViewControllerDidFinish(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B8))();
}

uint64_t sub_20B901584(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

_OWORD *sub_20B901594(double a1)
{
  int v3 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  uint64_t result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_20B92B3B0;
  uint64_t v8 = *((void *)v3 + 4);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = result;
  long long v11 = *(_OWORD *)(v8 + 48);
  result[2] = *(_OWORD *)(v8 + 32);
  result[3] = v11;
  if (v9 == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  long long v12 = *(_OWORD *)(v8 + 80);
  result[4] = *(_OWORD *)(v8 + 64);
  result[5] = v12;
  uint64_t v13 = *((void *)v3 + 5);
  char *v3 = v4;
  *((double *)v3 + 2) = a1;
  *((void *)v3 + 4) = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_20B90050C();
  uint64_t v14 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  if (MEMORY[0x21053B1C0](v14))
  {
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v17[0] = v4;
    uint64_t v18 = v5;
    double v19 = a1;
    uint64_t v20 = v6;
    uint64_t v21 = v10;
    uint64_t v22 = v13;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v1, v17, ObjectType, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_bridgeObjectRelease();
  }
}

_OWORD *sub_20B901724(double a1)
{
  int v3 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  uint64_t result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_20B92B3B0;
  uint64_t v8 = *((void *)v3 + 4);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = result;
  long long v11 = *(_OWORD *)(v8 + 48);
  result[2] = *(_OWORD *)(v8 + 32);
  result[3] = v11;
  if (v9 == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  long long v12 = *(_OWORD *)(v8 + 80);
  result[4] = *(_OWORD *)(v8 + 64);
  result[5] = v12;
  uint64_t v13 = *((void *)v3 + 5);
  char *v3 = v4;
  *((double *)v3 + 3) = a1;
  *((void *)v3 + 4) = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_20B90050C();
  uint64_t v14 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  if (MEMORY[0x21053B1C0](v14))
  {
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v17[0] = v4;
    uint64_t v18 = v5;
    uint64_t v19 = v6;
    double v20 = a1;
    uint64_t v21 = v10;
    uint64_t v22 = v13;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v1, v17, ObjectType, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_bridgeObjectRelease();
  }
}

void sub_20B9018B8(char *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_currentDevice);
  id v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3)
  {
    id v4 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v4, sel_bounds);
    double v6 = v5;
    double v8 = v7;

    if (v8 >= v6) {
      double v9 = v6;
    }
    else {
      double v9 = v8;
    }
    if (v9 >= 768.0)
    {
      if (v9 <= 820.0) {
        char v10 = 2;
      }
      else {
        char v10 = 3;
      }
    }
    else
    {
      char v10 = 1;
    }
  }
  else
  {
    char v10 = 0;
  }
  *a1 = v10;
}

EmojiPoster::DeviceType_optional __swiftcall DeviceType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (EmojiPoster::DeviceType_optional)rawValue;
}

uint64_t DeviceType.rawValue.getter()
{
  return *v0;
}

unint64_t sub_20B9019C8()
{
  unint64_t result = qword_2676A5C50;
  if (!qword_2676A5C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5C50);
  }
  return result;
}

EmojiPoster::DeviceType_optional sub_20B901A1C(Swift::Int *a1)
{
  return DeviceType.init(rawValue:)(*a1);
}

void sub_20B901A24(void *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *storeEnumTagSinglePayload for DeviceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B901AFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t maximumNumberOfEmoji.getter()
{
  return 6;
}

unint64_t logSubsystem.getter()
{
  return 0xD000000000000015;
}

void sub_20B901B58(char *a1)
{
  char v2 = *a1;
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant);
  swift_beginAccess();
  unsigned char *v3 = v2;
  type metadata accessor for SpiralLayoutProvider();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = v2;
  *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider) = v4;
  swift_release();
  uint64_t v5 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
  swift_beginAccess();
  double v6 = *v5;
  double v7 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
  swift_beginAccess();
  sub_20B902B44(v6, *v7);
}

void (*sub_20B901C34(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_20B901CA0;
}

void sub_20B901CA0(void **a1, char a2)
{
  int v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[6];
    char v5 = *(unsigned char *)(v4 + v3[7]);
    type metadata accessor for SpiralLayoutProvider();
    uint64_t v6 = swift_allocObject();
    *(unsigned char *)(v6 + 16) = v5;
    *(void *)(v4 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider) = v6;
    swift_release();
    double v7 = (double *)(v4 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
    swift_beginAccess();
    double v8 = *v7;
    double v9 = (double *)(v4 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
    swift_beginAccess();
    sub_20B902B44(v8, *v9);
  }
  free(v3);
}

void sub_20B901D80()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  v9[4] = sub_20B903AA4;
  v9[5] = v2;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_20B901F60;
  v9[3] = &block_descriptor_5;
  int v3 = _Block_copy(v9);
  id v4 = v0;
  swift_release();
  id v5 = objc_msgSend(v1, sel_customActionWithDuration_actionBlock_, v3, 1.0);
  _Block_release(v3);
  id v6 = v5;
  objc_msgSend(v6, sel_setTimingMode_, 2);
  id v7 = objc_msgSend(v4, sel_scene);
  if (v7)
  {
    double v8 = v7;
    objc_msgSend(v7, sel_runAction_, v6);
  }
}

void sub_20B901ECC(double a1, uint64_t a2, uint64_t a3)
{
  id v5 = (double *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
  swift_beginAccess();
  if (*v5 != 1.0) {
    a1 = 1.0 - a1;
  }
  id v6 = (double *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
  swift_beginAccess();
  sub_20B902B44(a1, *v6);
}

void sub_20B901F60(uint64_t a1, void *a2, double a3)
{
  id v5 = *(void (**)(double))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a3);
  swift_release();
}

id sub_20B901FD8(void *a1)
{
  v1[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant] = 1;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji] = &unk_26C066580;
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 10;
  id v5 = objc_allocWithZone(MEMORY[0x263EFF8E0]);
  id v6 = v1;
  id v7 = objc_msgSend(v5, sel_init);
  *(void *)(v4 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(void *)&v1[v3] = v4;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures] = MEMORY[0x263F8EE78];
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  type metadata accessor for SpiralLayoutProvider();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 1;
  *(void *)&v6[v8] = v9;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_startingRadius] = 0x4024000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_minRadius] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress] = 0x3FF0000000000000;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for ExpandingSpiralScene();
  id v10 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);
  if (v10)
  {
    long long v11 = self;
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);
  }
  return v10;
}

id sub_20B9021DC(double a1, double a2)
{
  v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant] = 1;
  *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji] = &unk_26C0665B0;
  uint64_t v5 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 10;
  id v7 = objc_allocWithZone(MEMORY[0x263EFF8E0]);
  uint64_t v8 = v2;
  id v9 = objc_msgSend(v7, sel_init);
  *(void *)(v6 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(void *)&v2[v5] = v6;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures] = MEMORY[0x263F8EE78];
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  type metadata accessor for SpiralLayoutProvider();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 1;
  *(void *)&v8[v10] = v11;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_startingRadius] = 0x4024000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_minRadius] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress] = 0x3FF0000000000000;

  v17.receiver = v8;
  v17.super_class = (Class)type metadata accessor for ExpandingSpiralScene();
  id v12 = objc_msgSendSuper2(&v17, sel_initWithSize_, a1, a2);
  id v13 = self;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  return v14;
}

void sub_20B90243C()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_bounds);
    double v4 = v3;

    double v5 = v4 * 0.5;
  }
  else
  {
    double v5 = 100.0;
  }
  *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_minRadius] = v5;
  *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius] = v5;
  objc_msgSend(v0, sel_removeAllChildren);
  uint64_t v6 = &v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures];
  swift_beginAccess();
  *(void *)uint64_t v6 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  id v7 = &v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji];
  swift_beginAccess();
  uint64_t v22 = v7;
  if (!*(void *)(*(void *)v7 + 16)) {
    return;
  }
  sub_20B902758();
  unint64_t v8 = 0;
  unint64_t v9 = 0;
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  uint64_t v11 = &v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant];
LABEL_10:
  unint64_t v23 = v8;
  swift_beginAccess();
  uint64_t v13 = 0;
  while (1)
  {
    if (v13 >= qword_20B92B9F0[*(char *)(*(void *)&v0[v10] + 16)])
    {
      if (*v11 != 2)
      {
        if (__OFADD__(v9, 1)) {
          goto LABEL_32;
        }
        if (v9 + 1 == *(void *)(*(void *)v22 + 16)) {
          unint64_t v9 = 0;
        }
        else {
          ++v9;
        }
      }
      BOOL v12 = *(unsigned __int8 *)(*(void *)&v0[v10] + 16) > 1u || v23 >= 0xB;
      unint64_t v8 = v23 + 1;
      if (v12)
      {
        uint64_t v19 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress];
        swift_beginAccess();
        double v20 = *v19;
        uint64_t v21 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress];
        swift_beginAccess();
        sub_20B902B44(v20, *v21);
        return;
      }
      goto LABEL_10;
    }
    uint64_t v14 = *(void *)v6;
    if ((*(void *)v6 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x21053A2B0](v9, v14);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    if ((v9 & 0x8000000000000000) != 0) {
      break;
    }
    if (v9 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_30;
    }
    id v15 = *(id *)(v14 + 8 * v9 + 32);
LABEL_16:
    ++v13;
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C20]), sel_initWithTexture_, v15);

    id v17 = v16;
    uint64_t v18 = (void *)sub_20B926908();
    objc_msgSend(v17, sel_setName_, v18);

    objc_msgSend(v0, sel_addChild_, v17);
    if (*v11 == 2)
    {
      if (__OFADD__(v9, 1)) {
        goto LABEL_31;
      }
      if (v9 + 1 == *(void *)(*(void *)v22 + 16)) {
        unint64_t v9 = 0;
      }
      else {
        ++v9;
      }
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_20B902758()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5)
  {
    uint64_t v6 = self;
    id v7 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures);
    uint64_t v29 = *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiRenderer);
    swift_bridgeObjectRetain();
    unint64_t v8 = (uint64_t *)(v4 + 40);
    int64x2_t v27 = vdupq_n_s64(0x4069000000000000uLL);
    uint64_t v26 = v6;
    id v28 = v7;
    while (1)
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      id v11 = objc_allocWithZone(NSString);
      swift_bridgeObjectRetain_n();
      BOOL v12 = (void *)sub_20B926908();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v11, sel_initWithString_, v12);

      id v14 = objc_msgSend(*(id *)(v29 + 24), sel_objectForKey_, v13);
      if (v14)
      {
        id v15 = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
        objc_msgSend(v16, sel_setOpaque_, 0);
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v16, 200.0, 200.0);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v9;
        *(void *)(v18 + 24) = v10;
        *(int64x2_t *)(v18 + 32) = v27;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = sub_20B8EF014;
        *(void *)(v19 + 24) = v18;
        aBlock[4] = sub_20B8EF030;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_20B8F48A4;
        aBlock[3] = &block_descriptor_55;
        double v20 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        id v21 = objc_msgSend(v17, sel_imageWithActions_, v20);
        _Block_release(v20);
        LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v20)
        {
          __break(1u);
          return result;
        }
        uint64_t v22 = *(void **)(v29 + 24);
        id v15 = v21;
        id v23 = v22;
        objc_msgSend(v23, sel_setObject_forKey_, v15, v13);
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v6 = v26;
      }

      id v24 = objc_msgSend(v6, sel_textureWithImage_, v15);
      swift_beginAccess();
      id v25 = v24;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20B926AC8();
      }
      v8 += 2;
      sub_20B926AD8();
      sub_20B926AB8();
      swift_endAccess();

      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_20B902B44(double a1, double a2)
{
  double v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5AB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20B9294E0;
  sub_20B926C48();
  sub_20B926A08();
  sub_20B926AE8();
  sub_20B926A08();
  sub_20B926AE8();
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = 0xE000000000000000;
  sub_20B926F38();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions] = sub_20B903084(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_20B926908();
  uint64_t v10 = (void *)swift_allocObject();
  CGColorRef v10[2] = v3;
  v10[3] = v8;
  v10[4] = v7;
  v13[4] = sub_20B904CD8;
  v13[5] = v10;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_20B9222BC;
  v13[3] = &block_descriptor_46;
  id v11 = _Block_copy(v13);
  id v12 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_enumerateChildNodesWithName_usingBlock_, v9, v11);
  _Block_release(v11);
  swift_release();
  swift_release();
}

unint64_t sub_20B902DC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  self;
  unint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v10 = (void *)result;
    id v11 = (uint64_t *)(a4 + 16);
    id v12 = (uint64_t *)(a5 + 16);
    swift_beginAccess();
    unint64_t v13 = *v11;
    swift_beginAccess();
    uint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions);
    double v15 = 0.0;
    if (v14 && *(void *)(v14 + 16))
    {
      unint64_t result = sub_20B90D45C(*v12);
      double v16 = 0.0;
      if (v17)
      {
        if ((v13 & 0x8000000000000000) != 0)
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 8 * result);
        if (v13 >= *(void *)(v18 + 16))
        {
LABEL_22:
          __break(1u);
          return result;
        }
        uint64_t v19 = v18 + 16 * v13;
        double v15 = *(double *)(v19 + 32);
        double v16 = *(double *)(v19 + 40);
      }
    }
    else
    {
      double v16 = 0.0;
    }
    id v20 = a1;
    objc_msgSend(v10, sel_setPosition_, v15, v16);
    swift_beginAccess();
    sub_20B904CE4(*v11);
    double v22 = v21;
    double v24 = v23;
    swift_beginAccess();
    uint64_t v25 = *v11;
    swift_beginAccess();
    uint64_t v26 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
    double v27 = 1.0;
    if (*(unsigned __int8 *)(*(void *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider) + 16) < 2u) {
      double v27 = 12.0;
    }
    objc_msgSend(v10, sel_setZRotation_, (double)(((double)v25 * 15.0 + fmod((double)*v12 / v27 * 360.0 + 90.0, 360.0)) * 0.0174532925));
    objc_msgSend(v10, sel_scaleToSize_, v22, v24);

    unint64_t result = swift_beginAccess();
    if (__OFADD__(*v11, 1))
    {
      __break(1u);
    }
    else
    {
      if (*v11 + 1 != qword_20B92B9F0[*(char *)(*(void *)(a3 + v26) + 16)])
      {
        unint64_t result = swift_beginAccess();
        uint64_t v28 = *v11 + 1;
        if (!__OFADD__(*v11, 1)) {
          goto LABEL_16;
        }
        goto LABEL_20;
      }
      unint64_t result = swift_beginAccess();
      if (!__OFADD__(*v12, 1))
      {
        ++*v12;
        unint64_t result = swift_beginAccess();
        uint64_t v28 = 0;
LABEL_16:
        *id v11 = v28;
        return result;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_20B903084(double a1, double a2)
{
  double v3 = v2;
  id v6 = objc_msgSend(v2, sel_view);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  uint64_t v50 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius;
  uint64_t v48 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  unsigned int v9 = *(unsigned __int8 *)(*(void *)&v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider] + 16);
  if (v9 >= 2) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = 12;
  }
  double v47 = a1 * 10.0;
  double v45 = a1 * 10.0 + 25.3 - a2 * 8.0;
  double v46 = a2 * 8.0;
  id v11 = (void *)MEMORY[0x263F8EE80];
  double v49 = (1.0 - a1) * 30.0 + (1.0 - a2) * 20.0;
  while (1)
  {
    swift_retain();
    objc_msgSend(v7, sel_bounds);
    double MidX = CGRectGetMidX(v53);
    objc_msgSend(v7, sel_bounds);
    double MidY = CGRectGetMidY(v54);
    double v13 = 1.02;
    double v14 = 30.0;
    if (v9)
    {
      if (v9 != 1)
      {
        double v19 = 360.0 / (double)v10 * (double)v8;
        double v13 = 0.15;
        double v18 = 0.671951762;
        double v15 = v45;
        unint64_t v20 = 35;
        goto LABEL_20;
      }
      double v13 = 1.09;
      double v14 = 15.8;
    }
    double v15 = v47 + v14 - v46;
    double v16 = v13 * log(*(double *)&v3[v50] / v15);
    double v17 = 8.0;
    if (!v9) {
      double v17 = 30.0;
    }
    double v18 = v16 / v17;
    double v19 = 360.0 / (double)v10 * (double)v8;
    unint64_t v20 = v9 ? 8 : 30;
LABEL_20:
    double v21 = (v19 - v49) * 0.0174532925;
    double v22 = sub_20B908D70(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v23 = v22[2];
    uint64_t v24 = 2 * v23;
    double v25 = 0.0;
    do
    {
      double v26 = exp(v13 * v25);
      __double2 v27 = __sincos_stret(v21 + v25);
      unint64_t v28 = v22[3];
      unint64_t v29 = v23 + 1;
      if (v23 >= v28 >> 1) {
        double v22 = sub_20B908D70((void *)(v28 > 1), v23 + 1, 1, v22);
      }
      CGColorRef v22[2] = v29;
      id v30 = (double *)&v22[v24];
      v30[4] = MidX + v27.__cosval * (v15 * v26);
      v30[5] = MidY + v27.__sinval * (v15 * v26);
      double v25 = v18 + v25;
      v24 += 2;
      ++v23;
    }
    while (v29 < v20);
    swift_release();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v33 = sub_20B90D45C(v8);
    uint64_t v34 = v11[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (v11[3] >= v36)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v32) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_20B904ADC();
        if (v37) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_20B904338(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_20B90D45C(v8);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_40;
      }
      unint64_t v33 = v38;
      if (v37)
      {
LABEL_6:
        uint64_t v12 = v11[7];
        swift_bridgeObjectRelease();
        *(void *)(v12 + 8 * v33) = v22;
        goto LABEL_7;
      }
    }
    v11[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v40 = 8 * v33;
    *(void *)(v11[6] + v40) = v8;
    *(void *)(v11[7] + v40) = v22;
    uint64_t v41 = v11[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_39;
    }
    void v11[2] = v43;
LABEL_7:
    swift_bridgeObjectRelease();
    ++v8;
    unsigned int v9 = *(unsigned __int8 *)(*(void *)&v3[v48] + 16);
    if (v9 >= 2) {
      uint64_t v10 = 1;
    }
    else {
      uint64_t v10 = 12;
    }
    if (v8 >= (unint64_t)v10)
    {

      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_20B926F28();
  __break(1u);
  return result;
}

id sub_20B9034FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandingSpiralScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ExpandingSpiralScene()
{
  return self;
}

uint64_t sub_20B9035D0()
{
  return swift_bridgeObjectRetain();
}

void sub_20B903620(uint64_t a1)
{
  double v3 = (void *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji);
  swift_beginAccess();
  void *v3 = a1;
  swift_bridgeObjectRelease();
  sub_20B90243C();
}

void (*sub_20B903684(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B9036E8;
}

void sub_20B9036E8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B90243C();
  }
}

uint64_t sub_20B90371C@<X0>(unsigned char *a1@<X8>)
{
  double v3 = (unsigned char *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

void sub_20B903770(char *a1)
{
  char v1 = *a1;
  sub_20B901B58(&v1);
}

void (*sub_20B9037A8(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B901C34(v2);
  return sub_20B8EE710;
}

double sub_20B903804()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B903850(double a1)
{
  double v3 = (double *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
  swift_beginAccess();
  double *v3 = a1;
  sub_20B901D80();
}

void (*sub_20B9038AC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B903910;
}

void sub_20B903910(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B901D80();
  }
}

double sub_20B903944()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B903990(double a1)
{
  double v3 = (double *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_20B9039E8())()
{
  return j__swift_endAccess;
}

void sub_20B903A48()
{
}

uint64_t sub_20B903A6C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B903AA4(uint64_t a1, double a2)
{
  sub_20B901ECC(a2, a1, *(void *)(v2 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_20B903AC4(uint64_t a1, char a2)
{
  double v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38F0);
  char v36 = a2;
  uint64_t v6 = sub_20B926D88();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    double v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_20B926F58();
    sub_20B9269C8();
    uint64_t result = sub_20B926F88();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    double v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *double v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  double v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_20B903DDC(uint64_t a1, char a2)
{
  double v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38F8);
  uint64_t result = sub_20B926D88();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                double v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              double v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_20B926F48();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_20B904090(uint64_t a1, char a2)
{
  double v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38E8);
  uint64_t result = sub_20B926D88();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    int64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                double v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              double v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_20B926F48();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_20B904338(uint64_t a1, char a2)
{
  double v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2676A5CB0);
  uint64_t result = sub_20B926D88();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_20B926F48();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void *sub_20B9045F0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926D78();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20B9047A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926D78();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20B90494C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926D78();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20B904ADC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2676A5CB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926D78();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_20B904C80()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B904C90()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

unint64_t sub_20B904CD8(void *a1, uint64_t a2)
{
  return sub_20B902DC0(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_20B904CE4(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant];
  swift_beginAccess();
  if (*v3 == 1)
  {
    sub_20B920830(a1);
  }
  else
  {
    id v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_bounds);
    }
    id v6 = objc_msgSend(v1, sel_view);
    if (v6)
    {
      unint64_t v7 = v6;
      objc_msgSend(v6, sel_bounds);
    }
  }
}

uint64_t sub_20B904EE4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B904F1C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t dispatch thunk of EmojiDeviceOrientationHandling.setDeviceInterfaceOrientation(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_20B904F50(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = sub_20B9266F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v107 = v6;
  uint64_t v108 = v7;
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v105 = (char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v104 = (char *)v90 - v11;
  uint64_t v106 = v12;
  MEMORY[0x270FA5388](v10);
  id v103 = (char *)v90 - v13;
  uint64_t v14 = sub_20B926978();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2760);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20B926738();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  int64_t v22 = (char *)v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v95 = (char *)v90 - v23;
  uint64_t v94 = v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_logger;
  sub_20B9267E8();
  uint64_t v98 = OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows;
  *(void *)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows) = 0;
  id v97 = (uint64_t **)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_patterns);
  *(void *)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_patterns) = MEMORY[0x263F8EE78];
  v109 = (uint64_t *)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount);
  *(void *)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount) = 0;
  id v99 = (uint64_t *)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount);
  *(void *)(v4 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount) = 0;
  int64_t v24 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  unint64_t v25 = (void *)sub_20B926908();
  id v26 = objc_msgSend(a3, sel_URLForResource_withExtension_, v24, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_34;
  }
  sub_20B926728();

  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v27(v17, v22, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  uint64_t v93 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_34:

    sub_20B906370((uint64_t)v17);
    return v4;
  }
  uint64_t v92 = v18;
  v27(v95, v17, v18);
  sub_20B926968();
  uint64_t v28 = 0;
  uint64_t v29 = sub_20B9268F8();
  unint64_t v31 = v30;
  uint64_t v115 = 10;
  unint64_t v116 = 0xE100000000000000;
  MEMORY[0x270FA5388](v29);
  uint64_t v88 = (uint64_t)&v115;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_20B905D40(1000, 0, sub_20B9063D0, (uint64_t)&v90[-4], v29, v31);
  swift_bridgeObjectRelease();
  uint64_t v119 = 0;
  unint64_t v120 = 0xE000000000000000;
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    id v91 = a3;
    uint64_t v96 = v4;
    a3 = 0;
    uint64_t v102 = v108 + 8;
    uint64_t v101 = v108 + 16;
    uint64_t v100 = v108 + 32;
    v90[1] = v32;
    int64_t v34 = (uint64_t *)(v32 + 56);
    while (1)
    {
      uint64_t v37 = *(v34 - 3);
      unint64_t v38 = *(v34 - 2);
      uint64_t v40 = *(v34 - 1);
      uint64_t v39 = *v34;
      swift_bridgeObjectRetain();
      if ((v38 ^ v37) >= 0x4000)
      {
        if (sub_20B926BB8() == 35 && v67 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_32:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        char v69 = sub_20B926ED8();
        swift_bridgeObjectRelease();
        if (v69) {
          goto LABEL_32;
        }
      }
      uint64_t v113 = v33;
      uint64_t v115 = v37;
      unint64_t v116 = v38;
      uint64_t v117 = v40;
      uint64_t v118 = v39;
      uint64_t v41 = v103;
      sub_20B9266E8();
      sub_20B906428();
      uint64_t v42 = sub_20B926BE8();
      unint64_t v111 = v43;
      uint64_t v112 = v42;
      uint64_t v44 = a3;
      uint64_t v4 = v107;
      uint64_t v45 = v108;
      double v46 = *(void (**)(char *, uint64_t))(v108 + 8);
      uint64_t v47 = v102;
      v46(v41, v107);
      swift_bridgeObjectRelease();
      sub_20B9266B8();
      uint64_t v110 = v28;
      uint64_t v48 = v104;
      sub_20B9266D8();
      v46(v41, v4);
      double v49 = v105;
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v105, v48, v4);
      unint64_t v50 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v51 = swift_allocObject();
      double v52 = *(void (**)(unint64_t, char *, uint64_t))(v45 + 32);
      a3 = v44;
      v52(v51 + v50, v49, v4);
      v46(v48, v4);
      uint64_t v28 = v110;
      uint64_t v53 = sub_20B906574(v112, v111, (uint64_t (*)(uint64_t))sub_20B90650C, v51);
      unint64_t v55 = v54;
      swift_release();
      double v56 = v109;
      if (v44)
      {
        if (v44 != (char *)1) {
          goto LABEL_12;
        }
        double v56 = v99;
      }
      *double v56 = sub_20B9269D8();
LABEL_12:
      uint64_t v57 = HIBYTE(v55) & 0xF;
      if ((v55 & 0x2000000000000000) == 0) {
        uint64_t v57 = v53 & 0xFFFFFFFFFFFFLL;
      }
      if (v57)
      {
        char v35 = &v119;
        sub_20B926A08();
        swift_bridgeObjectRelease();
        BOOL v36 = __OFADD__(v44, 1);
        a3 = v44 + 1;
        uint64_t v33 = v113;
        if (v36)
        {
          __break(1u);
LABEL_53:
          char v35 = sub_20B908918(0, v35[2] + 1, 1, v35);
          *id v97 = v35;
LABEL_41:
          unint64_t v74 = v35[2];
          unint64_t v73 = v35[3];
          if (v74 >= v73 >> 1)
          {
            char v35 = sub_20B908918((void *)(v73 > 1), v74 + 1, 1, v35);
            *id v97 = v35;
          }
          v35[2] = v74 + 1;
          id v75 = &v35[2 * v74];
          v75[4] = v53;
          v75[5] = v55;
          swift_endAccess();
          goto LABEL_45;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v58 = v119;
        unint64_t v59 = v120;
        uint64_t v60 = HIBYTE(v120) & 0xF;
        if ((v120 & 0x2000000000000000) == 0) {
          uint64_t v60 = v119 & 0xFFFFFFFFFFFFLL;
        }
        uint64_t v33 = v113;
        if (v60)
        {
          if (!*(void *)(v96 + v98)) {
            *(void *)(v96 + v98) = a3;
          }
          double v61 = v97;
          swift_beginAccess();
          id v62 = *v61;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *double v61 = v62;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            id v62 = sub_20B908918(0, v62[2] + 1, 1, v62);
            *id v97 = v62;
          }
          unint64_t v65 = v62[2];
          unint64_t v64 = v62[3];
          if (v65 >= v64 >> 1)
          {
            id v62 = sub_20B908918((void *)(v64 > 1), v65 + 1, 1, v62);
            *id v97 = v62;
          }
          _OWORD v62[2] = v65 + 1;
          id v66 = &v62[2 * v65];
          v66[4] = v58;
          v66[5] = v59;
          swift_endAccess();
          uint64_t v119 = 0;
          unint64_t v120 = 0xE000000000000000;
        }
      }
LABEL_6:
      v34 += 4;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        uint64_t v53 = v119;
        unint64_t v55 = v120;
        uint64_t v4 = v96;
        a3 = v91;
        goto LABEL_37;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = 0;
  unint64_t v55 = 0xE000000000000000;
LABEL_37:
  uint64_t v70 = HIBYTE(v55) & 0xF;
  if ((v55 & 0x2000000000000000) == 0) {
    uint64_t v70 = v53 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v47 = v92;
  uint64_t v33 = v93;
  if (v70)
  {
    uint64_t v71 = v97;
    swift_beginAccess();
    char v35 = *v71;
    char v72 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v71 = v35;
    if ((v72 & 1) == 0) {
      goto LABEL_53;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
LABEL_45:
  id v76 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v76, sel_bounds);
  uint64_t v78 = v77;
  uint64_t v80 = v79;

  swift_retain();
  char v81 = sub_20B9267D8();
  id v82 = (void *)sub_20B926B38();
  if (!os_log_type_enabled(v81, (os_log_type_t)v82))
  {

    swift_release();
    goto LABEL_50;
  }
  uint64_t v83 = swift_slowAlloc();
  *(_DWORD *)uint64_t v83 = 134219520;
  uint64_t v84 = *v99;
  uint64_t v85 = *v109;
  if (*v99 == *v109 || (BOOL v36 = __OFADD__(v84, v85), v84 += v85, !v36))
  {
    uint64_t v115 = v84;
    sub_20B926BC8();
    *(_WORD *)(v83 + 12) = 2048;
    uint64_t v115 = *v109;
    sub_20B926BC8();
    *(_WORD *)(v83 + 22) = 2048;
    uint64_t v115 = *v99;
    sub_20B926BC8();
    *(_WORD *)(v83 + 32) = 2048;
    uint64_t v115 = *(void *)(v4 + v98);
    sub_20B926BC8();
    *(_WORD *)(v83 + 42) = 2048;
    id v86 = v97;
    swift_beginAccess();
    uint64_t v114 = (*v86)[2];
    sub_20B926BC8();
    swift_release();
    *(_WORD *)(v83 + 52) = 2048;
    uint64_t v114 = v78;
    sub_20B926BC8();
    *(_WORD *)(v83 + 62) = 2048;
    uint64_t v114 = v80;
    sub_20B926BC8();
    _os_log_impl(&dword_20B8D3000, v81, (os_log_type_t)v82, "Pattern parser: numloc: %ld, evenCount: %ld, oddCount: %ld, numRows: %ld,   numPatterns: %ld, screenSize: %f, %f", (uint8_t *)v83, 0x48u);
    MEMORY[0x21053B150](v83, -1, -1);

LABEL_50:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v95, v47);
    return v4;
  }
  __break(1u);

  int v89 = 0;
  uint64_t v88 = 81;
  uint64_t result = sub_20B926D48();
  __break(1u);
  return result;
}

uint64_t sub_20B905B8C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_logger;
  uint64_t v2 = sub_20B9267F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_20B905C3C()
{
  return type metadata accessor for EmojiPatternParser();
}

uint64_t type metadata accessor for EmojiPatternParser()
{
  uint64_t result = qword_26ACA2770;
  if (!qword_26ACA2770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20B905C90()
{
  uint64_t result = sub_20B9267F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20B905D40(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_20B9061E4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_20B926A38();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_20B9269E8();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_20B9269E8();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_20B926A58();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_20B908A28(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_20B908A28((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  _OWORD v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_20B9269E8();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_20B926A58();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_20B908A28(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_20B908A28((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    _OWORD v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_20B926D38();
  __break(1u);
LABEL_42:
  uint64_t result = sub_20B926D38();
  __break(1u);
  return result;
}

uint64_t sub_20B9061E4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_20B926A58();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_20B908A28(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_20B908A28((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_20B926D38();
  __break(1u);
  return result;
}

uint64_t sub_20B906340@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_20B906370(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2760);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B9063D0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_20B926ED8() & 1;
  }
}

unint64_t sub_20B906428()
{
  unint64_t result = qword_26ACA2EA8;
  if (!qword_26ACA2EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA2EA8);
  }
  return result;
}

uint64_t sub_20B90647C()
{
  uint64_t v1 = sub_20B9266F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_20B90650C()
{
  return sub_20B9266C8() & 1;
}

uint64_t sub_20B906574(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v24 = a4;
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v9 = 0;
    uint64_t v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v20 = a2 & 0xFFFFFFFFFFFFFFLL;
    while (1)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v11 = sub_20B926C38();
        uint64_t v14 = v13;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v21[0] = a1;
          v21[1] = v20;
          uint64_t v11 = *((unsigned __int8 *)v21 + v9);
          if (*((char *)v21 + v9) < 0)
          {
            switch(__clz(v11 ^ 0xFF))
            {
              case 0x1Au:
                uint64_t v12 = (char *)v21 + v9;
LABEL_22:
                uint64_t v11 = v12[1] & 0x3F | ((v11 & 0x1F) << 6);
                uint64_t v14 = 2;
                break;
              case 0x1Bu:
                unint64_t v16 = (char *)v21 + v9;
LABEL_26:
                uint64_t v11 = ((v11 & 0xF) << 12) | ((v16[1] & 0x3F) << 6) | v16[2] & 0x3F;
                uint64_t v14 = 3;
                break;
              case 0x1Cu:
                unint64_t v17 = (char *)v21 + v9;
LABEL_28:
                uint64_t v11 = ((v11 & 0xF) << 18) | ((v17[1] & 0x3F) << 12) | ((v17[2] & 0x3F) << 6) | v17[3] & 0x3F;
                uint64_t v14 = 4;
                break;
              default:
                goto LABEL_16;
            }
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v10 = v19;
          if ((a1 & 0x1000000000000000) == 0) {
            uint64_t v10 = sub_20B926CB8();
          }
          uint64_t v11 = *(unsigned __int8 *)(v10 + v9);
          if (*(char *)(v10 + v9) < 0)
          {
            switch(__clz(v11 ^ 0xFF))
            {
              case 0x1Au:
                uint64_t v12 = (char *)(v9 + v10);
                goto LABEL_22;
              case 0x1Bu:
                unint64_t v16 = (char *)(v9 + v10);
                goto LABEL_26;
              case 0x1Cu:
                unint64_t v17 = (char *)(v9 + v10);
                goto LABEL_28;
              default:
                break;
            }
          }
        }
LABEL_16:
        uint64_t v14 = 1;
      }
LABEL_17:
      char v15 = a3(v11);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v15) {
        sub_20B9269A8();
      }
      v9 += v14;
      if (v9 >= v6)
      {
        swift_bridgeObjectRelease();
        return v22;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_20B9067EC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B906824()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_20B906834(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView;
  id v4 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for EmojiCollectionViewCell();
  id v6 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    sub_20B9069CC();
  }
  return v7;
}

void sub_20B9069CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, v2);

  id v4 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2FD0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20B92BAB0;
  id v6 = objc_msgSend(v1, sel_contentView);
  id v7 = objc_msgSend(v6, sel_leadingAnchor);

  id v8 = objc_msgSend(v2, sel_leadingAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(v5 + 32) = v9;
  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = objc_msgSend(v2, sel_trailingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v5 + 40) = v13;
  id v14 = objc_msgSend(v1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = objc_msgSend(v2, sel_topAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v5 + 48) = v17;
  id v18 = objc_msgSend(v1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_bottomAnchor);

  id v20 = objc_msgSend(v2, sel_bottomAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v5 + 56) = v21;
  sub_20B926AB8();
  sub_20B8F704C(0, &qword_26ACA2EC0);
  id v22 = (id)sub_20B926A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v22);
}

id sub_20B906CD8()
{
  return sub_20B9086B4(type metadata accessor for EmojiCollectionViewCell);
}

id EmojiCollectionViewController.__allocating_init(configuration:)(_OWORD *a1)
{
  id v3 = objc_allocWithZone(v1);
  return EmojiCollectionViewController.init(configuration:)(a1);
}

id EmojiCollectionViewController.init(configuration:)(_OWORD *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField;
  id v4 = objc_allocWithZone(MEMORY[0x263F82CF0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  id v6 = &v5[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  long long v7 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v7;
  long long v8 = a1[1];
  *(_OWORD *)id v6 = *a1;
  *((_OWORD *)v6 + 1) = v8;
  *(_OWORD *)(v6 + 105) = *(_OWORD *)((char *)a1 + 105);
  long long v9 = a1[6];
  long long v10 = a1[4];
  *((_OWORD *)v6 + 5) = a1[5];
  *((_OWORD *)v6 + 6) = v9;
  *((_OWORD *)v6 + 4) = v10;

  id v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmojiSpiralLayout()), sel_init);
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for EmojiCollectionViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCollectionViewLayout_, v11);

  return v12;
}

uint64_t type metadata accessor for EmojiCollectionViewController()
{
  return self;
}

id EmojiCollectionViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiCollectionViewController.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField;
  id v4 = objc_allocWithZone(MEMORY[0x263F82CF0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  id v6 = &v5[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  void v6[16] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v6 + 24) = _Q0;
  *(_OWORD *)(v6 + 40) = _Q0;
  *((_DWORD *)v6 + 26) = 16908288;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *((void *)v6 + 14) = &unk_26C0665E0;
  v6[120] = 0;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for EmojiCollectionViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id sub_20B906FB8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5CE0);
  uint64_t v30 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5CE8);
  uint64_t v4 = *(void *)(v32 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x270FA5388](v32);
  uint64_t v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v30 - v7;
  long long v8 = (objc_class *)type metadata accessor for EmojiCollectionViewController();
  v36.receiver = v0;
  v36.super_class = v8;
  objc_msgSendSuper2(&v36, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  long long v10 = result;
  id v11 = self;
  id v12 = objc_msgSend(v11, sel_clearColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v12);

  id result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v13 = result;
  id v14 = objc_msgSend(v11, sel_clearColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  id v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField];
  objc_msgSend(v15, sel_setDelegate_, v0);
  objc_msgSend(v15, sel_setHidden_, 1);
  objc_msgSend(v15, sel_setKeyboardType_, 124);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v16 = result;
  objc_msgSend(result, sel_addSubview_, v15);

  *(void *)(swift_allocObject() + 16) = v0;
  type metadata accessor for EmojiCollectionViewCell();
  id v17 = v0;
  id v18 = v33;
  sub_20B926B48();
  id result = objc_msgSend(v17, sel_collectionView);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v20 = v31;
  uint64_t v19 = v32;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v31, v18, v32);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v20, v19);
  id v23 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2676A5CF0));
  uint64_t v24 = sub_20B926838();
  uint64_t v25 = OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource;
  unint64_t v26 = *(void **)&v17[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource];
  *(void *)&v17[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource] = v24;

  id result = objc_msgSend(v17, sel_collectionView);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v27 = result;
  objc_msgSend(result, sel_setDataSource_, *(void *)&v17[v25]);

  sub_20B926828();
  sub_20B926818();
  uint64_t v34 = 0;
  char v35 = 0;
  sub_20B926808();
  uint64_t v34 = 1;
  char v35 = 0;
  sub_20B926808();
  uint64_t v34 = 2;
  char v35 = 0;
  sub_20B926808();
  uint64_t v34 = 3;
  char v35 = 0;
  sub_20B926808();
  uint64_t v34 = 4;
  char v35 = 0;
  sub_20B926808();
  uint64_t v34 = 5;
  char v35 = 0;
  id result = (id)sub_20B926808();
  uint64_t v28 = *(void **)&v17[v25];
  if (v28)
  {
    id v29 = v28;
    sub_20B926848();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v1);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v33, v19);
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_20B907520(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5 = &a4[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  uint64_t v6 = *(void *)&a4[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 112];
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_20B926798();
    uint64_t v9 = *(void *)(*((void *)v5 + 14) + 16);
    if (v9)
    {
      unint64_t v10 = v8 % v9;
      if ((v10 & 0x8000000000000000) == 0)
      {
        if (v10 < *(void *)(v6 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          id v11 = (void *)sub_20B926908();
          swift_bridgeObjectRelease();
          objc_msgSend(v7, sel_setText_, v11);

          goto LABEL_7;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView), sel_setText_, 0);
LABEL_7:
  id v12 = objc_msgSend(a4, sel_collectionView);
  if (!v12)
  {
LABEL_14:
    __break(1u);
    return;
  }
  id v13 = v12;
  id v14 = objc_msgSend(v12, sel_numberOfItemsInSection_, sub_20B9267A8());

  double v15 = 167.0 / (double)(uint64_t)v14 * ((double)sub_20B926798() + 1.0);
  id v16 = objc_msgSend(self, sel_systemFontOfSize_, v15);
  objc_msgSend(v7, sel_setFont_, v16);
}

uint64_t sub_20B9076E0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B907718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20B907520(a1, a2, a3, *(char **)(v3 + 16));
}

uint64_t type metadata accessor for EmojiCollectionViewCell()
{
  return self;
}

uint64_t sub_20B907744()
{
  return sub_20B926B58();
}

uint64_t sub_20B9077AC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5CE8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_20B907840()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5CE8);
  return sub_20B907744();
}

void sub_20B907914()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20B926858();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20B926878();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20B926898();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v25 - v13;
  id v15 = objc_msgSend(v1, sel_collectionView);
  if (v15)
  {
    id v16 = v15;
    id v30 = objc_msgSend(v15, sel_collectionViewLayout);

    type metadata accessor for EmojiSpiralLayout();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17 && *((unsigned char *)v1 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) == 1)
    {
      uint64_t v18 = v17;
      sub_20B926888();
      MEMORY[0x210539EE0](v12, 0.001);
      unint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
      v26(v12, v8);
      sub_20B8F704C(0, (unint64_t *)&unk_2676A5D80);
      uint64_t v25 = sub_20B926B78();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v1;
      aBlock[4] = sub_20B909890;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20B917EC8;
      aBlock[3] = &block_descriptor_34;
      id v20 = _Block_copy(aBlock);
      id v21 = v30;
      id v22 = v1;
      swift_release();
      sub_20B926868();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_20B9098F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5D90);
      sub_20B909950();
      sub_20B926C08();
      id v23 = (void *)v25;
      MEMORY[0x21053A1A0](v14, v7, v4, v20);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
      v26(v14, v8);
    }
    else
    {
      id v24 = v30;
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_20B907D3C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField);
  unsigned int v2 = objc_msgSend(v1, sel_isFirstResponder);
  uint64_t v3 = &selRef_resignFirstResponder;
  if (!v2) {
    uint64_t v3 = &selRef_becomeFirstResponder;
  }
  uint64_t v4 = *v3;
  return [v1 v4];
}

void sub_20B907DA4()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) = 0;
  }
  else
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) = 1;
    sub_20B907914();
  }
}

id sub_20B907DCC(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_text);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_20B926948();
  }
  id v8 = objc_allocWithZone(NSString);
  uint64_t v9 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithString_, v9);

  uint64_t v11 = (void *)sub_20B926908();
  unint64_t v59 = v10;
  id v12 = objc_msgSend(v10, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v11);

  sub_20B926948();
  sub_20B926A48();
  id v13 = objc_allocWithZone(NSString);
  id v14 = (void *)sub_20B926908();
  id v15 = objc_msgSend(v13, sel_initWithString_, v14);

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0xE000000000000000;
  id v17 = v15;
  objc_msgSend(v17, sel_length);
  *(void *)&long long v77 = sub_20B908770;
  *((void *)&v77 + 1) = v16;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v76 = sub_20B908778;
  *((void *)&v76 + 1) = &block_descriptor_6;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v18);
  swift_beginAccess();
  uint64_t v19 = *(void *)(v16 + 16);
  unint64_t v20 = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  id v21 = (void *)sub_20B926908();
  objc_msgSend(a1, sel_setText_, v21);

  char v68 = v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 16];
  uint64_t v22 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 24];
  uint64_t v23 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 32];
  uint64_t v24 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 40];
  uint64_t v25 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 48];
  uint64_t v26 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 56];
  uint64_t v27 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 64];
  uint64_t v28 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 72];
  uint64_t v29 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 80];
  uint64_t v30 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 88];
  char v69 = (long long *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  char v60 = v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 105];
  char v61 = v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 104];
  if ((v20 & 0x2000000000000000) != 0) {
    uint64_t v31 = HIBYTE(v20) & 0xF;
  }
  else {
    uint64_t v31 = v19 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v66 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 64];
  uint64_t v67 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 56];
  uint64_t v64 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 80];
  uint64_t v65 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 72];
  uint64_t v62 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 96];
  uint64_t v63 = *(void *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 88];
  if (v31)
  {
    uint64_t v32 = v19;
    sub_20B8E7644(v26, v27, v28, v29, v30);
    uint64_t v33 = 0;
    uint64_t v34 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v20 & 0x1000000000000000) != 0)
      {
        unsigned int v35 = sub_20B926C38();
      }
      else
      {
        if ((v20 & 0x2000000000000000) != 0)
        {
          *(void *)&long long aBlock = v32;
          *((void *)&aBlock + 1) = v20 & 0xFFFFFFFFFFFFFFLL;
        }
        else if ((v32 & 0x1000000000000000) == 0)
        {
          sub_20B926CB8();
        }
        unsigned int v35 = sub_20B926CC8();
      }
      uint64_t v37 = v36;
      if (v35 > 0x7F)
      {
        int v45 = (v35 & 0x3F) << 8;
        if (v35 >= 0x800)
        {
          int v46 = (v45 | (v35 >> 6) & 0x3F) << 8;
          int v47 = (((v46 | (v35 >> 12) & 0x3F) << 8) | (v35 >> 18)) - 2122219023;
          unsigned int v38 = (v46 | (v35 >> 12)) + 8487393;
          if (HIWORD(v35)) {
            unsigned int v38 = v47;
          }
        }
        else
        {
          unsigned int v38 = (v45 | (v35 >> 6)) + 33217;
        }
      }
      else
      {
        unsigned int v38 = v35 + 1;
      }
      *(void *)&long long aBlock = (v38 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v38) >> 3))));
      uint64_t v39 = MEMORY[0x210539FF0](&aBlock);
      uint64_t v41 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v34 = sub_20B908918(0, v34[2] + 1, 1, v34);
      }
      unint64_t v43 = v34[2];
      unint64_t v42 = v34[3];
      if (v43 >= v42 >> 1) {
        uint64_t v34 = sub_20B908918((void *)(v42 > 1), v43 + 1, 1, v34);
      }
      v33 += v37;
      v34[2] = v43 + 1;
      uint64_t v44 = &v34[2 * v43];
      v44[4] = v39;
      v44[5] = v41;
    }
    while (v33 < v31);
  }
  else
  {
    sub_20B8E7644(v26, v27, v28, v29, v30);
    uint64_t v34 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  LOBYTE(aBlock) = v68;
  *((void *)&aBlock + 1) = v22;
  *(void *)&long long v76 = v23;
  *((void *)&v76 + 1) = v24;
  *(void *)&long long v77 = v25;
  *((void *)&v77 + 1) = v67;
  *(void *)&long long v78 = v66;
  *((void *)&v78 + 1) = v65;
  *(void *)&long long v79 = v64;
  *((void *)&v79 + 1) = v63;
  *(void *)&long long v80 = v62;
  BYTE8(v80) = v61;
  BYTE9(v80) = v60;
  char v72 = 2;
  char v71 = 1;
  swift_bridgeObjectRetain();
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0, 0, (char *)&aBlock, &v72, &v71, (unint64_t)v34, 0, (uint64_t)v73);
  long long v48 = v69[5];
  long long v79 = v69[4];
  long long v80 = v48;
  v81[0] = v69[6];
  *(_OWORD *)((char *)v81 + 9) = *(long long *)((char *)v69 + 105);
  long long v49 = v69[1];
  long long aBlock = *v69;
  long long v76 = v49;
  long long v50 = v69[3];
  long long v77 = v69[2];
  long long v78 = v50;
  long long v51 = v73[0];
  long long v52 = v73[1];
  long long v53 = v73[3];
  v69[2] = v73[2];
  v69[3] = v53;
  *char v69 = v51;
  v69[1] = v52;
  long long v54 = v73[4];
  long long v55 = v73[5];
  long long v56 = v74[0];
  *(long long *)((char *)v69 + 105) = *(_OWORD *)((char *)v74 + 9);
  v69[5] = v55;
  v69[6] = v56;
  v69[4] = v54;
  sub_20B8E79D8(&aBlock);
  id result = objc_msgSend(v70, sel_collectionView);
  if (result)
  {
    uint64_t v58 = result;
    swift_bridgeObjectRelease();
    objc_msgSend(v58, sel_reloadData);

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20B9083F4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B9084B8()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField), sel_resignFirstResponder);
  return 0;
}

id EmojiCollectionViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void EmojiCollectionViewController.init(collectionViewLayout:)()
{
}

id EmojiCollectionViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiCollectionViewController.init(nibName:bundle:)()
{
}

id EmojiCollectionViewController.__deallocating_deinit()
{
  return sub_20B9086B4(type metadata accessor for EmojiCollectionViewController);
}

id sub_20B9086B4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void *sub_20B908770()
{
  return sub_20B92064C();
}

uint64_t sub_20B908778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  return swift_release();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void *sub_20B908808(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3918);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      CGColorRef v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B9091B0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908918(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F98);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      CGColorRef v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B90929C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908A28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FB0);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      CGColorRef v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B909390(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908B38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F88);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      CGColorRef v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B909488(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908C48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F90);
      id v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      CGColorRef v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20B909574(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908D70(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2676A5D60);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      CGColorRef v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B909488(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908E80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2676A5D70);
      id v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      CGColorRef v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20B909758(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B908FA4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3498);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      CGColorRef v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B909664(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t method lookup function for EmojiCollectionViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiCollectionViewController);
}

uint64_t dispatch thunk of EmojiCollectionViewController.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.toggleEditEmoji()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.toggleSpinning()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.textField(_:shouldChangeCharactersIn:replacementString:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.textFieldShouldReturn(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

char *sub_20B9091B0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  id result = (char *)sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B90929C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B909390(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

char *sub_20B909488(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_20B926DA8();
  __break(1u);
  return result;
}

char *sub_20B909574(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B909664(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B909758(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B909850()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B909890()
{
  uint64_t v1 = *(char **)(v0 + 16);
  double v2 = *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle];
  double v3 = v2 + 0.1;
  BOOL v4 = v2 < 359.0;
  double v5 = 0.0;
  if (v4) {
    double v5 = v3;
  }
  *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle] = v5;
  return sub_20B907914(objc_msgSend(v1, sel_invalidateLayout));
}

unint64_t sub_20B9098F8()
{
  unint64_t result = qword_2676A5ED0;
  if (!qword_2676A5ED0)
  {
    sub_20B926858();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5ED0);
  }
  return result;
}

unint64_t sub_20B909950()
{
  unint64_t result = qword_2676A5EE0;
  if (!qword_2676A5EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2676A5D90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5EE0);
  }
  return result;
}

unint64_t sub_20B9099B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    double v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EF0);
  uint64_t v2 = sub_20B926D98();
  double v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20B90E638(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_20B90D3C8(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_20B90E6A0(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    CGColorRef v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20B909AD0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3900);
  uint64_t v2 = (void *)sub_20B926D98();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_20B90D3C8((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    CGColorRef v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20B909BDC(uint64_t a1)
{
  return sub_20B909BE8(a1, &qword_2676A5DB0);
}

unint64_t sub_20B909BE8(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_20B926D98();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20B90D350(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    CGColorRef v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20B909D00()
{
  return sub_20B926F78();
}

uint64_t sub_20B909D7C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5DA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B90E5E4();
  sub_20B926FC8();
  char v12 = 0;
  sub_20B926E98();
  if (!v1)
  {
    char v11 = 1;
    sub_20B926E98();
    char v10 = 2;
    sub_20B926E98();
    char v9 = 3;
    sub_20B926E98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20B909F44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a3;
  uint64_t v16 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5DE0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B90EFE4();
  sub_20B926FC8();
  uint64_t v18 = a2;
  char v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3888);
  sub_20B90F0CC(&qword_2676A5DE8, &qword_26ACA33D8);
  sub_20B926EB8();
  if (!v5)
  {
    uint64_t v18 = v15;
    char v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA36F0);
    sub_20B90F158();
    sub_20B926EB8();
    uint64_t v18 = a4;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3870);
    sub_20B90F278(&qword_2676A5E08);
    sub_20B926EB8();
    LOBYTE(v18) = 3;
    sub_20B926EA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_20B90A1C0()
{
  return qword_20B92BE90[*v0];
}

uint64_t sub_20B90A1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B90E28C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20B90A200(uint64_t a1)
{
  unint64_t v2 = sub_20B90E5E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B90A23C(uint64_t a1)
{
  unint64_t v2 = sub_20B90E5E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_20B90A278(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_20B90E3DC(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
}

uint64_t sub_20B90A2A8(void *a1)
{
  return sub_20B909D7C(a1);
}

uint64_t sub_20B90A2C8()
{
  return sub_20B926F88();
}

uint64_t sub_20B90A330()
{
  return sub_20B909D00();
}

uint64_t sub_20B90A33C()
{
  return sub_20B926F88();
}

uint64_t sub_20B90A3A0()
{
  uint64_t result = 0x73726F6C6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F63696A6F6D65;
      break;
    case 2:
      uint64_t result = 0x70616D7865646E69;
      break;
    case 3:
      uint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B90A434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B90EA80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20B90A45C(uint64_t a1)
{
  unint64_t v2 = sub_20B90EFE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B90A498(uint64_t a1)
{
  unint64_t v2 = sub_20B90EFE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B90A4D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20B90EC4C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_20B90A504(void *a1)
{
  return sub_20B909F44(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_20B90A524(void *a1)
{
  sub_20B9267E8();
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_glyphNamesCache;
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v1 + v3) = sub_20B909BE8(MEMORY[0x263F8EE78], &qword_2676A5DC0);
  *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors) = v4;
  uint64_t v5 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors;
  *(void *)(v1 + v5) = sub_20B909BE8(v4, &qword_26ACA38F0);
  uint64_t v6 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors;
  *(void *)(v1 + v6) = sub_20B909BE8(v4, &qword_26ACA38F0);
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors;
  *(void *)(v1 + v7) = sub_20B909BE8(v4, &qword_26ACA38F0);
  uint64_t v8 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_ctFont) = a1;
  font = a1;
  *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_cgFont) = CTFontCopyGraphicsFont(font, 0);
  uint64_t v9 = sub_20B90DDA4(1818453858, 0xE400000000000000);
  if ((v9 & 0x100000000) != 0 || (CFDataRef v10 = CTFontCopyTable(font, v9, 0)) == 0)
  {
    uint64_t v15 = sub_20B9267D8();
    os_log_type_t v16 = sub_20B926B28();
    if (os_log_type_enabled(v15, v16))
    {
      char v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v17 = 0;
      _os_log_impl(&dword_20B8D3000, v15, v16, "No background table data in font", v17, 2u);
      MEMORY[0x21053B150](v17, -1, -1);
    }

    return v8;
  }
  else
  {
    CFDataRef v11 = v10;
    uint64_t v12 = sub_20B926758();
    unint64_t v14 = v13;

    sub_20B9266A8();
    swift_allocObject();
    sub_20B926698();
    sub_20B90E6B0();
    uint64_t v54 = v12;
    unint64_t v55 = v14;
    sub_20B926688();
    swift_release();
    uint64_t v19 = v68;
    int64_t v20 = *(void *)(v65 + 16);
    uint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t v52 = v8;
    uint64_t v53 = v65;
    if (!v20)
    {
LABEL_17:
      *(void *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors) = v21;
      swift_bridgeObjectRelease();
      uint64_t v57 = v19 + 64;
      uint64_t v31 = 1 << *(unsigned char *)(v19 + 32);
      uint64_t v32 = -1;
      if (v31 < 64) {
        uint64_t v32 = ~(-1 << v31);
      }
      unint64_t v33 = v32 & *(void *)(v19 + 64);
      char v61 = (uint64_t *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
      char v60 = (uint64_t *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
      unint64_t v59 = (uint64_t *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors);
      int64_t v58 = (unint64_t)(v31 + 63) >> 6;
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v34 = 0;
      if (!v33) {
        goto LABEL_21;
      }
LABEL_20:
      unint64_t v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      for (unint64_t i = v35 | (v34 << 6); ; unint64_t i = __clz(__rbit64(v38)) + (v34 << 6))
      {
        unint64_t v40 = *(void *)(*(void *)(v19 + 56) + 8 * i);
        if ((v40 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        if (v40 >= *(void *)(v67 + 16)) {
          goto LABEL_44;
        }
        uint64_t v41 = *(void **)(v67 + 32 + 8 * v40);
        if (!v41[2]) {
          goto LABEL_45;
        }
        uint64_t v42 = v19;
        unint64_t v43 = (uint64_t *)(*(void *)(v19 + 48) + 16 * i);
        uint64_t v44 = *v43;
        uint64_t v45 = v43[1];
        uint64_t v46 = v41[4];
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v62 = *v61;
        *char v61 = 0x8000000000000000;
        sub_20B90D798(v46, v44, v45, isUniquelyReferenced_nonNull_native);
        *char v61 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_endAccess();
        if (v41[2] < 2uLL) {
          goto LABEL_46;
        }
        uint64_t v48 = v41[5];
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v49 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v63 = *v60;
        *char v60 = 0x8000000000000000;
        sub_20B90D798(v48, v44, v45, v49);
        *char v60 = v63;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_endAccess();
        if (v41[2] < 3uLL) {
          goto LABEL_47;
        }
        uint64_t v50 = v41[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v51 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v64 = *v59;
        *unint64_t v59 = 0x8000000000000000;
        sub_20B90D798(v50, v44, v45, v51);
        *unint64_t v59 = v64;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_endAccess();
        uint64_t v19 = v42;
        if (v33) {
          goto LABEL_20;
        }
LABEL_21:
        int64_t v37 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          goto LABEL_51;
        }
        if (v37 >= v58)
        {
LABEL_42:
          sub_20B90E704(v54, v55);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return v52;
        }
        unint64_t v38 = *(void *)(v57 + 8 * v37);
        ++v34;
        if (!v38)
        {
          int64_t v34 = v37 + 1;
          if (v37 + 1 >= v58) {
            goto LABEL_42;
          }
          unint64_t v38 = *(void *)(v57 + 8 * v34);
          if (!v38)
          {
            int64_t v34 = v37 + 2;
            if (v37 + 2 >= v58) {
              goto LABEL_42;
            }
            unint64_t v38 = *(void *)(v57 + 8 * v34);
            if (!v38)
            {
              int64_t v39 = v37 + 3;
              if (v39 >= v58) {
                goto LABEL_42;
              }
              unint64_t v38 = *(void *)(v57 + 8 * v39);
              if (!v38)
              {
                while (1)
                {
                  int64_t v34 = v39 + 1;
                  if (__OFADD__(v39, 1)) {
                    goto LABEL_52;
                  }
                  if (v34 >= v58) {
                    goto LABEL_42;
                  }
                  unint64_t v38 = *(void *)(v57 + 8 * v34);
                  ++v39;
                  if (v38) {
                    goto LABEL_34;
                  }
                }
              }
              int64_t v34 = v39;
            }
          }
        }
LABEL_34:
        unint64_t v33 = (v38 - 1) & v38;
      }
    }
    uint64_t v66 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_20B90D908(0, v20, 0);
    uint64_t result = v53;
    uint64_t v22 = 0;
    uint64_t v21 = v66;
    while (1)
    {
      uint64_t v23 = *(void **)(result + 8 * v22 + 32);
      unint64_t v24 = v23[2];
      if (!v24) {
        break;
      }
      if (v24 == 1) {
        goto LABEL_49;
      }
      if (v24 < 3) {
        goto LABEL_50;
      }
      uint64_t v25 = v23[4];
      uint64_t v26 = v23[5];
      uint64_t v27 = v23[6];
      unint64_t v29 = *(void *)(v66 + 16);
      unint64_t v28 = *(void *)(v66 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_20B90D908(v28 > 1, v29 + 1, 1);
        uint64_t result = v53;
      }
      ++v22;
      *(void *)(v66 + 16) = v29 + 1;
      uint64_t v30 = (void *)(v66 + 32 * v29);
      v30[4] = v25;
      v30[5] = v26;
      v30[6] = v27;
      v30[7] = 0x406FE00000000000;
      if (v20 == v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = v68;
        goto LABEL_17;
      }
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
  }
  return result;
}

uint64_t sub_20B90ACA0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FA0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20B9294E0;
  uint64_t v2 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_ctFont);
  type metadata accessor for CTFont(0);
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 40) = v3;
  id v5 = v2;
  id v6 = v3;
  sub_20B9099B4(inited);
  id v7 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20B8F4A48();
  uint64_t v9 = (void *)sub_20B9268B8();
  swift_bridgeObjectRelease();
  CFAttributedStringRef v10 = (const __CFAttributedString *)objc_msgSend(v7, sel_initWithString_attributes_, v8, v9);

  CFDataRef v11 = CTLineCreateWithAttributedString(v10);
  CTLineGetGlyphRuns(v11);
  type metadata accessor for CTRun(0);
  uint64_t result = sub_20B926A88();
  __break(1u);
  return result;
}

uint64_t sub_20B90AFE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = sub_20B90ACA0();
  uint64_t v30 = MEMORY[0x263F8EE88];
  uint64_t v7 = v6;
  switch(a3)
  {
    case 1:
      uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors;
      break;
    case 2:
      uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors;
      break;
    default:
      uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors;
      break;
  }
  uint64_t v9 = (uint64_t *)(v4 + v8);
  swift_beginAccess();
  uint64_t v10 = *v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_20B90DF48(v7);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  double v14 = MEMORY[0x263F8EE78];
  if (*(void *)(v10 + 16))
  {
    unint64_t v15 = sub_20B90D350(v11, v13);
    if (v16)
    {
      uint64_t v17 = *(void *)(*(void *)(v10 + 56) + 8 * v15);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
    int64_t v20 = (unint64_t *)(v17 + 32);
    do
    {
      unint64_t v22 = *v20++;
      unint64_t v21 = v22;
      if ((v22 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x20B90B274);
      }
      uint64_t v23 = *(void *)(v4 + v19);
      if (v21 >= *(void *)(v23 + 16)) {
        goto LABEL_22;
      }
      sub_20B90B5A4(v29, *(double *)(v23 + 32 * v21 + 32), *(double *)(v23 + 32 * v21 + 40), *(double *)(v23 + 32 * v21 + 48), *(double *)(v23 + 32 * v21 + 56));
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_20B91E290(v30);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    v29[0] = v14;
    sub_20B926CF8();
    uint64_t v26 = (double *)(v24 + 56);
    do
    {
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v26 - 3) / 255.0, *(v26 - 2) / 255.0, *(v26 - 1) / 255.0, *v26 / 255.0);
      sub_20B926CD8();
      sub_20B926D08();
      sub_20B926D18();
      sub_20B926CE8();
      v26 += 4;
      --v25;
    }
    while (v25);
    double v27 = v29[0];
    swift_release();
  }
  else
  {
    swift_release();
    double v27 = MEMORY[0x263F8EE78];
  }
  return *(void *)&v27;
}

uint64_t sub_20B90B284()
{
  uint64_t v0 = (__CFString *)sub_20B926908();
  CTFontRef v1 = CTFontCreateWithName(v0, 0.0, 0);

  type metadata accessor for EmojiBackground();
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_20B90A524(v1);
  qword_26ACA65F0 = v2;
  return result;
}

uint64_t sub_20B90B308()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_logger;
  uint64_t v2 = sub_20B9267F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20B90B3DC()
{
  sub_20B90B308();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_20B90B434()
{
  return type metadata accessor for EmojiBackground();
}

uint64_t type metadata accessor for EmojiBackground()
{
  uint64_t result = qword_26ACA36C0;
  if (!qword_26ACA36C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20B90B488()
{
  uint64_t result = sub_20B9267F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiBackground.BackgroundColor()
{
  return &type metadata for EmojiBackground.BackgroundColor;
}

unint64_t sub_20B90B550()
{
  unint64_t result = qword_26ACA3800;
  if (!qword_26ACA3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3800);
  }
  return result;
}

uint64_t sub_20B90B5A4(double *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v7 = *v5;
  sub_20B926F58();
  sub_20B909D00();
  uint64_t v8 = sub_20B926F88();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    v12.f64[0] = a4;
    v12.f64[1] = a5;
    v13.f64[0] = a2;
    v13.f64[1] = a3;
    while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(*(void *)(v7 + 48) + 32 * v10), v13), (int32x4_t)vceqq_f64(*(float64x2_t *)(*(void *)(v7 + 48) + 32 * v10 + 16), v12))), 0xFuLL))) & 1) == 0)
    {
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t result = 0;
    int64_t v20 = (double *)(*(void *)(*v5 + 48) + 32 * v10);
    double v16 = *v20;
    double v15 = v20[1];
    double v18 = v20[2];
    double v17 = v20[3];
  }
  else
  {
LABEL_5:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v5;
    *id v5 = 0x8000000000000000;
    sub_20B90C224(v10, isUniquelyReferenced_nonNull_native, a2, a3, a4, a5);
    *id v5 = v25;
    swift_bridgeObjectRelease();
    double v16 = a2;
    double v15 = a3;
    double v18 = a4;
    double v17 = a5;
    uint64_t result = 1;
  }
  *a1 = v16;
  a1[1] = v15;
  a1[2] = v18;
  a1[3] = v17;
  return result;
}

uint64_t sub_20B90B708(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_20B926F48();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_20B90C3B4(a2, v9, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_20B90B804(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_20B926F58();
  swift_bridgeObjectRetain();
  sub_20B9269C8();
  uint64_t v8 = sub_20B926F88();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    float64x2_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_20B926ED8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      double v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_20B926ED8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_20B90C4D8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_20B90B9B4()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38D8);
  uint64_t result = sub_20B926C28();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v5 << 6);
      }
      else
      {
        int64_t v16 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v10) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v5;
        if (!v17)
        {
          int64_t v5 = v16 + 1;
          if (v16 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v5];
          if (!v17)
          {
            int64_t v5 = v16 + 2;
            if (v16 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v5];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v10)
              {
LABEL_33:
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v31;
                }
                unint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v5 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v5];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v5 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      sub_20B926F58();
      sub_20B926F78();
      sub_20B926F78();
      sub_20B926F78();
      sub_20B926F78();
      uint64_t result = sub_20B926F88();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 32 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      _OWORD v13[2] = v22;
      v13[3] = v23;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_20B90BCC0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38E0);
  uint64_t result = sub_20B926C28();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    char v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                unint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_20B926F48();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_20B90BF44()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5DB8);
  uint64_t v3 = sub_20B926C28();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_20B926F58();
      sub_20B9269C8();
      uint64_t result = sub_20B926F88();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_20B90C224(uint64_t result, char a2, double a3, double a4, double a5, double a6)
{
  unint64_t v7 = result;
  unint64_t v8 = *(void *)(*v6 + 16);
  unint64_t v9 = *(void *)(*v6 + 24);
  if (v9 > v8 && (a2 & 1) != 0) {
    goto LABEL_14;
  }
  double v22 = a5;
  double v23 = a6;
  double v20 = a3;
  double v21 = a4;
  if (a2)
  {
    sub_20B90B9B4();
    goto LABEL_8;
  }
  if (v9 <= v8)
  {
    sub_20B90CB60();
LABEL_8:
    uint64_t v10 = *v6;
    sub_20B926F58();
    sub_20B909D00();
    uint64_t result = sub_20B926F88();
    uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v7 = result & ~v11;
    if ((*(void *)(v10 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v12 = ~v11;
      a5 = v22;
      a6 = v23;
      v13.f64[0] = v22;
      v13.f64[1] = v23;
      a3 = v20;
      a4 = v21;
      v14.f64[0] = v20;
      v14.f64[1] = v21;
      while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(*(void *)(v10 + 48) + 32 * v7), v14), (int32x4_t)vceqq_f64(*(float64x2_t *)(*(void *)(v10 + 48) + 32 * v7 + 16), v13))), 0xFuLL))) & 1) == 0)
      {
        unint64_t v7 = (v7 + 1) & v12;
        if (((*(void *)(v10 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_14;
        }
      }
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_20B90C674();
LABEL_13:
  a5 = v22;
  a6 = v23;
  a3 = v20;
  a4 = v21;
LABEL_14:
  uint64_t v15 = *v6;
  *(void *)(*v6 + 8 * (v7 >> 6) + 56) |= 1 << v7;
  int64_t v16 = (double *)(*(void *)(v15 + 48) + 32 * v7);
  *int64_t v16 = a3;
  v16[1] = a4;
  v16[2] = a5;
  v16[3] = a6;
  uint64_t v17 = *(void *)(v15 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (!v18)
  {
    *(void *)(v15 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_20B926F18();
  __break(1u);
  return result;
}

uint64_t sub_20B90C3B4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_20B90BCC0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_20B90C814();
      goto LABEL_14;
    }
    sub_20B90CE3C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_20B926F48();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_20B926F18();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_20B90C4D8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_20B90BF44();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_20B90C9AC();
      goto LABEL_22;
    }
    sub_20B90D0A0();
  }
  uint64_t v11 = *v4;
  sub_20B926F58();
  sub_20B9269C8();
  uint64_t result = sub_20B926F88();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_20B926ED8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_20B926F18();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_20B926ED8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  double v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *double v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_20B90C674()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926C18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + v16);
    BOOL v18 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v19 = v17[1];
    *BOOL v18 = *v17;
    v18[1] = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20B90C814()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926C18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20B90C9AC()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5DB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B926C18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    long long v19 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_20B90CB60()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38D8);
  uint64_t result = sub_20B926C28();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v10) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v5;
    if (!v17)
    {
      int64_t v5 = v16 + 1;
      if (v16 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v5);
      if (!v17)
      {
        int64_t v5 = v16 + 2;
        if (v16 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v5);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_24:
    long long v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    sub_20B926F58();
    sub_20B926F78();
    sub_20B926F78();
    sub_20B926F78();
    sub_20B926F78();
    uint64_t result = sub_20B926F88();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 32 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    _OWORD v13[2] = v22;
    v13[3] = v23;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v5 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v5);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20B90CE3C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38E0);
  uint64_t result = sub_20B926C28();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_20B926F48();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20B90D0A0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5DB8);
  uint64_t v3 = sub_20B926C28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_20B926F58();
    swift_bridgeObjectRetain();
    sub_20B9269C8();
    uint64_t result = sub_20B926F88();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_20B90D350(uint64_t a1, uint64_t a2)
{
  sub_20B926F58();
  sub_20B9269C8();
  uint64_t v4 = sub_20B926F88();
  return sub_20B90D4A0(a1, a2, v4);
}

unint64_t sub_20B90D3C8(uint64_t a1)
{
  sub_20B926948();
  sub_20B926F58();
  sub_20B9269C8();
  uint64_t v2 = sub_20B926F88();
  swift_bridgeObjectRelease();
  return sub_20B90D584(a1, v2);
}

unint64_t sub_20B90D45C(uint64_t a1)
{
  uint64_t v2 = sub_20B926F48();
  return sub_20B90D6FC(a1, v2);
}

unint64_t sub_20B90D4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    int64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20B926ED8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20B926ED8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_20B90D584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_20B926948();
    uint64_t v8 = v7;
    if (v6 == sub_20B926948() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_20B926948();
          uint64_t v15 = v14;
          if (v13 == sub_20B926948() && v15 == v16) {
            break;
          }
          char v18 = sub_20B926ED8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_20B90D6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_20B90D798(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_20B90D350(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_20B9045F0();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_20B903AC4(v15, a4 & 1);
  unint64_t v21 = sub_20B90D350(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_20B926F28();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _DWORD v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B90D908(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B90D968(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_20B90D928(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B90DAC8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_20B90D948(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B90DC34(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_20B90D968(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA36D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B90DAC8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B90DC34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5AB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B90DDA4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_20B9269D8();
  if (v4 == 4)
  {
    uint64_t v6 = (a2 & 0x2000000000000000) != 0 ? HIBYTE(a2) & 0xF : a1 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v7 = 0;
        unsigned int v8 = 0;
        goto LABEL_21;
      }
      if ((a2 & 0x2000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v7 = 0;
        unsigned int v8 = 0;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        uint64_t v7 = 0;
        unsigned int v8 = 0;
        if ((a1 & 0x1000000000000000) == 0) {
LABEL_10:
        }
          sub_20B926CB8();
      }
LABEL_13:
      for (unsigned int i = sub_20B926CC8(); ; unsigned int i = sub_20B926C38())
      {
        uint64_t v11 = v10;
        if (i >= 0x10000)
        {
          uint64_t v16 = v4;
          unsigned __int16 v13 = sub_20B926FD8();
          uint64_t result = sub_20B926FD8();
          if (__CFADD__(v8 << 8, (unsigned __int16)result))
          {
            __break(1u);
            return result;
          }
          int v15 = ((v8 << 8) + (unsigned __int16)result) << 8;
          BOOL v12 = __CFADD__(v15, v13);
          unsigned int v8 = v15 + v13;
          uint64_t v4 = v16;
          if (v12)
          {
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            swift_bridgeObjectRelease_n();
            uint64_t v5 = v8;
            return v5 | ((unint64_t)(v4 != 4) << 32);
          }
        }
        else
        {
          BOOL v12 = __CFADD__(i, v8 << 8);
          unsigned int v8 = i + (v8 << 8);
          if (v12) {
            goto LABEL_27;
          }
        }
        v7 += v11;
        if (v7 >= v6) {
          goto LABEL_28;
        }
        if ((a2 & 0x1000000000000000) == 0)
        {
          if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
            goto LABEL_10;
          }
          goto LABEL_13;
        }
LABEL_21:
        ;
      }
    }
  }
  uint64_t v5 = 0;
  return v5 | ((unint64_t)(v4 != 4) << 32);
}

uint64_t sub_20B90DF48(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = *(void *)(result + 16);
  if (v2 == 1) {
    return sub_20B926EC8();
  }
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_20B90D928(0, v2, 0);
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      uint64_t v4 = sub_20B926EC8();
      uint64_t v6 = v5;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_20B90D928(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
    sub_20B8EEF40();
    uint64_t v10 = sub_20B9268D8();
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_20B90E0BC(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38F8);
  uint64_t v3 = (void *)sub_20B926D98();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_20B90D45C(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  unint64_t v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    CGColorRef v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    unsigned __int16 v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    BOOL v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_20B90D45C(v4);
    unint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_20B90E1B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA38E8);
    uint64_t v3 = (void *)sub_20B926D98();
    for (unsigned int i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_20B90D45C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      CGColorRef v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_20B90E28C(uint64_t a1, uint64_t a2)
{
  if (a1 == 114 && a2 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 103 && a2 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 98 && a2 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 97 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

double sub_20B90E3DC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5D98);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B90E5E4();
  sub_20B926FA8();
  v9[15] = 0;
  sub_20B926E18();
  double v7 = v6;
  v9[14] = 1;
  sub_20B926E18();
  v9[13] = 2;
  sub_20B926E18();
  v9[12] = 3;
  sub_20B926E18();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_20B90E5E4()
{
  unint64_t result = qword_2676A5DA0;
  if (!qword_2676A5DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5DA0);
  }
  return result;
}

uint64_t sub_20B90E638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_20B90E6A0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_20B90E6B0()
{
  unint64_t result = qword_26ACA3850;
  if (!qword_26ACA3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3850);
  }
  return result;
}

uint64_t sub_20B90E704(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t destroy for EmojiBackground.BgclTable()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EmojiBackground.BgclTable(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmojiBackground.BgclTable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for EmojiBackground.BgclTable(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiBackground.BgclTable(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiBackground.BgclTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiBackground.BgclTable()
{
  return &type metadata for EmojiBackground.BgclTable;
}

ValueMetadata *type metadata accessor for EmojiBackground.BackgroundColor.CodingKeys()
{
  return &type metadata for EmojiBackground.BackgroundColor.CodingKeys;
}

unint64_t sub_20B90E97C()
{
  unint64_t result = qword_2676A5DC8;
  if (!qword_2676A5DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5DC8);
  }
  return result;
}

unint64_t sub_20B90E9D4()
{
  unint64_t result = qword_2676A5DD0;
  if (!qword_2676A5DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5DD0);
  }
  return result;
}

unint64_t sub_20B90EA2C()
{
  unint64_t result = qword_2676A5DD8;
  if (!qword_2676A5DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5DD8);
  }
  return result;
}

uint64_t sub_20B90EA80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F63696A6F6D65 && a2 == 0xEB0000000073726FLL || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70616D7865646E69 && a2 == 0xE800000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20B926ED8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_20B90EC4C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA3908);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_20B90EFE4();
  sub_20B926FA8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3888);
    char v10 = 0;
    sub_20B90F0CC(&qword_26ACA3890, &qword_26ACA38A8);
    sub_20B926E38();
    uint64_t v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA36F0);
    char v10 = 1;
    sub_20B90F038();
    swift_bridgeObjectRetain();
    sub_20B926E38();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3870);
    char v10 = 2;
    sub_20B90F278(&qword_26ACA3878);
    swift_bridgeObjectRetain();
    sub_20B926E38();
    LOBYTE(v11) = 3;
    swift_bridgeObjectRetain();
    sub_20B926E28();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_20B90EFE4()
{
  unint64_t result = qword_26ACA3838;
  if (!qword_26ACA3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3838);
  }
  return result;
}

unint64_t sub_20B90F038()
{
  unint64_t result = qword_26ACA3880;
  if (!qword_26ACA3880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA36F0);
    sub_20B90F1EC(&qword_26ACA38A0, &qword_26ACA38B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3880);
  }
  return result;
}

uint64_t sub_20B90F0CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA3888);
    sub_20B8E7F48(a2, &qword_26ACA33D0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20B90F158()
{
  unint64_t result = qword_2676A5DF0;
  if (!qword_2676A5DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA36F0);
    sub_20B90F1EC(&qword_2676A5DF8, &qword_2676A5E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5DF0);
  }
  return result;
}

uint64_t sub_20B90F1EC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA3898);
    sub_20B8E7F48(a2, &qword_26ACA38B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B90F278(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACA3870);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s11EmojiPoster15EmojiBackgroundC15BackgroundColorV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B90F3ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiBackground.BgclTable.CodingKeys()
{
  return &type metadata for EmojiBackground.BgclTable.CodingKeys;
}

unint64_t sub_20B90F3E8()
{
  unint64_t result = qword_2676A5E10;
  if (!qword_2676A5E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5E10);
  }
  return result;
}

unint64_t sub_20B90F440()
{
  unint64_t result = qword_26ACA3848;
  if (!qword_26ACA3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3848);
  }
  return result;
}

unint64_t sub_20B90F498()
{
  unint64_t result = qword_26ACA3840;
  if (!qword_26ACA3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACA3840);
  }
  return result;
}

uint64_t sub_20B90F4EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_20B9119A0(v3, (uint64_t)v5, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v5, a2, &qword_2676A59A0);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

void sub_20B90F584(uint64_t a1, void *a2)
{
  sub_20B9119A0(a1, (uint64_t)v4, &qword_2676A59A0);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_20B9119A0(v3, (uint64_t)v5, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v4, v3, &qword_2676A59A0);
  sub_20B8EC000((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
  sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B91028C();
}

uint64_t sub_20B90F648@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_20B9119A0(v3, (uint64_t)v5, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v5, a1, &qword_2676A59A0);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

void sub_20B90F6DC(uint64_t a1)
{
  sub_20B9119A0(a1, (uint64_t)v3, &qword_2676A59A0);
  uint64_t v2 = v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_20B9119A0(v2, (uint64_t)v4, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v3, v2, &qword_2676A59A0);
  sub_20B8EC000((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B91028C();
}

void (*sub_20B90F77C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B90F7DC;
}

void sub_20B90F7DC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B91028C();
  }
}

double sub_20B90F810()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B90F858(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress);
  swift_beginAccess();
  double *v3 = a1;
  double v4 = (1.0 - a1) * 0.5 + 0.0;
  *(float *)&double v4 = v4;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer), sel_setOpacity_, v4);
  unsigned int v6 = sub_20B90FE48();
  if (*(void *)(v5 + 24))
  {
    uint64_t v7 = v5;
    swift_beginAccess();
    double v8 = *v3;
    uint64_t v9 = *(void *)(v7 + 24);
    uint64_t v10 = *(void *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
    (*(void (**)(uint64_t, uint64_t, double))(v10 + 64))(v9, v10, v8);
  }
  return ((uint64_t (*)(unsigned char *, void))v6)(v12, 0);
}

void (*sub_20B90F96C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress;
  v3[7] = v1;
  v3[8] = v4;
  swift_beginAccess();
  return sub_20B90F9D8;
}

void sub_20B90F9D8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[7];
    double v5 = (1.0 - *(double *)(v4 + v3[8])) * 0.5 + 0.0;
    *(float *)&double v5 = v5;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer), sel_setOpacity_, v5);
    uint64_t v7 = sub_20B90FE48();
    if (*(void *)(v6 + 24))
    {
      uint64_t v8 = v6;
      uint64_t v9 = (double *)(v3[7] + v3[8]);
      swift_beginAccess();
      double v10 = *v9;
      uint64_t v11 = *(void *)(v8 + 24);
      uint64_t v12 = *(void *)(v8 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v8, v11);
      (*(void (**)(uint64_t, uint64_t, double))(v12 + 64))(v11, v12, v10);
    }
    ((void (*)(void *, void))v7)(v3, 0);
  }
  free(v3);
}

uint64_t sub_20B90FAF0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (double *)(*a2 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress);
  swift_beginAccess();
  *(void *)uint64_t v3 = v2;
  double v5 = sub_20B90FE48();
  if (*(void *)(v4 + 24))
  {
    uint64_t v6 = v4;
    swift_beginAccess();
    double v7 = *v3;
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = *(void *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 88))(v8, v9, v7);
  }
  return ((uint64_t (*)(unsigned char *, void))v5)(v11, 0);
}

double sub_20B90FBD4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B90FC1C(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress);
  swift_beginAccess();
  double *v3 = a1;
  double v5 = sub_20B90FE48();
  if (*(void *)(v4 + 24))
  {
    uint64_t v6 = v4;
    swift_beginAccess();
    double v7 = *v3;
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = *(void *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 88))(v8, v9, v7);
  }
  return ((uint64_t (*)(unsigned char *, void))v5)(v11, 0);
}

void (*sub_20B90FCFC(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  v3[7] = v1;
  v3[8] = v4;
  swift_beginAccess();
  return sub_20B90FD68;
}

void sub_20B90FD68(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    double v5 = sub_20B90FE48();
    if (*(void *)(v4 + 24))
    {
      uint64_t v6 = v4;
      double v7 = (double *)(v3[7] + v3[8]);
      swift_beginAccess();
      double v8 = *v7;
      uint64_t v9 = *(void *)(v6 + 24);
      uint64_t v10 = *(void *)(v6 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v6, v9);
      (*(void (**)(uint64_t, uint64_t, double))(v10 + 88))(v9, v10, v8);
    }
    ((void (*)(void *, void))v5)(v3, 0);
  }
  free(v3);
}

uint64_t (*sub_20B90FE48())()
{
  return j__swift_endAccess;
}

void sub_20B90FEA4()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C50]), sel_initWithFrame_, v4, v6, v8, v10);
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_clearColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  id v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView];
  *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView] = v13;
  id v16 = v13;

  id v17 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v17, sel_bounds);
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;

  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, v19, v21, v23, v25);
  objc_msgSend(v0, sel_setView_, v26);
  id v27 = objc_msgSend(v0, sel_view);
  if (!v27)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v28 = v27;
  objc_msgSend(v27, sel_addSubview_, v16);

  int64_t v29 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer];
  id v30 = objc_msgSend(v12, sel_blackColor);
  id v31 = objc_msgSend(v30, sel_CGColor);

  objc_msgSend(v29, sel_setBackgroundColor_, v31);
  id v32 = objc_msgSend(v0, sel_view);
  if (!v32)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v33 = v32;
  objc_msgSend(v32, sel_bounds);
  double v35 = v34;
  double v37 = v36;
  double v39 = v38;
  double v41 = v40;

  objc_msgSend(v29, sel_setFrame_, v35, v37, v39, v41);
  objc_msgSend(v29, sel_setOpacity_, 0.0);
  id v42 = objc_msgSend(v0, sel_view);
  if (!v42)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unint64_t v43 = v42;
  id v44 = objc_msgSend(v42, sel_layer);

  objc_msgSend(v44, sel_addSublayer_, v29);
}

void sub_20B9101FC()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_20B91028C();
}

void sub_20B91028C()
{
  objc_super v1 = v0;
  if (!objc_msgSend(v0, sel_isViewLoaded)) {
    return;
  }
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration];
  swift_beginAccess();
  sub_20B9119A0(v2, (uint64_t)v46, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v46, (uint64_t)v47, &qword_2676A59A0);
  if (sub_20B8EEAF4((uint64_t)v47) != 1)
  {
    double v7 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView];
    if (!v7)
    {
LABEL_38:
      v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle] = v48;
      return;
    }
    uint64_t v8 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene];
    swift_beginAccess();
    sub_20B911604(v8, (uint64_t)v45);
    int v9 = v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle];
    BOOL v10 = v9 != 3 && v9 == v48;
    int v11 = !v10;
    if (v10)
    {
      sub_20B8EC000((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
      id v19 = v7;
    }
    else
    {
      if (v48 == 1)
      {
        sub_20B8EC000((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
        objc_msgSend(v7, sel_bounds);
        double v21 = v20;
        double v23 = v22;
        id v16 = (objc_class *)type metadata accessor for CircularScene();
        id v17 = objc_msgSend(objc_allocWithZone(v16), sel_initWithSize_, v21, v23);
        double v18 = &off_26C0685F0;
      }
      else if (v48 == 2)
      {
        sub_20B8EC000((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
        objc_msgSend(v7, sel_bounds);
        double v13 = v12;
        double v15 = v14;
        id v16 = (objc_class *)type metadata accessor for ExpandingSpiralScene();
        id v17 = objc_msgSend(objc_allocWithZone(v16), sel_initWithSize_, v13, v15);
        double v18 = &off_26C068BB8;
      }
      else
      {
        sub_20B8EC000((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
        objc_msgSend(v7, sel_bounds);
        double v25 = v24;
        double v27 = v26;
        id v16 = (objc_class *)type metadata accessor for OffsetGridScene();
        id v17 = objc_msgSend(objc_allocWithZone(v16), sel_initWithSize_, v25, v27);
        double v18 = &off_26C069698;
      }
      unint64_t v43 = v16;
      id v44 = v18;
      v42[0] = v17;
      sub_20B91166C((uint64_t)v45);
      sub_20B9119A0((uint64_t)v42, (uint64_t)v45, &qword_2676A5E48);
    }
    sub_20B911604((uint64_t)v45, (uint64_t)v41);
    if (v41[3])
    {
      sub_20B8F6FE4((long long *)v41, (uint64_t)v42);
      int v28 = v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentSizeVariant];
      unsigned __int8 v29 = v49;
      if (v28 == 3 || v28 != v49)
      {
        uint64_t v30 = (uint64_t)v43;
        id v31 = v44;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, (uint64_t)v43);
        LOBYTE(v41[0]) = v29;
        ((void (*)(id *, uint64_t, _UNKNOWN **))v31[5])(v41, v30, v31);
      }
      id v32 = v50;
      uint64_t v33 = (uint64_t)v43;
      double v34 = v44;
      __swift_project_boxed_opaque_existential_1(v42, (uint64_t)v43);
      double v35 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v34[1])(v33, v34);
      LOBYTE(v33) = sub_20B8EF130(v32, v35);
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
        uint64_t v36 = (uint64_t)v43;
        double v37 = v44;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, (uint64_t)v43);
        double v38 = (void (*)(uint64_t, uint64_t, _UNKNOWN **))v37[2];
        uint64_t v39 = swift_bridgeObjectRetain();
        v38(v39, v36, v37);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      if (v11) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_20B91166C((uint64_t)v41);
      if (v11)
      {
LABEL_29:
        sub_20B911604((uint64_t)v45, (uint64_t)v42);
        swift_beginAccess();
        sub_20B911A04((uint64_t)v42, v8);
        swift_endAccess();
        sub_20B911604((uint64_t)v45, (uint64_t)v42);
        if (v43)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5E60);
          sub_20B911960();
          if (swift_dynamicCast())
          {
            id v40 = v41[0];
            objc_msgSend(v41[0], sel_setScaleMode_, 1);
            objc_msgSend(v7, sel_presentScene_, v40);
          }
          else
          {
          }
        }
        else
        {

          sub_20B91166C((uint64_t)v42);
        }
        sub_20B91166C((uint64_t)v45);
        goto LABEL_37;
      }
    }
    sub_20B91166C((uint64_t)v45);

LABEL_37:
    sub_20B8EC000((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
    goto LABEL_38;
  }
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    double v4 = v3;
    self;
    double v5 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v6 = objc_msgSend(v5, sel_scene);

    if (v6) {
      objc_msgSend(v5, sel_presentScene_, 0);
    }
  }
}

uint64_t type metadata accessor for EmojiSceneViewController()
{
  return self;
}

id sub_20B9107F4(void *a1, double a2, double a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(double *)(v7 + 24) = a2;
  *(double *)(v7 + 32) = a3;
  aBlock[4] = sub_20B910A0C;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20B910A18;
  aBlock[3] = &block_descriptor_7;
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = v3;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v8, 0);
  _Block_release(v8);
  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  return objc_msgSendSuper2(&v11, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
}

void sub_20B91090C(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a4 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene;
  swift_beginAccess();
  sub_20B911604(v6, (uint64_t)v8);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5E60);
    sub_20B911960();
    if (swift_dynamicCast())
    {
      objc_msgSend(v7, sel_setSize_, a1, a2);
    }
  }
  else
  {
    sub_20B91166C((uint64_t)v8);
  }
}

uint64_t sub_20B9109D4()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_20B910A0C(uint64_t a1)
{
  sub_20B91090C(*(double *)(v1 + 24), *(double *)(v1 + 32), a1, *(void *)(v1 + 16));
}

uint64_t sub_20B910A18(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_20B910C50()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if (v1) {
    return 30;
  }
  else {
    return 26;
  }
}

uint64_t sub_20B910CBC(double a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene;
  swift_beginAccess();
  sub_20B911604(v3, (uint64_t)&v7);
  if (!v8) {
    return sub_20B91166C((uint64_t)&v7);
  }
  sub_20B8F6FE4(&v7, (uint64_t)v9);
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  (*(void (**)(uint64_t, uint64_t, double))(v5 + 88))(v4, v5, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

id EmojiSceneViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id EmojiSceneViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration];
  sub_20B8EEA8C(v15);
  sub_20B9119A0((uint64_t)v15, v6, &qword_2676A59A0);
  v3[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle] = 3;
  v3[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentSizeVariant] = 3;
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer;
  id v8 = objc_allocWithZone(MEMORY[0x263F157E8]);
  uint64_t v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(void *)&v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress] = 0x3FF0000000000000;
  uint64_t v10 = &v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene];
  *((void *)v10 + 4) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;

  if (a2)
  {
    uint64_t v11 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, v11, a3);

  return v12;
}

id EmojiSceneViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiSceneViewController.init(coder:)(void *a1)
{
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration];
  sub_20B8EEA8C(v11);
  sub_20B9119A0((uint64_t)v11, v3, &qword_2676A59A0);
  v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle] = 3;
  v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentSizeVariant] = 3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer;
  id v5 = objc_allocWithZone(MEMORY[0x263F157E8]);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress] = 0x3FF0000000000000;
  uint64_t v7 = &v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene];
  *((void *)v7 + 4) = 0;
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;

  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id EmojiSceneViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20B9111F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_20B9119A0(v3, (uint64_t)v5, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v5, a1, &qword_2676A59A0);
  return sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EBE98);
}

void sub_20B911290(uint64_t a1)
{
  uint64_t v2 = *v1;
  sub_20B9119A0(a1, (uint64_t)v4, &qword_2676A59A0);
  uint64_t v3 = v2 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_20B9119A0(v3, (uint64_t)v5, &qword_2676A59A0);
  sub_20B9119A0((uint64_t)v4, v3, &qword_2676A59A0);
  sub_20B8EC000((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_20B8EC06C);
  sub_20B91028C();
}

void (*sub_20B911334(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B90F7DC;
}

double sub_20B911398()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B9113E4(double a1)
{
  return sub_20B90F858(a1);
}

void (*sub_20B911408(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B90F96C(v2);
  return sub_20B8EE710;
}

double sub_20B911464()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_20B9114B0(double a1)
{
  uint64_t v3 = (double *)(*v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress);
  swift_beginAccess();
  double *v3 = a1;
  id v5 = sub_20B90FE48();
  if (*(void *)(v4 + 24))
  {
    uint64_t v6 = v4;
    swift_beginAccess();
    double v7 = *v3;
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = *(void *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 88))(v8, v9, v7);
  }
  return ((uint64_t (*)(unsigned char *, void))v5)(v11, 0);
}

void (*sub_20B911594(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  v3[7] = *v1;
  v3[8] = v4;
  swift_beginAccess();
  return sub_20B90FD68;
}

uint64_t sub_20B911604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B91166C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5E48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_20B9116D4@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress, a2);
}

uint64_t sub_20B9116E0(double *a1)
{
  return sub_20B90F858(*a1);
}

double sub_20B911708@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress, a2);
}

uint64_t method lookup function for EmojiSceneViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiSceneViewController);
}

uint64_t dispatch thunk of EmojiSceneViewController.configuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of EmojiSceneViewController.configuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EmojiSceneViewController.configuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EmojiSceneViewController.wakeProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiSceneViewController.wakeProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EmojiSceneViewController.wakeProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of EmojiSceneViewController.unlockProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of EmojiSceneViewController.unlockProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of EmojiSceneViewController.unlockProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of EmojiSceneViewController.setUnlockTransitionProgress(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

unint64_t sub_20B911960()
{
  unint64_t result = qword_2676A5E68;
  if (!qword_2676A5E68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2676A5E68);
  }
  return result;
}

uint64_t sub_20B9119A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20B911A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B911A7C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  return MEMORY[0x21053B1C0](v1);
}

uint64_t sub_20B911ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_20B911B38(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21053B1C0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_20B8FF40C;
}

uint64_t sub_20B911BC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  char v10 = *(unsigned char *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 89);
  *(unsigned char *)a2 = *(unsigned char *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v7;
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  *(unsigned char *)(a2 + 88) = v10;
  *(unsigned char *)(a2 + 89) = v11;
  return sub_20B8E7644(v4, v5, v6, v7, v8);
}

void sub_20B911C50(char *a1, void *a2)
{
  char v19 = *a1;
  long long v18 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  uint64_t v5 = *((void *)a1 + 6);
  uint64_t v6 = *((void *)a1 + 7);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t v8 = *((void *)a1 + 9);
  uint64_t v9 = *((void *)a1 + 10);
  uint64_t v10 = *a2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  char v16 = a1[89];
  char v17 = a1[88];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 40);
  uint64_t v12 = *(void *)(v10 + 48);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v15 = *(void *)(v10 + 56);
  uint64_t v13 = *(void *)(v10 + 72);
  *(unsigned char *)uint64_t v10 = v19;
  *(_OWORD *)(v10 + 8) = v18;
  *(void *)(v10 + 24) = v2;
  *(void *)(v10 + 32) = v3;
  *(void *)(v10 + 40) = v4;
  *(void *)(v10 + 48) = v5;
  *(void *)(v10 + 56) = v6;
  *(void *)(v10 + 64) = v7;
  *(void *)(v10 + 72) = v8;
  *(void *)(v10 + 80) = v9;
  *(unsigned char *)(v10 + 88) = v17;
  *(unsigned char *)(v10 + 89) = v16;
  sub_20B8E7644(v4, v5, v6, v7, v8);
  sub_20B8E7820(v11, v12, v15, v14, v13);
  sub_20B913D68();
}

uint64_t sub_20B911D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  char v10 = *(unsigned char *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 89);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 89) = v11;
  return sub_20B8E7644(v4, v5, v6, v7, v8);
}

void sub_20B911DF8(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 4);
  long long v16 = *(_OWORD *)(a1 + 40);
  long long v17 = *(_OWORD *)(a1 + 8);
  uint64_t v5 = *((void *)a1 + 7);
  long long v15 = *((_OWORD *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 10);
  char v7 = a1[88];
  char v8 = a1[89];
  uint64_t v9 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = *(void *)(v9 + 48);
  uint64_t v12 = *(void *)(v9 + 56);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = *(void *)(v9 + 72);
  *(unsigned char *)uint64_t v9 = v2;
  *(_OWORD *)(v9 + 8) = v17;
  *(void *)(v9 + 24) = v3;
  *(void *)(v9 + 32) = v4;
  *(_OWORD *)(v9 + 40) = v16;
  *(void *)(v9 + 56) = v5;
  *(_OWORD *)(v9 + 64) = v15;
  *(void *)(v9 + 80) = v6;
  *(unsigned char *)(v9 + 88) = v7;
  *(unsigned char *)(v9 + 89) = v8;
  sub_20B8E7820(v10, v11, v12, v13, v14);
  sub_20B913D68();
}

void (*sub_20B911ECC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B911F2C;
}

void sub_20B911F2C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B913D68();
  }
}

id BackgroundConfigurationController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BackgroundConfigurationController.init()()
{
  v22[1] = *MEMORY[0x263EF8340];
  *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView;
  char v2 = self;
  uint64_t v3 = v0;
  id v4 = objc_msgSend(v2, sel_effectWithStyle_, 4);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v4);

  *(void *)&v0[v1] = v5;
  uint64_t v6 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView;
  *(void *)&v3[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl;
  *(void *)&v3[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BB0]), sel_init);
  char v8 = &v3[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20B92B3B0;
  uint64_t v10 = self;
  EmojiPoster::EmojiPosterBackgroundColor v23 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v10, sel_lightGrayColor));
  EmojiPoster::EmojiPosterBackgroundColor v24 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v10, sel_blackColor, v23.red, v23.green, v23.blue, v23.alpha));
  *char v8 = 0;
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *((void *)v8 + 3) = 0x3FF0000000000000;
  *((void *)v8 + 4) = v9;
  *((void *)v8 + 5) = &unk_26C066A00;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController] = 0;
  id v11 = objc_msgSend(v10, sel_whiteColor, v24.red, v24.green, v24.blue, v24.alpha);
  uint64_t v21 = 0;
  v22[0] = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  objc_msgSend(v11, sel_getRed_green_blue_alpha_, v22, &v21, &v20, &v19);

  uint64_t v13 = v21;
  uint64_t v12 = v22[0];
  uint64_t v15 = v19;
  uint64_t v14 = v20;
  long long v16 = &v3[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  *long long v16 = 0;
  *((void *)v16 + 1) = v12;
  *((void *)v16 + 2) = v13;
  *((void *)v16 + 3) = v14;
  *((void *)v16 + 4) = v15;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *((_WORD *)v16 + 44) = 0;

  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  return objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, 0, 0);
}

id BackgroundConfigurationController.__allocating_init(backgroundConfiguration:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return BackgroundConfigurationController.init(backgroundConfiguration:)(a1);
}

id BackgroundConfigurationController.init(backgroundConfiguration:)(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 4);
  long long v22 = *(_OWORD *)(a1 + 40);
  long long v23 = *(_OWORD *)(a1 + 8);
  long long v21 = *(_OWORD *)(a1 + 56);
  uint64_t v5 = *((void *)a1 + 9);
  uint64_t v6 = *((void *)a1 + 10);
  char v7 = a1[88];
  char v8 = a1[89];
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView;
  uint64_t v10 = self;
  id v11 = v1;
  id v12 = objc_msgSend(v10, sel_effectWithStyle_, 4);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v12);

  *(void *)&v1[v9] = v13;
  uint64_t v14 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView;
  *(void *)&v11[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v15 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl;
  *(void *)&v11[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BB0]), sel_init);
  long long v16 = &v11[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_20B92B3B0;
  objc_super v18 = self;
  EmojiPoster::EmojiPosterBackgroundColor v25 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v18, sel_lightGrayColor));
  EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v18, sel_blackColor, v25.red, v25.green, v25.blue, v25.alpha));
  *long long v16 = 0;
  *((void *)v16 + 1) = 0;
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0x3FF0000000000000;
  *((void *)v16 + 4) = v17;
  *((void *)v16 + 5) = &unk_26C066A30;
  *(void *)&v11[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController] = 0;
  uint64_t v19 = &v11[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  *uint64_t v19 = v2;
  *(_OWORD *)(v19 + 8) = v23;
  *((void *)v19 + 3) = v3;
  *((void *)v19 + 4) = v4;
  *(_OWORD *)(v19 + 40) = v22;
  *(_OWORD *)(v19 + 56) = v21;
  *((void *)v19 + 9) = v5;
  *((void *)v19 + 10) = v6;
  v19[88] = v7;
  v19[89] = v8;

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  return objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, 0, 0);
}

id sub_20B9124A0(void *a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView;
  uint64_t v4 = self;
  uint64_t v5 = v1;
  id v6 = objc_msgSend(v4, sel_effectWithStyle_, 4);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v6);

  *(void *)&v1[v3] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView;
  *(void *)&v5[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl;
  *(void *)&v5[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BB0]), sel_init);
  uint64_t v10 = &v5[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20B92B3B0;
  id v12 = self;
  EmojiPoster::EmojiPosterBackgroundColor v26 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v12, sel_lightGrayColor));
  EmojiPoster::EmojiPosterBackgroundColor v27 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v12, sel_blackColor, v26.red, v26.green, v26.blue, v26.alpha));
  *uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 2) = 0;
  *((void *)v10 + 3) = 0x3FF0000000000000;
  *((void *)v10 + 4) = v11;
  *((void *)v10 + 5) = &unk_26C066A60;
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController] = 0;
  id v13 = objc_msgSend(v12, sel_whiteColor, v27.red, v27.green, v27.blue, v27.alpha);
  uint64_t v24 = 0;
  v25[0] = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  objc_msgSend(v13, sel_getRed_green_blue_alpha_, v25, &v24, &v23, &v22);

  uint64_t v15 = v24;
  uint64_t v14 = v25[0];
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  objc_super v18 = &v5[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  *objc_super v18 = 0;
  *((void *)v18 + 1) = v14;
  *((void *)v18 + 2) = v15;
  *((void *)v18 + 3) = v16;
  *((void *)v18 + 4) = v17;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_OWORD *)(v18 + 72) = 0u;
  *((_WORD *)v18 + 44) = 0;

  v21.receiver = v5;
  v21.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  id v19 = objc_msgSendSuper2(&v21, sel_initWithCoder_, a1);

  return v19;
}

void sub_20B912744()
{
  v54.receiver = v0;
  v54.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  objc_msgSendSuper2(&v54, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v2 = v1;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView];
  objc_msgSend(v1, sel_addSubview_, v3);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_20B912E74();
  sub_20B912D98();
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl];
  objc_msgSend(v4, sel_addArrangedSubview_, v5);
  id v6 = &v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  swift_beginAccess();
  if (*((void *)v6 + 9)) {
    sub_20B913B84();
  }
  id v7 = objc_msgSend(v0, sel_view);
  if (!v7) {
    goto LABEL_15;
  }
  uint64_t v8 = v7;
  objc_msgSend(v7, sel_addSubview_, v4);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2FD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20B92BF00;
  id v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_leadingAnchor);

  id v13 = objc_msgSend(v4, sel_leadingAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -20.0);

  *(void *)(v9 + 32) = v14;
  id v15 = objc_msgSend(v0, sel_view);
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = v15;
  id v17 = objc_msgSend(v15, sel_trailingAnchor);

  id v18 = objc_msgSend(v4, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 20.0);

  *(void *)(v9 + 40) = v19;
  id v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_super v21 = v20;
  id v22 = objc_msgSend(v20, sel_topAnchor);

  id v23 = objc_msgSend(v4, sel_topAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(void *)(v9 + 48) = v24;
  id v25 = objc_msgSend(v0, sel_view);
  if (!v25)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  EmojiPoster::EmojiPosterBackgroundColor v26 = v25;
  id v27 = objc_msgSend(v25, sel_bottomAnchor);

  id v28 = objc_msgSend(v4, sel_bottomAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v9 + 56) = v29;
  id v30 = objc_msgSend(v0, sel_view);
  if (!v30)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v31 = v30;
  id v32 = objc_msgSend(v30, sel_leadingAnchor);

  id v33 = objc_msgSend(v3, sel_leadingAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(void *)(v9 + 64) = v34;
  id v35 = objc_msgSend(v0, sel_view);
  if (!v35)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v36 = v35;
  id v37 = objc_msgSend(v35, sel_trailingAnchor);

  id v38 = objc_msgSend(v3, sel_trailingAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(void *)(v9 + 72) = v39;
  id v40 = objc_msgSend(v0, sel_view);
  if (!v40)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  double v41 = v40;
  id v42 = objc_msgSend(v40, sel_topAnchor);

  id v43 = objc_msgSend(v3, sel_topAnchor);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(void *)(v9 + 80) = v44;
  id v45 = objc_msgSend(v0, sel_view);
  if (v45)
  {
    uint64_t v46 = v45;
    int v47 = self;
    id v48 = objc_msgSend(v46, sel_bottomAnchor);

    id v49 = objc_msgSend(v3, sel_bottomAnchor);
    id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

    *(void *)(v9 + 88) = v50;
    id v51 = objc_msgSend(v5, sel_heightAnchor);
    id v52 = objc_msgSend(v51, sel_constraintGreaterThanOrEqualToConstant_, 35.0);

    *(void *)(v9 + 96) = v52;
    sub_20B926AB8();
    sub_20B8F704C(0, &qword_26ACA2EC0);
    uint64_t v53 = (void *)sub_20B926A78();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_activateConstraints_, v53);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_20B912D98()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView];
  objc_msgSend(v1, sel_setAxis_, 1);
  objc_msgSend(v1, sel_setDistribution_, 2);
  objc_msgSend(v1, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v1, sel_setSpacing_, 10.0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_addSubview_, v1);
  }
  else
  {
    __break(1u);
  }
}

void sub_20B912E74()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20B8F704C(0, &qword_2676A5B78);
  type metadata accessor for BackgroundViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20B926708();

  swift_retain();
  id v10 = (void *)sub_20B926BA8();
  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0, 0, 1, sub_20B914650, v0);
  sub_20B926708();

  swift_retain();
  uint64_t v5 = (void *)sub_20B926BA8();
  id v6 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0, 0, 0, sub_20B914658, v0);
  sub_20B926708();

  swift_retain();
  id v7 = (void *)sub_20B926BA8();
  id v8 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0, 0, 0, sub_20B914660, v0);
  sub_20B926708();

  swift_retain();
  id v12 = (id)sub_20B926BA8();
  uint64_t v9 = *(void **)(v11 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v10, 0, 0, 0, 0, 0, sub_20B914668, v0);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v5, 1, 0);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v7, 2, 0);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v12, 3, 0);
  objc_msgSend(v9, sel_sizeToFit);
  objc_msgSend(v9, sel_setSelectedSegmentIndex_, 0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  swift_release();
}

void sub_20B913320(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x21053B1C0](v2);
  if (v3)
  {
    id v4 = (char *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x21053B1C0](v5))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      id v7 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      uint64_t v8 = *((void *)v7 + 5);
      uint64_t v9 = *((void *)v7 + 6);
      uint64_t v10 = *((void *)v7 + 7);
      uint64_t v11 = *((void *)v7 + 8);
      uint64_t v12 = *((void *)v7 + 9);
      *id v7 = 0;
      *((_WORD *)v7 + 44) = 0;
      *(_OWORD *)(v7 + 40) = 0u;
      *(_OWORD *)(v7 + 56) = 0u;
      *(_OWORD *)(v7 + 72) = 0u;
      sub_20B8E7820(v8, v9, v10, v11, v12);
      sub_20B913D68();
      id v13 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v13)
      {
LABEL_6:
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *((void *)v7 + 5);
        uint64_t v17 = *((void *)v7 + 6);
        uint64_t v18 = *((void *)v7 + 7);
        uint64_t v19 = *((void *)v7 + 8);
        uint64_t v20 = *((void *)v7 + 9);
        uint64_t v21 = *((void *)v7 + 10);
        char v22 = v7[88];
        char v23 = v7[89];
        v26[0] = *v7;
        long long v27 = *(_OWORD *)(v7 + 8);
        long long v28 = *(_OWORD *)(v7 + 24);
        uint64_t v29 = v16;
        uint64_t v30 = v17;
        uint64_t v31 = v18;
        uint64_t v32 = v19;
        uint64_t v33 = v20;
        uint64_t v34 = v21;
        char v35 = v22;
        char v36 = v23;
        id v24 = *(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 16);
        sub_20B8E7644(v16, v17, v18, v19, v20);
        v24(v4, v26, ObjectType, v6);
        swift_unknownObjectRelease();

        sub_20B8E7820(v16, v17, v18, v19, v20);
        return;
      }
      id v14 = objc_msgSend(v13, sel_view);
      if (v14)
      {
        id v15 = v14;
        objc_msgSend(v14, sel_setHidden_, 1);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {
    }
  }
}

void sub_20B913518(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x21053B1C0](v2);
  if (v3)
  {
    id v4 = (char *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x21053B1C0](v5))
    {
      uint64_t v30 = *(void *)(v5 + 8);
      sub_20B913B84();
      uint64_t v6 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      uint64_t v7 = v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
      uint64_t v9 = *(void *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                        + 24];
      uint64_t v8 = *(void *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                        + 32];
      uint64_t v10 = *(void *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                         + 40];
      uint64_t v11 = *((void *)v6 + 5);
      uint64_t v12 = *((void *)v6 + 6);
      uint64_t v13 = *((void *)v6 + 7);
      uint64_t v14 = *((void *)v6 + 8);
      uint64_t v15 = *((void *)v6 + 9);
      long long v16 = *(_OWORD *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                         + 8];
      char *v6 = 1;
      *((void *)v6 + 5) = v7;
      *((_OWORD *)v6 + 3) = v16;
      *((void *)v6 + 8) = v9;
      *((void *)v6 + 9) = v8;
      *((void *)v6 + 10) = v10;
      *((_WORD *)v6 + 44) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_20B8E7820(v11, v12, v13, v14, v15);
      sub_20B913D68();
      uint64_t v17 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v17)
      {
LABEL_6:
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v20 = *((void *)v6 + 5);
        uint64_t v21 = *((void *)v6 + 6);
        uint64_t v22 = *((void *)v6 + 7);
        uint64_t v23 = *((void *)v6 + 8);
        uint64_t v25 = *((void *)v6 + 9);
        uint64_t v24 = *((void *)v6 + 10);
        char v26 = v6[88];
        char v27 = v6[89];
        v31[0] = *v6;
        long long v32 = *(_OWORD *)(v6 + 8);
        long long v33 = *(_OWORD *)(v6 + 24);
        uint64_t v34 = v20;
        uint64_t v35 = v21;
        uint64_t v36 = v22;
        uint64_t v37 = v23;
        uint64_t v38 = v25;
        uint64_t v39 = v24;
        char v40 = v26;
        char v41 = v27;
        long long v28 = *(void (**)(char *, char *, uint64_t, uint64_t))(v30 + 16);
        sub_20B8E7644(v20, v21, v22, v23, v25);
        v28(v4, v31, ObjectType, v30);
        swift_unknownObjectRelease();

        sub_20B8E7820(v20, v21, v22, v23, v25);
        return;
      }
      id v18 = objc_msgSend(v17, sel_view);
      if (v18)
      {
        uint64_t v19 = v18;
        objc_msgSend(v18, sel_setHidden_, 0);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {
    }
  }
}

void sub_20B913764(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x21053B1C0](v2);
  if (v3)
  {
    id v4 = (char *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x21053B1C0](v5))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t v7 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      uint64_t v8 = *((void *)v7 + 5);
      uint64_t v9 = *((void *)v7 + 6);
      uint64_t v10 = *((void *)v7 + 7);
      uint64_t v11 = *((void *)v7 + 8);
      uint64_t v12 = *((void *)v7 + 9);
      *uint64_t v7 = 3;
      *((void *)v7 + 5) = 1;
      *((void *)v7 + 6) = 0;
      *((void *)v7 + 7) = 0;
      *((void *)v7 + 8) = 0x3FF0000000000000;
      *((void *)v7 + 9) = &unk_26C066A90;
      *((void *)v7 + 10) = &unk_26C066AF0;
      *((_WORD *)v7 + 44) = 0;
      sub_20B8E7820(v8, v9, v10, v11, v12);
      sub_20B913D68();
      uint64_t v13 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v13)
      {
LABEL_6:
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *((void *)v7 + 5);
        uint64_t v17 = *((void *)v7 + 6);
        uint64_t v18 = *((void *)v7 + 7);
        uint64_t v19 = *((void *)v7 + 8);
        uint64_t v20 = *((void *)v7 + 9);
        uint64_t v21 = *((void *)v7 + 10);
        char v22 = v7[88];
        char v23 = v7[89];
        v26[0] = *v7;
        long long v27 = *(_OWORD *)(v7 + 8);
        long long v28 = *(_OWORD *)(v7 + 24);
        uint64_t v29 = v16;
        uint64_t v30 = v17;
        uint64_t v31 = v18;
        uint64_t v32 = v19;
        uint64_t v33 = v20;
        uint64_t v34 = v21;
        char v35 = v22;
        char v36 = v23;
        uint64_t v24 = *(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 16);
        sub_20B8E7644(v16, v17, v18, v19, v20);
        v24(v4, v26, ObjectType, v6);
        swift_unknownObjectRelease();

        sub_20B8E7820(v16, v17, v18, v19, v20);
        return;
      }
      id v14 = objc_msgSend(v13, sel_view);
      if (v14)
      {
        uint64_t v15 = v14;
        objc_msgSend(v14, sel_setHidden_, 1);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {
    }
  }
}

void sub_20B913974(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x21053B1C0](v2);
  if (v3)
  {
    id v4 = (char *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x21053B1C0](v5))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t v7 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      uint64_t v8 = *((void *)v7 + 5);
      uint64_t v9 = *((void *)v7 + 6);
      uint64_t v10 = *((void *)v7 + 7);
      uint64_t v11 = *((void *)v7 + 8);
      uint64_t v12 = *((void *)v7 + 9);
      *uint64_t v7 = 4;
      *((void *)v7 + 5) = 1;
      *((void *)v7 + 6) = 0;
      *((void *)v7 + 7) = 0;
      *((void *)v7 + 8) = 0x3FF0000000000000;
      *((void *)v7 + 9) = &unk_26C066B20;
      *((void *)v7 + 10) = &unk_26C066BA0;
      *((_WORD *)v7 + 44) = 0;
      sub_20B8E7820(v8, v9, v10, v11, v12);
      sub_20B913D68();
      uint64_t v13 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v13)
      {
LABEL_6:
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *((void *)v7 + 5);
        uint64_t v17 = *((void *)v7 + 6);
        uint64_t v18 = *((void *)v7 + 7);
        uint64_t v19 = *((void *)v7 + 8);
        uint64_t v20 = *((void *)v7 + 9);
        uint64_t v21 = *((void *)v7 + 10);
        char v22 = v7[88];
        char v23 = v7[89];
        v26[0] = *v7;
        long long v27 = *(_OWORD *)(v7 + 8);
        long long v28 = *(_OWORD *)(v7 + 24);
        uint64_t v29 = v16;
        uint64_t v30 = v17;
        uint64_t v31 = v18;
        uint64_t v32 = v19;
        uint64_t v33 = v20;
        uint64_t v34 = v21;
        char v35 = v22;
        char v36 = v23;
        uint64_t v24 = *(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 16);
        sub_20B8E7644(v16, v17, v18, v19, v20);
        v24(v4, v26, ObjectType, v6);
        swift_unknownObjectRelease();

        sub_20B8E7820(v16, v17, v18, v19, v20);
        return;
      }
      id v14 = objc_msgSend(v13, sel_view);
      if (v14)
      {
        uint64_t v15 = v14;
        objc_msgSend(v14, sel_setHidden_, 1);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {
    }
  }
}

void sub_20B913B84()
{
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController;
  if (!*(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController))
  {
    uint64_t v2 = v0;
    uint64_t v3 = v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties;
    char v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties + 24);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties + 32);
    uint64_t v7 = *(void *)(v3 + 40);
    LOBYTE(v15) = v4;
    long long v16 = *(_OWORD *)(v3 + 8);
    uint64_t v17 = v5;
    uint64_t v18 = v6;
    uint64_t v19 = v7;
    objc_allocWithZone((Class)type metadata accessor for GradientConfigurationController());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = GradientConfigurationController.init(gradientProperties:)((char *)&v15);
    uint64_t v9 = &v8[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate];
    swift_beginAccess();
    *((void *)v9 + 1) = &protocol witness table for BackgroundConfigurationController;
    swift_unknownObjectWeakAssign();
    uint64_t v10 = *(void **)(v2 + v1);
    *(void *)(v2 + v1) = v8;
    uint64_t v11 = v8;

    uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView);
    id v13 = objc_msgSend(v11, sel_view, v15, v16, v17, v18, v19);
    if (v13)
    {
      id v14 = v13;
      objc_msgSend(v12, sel_insertArrangedSubview_atIndex_, v13, 0);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_20B913CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21053B1C0](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20B913D60(uint64_t a1, unsigned __int8 *a2)
{
  return sub_20B914118(a2);
}

void sub_20B913D68()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration);
  swift_beginAccess();
  switch(*v1)
  {
    case 1:
    case 2:
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl), sel_setSelectedSegmentIndex_, 1);
      uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController);
      if (!v2) {
        return;
      }
      id v3 = objc_msgSend(v2, sel_view);
      if (!v3)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        JUMPOUT(0x20B913F1CLL);
      }
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_setHidden_, 0);
      break;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_11;
    default:
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl), sel_setSelectedSegmentIndex_, 0);
      uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController);
      if (!v5) {
        return;
      }
      id v6 = objc_msgSend(v5, sel_view);
      if (v6) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_8:
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl), sel_setSelectedSegmentIndex_, 2);
      uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController);
      if (!v7) {
        return;
      }
      id v6 = objc_msgSend(v7, sel_view);
      if (v6) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_11:
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl), sel_setSelectedSegmentIndex_, 3);
      uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController);
      if (!v8) {
        return;
      }
      id v6 = objc_msgSend(v8, sel_view);
      if (!v6) {
        goto LABEL_17;
      }
LABEL_13:
      uint64_t v4 = v6;
      objc_msgSend(v6, sel_setHidden_, 1);
      break;
  }
}

uint64_t type metadata accessor for BackgroundConfigurationController()
{
  return self;
}

id BackgroundConfigurationController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void BackgroundConfigurationController.init(nibName:bundle:)()
{
}

id BackgroundConfigurationController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20B914118(unsigned __int8 *a1)
{
  char v2 = *a1;
  uint64_t v29 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 5);
  uint64_t v8 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration);
  swift_beginAccess();
  char v32 = *v8;
  long long v30 = *(_OWORD *)(v8 + 8);
  uint64_t v9 = *((void *)v8 + 3);
  uint64_t v10 = *((void *)v8 + 4);
  uint64_t v11 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties;
  *(unsigned char *)uint64_t v11 = v2;
  *(void *)(v11 + 8) = v3;
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v5;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v8 + 5);
  uint64_t v13 = *((void *)v8 + 6);
  uint64_t v14 = *((void *)v8 + 7);
  uint64_t v15 = *((void *)v8 + 8);
  uint64_t v16 = *((void *)v8 + 9);
  *uint64_t v8 = v32;
  *(_OWORD *)(v8 + 8) = v30;
  *((void *)v8 + 3) = v9;
  *((void *)v8 + 4) = v10;
  *((void *)v8 + 5) = v29;
  *((void *)v8 + 6) = v3;
  *((void *)v8 + 7) = v4;
  *((void *)v8 + 8) = v5;
  *((void *)v8 + 9) = v7;
  *((void *)v8 + 10) = v6;
  *((_WORD *)v8 + 44) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20B8E7820(v12, v13, v14, v15, v16);
  sub_20B913D68();
  uint64_t v17 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21053B1C0](v17);
  if (result)
  {
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = *((void *)v8 + 5);
    uint64_t v21 = *((void *)v8 + 6);
    uint64_t v22 = *((void *)v8 + 7);
    uint64_t v23 = *((void *)v8 + 8);
    uint64_t v25 = *((void *)v8 + 9);
    uint64_t v24 = *((void *)v8 + 10);
    char v26 = v8[88];
    char v27 = v8[89];
    v34[0] = *v8;
    long long v28 = *(_OWORD *)(v8 + 24);
    long long v35 = *(_OWORD *)(v8 + 8);
    long long v36 = v28;
    uint64_t v37 = v20;
    uint64_t v38 = v21;
    uint64_t v39 = v22;
    uint64_t v40 = v23;
    uint64_t v41 = v25;
    uint64_t v42 = v24;
    char v43 = v26;
    char v44 = v27;
    uint64_t v31 = *(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v19 + 16);
    sub_20B8E7644(v20, v21, v22, v23, v25);
    v31(v1, v34, ObjectType, v19);
    swift_unknownObjectRelease();
    return sub_20B8E7820(v20, v21, v22, v23, v25);
  }
  return result;
}

uint64_t sub_20B91434C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21053B1C0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_20B9143A8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of BackgroundConfigurationControllerDelegate.backgroundConfigurationController(_:presentColorPicker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BackgroundConfigurationControllerDelegate.backgroundConfigurationController(_:didUpdateWithConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for BackgroundConfigurationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BackgroundConfigurationController);
}

uint64_t dispatch thunk of BackgroundConfigurationController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.backgroundConfiguration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.backgroundConfiguration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.backgroundConfiguration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.__allocating_init(backgroundConfiguration:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.gradientConfigurationController(_:presentColorPicker:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.gradientConfigurationController(_:didUpdateGradientProperties:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t sub_20B914618()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B914650(uint64_t a1)
{
  sub_20B913320(a1, v1);
}

void sub_20B914658(uint64_t a1)
{
  sub_20B913518(a1, v1);
}

void sub_20B914660(uint64_t a1)
{
  sub_20B913764(a1, v1);
}

void sub_20B914668(uint64_t a1)
{
  sub_20B913974(a1, v1);
}

uint64_t sub_20B914674(uint64_t a1)
{
  uint64_t result = sub_20B915998(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_20B915AD0(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

id sub_20B9146F4()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.811764706, 0.768627451, 0.721568627, 1.0);
  qword_2676A5EA8 = (uint64_t)result;
  return result;
}

uint64_t sub_20B914744(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EF0);
    uint64_t v2 = sub_20B926D98();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    sub_20B8F704C(0, (unint64_t *)&qword_26ACA2EE8);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_20B90E6A0((_OWORD *)((char *)v33 + 8), v31);
    sub_20B90E6A0(v31, v33);
    sub_20B90E6A0(v33, v32);
    sub_20B926948();
    sub_20B926F58();
    sub_20B9269C8();
    uint64_t v20 = sub_20B926F88();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_20B90E6A0(v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_20B917EAC();
    return v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_20B914AF8(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v14 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v14, sel_set);

  objc_msgSend(a1, sel_fillRect_, a2, a3, a4, a5);
  uint64_t v15 = (void *)sub_20B926908();
  sub_20B914744(a8);
  type metadata accessor for Key(0);
  sub_20B8F4A48();
  id v16 = (id)sub_20B9268B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_drawInRect_withAttributes_, v16, a2, a3, a4, a5);
}

uint64_t sub_20B914C40(uint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = (unsigned __int128)(v6 * (__int128)66) >> 64;
  uint64_t v8 = 66 * v6;
  if (v7 == v8 >> 63)
  {
    uint64_t v1 = a1;
    double v5 = (double)v8;
    v16[0] = 0;
    v16[1] = 0;
    uint64_t v3 = 0x4049000000000000;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_, (double)v8, 50.0);
    if (qword_26ACA36B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = qword_26ACA65F0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(double *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v3;
  *(void *)(v10 + 48) = v1;
  *(void *)(v10 + 56) = v2;
  *(void *)(v10 + 64) = v16;
  *(void *)(v10 + 72) = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_20B917B8C;
  *(void *)(v11 + 24) = v10;
  v15[4] = sub_20B8EF030;
  void v15[5] = v11;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  CGColorRef v15[2] = sub_20B8F48A4;
  v15[3] = &block_descriptor_7;
  unint64_t v12 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  id v13 = objc_msgSend(v4, sel_imageWithActions_, v12);

  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0) {
    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

id sub_20B914E60(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, uint64_t a7, double *a8, uint64_t a9)
{
  id v17 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v17, sel_set);

  id v101 = a1;
  id result = objc_msgSend(a1, sel_fillRect_, a3, a4, a5, a6);
  uint64_t v98 = *(void *)(a2 + 16);
  if (!v98) {
    return result;
  }
  uint64_t v100 = a2 + 32;
  uint64_t v19 = (uint64_t *)(a9 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  uint64_t v20 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
  uint64_t v21 = (uint64_t *)(a9 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors);
  unint64_t v22 = (uint64_t *)(a9 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
  swift_bridgeObjectRetain();
  id v99 = v19;
  swift_beginAccess();
  id v97 = v21;
  swift_beginAccess();
  uint64_t v96 = v22;
  swift_beginAccess();
  uint64_t v23 = 0;
  double v24 = MEMORY[0x263F8EE78];
  id v104 = a8;
  while (1)
  {
    uint64_t v103 = v23;
    unint64_t v25 = (uint64_t *)(v100 + 16 * v23);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    swift_bridgeObjectRetain();
    uint64_t v102 = (void *)sub_20B917BB0(v26, v27);
    objc_msgSend(v102, sel_drawAtPoint_, *a8, a8[1]);
    *a8 = *a8 + 50.0;
    uint64_t v28 = sub_20B90ACA0();
    uint64_t v106 = MEMORY[0x263F8EE88];
    uint64_t v29 = *v99;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_20B90DF48(v28);
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    if (*(void *)(v29 + 16))
    {
      unint64_t v33 = sub_20B90D350(v30, v32);
      double v34 = v24;
      if (v35)
      {
        double v34 = *(double *)(*(void *)(v29 + 56) + 8 * v33);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      double v34 = v24;
    }
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)(*(void *)&v34 + 16);
    if (v36) {
      break;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_20B91E290(v106);
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v41 + 16);
    if (v42)
    {
      v105[0] = v24;
      sub_20B926CF8();
      char v43 = (double *)(v41 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v43 - 3) / 255.0, *(v43 - 2) / 255.0, *(v43 - 1) / 255.0, *v43 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v43 += 4;
        --v42;
      }
      while (v42);
      double v44 = v105[0];
      id result = (id)swift_release();
      id v45 = v104;
      double v24 = MEMORY[0x263F8EE78];
      if (!(*(void *)&v44 >> 62))
      {
LABEL_18:
        if (!*(void *)((*(void *)&v44 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_25;
        }
        goto LABEL_19;
      }
    }
    else
    {
      id result = (id)swift_release();
      double v44 = v24;
      id v45 = v104;
      if (!(*(void *)&v24 >> 62)) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_20B926D58();
    id result = (id)swift_bridgeObjectRelease();
    if (!v50)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
LABEL_19:
    if ((*(void *)&v44 & 0xC000000000000001) != 0)
    {
      id v46 = (id)MEMORY[0x21053A2B0](0, *(void *)&v44);
    }
    else
    {
      if (!*(void *)((*(void *)&v44 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_80;
      }
      id v46 = *(id *)(*(void *)&v44 + 32);
    }
    int v47 = v46;
    swift_bridgeObjectRelease();
    double v48 = *v45;
    double v49 = v45[1];
    objc_msgSend(v47, sel_set);
    objc_msgSend(v101, sel_fillRect_, v48, v49, 8.0, 40.0);

LABEL_26:
    *id v45 = *v45 + 8.0;
    uint64_t v51 = sub_20B90ACA0();
    uint64_t v106 = MEMORY[0x263F8EE88];
    uint64_t v52 = *v97;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_20B90DF48(v51);
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    if (*(void *)(v52 + 16))
    {
      unint64_t v56 = sub_20B90D350(v53, v55);
      double v57 = v24;
      if (v58)
      {
        double v57 = *(double *)(*(void *)(v52 + 56) + 8 * v56);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      double v57 = v24;
    }
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v59 = *(void *)(*(void *)&v57 + 16);
    if (v59)
    {
      char v60 = (unint64_t *)(*(void *)&v57 + 32);
      do
      {
        unint64_t v62 = *v60++;
        unint64_t v61 = v62;
        if ((v62 & 0x8000000000000000) != 0) {
          goto LABEL_76;
        }
        uint64_t v63 = *(void *)(a9 + v20);
        if (v61 >= *(void *)(v63 + 16)) {
          goto LABEL_77;
        }
        id result = (id)sub_20B90B5A4(v105, *(double *)(v63 + 32 * v61 + 32), *(double *)(v63 + 32 * v61 + 40), *(double *)(v63 + 32 * v61 + 48), *(double *)(v63 + 32 * v61 + 56));
      }
      while (--v59);
    }
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_20B91E290(v106);
    swift_bridgeObjectRelease();
    uint64_t v65 = *(void *)(v64 + 16);
    if (v65)
    {
      v105[0] = v24;
      sub_20B926CF8();
      uint64_t v66 = (double *)(v64 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v66 - 3) / 255.0, *(v66 - 2) / 255.0, *(v66 - 1) / 255.0, *v66 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v66 += 4;
        --v65;
      }
      while (v65);
      double v67 = v105[0];
      id result = (id)swift_release();
      uint64_t v68 = v104;
      double v24 = MEMORY[0x263F8EE78];
      if (!(*(void *)&v67 >> 62))
      {
LABEL_39:
        if (!*(void *)((*(void *)&v67 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_46;
        }
        goto LABEL_40;
      }
    }
    else
    {
      id result = (id)swift_release();
      double v67 = v24;
      uint64_t v68 = v104;
      if (!(*(void *)&v24 >> 62)) {
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_20B926D58();
    id result = (id)swift_bridgeObjectRelease();
    if (!v73)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
LABEL_40:
    if ((*(void *)&v67 & 0xC000000000000001) != 0)
    {
      id v69 = (id)MEMORY[0x21053A2B0](0, *(void *)&v67);
    }
    else
    {
      if (!*(void *)((*(void *)&v67 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_81;
      }
      id v69 = *(id *)(*(void *)&v67 + 32);
    }
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    double v71 = *v68;
    double v72 = v68[1];
    objc_msgSend(v70, sel_set);
    objc_msgSend(v101, sel_fillRect_, v71, v72, 4.0, 40.0);

LABEL_47:
    *uint64_t v68 = *v68 + 4.0;
    uint64_t v74 = sub_20B90ACA0();
    uint64_t v106 = MEMORY[0x263F8EE88];
    uint64_t v75 = *v96;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_20B90DF48(v74);
    uint64_t v78 = v77;
    swift_bridgeObjectRelease();
    if (*(void *)(v75 + 16))
    {
      unint64_t v79 = sub_20B90D350(v76, v78);
      double v80 = v24;
      if (v81)
      {
        double v80 = *(double *)(*(void *)(v75 + 56) + 8 * v79);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      double v80 = v24;
    }
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v82 = *(void *)(*(void *)&v80 + 16);
    if (v82)
    {
      uint64_t v83 = (unint64_t *)(*(void *)&v80 + 32);
      do
      {
        unint64_t v85 = *v83++;
        unint64_t v84 = v85;
        if ((v85 & 0x8000000000000000) != 0) {
          goto LABEL_78;
        }
        uint64_t v86 = *(void *)(a9 + v20);
        if (v84 >= *(void *)(v86 + 16)) {
          goto LABEL_79;
        }
        id result = (id)sub_20B90B5A4(v105, *(double *)(v86 + 32 * v84 + 32), *(double *)(v86 + 32 * v84 + 40), *(double *)(v86 + 32 * v84 + 48), *(double *)(v86 + 32 * v84 + 56));
      }
      while (--v82);
    }
    swift_bridgeObjectRelease();
    uint64_t v87 = sub_20B91E290(v106);
    swift_bridgeObjectRelease();
    uint64_t v88 = *(void *)(v87 + 16);
    if (v88)
    {
      v105[0] = v24;
      sub_20B926CF8();
      int v89 = (double *)(v87 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v89 - 3) / 255.0, *(v89 - 2) / 255.0, *(v89 - 1) / 255.0, *v89 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v89 += 4;
        --v88;
      }
      while (v88);
      double v90 = v105[0];
      id result = (id)swift_release();
      double v24 = MEMORY[0x263F8EE78];
    }
    else
    {
      id result = (id)swift_release();
      double v90 = v24;
    }
    a8 = v104;
    if (*(void *)&v90 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_20B926D58();
      id result = (id)swift_bridgeObjectRelease();
      if (!v95)
      {
LABEL_3:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else if (!*(void *)((*(void *)&v90 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
    if ((*(void *)&v90 & 0xC000000000000001) != 0)
    {
      id v91 = (id)MEMORY[0x21053A2B0](0, *(void *)&v90);
    }
    else
    {
      if (!*(void *)((*(void *)&v90 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_82;
      }
      id v91 = *(id *)(*(void *)&v90 + 32);
    }
    uint64_t v92 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v93 = *v104;
    double v94 = v104[1];
    objc_msgSend(v92, sel_set);
    objc_msgSend(v101, sel_fillRect_, v93, v94, 4.0, 40.0);

LABEL_4:
    uint64_t v23 = v103 + 1;
    *id v104 = *v104 + 4.0;
    if (v103 + 1 == v98) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  uint64_t v37 = (unint64_t *)(*(void *)&v34 + 32);
  while (1)
  {
    unint64_t v39 = *v37++;
    unint64_t v38 = v39;
    if ((v39 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v40 = *(void *)(a9 + v20);
    if (v38 >= *(void *)(v40 + 16)) {
      goto LABEL_75;
    }
    id result = (id)sub_20B90B5A4(v105, *(double *)(v40 + 32 * v38 + 32), *(double *)(v40 + 32 * v38 + 40), *(double *)(v40 + 32 * v38 + 48), *(double *)(v40 + 32 * v38 + 56));
    if (!--v36) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_20B915874()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_20B915884(void *a1)
{
  v7[1] = *(double *)MEMORY[0x263EF8340];
  double v6 = 0.0;
  v7[0] = 0.0;
  double v5 = 0.0;
  if (!objc_msgSend(a1, sel_getRed_green_blue_alpha_, v7, &v6, &v5, 0)) {
    return 1;
  }
  BOOL v1 = v7[0] <= 0.95 || v6 <= 0.95;
  if (!v1 && v5 > 0.95) {
    return 1;
  }
  BOOL v3 = v7[0] < 0.05;
  if (v6 >= 0.05) {
    BOOL v3 = 0;
  }
  return v5 < 0.05 && v3;
}

uint64_t sub_20B915940(uint64_t a1, void *a2)
{
  BOOL v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_20B915998(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_20B915A38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_20B926AF8();
  uint64_t v8 = result;
  if (v2)
  {
    id v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_20B90B804(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_20B915AD0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_20B915B24(uint64_t a1, uint64_t a2)
{
  if (qword_26ACA36B8 != -1) {
    swift_once();
  }
  unint64_t v4 = sub_20B90AFE8(a1, a2, 2);
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    if (sub_20B926D58()) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v6 = (id)MEMORY[0x21053A2B0](0, v5);
      goto LABEL_8;
    }
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v6 = *(id *)(v5 + 32);
LABEL_8:
      id v7 = v6;
LABEL_16:
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
    __break(1u);
LABEL_20:
    uint64_t result = sub_20B926D58();
    if (!result) {
      goto LABEL_21;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_20B90AFE8(a1, a2, 0);
  a2 = v8;
  if (v8 >> 62) {
    goto LABEL_20;
  }
  uint64_t result = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_12:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x21053A2B0](0, a2);
    goto LABEL_15;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(a2 + 32);
LABEL_15:
    id v7 = v10;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B915C94(uint64_t a1)
{
  if (qword_26ACA36B8 != -1) {
    goto LABEL_77;
  }
LABEL_2:
  uint64_t v62 = *(void *)(a1 + 16);
  if (!v62) {
    return 0;
  }
  uint64_t v2 = qword_26ACA65F0;
  uint64_t v3 = qword_26ACA65F0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
  unint64_t v5 = (uint64_t *)(qword_26ACA65F0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  id v6 = (uint64_t *)(qword_26ACA65F0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
  swift_bridgeObjectRetain();
  uint64_t v63 = (uint64_t *)v3;
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v7 = 0;
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_20B90ACA0();
    uint64_t v66 = MEMORY[0x263F8EE88];
    uint64_t v9 = *v63;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20B90DF48(v8);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v64 = v7;
    if (*(void *)(v9 + 16))
    {
      unint64_t v13 = sub_20B90D350(v10, v12);
      uint64_t v14 = MEMORY[0x263F8EE78];
      if (v15)
      {
        uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v13);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v14 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = *(void *)(v14 + 16);
    if (a1)
    {
      id v16 = (unint64_t *)(v14 + 32);
      while (1)
      {
        unint64_t v18 = *v16++;
        unint64_t v17 = v18;
        if ((v18 & 0x8000000000000000) != 0) {
          break;
        }
        uint64_t v19 = *(void *)(v2 + v4);
        if (v17 >= *(void *)(v19 + 16)) {
          goto LABEL_72;
        }
        sub_20B90B5A4(v65, *(double *)(v19 + 32 * v17 + 32), *(double *)(v19 + 32 * v17 + 40), *(double *)(v19 + 32 * v17 + 48), *(double *)(v19 + 32 * v17 + 56));
        if (!--a1) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_once();
      goto LABEL_2;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_20B91E290(v66);
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      *(void *)&v65[0] = MEMORY[0x263F8EE78];
      sub_20B926CF8();
      unint64_t v22 = (double *)(v20 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v22 - 3) / 255.0, *(v22 - 2) / 255.0, *(v22 - 1) / 255.0, *v22 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v22 += 4;
        --v21;
      }
      while (v21);
      double v23 = v65[0];
      swift_release();
      if (!(*(void *)&v23 >> 62)) {
        goto LABEL_17;
      }
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_18;
      }
LABEL_63:
      if ((*(void *)&v23 & 0xC000000000000001) == 0)
      {
        uint64_t v59 = *(void *)((*(void *)&v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v59) {
          return 1;
        }
        __break(1u);
LABEL_66:
        if ((*(void *)&v23 & 0xC000000000000001) == 0)
        {
          uint64_t v60 = *(void *)((*(void *)&v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v60) {
            goto LABEL_81;
          }
          return 1;
        }
      }
      MEMORY[0x21053A2B0](0, *(void *)&v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
LABEL_61:
      uint64_t v61 = 1;
      goto LABEL_69;
    }
    swift_release();
    double v23 = MEMORY[0x263F8EE78];
    if (MEMORY[0x263F8EE78] >> 62) {
      goto LABEL_22;
    }
LABEL_17:
    if (*(void *)((*(void *)&v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_63;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_20B90ACA0();
    uint64_t v66 = MEMORY[0x263F8EE88];
    uint64_t v25 = *v5;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_20B90DF48(v24);
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    if (*(void *)(v25 + 16))
    {
      unint64_t v29 = sub_20B90D350(v26, v28);
      uint64_t v30 = MEMORY[0x263F8EE78];
      if (v31)
      {
        uint64_t v30 = *(void *)(*(void *)(v25 + 56) + 8 * v29);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v30 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = *(void *)(v30 + 16);
    if (a1)
    {
      unint64_t v33 = (unint64_t *)(v30 + 32);
      do
      {
        unint64_t v35 = *v33++;
        unint64_t v34 = v35;
        if ((v35 & 0x8000000000000000) != 0) {
          goto LABEL_73;
        }
        uint64_t v36 = *(void *)(v2 + v4);
        if (v34 >= *(void *)(v36 + 16)) {
          goto LABEL_74;
        }
        sub_20B90B5A4(v65, *(double *)(v36 + 32 * v34 + 32), *(double *)(v36 + 32 * v34 + 40), *(double *)(v36 + 32 * v34 + 48), *(double *)(v36 + 32 * v34 + 56));
      }
      while (--a1);
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_20B91E290(v66);
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      *(void *)&v65[0] = MEMORY[0x263F8EE78];
      sub_20B926CF8();
      unint64_t v39 = (double *)(v37 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v39 - 3) / 255.0, *(v39 - 2) / 255.0, *(v39 - 1) / 255.0, *v39 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v39 += 4;
        --v38;
      }
      while (v38);
      double v23 = v65[0];
      swift_release();
      if (!(*(void *)&v23 >> 62))
      {
LABEL_34:
        if (*(void *)((*(void *)&v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_66;
        }
        goto LABEL_35;
      }
    }
    else
    {
      swift_release();
      double v23 = MEMORY[0x263F8EE78];
      if (!(MEMORY[0x263F8EE78] >> 62)) {
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_66;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_20B90ACA0();
    uint64_t v66 = MEMORY[0x263F8EE88];
    uint64_t v41 = *v6;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_20B90DF48(v40);
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    if (*(void *)(v41 + 16))
    {
      unint64_t v45 = sub_20B90D350(v42, v44);
      uint64_t v46 = MEMORY[0x263F8EE78];
      if (v47)
      {
        uint64_t v46 = *(void *)(*(void *)(v41 + 56) + 8 * v45);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v46 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = *(void *)(v46 + 16);
    if (a1)
    {
      double v49 = (unint64_t *)(v46 + 32);
      do
      {
        unint64_t v51 = *v49++;
        unint64_t v50 = v51;
        if ((v51 & 0x8000000000000000) != 0) {
          goto LABEL_75;
        }
        uint64_t v52 = *(void *)(v2 + v4);
        if (v50 >= *(void *)(v52 + 16)) {
          goto LABEL_76;
        }
        sub_20B90B5A4(v65, *(double *)(v52 + 32 * v50 + 32), *(double *)(v52 + 32 * v50 + 40), *(double *)(v52 + 32 * v50 + 48), *(double *)(v52 + 32 * v50 + 56));
      }
      while (--a1);
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_20B91E290(v66);
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void *)(v53 + 16);
    if (v54)
    {
      *(void *)&v65[0] = MEMORY[0x263F8EE78];
      sub_20B926CF8();
      uint64_t v55 = (double *)(v53 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(v55 - 3) / 255.0, *(v55 - 2) / 255.0, *(v55 - 1) / 255.0, *v55 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v55 += 4;
        --v54;
      }
      while (v54);
      double v56 = v65[0];
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t result = swift_release();
      double v56 = MEMORY[0x263F8EE78];
    }
    if (!(*(void *)&v56 >> 62))
    {
      if (*(void *)((*(void *)&v56 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_20B926D58();
    uint64_t result = swift_bridgeObjectRelease();
    if (v58) {
      break;
    }
LABEL_54:
    uint64_t v7 = v64 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v64 + 1 == v62)
    {
      uint64_t v61 = 0;
LABEL_69:
      swift_bridgeObjectRelease();
      return v61;
    }
  }
  if ((*(void *)&v56 & 0xC000000000000001) != 0)
  {
    MEMORY[0x21053A2B0](0, *(void *)&v56);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_60:
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  if (*(void *)((*(void *)&v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_20B916560(unint64_t a1)
{
  uint64_t v150 = *MEMORY[0x263EF8340];
  if (qword_26ACA36B8 != -1) {
    goto LABEL_196;
  }
LABEL_2:
  uint64_t v2 = qword_26ACA65F0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(double *)&unint64_t v4 = COERCE_DOUBLE(sub_20B90E0BC(MEMORY[0x263F8EE78]));
  double v144 = COERCE_DOUBLE(sub_20B90E1B4(v3));
  uint64_t v139 = *(void *)(a1 + 16);
  if (!v139) {
    goto LABEL_168;
  }
  uint64_t v143 = v4;
  unint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors);
  uint64_t v6 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
  swift_bridgeObjectRetain();
  v135 = v5;
  swift_beginAccess();
  v134 = v7;
  swift_beginAccess();
  v133 = v8;
  swift_beginAccess();
  uint64_t v9 = 0;
  unint64_t v10 = 0x263F82000uLL;
  uint64_t v11 = (SEL *)&unk_264088000;
  uint64_t v138 = v2;
  uint64_t v142 = v6;
  do
  {
    uint64_t v136 = v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_20B90ACA0();
    uint64_t v149 = MEMORY[0x263F8EE88];
    uint64_t v13 = *v135;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_20B90DF48(v12);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 16))
    {
      unint64_t v17 = sub_20B90D350(v14, v16);
      a1 = MEMORY[0x263F8EE78];
      if (v18)
      {
        a1 = *(void *)(*(void *)(v13 + 56) + 8 * v17);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a1 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(a1 + 16);
    if (v19)
    {
      uint64_t v20 = (unint64_t *)(a1 + 32);
      while (1)
      {
        unint64_t v22 = *v20++;
        unint64_t v21 = v22;
        if ((v22 & 0x8000000000000000) != 0) {
          break;
        }
        uint64_t v23 = *(void *)(v2 + v6);
        if (v21 >= *(void *)(v23 + 16)) {
          goto LABEL_171;
        }
        sub_20B90B5A4(v148, *(double *)(v23 + 32 * v21 + 32), *(double *)(v23 + 32 * v21 + 40), *(double *)(v23 + 32 * v21 + 48), *(double *)(v23 + 32 * v21 + 56));
        if (!--v19) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_20B91E290(v149);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      *(void *)&v148[0] = MEMORY[0x263F8EE78];
      sub_20B926CF8();
      uint64_t v26 = (double *)(v24 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(*(Class *)(v10 + 1480)), v11[191], *(v26 - 3) / 255.0, *(v26 - 2) / 255.0, *(v26 - 1) / 255.0, *v26 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v26 += 4;
        --v25;
      }
      while (v25);
      double v27 = v148[0];
      swift_release();
      uint64_t v6 = v142;
      if (!(*(void *)&v27 >> 62))
      {
LABEL_18:
        a1 = *(void *)((*(void *)&v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!a1) {
          goto LABEL_25;
        }
        goto LABEL_19;
      }
    }
    else
    {
      swift_release();
      double v27 = MEMORY[0x263F8EE78];
      if (!(MEMORY[0x263F8EE78] >> 62)) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain();
    a1 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (!a1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      id v29 = 0;
      goto LABEL_26;
    }
LABEL_19:
    if ((*(void *)&v27 & 0xC000000000000001) != 0)
    {
      id v28 = (id)MEMORY[0x21053A2B0](0, *(void *)&v27);
    }
    else
    {
      if (!*(void *)((*(void *)&v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_193;
      }
      id v28 = *(id *)(*(void *)&v27 + 32);
    }
    id v29 = v28;
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v30 = sub_20B90ACA0();
    uint64_t v149 = MEMORY[0x263F8EE88];
    uint64_t v31 = *v134;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_20B90DF48(v30);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    v137 = v29;
    if (*(void *)(v31 + 16))
    {
      unint64_t v35 = sub_20B90D350(v32, v34);
      a1 = MEMORY[0x263F8EE78];
      if (v36)
      {
        a1 = *(void *)(*(void *)(v31 + 56) + 8 * v35);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a1 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void *)(a1 + 16);
    if (v37)
    {
      uint64_t v38 = (unint64_t *)(a1 + 32);
      do
      {
        unint64_t v40 = *v38++;
        unint64_t v39 = v40;
        if ((v40 & 0x8000000000000000) != 0) {
          goto LABEL_172;
        }
        uint64_t v41 = *(void *)(v2 + v6);
        if (v39 >= *(void *)(v41 + 16)) {
          goto LABEL_173;
        }
        sub_20B90B5A4(v148, *(double *)(v41 + 32 * v39 + 32), *(double *)(v41 + 32 * v39 + 40), *(double *)(v41 + 32 * v39 + 48), *(double *)(v41 + 32 * v39 + 56));
      }
      while (--v37);
    }
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_20B91E290(v149);
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(v42 + 16);
    if (v43)
    {
      *(void *)&v148[0] = MEMORY[0x263F8EE78];
      sub_20B926CF8();
      uint64_t v44 = (double *)(v42 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(*(Class *)(v10 + 1480)), v11[191], *(v44 - 3) / 255.0, *(v44 - 2) / 255.0, *(v44 - 1) / 255.0, *v44 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v44 += 4;
        --v43;
      }
      while (v43);
      double v45 = v148[0];
      swift_release();
      uint64_t v6 = v142;
      if (!(*(void *)&v45 >> 62))
      {
LABEL_39:
        a1 = *(void *)((*(void *)&v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!a1) {
          goto LABEL_46;
        }
        goto LABEL_40;
      }
    }
    else
    {
      swift_release();
      double v45 = MEMORY[0x263F8EE78];
      if (!(MEMORY[0x263F8EE78] >> 62)) {
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRetain();
    a1 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (!a1)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      char v47 = 0;
      goto LABEL_47;
    }
LABEL_40:
    if ((*(void *)&v45 & 0xC000000000000001) != 0)
    {
      id v46 = (id)MEMORY[0x21053A2B0](0, *(void *)&v45);
    }
    else
    {
      if (!*(void *)((*(void *)&v45 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_194;
      }
      id v46 = *(id *)(*(void *)&v45 + 32);
    }
    char v47 = v46;
    swift_bridgeObjectRelease();
LABEL_47:
    uint64_t v48 = sub_20B90ACA0();
    uint64_t v149 = MEMORY[0x263F8EE88];
    uint64_t v49 = *v133;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_20B90DF48(v48);
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    if (*(void *)(v49 + 16))
    {
      unint64_t v53 = sub_20B90D350(v50, v52);
      a1 = MEMORY[0x263F8EE78];
      if (v54)
      {
        a1 = *(void *)(*(void *)(v49 + 56) + 8 * v53);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a1 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(a1 + 16);
    if (v55)
    {
      double v56 = (unint64_t *)(a1 + 32);
      do
      {
        unint64_t v58 = *v56++;
        unint64_t v57 = v58;
        if ((v58 & 0x8000000000000000) != 0) {
          goto LABEL_174;
        }
        uint64_t v59 = *(void *)(v2 + v6);
        if (v57 >= *(void *)(v59 + 16)) {
          goto LABEL_175;
        }
        sub_20B90B5A4(v148, *(double *)(v59 + 32 * v57 + 32), *(double *)(v59 + 32 * v57 + 40), *(double *)(v59 + 32 * v57 + 48), *(double *)(v59 + 32 * v57 + 56));
      }
      while (--v55);
    }
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_20B91E290(v149);
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void *)(v60 + 16);
    if (v61)
    {
      *(void *)&v148[0] = MEMORY[0x263F8EE78];
      sub_20B926CF8();
      uint64_t v62 = (double *)(v60 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(*(Class *)(v10 + 1480)), sel_initWithRed_green_blue_alpha_, *(v62 - 3) / 255.0, *(v62 - 2) / 255.0, *(v62 - 1) / 255.0, *v62 / 255.0);
        sub_20B926CD8();
        sub_20B926D08();
        sub_20B926D18();
        sub_20B926CE8();
        v62 += 4;
        --v61;
      }
      while (v61);
      double v63 = v148[0];
      swift_release();
      uint64_t v6 = v142;
    }
    else
    {
      swift_release();
      double v63 = MEMORY[0x263F8EE78];
    }
    if (*(void *)&v63 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (!a1) {
        goto LABEL_67;
      }
    }
    else
    {
      a1 = *(void *)((*(void *)&v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!a1) {
        goto LABEL_67;
      }
    }
    if ((*(void *)&v63 & 0xC000000000000001) != 0)
    {
      id v64 = (id)MEMORY[0x21053A2B0](0, *(void *)&v63);
    }
    else
    {
      if (!*(void *)((*(void *)&v63 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_195;
      }
      id v64 = *(id *)(*(void *)&v63 + 32);
    }
    a1 = (unint64_t)v64;
LABEL_67:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v148[0] = MEMORY[0x263F8EE78];
    if (v137)
    {
      id v65 = v137;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_20B926AC8();
      sub_20B926AD8();
      sub_20B926AB8();
    }
    if (v47)
    {
      id v66 = v47;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_20B926AC8();
      sub_20B926AD8();
      sub_20B926AB8();
    }
    if (a1)
    {
      id v67 = (id)a1;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_20B926AC8();
      sub_20B926AD8();
      sub_20B926AB8();
    }
    uint64_t v68 = *(void *)&v148[0];

    *(void *)&v148[0] = MEMORY[0x263F8EE78];
    uint64_t v149 = MEMORY[0x263F8EE88];
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0) {
        a1 = v68;
      }
      else {
        a1 = v68 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (!v69) {
        goto LABEL_108;
      }
LABEL_81:
      unint64_t v70 = 0;
      while (1)
      {
        if ((v68 & 0xC000000000000001) != 0)
        {
          id v71 = (id)MEMORY[0x21053A2B0](v70, v68);
        }
        else
        {
          if (v70 >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_186;
          }
          id v71 = *(id *)(v68 + 32 + 8 * v70);
        }
        a1 = (unint64_t)v71;
        BOOL v72 = __OFADD__(v70++, 1);
        if (v72) {
          goto LABEL_176;
        }
        double v146 = 0.0;
        double v147 = 0.0;
        double v145 = 0.0;
        objc_msgSend(v71, sel_getHue_saturation_brightness_alpha_, &v147, &v145, &v146, 0);
        double v73 = round(v147 * 100.0) + round(v146 * 100.0) * 100.0 + round(v145 * 100.0) * 10000.0;
        if ((~*(void *)&v73 & 0x7FF0000000000000) == 0) {
          goto LABEL_177;
        }
        if (v73 <= -9.22337204e18) {
          goto LABEL_178;
        }
        if (v73 >= 9.22337204e18) {
          goto LABEL_179;
        }
        uint64_t v74 = (uint64_t)v73;
        uint64_t v75 = v149;
        if (!*(void *)(v149 + 16)) {
          goto LABEL_82;
        }
        uint64_t v76 = sub_20B926F48();
        uint64_t v77 = -1 << *(unsigned char *)(v75 + 32);
        unint64_t v78 = v76 & ~v77;
        if (((*(void *)(v75 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v78) & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v79 = *(void *)(v75 + 48);
        if (*(void *)(v79 + 8 * v78) != v74) {
          break;
        }
LABEL_85:

        unint64_t v10 = 0x263F82000;
        if (v70 == v69)
        {
          swift_bridgeObjectRelease();
          double v81 = v148[0];
          uint64_t v6 = v142;
          goto LABEL_109;
        }
      }
      uint64_t v80 = ~v77;
      while (1)
      {
        unint64_t v78 = (v78 + 1) & v80;
        if (((*(void *)(v75 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v78) & 1) == 0) {
          break;
        }
        if (*(void *)(v79 + 8 * v78) == v74) {
          goto LABEL_85;
        }
      }
LABEL_82:
      a1 = (unint64_t)(id)a1;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_20B926AC8();
      sub_20B926AD8();
      sub_20B926AB8();
      sub_20B90B708((uint64_t *)&v147, v74);
      goto LABEL_85;
    }
    uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v69) {
      goto LABEL_81;
    }
LABEL_108:
    swift_bridgeObjectRelease();
    double v81 = MEMORY[0x263F8EE78];
LABEL_109:
    swift_bridgeObjectRelease();
    if (*(void *)&v81 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v82 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (!v82) {
        goto LABEL_4;
      }
LABEL_111:
      double v140 = v81;
      unint64_t v141 = *(void *)&v81 & 0xC000000000000001;
      uint64_t v83 = 4;
      while (1)
      {
        a1 = v83 - 4;
        id v84 = v141 ? (id)MEMORY[0x21053A2B0](v83 - 4, *(void *)&v81) : *(id *)(*(void *)&v81 + 8 * v83);
        unint64_t v85 = v84;
        uint64_t v86 = v83 - 3;
        if (__OFADD__(a1, 1)) {
          break;
        }
        double v146 = 0.0;
        double v147 = 0.0;
        double v145 = 0.0;
        objc_msgSend(v84, sel_getHue_saturation_brightness_alpha_, &v147, &v145, &v146, 0);
        double v87 = round(v147 * 100.0) + round(v146 * 100.0) * 100.0 + round(v145 * 100.0) * 10000.0;
        if ((~*(void *)&v87 & 0x7FF0000000000000) == 0) {
          goto LABEL_181;
        }
        if (v87 <= -9.22337204e18) {
          goto LABEL_182;
        }
        if (v87 >= 9.22337204e18) {
          goto LABEL_183;
        }
        uint64_t v88 = (uint64_t)v87;
        if (*(void *)(v143 + 16) && (sub_20B90D45C((uint64_t)v87), (v89 & 1) != 0))
        {
          uint64_t v90 = *(void *)(*(void *)&v144 + 16);
          if (v90)
          {
            a1 = *(void *)&v144;
            unint64_t v91 = sub_20B90D45C(v88);
            if (v92) {
              uint64_t v90 = *(void *)(*(void *)(*(void *)&v144 + 56) + 8 * v91);
            }
            else {
              uint64_t v90 = 0;
            }
          }
          uint64_t v119 = v90 + 1;
          if (__OFADD__(v90, 1)) {
            goto LABEL_189;
          }
          if (v90 + 0x4000000000000001 < 0) {
            goto LABEL_190;
          }
          if (v139 <= 2 * v119)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (uint64_t)v85;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          double v147 = v144;
          a1 = sub_20B90D45C(v88);
          uint64_t v122 = *(void *)(*(void *)&v144 + 16);
          BOOL v123 = (v121 & 1) == 0;
          uint64_t v124 = v122 + v123;
          if (__OFADD__(v122, v123)) {
            goto LABEL_191;
          }
          char v125 = v121;
          if (*(void *)(*(void *)&v144 + 24) >= v124)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_20B90494C();
            }
          }
          else
          {
            sub_20B904090(v124, isUniquelyReferenced_nonNull_native);
            unint64_t v126 = sub_20B90D45C(v88);
            if ((v125 & 1) != (v127 & 1))
            {
LABEL_197:
              uint64_t result = sub_20B926F28();
              __break(1u);
              return result;
            }
            a1 = v126;
          }
          uint64_t v6 = v142;
          double v128 = v147;
          double v144 = v147;
          if (v125)
          {
            *(void *)(*(void *)(*(void *)&v147 + 56) + 8 * a1) = v119;
          }
          else
          {
            *(void *)(*(void *)&v147 + 8 * (a1 >> 6) + 64) |= 1 << a1;
            uint64_t v129 = 8 * a1;
            *(void *)(*(void *)(*(void *)&v128 + 48) + v129) = v88;
            *(void *)(*(void *)(*(void *)&v128 + 56) + v129) = v119;
            uint64_t v130 = *(void *)(*(void *)&v128 + 16);
            BOOL v72 = __OFADD__(v130, 1);
            uint64_t v131 = v130 + 1;
            if (v72) {
              goto LABEL_192;
            }
            *(void *)(*(void *)&v128 + 16) = v131;
          }

          swift_bridgeObjectRelease();
          uint64_t v2 = v138;
        }
        else
        {
          id v93 = v85;
          char v94 = swift_isUniquelyReferenced_nonNull_native();
          double v147 = *(double *)&v143;
          unint64_t v96 = sub_20B90D45C(v88);
          uint64_t v97 = *(void *)(v143 + 16);
          BOOL v98 = (v95 & 1) == 0;
          uint64_t v99 = v97 + v98;
          if (__OFADD__(v97, v98)) {
            goto LABEL_184;
          }
          a1 = v95;
          if (*(void *)(v143 + 24) >= v99)
          {
            if ((v94 & 1) == 0) {
              sub_20B9047A8();
            }
          }
          else
          {
            sub_20B903DDC(v99, v94);
            unint64_t v100 = sub_20B90D45C(v88);
            if ((a1 & 1) != (v101 & 1)) {
              goto LABEL_197;
            }
            unint64_t v96 = v100;
          }
          double v102 = v147;
          *(double *)&uint64_t v143 = v147;
          if (a1)
          {
            uint64_t v103 = *(void *)(*(void *)&v147 + 56);

            *(void *)(v103 + 8 * v96) = v93;
          }
          else
          {
            *(void *)(*(void *)&v147 + 8 * (v96 >> 6) + 64) |= 1 << v96;
            uint64_t v104 = 8 * v96;
            *(void *)(*(void *)(*(void *)&v102 + 48) + v104) = v88;
            *(void *)(*(void *)(*(void *)&v102 + 56) + v104) = v93;
            uint64_t v105 = *(void *)(*(void *)&v102 + 16);
            BOOL v72 = __OFADD__(v105, 1);
            uint64_t v106 = v105 + 1;
            if (v72) {
              goto LABEL_187;
            }
            *(void *)(*(void *)&v102 + 16) = v106;
          }
          swift_bridgeObjectRelease();
          char v107 = swift_isUniquelyReferenced_nonNull_native();
          double v147 = v144;
          a1 = sub_20B90D45C(v88);
          uint64_t v109 = *(void *)(*(void *)&v144 + 16);
          BOOL v110 = (v108 & 1) == 0;
          uint64_t v111 = v109 + v110;
          if (__OFADD__(v109, v110)) {
            goto LABEL_185;
          }
          char v112 = v108;
          if (*(void *)(*(void *)&v144 + 24) >= v111)
          {
            if ((v107 & 1) == 0) {
              sub_20B90494C();
            }
          }
          else
          {
            sub_20B904090(v111, v107);
            unint64_t v113 = sub_20B90D45C(v88);
            if ((v112 & 1) != (v114 & 1)) {
              goto LABEL_197;
            }
            a1 = v113;
          }
          uint64_t v6 = v142;
          double v115 = v147;
          double v144 = v147;
          if (v112)
          {
            *(void *)(*(void *)(*(void *)&v147 + 56) + 8 * a1) = 1;
          }
          else
          {
            *(void *)(*(void *)&v147 + 8 * (a1 >> 6) + 64) |= 1 << a1;
            uint64_t v116 = 8 * a1;
            *(void *)(*(void *)(*(void *)&v115 + 48) + v116) = v88;
            *(void *)(*(void *)(*(void *)&v115 + 56) + v116) = 1;
            uint64_t v117 = *(void *)(*(void *)&v115 + 16);
            BOOL v72 = __OFADD__(v117, 1);
            uint64_t v118 = v117 + 1;
            if (v72) {
              goto LABEL_188;
            }
            *(void *)(*(void *)&v115 + 16) = v118;
          }

          swift_bridgeObjectRelease();
        }
        double v81 = v140;
        ++v83;
        unint64_t v10 = 0x263F82000;
        if (v86 == v82) {
          goto LABEL_4;
        }
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      swift_once();
      goto LABEL_2;
    }
    uint64_t v82 = *(void *)((*(void *)&v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v82) {
      goto LABEL_111;
    }
LABEL_4:
    uint64_t v9 = v136 + 1;
    swift_bridgeObjectRelease();
    uint64_t v11 = (SEL *)&unk_264088000;
  }
  while (v136 + 1 != v139);
  swift_bridgeObjectRelease();
LABEL_168:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

id _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(unint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  if (qword_26ACA36B8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26ACA65F0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors;
  swift_beginAccess();
  if (!*(void *)(*(void *)v2 + 16))
  {
LABEL_13:
    type metadata accessor for ImageUtil();
    uint64_t v9 = (void *)sub_20B914C40(a1);
    id v10 = objc_msgSend(objc_allocWithZone((Class)EMP_TSDImageColorAnalyzer), sel_initWithImage_, v9);
    uint64_t v20 = sub_20B915884;
    uint64_t v21 = 0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20B915940;
    uint64_t v19 = &block_descriptor_8;
    uint64_t v11 = _Block_copy(aBlock);
    objc_msgSend(v10, sel_filterInterestingColorsUsingBlock_, v11);
    _Block_release(v11);
    id v12 = objc_msgSend(v10, sel_interestingColors);
    id v13 = objc_msgSend(v12, sel_firstObject);

    if (v13)
    {
      sub_20B926BF8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v17, 0, sizeof(v17));
    }
    sub_20B917A84((uint64_t)v17, (uint64_t)aBlock);
    if (v19)
    {
      sub_20B8F704C(0, &qword_26ACA38C0);
      if (swift_dynamicCast())
      {
        id v8 = v16;
LABEL_26:

        return v8;
      }
    }
    else
    {
      sub_20B917AEC((uint64_t)aBlock);
    }
    if (qword_2676A5830 != -1) {
      swift_once();
    }
    id v8 = (id)qword_2676A5EA8;
    goto LABEL_26;
  }
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_20B915A38(v3);
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16) == 1)
  {
    uint64_t v5 = sub_20B914674(v4);
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      id v8 = (id)sub_20B915B24(v5, v7);
      swift_bridgeObjectRelease();
      if (v8) {
        return v8;
      }
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (sub_20B915C94(a1))
  {
    id v8 = (id)sub_20B916560(a1);
    if (v8) {
      return v8;
    }
    goto LABEL_13;
  }
LABEL_15:
  if (qword_2676A5830 != -1) {
    swift_once();
  }
  id v8 = (id)qword_2676A5EA8;
  id v14 = (id)qword_2676A5EA8;
  return v8;
}

uint64_t type metadata accessor for ImageUtil()
{
  return self;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_20B917A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA3920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B917AEC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA3920);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B917B4C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

id sub_20B917B8C(void *a1)
{
  return sub_20B914E60(a1, *(void *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(void *)(v1 + 56), *(double **)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_20B917BA0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B917BB0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA36E0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20B9294E0;
  uint64_t v5 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v6 = self;
  id v7 = v5;
  *(void *)(inited + 40) = objc_msgSend(v6, sel_systemFontOfSize_, 40.0);
  unint64_t v8 = sub_20B909AD0(inited);
  uint64_t v9 = (void *)sub_20B926908();
  sub_20B914744(v8);
  type metadata accessor for Key(0);
  sub_20B8F4A48();
  id v10 = (void *)sub_20B9268B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_sizeWithAttributes_, v10);
  double v12 = v11;
  double v14 = v13;

  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_, v12, v14);
  uint64_t v16 = (double *)swift_allocObject();
  void v16[2] = 0.0;
  v16[3] = 0.0;
  v16[4] = v12;
  v16[5] = v14;
  *((void *)v16 + 6) = a1;
  *((void *)v16 + 7) = a2;
  *((void *)v16 + 8) = v8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_20B917E88;
  *(void *)(v17 + 24) = v16;
  v21[4] = sub_20B917EC4;
  void v21[5] = v17;
  v21[0] = MEMORY[0x263EF8330];
  v21[1] = 1107296256;
  void v21[2] = sub_20B8F48A4;
  v21[3] = &block_descriptor_17;
  char v18 = _Block_copy(v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v15, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v18 & 1) == 0) {
    return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B917E48()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_20B917E88(void *a1)
{
  sub_20B914AF8(a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_20B917E9C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B917EAC()
{
  return swift_release();
}

uint64_t sub_20B917EC8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_20B918124(uint64_t a1)
{
  return sub_20B91AEA0(a1, type metadata accessor for NoKeyboardTextField);
}

uint64_t sub_20B91813C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x21053B1C0](v1);
}

uint64_t sub_20B91818C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_20B9181F8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21053B1C0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_20B8FF40C;
}

id EmojiEditingInputViewController.__allocating_init(emoji:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return EmojiEditingInputViewController.init(emoji:)(a1);
}

id EmojiEditingInputViewController.init(emoji:)(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_navBar;
  id v4 = objc_allocWithZone(MEMORY[0x263F829A0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  sub_20B9267E8();
  uint64_t v6 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField;
  type metadata accessor for NoKeyboardTextField();
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel;
  *(void *)&v5[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_keyboardVC;
  *(void *)&v5[v8] = objc_msgSend(self, sel_createKeyboardViewController);
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji] = a1;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for EmojiEditingInputViewController();
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for NoKeyboardTextField()
{
  return self;
}

uint64_t type metadata accessor for EmojiEditingInputViewController()
{
  uint64_t result = qword_2676A5EE8;
  if (!qword_2676A5EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_20B9184B4()
{
  uint64_t v0 = self;
  objc_msgSend(v0, sel_releaseSharedInstance);
  return objc_msgSend(v0, sel_purgeImageCache);
}

double sub_20B918508(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (v4 == (id)1) {
    a1 = 4;
  }
  objc_msgSend(self, sel_keyboardSizeForOrientation_, a1);
  return v5 + 44.0 + 22.0;
}

void sub_20B91859C()
{
  uint64_t v1 = v0;
  v153.receiver = v0;
  v153.super_class = (Class)type metadata accessor for EmojiEditingInputViewController();
  objc_msgSendSuper2(&v153, sel_viewDidLoad);
  id v2 = objc_msgSend(self, sel_effectWithStyle_, 9);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v2);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  double v5 = v4;
  uint64_t v150 = v3;
  objc_msgSend(v4, sel_addSubview_, v3);

  id v6 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v6, sel_em_setBackgroundHidden_, 1);
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel];
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v149 = v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithCustomView_, v7);
  objc_msgSend(v6, sel_setLeftBarButtonItem_, v8);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2FD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20B92BFD0;
  *(void *)(v9 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 24, v1, sel_didTapCloseButton);
  sub_20B926AB8();
  uint64_t v152 = v9;
  id v10 = objc_msgSend(v1, sel_traitCollection);
  id v11 = objc_msgSend(v10, sel_userInterfaceIdiom);

  id v148 = v11;
  if (v11 == (id)1)
  {
    double v12 = (void *)sub_20B926908();
    id v13 = objc_msgSend(self, sel_systemImageNamed_, v12);

    id v14 = objc_allocWithZone(MEMORY[0x263F824A8]);
    id v15 = v1;
    id v16 = objc_msgSend(v14, sel_initWithImage_style_target_action_, v13, 0, v15, sel_didTapDeleteButton);

    id v17 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v16, sel_setTintColor_, v17);

    id v18 = v16;
    MEMORY[0x21053A0A0]();
    if (*(void *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_20B926AC8();
    }
    sub_20B926AD8();
    sub_20B926AB8();
  }
  sub_20B8F704C(0, &qword_2676A5EC0);
  swift_bridgeObjectRetain();
  id v19 = (void *)sub_20B926A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setRightBarButtonItems_, v19);

  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_navBar];
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_20B92BFD0;
  *(void *)(v21 + 32) = v6;
  sub_20B926AB8();
  sub_20B8F704C(0, &qword_2676A5EC8);
  id v147 = v6;
  unint64_t v22 = (void *)sub_20B926A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setItems_animated_, v22, 0);

  id v23 = objc_msgSend(v1, sel_view);
  if (!v23) {
    goto LABEL_57;
  }
  uint64_t v24 = v23;
  objc_msgSend(v23, sel_addSubview_, v20);

  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField];
  uint64_t v26 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
  sub_20B9268D8();
  swift_bridgeObjectRelease();
  double v27 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setText_, v27);

  id v28 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x263F83570]);
  id v29 = objc_msgSend(self, sel_fontWithDescriptor_size_, v28, 32.0);

  objc_msgSend(v25, sel_setFont_, v29);
  objc_msgSend(v25, sel_setTextAlignment_, 1);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v25, sel_setKeyboardType_, 124);
  objc_msgSend(v25, sel_setDelegate_, v1);
  id v30 = objc_msgSend(v1, sel_view);
  if (!v30)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v31 = v30;
  objc_msgSend(v30, sel_addSubview_, v25);

  id v32 = objc_msgSend(v1, sel_view);
  if (!v32)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v33 = v32;
  uint64_t v34 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_keyboardVC];
  id v35 = objc_msgSend(v34, sel_view);
  if (!v35)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  char v36 = v35;
  objc_msgSend(v33, sel_addSubview_, v35);

  objc_msgSend(v1, sel_addChildViewController_, v34);
  id v37 = objc_msgSend(v34, sel_view);
  if (!v37)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v38 = v37;
  objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v34, sel_didMoveToParentViewController_, v1);
  objc_msgSend(v34, sel_setTextInputView_, v25);
  id v39 = objc_msgSend(v34, sel_view);
  if (!v39)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  unint64_t v40 = v39;
  objc_msgSend(v39, sel_sizeToFit);

  sub_20B919F94(*(void *)(*(void *)&v1[v26] + 16));
  id v41 = objc_msgSend(v25, sel_font);
  if (v41)
  {
    uint64_t v42 = v41;
    objc_msgSend(v41, sel_lineHeight);
    double v44 = v43;
  }
  else
  {
    double v44 = 36.0;
  }
  unint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_20B92BFE0;
  id v46 = objc_msgSend(v1, sel_view);
  if (!v46) {
    goto LABEL_63;
  }
  char v47 = v46;
  id v48 = objc_msgSend(v46, sel_leadingAnchor);

  id v49 = objc_msgSend(v150, sel_leadingAnchor);
  id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(void *)(v45 + 32) = v50;
  id v51 = objc_msgSend(v1, sel_view);
  if (!v51)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v52 = v51;
  id v53 = objc_msgSend(v51, sel_trailingAnchor);

  id v54 = objc_msgSend(v150, sel_trailingAnchor);
  id v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

  *(void *)(v45 + 40) = v55;
  id v56 = objc_msgSend(v1, sel_view);
  if (!v56)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  unint64_t v57 = v56;
  id v58 = objc_msgSend(v56, sel_topAnchor);

  id v59 = objc_msgSend(v150, sel_topAnchor);
  id v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(void *)(v45 + 48) = v60;
  id v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v62 = v61;
  id v63 = objc_msgSend(v61, sel_bottomAnchor);

  id v64 = objc_msgSend(v150, sel_bottomAnchor);
  id v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(void *)(v45 + 56) = v65;
  id v66 = objc_msgSend(v1, sel_view);
  if (!v66)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  id v67 = v66;
  id v68 = objc_msgSend(v66, sel_topAnchor);

  id v69 = objc_msgSend(v20, sel_topAnchor);
  id v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

  *(void *)(v45 + 64) = v70;
  id v71 = objc_msgSend(v20, sel_heightAnchor);
  id v72 = objc_msgSend(v71, sel_constraintEqualToConstant_, 44.0);

  *(void *)(v45 + 72) = v72;
  id v73 = objc_msgSend(v25, sel_heightAnchor);
  id v74 = objc_msgSend(v73, sel_constraintGreaterThanOrEqualToConstant_, v44 + 8.0);

  *(void *)(v45 + 80) = v74;
  id v75 = objc_msgSend(v34, sel_view);
  if (!v75)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v76 = v75;
  id v77 = objc_msgSend(v75, sel_topAnchor);

  id v78 = objc_msgSend(v25, sel_firstBaselineAnchor);
  id v79 = objc_msgSend(v77, sel_constraintEqualToAnchor_constant_, v78, 24.0);

  *(void *)(v45 + 88) = v79;
  id v80 = objc_msgSend(v20, sel_leadingAnchor);
  id v81 = objc_msgSend(v1, sel_view);
  if (!v81)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v82 = v81;
  id v83 = objc_msgSend(v81, sel_leadingAnchor);

  id v84 = objc_msgSend(v80, sel_constraintEqualToAnchor_, v83);
  *(void *)(v45 + 96) = v84;
  id v85 = objc_msgSend(v20, sel_trailingAnchor);
  id v86 = objc_msgSend(v1, sel_view);
  if (!v86)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  double v87 = v86;
  id v88 = objc_msgSend(v86, sel_trailingAnchor);

  id v89 = objc_msgSend(v85, sel_constraintEqualToAnchor_, v88);
  *(void *)(v45 + 104) = v89;
  id v90 = objc_msgSend(v149, sel_widthAnchor);
  id v91 = objc_msgSend(v90, sel_constraintEqualToConstant_, 40.0);

  *(void *)(v45 + 112) = v91;
  id v92 = objc_msgSend(v1, sel_view);
  if (!v92)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  id v93 = v92;
  id v94 = objc_msgSend(v92, sel_leadingAnchor);

  id v95 = objc_msgSend(v34, (SEL)&selRef_leadingAnchor);
  if (!v95)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  unint64_t v96 = v95;
  id v97 = objc_msgSend(v95, sel_leadingAnchor);

  id v98 = objc_msgSend(v94, sel_constraintEqualToAnchor_, v97);
  *(void *)(v45 + 120) = v98;
  id v99 = objc_msgSend(v1, (SEL)&selRef_leadingAnchor);
  if (!v99)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v100 = v99;
  id v101 = objc_msgSend(v99, sel_trailingAnchor);

  id v102 = objc_msgSend(v34, (SEL)&selRef_leadingAnchor);
  if (!v102)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v103 = v102;
  id v104 = objc_msgSend(v102, sel_trailingAnchor);

  id v105 = objc_msgSend(v101, sel_constraintEqualToAnchor_, v104);
  *(void *)(v45 + 128) = v105;
  id v106 = objc_msgSend(v25, sel_leadingAnchor);
  id v107 = objc_msgSend(v1, (SEL)&selRef_leadingAnchor);
  if (!v107)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  char v108 = v107;
  id v109 = objc_msgSend(v107, sel_leadingAnchor);

  id v110 = objc_msgSend(v106, sel_constraintEqualToAnchor_constant_, v109, 60.0);
  *(void *)(v45 + 136) = v110;
  id v111 = objc_msgSend(v25, sel_trailingAnchor);
  id v112 = objc_msgSend(v1, (SEL)&selRef_leadingAnchor);
  if (!v112)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  unint64_t v113 = v112;
  id v114 = objc_msgSend(v112, sel_trailingAnchor);

  id v115 = objc_msgSend(v111, sel_constraintEqualToAnchor_constant_, v114, -60.0);
  *(void *)(v45 + 144) = v115;
  sub_20B926AB8();
  unint64_t v151 = v45;
  id v116 = objc_msgSend(v1, (SEL)&selRef_leadingAnchor);
  uint64_t v117 = v116;
  if (v148 != (id)1)
  {
    char v125 = v150;
    if (!v116)
    {
LABEL_82:
      __break(1u);
      return;
    }
    id v131 = objc_msgSend(v116, sel_topAnchor);

    id v132 = objc_msgSend(v25, sel_topAnchor);
    id v133 = objc_msgSend(v131, sel_constraintEqualToAnchor_constant_, v132, -10.0);

    id v122 = v133;
    MEMORY[0x21053A0A0]();
    if (*(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_43;
    }
    goto LABEL_55;
  }
  if (!v116)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  id v118 = objc_msgSend(v116, sel_bottomAnchor);

  id v119 = objc_msgSend(v34, (SEL)&selRef_leadingAnchor);
  if (!v119)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  unint64_t v120 = v119;
  id v121 = objc_msgSend(v119, sel_bottomAnchor);

  id v122 = objc_msgSend(v118, sel_constraintEqualToAnchor_constant_, v121, 20.0);
  id v123 = objc_msgSend(v1, (SEL)&selRef_leadingAnchor);
  if (!v123)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v124 = v123;
  char v125 = &unk_264088000;
  id v126 = objc_msgSend(v123, sel_topAnchor);

  id v127 = objc_msgSend(v25, sel_topAnchor);
  id v128 = objc_msgSend(v126, sel_constraintEqualToAnchor_constant_, v127, -35.0);

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v129 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v129, 2))
  {
    __break(1u);
LABEL_55:
    sub_20B926AC8();
LABEL_43:
    sub_20B926AD8();
    sub_20B926AB8();
    goto LABEL_44;
  }
  sub_20B91B7A0(v129 + 2, 1);
  sub_20B926AB8();
  id v130 = v122;
  MEMORY[0x21053A0A0]();
  if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20B926AC8();
  }
  sub_20B926AD8();
  sub_20B926AB8();
  id v122 = v128;
  MEMORY[0x21053A0A0]();
  if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20B926AC8();
  }
  sub_20B926AD8();
  sub_20B926AB8();

  char v125 = v150;
LABEL_44:

  v134 = self;
  sub_20B8F704C(0, &qword_26ACA2EC0);
  swift_bridgeObjectRetain();
  v135 = (void *)sub_20B926A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v134, sel_activateConstraints_, v135);

  id v136 = objc_msgSend(v1, (SEL)&selRef_leadingAnchor);
  if (!v136)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v137 = v136;
  id v138 = objc_msgSend(v34, (SEL)&selRef_leadingAnchor);
  if (!v138)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v139 = v138;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v137, sel_bringSubviewToFront_, v139);

  double v140 = &v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate];
  swift_beginAccess();
  if (MEMORY[0x21053B1C0](v140))
  {
    uint64_t v141 = *((void *)v140 + 1);
    id v142 = objc_msgSend(v1, sel_traitCollection);
    id v143 = objc_msgSend(v142, sel_userInterfaceIdiom);

    if (v143 == (id)1) {
      uint64_t v144 = 4;
    }
    else {
      uint64_t v144 = 1;
    }
    uint64_t ObjectType = swift_getObjectType();
    objc_msgSend(self, sel_keyboardSizeForOrientation_, v144);
    (*(void (**)(uint64_t, uint64_t, double))(v141 + 8))(ObjectType, v141, v146 + 44.0 + 22.0);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_20B91999C(char a1)
{
  id v2 = v1;
  uint64_t v4 = sub_20B926858();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20B926878();
  uint64_t v8 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (objc_class *)type metadata accessor for EmojiEditingInputViewController();
  v20.receiver = v2;
  v20.super_class = v11;
  objc_msgSendSuper2(&v20, sel_viewWillAppear_, a1 & 1);
  sub_20B8F704C(0, (unint64_t *)&unk_2676A5D80);
  double v12 = (void *)sub_20B926B78();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  aBlock[4] = sub_20B91B898;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20B917EC8;
  void aBlock[3] = &block_descriptor_9;
  id v14 = _Block_copy(aBlock);
  id v15 = v2;
  swift_release();
  sub_20B926868();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20B9098F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5D90);
  sub_20B8E7C9C((unint64_t *)&qword_2676A5EE0, &qword_2676A5D90);
  sub_20B926C08();
  MEMORY[0x21053A1C0](0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
}

uint64_t sub_20B919C70(char *a1)
{
  id v2 = &a1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate];
  swift_beginAccess();
  uint64_t result = MEMORY[0x21053B1C0](v2);
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    id v5 = objc_msgSend(a1, sel_traitCollection);
    id v6 = objc_msgSend(v5, sel_userInterfaceIdiom);

    if (v6 == (id)1) {
      uint64_t v7 = 4;
    }
    else {
      uint64_t v7 = 1;
    }
    uint64_t ObjectType = swift_getObjectType();
    objc_msgSend(self, sel_keyboardSizeForOrientation_, v7);
    (*(void (**)(uint64_t, uint64_t, double))(v4 + 8))(ObjectType, v4, v9 + 44.0 + 22.0);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_20B919DC4(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for EmojiEditingInputViewController();
  objc_msgSendSuper2(&v4, sel_viewIsAppearing_, a1 & 1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField], sel_becomeFirstResponder);
}

void sub_20B919EA0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2EB0);
  sub_20B8E7C9C((unint64_t *)&qword_26ACA3058, &qword_26ACA2EB0);
  sub_20B9268D8();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);
}

void sub_20B919F94(uint64_t a1)
{
  type metadata accessor for BackgroundViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20B926708();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20B92B3B0;
  uint64_t v6 = MEMORY[0x263F8D6C8];
  uint64_t v7 = MEMORY[0x263F8D750];
  *(void *)(v5 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v7;
  *(void *)(v5 + 72) = 6;
  sub_20B926918();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v8 = objc_allocWithZone(MEMORY[0x263F089B8]);
  double v9 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v8, sel_initWithString_, v9, 0x800000020B92EA60);

  uint64_t v10 = *MEMORY[0x263F81500];
  id v11 = self;
  id v12 = objc_msgSend(v11, sel_labelColor);
  objc_msgSend(v14, sel_addAttribute_value_range_, v10, v12, 0, 1);

  id v13 = objc_msgSend(v11, sel_grayColor);
  objc_msgSend(v14, sel_addAttribute_value_range_, v10, v13, 1, 2);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel), sel_setAttributedText_, v14);
}

BOOL sub_20B91A1E8(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_text);
  uint64_t v49 = v3;
  if (v6)
  {
    uint64_t v7 = v6;
    sub_20B926948();
  }
  id v8 = objc_allocWithZone(NSString);
  double v9 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithString_, v9);

  id v11 = (void *)sub_20B926908();
  id v48 = v10;
  id v12 = objc_msgSend(v10, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v11);

  sub_20B926948();
  sub_20B926A48();
  id v13 = objc_allocWithZone(NSString);
  id v14 = (void *)sub_20B926908();
  id v15 = objc_msgSend(v13, sel_initWithString_, v14);

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0xE000000000000000;
  id v17 = v15;
  objc_msgSend(v17, sel_length);
  id v55 = sub_20B908770;
  uint64_t v56 = v16;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v52 = 1107296256;
  id v53 = sub_20B908778;
  id v54 = &block_descriptor_6;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  id v19 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  objc_super v20 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v19, sel_initWithString_, v20);

  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = MEMORY[0x263F8EE78];
  id v23 = v21;
  objc_msgSend(v23, sel_length);
  id v55 = sub_20B91B928;
  uint64_t v56 = v22;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v52 = 1107296256;
  id v53 = sub_20B908778;
  id v54 = &block_descriptor_12;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v24);
  swift_beginAccess();
  uint64_t v25 = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v26 = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  if (v26 > 6)
  {
    id v35 = sub_20B9267D8();
    os_log_type_t v36 = sub_20B926B18();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v50[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v39 = swift_bridgeObjectRetain();
      uint64_t v40 = MEMORY[0x21053A0E0](v39, MEMORY[0x263F8D310]);
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      sub_20B91B148(v40, v42, v50);
      sub_20B926BC8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2048;
      sub_20B926BC8();
      _os_log_impl(&dword_20B8D3000, v35, v36, "emojiArray %s has greater than %ld emoji, not updating input", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21053B150](v38, -1, -1);
      MEMORY[0x21053B150](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    double v27 = sub_20B9267D8();
    os_log_type_t v28 = sub_20B926B18();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v50[0] = v30;
      *(_DWORD *)id v29 = 136315138;
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = MEMORY[0x21053A0E0](v31, MEMORY[0x263F8D310]);
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      sub_20B91B148(v32, v34, v50);
      sub_20B926BC8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20B8D3000, v27, v28, "Updating input with emojiArray %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21053B150](v30, -1, -1);
      MEMORY[0x21053B150](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v43 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji;
    *(void *)(v49 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_20B919F94(v26);
    uint64_t v44 = v49 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x21053B1C0](v44))
    {
      if (*(void *)(*(void *)(v49 + v43) + 16))
      {
        uint64_t v45 = *(void *)(v44 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v25, ObjectType, v45);
      }
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
  }

  return v26 < 7;
}

id sub_20B91AA78()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField);
  id result = objc_msgSend(v1, sel_text);
  if (result)
  {
    uint64_t v3 = result;
    sub_20B926948();

    uint64_t v4 = sub_20B91BDD4(1);
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    MEMORY[0x210539FD0](v4, v6, v8, v10);
    swift_bridgeObjectRelease();
    id v11 = (void *)sub_20B926908();
    objc_msgSend(v1, sel_setText_, v11);

    id v12 = objc_allocWithZone(NSString);
    swift_bridgeObjectRetain();
    id v13 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_initWithString_, v13);

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = MEMORY[0x263F8EE78];
    id v16 = v14;
    objc_msgSend(v16, sel_length);
    aBlock[4] = sub_20B91B928;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20B908778;
    void aBlock[3] = &block_descriptor_24;
    id v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    CEMEnumerateEmojiTokensInStringWithBlock();

    _Block_release(v17);
    swift_beginAccess();
    uint64_t v18 = *(void *)(v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v19 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji;
    *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_20B919F94(*(void *)(v18 + 16));
    uint64_t v20 = v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x21053B1C0](v20))
    {
      if (*(void *)(*(void *)(v0 + v19) + 16))
      {
        uint64_t v21 = *(void *)(v20 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, ObjectType, v21);
      }
      swift_unknownObjectRelease();
    }
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id EmojiEditingInputViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiEditingInputViewController.init(nibName:bundle:)()
{
}

id EmojiEditingInputViewController.__deallocating_deinit()
{
  return sub_20B91AEA0(0, type metadata accessor for EmojiEditingInputViewController);
}

id sub_20B91AEA0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_20B91AFA8(uint64_t result, unsigned char **a2)
{
  id v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_20B91AFB8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void *sub_20B91AFF4(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __srCGFloat c = (void *)sub_20B926DA8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

unsigned char **sub_20B91B098(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  unsigned char *v4 = a4;
  *id result = v4 + 1;
  return result;
}

uint64_t sub_20B91B0A8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20B91B0D0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_20B91B148(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_20B926BC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_20B91B148(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_20B91B21C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_20B91BEA0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_20B91BEA0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_20B91B21C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20B926BD8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_20B91B3D8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_20B926CB8();
  if (!v8)
  {
    sub_20B926D38();
    __break(1u);
LABEL_17:
    uint64_t result = sub_20B926DA8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_20B91B3D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_20B91B470(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_20B91B650(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_20B91B650(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20B91B470(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_20B91B5E8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_20B926C58();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_20B926D38();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_20B926A28();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_20B926DA8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_20B926D38();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_20B91B5E8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FC0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_20B91B650(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FC0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B91B7A0(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x21053A2C0](v7, v9, a2 & 1, v5);
  uint64_t *v2 = result;
  return result;
}

uint64_t sub_20B91B860()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B91B898()
{
  return sub_20B919C70(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_20B91B8B8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B91B8F0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B91B928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20B920728(a1, a2, a3, a4, v4);
}

uint64_t sub_20B91B930@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21053B1C0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_20B91B98C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of EmojiEditingInputViewControllerDelegate.didUpdateDesiredHeight(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EmojiEditingInputViewControllerDelegate.didUpdateWithEmoji(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EmojiEditingInputViewControllerDelegate.didTapCloseButton(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_20B91BA2C()
{
  return type metadata accessor for EmojiEditingInputViewController();
}

uint64_t sub_20B91BA34()
{
  uint64_t result = sub_20B9267F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for EmojiEditingInputViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiEditingInputViewController);
}

uint64_t dispatch thunk of EmojiEditingInputViewController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.__allocating_init(emoji:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.cleanupKeyboardResources()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.height(forOrientation:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.updateForEditingEmoji(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.textField(_:shouldChangeCharactersIn:replacementString:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

void sub_20B91BC90()
{
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_navBar;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829A0]), sel_init);
  sub_20B9267E8();
  uint64_t v2 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField;
  type metadata accessor for NoKeyboardTextField();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_keyboardVC;
  *(void *)&v0[v4] = objc_msgSend(self, sel_createKeyboardViewController);
  *(void *)&v0[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_20B926D48();
  __break(1u);
}

uint64_t sub_20B91BDD4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = result;
  uint64_t result = sub_20B9269D8();
  if (__OFSUB__(result, v1))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_20B9269F8();
  return sub_20B926A58();
}

uint64_t sub_20B91BEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20B91BF14(double a1, double a2)
{
  sub_20B9018B8((char *)(v2 + 32));
  *(void *)(v2 + 40) = 0x4075E00000000000;
  *(_OWORD *)(v2 + 48) = xmmword_20B92B4E0;
  *(unsigned char *)(v2 + 64) = 1;
  *(_OWORD *)(v2 + 72) = xmmword_20B92B4F0;
  *(_OWORD *)(v2 + 88) = xmmword_20B92B500;
  *(_OWORD *)(v2 + 104) = xmmword_20B92B510;
  *(_OWORD *)(v2 + 120) = xmmword_20B92B520;
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  return v2;
}

double sub_20B91BF98()
{
  if ((*(unsigned char *)(v0 + 64) & 1) == 0) {
    return *(double *)(v0 + 56);
  }
  sub_20B9018B8(&v2);
  double result = dbl_20B92C1B0[v2];
  *(double *)(v0 + 56) = result;
  *(unsigned char *)(v0 + 64) = 0;
  return result;
}

void sub_20B91BFE4(uint64_t a1, double a2, double a3)
{
  double v6 = (double)a1;
  double v7 = (double)a1 / 399.0 * sub_20B91BF98() + 0.0;
  sub_20B91C324(-0.29);
  sub_20B91C46C(v8, v7, 0.0, *(double *)(v3 + 56));
  double v10 = v9;
  swift_bridgeObjectRelease();
  double v11 = (v6 / 400.0 * 60.0 + 0.0) * a3 + (1.0 - a2) * (v6 / 400.0 * 30.0 + 0.0) + v10 + 0.0;
  double v12 = 2.0;
  if (!*(unsigned char *)(v3 + 32)) {
    double v12 = 3.0;
  }
  double v13 = *(double *)(v3 + 16) * 0.5;
  double v14 = v13 + v11 / v12;
  if (v6 * -29.135 != 0.0)
  {
    long double v15 = atan2(*(double *)(v3 + 24) * 0.5 - *(double *)(v3 + 24) * 0.5, v14 - v13);
    __sincos_stret(fabs(v6 * -29.135) * 0.0174532925 + v15);
  }
}

uint64_t sub_20B91C144(uint64_t a1)
{
  double v2 = (double)a1 / 399.0 * 0.83 + -0.07;
  sub_20B91C324(-0.15);
  sub_20B91C46C(v3, v2, 0.0, 0.76);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(399, a1)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_20B91C2F0()
{
  return MEMORY[0x270FA0228](v0, 136, 7);
}

uint64_t type metadata accessor for NewSpiralLayoutProvider()
{
  return self;
}

float sub_20B91C324(double a1)
{
  if (a1 != 0.0)
  {
    double v1 = 1.0 / (a1 + a1);
    if (a1 > 1.0) {
      double v1 = 0.5;
    }
    BOOL v2 = a1 > -1.0;
    double v3 = -0.5;
    if (v2) {
      double v3 = v1;
    }
    double v4 = v3 + 0.5;
    double v5 = 0.5 - v3;
    double v6 = 0.0 - (0.5 - v3);
    double v7 = 1.0 - (v3 + 0.5);
    double v8 = 1.0 - (0.5 - v3);
    double v9 = (0.0 - v4) * (0.0 - v4) + v6 * v6;
    double v10 = v6 * v8 + (0.0 - v4) * v7 + v9;
    double v11 = (sqrt((v9 + v9) * v10) - v10) * 4.0 / 3.0 / ((0.0 - v4) * v8 - v6 * v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34B0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_20B9294F0;
    *(float *)&a1 = v4 + 0.0 - v4 - v6 * v11;
    float v13 = v5 + v6 + (0.0 - v4) * v11;
    *(_DWORD *)(v12 + 32) = LODWORD(a1);
    *(float *)(v12 + 36) = v13;
    *(float *)&a1 = v4 + v7 + v8 * v11;
    float v14 = v5 + v8 - v7 * v11;
    *(_DWORD *)(v12 + 40) = LODWORD(a1);
    *(float *)(v12 + 44) = v14;
  }
  return *(float *)&a1;
}

void sub_20B91C46C(uint64_t a1, double a2, double a3, double a4)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v4 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 != 3)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    int v6 = *(_DWORD *)(a1 + 36);
    double v7 = (a2 - a3) / (a4 - a3) + 0.0;
    int v8 = *(_DWORD *)(a1 + 40);
    int v9 = *(_DWORD *)(a1 + 44);
    id v10 = objc_allocWithZone(MEMORY[0x263F15808]);
    LODWORD(v11) = v5;
    LODWORD(v12) = v6;
    LODWORD(v13) = v8;
    LODWORD(v14) = v9;
    id v15 = objc_msgSend(v10, sel_initWithControlPoints__::, v11, v12, v13, v14);
    *(float *)&double v16 = v7;
    objc_msgSend(v15, sel__solveForInput_, v16);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_20B91C544(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  double v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  double v3 = sub_20B908FA4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 7) && v9 < a1 + 32 + (v2 << 7)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    CGColorRef v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

uint64_t sub_20B91C698()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for BackgroundSuggestionsProvider();
    swift_allocObject();
    uint64_t v1 = sub_20B921870();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t ConfigurationProvider.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t ConfigurationProvider.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  return result;
}

void sub_20B91C740(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  v14[1] = *MEMORY[0x263EF8340];
  char v4 = *a1;
  char v5 = *a2;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.501960784, 0.776470588, 0.631372549, 1.0);
  uint64_t v13 = 0;
  v14[0] = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  objc_msgSend(v6, sel_getRed_green_blue_alpha_, v14, &v13, &v12, &v11);
  uint64_t v8 = v13;
  uint64_t v7 = v14[0];
  uint64_t v10 = v11;
  uint64_t v9 = v12;

  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v7;
  *(void *)(a3 + 32) = v8;
  *(void *)(a3 + 40) = v9;
  *(void *)(a3 + 48) = v10;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_WORD *)(a3 + 104) = 0;
  *(unsigned char *)(a3 + 106) = v4;
  *(unsigned char *)(a3 + 107) = v5;
  *(void *)(a3 + 112) = &unk_26C066BD8;
  *(unsigned char *)(a3 + 120) = 0;
}

double sub_20B91C85C@<D0>(_OWORD *a1@<X8>)
{
  v7[0] = 0;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  __int16 v13 = 257;
  __int16 v6 = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0, 0, v7, (char *)&v6 + 1, (char *)&v6, (unint64_t)&unk_26C066C28, 0, (uint64_t)v14);
  long long v2 = v18;
  a1[4] = v17;
  a1[5] = v2;
  a1[6] = v19[0];
  *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)((char *)v19 + 9);
  long long v3 = v14[1];
  *a1 = v14[0];
  a1[1] = v3;
  double result = *(double *)&v15;
  long long v5 = v16;
  a1[2] = v15;
  a1[3] = v5;
  return result;
}

uint64_t sub_20B91C908()
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA3498);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B92C200;
  if (qword_26ACA36D0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26ACA65F8;
  long long v2 = (void *)sub_20B926908();
  long long v3 = self;
  id v4 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v2, v1, 0);

  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v4, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v5 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v5;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6F6C436568546E69, 0xEB00000000736475, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066C58, 0, v0 + 32);
  id v6 = (id)qword_26ACA65F8;
  uint64_t v7 = (void *)sub_20B926908();
  id v8 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v7, v6, 0);

  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v8, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v9 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v9;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6568547265646E75, 0xEB00000000616553, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066CD8, 0, v0 + 160);
  id v10 = (id)qword_26ACA65F8;
  long long v11 = (void *)sub_20B926908();
  id v12 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v12, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v13 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v13;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x737265776F6C66, 0xE700000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066D48, 0, v0 + 288);
  id v14 = (id)qword_26ACA65F8;
  long long v15 = (void *)sub_20B926908();
  id v16 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v15, v14, 0);

  if (!v16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v16, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v17 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v17;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x7963697073, 0xE500000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066D98, 0, v0 + 416);
  id v18 = (id)qword_26ACA65F8;
  uint64_t v19 = (void *)sub_20B926908();
  id v20 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v19, v18, 0);

  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v20, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v21 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v21;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 2;
  LOBYTE(v52) = 1;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x7379656C696D73, 0xE700000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066DE8, 0, v0 + 544);
  id v22 = (id)qword_26ACA65F8;
  id v23 = (void *)sub_20B926908();
  id v24 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v23, v22, 0);

  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v24, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v25 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v25;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0xD000000000000010, 0x800000020B92EB70, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066E28, 0, v0 + 672);
  id v26 = (id)qword_26ACA65F8;
  double v27 = (void *)sub_20B926908();
  id v28 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v27, v26, 0);

  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v28, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v29 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v29;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x65727574616ELL, 0xE600000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066EA8, 0, v0 + 800);
  id v30 = (id)qword_26ACA65F8;
  uint64_t v31 = (void *)sub_20B926908();
  id v32 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v31, v30, 0);

  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v32, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v33 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v33;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(1685024614, 0xE400000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066F08, 0, v0 + 928);
  id v34 = (id)qword_26ACA65F8;
  id v35 = (void *)sub_20B926908();
  id v36 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v35, v34, 0);

  if (!v36)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v36, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v37 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v37;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6D696E616D726166, 0xEB00000000736C61, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066F58, 0, v0 + 1056);
  id v38 = (id)qword_26ACA65F8;
  uint64_t v39 = (void *)sub_20B926908();
  id v40 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v39, v38, 0);

  if (!v40)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v40, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v41 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v41;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x755365636966666FLL, 0xEE007365696C7070, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C066FA8, 0, v0 + 1184);
  id v42 = (id)qword_26ACA65F8;
  uint64_t v43 = (void *)sub_20B926908();
  id v44 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v43, v42, 0);

  if (!v44)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v44, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v45 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v45;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 1;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x63696E616863656DLL, 0xE800000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C067008, 0, v0 + 1312);
  id v46 = (id)qword_26ACA65F8;
  char v47 = (void *)sub_20B926908();
  id v48 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v47, v46, 0);

  if (!v48) {
    goto LABEL_27;
  }
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  objc_msgSend(v48, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  uint64_t v49 = v54;
  LOBYTE(v54) = 0;
  uint64_t v55 = v49;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  __int16 v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6563617073, 0xE500000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_26C067058, 0, v0 + 1440);
  return v0;
}

double sub_20B91D530()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA34A0);
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_20B92C210;
  *(_OWORD *)(v0 + 32) = 0u;
  *(unsigned char *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 56) = xmmword_20B92C220;
  *(_OWORD *)(v0 + 72) = xmmword_20B92C230;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_DWORD *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = &unk_26C0670B8;
  *(unsigned char *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = 5;
  *(_OWORD *)(v0 + 168) = 0u;
  *(unsigned char *)(v0 + 184) = 0;
  *(_OWORD *)(v0 + 192) = xmmword_20B92C240;
  *(_OWORD *)(v0 + 208) = xmmword_20B92C250;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_DWORD *)(v0 + 272) = 0;
  *(void *)(v0 + 280) = &unk_26C067128;
  *(unsigned char *)(v0 + 288) = 0;
  *(void *)(v0 + 296) = 7;
  *(_OWORD *)(v0 + 304) = 0u;
  *(unsigned char *)(v0 + 320) = 0;
  *(void *)(v0 + 328) = 0x3FBE1E1E1E1E1E1ELL;
  *(_OWORD *)(v0 + 336) = xmmword_20B92C260;
  *(void *)(v0 + 352) = 0x3FF0000000000000;
  *(_OWORD *)(v0 + 360) = 0u;
  *(_OWORD *)(v0 + 376) = 0u;
  *(_OWORD *)(v0 + 392) = 0u;
  *(_DWORD *)(v0 + 408) = 0;
  *(void *)(v0 + 416) = &unk_26C067188;
  *(unsigned char *)(v0 + 424) = 0;
  *(void *)(v0 + 432) = 2;
  *(_OWORD *)(v0 + 440) = 0u;
  *(unsigned char *)(v0 + 456) = 0;
  *(_OWORD *)(v0 + 464) = xmmword_20B92C270;
  *(_OWORD *)(v0 + 480) = xmmword_20B92C280;
  *(_DWORD *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 512) = 0u;
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  *(void *)(v0 + 552) = &unk_26C0671C8;
  *(unsigned char *)(v0 + 560) = 0;
  *(void *)(v0 + 568) = 4;
  *(unsigned char *)(v0 + 592) = 0;
  *(_OWORD *)(v0 + 576) = 0u;
  *(void *)(v0 + 600) = 0x3FEE5E5E5E5E5E5ELL;
  *(_OWORD *)(v0 + 608) = xmmword_20B92C290;
  *(void *)(v0 + 624) = 0x3FF0000000000000;
  *(_OWORD *)(v0 + 632) = 0u;
  *(_OWORD *)(v0 + 648) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  *(_DWORD *)(v0 + 680) = 0;
  *(void *)(v0 + 688) = &unk_26C067218;
  *(unsigned char *)(v0 + 696) = 0;
  *(void *)(v0 + 704) = 6;
  *(unsigned char *)(v0 + 728) = 0;
  *(_OWORD *)(v0 + 712) = 0u;
  *(int64x2_t *)(v0 + 736) = vdupq_n_s64(0x3FEB5B5B5B5B5B5BuLL);
  *(_OWORD *)(v0 + 752) = xmmword_20B92C2A0;
  *(_DWORD *)(v0 + 815) = 0;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_OWORD *)(v0 + 768) = 0u;
  *(unsigned char *)(v0 + 819) = 2;
  *(void *)(v0 + 824) = &unk_26C067268;
  *(unsigned char *)(v0 + 832) = 0;
  *(void *)(v0 + 840) = 8;
  *(unsigned char *)(v0 + 864) = 0;
  *(_OWORD *)(v0 + 848) = 0u;
  *(void *)(v0 + 872) = 0x3FE9393939393939;
  *(_OWORD *)(v0 + 880) = xmmword_20B92C2B0;
  *(void *)(v0 + 896) = 0x3FF0000000000000;
  *(_DWORD *)(v0 + 952) = 0;
  *(_OWORD *)(v0 + 920) = 0u;
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 904) = 0u;
  *(void *)(v0 + 960) = &unk_26C0672B8;
  *(unsigned char *)(v0 + 968) = 0;
  *(void *)(v0 + 976) = 9;
  *(unsigned char *)(v0 + 1000) = 0;
  *(_OWORD *)(v0 + 984) = 0u;
  *(int64x2_t *)(v0 + 1008) = vdupq_n_s64(0x3FCA9A9A9A9A9A9BuLL);
  *(_OWORD *)(v0 + 1024) = xmmword_20B92C2C0;
  *(_DWORD *)(v0 + 1087) = 0;
  *(_OWORD *)(v0 + 1072) = 0u;
  *(_OWORD *)(v0 + 1056) = 0u;
  *(_OWORD *)(v0 + 1040) = 0u;
  *(unsigned char *)(v0 + 1091) = 2;
  *(void *)(v0 + 1096) = &unk_26C067308;
  *(unsigned char *)(v0 + 1104) = 0;
  *(void *)(v0 + 1112) = 3;
  return result;
}

void *sub_20B91D7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  sub_20B91C698();
  uint64_t v67 = a1;
  sub_20B921AD8(a1, a2);
  uint64_t v5 = v4;
  swift_release();
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = &unk_20B929000;
  uint64_t v62 = a2;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      return v33;
    }
    goto LABEL_20;
  }
  uint64_t v8 = 0;
  id v65 = (void *)MEMORY[0x263F8EE78];
  uint64_t v66 = v6 - 1;
  for (i = v5; ; uint64_t v5 = i)
  {
    uint64_t v63 = v8;
    char v70 = *(unsigned char *)(v5 + v8 + 32);
    uint64_t v9 = *(void *)(v5 + v8 + 40);
    uint64_t v10 = *(void *)(v5 + v8 + 48);
    uint64_t v11 = *(void *)(v5 + v8 + 56);
    uint64_t v12 = *(void *)(v5 + v8 + 64);
    uint64_t v14 = *(void *)(v5 + v8 + 72);
    uint64_t v13 = *(void *)(v5 + v8 + 80);
    uint64_t v15 = *(void *)(v5 + v8 + 88);
    uint64_t v16 = *(void *)(v5 + v8 + 96);
    uint64_t v18 = *(void *)(v5 + v8 + 104);
    uint64_t v17 = *(void *)(v5 + v8 + 112);
    char v19 = *(unsigned char *)(v5 + v8 + 120);
    int v20 = *(unsigned __int8 *)(v5 + v8 + 121);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F98);
    unint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_20B9294E0;
    *(void *)(v21 + 32) = v67;
    *(void *)(v21 + 40) = a2;
    sub_20B8E7644(v14, v13, v15, v16, v18);
    uint64_t v64 = v14;
    uint64_t v22 = v14;
    uint64_t v23 = v13;
    uint64_t v69 = v16;
    uint64_t v24 = v16;
    uint64_t v25 = v18;
    uint64_t v72 = v17;
    sub_20B8E7644(v22, v13, v15, v24, v18);
    swift_bridgeObjectRetain();
    uint64_t v26 = v9;
    uint64_t v27 = v10;
    uint64_t v28 = v11;
    uint64_t v29 = v12;
    char v68 = v19;
    char v30 = v19;
    int v71 = v20;
    if (v20 == 1)
    {
      id v31 = _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(v21);
      uint64_t v26 = v9;
      uint64_t v27 = v10;
      uint64_t v28 = v11;
      uint64_t v29 = v12;
      char v30 = v19;
      if (v31)
      {
        id v32 = v31;
        uint64_t v76 = 0;
        uint64_t v77 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        objc_msgSend(v31, sel_getRed_green_blue_alpha_, &v77, &v76, &v75, &v74);

        uint64_t v27 = v76;
        uint64_t v26 = v77;
        uint64_t v29 = v74;
        uint64_t v28 = v75;
        char v30 = 1;
      }
    }
    uint64_t v33 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v33 = sub_20B908FA4(0, v65[2] + 1, 1, v65);
    }
    unint64_t v35 = v33[2];
    unint64_t v34 = v33[3];
    if (v35 >= v34 >> 1) {
      uint64_t v33 = sub_20B908FA4((void *)(v34 > 1), v35 + 1, 1, v33);
    }
    CGColorRef v33[2] = v35 + 1;
    id v36 = &v33[16 * v35];
    v36[4] = 0;
    void v36[5] = 0;
    *((unsigned char *)v36 + 48) = v70;
    int v37 = *(_DWORD *)v78;
    *((_DWORD *)v36 + 13) = *(_DWORD *)&v78[3];
    *(_DWORD *)((char *)v36 + 49) = v37;
    v36[7] = v26;
    v36[8] = v27;
    v36[9] = v28;
    v36[10] = v29;
    v36[11] = v64;
    v36[12] = v23;
    v36[13] = v15;
    v36[14] = v69;
    v36[15] = v25;
    unsigned char v36[16] = v72;
    *((unsigned char *)v36 + 136) = v30;
    *((unsigned char *)v36 + 137) = v71;
    *((_WORD *)v36 + 69) = 258;
    v36[18] = v21;
    *((unsigned char *)v36 + 152) = 0;
    unint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_20B9294E0;
    a2 = v62;
    *(void *)(v38 + 32) = v67;
    *(void *)(v38 + 40) = v62;
    swift_bridgeObjectRetain();
    if (v71)
    {
      id v39 = _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(v38);
      if (v39)
      {
        id v40 = v39;
        uint64_t v76 = 0;
        uint64_t v77 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        objc_msgSend(v39, sel_getRed_green_blue_alpha_, &v77, &v76, &v75, &v74);

        uint64_t v10 = v76;
        uint64_t v9 = v77;
        uint64_t v12 = v74;
        uint64_t v11 = v75;
        char v68 = 1;
      }
    }
    unint64_t v42 = v33[2];
    unint64_t v41 = v33[3];
    if (v42 >= v41 >> 1) {
      uint64_t v33 = sub_20B908FA4((void *)(v41 > 1), v42 + 1, 1, v33);
    }
    CGColorRef v33[2] = v42 + 1;
    uint64_t v43 = &v33[16 * v42];
    v43[4] = 0;
    v43[5] = 0;
    *((unsigned char *)v43 + 48) = v70;
    int v44 = v77;
    *((_DWORD *)v43 + 13) = *(_DWORD *)((char *)&v77 + 3);
    *(_DWORD *)((char *)v43 + 49) = v44;
    v43[7] = v9;
    v43[8] = v10;
    v43[9] = v11;
    v43[10] = v12;
    v43[11] = v64;
    v43[12] = v23;
    v43[13] = v15;
    v43[14] = v69;
    v43[15] = v25;
    v43[16] = v72;
    *((unsigned char *)v43 + 136) = v68;
    *((unsigned char *)v43 + 137) = v71;
    *((_WORD *)v43 + 69) = 256;
    v43[18] = v38;
    *((unsigned char *)v43 + 152) = 0;
    if (!v66) {
      break;
    }
    id v65 = v33;
    --v66;
    uint64_t v8 = v63 + 96;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)&unk_20B929000;
  if (!v33[2])
  {
LABEL_20:
    id v45 = objc_msgSend(self, sel_grayColor);
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v74 = 0;
    uint64_t v75 = 0;
    objc_msgSend(v45, sel_getRed_green_blue_alpha_, &v77, &v76, &v75, &v74);
    uint64_t v47 = v76;
    uint64_t v46 = v77;
    uint64_t v49 = v74;
    uint64_t v48 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2F98);
    uint64_t v50 = swift_allocObject();
    long long v73 = v7[78];
    *(_OWORD *)(v50 + 16) = v73;
    *(void *)(v50 + 32) = v67;
    *(void *)(v50 + 40) = a2;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v33 = sub_20B908FA4(0, v33[2] + 1, 1, v33);
    }
    unint64_t v52 = v33[2];
    unint64_t v51 = v33[3];
    if (v52 >= v51 >> 1) {
      uint64_t v33 = sub_20B908FA4((void *)(v51 > 1), v52 + 1, 1, v33);
    }
    CGColorRef v33[2] = v52 + 1;
    uint64_t v53 = &v33[16 * v52];
    v53[4] = 0;
    v53[5] = 0;
    *((unsigned char *)v53 + 48) = 0;
    int v54 = *(_DWORD *)((char *)&v77 + 3);
    *(_DWORD *)((char *)v53 + 49) = v77;
    *((_DWORD *)v53 + 13) = v54;
    v53[7] = v46;
    v53[8] = v47;
    v53[9] = v48;
    v53[10] = v49;
    *(_OWORD *)(v53 + 11) = 0u;
    *(_OWORD *)(v53 + 13) = 0u;
    *(_OWORD *)(v53 + 15) = 0u;
    *((_WORD *)v53 + 68) = 0;
    *((_WORD *)v53 + 69) = 258;
    v53[18] = v50;
    *((unsigned char *)v53 + 152) = 0;
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v73;
    *(void *)(v55 + 32) = v67;
    *(void *)(v55 + 40) = v62;
    unint64_t v56 = v33[2];
    unint64_t v57 = v33[3];
    swift_bridgeObjectRetain();
    if (v56 >= v57 >> 1) {
      uint64_t v33 = sub_20B908FA4((void *)(v57 > 1), v56 + 1, 1, v33);
    }
    CGColorRef v33[2] = v56 + 1;
    uint64_t v58 = &v33[16 * v56];
    v58[4] = 0;
    v58[5] = 0;
    *((unsigned char *)v58 + 48) = 0;
    int v59 = *(_DWORD *)((char *)&v76 + 3);
    *(_DWORD *)((char *)v58 + 49) = v76;
    *((_DWORD *)v58 + 13) = v59;
    v58[7] = v46;
    v58[8] = v47;
    v58[9] = v48;
    v58[10] = v49;
    *(_OWORD *)(v58 + 11) = 0u;
    *(_OWORD *)(v58 + 13) = 0u;
    *(_OWORD *)(v58 + 15) = 0u;
    *(_DWORD *)((char *)v58 + 135) = 0;
    *((unsigned char *)v58 + 139) = 1;
    v58[18] = v55;
    *((unsigned char *)v58 + 152) = 0;
  }
  return v33;
}

uint64_t sub_20B91DE00()
{
  uint64_t v3 = v0;
  uint64_t v4 = *(void **)(v0 + 24);
  if (v4) {
    goto LABEL_3;
  }
  sub_20B926948();
  id v5 = objc_allocWithZone(MEMORY[0x263F3B500]);
  uint64_t v6 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithMachName_, v6);

  uint64_t v8 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v7;

  uint64_t v4 = *(void **)(v3 + 24);
  if (!v4) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  uint64_t v36 = MEMORY[0x263F8EE78];
  id v9 = v4;
  objc_msgSend(v9, sel_readEmojiDefaults);
  id v10 = objc_msgSend(v9, sel_recentEmojis);
  uint64_t v11 = sub_20B91E694();
  unint64_t i = sub_20B926A98();

  if (i >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v1 > 15) {
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_20B926D58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_20B926D58();
    uint64_t result = swift_bridgeObjectRelease();
    if (v32 < 0)
    {
      __break(1u);
      return result;
    }
    if (v1 >= 15) {
      uint64_t v33 = 15;
    }
    else {
      uint64_t v33 = v1;
    }
    if (v1 >= 0) {
      unint64_t v2 = v33;
    }
    else {
      unint64_t v2 = 15;
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v34 < (uint64_t)v2)
    {
      __break(1u);
      goto LABEL_44;
    }
  }
  else
  {
    unint64_t v2 = *(void *)((i & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2 > 0xF) {
      goto LABEL_23;
    }
  }
  if ((i & 0xC000000000000001) != 0 && v2 != 0)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = v14 + 1;
      sub_20B926C68();
      uint64_t v14 = v15;
    }
    while (v2 != v15);
  }
  if (i >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_20B926D68();
    uint64_t v1 = v17;
    uint64_t v16 = v18;
    unint64_t v2 = v19;
    swift_bridgeObjectRelease_n();
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v11 = i & 0xFFFFFFFFFFFFFF8;
    uint64_t v1 = (i & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v2 = (2 * v2) | 1;
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
  }
  sub_20B926F08();
  swift_unknownObjectRetain_n();
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_unknownObjectRelease();
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  uint64_t v21 = *(void *)(v20 + 16);
  swift_release();
  if (__OFSUB__(v2 >> 1, v16)) {
    goto LABEL_52;
  }
  if (v21 != (v2 >> 1) - v16) {
    goto LABEL_53;
  }
  unint64_t i = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (i) {
    goto LABEL_23;
  }
  for (unint64_t i = MEMORY[0x263F8EE78]; ; unint64_t i = sub_20B91E378(v11, v1, v16, v2))
  {
    swift_unknownObjectRelease();
LABEL_23:
    if (i >> 62)
    {
LABEL_44:
      if ((i & 0x8000000000000000) != 0) {
        uint64_t v11 = i;
      }
      else {
        uint64_t v11 = i & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_20B926D58();
      swift_bridgeObjectRelease();
      if (!v16)
      {
LABEL_48:

        swift_bridgeObjectRelease();
        return MEMORY[0x263F8EE78];
      }
    }
    else
    {
      uint64_t v16 = *(void *)((i & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v16) {
        goto LABEL_48;
      }
    }
    if (v16 >= 1) {
      break;
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    swift_unknownObjectRelease();
LABEL_15:
    ;
  }
  unint64_t v35 = v9;
  for (uint64_t j = 0; j != v16; ++j)
  {
    if ((i & 0xC000000000000001) != 0) {
      id v23 = (id)MEMORY[0x21053A2B0](j, i);
    }
    else {
      id v23 = *(id *)(i + 8 * j + 32);
    }
    uint64_t v24 = v23;
    id v25 = objc_msgSend(v23, sel_string, v35);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_20B926948();
      uint64_t v29 = v28;

      char v30 = sub_20B91D7E8(v27, v29);
      swift_bridgeObjectRelease();
      sub_20B91C544((uint64_t)v30);
    }
  }
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t ConfigurationProvider.deinit()
{
  swift_release();

  return v0;
}

uint64_t ConfigurationProvider.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t sub_20B91E290(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA36D8);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 5);
  uint64_t v6 = sub_20B91E4FC(&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_20B917EAC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_20B91E378(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      id v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_20B91E694();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACA2FD0);
      id v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_20B926DA8();
  __break(1u);
  return result;
}

void *sub_20B91E4FC(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = (_OWORD *)(*(void *)(a4 + 48) + 32 * v12);
    long long v14 = v13[1];
    *a2 = *v13;
    a2[1] = v14;
    a2 += 2;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v15;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    int64_t v15 = v8;
LABEL_19:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v12 = v18 + (v15 << 6);
    int64_t v8 = v15;
    goto LABEL_8;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v15 = v17;
    goto LABEL_19;
  }
  int64_t v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v15 + 2;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v8);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_20B91E694()
{
  unint64_t result = qword_2676A5EF8;
  if (!qword_2676A5EF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2676A5EF8);
  }
  return result;
}

uint64_t type metadata accessor for ConfigurationProvider()
{
  return self;
}

uint64_t method lookup function for ConfigurationProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ConfigurationProvider);
}

uint64_t dispatch thunk of ConfigurationProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ConfigurationProvider.testSpecConfiguration(withStyle:sizeVariant:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ConfigurationProvider.heroConfiguration()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ConfigurationProvider.stockConfigurations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ConfigurationProvider.configurationsForFocus()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ConfigurationProvider.configurationsForEmoji(emoji:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ConfigurationProvider.configurationsFromEmojiPreferences()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_20B91E7FC()
{
  return 0;
}

uint64_t sub_20B91E8E0()
{
  return sub_20B91E7FC();
}

uint64_t sub_20B91E8EC()
{
  return 0;
}

id sub_20B91EA1C()
{
  type metadata accessor for GridLayoutProvider();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26ACA2E98 = (uint64_t)result;
  return result;
}

uint64_t sub_20B91EA70(uint64_t a1)
{
  return sub_20B91EADC(a1, 0xD000000000000013, 0x800000020B92ECD0, &qword_26ACA2B30);
}

uint64_t sub_20B91EA94(uint64_t a1)
{
  return sub_20B91EADC(a1, 0xD000000000000014, 0x800000020B92ECF0, &qword_26ACA3868);
}

uint64_t sub_20B91EAB8(uint64_t a1)
{
  return sub_20B91EADC(a1, 0xD000000000000013, 0x800000020B92ED10, &qword_26ACA3858);
}

uint64_t sub_20B91EADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (qword_26ACA2EA0 != -1) {
    swift_once();
  }
  unint64_t v7 = (void *)qword_26ACA2E98;
  type metadata accessor for EmojiPatternParser();
  swift_allocObject();
  uint64_t result = sub_20B904F50(a2, a3, (char *)v7);
  *a4 = result;
  return result;
}

double sub_20B91EB80()
{
  return *((double *)*(&off_264088270 + *(char *)(v0 + 32)) + *(char *)(v0 + 48));
}

void sub_20B91EB9C()
{
  sub_20B91EB80();
  if (*(unsigned char *)(v0 + 32))
  {
    if (*(unsigned char *)(v0 + 32) == 1)
    {
      if (qword_26ACA36E8 == -1) {
        return;
      }
    }
    else if (qword_26ACA3860 == -1)
    {
      return;
    }
LABEL_8:
    swift_once();
    return;
  }
  if (qword_26ACA2B38 != -1) {
    goto LABEL_8;
  }
}

void sub_20B91ECE8()
{
  sub_20B91EB80();
  if (*(unsigned char *)(v0 + 32))
  {
    if (*(unsigned char *)(v0 + 32) == 1)
    {
      if (qword_26ACA36E8 == -1) {
        return;
      }
    }
    else if (qword_26ACA3860 == -1)
    {
      return;
    }
LABEL_8:
    swift_once();
    return;
  }
  if (qword_26ACA2B38 != -1) {
    goto LABEL_8;
  }
}

void sub_20B91EE4C(uint64_t a1@<X8>)
{
  sub_20B91EB9C();
  uint64_t v4 = v3;
  sub_20B91ECE8();
  uint64_t v6 = v5;
  int v7 = *(unsigned __int8 *)(v1 + 32);
  if (!v7)
  {
    if (qword_26ACA2B38 != -1) {
      swift_once();
    }
    int64_t v8 = &qword_26ACA2B30;
    goto LABEL_11;
  }
  if (v7 != 1)
  {
    if (qword_26ACA3860 != -1) {
      swift_once();
    }
    int64_t v8 = &qword_26ACA3858;
    goto LABEL_11;
  }
  if (qword_26ACA36E8 != -1) {
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v8 = &qword_26ACA3868;
LABEL_11:
    uint64_t v9 = *v8;
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount);
    uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount);
    if (v10 == v11) {
      break;
    }
    BOOL v12 = __OFADD__(v10, v11);
    v10 += v11;
    if (!v12) {
      break;
    }
    __break(1u);
LABEL_26:
    swift_once();
  }
  if (v7)
  {
    if (v7 == 1)
    {
      if (qword_26ACA36E8 != -1) {
        swift_once();
      }
      uint64_t v13 = &qword_26ACA3868;
    }
    else
    {
      if (qword_26ACA3860 != -1) {
        swift_once();
      }
      uint64_t v13 = &qword_26ACA3858;
    }
  }
  else
  {
    if (qword_26ACA2B38 != -1) {
      swift_once();
    }
    uint64_t v13 = &qword_26ACA2B30;
  }
  uint64_t v14 = *(void *)(*v13 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = 0;
}

void *sub_20B91F060()
{
  sub_20B91EE4C((uint64_t)v50);
  uint64_t v6 = v51 - (v51 & 1);
  if (__OFSUB__(v51, v51 & 1)) {
    goto LABEL_103;
  }
  uint64_t v0 = (void *)(v52 - (v52 & 1));
  if (__OFSUB__(v52, v52 & 1))
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  double v4 = *(double *)(v49 + 16);
  double v5 = *(double *)(v49 + 24);
  double v2 = v50[0];
  double v45 = v50[1];
  int v1 = *(unsigned __int8 *)(v49 + 32);
  if (*(unsigned char *)(v49 + 32)) {
    double v3 = 0.0;
  }
  else {
    double v3 = v50[0];
  }
  if (!*(unsigned char *)(v49 + 32))
  {
    if (qword_26ACA2B38 != -1) {
      swift_once();
    }
    int v7 = &qword_26ACA2B30;
    goto LABEL_16;
  }
  if (v1 != 1)
  {
    if (qword_26ACA3860 != -1) {
      swift_once();
    }
    int v7 = &qword_26ACA3858;
    goto LABEL_16;
  }
  if (qword_26ACA36E8 != -1) {
    goto LABEL_110;
  }
  while (1)
  {
    int v7 = &qword_26ACA3868;
LABEL_16:
    uint64_t v8 = *v7 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_patterns;
    swift_beginAccess();
    uint64_t v9 = *(void *)(v49 + 40);
    BOOL v10 = __OFSUB__(v9, 1);
    unint64_t v11 = v9 - 1;
    if (v10)
    {
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    if ((v11 & 0x8000000000000000) != 0) {
      goto LABEL_106;
    }
    if (v11 >= *(void *)(*(void *)v8 + 16)) {
      goto LABEL_107;
    }
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_20B91FB8C();
    swift_bridgeObjectRelease();
    if (v1)
    {
      if (v1 == 1)
      {
        if (qword_26ACA36E8 != -1) {
          swift_once();
        }
        BOOL v12 = &qword_26ACA3868;
      }
      else
      {
        if (qword_26ACA3860 != -1) {
          swift_once();
        }
        BOOL v12 = &qword_26ACA3858;
      }
    }
    else
    {
      if (qword_26ACA2B38 != -1) {
        swift_once();
      }
      BOOL v12 = &qword_26ACA2B30;
    }
    uint64_t v13 = *(void *)(*v12 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows);
    if (__OFSUB__(v13, 1)) {
      goto LABEL_108;
    }
    if (((v13 - 1) & 0x8000000000000000) == 0) {
      break;
    }
LABEL_109:
    __break(1u);
LABEL_110:
    swift_once();
  }
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  double v16 = (v5 - v45 * (double)(uint64_t)v0) * 0.5;
  double v3 = (v4 - v2 * (double)v6) * 0.5 - v3;
  char v47 = v53;
  if (v5 < v4) {
    double v4 = v5;
  }
  uint64_t v0 = (void *)MEMORY[0x263F8EE78];
  uint64_t v44 = v13 - 1;
LABEL_35:
  if (v1)
  {
    if (v1 == 1)
    {
      int64_t v17 = &qword_26ACA3868;
      if (qword_26ACA36E8 != -1)
      {
        swift_once();
        int64_t v17 = &qword_26ACA3868;
      }
    }
    else
    {
      int64_t v17 = &qword_26ACA3858;
      if (qword_26ACA3860 != -1)
      {
        swift_once();
        int64_t v17 = &qword_26ACA3858;
      }
    }
  }
  else
  {
    int64_t v17 = &qword_26ACA2B30;
    if (qword_26ACA2B38 != -1)
    {
      swift_once();
      int64_t v17 = &qword_26ACA2B30;
    }
  }
  uint64_t v18 = *v17;
  unint64_t v19 = &OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount;
  if (v15) {
    unint64_t v19 = &OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount;
  }
  uint64_t v20 = *(void *)(v18 + *v19);
  uint64_t v21 = v20 - 1;
  if (__OFSUB__(v20, 1)) {
    goto LABEL_100;
  }
  if (v21 < 0)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t v46 = v15;
  if (v14 >= v48[2])
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v22 = 0;
  double v23 = v16 + v45 * (double)v15;
  double v24 = v3 + v2 * (double)v15;
  id v25 = &v48[2 * v14 + 5];
  while (2)
  {
    char v26 = *((unsigned char *)v25 - 8);
    uint64_t v6 = *v25;
    if (v26)
    {
      if (v1)
      {
        if (v1 == 1)
        {
          uint64_t v27 = 0x4054400000000000;
          uint64_t v28 = 0x4052C00000000000;
          uint64_t v29 = 0x4055400000000000;
          double v30 = 60.0;
          double v5 = 393.0;
          switch(*(unsigned char *)(v49 + 48))
          {
            case 1:
              goto LABEL_60;
            case 2:
              goto LABEL_63;
            case 3:
              goto LABEL_74;
            default:
              goto LABEL_64;
          }
        }
        uint64_t v27 = 0x4057C00000000000;
        uint64_t v28 = 0x4056800000000000;
        uint64_t v29 = 0x405AE00000000000;
        double v5 = 393.0;
        double v30 = 91.6666667;
        switch(*(unsigned char *)(v49 + 48))
        {
          case 1:
            goto LABEL_60;
          case 2:
            goto LABEL_63;
          case 3:
            goto LABEL_74;
          default:
            goto LABEL_64;
        }
      }
      uint64_t v27 = 0x4054400000000000;
      uint64_t v28 = 0x4052C00000000000;
      uint64_t v29 = 0x4055800000000000;
      double v30 = 60.0;
      double v5 = 393.0;
      switch(*(unsigned char *)(v49 + 48))
      {
        case 1:
          goto LABEL_60;
        case 2:
          goto LABEL_63;
        case 3:
          goto LABEL_74;
        default:
          goto LABEL_64;
      }
    }
    if (v1)
    {
      if (v1 == 1)
      {
        uint64_t v27 = 0x4054400000000000;
        uint64_t v28 = 0x4052C00000000000;
        uint64_t v29 = 0x4055400000000000;
        double v30 = 60.0;
        double v5 = 393.0;
        switch(*(unsigned char *)(v49 + 48))
        {
          case 1:
            goto LABEL_60;
          case 2:
            goto LABEL_63;
          case 3:
            goto LABEL_74;
          default:
            goto LABEL_64;
        }
      }
      uint64_t v27 = 0x4057C00000000000;
      uint64_t v28 = 0x4056800000000000;
      uint64_t v29 = 0x405AE00000000000;
      double v5 = 393.0;
      double v30 = 91.6666667;
      switch(*(unsigned char *)(v49 + 48))
      {
        case 1:
          goto LABEL_60;
        case 2:
          goto LABEL_63;
        case 3:
          goto LABEL_74;
        default:
          goto LABEL_64;
      }
    }
    uint64_t v27 = 0x4042400000000000;
    uint64_t v28 = 0x4041800000000000;
    uint64_t v29 = 0x4044000000000000;
    double v30 = 28.3333333;
    double v5 = 393.0;
    switch(*(unsigned char *)(v49 + 48))
    {
      case 1:
LABEL_60:
        double v5 = 744.0;
        double v30 = *(double *)&v29;
        if (v1) {
          goto LABEL_65;
        }
        goto LABEL_61;
      case 2:
LABEL_63:
        double v5 = 820.0;
        double v30 = *(double *)&v28;
        goto LABEL_64;
      case 3:
LABEL_74:
        double v5 = 1000.0;
        double v30 = *(double *)&v27;
        if (!v1) {
          goto LABEL_61;
        }
        goto LABEL_65;
      default:
LABEL_64:
        if (v1)
        {
LABEL_65:
          if (v1 == 1)
          {
            id v31 = &qword_26ACA3868;
            if (qword_26ACA36E8 != -1)
            {
              swift_once();
              id v31 = &qword_26ACA3868;
            }
          }
          else
          {
            id v31 = &qword_26ACA3858;
            if (qword_26ACA3860 != -1)
            {
              swift_once();
              id v31 = &qword_26ACA3858;
            }
          }
        }
        else
        {
LABEL_61:
          id v31 = &qword_26ACA2B30;
          if (qword_26ACA2B38 != -1)
          {
            swift_once();
            id v31 = &qword_26ACA2B30;
          }
        }
        uint64_t v32 = *v31;
        uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount);
        uint64_t v34 = *(void *)(v32 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount);
        uint64_t v35 = v22;
        if (v33 == v34) {
          goto LABEL_78;
        }
        if (((v46 & 1) == 0) != v34 >= v33)
        {
          if (v22 + 0x4000000000000000 < 0) {
            goto LABEL_98;
          }
          uint64_t v35 = 2 * v22;
        }
        else
        {
          if (v22 + 0x4000000000000000 < 0) {
            goto LABEL_99;
          }
          uint64_t v35 = (2 * v22) | 1;
        }
LABEL_78:
        double v36 = v30 * (v4 / v5);
        double v5 = (double)v35;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (v47)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v0 = sub_20B908C48(0, v0[2] + 1, 1, v0);
          }
          unint64_t v42 = v0[2];
          unint64_t v41 = v0[3];
          if (v42 >= v41 >> 1) {
            uint64_t v0 = sub_20B908C48((void *)(v41 > 1), v42 + 1, 1, v0);
          }
          v0[2] = v42 + 1;
          id v40 = (double *)&v0[6 * v42];
          v40[4] = v36;
          v40[5] = v36;
          v40[6] = v24;
          v40[7] = v16 + v45 * v5;
        }
        else
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v0 = sub_20B908C48(0, v0[2] + 1, 1, v0);
          }
          unint64_t v39 = v0[2];
          unint64_t v38 = v0[3];
          if (v39 >= v38 >> 1) {
            uint64_t v0 = sub_20B908C48((void *)(v38 > 1), v39 + 1, 1, v0);
          }
          v0[2] = v39 + 1;
          id v40 = (double *)&v0[6 * v39];
          v40[4] = v36;
          v40[5] = v36;
          v40[6] = v3 + v2 * v5;
          v40[7] = v23;
        }
        *((unsigned char *)v40 + 64) = v26;
        *((void *)v40 + 9) = v6;
        if (v21 != v22)
        {
          ++v22;
          v25 += 2;
          if (v14 + v22 >= v48[2]) {
            goto LABEL_97;
          }
          continue;
        }
        if (v46 != v44)
        {
          v14 += v22 + 1;
          uint64_t v15 = v46 + 1;
          if (!__OFADD__(v46, 1)) {
            goto LABEL_35;
          }
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
          goto LABEL_104;
        }
        swift_bridgeObjectRelease();
        return v0;
    }
  }
}

uint64_t sub_20B91FA8C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 72, 7);
}

uint64_t type metadata accessor for GridLayoutProvider()
{
  return self;
}

uint64_t getEnumTagSinglePayload for GridLayoutItemAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GridLayoutItemAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GridLayoutItemAttributes()
{
  return &type metadata for GridLayoutItemAttributes;
}

void *sub_20B91FB8C()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_20B926A18();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    BOOL v4 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if (v2 == 97 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 0;
        uint64_t v6 = 0;
      }
      else if (v2 == 65 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = 0;
        char v5 = 1;
      }
      else if (v2 == 98 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 0;
        uint64_t v6 = 1;
      }
      else if (v2 == 66 && v3 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        char v5 = 1;
        uint64_t v6 = 1;
      }
      else if (sub_20B926ED8())
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = 1;
        char v5 = 1;
      }
      else if (v2 == 99 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 0;
        uint64_t v6 = 2;
      }
      else if (v2 == 67 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 1;
        uint64_t v6 = 2;
      }
      else if (v2 == 100 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 0;
        uint64_t v6 = 3;
      }
      else if (v2 == 68 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 1;
        uint64_t v6 = 3;
      }
      else if (v2 == 101 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 0;
        uint64_t v6 = 4;
      }
      else if (v2 == 69 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 1;
        uint64_t v6 = 4;
      }
      else if (v2 == 102 && v3 == 0xE100000000000000 || (sub_20B926ED8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v5 = 0;
        uint64_t v6 = 5;
      }
      else if (v2 == 70 && v3 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        char v5 = 1;
        uint64_t v6 = 5;
      }
      else
      {
        char v5 = sub_20B926ED8();
        swift_bridgeObjectRelease();
        if (v5) {
          uint64_t v6 = 5;
        }
        else {
          uint64_t v6 = 0;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v4 = sub_20B908B38(0, v4[2] + 1, 1, v4);
      }
      unint64_t v8 = v4[2];
      unint64_t v7 = v4[3];
      if (v8 >= v7 >> 1) {
        BOOL v4 = sub_20B908B38((void *)(v7 > 1), v8 + 1, 1, v4);
      }
      v4[2] = v8 + 1;
      uint64_t v9 = &v4[2 * v8];
      *((unsigned char *)v9 + 32) = v5 & 1;
      v9[5] = v6;
      uint64_t v2 = sub_20B926A18();
      uint64_t v3 = v10;
    }
    while (v10);
  }
  else
  {
    BOOL v4 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t getEnumTagSinglePayload for GridLayoutEmojiProperties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GridLayoutEmojiProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GridLayoutEmojiProperties()
{
  return &type metadata for GridLayoutEmojiProperties;
}

unsigned char *storeEnumTagSinglePayload for GridLayoutEmojiSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B92012CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GridLayoutEmojiSize()
{
  return &type metadata for GridLayoutEmojiSize;
}

unint64_t sub_20B920168()
{
  unint64_t result = qword_2676A5F00;
  if (!qword_2676A5F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676A5F00);
  }
  return result;
}

double UIColor.luminance.getter()
{
  v4[1] = *MEMORY[0x263EF8340];
  double v3 = 0.0;
  v4[0] = 0;
  double v2 = 0.0;
  objc_msgSend(v0, sel_getHue_saturation_brightness_alpha_, v4, &v3, &v2, 0);
  return v2 + v2 * v3 * -0.5;
}

Swift::Double __swiftcall Double.normalize(min:max:outMin:outMax:)(Swift::Double min, Swift::Double max, Swift::Double outMin, Swift::Double outMax)
{
  return (outMax - outMin) * ((v4 - min) / (max - min)) + outMin;
}

Swift::String __swiftcall String.emojiString()()
{
  id v0 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0xE000000000000000;
  id v4 = v2;
  objc_msgSend(v4, sel_length);
  v11[4] = sub_20B908770;
  v11[5] = v3;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_20B908778;
  uint64_t v11[3] = &block_descriptor_10;
  uint64_t v5 = _Block_copy(v11);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v5);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 16);
  unint64_t v7 = *(void **)(v3 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t sub_20B9203F4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t String.emojiArray()()
{
  id v0 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = MEMORY[0x263F8EE78];
  id v4 = v2;
  objc_msgSend(v4, sel_length);
  v8[4] = sub_20B91B928;
  v8[5] = v3;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_20B908778;
  v8[3] = &block_descriptor_6_0;
  uint64_t v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v5);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v6;
}

Swift::Bool __swiftcall String.isSingleEmoji()()
{
  id v0 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  LODWORD(v1) = CEMStringIsSingleEmoji();
  return v1 != 0;
}

void *sub_20B92064C()
{
  Swift::String result = (void *)CEMEmojiTokenGetString();
  if (result)
  {
    id v1 = result;
    sub_20B926988();
    swift_beginAccess();
    sub_20B926A08();
    swift_endAccess();

    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_20B9206F0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B920728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  String = (void *)CEMEmojiTokenGetString();
  if (String)
  {
    unint64_t v7 = (void **)(a5 + 16);
    id v8 = String;
    uint64_t v9 = sub_20B926988();
    uint64_t v11 = v10;
    swift_beginAccess();
    BOOL v12 = *v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v7 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      BOOL v12 = sub_20B908918(0, v12[2] + 1, 1, v12);
      *unint64_t v7 = v12;
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      BOOL v12 = sub_20B908918((void *)(v14 > 1), v15 + 1, 1, v12);
      *unint64_t v7 = v12;
    }
    v12[2] = v15 + 1;
    double v16 = &v12[2 * v15];
    v16[4] = v9;
    v16[5] = v11;
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

void sub_20B920830(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 16) && *(unsigned char *)(v1 + 16) == 1)
  {
    uint64_t v2 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else
    {
      long double v3 = (double)v2;
      pow((double)v2, 3.0);
      pow(v3, 4.0);
      pow(v3, 5.0);
    }
  }
}

uint64_t type metadata accessor for SpiralLayoutProvider()
{
  return self;
}

id sub_20B920958()
{
  type metadata accessor for EmojiColorPalette();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26ACA65F8 = (uint64_t)result;
  return result;
}

id static EmojiColorPalette.backgroundPalette(suggestedColor:)(uint64_t a1)
{
  unint64_t v2 = sub_20B9210BC(1);
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x263F8EE78];
    unint64_t v16 = MEMORY[0x263F8EE78];
    if (a1) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v4 = sub_20B926D58();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v16 = MEMORY[0x263F8EE78];
  sub_20B926CF8();
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x21053A2B0](v5, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5 + 32);
    }
    unint64_t v7 = v6;
    ++v5;
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F5F4C8]), sel_initWithColor_, v6);

    sub_20B926CD8();
    sub_20B926D08();
    sub_20B926D18();
    sub_20B926CE8();
  }
  while (v4 != v5);
  unint64_t v8 = v16;
  swift_bridgeObjectRelease();
  if (!a1)
  {
LABEL_13:
    id v9 = objc_msgSend(self, sel_whiteColor);
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F5F4C8]), sel_initWithColor_, v9);

    MEMORY[0x21053A0A0]();
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_14:
      sub_20B926AD8();
      sub_20B926AB8();
      unint64_t v8 = v16;
      goto LABEL_15;
    }
LABEL_23:
    sub_20B926AC8();
    goto LABEL_14;
  }
LABEL_15:
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_20B926D58();
    swift_bridgeObjectRelease();
    if (v14 >= 1) {
      goto LABEL_17;
    }
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_17:
    sub_20B920CB4(v8);
    swift_bridgeObjectRelease();
    id v10 = objc_allocWithZone(MEMORY[0x263F5F4A8]);
    uint64_t v11 = (void *)sub_20B926A78();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithColors_localizedName_showsColorWell_, v11, 0, 0);

    return v12;
  }
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_extendedPalette);
  return v15;
}

uint64_t sub_20B920CB4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_20B926D58();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20B90D948(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x21053A2B0](i, a1);
        sub_20B921830();
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20B90D948(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_20B90D948(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_20B90E6A0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      unint64_t v8 = (id *)(a1 + 32);
      sub_20B921830();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20B90D948(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_20B90D948(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_20B90E6A0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t static EmojiColorPalette.titlePalette()()
{
  unint64_t v0 = sub_20B9210BC(0);
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    unint64_t v7 = MEMORY[0x263F8EE78];
LABEL_12:
    sub_20B920CB4(v7);
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone(MEMORY[0x263F5F4A8]);
    id v9 = (void *)sub_20B926A78();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_initWithColors_localizedName_showsColorWell_, v9, 0, 0);

    return (uint64_t)v10;
  }
  uint64_t v2 = sub_20B926D58();
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20B926CF8();
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x21053A2B0](v4, v1);
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      unint64_t v6 = v5;
      ++v4;
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F5F4C8]), sel_initWithColor_, v5);

      sub_20B926CD8();
      sub_20B926D08();
      sub_20B926D18();
      sub_20B926CE8();
    }
    while (v2 != v4);
    unint64_t v7 = v11;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t EmojiColorPalette.deinit()
{
  return v0;
}

uint64_t EmojiColorPalette.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_20B9210BC(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5F10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20B92C5A0;
  if (qword_26ACA36D0 != -1) {
    swift_once();
  }
  id v3 = (id)qword_26ACA65F8;
  uint64_t v4 = (void *)sub_20B926908();
  id v5 = self;
  id v6 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  *(void *)(v2 + 32) = v6;
  id v7 = (id)qword_26ACA65F8;
  id v8 = (void *)sub_20B926908();
  id v9 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v8, v7, 0);

  *(void *)(v2 + 40) = v9;
  id v10 = (id)qword_26ACA65F8;
  unint64_t v11 = (void *)sub_20B926908();
  id v12 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

  *(void *)(v2 + 48) = v12;
  id v13 = (id)qword_26ACA65F8;
  uint64_t v14 = (void *)sub_20B926908();
  id v15 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v14, v13, 0);

  *(void *)(v2 + 56) = v15;
  id v16 = (id)qword_26ACA65F8;
  int64_t v17 = (void *)sub_20B926908();
  id v18 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v17, v16, 0);

  *(void *)(v2 + 64) = v18;
  id v19 = (id)qword_26ACA65F8;
  uint64_t v20 = (void *)sub_20B926908();
  id v21 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v20, v19, 0);

  *(void *)(v2 + 72) = v21;
  id v22 = (id)qword_26ACA65F8;
  double v23 = (void *)sub_20B926908();
  id v24 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v23, v22, 0);

  *(void *)(v2 + 80) = v24;
  id v25 = (id)qword_26ACA65F8;
  char v26 = (void *)sub_20B926908();
  id v27 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v26, v25, 0);

  *(void *)(v2 + 88) = v27;
  id v28 = (id)qword_26ACA65F8;
  uint64_t v29 = (void *)sub_20B926908();
  id v30 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v29, v28, 0);

  *(void *)(v2 + 96) = v30;
  id v31 = (id)qword_26ACA65F8;
  uint64_t v32 = (void *)sub_20B926908();
  id v33 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v32, v31, 0);

  *(void *)(v2 + 104) = v33;
  id v34 = (id)qword_26ACA65F8;
  uint64_t v35 = (void *)sub_20B926908();
  id v36 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v35, v34, 0);

  *(void *)(v2 + 112) = v36;
  id v37 = (id)qword_26ACA65F8;
  unint64_t v38 = (void *)sub_20B926908();
  id v39 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v38, v37, 0);

  *(void *)(v2 + 120) = v39;
  id v40 = (id)qword_26ACA65F8;
  unint64_t v41 = (void *)sub_20B926908();
  id v42 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v41, v40, 0);

  *(void *)(v2 + 128) = v42;
  id v43 = (id)qword_26ACA65F8;
  uint64_t v44 = (void *)sub_20B926908();
  id v45 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v44, v43, 0);

  *(void *)(v2 + 136) = v45;
  id v46 = (id)qword_26ACA65F8;
  char v47 = (void *)sub_20B926908();
  id v48 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v47, v46, 0);

  *(void *)(v2 + 144) = v48;
  uint64_t v60 = v2;
  sub_20B926AB8();
  uint64_t v49 = v2;
  if (a1)
  {
    id v50 = (id)qword_26ACA65F8;
    uint64_t v51 = (void *)sub_20B926908();
    id v52 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v51, v50, 0);

    MEMORY[0x21053A0A0]();
    if (*(void *)(v60 + 16) >= *(void *)(v60 + 24) >> 1) {
      sub_20B926AC8();
    }
    sub_20B926AD8();
    sub_20B926AB8();
    uint64_t v49 = v60;
  }
  uint64_t v59 = MEMORY[0x263F8EE78];
  uint64_t v53 = *(void *)(v49 + 16);
  if (v53)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v53; ++i)
    {
      uint64_t v55 = *(void **)(v49 + 8 * i + 32);
      if (v55)
      {
        id v56 = v55;
        MEMORY[0x21053A0A0]();
        if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B926AC8();
        }
        sub_20B926AD8();
        sub_20B926AB8();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v57;
}

uint64_t type metadata accessor for EmojiColorPalette()
{
  return self;
}

uint64_t method lookup function for EmojiColorPalette(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiColorPalette);
}

unint64_t sub_20B921830()
{
  unint64_t result = qword_2676A5F08;
  if (!qword_2676A5F08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2676A5F08);
  }
  return result;
}

uint64_t sub_20B921870()
{
  v19[5] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for BackgroundSuggestionsProvider();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v3 = (void *)sub_20B926908();
  uint64_t v4 = (void *)sub_20B926908();
  id v5 = objc_msgSend(v2, sel_pathForResource_ofType_, v3, v4);

  if (v5
    && (id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init),
        id v7 = objc_msgSend(v6, sel_contentsAtPath_, v5),
        v6,
        v5,
        v7))
  {
    uint64_t v8 = sub_20B926758();
    unint64_t v10 = v9;

    unint64_t v11 = self;
    id v12 = (void *)sub_20B926748();
    v19[0] = 0;
    id v13 = objc_msgSend(v11, sel_propertyListWithData_options_format_error_, v12, 0, 0, v19);

    id v14 = v19[0];
    if (v13)
    {
      sub_20B926BF8();
      sub_20B90E704(v8, v10);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5F20);
      swift_dynamicCast();
      *(id *)(v0 + 16) = v19[0];
    }
    else
    {
      id v16 = v14;
      int64_t v17 = (void *)sub_20B926718();

      swift_willThrow();
      unint64_t v18 = sub_20B909BDC(MEMORY[0x263F8EE78]);
      sub_20B90E704(v8, v10);

      *(void *)(v0 + 16) = v18;
    }
  }
  else
  {
    *(void *)(v0 + 16) = sub_20B909BDC(MEMORY[0x263F8EE78]);
  }
  return v0;
}

void sub_20B921AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (!*(void *)(v3 + 16)) {
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_20B90D350(a1, a2);
  if ((v7 & 1) == 0
    || (uint64_t v8 = *(void *)(*(void *)(v3 + 56) + 8 * v6),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        (uint64_t v9 = *(void *)(v8 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v10 = 0;
  unint64_t v11 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v12 = *(void *)(v8 + 8 * v10 + 32);
    if (!*(void *)(v12 + 16)) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_20B90D350(0x656C797473, 0xE500000000000000);
    if (v14)
    {
      unint64_t v50 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_unknownObjectRetain();
      if (swift_dynamicCast()) {
        break;
      }
    }
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    if (v9 == ++v10)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (!*(void *)(v12 + 16) || (uint64_t v15 = v48, v16 = sub_20B90D350(0x726F6C6F63, 0xE500000000000000), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(*(void *)(v12 + 56) + 8 * v16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2676A5F18);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  if (v15 == 0x64696C6F73 && v49 == 0xE500000000000000 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v15 == 0x72477261656E696CLL && v49 == 0xEE00746E65696461 || (sub_20B926ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 0x3FF0000000000000;
    uint64_t v46 = 0;
    char v47 = &unk_26C067348;
    id v45 = &unk_26C0673A8;
    char v19 = 1;
  }
  else
  {
    if (v15 == 0x72476C6169646172 && v49 == 0xEE00746E65696461 || (sub_20B926ED8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = 0x3FF0000000000000;
      char v47 = &unk_26C0673D8;
      id v45 = &unk_26C067438;
      char v19 = 2;
    }
    else if (v15 == 0x6D6F6F6C62 && v49 == 0xE500000000000000 || (sub_20B926ED8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = 0x3FF0000000000000;
      char v47 = &unk_26C067468;
      id v45 = &unk_26C0674C8;
      char v19 = 3;
    }
    else
    {
      if (v15 == 0x657474656E676976 && v49 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v39 = sub_20B926ED8();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
LABEL_20:
          char v19 = 0;
          uint64_t v20 = 0;
          uint64_t v46 = 0;
          char v47 = 0;
          id v45 = 0;
          goto LABEL_21;
        }
      }
      uint64_t v20 = 0x3FF0000000000000;
      char v47 = &unk_26C0674F8;
      id v45 = &unk_26C067578;
      char v19 = 4;
    }
    uint64_t v46 = 1;
  }
LABEL_21:
  if (!(v50 >> 62))
  {
    if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) == 3) {
      goto LABEL_23;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    double v37 = 0.0;
    double v33 = 1.0;
    double v34 = 1.0;
    double v38 = 1.0;
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_20B908E80(0, v11[2] + 1, 1, v11);
    }
    unint64_t v42 = v11[2];
    unint64_t v41 = v11[3];
    if (v42 >= v41 >> 1) {
      unint64_t v11 = sub_20B908E80((void *)(v41 > 1), v42 + 1, 1, v11);
    }
    void v11[2] = v42 + 1;
    id v43 = &v11[12 * v42];
    *((unsigned char *)v43 + 32) = v19;
    *((double *)v43 + 5) = v33;
    *((double *)v43 + 6) = v34;
    *((double *)v43 + 7) = v38;
    *((double *)v43 + 8) = v37;
    v43[9] = v46;
    v43[10] = 0;
    v43[11] = 0;
    v43[12] = v20;
    v43[13] = v47;
    v43[14] = v45;
    *((_WORD *)v43 + 60) = 0;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_20B926D58();
  swift_bridgeObjectRelease();
  if (v40 != 3) {
    goto LABEL_55;
  }
LABEL_23:
  char v44 = v19;
  uint64_t v21 = v20;
  unint64_t v22 = v50 & 0xC000000000000001;
  if ((v50 & 0xC000000000000001) != 0)
  {
    id v23 = (id)MEMORY[0x21053A2B0](0, v50);
    goto LABEL_26;
  }
  if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v23 = *(id *)(v50 + 32);
LABEL_26:
    id v24 = v23;
    objc_msgSend(v23, sel_doubleValue);
    double v26 = v25;

    if (v22)
    {
      id v27 = (id)MEMORY[0x21053A2B0](1, v50);
    }
    else
    {
      if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_67;
      }
      id v27 = *(id *)(v50 + 40);
    }
    id v28 = v27;
    objc_msgSend(v27, sel_doubleValue);
    double v30 = v29;

    if (v22)
    {
      id v31 = (id)MEMORY[0x21053A2B0](2, v50);
    }
    else
    {
      if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL) {
        goto LABEL_68;
      }
      id v31 = *(id *)(v50 + 48);
    }
    uint64_t v32 = v31;
    uint64_t v20 = v21;
    double v33 = v26 / 255.0;
    double v34 = v30 / 255.0;
    objc_msgSend(v31, sel_doubleValue);
    double v36 = v35;
    swift_bridgeObjectRelease();

    double v37 = 1.0;
    double v38 = v36 / 255.0;
    char v19 = v44;
    goto LABEL_56;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

unsigned char *sub_20B92217C@<X0>(unsigned char *result@<X0>, void *a2@<X8>)
{
  switch(*result)
  {
    case 1:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
      a2[3] = 0x3FF0000000000000;
      a2[4] = &unk_26C067348;
      a2[5] = &unk_26C0673A8;
      break;
    case 2:
      *a2 = 1;
      a2[1] = 0;
      a2[2] = 0;
      a2[3] = 0x3FF0000000000000;
      a2[4] = &unk_26C0673D8;
      a2[5] = &unk_26C067438;
      break;
    case 3:
      *a2 = 1;
      a2[1] = 0;
      a2[2] = 0;
      a2[3] = 0x3FF0000000000000;
      a2[4] = &unk_26C067468;
      a2[5] = &unk_26C0674C8;
      break;
    case 4:
      *a2 = 1;
      a2[1] = 0;
      a2[2] = 0;
      a2[3] = 0x3FF0000000000000;
      a2[4] = &unk_26C0674F8;
      a2[5] = &unk_26C067578;
      break;
    default:
      *((_OWORD *)a2 + 1) = 0u;
      *((_OWORD *)a2 + 2) = 0u;
      *(_OWORD *)a2 = 0u;
      break;
  }
  return result;
}

uint64_t sub_20B922260()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for BackgroundSuggestionsProvider()
{
  return self;
}

void sub_20B9222BC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

double sub_20B922330()
{
  unint64_t v1 = (char *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant);
  swift_beginAccess();
  uint64_t v2 = 8 * *v1;
  uint64_t v3 = *(void *)((char *)&unk_20B92C660 + v2);
  uint64_t v4 = *(void *)((char *)&unk_20B92C678 + v2);
  *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize) = v3;
  *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minItemSize) = v3;
  *(void *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxItemSize) = v4;
  sub_20B922FF0(1);
  return result;
}

id sub_20B9223C0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji] = &unk_26C0675B0;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures] = MEMORY[0x263F8EE78];
  v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_reverseTransition] = 0;
  v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant] = 1;
  uint64_t v3 = OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 10;
  id v5 = objc_allocWithZone(MEMORY[0x263EFF8E0]);
  unint64_t v6 = v1;
  id v7 = objc_msgSend(v5, sel_init);
  *(void *)(v4 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(void *)&v1[v3] = v4;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize] = 0x4054000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minItemSize] = 0x4054000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxItemSize] = 0x4059000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_spacingFactor] = 0x3FD3333333333333;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minSpacingFactor] = 0x3FD3333333333333;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxSpacingFactor] = 0x3FD999999999999ALL;
  uint64_t v8 = &v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows];
  *(void *)uint64_t v8 = 0;
  _OWORD v8[8] = 1;
  uint64_t v9 = &v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress] = 0x3FF0000000000000;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for OffsetGridScene();
  id v10 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);
  if (v10)
  {
    unint64_t v11 = self;
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);
  }
  return v10;
}

id sub_20B922604(double a1, double a2)
{
  *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji] = &unk_26C0675E0;
  *(void *)&v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures] = MEMORY[0x263F8EE78];
  v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_reverseTransition] = 0;
  v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant] = 1;
  uint64_t v5 = OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 10;
  id v7 = objc_allocWithZone(MEMORY[0x263EFF8E0]);
  uint64_t v8 = v2;
  id v9 = objc_msgSend(v7, sel_init);
  *(void *)(v6 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(void *)&v2[v5] = v6;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize] = 0x4054000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minItemSize] = 0x4054000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxItemSize] = 0x4059000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_spacingFactor] = 0x3FD3333333333333;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minSpacingFactor] = 0x3FD3333333333333;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxSpacingFactor] = 0x3FD999999999999ALL;
  id v10 = &v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows];
  *(void *)id v10 = 0;
  _OWORD v10[8] = 1;
  unint64_t v11 = &v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow];
  *(void *)unint64_t v11 = 0;
  _OWORD v11[8] = 1;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress] = 0x3FF0000000000000;

  v17.receiver = v8;
  v17.super_class = (Class)type metadata accessor for OffsetGridScene();
  id v12 = objc_msgSendSuper2(&v17, sel_initWithSize_, a1, a2);
  id v13 = self;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  return v14;
}

void sub_20B9228A4()
{
  objc_msgSend(v0, sel_removeAllChildren);
  unint64_t v1 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures];
  swift_beginAccess();
  *(void *)unint64_t v1 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v2 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji];
  swift_beginAccess();
  if (*(void *)(*(void *)v2 + 16))
  {
    sub_20B922B00();
    id v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      objc_super v17 = v3;
      sub_20B922F04();
      uint64_t v4 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows];
      *(void *)uint64_t v4 = v5;
      v4[8] = 0;
      sub_20B922EEC();
      uint64_t v6 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow];
      *(void *)uint64_t v6 = v7;
      v6[8] = 0;
      if (v4[8])
      {
LABEL_22:
        __break(1u);
        return;
      }
      uint64_t v8 = 0;
      uint64_t v18 = v4;
      while (v8 < *(void *)v4)
      {
        uint64_t v19 = v8;
        uint64_t v9 = 0;
        while (v9 < *(void *)v6)
        {
          unint64_t v10 = *(void *)(*(void *)v2 + 16);
          if (!v10)
          {
            __break(1u);
LABEL_20:
            __break(1u);
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
          unint64_t v11 = (v9 + 1) % v10;
          uint64_t v12 = *(void *)v1;
          if ((*(void *)v1 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            id v13 = (id)MEMORY[0x21053A2B0](v11, v12);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_20;
            }
            id v13 = *(id *)(v12 + 8 * v11 + 32);
          }
          id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C20]), sel_initWithTexture_, v13);

          id v15 = v14;
          unint64_t v16 = (void *)sub_20B926908();
          objc_msgSend(v15, sel_setName_, v16);

          objc_msgSend(v0, sel_addChild_, v15);
          ++v9;
          if (v6[8]) {
            goto LABEL_21;
          }
        }
        uint64_t v4 = v18;
        uint64_t v8 = v19 + 1;
        if (v18[8]) {
          goto LABEL_22;
        }
      }
    }
    sub_20B922FF0(1);
  }
}

uint64_t sub_20B922B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5)
  {
    uint64_t v6 = self;
    uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures);
    uint64_t v29 = *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiRenderer);
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(v4 + 40);
    int64x2_t v27 = vdupq_n_s64(0x4069000000000000uLL);
    double v26 = v6;
    id v28 = v7;
    while (1)
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      id v11 = objc_allocWithZone(NSString);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = (void *)sub_20B926908();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v11, sel_initWithString_, v12);

      id v14 = objc_msgSend(*(id *)(v29 + 24), sel_objectForKey_, v13);
      if (v14)
      {
        id v15 = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
        objc_msgSend(v16, sel_setOpaque_, 0);
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v16, 200.0, 200.0);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v9;
        *(void *)(v18 + 24) = v10;
        *(int64x2_t *)(v18 + 32) = v27;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = sub_20B8EF014;
        *(void *)(v19 + 24) = v18;
        aBlock[4] = sub_20B8EF030;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_20B8F48A4;
        void aBlock[3] = &block_descriptor_56;
        uint64_t v20 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        id v21 = objc_msgSend(v17, sel_imageWithActions_, v20);
        _Block_release(v20);
        LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v20)
        {
          __break(1u);
          return result;
        }
        unint64_t v22 = *(void **)(v29 + 24);
        id v15 = v21;
        id v23 = v22;
        objc_msgSend(v23, sel_setObject_forKey_, v15, v13);
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v6 = v26;
      }

      id v24 = objc_msgSend(v6, sel_textureWithImage_, v15);
      swift_beginAccess();
      id v25 = v24;
      MEMORY[0x21053A0A0]();
      if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20B926AC8();
      }
      v8 += 2;
      sub_20B926AD8();
      sub_20B926AB8();
      swift_endAccess();

      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_20B922EEC()
{
}

void sub_20B922F04()
{
}

void sub_20B922F1C(double (*a1)(id))
{
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    double v5 = a1(objc_msgSend(v3, sel_bounds));
    double v6 = *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize];
    if (v5 - v6 <= 0.0)
    {
    }
    else
    {
      double v7 = v6 + v6 * *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_spacingFactor];
      uint64_t v8 = 1;
      do
      {
        uint64_t v9 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        double v6 = v7 + v6;
        ++v8;
      }
      while (v5 - v6 > 0.0);

      if ((v9 & 1) == 0 && __OFADD__(v9, 1)) {
        __break(1u);
      }
    }
  }
}

void sub_20B922FF0(char a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  double v5 = (void *)sub_20B926908();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 32) = v3;
  *(unsigned char *)(v6 + 40) = a1;
  v9[4] = sub_20B923AAC;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_20B9222BC;
  v9[3] = &block_descriptor_11;
  double v7 = _Block_copy(v9);
  id v8 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_enumerateChildNodesWithName_usingBlock_, v5, v7);
  _Block_release(v7);
  swift_release();
  swift_release();
}

void sub_20B923154(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v13 = (uint64_t *)(a4 + 16);
    id v14 = (void *)(a5 + 16);
    swift_beginAccess();
    swift_beginAccess();
    id v15 = a1;
    sub_20B9232F8();
    objc_msgSend(v12, sel_setPosition_);
    if (a6) {
      objc_msgSend(v12, sel_scaleToSize_, *(double *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize), *(double *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize));
    }
    swift_beginAccess();
    id v16 = (uint64_t *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow);
    if (*(unsigned char *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow + 8)) {
      goto LABEL_15;
    }
    uint64_t v17 = *v13;
    uint64_t v18 = *v16;

    if (__OFSUB__(v18, 1))
    {
      __break(1u);
    }
    else
    {
      if (v17 != v18 - 1)
      {
        swift_beginAccess();
        uint64_t v19 = *v13 + 1;
        if (!__OFADD__(*v13, 1)) {
          goto LABEL_10;
        }
        goto LABEL_14;
      }
      swift_beginAccess();
      if (!__OFADD__(*v14, 1))
      {
        ++*v14;
        swift_beginAccess();
        uint64_t v19 = 0;
LABEL_10:
        *id v13 = v19;
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
}

void sub_20B9232F8()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_bounds);
    if (*((unsigned char *)v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows + 8))
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v2, sel_bounds);
      if ((*((unsigned char *)v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow + 8) & 1) == 0)
      {
        objc_msgSend(v2, sel_bounds);

        return;
      }
    }
    __break(1u);
  }
}

id sub_20B9234D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OffsetGridScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OffsetGridScene()
{
  return self;
}

uint64_t sub_20B92358C()
{
  return swift_bridgeObjectRetain();
}

void sub_20B9235DC(uint64_t a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji);
  swift_beginAccess();
  void *v3 = a1;
  swift_bridgeObjectRelease();
  sub_20B9228A4();
}

void (*sub_20B923640(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B9236A4;
}

void sub_20B9236A4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B9228A4();
  }
}

uint64_t sub_20B9236D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(*v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

double sub_20B92372C(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant);
  swift_beginAccess();
  unsigned char *v3 = v2;
  return sub_20B922330();
}

double (*sub_20B923788(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B9237EC;
}

double sub_20B9237EC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_20B922330();
  }
  return result;
}

double sub_20B923820()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B92386C(uint64_t a1, uint64_t a2, double a3)
{
}

uint64_t (*sub_20B923878(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B9238DC;
}

double sub_20B9238E0()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_20B92392C(uint64_t a1, uint64_t a2, double a3)
{
}

void sub_20B923938(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  double *v6 = a1;
  sub_20B922FF0(1);
}

uint64_t (*sub_20B923994(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_20B9238DC;
}

void sub_20B9239F8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_20B922FF0(1);
  }
}

void sub_20B923A30()
{
}

uint64_t sub_20B923A54()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B923A64()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

void sub_20B923AAC(void *a1, uint64_t a2)
{
  sub_20B923154(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_20B923AD4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_20B923B0C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B923B24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  char v10 = *(unsigned char *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 89);
  *(unsigned char *)a2 = *(unsigned char *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v7;
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  *(unsigned char *)(a2 + 88) = v10;
  *(unsigned char *)(a2 + 89) = v11;
  return sub_20B8E7644(v4, v5, v6, v7, v8);
}

id sub_20B923BB4(char *a1, void *a2)
{
  char v20 = *a1;
  long long v19 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  uint64_t v5 = *((void *)a1 + 6);
  uint64_t v6 = *((void *)a1 + 7);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t v8 = *((void *)a1 + 9);
  uint64_t v9 = *((void *)a1 + 10);
  uint64_t v10 = *a2 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  char v17 = a1[89];
  char v18 = a1[88];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 40);
  uint64_t v12 = *(void *)(v10 + 48);
  uint64_t v15 = *(void *)(v10 + 64);
  uint64_t v16 = *(void *)(v10 + 56);
  uint64_t v14 = *(void *)(v10 + 72);
  *(unsigned char *)uint64_t v10 = v20;
  *(_OWORD *)(v10 + 8) = v19;
  *(void *)(v10 + 24) = v2;
  *(void *)(v10 + 32) = v3;
  *(void *)(v10 + 40) = v4;
  *(void *)(v10 + 48) = v5;
  *(void *)(v10 + 56) = v6;
  *(void *)(v10 + 64) = v7;
  *(void *)(v10 + 72) = v8;
  *(void *)(v10 + 80) = v9;
  *(unsigned char *)(v10 + 88) = v18;
  *(unsigned char *)(v10 + 89) = v17;
  sub_20B8E7644(v4, v5, v6, v7, v8);
  sub_20B8E7820(v11, v12, v16, v15, v14);
  return sub_20B924434();
}

uint64_t sub_20B923CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  char v10 = *(unsigned char *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 89);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 89) = v11;
  return sub_20B8E7644(v4, v5, v6, v7, v8);
}

id sub_20B923D5C(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 4);
  long long v17 = *(_OWORD *)(a1 + 40);
  long long v18 = *(_OWORD *)(a1 + 8);
  uint64_t v5 = *((void *)a1 + 7);
  long long v16 = *((_OWORD *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 10);
  char v7 = a1[88];
  char v8 = a1[89];
  uint64_t v9 = v1 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = *(void *)(v9 + 48);
  uint64_t v12 = *(void *)(v9 + 56);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = *(void *)(v9 + 72);
  *(unsigned char *)uint64_t v9 = v2;
  *(_OWORD *)(v9 + 8) = v18;
  *(void *)(v9 + 24) = v3;
  *(void *)(v9 + 32) = v4;
  *(_OWORD *)(v9 + 40) = v17;
  *(void *)(v9 + 56) = v5;
  *(_OWORD *)(v9 + 64) = v16;
  *(void *)(v9 + 80) = v6;
  *(unsigned char *)(v9 + 88) = v7;
  *(unsigned char *)(v9 + 89) = v8;
  sub_20B8E7820(v10, v11, v12, v13, v14);
  return sub_20B924434();
}

uint64_t (*sub_20B923E30(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B923E90;
}

double sub_20B923E94()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

id sub_20B923EDC(double a1)
{
  return sub_20B923F9C(&OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress, a1);
}

uint64_t (*sub_20B923EE8(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B923E90;
}

double sub_20B923F48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

id sub_20B923F90(double a1)
{
  return sub_20B923F9C(&OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress, a1);
}

id sub_20B923F9C(void *a1, double a2)
{
  uint64_t v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  double *v4 = a2;
  return sub_20B924434();
}

uint64_t (*sub_20B923FF0(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_20B923E90;
}

id sub_20B924050(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_20B924434();
  }
  return result;
}

id sub_20B92408C()
{
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for BackgroundViewController();
  objc_msgSendSuper2(&v20, sel_viewDidLoad);
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer];
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v4 = result;
    objc_msgSend(result, sel_bounds);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    uint64_t v13 = *(void **)&v0[v1];
    uint64_t v14 = self;
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel_blackColor);
    id v17 = objc_msgSend(v16, sel_CGColor);

    objc_msgSend(v15, sel_setBackgroundColor_, v17);
    objc_msgSend(*(id *)&v0[v1], sel_setOpacity_, 0.0);
    id result = objc_msgSend(v0, sel_view);
    if (result)
    {
      long long v18 = result;
      id v19 = objc_msgSend(result, sel_layer);

      objc_msgSend(v19, sel_addSublayer_, *(void *)&v0[v1]);
      return sub_20B924434();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20B924288()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for BackgroundViewController();
  objc_msgSendSuper2(&v12, sel_viewDidLayoutSubviews);
  id v1 = *(id *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer];
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_bounds);
    double v5 = v4;
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;

    objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_20B924434()
{
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    id v2 = result;
    uint64_t v3 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration];
    swift_beginAccess();
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, v3[1], v3[2], v3[3], v3[4]);
    objc_msgSend(v2, sel_setBackgroundColor_, v4);

    double v5 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress];
    swift_beginAccess();
    double v6 = (1.0 - *v5) * 0.2 + 0.0;
    *(float *)&double v6 = v6;
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer], sel_setOpacity_, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for BackgroundViewController()
{
  return self;
}

id BackgroundViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    double v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id BackgroundViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  v22[1] = *MEMORY[0x263EF8340];
  v3[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_usesDimmingLayer] = 1;
  double v6 = &v3[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration];
  id v7 = self;
  double v8 = v3;
  id v9 = objc_msgSend(v7, sel_lightGrayColor);
  uint64_t v21 = 0;
  v22[0] = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  objc_msgSend(v9, sel_getRed_green_blue_alpha_, v22, &v21, &v20, &v19);

  uint64_t v11 = v21;
  uint64_t v10 = v22[0];
  uint64_t v13 = v19;
  uint64_t v12 = v20;
  char *v6 = 0;
  *((void *)v6 + 1) = v10;
  *((void *)v6 + 2) = v11;
  *((void *)v6 + 3) = v12;
  *((void *)v6 + 4) = v13;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *((_WORD *)v6 + 44) = 0;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundIndex] = 0;
  uint64_t v14 = OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer;
  *(void *)&v8[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v8[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress] = 0x3FF0000000000000;

  if (a2)
  {
    id v15 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = 0;
  }
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for BackgroundViewController();
  id v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id BackgroundViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BackgroundViewController.init(coder:)(void *a1)
{
  v18[1] = *MEMORY[0x263EF8340];
  v1[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_usesDimmingLayer] = 1;
  id v3 = &v1[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration];
  id v4 = self;
  double v5 = v1;
  id v6 = objc_msgSend(v4, sel_lightGrayColor);
  uint64_t v17 = 0;
  v18[0] = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  objc_msgSend(v6, sel_getRed_green_blue_alpha_, v18, &v17, &v16, &v15);

  uint64_t v8 = v17;
  uint64_t v7 = v18[0];
  uint64_t v10 = v15;
  uint64_t v9 = v16;
  char *v3 = 0;
  *((void *)v3 + 1) = v7;
  *((void *)v3 + 2) = v8;
  *((void *)v3 + 3) = v9;
  *((void *)v3 + 4) = v10;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *((_WORD *)v3 + 44) = 0;
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundIndex] = 0;
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer;
  *(void *)&v5[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress] = 0x3FF0000000000000;
  *(void *)&v5[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress] = 0x3FF0000000000000;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for BackgroundViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id BackgroundViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_20B924A30@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress, a2);
}

id sub_20B924A3C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress);
}

double sub_20B924A48@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress, a2);
}

id sub_20B924A54(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress);
}

id keypath_set_3Tm_0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  id v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v6 = v5;
  return sub_20B924434();
}

uint64_t method lookup function for BackgroundViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BackgroundViewController);
}

uint64_t dispatch thunk of BackgroundViewController.backgroundConfiguration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BackgroundViewController.backgroundConfiguration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BackgroundViewController.backgroundConfiguration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BackgroundViewController.wakeProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BackgroundViewController.wakeProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BackgroundViewController.wakeProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of BackgroundViewController.unlockProgress.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BackgroundViewController.unlockProgress.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BackgroundViewController.unlockProgress.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of BackgroundViewController.updateWithCurrentConfiguration()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

void sub_20B924D30()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_super v2 = v1;
  id v3 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = (void *)sub_20B9256B0();
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer];
  id v6 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v5, sel_setContents_, v6);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v5, sel_frame);
  objc_msgSend(v5, sel_setFrame_);
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer];
  objc_msgSend(v7, sel_addSublayer_, v5);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer];
  objc_msgSend(v8, sel_addSublayer_, v7);
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_layer);

  objc_msgSend(v11, sel_addSublayer_, v8);
  id v12 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer];
  id v13 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v12, sel_setContents_, v13);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v12, sel_frame);
  objc_msgSend(v12, sel_setFrame_);
  objc_super v14 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer];
  objc_msgSend(v14, sel_addSublayer_, v12);
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer];
  objc_msgSend(v15, sel_addSublayer_, v14);
  id v16 = objc_msgSend(v0, sel_view);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = objc_msgSend(v16, sel_layer);

    objc_msgSend(v18, sel_addSublayer_, v15);
    sub_20B925078();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for EmojiGreyscaleReplicatorViewController()
{
  return self;
}

void sub_20B925078()
{
  uint64_t v1 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale;
  double v2 = *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale];
  double v3 = v2 * 100.0;
  id v4 = self;
  objc_msgSend(v4, sel_begin);
  objc_msgSend(v4, sel_setDisableActions_, 1);
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer];
  objc_msgSend(v5, sel_frame);
  objc_msgSend(v5, sel_setFrame_);
  id v6 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer];
  objc_msgSend(v6, sel_frame);
  objc_msgSend(v6, sel_setFrame_);
  id v7 = objc_msgSend(v0, sel_view);
  if (!v7) {
    goto LABEL_30;
  }
  uint64_t v8 = v7;
  objc_msgSend(v7, sel_bounds);
  double v10 = v9;

  double v11 = ceil(v10 / v3);
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = (uint64_t)v11 + 1;
  if (__OFADD__((uint64_t)v11, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v12 & 1) == 0)
  {
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v12 = (uint64_t)v11 + 2;
    if (v13) {
      goto LABEL_29;
    }
  }
  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_bounds);
  double v17 = v16;

  double v18 = ceil(v17 / v3);
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0) {
    goto LABEL_25;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v19 = (uint64_t)v18 + 1;
  if (__OFADD__((uint64_t)v18, 1))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v21 = v20;
  id v79 = v4;
  if (v12 >= 0) {
    uint64_t v22 = v12;
  }
  else {
    uint64_t v22 = v12 + 1;
  }
  objc_msgSend(v20, sel_bounds);
  double v24 = v23;

  id v25 = objc_msgSend(v0, sel_view);
  if (!v25) {
    goto LABEL_33;
  }
  double v26 = v25;
  double v27 = v2 * 0.2 + 1.65;
  double v80 = v3 * v27;
  double v28 = v24 * 0.5 - (v3 * (double)((v22 >> 1) + 1) - v3 * 0.5 + (v3 * v27 - v3) * ((double)((v22 >> 1) + 1) + -1.0));
  objc_msgSend(v25, sel_bounds);
  double v30 = v29;
  CGFloat v32 = v31;
  double v34 = v33;
  CGFloat v36 = v35;

  double v37 = *(double *)&v0[v1];
  double v78 = v28;
  double v38 = v28 - (v37 + v37) / 0.098;
  v82.origin.CGFloat x = v30 + v38;
  v82.size.width = v34 - v38;
  char v39 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer];
  CGFloat v40 = v37 / 0.098;
  CGFloat v41 = v37 / 0.049;
  v82.origin.CGFloat y = v32;
  v82.size.height = v36;
  CGRect v83 = CGRectInset(v82, v40, v41);
  objc_msgSend(v39, sel_setFrame_, v83.origin.x, v83.origin.y, v83.size.width, v83.size.height);
  unint64_t v42 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer];
  v84.size.width = v3 * (v27 * ((double)v12 + -1.0) + (double)v12);
  double v43 = *(double *)&v0[v1];
  CGFloat v44 = v43 / 0.098;
  CGFloat v45 = v43 / 0.049;
  v84.origin.CGFloat x = 0.0;
  v84.origin.CGFloat y = 0.0;
  v84.size.height = v3;
  CGRect v85 = CGRectInset(v84, v44, v45);
  objc_msgSend(v42, sel_setFrame_, v85.origin.x, v85.origin.y, v85.size.width, v85.size.height);
  objc_msgSend(v42, sel_setInstanceCount_, v12);
  CATransform3DMakeTranslation(&v81, v3 * v27, 0.0, 0.0);
  objc_msgSend(v42, sel_setInstanceTransform_, &v81);
  objc_msgSend(v39, sel_setInstanceCount_, v19);
  CATransform3DMakeTranslation(&v81, 0.0, v3 * v27, 0.0);
  objc_msgSend(v39, sel_setInstanceTransform_, &v81);
  id v46 = objc_msgSend(v0, sel_view);
  if (!v46)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  char v47 = v46;
  objc_msgSend(v46, sel_bounds);
  CGFloat v76 = v49;
  CGFloat v77 = v48;
  double v51 = v50;
  double v53 = v52;

  id v54 = objc_msgSend(v0, sel_view);
  if (v54)
  {
    uint64_t v55 = v54;
    double v56 = v3 * (v27 * 0.5);
    CGFloat v57 = v53 - v56;
    objc_msgSend(v54, sel_bounds);
    double v59 = v58;
    CGFloat v61 = v60;
    double v63 = v62;
    CGFloat v65 = v64;

    double v66 = *(double *)&v0[v1];
    double v67 = v78 - (v66 + v66) / 0.098;
    double v68 = v63 - v67;
    v86.origin.CGFloat x = v59 + v67 - v56;
    v86.size.width = v56 + v68;
    uint64_t v69 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer];
    CGFloat v70 = v66 / 0.098;
    CGFloat v71 = v66 / 0.049;
    v86.origin.CGFloat y = v61;
    v86.size.height = v65;
    CGRect v87 = CGRectInset(v86, v70, v71);
    objc_msgSend(v69, sel_setFrame_, v87.origin.x, v87.origin.y, v87.size.width, v87.size.height);
    uint64_t v72 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer];
    double v73 = *(double *)&v0[v1];
    CGFloat v74 = v73 / 0.098;
    CGFloat v75 = v73 / 0.049;
    v88.size.width = v76;
    v88.origin.CGFloat x = v77;
    v88.origin.CGFloat y = v56 + v51;
    v88.size.height = v57;
    CGRect v89 = CGRectInset(v88, v74, v75);
    objc_msgSend(v72, sel_setFrame_, v89.origin.x, v89.origin.y, v89.size.width, v89.size.height);
    objc_msgSend(v69, sel_setInstanceCount_, v12);
    CATransform3DMakeTranslation(&v81, v80, 0.0, 0.0);
    objc_msgSend(v69, sel_setInstanceTransform_, &v81);
    objc_msgSend(v72, sel_setInstanceCount_, v19);
    CATransform3DMakeTranslation(&v81, 0.0, v80, 0.0);
    objc_msgSend(v72, sel_setInstanceTransform_, &v81);
    objc_msgSend(v79, sel_commit);
    return;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_20B9256B0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
  objc_msgSend(v1, sel_setOpaque_, 0);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v1, 100.0, 100.0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_20B926430;
  *(void *)(v4 + 24) = v3;
  id v25 = sub_20B8EF030;
  uint64_t v26 = v4;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v22 = 1107296256;
  double v23 = sub_20B8F48A4;
  double v24 = &block_descriptor_12;
  uint64_t v5 = _Block_copy(&aBlock);
  id v6 = v0;
  swift_retain();
  swift_release();
  id v7 = objc_msgSend(v2, sel_imageWithActions_, v5);
  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    double v10 = v2;
    id v11 = objc_msgSend(self, sel_grayColor);
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v1, 100.0, 100.0);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 24) = 0;
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 16) = v6;
    *(int64x2_t *)(v13 + 40) = vdupq_n_s64(0x4059000000000000uLL);
    *(void *)(v13 + 56) = v7;
    *(void *)(v13 + 64) = v11;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_20B9264A8;
    *(void *)(v14 + 24) = v13;
    id v25 = sub_20B917EC4;
    uint64_t v26 = v14;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v22 = 1107296256;
    double v23 = sub_20B8F48A4;
    double v24 = &block_descriptor_19;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = v6;
    id v17 = v7;
    id v18 = v11;
    swift_retain();
    swift_release();
    id v19 = objc_msgSend(v12, sel_imageWithActions_, v15);

    _Block_release(v15);
    char v20 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if ((v20 & 1) == 0) {
      return (uint64_t)v19;
    }
  }
  __break(1u);
  return result;
}

void sub_20B925A28()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACA2FA0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20B9294E0;
  id v1 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v2 = self;
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_systemFontOfSize_, 100.0);
  *(void *)(inited + 64) = sub_20B8F4A08();
  *(void *)(inited + 40) = v4;
  sub_20B9099B4(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v6 = (void *)sub_20B926908();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20B8F4A48();
  id v7 = (void *)sub_20B9268B8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  objc_msgSend(v8, sel_size);
  objc_msgSend(v8, sel_drawInRect_, 50.0 - v9 * 0.5, 50.0 - v10 * 0.5, v9);
}

void sub_20B925BC8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, void *a7, void *a8)
{
  CGFloat c = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextTranslateCTM(c, 0.0, 100.0);
  CGContextScaleCTM(c, 1.0, -1.0);
  uint64_t v14 = (CGImage *)objc_msgSend(a7, sel_CGImage);
  if (v14)
  {
    uint64_t v15 = v14;
    v18.origin.CGFloat x = a2;
    v18.origin.CGFloat y = a3;
    v18.size.width = a4;
    v18.size.height = a5;
    CGContextClipToMask(c, v18, v14);

    objc_msgSend(a8, sel_setFill);
    v19.origin.CGFloat x = a2;
    v19.origin.CGFloat y = a3;
    v19.size.width = a4;
    v19.size.height = a5;
    CGContextFillRect(c, v19);
    CGContextTranslateCTM(c, 0.0, -100.0);
    CGContextScaleCTM(c, 1.0, -1.0);
  }
  else
  {
    __break(1u);
  }
}

void sub_20B925CF0(void *a1)
{
  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 1uLL:
    case 2uLL:
      objc_msgSend(a1, sel_scale);
      *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale) = v3;
      sub_20B925078();
      break;
    default:
      *(void *)(v1 + OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scaleDelta) = 0x3FF0000000000000;
      break;
  }
}

void sub_20B925E08(double a1)
{
  *(double *)(v1 + OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale) = a1;
  sub_20B925078();
}

id EmojiGreyscaleReplicatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id EmojiGreyscaleReplicatorViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = &v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emoji];
  *(void *)id v6 = 3113983984;
  *((void *)v6 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_spacingFactor] = 0x3FFA666666666666;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale] = 0x3FEF5C28F5C28F5CLL;
  *(void *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer;
  id v8 = objc_allocWithZone(MEMORY[0x263F157E8]);
  double v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer;
  *(void *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer;
  *(void *)&v9[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(void *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer;
  *(void *)&v9[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer;
  *(void *)&v9[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);

  if (a2)
  {
    uint64_t v15 = (void *)sub_20B926908();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  id v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id EmojiGreyscaleReplicatorViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiGreyscaleReplicatorViewController.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emoji];
  *(void *)id v3 = 3113983984;
  *((void *)v3 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_spacingFactor] = 0x3FFA666666666666;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale] = 0x3FEF5C28F5C28F5CLL;
  *(void *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  uint64_t v4 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer;
  id v5 = objc_allocWithZone(MEMORY[0x263F157E8]);
  id v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer;
  *(void *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer;
  *(void *)&v6[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(void *)&v6[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer;
  *(void *)&v6[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer;
  *(void *)&v6[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15868]), sel_init);

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id EmojiGreyscaleReplicatorViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for EmojiGreyscaleReplicatorViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiGreyscaleReplicatorViewController);
}

uint64_t dispatch thunk of EmojiGreyscaleReplicatorViewController.updateScale(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t sub_20B9263F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20B926430()
{
}

uint64_t sub_20B926438()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_20B926460()
{
  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_20B9264A8(void *a1)
{
  sub_20B925BC8(a1, *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(void *)(v1 + 16), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_20B9264BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

double sub_20B9264D4(uint64_t a1)
{
  if (a1 < 1) {
    return 0.0;
  }
  else {
    return dbl_20B92C770[*(char *)(v1 + 16)]
  }
         / dbl_20B92C790[*(char *)(v1 + 16)]
         * (*(double *)(v1 + 24)
          / dbl_20B92C7B0[*(char *)(v1 + 16)])
         * (double)a1;
}

uint64_t sub_20B92652C()
{
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t type metadata accessor for CircularLayoutProvider()
{
  return self;
}

uint64_t dispatch thunk of EmojiScene.emoji.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EmojiScene.emoji.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EmojiScene.emoji.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EmojiScene.sizeVariant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EmojiScene.sizeVariant.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EmojiScene.sizeVariant.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EmojiScene.wakeProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EmojiScene.wakeProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EmojiScene.wakeProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of EmojiScene.unlockProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EmojiScene.unlockProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EmojiScene.unlockProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of EmojiScene.updateForEmoji()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_20B926688()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_20B926698()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_20B9266A8()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_20B9266B8()
{
  return MEMORY[0x270EEE098]();
}

uint64_t sub_20B9266C8()
{
  return MEMORY[0x270EEE200]();
}

uint64_t sub_20B9266D8()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_20B9266E8()
{
  return MEMORY[0x270EEE218]();
}

uint64_t sub_20B9266F8()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_20B926708()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_20B926718()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_20B926728()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_20B926738()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_20B926748()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_20B926758()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_20B926768()
{
  return MEMORY[0x270EF16E0]();
}

uint64_t sub_20B926778()
{
  return MEMORY[0x270EF1700]();
}

uint64_t sub_20B926788()
{
  return MEMORY[0x270F81700]();
}

uint64_t sub_20B926798()
{
  return MEMORY[0x270F81718]();
}

uint64_t sub_20B9267A8()
{
  return MEMORY[0x270F81740]();
}

uint64_t sub_20B9267B8()
{
  return MEMORY[0x270EF1738]();
}

uint64_t sub_20B9267C8()
{
  return MEMORY[0x270FA1158]();
}

uint64_t sub_20B9267D8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_20B9267E8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_20B9267F8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_20B926808()
{
  return MEMORY[0x270F81F60]();
}

uint64_t sub_20B926818()
{
  return MEMORY[0x270F81FB0]();
}

uint64_t sub_20B926828()
{
  return MEMORY[0x270F82058]();
}

uint64_t sub_20B926838()
{
  return MEMORY[0x270F82270]();
}

uint64_t sub_20B926848()
{
  return MEMORY[0x270F82288]();
}

uint64_t sub_20B926858()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_20B926868()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_20B926878()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_20B926888()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_20B926898()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_20B9268A8()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_20B9268B8()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_20B9268C8()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_20B9268D8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_20B9268E8()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_20B9268F8()
{
  return MEMORY[0x270EF1870]();
}

uint64_t sub_20B926908()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_20B926918()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_20B926928()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_20B926938()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_20B926948()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_20B926958()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_20B926968()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_20B926978()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_20B926988()
{
  return MEMORY[0x270EF1B18]();
}

uint64_t sub_20B926998()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_20B9269A8()
{
  return MEMORY[0x270F9D698]();
}

uint64_t sub_20B9269B8()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_20B9269C8()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_20B9269D8()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_20B9269E8()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_20B9269F8()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_20B926A08()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_20B926A18()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_20B926A28()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_20B926A38()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_20B926A48()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_20B926A58()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_20B926A68()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_20B926A78()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_20B926A88()
{
  return MEMORY[0x270EF1B98]();
}

uint64_t sub_20B926A98()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_20B926AA8()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_20B926AB8()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_20B926AC8()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_20B926AD8()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_20B926AE8()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_20B926AF8()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_20B926B08()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_20B926B18()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_20B926B28()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_20B926B38()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_20B926B48()
{
  return MEMORY[0x270F824D8]();
}

uint64_t sub_20B926B58()
{
  return MEMORY[0x270F824F8]();
}

uint64_t sub_20B926B68()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_20B926B78()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_20B926B88()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_20B926B98()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_20B926BA8()
{
  return MEMORY[0x270F82960]();
}

uint64_t sub_20B926BB8()
{
  return MEMORY[0x270F9E4F8]();
}

uint64_t sub_20B926BC8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_20B926BD8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_20B926BE8()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_20B926BF8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_20B926C08()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_20B926C18()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_20B926C28()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_20B926C38()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_20B926C48()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_20B926C58()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_20B926C68()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_20B926C78()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_20B926C88()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_20B926C98()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_20B926CA8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_20B926CB8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_20B926CC8()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t sub_20B926CD8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_20B926CE8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_20B926CF8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_20B926D08()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_20B926D18()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_20B926D28()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_20B926D38()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_20B926D48()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_20B926D58()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_20B926D68()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_20B926D78()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_20B926D88()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_20B926D98()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_20B926DA8()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_20B926DC8()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_20B926DD8()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_20B926DE8()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_20B926DF8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_20B926E08()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_20B926E18()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_20B926E28()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_20B926E38()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_20B926E48()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_20B926E58()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_20B926E68()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_20B926E78()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_20B926E88()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_20B926E98()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_20B926EA8()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_20B926EB8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_20B926EC8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_20B926ED8()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_20B926EE8()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_20B926EF8()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_20B926F08()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_20B926F18()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_20B926F28()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_20B926F38()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_20B926F48()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_20B926F58()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_20B926F68()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_20B926F78()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_20B926F88()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_20B926F98()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_20B926FA8()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_20B926FB8()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_20B926FC8()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_20B926FD8()
{
  return MEMORY[0x270F9FF50]();
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x270EFB950](retstr, tx, ty, tz);
}

uint64_t CEMEmojiTokenGetString()
{
  return MEMORY[0x270F18C38]();
}

uint64_t CEMEnumerateEmojiTokensInStringWithBlock()
{
  return MEMORY[0x270F18C48]();
}

uint64_t CEMStringIsSingleEmoji()
{
  return MEMORY[0x270F18C68]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x270EE4C58]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x270EE4C70](number, theType, valuePtr);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CA0](key, applicationID);
}

void CFRelease(CFTypeRef cf)
{
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x270EE5960](retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x270EE5998](retstr, angle);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x270EE59E8](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGBitmapInfo CGBitmapContextGetBitmapInfo(CGContextRef context)
{
  return MEMORY[0x270EE5A20](context);
}

size_t CGBitmapContextGetBytesPerRow(CGContextRef context)
{
  return MEMORY[0x270EE5A38](context);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return (void *)MEMORY[0x270EE5A48](context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return MEMORY[0x270EE5A50](context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return MEMORY[0x270EE5A58](context);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x270EE5B50](space, components);
}

CGColorRef CGColorCreateCopy(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x270EE5B58](color);
}

CGColorRef CGColorCreateCopyWithAlpha(CGColorRef color, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x270EE5B68](color, alpha);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return MEMORY[0x270EE5B98](color1, color2);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  MEMORY[0x270EE5BC0](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5BC8](color);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x270EE5BD0](color);
}

void CGColorRelease(CGColorRef color)
{
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5C60]();
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5C68]();
}

CGColorSpaceRef CGColorSpaceCreateICCBased(size_t nComponents, const CGFloat *range, CGDataProviderRef profile, CGColorSpaceRef alternate)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5C78](nComponents, range, profile, alternate);
}

CGColorSpaceRef CGColorSpaceCreateLab(const CGFloat *whitePoint, const CGFloat *blackPoint, const CGFloat *range)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5C88](whitePoint, blackPoint, range);
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x270EE5D08](space);
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x270EE62E0](info, data, size, releaseData);
}

void CGDataProviderRelease(CGDataProviderRef provider)
{
}

CGImageRef CGImageCreateCopyWithColorSpace(CGImageRef image, CGColorSpaceRef space)
{
  return (CGImageRef)MEMORY[0x270EE6748](image, space);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x270EE6800](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x270EE6868](image);
}

void CGImageRelease(CGImageRef image)
{
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x270EE7170]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x270EE71C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x270EE71D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x270EE71D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x270EE71F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x270EE7228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.CGFloat y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return MEMORY[0x270EE7348]((__n128)size1, *(__n128 *)&size1.height, (__n128)size2, *(__n128 *)&size2.height);
}

CGFontRef CTFontCopyGraphicsFont(CTFontRef font, CTFontDescriptorRef *attributes)
{
  return (CGFontRef)MEMORY[0x270EE9A50](font, attributes);
}

CFDataRef CTFontCopyTable(CTFontRef font, CTFontTableTag table, CTFontTableOptions options)
{
  return (CFDataRef)MEMORY[0x270EE9A88](font, *(void *)&table, *(void *)&options);
}

CTFontRef CTFontCreateWithName(CFStringRef name, CGFloat size, const CGAffineTransform *matrix)
{
  return (CTFontRef)MEMORY[0x270EE9AF8](name, matrix, size);
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTLineRef)MEMORY[0x270EE9D70](attrString);
}

CFArrayRef CTLineGetGlyphRuns(CTLineRef line)
{
  return (CFArrayRef)MEMORY[0x270EE9DC0](line);
}

CFIndex CTRunGetGlyphCount(CTRunRef run)
{
  return MEMORY[0x270EE9E68](run);
}

void CTRunGetGlyphs(CTRunRef run, CFRange range, CGGlyph *buffer)
{
}

uint64_t MGIsDeviceOneOfType()
{
  return MEMORY[0x270F96010]();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return MEMORY[0x270F82C48]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x270F98428](this);
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

__double2 __sincos_stret(double a1)
{
  MEMORY[0x270ED7E88](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

long double atan2(long double __y, long double __x)
{
  MEMORY[0x270ED86A8](__y, __x);
  return result;
}

void bzero(void *a1, size_t a2)
{
}

long double cos(long double __x)
{
  MEMORY[0x270ED9128](__x);
  return result;
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

long double exp(long double __x)
{
  MEMORY[0x270ED9858](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

void free(void *a1)
{
}

long double log(long double __x)
{
  MEMORY[0x270EDA0A8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA388](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x270EDACF8](__x, __y);
  return result;
}

int printf(const char *a1, ...)
{
  return MEMORY[0x270EDAD20](a1);
}

long double sin(long double __x)
{
  MEMORY[0x270EDB4E8](__x);
  return result;
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x270FA0290]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}