uint64_t objectdestroy_189Tm()
{
  uint64_t vars8;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t objectdestroy_105Tm()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t keypath_get_5Tm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  long long v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

void *__swift_memcpy274_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x112uLL);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy105_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t keypath_getTm@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t keypath_getTm_0@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t keypath_getTm_1@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t keypath_getTm_2@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v1 = type metadata accessor for _CAPackageView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = v2 + *(int *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7DC38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  if (*(void *)(v0 + 104)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();
  sub_255A087D0(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_255A1D054(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(unsigned char *)(v0 + 136), *(unsigned char *)(v0 + 137));

  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = type metadata accessor for MotionPlayerView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  swift_release();
  uint64_t v4 = v2 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7D5C8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  sub_255A767C8(*(void *)(v2 + *(int *)(v1 + 24)), *(void *)(v2 + *(int *)(v1 + 24) + 8), *(unsigned char *)(v2 + *(int *)(v1 + 24) + 16));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7E8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_255A087D0(*(void *)(v0 + 80), *(unsigned char *)(v0 + 88));

  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for NowPlayingArtworkBackground();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_255C7D5C8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v2 + 40), v1);
  uint64_t v7 = v4 + *(int *)(v2 + 48);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for Scrubber();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  swift_release();
  swift_release();
  j_j__swift_release(*(void *)(v3 + 16), *(unsigned __int8 *)(v3 + 24));
  uint64_t v4 = v3 + v2[10];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_255A087D0(*(void *)(v3 + v2[11]), *(unsigned char *)(v3 + v2[11] + 8));
  sub_255A087D0(*(void *)(v3 + v2[12]), *(unsigned char *)(v3 + v2[12] + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[17], v1);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for NowPlayingQueue() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  uint64_t v4 = v3 + v2[11];
  sub_255A1D054(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72), *(unsigned char *)(v4 + 73));
  uint64_t v5 = v3 + v2[12];
  sub_255AB8EB0(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = type metadata accessor for ArtworkCornerModifier(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_255A087D0(*(void *)v2, *(unsigned char *)(v2 + 8));
  if (*(unsigned char *)(v2 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  }
  else {
    swift_release();
  }
  sub_255A087D0(*(void *)(v2 + 64), *(unsigned char *)(v2 + 72));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 36);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v5 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  uint64_t v1 = (int *)(type metadata accessor for DraggableViewModifier(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_255ABFD64(*(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(unsigned char *)(v2 + 96));
  uint64_t v3 = v2 + v1[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7E398();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ToastView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  if (*(void *)(v3 + *(int *)(v2 + 36))) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  sub_255A087D0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = (int *)(type metadata accessor for ParallaxHeader() - 8);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v3[19], v1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v4 + v3[20], v2);
  (*(void (**)(uint64_t))(*(void *)(v6 - 8) + 8))(v4 + v3[21]);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16()
{
  uint64_t v1 = sub_255C7EF28();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v6 + *(int *)(v5 + 20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA18();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_17()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_18()
{
  swift_release();
  sub_255AB8EB0(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *__n128 result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)__n128 result = v2;
  return result;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

__n128 __swift_memcpy106_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 90) = *(long long *)((char *)a2 + 90);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

char *keypath_get_selector_status()
{
  return sel_status;
}

char *keypath_get_selector_selectedIndex()
{
  return sel_selectedIndex;
}

uint64_t get_witness_table_11MediaCoreUI20NowPlayingControllerRzlqd0__05SwiftC04ViewHD3_AcDPACE11hoverEffect_9isEnabledQrqd___SbtAC011CustomHoverJ0Rd__lFQOyAC15ModifiedContentVyAJyAeCE11buttonStyleyQrqd__AC06ButtonR0Rd__lFQOyAC0S0VyAA09CAPackageH0VG_AA09TransportsR033_855B558EBF42837AEC5F9AECC17AAF2ALLVQo_AC31AccessibilityAttachmentModifierVGAC01_P17ShapeKindModifierVyAC6CircleV6_InsetVGG_AC09AutomaticnJ0VQo_HOTm(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t objectdestroy_108Tm()
{
  swift_release();
  swift_release();
  sub_255A087D0(*(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  if (*(unsigned char *)(v0 + 120))
  {
    if (*(void *)(v0 + 104)) {
      __swift_destroy_boxed_opaque_existential_0(v0 + 80);
    }
  }
  else
  {
    swift_release();
  }
  sub_255A525AC(*(void *)(v0 + 128), *(unsigned char *)(v0 + 136));

  return swift_deallocObject();
}

char *keypath_get_selector_currentItem()
{
  return sel_currentItem;
}

char *keypath_get_selector_contentOffset()
{
  return sel_contentOffset;
}

char *keypath_get_selector_timeControlStatus()
{
  return sel_timeControlStatus;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

char *keypath_get_selector_safeAreaInsets()
{
  return sel_safeAreaInsets;
}

uint64_t objectdestroy_52Tm()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

char *keypath_get_selector_selectedViewController()
{
  return sel_selectedViewController;
}

uint64_t objectdestroy_63Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

char *keypath_get_selector_motionMode()
{
  return sel_motionMode;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t MCUINamespace<A>.debugDimensionLineColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255A05810(a1, a2);
}

uint64_t sub_255A057A4()
{
  return sub_255A05954((void (*)(void))sub_255A083C0);
}

uint64_t sub_255A057C4@<X0>(void *a1@<X8>)
{
  return sub_255A059BC((void (*)(void))sub_255A083C0, a1);
}

uint64_t sub_255A057E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A05A38(a1, a2, a3, a4, (void (*)(void))sub_255A083C0);
}

uint64_t MCUINamespace<A>.debugDimensionLabelColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255A05810(a1, a2);
}

uint64_t sub_255A05810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  long long v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  swift_getKeyPath();
  v9[1] = a1;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255A05934()
{
  return sub_255A05954((void (*)(void))sub_255A0836C);
}

uint64_t sub_255A05954(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

uint64_t sub_255A0599C@<X0>(void *a1@<X8>)
{
  return sub_255A059BC((void (*)(void))sub_255A0836C, a1);
}

uint64_t sub_255A059BC@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t sub_255A05A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A05A38(a1, a2, a3, a4, (void (*)(void))sub_255A0836C);
}

uint64_t sub_255A05A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_255C7E8D8();
}

uint64_t sub_255A05A9C()
{
  return swift_getWitnessTable();
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
}

void type metadata accessor for OSThermalPressureLevel(uint64_t a1)
{
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
}

void *__swift_memcpy368_16(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t sub_255A05B7C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 368)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255A05B9C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 368) = v3;
  return result;
}

void type metadata accessor for Uniforms(uint64_t a1)
{
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
}

__n128 __swift_memcpy80_4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_255A05C6C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255A05C8C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

void type metadata accessor for CAColorMatrix(uint64_t a1)
{
}

uint64_t sub_255A05CE0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_255A05D24(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = 0;
    }
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_255A05D90(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)(a1 + 8)) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_255A05DD4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

void type metadata accessor for AudioQueueBuffer(uint64_t a1)
{
}

void type metadata accessor for UIAccessibilityContrast(uint64_t a1)
{
}

void type metadata accessor for CACornerMask(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for MPCScriptedLooperStatus(uint64_t a1)
{
}

void type metadata accessor for Status(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for UIOffset(uint64_t a1)
{
}

uint64_t sub_255A05EC0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_255A05F28(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255A05F48(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for CAFrameRateRange(uint64_t a1)
{
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
}

void type metadata accessor for CIImageOption(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
}

uint64_t sub_255A05FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F208F8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20900);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_255C7E928();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20908);
  sub_255A061A0(v1, &v5[*(int *)(v10 + 44)]);
  char v11 = *(unsigned char *)(v1 + 16);
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_255AB9568(v12, v11);
  swift_release();
  sub_255A09540((uint64_t)v5, (uint64_t)v9, &qword_269F208F8);
  *(void *)&v9[*(int *)(v7 + 44)] = v13;
  sub_255A095A4((uint64_t)v5, &qword_269F208F8);
  sub_255C801F8();
  sub_255C7DFE8();
  sub_255A09540((uint64_t)v9, a1, &qword_269F20900);
  v14 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F20910) + 36));
  long long v15 = v17[1];
  _OWORD *v14 = v17[0];
  v14[1] = v15;
  v14[2] = v17[2];
  return sub_255A095A4((uint64_t)v9, &qword_269F20900);
}

uint64_t sub_255A061A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v99 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v3 - 8);
  v97 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F240) - 8;
  MEMORY[0x270FA5388](v89);
  uint64_t v88 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_255C7E518() - 8;
  MEMORY[0x270FA5388](v86);
  v85 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20918) - 8;
  MEMORY[0x270FA5388](v87);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F20920) - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v92);
  uint64_t v90 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v91 = (uint64_t)&v79 - v11;
  uint64_t v12 = *(void *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 48);
  sub_255A0877C(v12, v13);
  int v98 = sub_255AB9768(v12, v13);
  sub_255A087D0(v12, v13);
  sub_255A0877C(v12, v13);
  sub_255AB9768(v12, v13);
  sub_255A087D0(v12, v13);
  sub_255C7DDD8();
  uint64_t v93 = v116;
  uint64_t v94 = v119;
  uint64_t v95 = v120;
  uint64_t v96 = v118;
  double v14 = *(double *)a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29FD00);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_255C83400;
  *(void *)(v15 + 56) = MEMORY[0x263F8EF38];
  *(void *)(v15 + 64) = sub_255A092B4();
  *(double *)(v15 + 32) = round(v14 * 10.0) / 10.0;
  uint64_t v16 = sub_255C80638();
  uint64_t v82 = v17;
  uint64_t v83 = v16;
  uint64_t KeyPath = swift_getKeyPath();
  int v81 = sub_255C7F1F8();
  sub_255C7DC08();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  int v80 = sub_255C7F188();
  sub_255C7DC08();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v103 = 0;
  char v102 = 0;
  char v101 = 0;
  char v100 = 0;
  char v34 = *(unsigned char *)(a1 + 32);
  uint64_t v35 = swift_retain();
  uint64_t v79 = sub_255AB9568(v35, v34);
  swift_release();
  char v36 = v103;
  char v37 = v102;
  LOBYTE(v15) = v101;
  char v38 = v100;
  LOBYTE(a1) = *(unsigned char *)(a1 + 16);
  uint64_t v39 = swift_retain();
  uint64_t v40 = sub_255AB9568(v39, a1);
  swift_release();
  char v41 = sub_255C7F198();
  *(void *)&long long v104 = v83;
  *((void *)&v104 + 1) = v82;
  LOBYTE(v105) = v36;
  *((void *)&v105 + 1) = MEMORY[0x263F8EE78];
  LOWORD(v106) = 257;
  *((void *)&v106 + 1) = KeyPath;
  *(void *)&long long v107 = 1;
  BYTE8(v107) = v37;
  LOBYTE(v108) = v81;
  *((void *)&v108 + 1) = v19;
  *(void *)&long long v109 = v21;
  *((void *)&v109 + 1) = v23;
  *(void *)&long long v110 = v25;
  BYTE8(v110) = v15;
  LOBYTE(v111) = v80;
  *((void *)&v111 + 1) = v27;
  *(void *)&long long v112 = v29;
  *((void *)&v112 + 1) = v31;
  *(void *)&long long v113 = v33;
  BYTE8(v113) = v38;
  *(void *)&long long v114 = v79;
  *((void *)&v114 + 1) = v40;
  char v115 = v41;
  v42 = v85;
  v43 = &v85[*(int *)(v86 + 28)];
  uint64_t v44 = *MEMORY[0x263F19860];
  uint64_t v45 = sub_255C7E988();
  uint64_t v46 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104))(v43, v44, v45);
  __asm { FMOV            V0.2D, #4.0 }
  _OWORD *v42 = _Q0;
  uint64_t v52 = v88;
  sub_255A09310((uint64_t)v42, v88);
  *(_WORD *)(v52 + *(int *)(v89 + 44)) = 256;
  sub_255A09540(v52, (uint64_t)&v8[*(int *)(v87 + 44)], (uint64_t *)&unk_26B29F240);
  long long v53 = v113;
  *((_OWORD *)v8 + 8) = v112;
  *((_OWORD *)v8 + 9) = v53;
  *((_OWORD *)v8 + 10) = v114;
  v8[176] = v115;
  long long v54 = v109;
  *((_OWORD *)v8 + 4) = v108;
  *((_OWORD *)v8 + 5) = v54;
  long long v55 = v111;
  *((_OWORD *)v8 + 6) = v110;
  *((_OWORD *)v8 + 7) = v55;
  long long v56 = v105;
  *(_OWORD *)uint64_t v8 = v104;
  *((_OWORD *)v8 + 1) = v56;
  long long v57 = v107;
  *((_OWORD *)v8 + 2) = v106;
  *((_OWORD *)v8 + 3) = v57;
  sub_255A09374((uint64_t)&v104);
  sub_255A095A4(v52, (uint64_t *)&unk_26B29F240);
  sub_255A093F4((uint64_t)v42);
  sub_255A09450((uint64_t)&v104);
  uint64_t v58 = sub_255C7F258();
  uint64_t v59 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v97, 1, 1, v58);
  uint64_t v60 = sub_255C7F2A8();
  sub_255A095A4(v59, &qword_26B29BD88);
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = v90;
  sub_255A09540((uint64_t)v8, v90, &qword_269F20918);
  v63 = (uint64_t *)(v62 + *(int *)(v92 + 44));
  uint64_t *v63 = v61;
  v63[1] = v60;
  sub_255A095A4((uint64_t)v8, &qword_269F20918);
  uint64_t v64 = v91;
  sub_255A094D8(v62, v91);
  sub_255A0877C(v12, v13);
  LOBYTE(v60) = sub_255AB9768(v12, v13);
  sub_255A087D0(v12, v13);
  sub_255A0877C(v12, v13);
  sub_255AB9768(v12, v13);
  sub_255A087D0(v12, v13);
  sub_255C7DDD8();
  uint64_t v65 = v121;
  uint64_t v66 = v123;
  uint64_t v67 = v124;
  uint64_t v68 = v125;
  sub_255C80378();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  sub_255A09540(v64, v62, (uint64_t *)&unk_269F20920);
  v73 = v99;
  unsigned char *v99 = v98;
  v73[1] = v93;
  v73[2] = v46;
  v73[3] = v96;
  v73[4] = v94;
  v73[5] = v95;
  v74 = v73;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20938);
  sub_255A09540(v62, (uint64_t)v74 + *(int *)(v75 + 48), (uint64_t *)&unk_269F20920);
  v76 = (char *)v74 + *(int *)(v75 + 64);
  char *v76 = v60;
  uint64_t v77 = v122;
  *((void *)v76 + 1) = v65;
  *((void *)v76 + 2) = v77;
  *((void *)v76 + 3) = v66;
  *((void *)v76 + 4) = v67;
  *((void *)v76 + 5) = v68;
  *((_OWORD *)v76 + 3) = xmmword_255C83410;
  *((void *)v76 + 8) = v70;
  *((void *)v76 + 9) = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255A095A4(v64, (uint64_t *)&unk_269F20920);
  swift_bridgeObjectRelease();
  sub_255A095A4(v62, (uint64_t *)&unk_269F20920);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255A06914(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, char a6)
{
  CGRectGetMinX(*(CGRect *)&a1);
  if (a6)
  {
    if (a6 != 1) {
      goto LABEL_6;
    }
    v12.origin.x = a1;
    v12.origin.y = a2;
    v12.size.width = a3;
    v12.size.height = a4;
    CGRectGetMinX(v12);
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    CGRectGetMinY(v13);
    sub_255C7F3A8();
    v14.origin.x = a1;
    v14.origin.y = a2;
    v14.size.width = a3;
    v14.size.height = a4;
    CGRectGetMinX(v14);
    v15.origin.x = a1;
    v15.origin.y = a2;
    v15.size.width = a3;
    v15.size.height = a4;
    CGRectGetMaxY(v15);
  }
  else
  {
    v16.origin.x = a1;
    v16.origin.y = a2;
    v16.size.width = a3;
    v16.size.height = a4;
    CGRectGetMidY(v16);
    sub_255C7F3A8();
    v17.origin.x = a1;
    v17.origin.y = a2;
    v17.size.width = a3;
    v17.size.height = a4;
    CGRectGetHeight(v17);
    v18.origin.x = a1;
    v18.origin.y = a2;
    v18.size.width = a3;
    v18.size.height = a4;
    CGRectGetMinY(v18);
    v19.origin.x = a1;
    v19.origin.y = a2;
    v19.size.width = a3;
    v19.size.height = a4;
    CGRectGetHeight(v19);
  }
  sub_255C7F3C8();
LABEL_6:
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetMidY(v20);
  sub_255C7F3A8();
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetMaxX(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetMidY(v22);
  uint64_t result = sub_255C7F3C8();
  if (!a6)
  {
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMidY(v23);
    sub_255C7F3A8();
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetHeight(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMaxY(v25);
    v26.origin.x = a1;
    v26.origin.y = a2;
    v26.size.width = a3;
    v26.size.height = a4;
    CGRectGetHeight(v26);
    return sub_255C7F3C8();
  }
  return result;
}

double sub_255A06B54@<D0>(uint64_t a1@<X8>)
{
  sub_255C7F3F8();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_255A06BC8()
{
  return MEMORY[0x270F047C8]();
}

void (*sub_255A06BE0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_255C7DBC8();
  return sub_255A06C50;
}

void sub_255A06C50(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_255A06C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255A09BCC();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_255A06D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255A09BCC();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_255A06D64(uint64_t a1)
{
  unint64_t v2 = sub_255A09BCC();

  return MEMORY[0x270F047E0](a1, v2);
}

uint64_t sub_255A06DB8()
{
  return sub_255C7F778();
}

uint64_t sub_255A06DD4@<X0>(uint64_t a1@<X8>)
{
  return sub_255A05FEC(a1);
}

BOOL sub_255A06E18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s11MediaCoreUI13DeviceMetricsV9SizeClassO9hashValueSivg_0()
{
  return sub_255C815B8();
}

uint64_t sub_255A06E74()
{
  return sub_255C81588();
}

uint64_t sub_255A06EA0()
{
  return sub_255C815B8();
}

uint64_t sub_255A06EE4()
{
  uint64_t result = sub_255C7FC98();
  qword_269F1FD18 = result;
  return result;
}

uint64_t sub_255A06F04@<X0>(void *a1@<X8>)
{
  return sub_255A06F6C(&qword_269F1FD10, &qword_269F1FD18, a1);
}

uint64_t sub_255A06F28()
{
  uint64_t result = sub_255C7FC68();
  qword_269F1FD28 = result;
  return result;
}

uint64_t sub_255A06F48@<X0>(void *a1@<X8>)
{
  return sub_255A06F6C(&qword_269F1FD20, &qword_269F1FD28, a1);
}

uint64_t sub_255A06F6C@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_retain();
}

uint64_t sub_255A06FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A09260();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

void sub_255A07028(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_255A07034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A08C90();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255A07098()
{
  sub_255A08044();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255A070D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    char v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_255A0712C(uint64_t a1, uint64_t a2)
{
  return sub_255A0819C(a1, a2, MEMORY[0x263F07B58]);
}

void *sub_255A07150@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_255A07164(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_255A07194(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_255A071A8(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_255A071BC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_255A071D0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

void *sub_255A071E4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_255A071F4(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_255A071FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_255A07214@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_255A07228@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_255A0723C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_255A07268@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_255A0728C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_255A072A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_255A072B4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_255A072C8()
{
  return *v0 == 0;
}

void *sub_255A072D8(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_255A072EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

id sub_255A07300()
{
  return *v0;
}

uint64_t sub_255A07308@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_255A07310(uint64_t a1, uint64_t a2)
{
  return sub_255A0819C(a1, a2, MEMORY[0x263F8D308]);
}

void sub_255A07328(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_255A07334(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_255A07348(uint64_t a1, id *a2)
{
  uint64_t result = sub_255C80608();
  *a2 = 0;
  return result;
}

uint64_t sub_255A073C0(uint64_t a1, id *a2)
{
  char v3 = sub_255C80618();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_255A07440@<X0>(uint64_t *a1@<X8>)
{
  sub_255C80628();
  uint64_t v2 = sub_255C805F8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_255A07484(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_255A07498@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_255A08334(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_255A074D8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_255A074E8()
{
  return sub_255C80628();
}

uint64_t sub_255A074F8(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_255A07564(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_255A075D0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_255A07660()
{
  id v1 = *v0;
  uint64_t v2 = sub_255C80DE8();

  return v2;
}

uint64_t sub_255A07698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_255A07714()
{
  return sub_255C815B8();
}

_DWORD *sub_255A07774@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_255A07788(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00(&qword_269F208C8, type metadata accessor for Name);
  uint64_t v3 = sub_255A07D00(&qword_269F208D0, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255A07844(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00(&qword_269F209B8, type metadata accessor for Key);
  uint64_t v3 = sub_255A07D00(&qword_269F209C0, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255A07900(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00(&qword_269F20878, type metadata accessor for AVError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_255A0796C(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00(&qword_269F20878, type metadata accessor for AVError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_255A079DC(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);

  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_255A07A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_255A07ACC(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00((unint64_t *)&qword_26B29FC90, type metadata accessor for Option);
  uint64_t v3 = sub_255A07D00(&qword_269F208F0, type metadata accessor for Option);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255A07B88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C80628();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_255A07BB4(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00((unint64_t *)&unk_26B29F0E0, type metadata accessor for CIImageOption);
  uint64_t v3 = sub_255A07D00(&qword_269F20788, type metadata accessor for CIImageOption);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255A07C70()
{
  return sub_255A07D00(&qword_269F20718, type metadata accessor for CIImageOption);
}

uint64_t sub_255A07CB8()
{
  return sub_255A07D00(&qword_269F20720, type metadata accessor for CIImageOption);
}

uint64_t sub_255A07D00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A07D48(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00(&qword_269F20770, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_255A07D00((unint64_t *)&unk_269F20778, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255A07E04()
{
  return sub_255A07D00(&qword_269F20728, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_255A07E4C()
{
  return sub_255A07D00(&qword_269F20730, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_255A07E94()
{
  return sub_255A07D00(&qword_269F20738, type metadata accessor for CACornerMask);
}

uint64_t sub_255A07EDC()
{
  return sub_255A07D00(&qword_269F20740, type metadata accessor for CACornerMask);
}

uint64_t sub_255A07F24()
{
  return sub_255A07D00(&qword_269F20748, type metadata accessor for CACornerMask);
}

uint64_t sub_255A07F6C()
{
  return sub_255A07D00(&qword_269F20750, type metadata accessor for CACornerMask);
}

uint64_t sub_255A07FB4()
{
  return sub_255A07D00((unint64_t *)&unk_269F20758, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_255A07FFC()
{
  return sub_255A07D00(&qword_26B29F0F0, type metadata accessor for CIImageOption);
}

unint64_t sub_255A08044()
{
  unint64_t result = qword_269F20768;
  if (!qword_269F20768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20768);
  }
  return result;
}

uint64_t sub_255A08098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_255C805F8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_255A080E0(uint64_t a1)
{
  uint64_t v2 = sub_255A07D00(&qword_269F208D8, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_255A07D00((unint64_t *)&unk_269F208E0, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255A0819C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_255C80628();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_255A081E0()
{
  sub_255C80628();
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255A08234()
{
  sub_255C80628();
  sub_255C81578();
  sub_255C806B8();
  uint64_t v0 = sub_255C815B8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_255A082A8()
{
  uint64_t v0 = sub_255C80628();
  uint64_t v2 = v1;
  if (v0 == sub_255C80628() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_255C81428();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_255A08334(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_255A0836C()
{
  unint64_t result = qword_269F20790;
  if (!qword_269F20790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20790);
  }
  return result;
}

unint64_t sub_255A083C0()
{
  unint64_t result = qword_269F20798;
  if (!qword_269F20798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20798);
  }
  return result;
}

ValueMetadata *type metadata accessor for LineColor()
{
  return &type metadata for LineColor;
}

ValueMetadata *type metadata accessor for LabelColorKey()
{
  return &type metadata for LabelColorKey;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_255A08458(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255A08478(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
}

void type metadata accessor for IOSurfaceRef(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_255A08514(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255A08534(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

void type metadata accessor for CAMeshVertex(uint64_t a1)
{
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_255A08588(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void type metadata accessor for CAMeshFace(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WaveformTheme.ArtworkTreatment(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WaveformTheme.ArtworkTreatment(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t _s17TimeControlActionOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s17TimeControlActionOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for AVError(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
}

void type metadata accessor for Option(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for ArrowStyleKey()
{
  return &type metadata for ArrowStyleKey;
}

uint64_t sub_255A08728(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_255A08730(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionArrowStyle()
{
  return &type metadata for DebugDimensionArrowStyle;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugDimensionText(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_255A0877C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for DebugDimensionText(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return sub_255A087D0(v2, v3);
}

uint64_t sub_255A087D0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DebugDimensionText(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  char v5 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  char v7 = *(unsigned char *)(a2 + 48);
  swift_retain();
  swift_retain();
  sub_255A0877C(v6, v7);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugDimensionText(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(v2 + 32);
  *(void *)(a1 + 24) = *(void *)(v2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(v2 + 40);
  LOBYTE(v2) = *(unsigned char *)(v2 + 48);
  sub_255A0877C(v6, v2);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v2;
  sub_255A087D0(v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugDimensionText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  swift_release();
  char v6 = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v6;
  sub_255A087D0(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugDimensionText(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugDimensionText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionText()
{
  return &type metadata for DebugDimensionText;
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
}

__n128 __swift_memcpy80_16(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void type metadata accessor for Model(uint64_t a1)
{
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Vertex(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Vertex(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for WaveformSize(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WaveformSize(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for AudioStreamPacketDescription(uint64_t a1)
{
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
}

uint64_t sub_255A08B50()
{
  return sub_255A07D00(&qword_269F20800, type metadata accessor for UIRectCorner);
}

uint64_t sub_255A08B98()
{
  return sub_255A07D00(&qword_269F20808, type metadata accessor for UIRectCorner);
}

uint64_t sub_255A08BE0()
{
  return sub_255A07D00(&qword_269F20810, type metadata accessor for UIRectCorner);
}

uint64_t sub_255A08C28()
{
  return sub_255A07D00(&qword_269F20818, type metadata accessor for UIRectCorner);
}

uint64_t sub_255A08C70()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A08C90()
{
  unint64_t result = qword_269F20820;
  if (!qword_269F20820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20820);
  }
  return result;
}

uint64_t sub_255A08CE4()
{
  return sub_255A07D00(&qword_269F20828, type metadata accessor for Option);
}

uint64_t sub_255A08D2C()
{
  return sub_255A07D00(&qword_269F20830, type metadata accessor for Option);
}

uint64_t sub_255A08D74()
{
  return sub_255A07D00(&qword_269F20838, type metadata accessor for AVError);
}

uint64_t sub_255A08DBC()
{
  return sub_255A07D00(&qword_269F20840, type metadata accessor for AVError);
}

uint64_t sub_255A08E04()
{
  return sub_255A07D00(&qword_269F20848, type metadata accessor for URLResourceKey);
}

uint64_t sub_255A08E4C()
{
  return sub_255A07D00(&qword_269F20850, type metadata accessor for URLResourceKey);
}

uint64_t sub_255A08E94()
{
  return sub_255A07D00(&qword_269F20858, type metadata accessor for Name);
}

uint64_t sub_255A08EDC()
{
  return sub_255A07D00(&qword_269F20860, type metadata accessor for Name);
}

uint64_t sub_255A08F24()
{
  return sub_255A07D00(&qword_269F20868, type metadata accessor for Name);
}

uint64_t sub_255A08F6C()
{
  return sub_255A07D00(&qword_269F20870, type metadata accessor for URLResourceKey);
}

uint64_t sub_255A08FB4()
{
  return sub_255A07D00(&qword_269F20878, type metadata accessor for AVError);
}

uint64_t sub_255A08FFC()
{
  return sub_255A07D00(&qword_269F20880, type metadata accessor for AVError);
}

uint64_t sub_255A09044()
{
  return sub_255A07D00(&qword_269F20888, type metadata accessor for AVError);
}

uint64_t sub_255A0908C()
{
  return sub_255A07D00(&qword_269F20890, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_255A090E8()
{
  return sub_255A07D00(&qword_269F20898, type metadata accessor for Code);
}

unint64_t sub_255A09134()
{
  unint64_t result = qword_269F208A0;
  if (!qword_269F208A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F208A0);
  }
  return result;
}

uint64_t sub_255A09188()
{
  return sub_255A07D00(&qword_269F208A8, type metadata accessor for Code);
}

uint64_t sub_255A091D0()
{
  return sub_255A07D00((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);
}

uint64_t sub_255A09218()
{
  return sub_255A07D00(&qword_26B29FC98, type metadata accessor for Option);
}

unint64_t sub_255A09260()
{
  unint64_t result = qword_269F208C0;
  if (!qword_269F208C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F208C0);
  }
  return result;
}

unint64_t sub_255A092B4()
{
  unint64_t result = qword_269F20930;
  if (!qword_269F20930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20930);
  }
  return result;
}

uint64_t sub_255A09310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7E518();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A09374(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A093E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_255A093F4(uint64_t a1)
{
  uint64_t v2 = sub_255C7E518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A09450(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A094C0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_255A094D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F20920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A09540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255A095A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for DeviceMetrics.Layout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11MediaCoreUI24DebugDimensionArrowStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A09770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionText.ArrowLine()
{
  return &type metadata for DebugDimensionText.ArrowLine;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for CAPoint3D(uint64_t a1)
{
}

void sub_255A097D0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_255A0981C()
{
  unint64_t result = qword_269F20960;
  if (!qword_269F20960)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20910);
    sub_255A09898();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20960);
  }
  return result;
}

unint64_t sub_255A09898()
{
  unint64_t result = qword_269F20968;
  if (!qword_269F20968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20900);
    sub_255A09998(&qword_269F20970, &qword_269F208F8);
    sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20968);
  }
  return result;
}

uint64_t sub_255A0995C()
{
  return sub_255A09998(&qword_269F20978, (uint64_t *)&unk_269F20980);
}

uint64_t sub_255A09998(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255A099E0()
{
  unint64_t result = qword_269F24300;
  if (!qword_269F24300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24300);
  }
  return result;
}

unint64_t sub_255A09A38()
{
  unint64_t result = qword_269F20990;
  if (!qword_269F20990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20990);
  }
  return result;
}

unint64_t sub_255A09A90()
{
  unint64_t result = qword_269F20998;
  if (!qword_269F20998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20998);
  }
  return result;
}

uint64_t sub_255A09AE4()
{
  return sub_255A07D00(&qword_269F209A0, type metadata accessor for Key);
}

uint64_t sub_255A09B2C()
{
  return sub_255A07D00(&qword_269F209A8, type metadata accessor for Key);
}

uint64_t sub_255A09B74()
{
  return sub_255A07D00(&qword_269F209B0, type metadata accessor for Key);
}

uint64_t sub_255A09BBC(uint64_t a1)
{
  return sub_255A06914(*(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), a1, *(unsigned char *)(v1 + 48));
}

unint64_t sub_255A09BCC()
{
  unint64_t result = qword_269F209C8;
  if (!qword_269F209C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F209C8);
  }
  return result;
}

uint64_t sub_255A09CA4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  sub_255C7FFF8();
  return v1;
}

uint64_t sub_255A09CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v18[2] = a1;
  v18[3] = a3;
  swift_getWitnessTable();
  sub_255C7EC98();
  uint64_t v5 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20AC0);
  sub_255C7E458();
  uint64_t v24 = *(void *)(a2 + 24);
  uint64_t v6 = v24;
  uint64_t v25 = sub_255A09998(qword_269F20C68, &qword_269F20AC0);
  v18[1] = MEMORY[0x263F18E48];
  swift_getWitnessTable();
  type metadata accessor for Popover();
  sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v23 = sub_255A101A0();
  swift_getWitnessTable();
  v18[0] = sub_255C7EBB8();
  uint64_t v7 = sub_255C7E458();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  CGRect v13 = (char *)v18 - v12;
  v18[6] = v5;
  v18[7] = v6;
  uint64_t v19 = v3;
  sub_255C801F8();
  uint64_t v14 = swift_getWitnessTable();
  sub_255C7F588();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v20 = v14;
  uint64_t v21 = v15;
  swift_getWitnessTable();
  sub_255A20F54(v11);
  CGRect v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  sub_255A20F54(v13);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_255A0A004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255A09CA4();
  uint64_t v23 = v7;
  uint64_t v24 = v6;
  char v22 = v8;
  uint64_t v29 = *(void *)(a1 + 24);
  char v27 = *(unsigned char *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v25 = *(void **)(a1 + 48);
  uint64_t v26 = *(void *)(a1 + 72);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  long long v14 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v13 + 112) = v14;
  *(void *)(v13 + 128) = *(void *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 80) = v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20AC0);
  sub_255C7E458();
  uint64_t v40 = a3;
  uint64_t v41 = sub_255A09998(qword_269F20C68, &qword_269F20AC0);
  swift_getWitnessTable();
  *(void *)&long long v60 = v24;
  *((void *)&v60 + 1) = v23;
  LOBYTE(v61) = v22 & 1;
  *((void *)&v61 + 1) = v29;
  LOBYTE(v62) = v27;
  *((void *)&v62 + 1) = v9;
  *(void *)&long long v63 = v25;
  *((void *)&v63 + 1) = v10;
  *(void *)&long long v64 = v11;
  *((void *)&v64 + 1) = v26;
  *(void *)&long long v65 = v12;
  *((void *)&v65 + 1) = sub_255A10204;
  uint64_t v66 = v13;
  long long v56 = v64;
  long long v57 = v65;
  uint64_t v58 = v13;
  long long v52 = v60;
  long long v53 = v61;
  long long v54 = v62;
  long long v55 = v63;
  id v17 = v25;
  swift_bridgeObjectRetain();
  sub_255A0DE10(v10);
  sub_255A0DE10(v26);
  sub_255A10210(a1);
  type metadata accessor for Popover();
  swift_getWitnessTable();
  sub_255C7F7E8();
  sub_255A102A4(&v60);
  long long v18 = v47;
  uint64_t v28 = *((void *)&v48 + 1);
  long long v30 = v42;
  char v31 = v43;
  uint64_t v32 = v44;
  char v33 = v45;
  uint64_t v34 = v46;
  long long v35 = v47;
  long long v36 = v48;
  long long v37 = v49;
  uint64_t v38 = v50;
  char v39 = v51;
  sub_255C7E458();
  sub_255A101A0();
  swift_getWitnessTable();
  sub_255A20F54(&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_255A0DE20(*((uint64_t *)&v18 + 1));
  sub_255A0DE20(v28);
  swift_release();
  long long v19 = v55;
  uint64_t v20 = *((void *)&v56 + 1);
  long long v42 = v52;
  char v43 = v53;
  uint64_t v44 = *((void *)&v53 + 1);
  char v45 = v54;
  uint64_t v46 = *((void *)&v54 + 1);
  long long v47 = v55;
  long long v48 = v56;
  long long v49 = v57;
  uint64_t v50 = v58;
  char v51 = v59;
  sub_255A20F54(&v42);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_255A0DE20(*((uint64_t *)&v19 + 1));
  sub_255A0DE20(v20);
  return swift_release();
}

uint64_t sub_255A0A384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v25[1] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20AC0);
  uint64_t v13 = sub_255C7E458();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v25 - v19;
  (*(void (**)(uint64_t))(a1 + 88))(v18);
  swift_getKeyPath();
  uint64_t v21 = sub_255C801A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
  sub_255C7F678();
  swift_release();
  sub_255A095A4((uint64_t)v10, &qword_269F20AB0);
  (*(void (**)(char *, uint64_t))(v25[0] + 8))(v12, a2);
  uint64_t v22 = sub_255A09998(qword_269F20C68, &qword_269F20AC0);
  v25[2] = a3;
  v25[3] = v22;
  swift_getWitnessTable();
  sub_255A20F54(v17);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v13);
  sub_255A20F54(v20);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v13);
}

uint64_t sub_255A0A68C()
{
  return sub_255C7E8C8();
}

uint64_t sub_255A0A6CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_255A0C058(a1, (uint64_t)&v9 - v6);
  sub_255A0C058((uint64_t)v7, (uint64_t)v5);
  sub_255A1058C();
  sub_255C7E8D8();
  return sub_255A095A4((uint64_t)v7, &qword_269F20AB0);
}

uint64_t sub_255A0A7B8()
{
  return sub_255C7DF98();
}

uint64_t sub_255A0A7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_255A09CF8(a1, a2, a3);
}

uint64_t sub_255A0A820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v32 - v9;
  uint64_t v40 = *(void *)(v8 + 24);
  uint64_t v10 = sub_255C7DC48();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v33 = (char *)&v32 - v14;
  uint64_t v15 = sub_255C7EA38();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_255C7EBE8();
  uint64_t v38 = *(void *)(v19 - 8);
  uint64_t v39 = v19;
  MEMORY[0x270FA5388](v19);
  long long v37 = (char *)&v32 - v20;
  uint64_t v21 = v2;
  sub_255AB9974((uint64_t)v18);
  char v22 = sub_255C7EA28();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v22)
  {
    MEMORY[0x270FA5388](v23);
    uint64_t v24 = v40;
    *(&v32 - 4) = v4;
    *(&v32 - 3) = v24;
    *(&v32 - 2) = v21;
    sub_255C7F178();
    sub_255C7DC58();
    swift_getWitnessTable();
    uint64_t v25 = v33;
    sub_255A20F54(v13);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v35 + 8);
    v26(v13, v10);
    sub_255A20F54(v25);
    char v27 = v37;
    sub_255A44030((uint64_t)v13, v10);
    v26(v13, v10);
    v26(v25, v10);
  }
  else
  {
    (*(void (**)(uint64_t))(v21 + *(int *)(a1 + 36)))(v23);
    uint64_t v28 = v34;
    uint64_t v24 = v40;
    sub_255A20F54(v7);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v36 + 8);
    v29(v7, v4);
    sub_255A20F54(v28);
    swift_getWitnessTable();
    char v27 = v37;
    sub_255A44128((uint64_t)v7, v10, v4);
    v29(v7, v4);
    v29(v28, v4);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = v24;
  uint64_t v30 = v39;
  swift_getWitnessTable();
  sub_255A20F54(v27);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v27, v30);
}

uint64_t sub_255A0AD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = type metadata accessor for AXPopoverContainer();
  (*(void (**)(void))(a1 + *(int *)(v10 + 36)))();
  sub_255A20F54(v7);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, a2);
  sub_255A20F54(v9);
  return ((uint64_t (*)(char *, uint64_t))v11)(v9, a2);
}

uint64_t sub_255A0AE6C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);

  return swift_storeEnumTagMultiPayload();
}

double sub_255A0AEC8()
{
  double result = 30.0;
  xmmword_269F20A90 = xmmword_255C84BE0;
  *(_OWORD *)&qword_269F20AA0 = xmmword_255C84BF0;
  return result;
}

id sub_255A0AEE8(uint64_t a1)
{
  uint64_t v2 = (void *)v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Popover.Coordinator();
  uint64_t v7 = *(void (**)(uint64_t))(v1 + 88);
  uint64_t v8 = sub_255A10210(v1);
  v7(v8);
  id v9 = sub_255A0DC78(v1, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_255A102A4(v2);
  return v9;
}

void sub_255A0AFF8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v79 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269F20CF8);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (void *)((char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v78 = *(void *)(a3 + 24);
  uint64_t v11 = type metadata accessor for AXPopoverContainer();
  uint64_t v12 = v11 - 8;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v77 - v14;
  MEMORY[0x270FA5388](v13);
  swift_getWitnessTable();
  uint64_t v16 = sub_255C7F138();
  sub_255C7F128();
  uint64_t v17 = (void *)aBlock;
  id v18 = *(id *)(aBlock + qword_269F20AE8);

  (*(void (**)(void))(v4 + 88))();
  sub_255C7EAD8();

  v77[0] = v16;
  v77[1] = a2;
  sub_255C7F128();
  uint64_t v19 = (void *)aBlock;
  id v20 = *(id *)(aBlock + qword_269F20AE0);

  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v78;
  *(void *)(v21 + 16) = v10;
  *(void *)(v21 + 24) = v22;
  long long v23 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v21 + 112) = v23;
  *(void *)(v21 + 128) = *(void *)(v4 + 96);
  long long v24 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v21 + 48) = v24;
  long long v25 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v21 + 80) = v25;
  sub_255A0AE6C(v9);
  uint64_t v26 = (uint64_t)v9;
  char v27 = v79;
  sub_255A10514(v26, (uint64_t)v15, qword_269F20CF8);
  uint64_t v28 = (uint64_t (**)())&v15[*(int *)(v12 + 44)];
  *uint64_t v28 = sub_255A1040C;
  v28[1] = (uint64_t (*)())v21;
  sub_255A10210(v4);
  sub_255C7EAD8();

  long long aBlock = *(_OWORD *)v4;
  LOBYTE(v81) = *(unsigned char *)(v4 + 16);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  MEMORY[0x25A295850](&v86, v29);
  if (v86 == 1)
  {
    id v30 = objc_msgSend(v27, sel_presentedViewController);

    if (!v30)
    {
      sub_255C7F128();
      char v31 = (void *)aBlock;
      id v32 = *(id *)(aBlock + qword_269F20AE0);

      objc_msgSend(v32, sel_setModalPresentationStyle_, 7);
      id v33 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v33)
      {
        uint64_t v34 = v33;
        sub_255C7F128();
        uint64_t v35 = (void *)aBlock;
        objc_msgSend(v34, sel_setDelegate_, (void)aBlock);
      }
      id v36 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v36)
      {
        long long v37 = v36;
        id v38 = objc_msgSend(v27, sel_view);
        objc_msgSend(v37, sel_setSourceView_, v38);
      }
      id v39 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v39)
      {
        uint64_t v40 = v39;
        id v41 = objc_msgSend(v27, sel_view);
        if (!v41)
        {
          __break(1u);
          goto LABEL_33;
        }
        long long v42 = v41;
        objc_msgSend(v41, sel_bounds);
        double v44 = v43;
        double v46 = v45;
        double v48 = v47;
        double v50 = v49;

        objc_msgSend(v40, sel_setSourceRect_, v44, v46, v48, v50);
      }
      id v51 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v51)
      {
        long long v52 = v51;
        objc_msgSend(v51, sel_setPermittedArrowDirections_, *(void *)(v4 + 24));
      }
      id v53 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v53)
      {
        long long v54 = v53;
        sub_255A0C5E4();
        long long v55 = (void *)sub_255C807E8();
        objc_msgSend(v54, sel_setPassthroughViews_, v55);
      }
      id v56 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v56)
      {
        long long v57 = v56;
        sub_255A10514(v4 + 48, (uint64_t)v85, &qword_269F20E08);
        sub_255A10514((uint64_t)v85, (uint64_t)&v86, &qword_269F20E08);
        if (v86)
        {
          objc_msgSend(v86, sel_safeAreaInsets);
        }
        else
        {
          if (qword_269F1FD30 != -1) {
            swift_once();
          }
          double v59 = *((double *)&xmmword_269F20A90 + 1);
          double v58 = *(double *)&xmmword_269F20A90;
          double v60 = *(double *)&qword_269F20AA0;
          double v61 = unk_269F20AA8;
        }
        objc_msgSend(v57, sel_setPopoverLayoutMargins_, v58, v59, v60, v61);
      }
      uint64_t v62 = swift_allocObject();
      long long v63 = *(_OWORD *)(v4 + 80);
      *(_OWORD *)(v62 + 80) = *(_OWORD *)(v4 + 64);
      *(_OWORD *)(v62 + 96) = v63;
      uint64_t v64 = *(void *)(v4 + 96);
      long long v65 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v62 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v62 + 32) = v65;
      long long v66 = *(_OWORD *)(v4 + 48);
      *(_OWORD *)(v62 + 48) = *(_OWORD *)(v4 + 32);
      *(_OWORD *)(v62 + 64) = v66;
      *(void *)(v62 + 112) = v64;
      *(void *)(v62 + 120) = v32;
      uint64_t v83 = sub_255A104B4;
      uint64_t v84 = v62;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      int v81 = sub_255AE4914;
      uint64_t v82 = &block_descriptor_0;
      uint64_t v67 = _Block_copy(&aBlock);
      sub_255A10210(v4);
      id v68 = v32;
      swift_release();
      objc_msgSend(v27, sel_presentViewController_animated_completion_, v68, 1, v67);
      _Block_release(v67);
    }
  }
  long long aBlock = *(_OWORD *)v4;
  LOBYTE(v81) = *(unsigned char *)(v4 + 16);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  MEMORY[0x25A295850](&v87, v69);
  if ((v87 & 1) == 0)
  {
    id v70 = objc_msgSend(v27, sel_presentedViewController);
    if (v70)
    {
      uint64_t v71 = v70;
      sub_255C7F128();
      int v72 = *(unsigned __int8 *)(aBlock + qword_269F20AD8);

      if (v72 == 2 || (v72 & 1) != 0) {
        goto LABEL_30;
      }
      sub_255C7F128();
      v73 = (void *)aBlock;
      *(unsigned char *)(aBlock + qword_269F20AD8) = 1;

      v74 = *(void (**)(void))(v4 + 72);
      if (!v74)
      {
LABEL_29:
        objc_msgSend(v27, sel_dismissViewControllerAnimated_completion_, 1, 0);
LABEL_30:

        return;
      }
      id v75 = objc_msgSend(v71, sel_view);
      if (v75)
      {
        v76 = v75;
        v74();

        goto LABEL_29;
      }
LABEL_33:
      __break(1u);
    }
  }
}

void sub_255A0B72C(uint64_t a1, id a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 56);
  if (v2)
  {
    id v3 = objc_msgSend(a2, sel_view);
    if (v3)
    {
      id v4 = v3;
      v2();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_255A0B7B0()
{
  return *(unsigned __int8 *)(v0 + qword_269F20AD8);
}

uint64_t sub_255A0B7C0(uint64_t result)
{
  *(unsigned char *)(v1 + qword_269F20AD8) = result;
  return result;
}

id sub_255A0B7D0(void *a1)
{
  uint64_t v2 = v1;
  id v3 = objc_msgSend(a1, sel_sourceView);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_window);

    if (v5)
    {
      objc_msgSend(v5, sel_bounds);
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v16.origin.x = v7;
      v16.origin.y = v9;
      v16.size.width = v11;
      v16.size.height = v13;
      CGRectGetWidth(v16);
    }
  }
  uint64_t v14 = *(void **)(v2 + qword_269F20AE0);
  sub_255C7EA88();
  id result = objc_msgSend(v14, sel_setPreferredContentSize_);
  *(unsigned char *)(v2 + qword_269F20AD8) = 0;
  return result;
}

void sub_255A0B8D4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_255A0B7D0(v4);
}

void sub_255A0B93C(void *a1)
{
  *(unsigned char *)(v1 + qword_269F20AD8) = 1;
  id v3 = *(void (**)(id))(v1 + qword_269F20AF0 + 72);
  type metadata accessor for Popover();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  sub_255C7FFE8();
  if (v3)
  {
    id v4 = objc_msgSend(a1, sel_presentedViewController);
    id v5 = objc_msgSend(v4, sel_view);

    if (v5)
    {
      v3(v5);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_255A0BA60(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_255A0B93C(v4);
}

uint64_t sub_255A0BAC8()
{
  return -1;
}

uint64_t sub_255A0BAD0()
{
  return sub_255A0DCC4() & 1;
}

void sub_255A0BAF8()
{
}

id sub_255A0BB3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Popover.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_255A0BBB0(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_269F20AF0 + 48);
  uint64_t v3 = *(void *)(a1 + qword_269F20AF0 + 56);
  uint64_t v4 = *(void *)(a1 + qword_269F20AF0 + 72);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_255A0DE20(v3);
  sub_255A0DE20(v4);

  return swift_release();
}

id sub_255A0BC6C()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F82E10]);

  return objc_msgSend(v0, sel_init);
}

void sub_255A0BCA4(void *a1, uint64_t a2, uint64_t a3)
{
}

id sub_255A0BCF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_255A0AEE8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_255A0BD4C()
{
  return sub_255C7F058();
}

uint64_t sub_255A0BD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F02710](a1, a2, a3, WitnessTable);
}

uint64_t sub_255A0BE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F026D8](a1, a2, a3, WitnessTable);
}

void sub_255A0BE80()
{
}

uint64_t PopoverHostingControllerModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  MEMORY[0x270FA5388](v4 - 8);
  double v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_255C801A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  CGFloat v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB8) + 36));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AC0);
  sub_255A0C058((uint64_t)v6, (uint64_t)v9 + *(int *)(v10 + 28));
  *CGFloat v9 = KeyPath;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F20AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  return sub_255A095A4((uint64_t)v6, &qword_269F20AB0);
}

uint64_t sub_255A0C014()
{
  return sub_255C7E8C8();
}

uint64_t sub_255A0C058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A0C0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  MEMORY[0x270FA5388](v4 - 8);
  double v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_255C801A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  CGFloat v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB8) + 36));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AC0);
  sub_255A0C058((uint64_t)v6, (uint64_t)v9 + *(int *)(v10 + 28));
  *CGFloat v9 = KeyPath;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F20AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  return sub_255A095A4((uint64_t)v6, &qword_269F20AB0);
}

uint64_t sub_255A0C214()
{
  uint64_t v1 = (unsigned __int8 *)v0
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 24);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_255A0C298(char a1)
{
  uint64_t v3 = (char *)v1
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v1) + 24);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_255A0C320())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_255A0C3B8()
{
  uint64_t v1 = (unsigned __int8 *)v0
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 32);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_255A0C43C(char a1)
{
  uint64_t v3 = (char *)v1
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v1) + 32);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_255A0C4C4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_255A0C55C()
{
  id v1 = objc_msgSend(v0, sel_popoverPresentationController);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  objc_super v2 = v1;
  id v3 = objc_msgSend(v1, sel_passthroughViews);

  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  sub_255A0C5E4();
  uint64_t v4 = sub_255C807F8();

  return v4;
}

unint64_t sub_255A0C5E4()
{
  unint64_t result = qword_26B29F140;
  if (!qword_26B29F140)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B29F140);
  }
  return result;
}

void sub_255A0C624()
{
  id v1 = objc_msgSend(v0, sel_popoverPresentationController);
  if (v1)
  {
    objc_super v2 = v1;
    sub_255A0C5E4();
    id v3 = (id)sub_255C807E8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPassthroughViews_, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void (*sub_255A0C6DC(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_255A0C55C();
  return sub_255A0C724;
}

void sub_255A0C724(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_255A0C624();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_255A0C624();
  }
}

void sub_255A0C77C(id a1)
{
  id v3 = (id *)((char *)v1
            + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v1) + 40));
  swift_beginAccess();
  if (*v3)
  {
    if (a1 && *v3 == a1) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  id v4 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = *v3;
    objc_msgSend(v5, sel_setSourceView_, v6);
  }
  id v7 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v7)
  {
    uint64_t v8 = v7;
    if (*v3)
    {
      objc_msgSend(*v3, sel_frame);
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;
      double v17 = sub_255A0CCA0();
      double v19 = UIEdgeInsetsInsetRect(v10, v12, v14, v16, v17, v18);
    }
    else
    {
      double v21 = 0.0;
      double v22 = 0.0;
      double v19 = 0.0;
      double v20 = 0.0;
    }
    objc_msgSend(v8, sel_setSourceRect_, v19, v20, v21, v22);
  }
}

void *sub_255A0C914()
{
  id v0 = (void *)sub_255A0DD08();
  id v1 = v0;
  return v0;
}

void sub_255A0C940(void *a1)
{
  id v3 = (void **)((char *)v1
               + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v1) + 40));
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;
  sub_255A0C77C(v4);
}

void (*sub_255A0C9EC(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  id v4 = (void **)((char *)v1
               + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v1) + 40));
  swift_beginAccess();
  id v5 = *v4;
  v3[3] = *v4;
  id v6 = v5;
  return sub_255A0CAB0;
}

void sub_255A0CAB0(uint64_t a1, char a2)
{
  objc_super v2 = *(void **)a1;
  id v4 = (id *)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    sub_255A0C940(v3);
  }
  else
  {
    sub_255A0C940(*(void **)(*(void *)a1 + 24));
  }

  free(v2);
}

void sub_255A0CB1C(double a1, double a2, double a3, double a4)
{
  double v9 = (void *)MEMORY[0x263F8EED0];
  double v10 = (double *)((char *)v4
                 + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v4) + 48));
  swift_beginAccess();
  double v11 = v10[1];
  double v12 = v10[2];
  double v13 = v10[3];
  if (*v10 != a1 || v11 != a2 || v12 != a3 || v13 != a4)
  {
    id v17 = objc_msgSend(v4, sel_popoverPresentationController, *v10, v11, v12, v13);
    if (v17)
    {
      double v18 = v17;
      double v19 = (id *)((char *)v4 + *(void *)(class metadata base offset for PopoverViewController + (*v9 & *v4) + 40));
      swift_beginAccess();
      if (*v19)
      {
        objc_msgSend(*v19, sel_frame);
        double v24 = UIEdgeInsetsInsetRect(v20, v21, v22, v23, *v10, v10[1]);
      }
      else
      {
        double v26 = 0.0;
        double v27 = 0.0;
        double v24 = 0.0;
        double v25 = 0.0;
      }
      objc_msgSend(v18, sel_setSourceRect_, v24, v25, v26, v27);
    }
  }
}

double sub_255A0CCA0()
{
  id v1 = (char *)v0
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 48);
  swift_beginAccess();
  return *(double *)v1;
}

void sub_255A0CD28(double a1, double a2, double a3, double a4)
{
  double v9 = (double *)((char *)v4
                + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v4) + 48));
  swift_beginAccess();
  double v10 = *v9;
  double v11 = v9[1];
  double v12 = v9[2];
  double v13 = v9[3];
  *double v9 = a1;
  v9[1] = a2;
  void v9[2] = a3;
  v9[3] = a4;
  sub_255A0CB1C(v10, v11, v12, v13);
}

void (*sub_255A0CDDC(void *a1))(double **a1)
{
  id v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  id v4 = (_OWORD *)((char *)v1
                + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v1) + 48));
  swift_beginAccess();
  long long v5 = v4[1];
  *(_OWORD *)id v3 = *v4;
  *((_OWORD *)v3 + 1) = v5;
  return sub_255A0CE98;
}

void sub_255A0CE98(double **a1)
{
  id v1 = *a1;
  sub_255A0CD28(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);

  free(v1);
}

uint64_t sub_255A0CEDC@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v2 = sub_255A0DD8C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  if (v2)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v3;
    *(void *)(v2 + 24) = v5;
    id v6 = sub_255A1050C;
  }
  else
  {
    id v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())v2;

  return sub_255A0DE10(v3);
}

uint64_t sub_255A0CF64(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_255A10504;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_255A0DE10(v1);
  return sub_255A0D028((uint64_t)v4, v3);
}

uint64_t sub_255A0CFF4()
{
  uint64_t v0 = sub_255A0DD8C();
  sub_255A0DE10(v0);
  return v0;
}

uint64_t sub_255A0D028(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2
                + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v2) + 56));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_255A0DE20(v6);
}

uint64_t (*sub_255A0D0C4())()
{
  return j__swift_endAccess;
}

void *PopoverViewController.__allocating_init(rootView:sourceView:sourceRectInsets:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone(v4);
  double v9 = sub_255A0DE30(a1, a2, a3);

  (*(void (**)(uint64_t))(*(void *)(*(void *)((char *)v4
                                                          + class metadata base offset for PopoverViewController)
                                              - 8)
                                  + 8))(a1);
  return v9;
}

void *PopoverViewController.init(rootView:sourceView:sourceRectInsets:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *MEMORY[0x263F8EED0] & *v3;
  id v7 = sub_255A0DE30(a1, a2, a3);

  (*(void (**)(uint64_t))(*(void *)(*(void *)(v6 + class metadata base offset for PopoverViewController)
                                              - 8)
                                  + 8))(a1);
  return v7;
}

id PopoverViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_255A0D2EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _s11MediaCoreUI21PopoverViewControllerC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

uint64_t sub_255A0D314()
{
  return -1;
}

uint64_t sub_255A0D31C()
{
  return -1;
}

uint64_t sub_255A0D328()
{
  return sub_255A0C214() & 1;
}

void sub_255A0D354(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_255A0E724();
}

id sub_255A0D3B4()
{
  id result = objc_msgSend(v0, sel_preferredContentSize);
  if (v2 != 1.79769313e308)
  {
    id result = objc_msgSend(v0, sel_preferredContentSize);
    if (v3 != 0.0)
    {
      id v4 = (char *)v0
         + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 32);
      id result = (id)swift_beginAccess();
      if (*v4 == 1)
      {
        objc_msgSend(v0, sel_preferredContentSize);
        sub_255C7EA88();
        return objc_msgSend(v0, sel_setPreferredContentSize_);
      }
    }
  }
  return result;
}

void PopoverViewController.__allocating_init(rootView:)()
{
}

void PopoverViewController.init(rootView:)()
{
}

void PopoverViewController.__allocating_init(coder:rootView:)()
{
}

void PopoverViewController.init(coder:rootView:)()
{
}

uint64_t sub_255A0D594()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  objc_release(*(id *)((char *)v0
                     + *(void *)(class metadata base offset for PopoverViewController
                                 + (*MEMORY[0x263F8EED0] & *v0)
                                 + 16)));

  uint64_t v2 = *(void *)((char *)v0 + *(void *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 56));

  return sub_255A0DE20(v2);
}

id PopoverViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PopoverViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_255A0D710(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x263F8EED0];
  objc_release(*(id *)((char *)a1
                     + *(void *)(class metadata base offset for PopoverViewController
                                 + (*MEMORY[0x263F8EED0] & *a1)
                                 + 16)));

  uint64_t v3 = *(void *)((char *)a1 + *(void *)(class metadata base offset for PopoverViewController + (*v2 & *a1) + 56));

  return sub_255A0DE20(v3);
}

void *View.popover<A>(isPresented:permittedArrowDirections:isDismissable:passthroughViews:containerView:onAppear:onDismiss:content:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)&long long v20 = a1;
  *((void *)&v20 + 1) = a2;
  LOBYTE(v21) = a3;
  *((void *)&v21 + 1) = a4;
  LOBYTE(v22) = a5;
  *((void *)&v22 + 1) = a6;
  *(void *)&long long v23 = a7;
  *((void *)&v23 + 1) = a8;
  long long v24 = a9;
  long long v25 = a10;
  uint64_t v26 = a11;
  v18[4] = a9;
  v18[5] = a10;
  uint64_t v19 = a11;
  v18[0] = v20;
  v18[1] = v21;
  v18[2] = v22;
  v18[3] = v23;
  id v15 = a7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255A0DE10(a8);
  sub_255A0DE10(*((uint64_t *)&a9 + 1));
  uint64_t v16 = type metadata accessor for PopoverViewModifier();
  swift_retain();
  MEMORY[0x25A295390](v18, a12, v16, a14);
  return sub_255A102A4(&v20);
}

id sub_255A0D940(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v4 = *MEMORY[0x263F8EED0] & *v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_269F20CF8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  id v33 = (void *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v4 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v6);
  double v11 = (char *)v30 - v10;
  uint64_t v12 = *(void *)(v4 + 88);
  uint64_t v13 = type metadata accessor for AXPopoverContainer();
  MEMORY[0x270FA5388](v13);
  uint64_t v32 = (uint64_t)v30 - v14;
  *((unsigned char *)v2 + qword_269F20AD8) = 2;
  id v15 = (char *)v2 + qword_269F20AF0;
  long long v16 = *(_OWORD *)(a1 + 80);
  *((_OWORD *)v15 + 4) = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v15 + 5) = v16;
  *((void *)v15 + 12) = *(void *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)id v15 = *(_OWORD *)a1;
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v15 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v15 + 3) = v18;
  swift_getWitnessTable();
  uint64_t v19 = sub_255C7EAE8();
  long long v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v30[1] = v19;
  char v31 = v20;
  v20(v11, v34, v8);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v8;
  *(void *)(v22 + 24) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v21, v11, v8);
  long long v23 = v33;
  sub_255A0AE6C(v33);
  uint64_t v24 = (uint64_t)v23;
  uint64_t v25 = v32;
  sub_255A10514(v24, v32, qword_269F20CF8);
  uint64_t v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v25 + *(int *)(v13 + 36));
  *uint64_t v26 = sub_255A103C0;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v22;
  double v27 = v2;
  sub_255A10210(a1);
  *(void *)((char *)v27 + qword_269F20AE0) = sub_255C7EAB8();
  sub_255C7EAE8();
  v31(v11, v34, v8);
  *(void *)((char *)v27 + qword_269F20AE8) = sub_255C7EAB8();

  uint64_t v28 = (objc_class *)type metadata accessor for Popover.Coordinator();
  v35.receiver = v27;
  v35.super_class = v28;
  return objc_msgSendSuper2(&v35, sel_init);
}

id sub_255A0DC78(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for Popover.Coordinator());
  return sub_255A0D940(a1, a2);
}

uint64_t sub_255A0DCC4()
{
  return *(unsigned __int8 *)(v0 + qword_269F20AF0 + 32);
}

void sub_255A0DCD8()
{
}

uint64_t sub_255A0DD08()
{
  uint64_t v1 = (char *)v0
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 40);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_255A0DD8C()
{
  uint64_t v1 = (char *)v0
     + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 56);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_255A0DE10(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_255A0DE20(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void *sub_255A0DE30(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v67 = a3;
  uint64_t v68 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *v3;
  uint64_t v8 = (void *)MEMORY[0x263F8EED0];
  uint64_t v66 = *MEMORY[0x263F8EED0] & v7;
  sub_255A10514(a3, (uint64_t)v72, (uint64_t *)&unk_269F20E10);
  double v9 = *(double *)v72;
  double v10 = *(double *)&v72[1];
  double v11 = *(double *)&v72[2];
  double v12 = *(double *)&v72[3];
  uint64_t v13 = sub_255C7F118();
  MEMORY[0x270FA5388](v13 - 8);
  id v70 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = class metadata base offset for PopoverViewController;
  uint64_t v16 = *(void *)(v66 + class metadata base offset for PopoverViewController);
  uint64_t v17 = sub_255C7E458();
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v64 - v20;
  *((unsigned char *)v4 + *(void *)(v15 + (*v8 & *v4) + 24)) = 1;
  *((unsigned char *)v4 + *(void *)(class metadata base offset for PopoverViewController + (*v8 & *v4) + 32)) = 1;
  uint64_t v22 = (void **)((char *)v4 + *(void *)(class metadata base offset for PopoverViewController + (*v8 & *v4) + 40));
  *uint64_t v22 = 0;
  long long v23 = (double *)((char *)v4 + *(void *)(class metadata base offset for PopoverViewController + (*v8 & *v4) + 48));
  double v24 = *MEMORY[0x263F834E8];
  double v25 = *(double *)(MEMORY[0x263F834E8] + 8);
  double v26 = *(double *)(MEMORY[0x263F834E8] + 16);
  double v27 = *(double *)(MEMORY[0x263F834E8] + 24);
  *long long v23 = *(double *)MEMORY[0x263F834E8];
  v23[1] = v25;
  v23[2] = v26;
  v23[3] = v27;
  uint64_t v28 = (void *)((char *)v4 + *(void *)(class metadata base offset for PopoverViewController + (*v8 & *v4) + 56));
  *uint64_t v28 = 0;
  v28[1] = 0;
  swift_beginAccess();
  uint64_t v29 = *v22;
  *uint64_t v22 = a2;
  id v30 = v4;
  long long v65 = a2;
  id v69 = a2;

  sub_255A10514(v67, (uint64_t)v73, (uint64_t *)&unk_269F20E10);
  if (v73[32] == 1)
  {
    double v9 = v24;
    double v10 = v25;
    double v11 = v26;
    double v12 = v27;
  }
  swift_beginAccess();
  *long long v23 = v9;
  v23[1] = v10;
  v23[2] = v11;
  v23[3] = v12;
  sub_255C7EAE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v68, v16);
  char v31 = (void *)MEMORY[0x263F8EED0];
  uint64_t v32 = (void *)sub_255C7EAB8();
  *(void *)((char *)v30 + *(void *)(class metadata base offset for PopoverViewController + (*v31 & *v30) + 16)) = v32;
  id v33 = v32;
  sub_255C7EA88();

  MEMORY[0x25A295390]();
  id v34 = (id)sub_255C7EAC8();
  sub_255C7F108();
  sub_255C7EA98();
  objc_super v35 = v34;
  sub_255C7EA88();
  objc_msgSend(v35, sel_setPreferredContentSize_);

  objc_msgSend(v35, sel_setModalPresentationStyle_, 7);
  id v36 = objc_msgSend(v35, sel_popoverPresentationController);
  if (v36)
  {
    long long v37 = v36;
    objc_msgSend(v36, sel_setDelegate_, v35);
  }
  id v38 = objc_msgSend(v35, sel_popoverPresentationController);
  id v39 = v69;
  objc_msgSend(v38, sel_setSourceView_, v69);

  id v40 = objc_msgSend(v35, sel_popoverPresentationController);
  if (v40)
  {
    id v41 = v40;
    if (v65)
    {
      objc_msgSend(v39, sel_bounds);
      double v43 = v42;
      double v45 = v44;
      double v47 = v46;
      double v49 = v48;
      double v50 = (double *)((char *)v35
                     + *(void *)(class metadata base offset for PopoverViewController + (*v31 & *v35) + 48));
      swift_beginAccess();
      double v51 = UIEdgeInsetsInsetRect(v43, v45, v47, v49, *v50, v50[1]);
    }
    else
    {
      double v53 = 0.0;
      double v54 = 0.0;
      double v51 = 0.0;
      double v52 = 0.0;
    }
    objc_msgSend(v41, sel_setSourceRect_, v51, v52, v53, v54);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F168);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_255C84C00;
  uint64_t v56 = sub_255C7D948();
  uint64_t v57 = MEMORY[0x263F82018];
  *(void *)(v55 + 32) = v56;
  *(void *)(v55 + 40) = v57;
  uint64_t v58 = sub_255C7D928();
  uint64_t v59 = MEMORY[0x263F81F30];
  *(void *)(v55 + 48) = v58;
  *(void *)(v55 + 56) = v59;
  uint64_t v60 = sub_255C7D908();
  uint64_t v61 = MEMORY[0x263F81ED8];
  *(void *)(v55 + 64) = v60;
  *(void *)(v55 + 72) = v61;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  uint64_t v62 = v35;
  sub_255C80C38();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v62;
}

id sub_255A0E560()
{
  return sub_255A0D3B4();
}

void _s11MediaCoreUI21PopoverViewControllerC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  *((unsigned char *)v0 + *(void *)(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 24)) = 1;
  *((unsigned char *)v0 + *(void *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 32)) = 1;
  *(void *)((char *)v0 + *(void *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 40)) = 0;
  objc_super v2 = (_OWORD *)((char *)v0 + *(void *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 48));
  long long v3 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
  *objc_super v2 = *MEMORY[0x263F834E8];
  v2[1] = v3;
  id v4 = (void *)((char *)v0 + *(void *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 56));
  *id v4 = 0;
  v4[1] = 0;

  sub_255C81248();
  __break(1u);
}

uint64_t sub_255A0E724()
{
  uint64_t result = sub_255A0DD8C();
  if (result)
  {
    uint64_t v1 = (void (*)(uint64_t))result;
    uint64_t v2 = swift_retain();
    v1(v2);
    return sub_255A0DE20((uint64_t)v1);
  }
  return result;
}

void sub_255A0E784()
{
}

void sub_255A0E7B4()
{
}

uint64_t type metadata accessor for PopoverViewController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PopoverViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A0E814()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A0E830@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255A0C214();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255A0E860(char *a1)
{
  return sub_255A0C298(*a1);
}

uint64_t sub_255A0E888()
{
  return 16;
}

__n128 sub_255A0E894(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A0E8A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255A0C3B8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255A0E8D0(char *a1)
{
  return sub_255A0C43C(*a1);
}

uint64_t sub_255A0E8F8()
{
  return 16;
}

__n128 sub_255A0E904(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A0E910@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255A0C55C();
  *a1 = result;
  return result;
}

void sub_255A0E93C()
{
}

uint64_t sub_255A0E968()
{
  return 16;
}

__n128 sub_255A0E974(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id sub_255A0E980@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_255A0DD08();
  *a1 = v2;

  return v2;
}

void sub_255A0E9BC(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_255A0C940(v1);
}

uint64_t sub_255A0E9EC()
{
  return 16;
}

__n128 sub_255A0E9F8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_255A0EA04(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_255A0CCA0();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
}

void sub_255A0EA34(double *a1)
{
}

uint64_t sub_255A0EA60()
{
  return 16;
}

__n128 sub_255A0EA6C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A0EA80()
{
  return 16;
}

__n128 sub_255A0EA8C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A0EA9C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Popover.Coordinator()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for PopoverHostingControllerModifier()
{
  return &type metadata for PopoverHostingControllerModifier;
}

uint64_t sub_255A0EB20()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PopoverViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PopoverViewController);
}

uint64_t dispatch thunk of PopoverViewController.allowDismissal.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 64))();
}

uint64_t dispatch thunk of PopoverViewController.allowDismissal.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 72))();
}

uint64_t dispatch thunk of PopoverViewController.allowDismissal.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 80))();
}

uint64_t dispatch thunk of PopoverViewController.automaticallyAdjustsPreferredContentSize.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 88))();
}

uint64_t dispatch thunk of PopoverViewController.automaticallyAdjustsPreferredContentSize.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 96))();
}

uint64_t dispatch thunk of PopoverViewController.automaticallyAdjustsPreferredContentSize.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 104))();
}

uint64_t dispatch thunk of PopoverViewController.passthroughViews.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 112))();
}

uint64_t dispatch thunk of PopoverViewController.passthroughViews.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 120))();
}

uint64_t dispatch thunk of PopoverViewController.passthroughViews.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 128))();
}

uint64_t dispatch thunk of PopoverViewController.sourceView.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 136))();
}

uint64_t dispatch thunk of PopoverViewController.sourceView.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 144))();
}

uint64_t dispatch thunk of PopoverViewController.sourceView.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 152))();
}

uint64_t dispatch thunk of PopoverViewController.sourceRectInsets.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 160))();
}

uint64_t dispatch thunk of PopoverViewController.sourceRectInsets.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 168))();
}

uint64_t dispatch thunk of PopoverViewController.sourceRectInsets.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 176))();
}

uint64_t dispatch thunk of PopoverViewController.didDismissPopoverHandler.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 184))();
}

uint64_t dispatch thunk of PopoverViewController.didDismissPopoverHandler.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 192))();
}

uint64_t dispatch thunk of PopoverViewController.didDismissPopoverHandler.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 200))();
}

uint64_t dispatch thunk of PopoverViewController.__allocating_init(rootView:sourceView:sourceRectInsets:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *))(class metadata base offset for PopoverViewController
                                                            + v3
                                                            + 208);
  char v5 = *(unsigned char *)(a3 + 32);
  long long v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  char v9 = v5;
  return v4(a1, a2, v8);
}

uint64_t dispatch thunk of PopoverViewController.adaptivePresentationStyle(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 216))();
}

uint64_t dispatch thunk of PopoverViewController.popoverPresentationControllerShouldDismissPopover(_:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 224))();
}

uint64_t dispatch thunk of PopoverViewController.popoverPresentationControllerDidDismissPopover(_:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x263F8EED0] & *v0) + 232))();
}

unint64_t sub_255A0F294()
{
  unint64_t result = qword_269F20C58;
  if (!qword_269F20C58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20AB8);
    sub_255A09998(&qword_269F20C60, (uint64_t *)&unk_269F20AC8);
    sub_255A09998(qword_269F20C68, &qword_269F20AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20C58);
  }
  return result;
}

uint64_t sub_255A0F358()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A0F3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t type metadata accessor for Popover()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A0F450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

void sub_255A0F458()
{
  sub_255A0FC1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_255A0F4F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7EA38();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 36);
    double v10 = (uint64_t *)((char *)a1 + v9);
    double v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *double v10 = *v11;
    v10[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_255A0F614(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_255C7EA38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_255A0F6B8(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7EA38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

void *sub_255A0F790(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_269F20CF0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_255C7EA38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_255A0F88C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA38();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 36)] = *(_OWORD *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_255A0F960(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_269F20CF0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7EA38();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[*(int *)(a3 + 36)] = *(_OWORD *)&a2[*(int *)(a3 + 36)];
  swift_release();
  return a1;
}

uint64_t sub_255A0FA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A0FA6C);
}

uint64_t sub_255A0FA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_269F20CF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_255A0FB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A0FB44);
}

uint64_t sub_255A0FB44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(qword_269F20CF8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AXPopoverContainer()
{
  return __swift_instantiateGenericMetadata();
}

void sub_255A0FC1C()
{
  if (!qword_269F20D80[0])
  {
    sub_255C7EA38();
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, qword_269F20D80);
    }
  }
}

uint64_t sub_255A0FC74(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 56)) {
    swift_release();
  }
  if (*(void *)(a1 + 72)) {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_255A0FCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  int v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v8 = v5;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v7;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_retain();
  return a1;
}

uint64_t sub_255A0FDC4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  int v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v10 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v10;
      *(void *)(a1 + 80) = v12;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255A0FF30(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  uint64_t v5 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_release();
LABEL_15:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t sub_255A10050(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255A10098(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_255A100F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A10134()
{
  return MEMORY[0x263F1BB58];
}

uint64_t sub_255A10140()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A1015C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A101A0()
{
  unint64_t result = qword_26B2985C0;
  if (!qword_26B2985C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2985C0);
  }
  return result;
}

uint64_t sub_255A101F4()
{
  return sub_255A0A004(v0[4], v0[2], v0[3]);
}

uint64_t sub_255A10204@<X0>(uint64_t a1@<X8>)
{
  return sub_255A0A384(v1 + 32, *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_255A10210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 72);
  id v4 = *(id *)(a1 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255A0DE10(v2);
  sub_255A0DE10(v3);
  swift_retain();
  return a1;
}

void *sub_255A102A4(void *a1)
{
  uint64_t v3 = (void *)a1[6];
  uint64_t v2 = a1[7];
  uint64_t v4 = a1[9];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_255A0DE20(v2);
  sub_255A0DE20(v4);
  swift_release();
  return a1;
}

uint64_t sub_255A10338()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_255A103C0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)(*(void *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_255A1040C()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_255A10434()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void sub_255A104B4()
{
  sub_255A0B72C(v0 + 16, *(id *)(v0 + 120));
}

uint64_t sub_255A104C0()
{
  return sub_255A0AD24(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_255A104CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A10504()
{
  return sub_255A3A9A8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_255A1050C()
{
  return sub_255A3D73C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_255A10514(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255A10578()
{
  return swift_deallocObject();
}

unint64_t sub_255A1058C()
{
  unint64_t result = qword_269F20E20;
  if (!qword_269F20E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20E20);
  }
  return result;
}

uint64_t sub_255A105E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A107A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A1084C@<X0>(unsigned char *a1@<X8>)
{
  sub_255A08044();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A1089C()
{
  return sub_255C7E8D8();
}

uint64_t MCUINamespace<A>.debugPadding(_:_:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  v7[0] = a1;
  double v8 = a4;
  uint64_t KeyPath = swift_getKeyPath();
  char v10 = 0;
  uint64_t v11 = swift_getKeyPath();
  char v12 = 0;
  MEMORY[0x25A295390](v7, *(void *)(a2 + 16), &type metadata for DebugPaddingModifier, a3);
  swift_release();
  return swift_release();
}

uint64_t MCUINamespace<A>.debugPadding(_:)(uint64_t a1, uint64_t a2, double a3)
{
  char v6 = sub_255C7F198();

  return MCUINamespace<A>.debugPadding(_:_:)(v6, a1, a2, a3);
}

uint64_t MCUINamespace<A>.debugPaddingBorderColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255A10A3C(a1, a2);
}

uint64_t sub_255A10A10()
{
  return sub_255A10B80((void (*)(void))sub_255A125A8);
}

uint64_t MCUINamespace<A>.debugPaddingOverlayColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255A10A3C(a1, a2);
}

uint64_t sub_255A10A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  swift_getKeyPath();
  v9[1] = a1;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255A10B60()
{
  return sub_255A10B80((void (*)(void))sub_255A125FC);
}

uint64_t sub_255A10B80(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

uint64_t sub_255A10BC8@<X0>(void *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_255A125FC, a1);
}

uint64_t sub_255A10BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_255C7E8D8();
}

uint64_t sub_255A10C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A10BE8(a1, a2, a3, a4, (void (*)(void))sub_255A125FC);
}

uint64_t sub_255A10C80@<X0>(void *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_255A125A8, a1);
}

uint64_t sub_255A10CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A10BE8(a1, a2, a3, a4, (void (*)(void))sub_255A125A8);
}

uint64_t sub_255A10CD4()
{
  return swift_getWitnessTable();
}

unint64_t sub_255A10D38()
{
  unint64_t result = qword_269F20EA0;
  if (!qword_269F20EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20EA0);
  }
  return result;
}

uint64_t sub_255A10D8C()
{
  return swift_getWitnessTable();
}

uint64_t destroy for DebugPaddingModifier()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for DebugPaddingModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  char v5 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DebugPaddingModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DebugPaddingModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugPaddingModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugPaddingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPaddingModifier()
{
  return &type metadata for DebugPaddingModifier;
}

uint64_t sub_255A1104C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A11068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v65 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20EA8);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20EB0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20EB8);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20EC0) - 8;
  MEMORY[0x270FA5388](v64);
  uint64_t v63 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_255C801F8();
  uint64_t v59 = v16;
  uint64_t v60 = v15;
  uint64_t v58 = sub_255C7FC78();
  char v17 = *(unsigned char *)(v2 + 40);
  uint64_t v18 = swift_retain();
  uint64_t v57 = sub_255AB9568(v18, v17);
  swift_release();
  sub_255C7DDD8();
  double v19 = v66;
  uint64_t v20 = v68;
  uint64_t v21 = v69;
  uint64_t v22 = v70;
  uint64_t v23 = sub_255C801F8();
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20EC8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v6, v61, v26);
  double v27 = &v6[*(int *)(v4 + 44)];
  *(void *)double v27 = v58;
  *((double *)v27 + 1) = v19 * 0.5;
  *((double *)v27 + 2) = v19;
  *((void *)v27 + 3) = v67;
  *((void *)v27 + 4) = v20;
  *((void *)v27 + 5) = v21;
  *((void *)v27 + 6) = v22;
  *((void *)v27 + 7) = v57;
  *((_WORD *)v27 + 32) = 256;
  *((void *)v27 + 9) = v23;
  *((void *)v27 + 10) = v25;
  v27[88] = 0;
  uint64_t v28 = v59;
  *((void *)v27 + 12) = v60;
  *((void *)v27 + 13) = v28;
  LOBYTE(v4) = *(unsigned char *)v2;
  sub_255C7DC08();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_255A09540((uint64_t)v6, (uint64_t)v10, &qword_269F20EA8);
  long long v37 = &v10[*(int *)(v8 + 44)];
  *long long v37 = v4;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_255A095A4((uint64_t)v6, &qword_269F20EA8);
  uint64_t v38 = sub_255C801F8();
  id v40 = v39;
  uint64_t v71 = *(void *)(v2 + 16);
  char v72 = *(unsigned char *)(v2 + 24);
  id v41 = (_OWORD *)swift_allocObject();
  long long v42 = *(_OWORD *)(v2 + 16);
  v41[1] = *(_OWORD *)v2;
  v41[2] = v42;
  *(_OWORD *)((char *)v41 + 41) = *(_OWORD *)(v2 + 25);
  uint64_t v43 = v62;
  sub_255A09540((uint64_t)v10, v62, &qword_269F20EB0);
  double v44 = (double (**)@<D0>(uint64_t@<X8>))(v43 + *(int *)(v12 + 44));
  *double v44 = sub_255A12478;
  v44[1] = (double (*)@<D0>(uint64_t@<X8>))v41;
  v44[2] = (double (*)@<D0>(uint64_t@<X8>))v38;
  v44[3] = v40;
  swift_retain();
  sub_255A12480((uint64_t)&v71);
  sub_255A095A4((uint64_t)v10, &qword_269F20EB0);
  uint64_t v45 = sub_255C801F8();
  double v47 = v46;
  double v48 = (_OWORD *)swift_allocObject();
  long long v49 = *(_OWORD *)(v2 + 16);
  v48[1] = *(_OWORD *)v2;
  v48[2] = v49;
  *(_OWORD *)((char *)v48 + 41) = *(_OWORD *)(v2 + 25);
  uint64_t v50 = v63;
  sub_255A09540(v43, v63, &qword_269F20EB8);
  double v51 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v50 + *(int *)(v64 + 44));
  *double v51 = sub_255A124B0;
  v51[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v48;
  v51[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v45;
  v51[3] = v47;
  swift_retain();
  sub_255A12480((uint64_t)&v71);
  sub_255A095A4(v43, &qword_269F20EB8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = v65;
  sub_255A09540(v50, v65, &qword_269F20EC0);
  uint64_t v54 = v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F20ED0) + 36);
  *(void *)uint64_t v54 = KeyPath;
  *(unsigned char *)(v54 + 8) = 1;
  return sub_255A095A4(v50, &qword_269F20EC0);
}

double sub_255A114DC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v104 = v129;
  char v103 = v130;
  uint64_t v102 = v131;
  char v101 = v132;
  uint64_t v99 = *((void *)&v133 + 1);
  uint64_t v100 = v133;
  uint64_t v96 = sub_255C7FC78();
  uint64_t v7 = sub_255C80208();
  uint64_t v94 = v8;
  uint64_t v95 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  unsigned __int8 v9 = sub_255C7F188();
  sub_255C7F1D8();
  uint64_t v105 = v5;
  if (sub_255C7F1D8() == v9
    || (unsigned __int8 v10 = sub_255C7F1C8(), sub_255C7F1D8(), sub_255C7F1D8() == v10))
  {
    uint64_t v11 = sub_255C7FC78();
    sub_255C801F8();
    sub_255C7DFE8();
    LOBYTE(v110[0]) = v135;
    v127[0] = v137;
    v126[0] = 0;
    LOBYTE(v108[0]) = 0;
    LOBYTE(v106[0]) = 0;
    v128[0] = v130;
    LOBYTE(v152) = v132;
    *(void *)&long long v113 = v11;
    *((void *)&v113 + 1) = v134;
    LOBYTE(v114) = v135;
    *((void *)&v114 + 1) = v136;
    LOBYTE(v115) = v137;
    *((void *)&v115 + 1) = v138;
    *(void *)&long long v116 = v139;
    *((void *)&v116 + 1) = v3;
    *(void *)&long long v117 = KeyPath;
    BYTE8(v117) = 0;
    *(void *)&long long v118 = v5;
    BYTE8(v118) = 0;
    *(void *)&long long v119 = v6;
    BYTE8(v119) = 0;
    *(void *)&long long v120 = v129;
    BYTE8(v120) = v130;
    *(void *)&long long v121 = v131;
    BYTE8(v121) = v132;
    long long v122 = v133;
    *(void *)&long long v123 = sub_255C801F8();
    *((void *)&v123 + 1) = v12;
    CGSizeMake(&v113, v12);
    swift_retain();
    swift_retain();
    sub_255A0877C(v6, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_255A12564(&v113);
  }
  sub_255A10514((uint64_t)&v113, (uint64_t)v158, &qword_269F20ED8);
  swift_release();
  uint64_t v13 = sub_255C80218();
  uint64_t v92 = v14;
  uint64_t v93 = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  unsigned __int8 v15 = sub_255C7F188();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v15
    || (unsigned __int8 v16 = sub_255C7F1E8(), sub_255C7F1D8(), sub_255C7F1D8() == v16))
  {
    uint64_t v17 = sub_255C7FC78();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v18 = v140;
    char v19 = v141;
    uint64_t v20 = v142;
    char v21 = v143;
    uint64_t v22 = v144;
    uint64_t v23 = v145;
    uint64_t v24 = sub_255C801F8();
    LOBYTE(v110[0]) = v19;
    v127[0] = v21;
    v126[0] = 0;
    LOBYTE(v108[0]) = 0;
    LOBYTE(v106[0]) = 0;
    LOBYTE(v152) = v103;
    LOBYTE(v146) = v101;
    *(void *)&long long v113 = v17;
    *((void *)&v113 + 1) = v18;
    LOBYTE(v114) = v19;
    *((void *)&v114 + 1) = v20;
    LOBYTE(v115) = v21;
    *((void *)&v115 + 1) = v22;
    *(void *)&long long v116 = v23;
    *((void *)&v116 + 1) = v3;
    *(void *)&long long v117 = KeyPath;
    BYTE8(v117) = 0;
    *(void *)&long long v118 = v105;
    BYTE8(v118) = 0;
    *(void *)&long long v119 = v6;
    BYTE8(v119) = 0;
    *(void *)&long long v120 = v104;
    BYTE8(v120) = v103;
    *(void *)&long long v121 = v102;
    BYTE8(v121) = v101;
    *(void *)&long long v122 = v100;
    *((void *)&v122 + 1) = v99;
    *(void *)&long long v123 = v24;
    *((void *)&v123 + 1) = v25;
    CGSizeMake(&v113, v25);
    swift_retain();
    swift_retain();
    sub_255A0877C(v6, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_255A12564(&v113);
  }
  sub_255A10514((uint64_t)&v113, (uint64_t)v128, &qword_269F20ED8);
  swift_release();
  uint64_t v90 = sub_255C801D8();
  uint64_t v91 = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  unsigned __int8 v27 = sub_255C7F1F8();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v27
    || (unsigned __int8 v28 = sub_255C7F1A8(), sub_255C7F1D8(), sub_255C7F1D8() == v28))
  {
    uint64_t v88 = sub_255C7FC78();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v29 = v146;
    char v30 = v147;
    uint64_t v31 = v148;
    char v32 = v149;
    uint64_t v33 = KeyPath;
    uint64_t v34 = v150;
    uint64_t v35 = v6;
    uint64_t v36 = v151;
    uint64_t v86 = sub_255C801F8();
    uint64_t v38 = v37;
    sub_255C80378();
    LOBYTE(v108[0]) = 0;
    LOBYTE(v106[0]) = 0;
    LOBYTE(v152) = 0;
    LOBYTE(v110[0]) = v30;
    v126[0] = v32;
    *(void *)&long long v113 = v88;
    *((void *)&v113 + 1) = v29;
    LOBYTE(v114) = v30;
    *((void *)&v114 + 1) = v31;
    LOBYTE(v115) = v32;
    *((void *)&v115 + 1) = v34;
    uint64_t KeyPath = v33;
    *(void *)&long long v116 = v36;
    uint64_t v6 = v35;
    *((void *)&v116 + 1) = v3;
    *(void *)&long long v117 = v33;
    BYTE8(v117) = 0;
    *(void *)&long long v118 = v105;
    BYTE8(v118) = 0;
    *(void *)&long long v119 = v35;
    BYTE8(v119) = 0;
    *(void *)&long long v120 = v104;
    BYTE8(v120) = v103;
    *(void *)&long long v121 = v102;
    BYTE8(v121) = v101;
    *(void *)&long long v122 = v100;
    *((void *)&v122 + 1) = v99;
    *(void *)&long long v123 = 0xBFF921FB54442D18;
    *((void *)&v123 + 1) = v39;
    *(void *)&long long v124 = v40;
    *((void *)&v124 + 1) = v86;
    *(void *)&long long v125 = v38;
    CGSizeMake(&v113, v41);
    swift_retain();
    swift_retain();
    sub_255A0877C(v35, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_255A12584((uint64_t)&v113);
  }
  sub_255A10514((uint64_t)&v113, (uint64_t)v127, &qword_269F20EE0);
  swift_release();
  uint64_t v42 = sub_255C801E8();
  uint64_t v44 = v43;
  swift_retain();
  swift_retain();
  swift_retain();
  unsigned __int8 v45 = sub_255C7F1F8();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v45
    || (unsigned __int8 v46 = sub_255C7F1B8(), sub_255C7F1D8(), sub_255C7F1D8() == v46))
  {
    uint64_t v97 = sub_255C7FC78();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v47 = KeyPath;
    uint64_t v48 = v152;
    char v49 = v153;
    uint64_t v50 = v154;
    uint64_t v51 = v6;
    char v52 = v155;
    uint64_t v98 = v42;
    uint64_t v53 = v44;
    uint64_t v54 = v156;
    uint64_t v55 = v157;
    uint64_t v56 = sub_255C801F8();
    uint64_t v87 = v57;
    uint64_t v89 = v56;
    sub_255C80378();
    LOBYTE(v106[0]) = 0;
    LOBYTE(v110[0]) = v49;
    LOBYTE(v108[0]) = v52;
    *(void *)&long long v113 = v97;
    *((void *)&v113 + 1) = v48;
    LOBYTE(v114) = v49;
    *((void *)&v114 + 1) = v50;
    LOBYTE(v115) = v52;
    *((void *)&v115 + 1) = v54;
    uint64_t v44 = v53;
    *(void *)&long long v116 = v55;
    *((void *)&v116 + 1) = v3;
    *(void *)&long long v117 = v47;
    BYTE8(v117) = 0;
    *(void *)&long long v118 = v105;
    BYTE8(v118) = 0;
    *(void *)&long long v119 = v51;
    BYTE8(v119) = 0;
    *(void *)&long long v120 = v104;
    BYTE8(v120) = v103;
    *(void *)&long long v121 = v102;
    BYTE8(v121) = v101;
    *(void *)&long long v122 = v100;
    uint64_t v42 = v98;
    *((void *)&v122 + 1) = v99;
    *(void *)&long long v123 = 0xBFF921FB54442D18;
    *((void *)&v123 + 1) = v58;
    *(void *)&long long v124 = v59;
    *((void *)&v124 + 1) = v89;
    *(void *)&long long v125 = v87;
    CGSizeMake(&v113, v60);
    swift_retain();
    swift_retain();
    sub_255A0877C(v51, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_255A12584((uint64_t)&v113);
  }
  sub_255A10514((uint64_t)&v113, (uint64_t)v126, &qword_269F20EE0);
  sub_255A10514((uint64_t)v158, (uint64_t)v106, &qword_269F20ED8);
  *(void *)&long long v107 = v95;
  *((void *)&v107 + 1) = v94;
  long long v61 = v106[9];
  *(_OWORD *)(a2 + 136) = v106[8];
  *(_OWORD *)(a2 + 152) = v61;
  long long v62 = v107;
  *(_OWORD *)(a2 + 168) = v106[10];
  long long v63 = v106[5];
  *(_OWORD *)(a2 + 72) = v106[4];
  *(_OWORD *)(a2 + 88) = v63;
  long long v64 = v106[7];
  *(_OWORD *)(a2 + 104) = v106[6];
  *(_OWORD *)(a2 + 120) = v64;
  long long v65 = v106[1];
  *(_OWORD *)(a2 + 8) = v106[0];
  *(_OWORD *)(a2 + 24) = v65;
  long long v66 = v106[3];
  *(_OWORD *)(a2 + 40) = v106[2];
  *(_OWORD *)(a2 + 56) = v66;
  *(_OWORD *)(a2 + 184) = v62;
  sub_255A10514((uint64_t)v128, (uint64_t)v108, &qword_269F20ED8);
  *(void *)&long long v109 = v93;
  *((void *)&v109 + 1) = v92;
  long long v67 = v108[9];
  *(_OWORD *)(a2 + 328) = v108[8];
  *(_OWORD *)(a2 + 344) = v67;
  long long v68 = v108[5];
  *(_OWORD *)(a2 + 264) = v108[4];
  *(_OWORD *)(a2 + 280) = v68;
  long long v69 = v108[7];
  *(_OWORD *)(a2 + 296) = v108[6];
  *(_OWORD *)(a2 + 312) = v69;
  long long v70 = v108[1];
  *(_OWORD *)(a2 + 200) = v108[0];
  *(_OWORD *)(a2 + 216) = v70;
  long long v71 = v108[3];
  *(_OWORD *)(a2 + 232) = v108[2];
  *(_OWORD *)(a2 + 248) = v71;
  long long v72 = v109;
  *(_OWORD *)(a2 + 360) = v108[10];
  *(_OWORD *)(a2 + 376) = v72;
  sub_255A10514((uint64_t)v127, (uint64_t)v110, &qword_269F20EE0);
  *((void *)&v111 + 1) = v90;
  uint64_t v112 = v91;
  *(void *)(a2 + 600) = v91;
  long long v73 = v110[11];
  *(_OWORD *)(a2 + 552) = v110[10];
  *(_OWORD *)(a2 + 568) = v73;
  long long v74 = v110[7];
  *(_OWORD *)(a2 + 488) = v110[6];
  *(_OWORD *)(a2 + 504) = v74;
  long long v75 = v110[9];
  *(_OWORD *)(a2 + 520) = v110[8];
  *(_OWORD *)(a2 + 536) = v75;
  long long v76 = v110[3];
  *(_OWORD *)(a2 + 424) = v110[2];
  *(_OWORD *)(a2 + 440) = v76;
  long long v77 = v110[5];
  *(_OWORD *)(a2 + 456) = v110[4];
  *(_OWORD *)(a2 + 472) = v77;
  long long v78 = v110[1];
  *(_OWORD *)(a2 + 392) = v110[0];
  *(_OWORD *)(a2 + 408) = v78;
  *(_OWORD *)(a2 + 584) = v111;
  swift_release();
  swift_release();
  swift_release_n();
  sub_255A10514((uint64_t)v126, (uint64_t)&v113, &qword_269F20EE0);
  *((void *)&v125 + 1) = v42;
  *(void *)(a2 + 816) = v44;
  long long v79 = v124;
  *(_OWORD *)(a2 + 768) = v123;
  *(_OWORD *)(a2 + 784) = v79;
  long long v80 = v120;
  *(_OWORD *)(a2 + 704) = v119;
  *(_OWORD *)(a2 + 720) = v80;
  long long v81 = v122;
  *(_OWORD *)(a2 + 736) = v121;
  *(_OWORD *)(a2 + 752) = v81;
  long long v82 = v116;
  *(_OWORD *)(a2 + 640) = v115;
  *(_OWORD *)(a2 + 656) = v82;
  long long v83 = v118;
  *(_OWORD *)(a2 + 672) = v117;
  *(_OWORD *)(a2 + 688) = v83;
  long long v84 = v114;
  *(_OWORD *)(a2 + 608) = v113;
  *(_OWORD *)(a2 + 624) = v84;
  double result = *(double *)&v125;
  *(_OWORD *)(a2 + 800) = v125;
  *(void *)a2 = v96;
  *(unsigned char *)(a2 + 824) = 0;
  return result;
}

uint64_t sub_255A11F7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v61 = sub_255C7FC78();
  uint64_t v4 = sub_255C80208();
  uint64_t v62 = v5;
  uint64_t v63 = v4;
  unsigned __int8 v6 = sub_255C7F188();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v6
    || (unsigned __int8 v7 = sub_255C7F1C8(), sub_255C7F1D8(), sub_255C7F1D8() == v7))
  {
    char v8 = *(unsigned char *)(a1 + 24);
    uint64_t v9 = swift_retain();
    uint64_t v60 = sub_255AB9568(v9, v8);
    swift_release();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v58 = v65;
    uint64_t v59 = v64;
    uint64_t v56 = v67;
    uint64_t v57 = v66;
    uint64_t v54 = v69;
    uint64_t v55 = v68;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v54 = 0;
  }
  uint64_t v10 = sub_255C80218();
  uint64_t v52 = v11;
  uint64_t v53 = v10;
  unsigned __int8 v12 = sub_255C7F188();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v12
    || (unsigned __int8 v13 = sub_255C7F1E8(), sub_255C7F1D8(), sub_255C7F1D8() == v13))
  {
    char v14 = *(unsigned char *)(a1 + 24);
    uint64_t v15 = swift_retain();
    uint64_t v51 = sub_255AB9568(v15, v14);
    swift_release();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v49 = v71;
    uint64_t v50 = v70;
    uint64_t v47 = v73;
    uint64_t v48 = v72;
    uint64_t v45 = v75;
    uint64_t v46 = v74;
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v45 = 0;
  }
  uint64_t v16 = sub_255C801D8();
  uint64_t v43 = v17;
  uint64_t v44 = v16;
  unsigned __int8 v18 = sub_255C7F1F8();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v18
    || (unsigned __int8 v19 = sub_255C7F1A8(), sub_255C7F1D8(), sub_255C7F1D8() == v19))
  {
    char v20 = *(unsigned char *)(a1 + 24);
    uint64_t v21 = swift_retain();
    uint64_t v42 = sub_255AB9568(v21, v20);
    swift_release();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v40 = v77;
    uint64_t v41 = v76;
    uint64_t v22 = v78;
    uint64_t v23 = v79;
    uint64_t v25 = v80;
    uint64_t v24 = v81;
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v40 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v24 = 0;
  }
  uint64_t v26 = sub_255C801E8();
  uint64_t v28 = v27;
  unsigned __int8 v29 = sub_255C7F1F8();
  sub_255C7F1D8();
  if (sub_255C7F1D8() == v29
    || (v30 = sub_255C7F1B8(), sub_255C7F1D8(), uint64_t result = sub_255C7F1D8(), result == v30))
  {
    char v32 = *(unsigned char *)(a1 + 24);
    uint64_t v33 = swift_retain();
    uint64_t v34 = sub_255AB9568(v33, v32);
    swift_release();
    sub_255C801F8();
    uint64_t result = sub_255C7DFE8();
    uint64_t v35 = v82;
    uint64_t v36 = v83;
    uint64_t v37 = v84;
    uint64_t v38 = v85;
    long long v39 = v86;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    long long v39 = 0uLL;
  }
  *(void *)a2 = v61;
  *(void *)(a2 + 8) = v60;
  *(void *)(a2 + 16) = v59;
  *(void *)(a2 + 24) = v58;
  *(void *)(a2 + 32) = v57;
  *(void *)(a2 + 40) = v56;
  *(void *)(a2 + 48) = v55;
  *(void *)(a2 + 56) = v54;
  *(void *)(a2 + 64) = v63;
  *(void *)(a2 + 72) = v62;
  *(void *)(a2 + 80) = v51;
  *(void *)(a2 + 88) = v50;
  *(void *)(a2 + 96) = v49;
  *(void *)(a2 + 104) = v48;
  *(void *)(a2 + 112) = v47;
  *(void *)(a2 + 120) = v46;
  *(void *)(a2 + 128) = v45;
  *(void *)(a2 + 136) = v53;
  *(void *)(a2 + 144) = v52;
  *(void *)(a2 + 152) = v42;
  *(void *)(a2 + 160) = v41;
  *(void *)(a2 + 168) = v40;
  *(void *)(a2 + 176) = v22;
  *(void *)(a2 + 184) = v23;
  *(void *)(a2 + 192) = v25;
  *(void *)(a2 + 200) = v24;
  *(void *)(a2 + 208) = v44;
  *(void *)(a2 + 216) = v43;
  *(void *)(a2 + 224) = v34;
  *(void *)(a2 + 232) = v35;
  *(void *)(a2 + 240) = v36;
  *(void *)(a2 + 248) = v37;
  *(void *)(a2 + 256) = v38;
  *(_OWORD *)(a2 + 264) = v39;
  *(void *)(a2 + 280) = v26;
  *(void *)(a2 + 288) = v28;
  *(unsigned char *)(a2 + 296) = 0;
  return result;
}

uint64_t sub_255A123B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255A11068(a1, a2);
}

uint64_t sub_255A123EC()
{
  uint64_t result = sub_255C7FC78();
  qword_269F20E90 = result;
  return result;
}

uint64_t sub_255A1240C@<X0>(void *a1@<X8>)
{
  return sub_255A06F6C(&qword_269F1FD38, &qword_269F20E90, a1);
}

uint64_t sub_255A12430()
{
  uint64_t result = sub_255C7FC78();
  qword_269F20E98 = result;
  return result;
}

uint64_t sub_255A12450@<X0>(void *a1@<X8>)
{
  return sub_255A06F6C(qword_269F1FD40, &qword_269F20E98, a1);
}

double sub_255A12478@<D0>(uint64_t a1@<X8>)
{
  return sub_255A114DC(v1 + 16, a1);
}

uint64_t sub_255A12480(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A124B0@<X0>(uint64_t a1@<X8>)
{
  return sub_255A11F7C(v1 + 16, a1);
}

uint64_t sub_255A124B8@<X0>(unsigned char *a1@<X8>)
{
  sub_255A08044();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A12508()
{
  return sub_255C7E8D8();
}

double sub_255A12564(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double sub_255A12584(uint64_t a1)
{
  *(void *)(a1 + 192) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_255A125A8()
{
  unint64_t result = qword_269F20EE8;
  if (!qword_269F20EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20EE8);
  }
  return result;
}

unint64_t sub_255A125FC()
{
  unint64_t result = qword_269F20EF0;
  if (!qword_269F20EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20EF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for OverlayColorKey()
{
  return &type metadata for OverlayColorKey;
}

ValueMetadata *type metadata accessor for BorderColorKey()
{
  return &type metadata for BorderColorKey;
}

unint64_t sub_255A12674()
{
  unint64_t result = qword_269F20EF8;
  if (!qword_269F20EF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20ED0);
    sub_255A12714();
    sub_255A09998(&qword_269F20F58, &qword_269F20F60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20EF8);
  }
  return result;
}

unint64_t sub_255A12714()
{
  unint64_t result = qword_269F20F00;
  if (!qword_269F20F00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20EC0);
    sub_255A127B4();
    sub_255A09998(&qword_269F20F48, &qword_269F20F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20F00);
  }
  return result;
}

unint64_t sub_255A127B4()
{
  unint64_t result = qword_269F20F08;
  if (!qword_269F20F08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20EB8);
    sub_255A12854();
    sub_255A09998(&qword_269F20F38, &qword_269F20F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20F08);
  }
  return result;
}

unint64_t sub_255A12854()
{
  unint64_t result = qword_269F20F10;
  if (!qword_269F20F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20EB0);
    sub_255A128D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20F10);
  }
  return result;
}

unint64_t sub_255A128D0()
{
  unint64_t result = qword_269F20F18;
  if (!qword_269F20F18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20EA8);
    sub_255A09998(&qword_269F20F20, &qword_269F20EC8);
    sub_255A09998(&qword_269F20F28, &qword_269F20F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F20F18);
  }
  return result;
}

BOOL static NowPlayingViewModel.PlayerStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NowPlayingViewModel.PlayerStyle.hash(into:)()
{
  return sub_255C81588();
}

uint64_t NowPlayingViewModel.PlayerStyle.hashValue.getter()
{
  return sub_255C815B8();
}

BOOL sub_255A12A20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_255A12A3C()
{
  unint64_t result = qword_26B299428;
  if (!qword_26B299428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299428);
  }
  return result;
}

uint64_t _s11PlayerStyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11PlayerStyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A12BECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_255A12C14(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.PlayerStyle()
{
  return &type metadata for NowPlayingViewModel.PlayerStyle;
}

void sub_255A12C30(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_255A12C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A12A3C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255A12C9C()
{
  sub_255A12CE4();

  return sub_255C7E8C8();
}

unint64_t sub_255A12CE4()
{
  unint64_t result = qword_26B298CC0;
  if (!qword_26B298CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298CC0);
  }
  return result;
}

uint64_t sub_255A12D38(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  char v8 = 0;
  char v9 = v5;
  MEMORY[0x25A295390](&KeyPath, a2, &type metadata for OpacityModifier, a3);
  return swift_release();
}

uint64_t sub_255A12DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  char v6 = *(unsigned char *)(v2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(v2 + 9);
  sub_255A0877C(v5, v6);
  sub_255AB99AC(v5, v6, &v11);
  sub_255A087D0(v5, v6);
  if ((v7 ^ v11)) {
    double v8 = 0.0;
  }
  else {
    double v8 = 1.0;
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BB08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B6D0);
  *(double *)(a2 + *(int *)(result + 36)) = v8;
  return result;
}

ValueMetadata *type metadata accessor for PlayerStyleKey()
{
  return &type metadata for PlayerStyleKey;
}

uint64_t destroy for OpacityModifier(uint64_t a1)
{
  return sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t _s11MediaCoreUI15OpacityModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithCopy for OpacityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for OpacityModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpacityModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OpacityModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpacityModifier()
{
  return &type metadata for OpacityModifier;
}

uint64_t sub_255A13068()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A13088()
{
  unint64_t result = qword_26B29B6C8;
  if (!qword_26B29B6C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B6D0);
    sub_255A13104();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B6C8);
  }
  return result;
}

unint64_t sub_255A13104()
{
  unint64_t result = qword_26B29BB00;
  if (!qword_26B29BB00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BB00);
  }
  return result;
}

double sub_255A13160@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  return result;
}

uint64_t WaveformState.SamplingMode.ValueProvider.__allocating_init(value:)(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F68);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned __int8 v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v14 + OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value;
  char v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_255C7DA88();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v15, v13, v10);
  swift_getKeyPath();
  swift_getKeyPath();
  *(double *)&long long v17 = a1;
  *((double *)&v17 + 1) = a2;
  *(double *)&long long v18 = a3;
  *((double *)&v18 + 1) = a4;
  long long v19 = *(unint64_t *)&a5;
  char v20 = 0;
  swift_retain();
  sub_255C7DAD8();
  return v14;
}

uint64_t WaveformState.SamplingMode.ValueProvider.init(value:)(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F68);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v5 + OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value;
  char v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_255C7DA88();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  swift_getKeyPath();
  swift_getKeyPath();
  *(double *)&long long v17 = a1;
  *((double *)&v17 + 1) = a2;
  *(double *)&long long v18 = a3;
  *((double *)&v18 + 1) = a4;
  long long v19 = *(unint64_t *)&a5;
  char v20 = 0;
  swift_retain();
  sub_255C7DAD8();
  return v5;
}

uint64_t sub_255A134F8()
{
  return sub_255C7DAD8();
}

uint64_t WaveformState.SamplingMode.ValueProvider.__allocating_init(fiveBarProvider:)(uint64_t a1)
{
  return sub_255A1361C(a1, sub_255A140FC);
}

uint64_t WaveformState.SamplingMode.ValueProvider.init(fiveBarProvider:)(uint64_t a1)
{
  uint64_t v1 = sub_255A140FC(a1);
  swift_release();
  return v1;
}

__n128 sub_255A135EC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v2;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

uint64_t WaveformState.SamplingMode.ValueProvider.__allocating_init(sixBarProvider:)(uint64_t a1)
{
  return sub_255A1361C(a1, sub_255A14550);
}

uint64_t sub_255A1361C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  swift_allocObject();
  uint64_t v4 = a2(a1);
  swift_release();
  return v4;
}

uint64_t WaveformState.SamplingMode.ValueProvider.init(sixBarProvider:)(uint64_t a1)
{
  uint64_t v1 = sub_255A14550(a1);
  swift_release();
  return v1;
}

__n128 sub_255A136AC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = 1;
  return result;
}

double sub_255A136C8@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 32) = v5;
  return result;
}

uint64_t WaveformState.SamplingMode.ValueProvider.FiveBar.__allocating_init(value:)()
{
  uint64_t v0 = swift_allocObject();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29D040);
  sub_255C7DA88();
  swift_endAccess();
  return v0;
}

uint64_t WaveformState.SamplingMode.ValueProvider.FiveBar.init(value:)()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29D040);
  sub_255C7DA88();
  swift_endAccess();
  return v0;
}

uint64_t WaveformState.SamplingMode.ValueProvider.FiveBar.update(to:)()
{
  return sub_255C7DAD8();
}

uint64_t WaveformState.SamplingMode.ValueProvider.FiveBar.deinit()
{
  return sub_255A13C38(&OBJC_IVAR____TtCCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider7FiveBar__value, &qword_26B29D068);
}

uint64_t WaveformState.SamplingMode.ValueProvider.FiveBar.__deallocating_deinit()
{
  return sub_255A13CAC(&OBJC_IVAR____TtCCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider7FiveBar__value, &qword_26B29D068);
}

double sub_255A13970@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t WaveformState.SamplingMode.ValueProvider.SixBar.__allocating_init(value:)()
{
  uint64_t v0 = swift_allocObject();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F80);
  sub_255C7DA88();
  swift_endAccess();
  return v0;
}

uint64_t WaveformState.SamplingMode.ValueProvider.SixBar.init(value:)()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F80);
  sub_255C7DA88();
  swift_endAccess();
  return v0;
}

uint64_t WaveformState.SamplingMode.ValueProvider.SixBar.update(to:)()
{
  return sub_255C7DAD8();
}

uint64_t WaveformState.SamplingMode.ValueProvider.SixBar.deinit()
{
  return sub_255A13C38(&OBJC_IVAR____TtCCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider6SixBar__value, &qword_269F20F88);
}

uint64_t WaveformState.SamplingMode.ValueProvider.SixBar.__deallocating_deinit()
{
  return sub_255A13CAC(&OBJC_IVAR____TtCCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider6SixBar__value, &qword_269F20F88);
}

uint64_t WaveformState.SamplingMode.ValueProvider.deinit()
{
  return sub_255A13C38(&OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value, &qword_269F20F68);
}

uint64_t sub_255A13C38(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2 + *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v2;
}

uint64_t WaveformState.SamplingMode.ValueProvider.__deallocating_deinit()
{
  return sub_255A13CAC(&OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value, &qword_269F20F68);
}

uint64_t sub_255A13CAC(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2 + *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_255A13D48@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WaveformState.SamplingMode.ValueProvider(0);
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

double sub_255A13D88@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_255A13E1C()
{
  return sub_255C7DAD8();
}

double sub_255A13EC0@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_255A13F48()
{
  return sub_255C7DAD8();
}

double sub_255A13FE0@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_255A14068()
{
  return sub_255C7DAD8();
}

uint64_t sub_255A140FC(uint64_t a1)
{
  v24[1] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D438);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v24 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D060);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20FD8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F68);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v1 + OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value;
  char v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v31 = 0u;
  sub_255C7DA88();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D068);
  sub_255C7DA98();
  swift_endAccess();
  sub_255A09998(&qword_26B29D058, &qword_26B29D060);
  sub_255C7DB18();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_255C7DA98();
  swift_endAccess();
  sub_255A09998(&qword_269F20FE0, &qword_269F20FD8);
  uint64_t v20 = v25;
  sub_255C7DBA8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v20);
  uint64_t v21 = v29;
  uint64_t v22 = v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v28, v6, v30);
  swift_beginAccess();
  sub_255C7DAA8();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
  return v27;
}

uint64_t sub_255A14550(uint64_t a1)
{
  v24[1] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D438);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v24 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20FB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20FC0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F68);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v1 + OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value;
  char v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v31 = 0u;
  sub_255C7DA88();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F88);
  sub_255C7DA98();
  swift_endAccess();
  sub_255A09998(&qword_269F20FC8, &qword_269F20FB8);
  sub_255C7DB18();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_255C7DA98();
  swift_endAccess();
  sub_255A09998(&qword_269F20FD0, &qword_269F20FC0);
  uint64_t v20 = v25;
  sub_255C7DBA8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v20);
  uint64_t v21 = v29;
  uint64_t v22 = v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v28, v6, v30);
  swift_beginAccess();
  sub_255C7DAA8();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
  return v27;
}

uint64_t sub_255A149B4()
{
  return MEMORY[0x263EFDDD8];
}

unint64_t destroy for WaveformState(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 2 < 0 && result >= 2) {
    return swift_release();
  }
  return result;
}

unint64_t *_s11MediaCoreUI13WaveformStateOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  if ((int)v4 - 2 < 0 && v3 >= 2) {
    unint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

unint64_t *assignWithCopy for WaveformState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if (*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    unint64_t v5 = *a1;
  }
  int v6 = v5 - 2;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  int v8 = v4 - 2;
  if ((v6 & 0x80000000) == 0)
  {
    if (v8 < 0 && v7 >= 2) {
      unint64_t v7 = swift_retain();
    }
LABEL_15:
    *a1 = v7;
    return a1;
  }
  if ((v8 & 0x80000000) == 0)
  {
    if (v3 >= 2)
    {
      swift_release();
      unint64_t v7 = *a2;
    }
    goto LABEL_15;
  }
  if (v3 < 2)
  {
    if (v7 >= 2)
    {
      *a1 = v7;
      swift_retain();
      return a1;
    }
    goto LABEL_15;
  }
  if (v7 >= 2)
  {
    *a1 = v7;
    swift_retain();
    swift_release();
  }
  else
  {
    swift_release();
    *a1 = *a2;
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for WaveformState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  int v4 = -1;
  if (v3 < 0xFFFFFFFF) {
    int v4 = v3;
  }
  unint64_t v5 = *a2;
  if (v4 - 2 >= 0) {
    goto LABEL_4;
  }
  LODWORD(v7) = -1;
  if (v5 < 0xFFFFFFFF) {
    unint64_t v7 = *a2;
  }
  if ((int)v7 - 2 < 0)
  {
    if (v3 >= 2)
    {
      if (v5 >= 2)
      {
        *a1 = v5;
        swift_release();
        return a1;
      }
      goto LABEL_13;
    }
  }
  else if (v3 >= 2)
  {
LABEL_13:
    swift_release();
  }
LABEL_4:
  *a1 = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WaveformState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_255A14C5C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 2;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_255A14C80(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFD)
  {
    int v2 = -2147483646;
  }
  else
  {
    if (!a2) {
      return result;
    }
    int v2 = 1;
  }
  *unint64_t result = v2 + a2;
  return result;
}

ValueMetadata *type metadata accessor for WaveformState()
{
  return &type metadata for WaveformState;
}

uint64_t *initializeBufferWithCopyOfBuffer for WaveformState.SamplingMode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for WaveformState.SamplingMode(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for WaveformState.SamplingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_retain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for WaveformState.SamplingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformState.SamplingMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WaveformState.SamplingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_255A14EBC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_255A14ED4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for WaveformState.SamplingMode()
{
  return &type metadata for WaveformState.SamplingMode;
}

uint64_t sub_255A14F04()
{
  return type metadata accessor for WaveformState.SamplingMode.ValueProvider(0);
}

uint64_t type metadata accessor for WaveformState.SamplingMode.ValueProvider(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_26B29C118);
}

void sub_255A14F2C()
{
  sub_255A15034();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for WaveformState.SamplingMode.ValueProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WaveformState.SamplingMode.ValueProvider);
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.update(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.__allocating_init(fiveBarProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.__allocating_init(sixBarProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_255A15034()
{
  if (!qword_26B29D440)
  {
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29D440);
    }
  }
}

uint64_t sub_255A1508C()
{
  return type metadata accessor for WaveformState.SamplingMode.ValueProvider.FiveBar(0);
}

uint64_t type metadata accessor for WaveformState.SamplingMode.ValueProvider.FiveBar(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F20F90);
}

void sub_255A150B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_255A150C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  sub_255A1522C(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for WaveformState.SamplingMode.ValueProvider.FiveBar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WaveformState.SamplingMode.ValueProvider.FiveBar);
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.FiveBar.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_255A1518C()
{
  return type metadata accessor for WaveformState.SamplingMode.ValueProvider.SixBar(0);
}

uint64_t type metadata accessor for WaveformState.SamplingMode.ValueProvider.SixBar(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F20FA0);
}

uint64_t sub_255A151B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255A151EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t method lookup function for WaveformState.SamplingMode.ValueProvider.SixBar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WaveformState.SamplingMode.ValueProvider.SixBar);
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.SixBar.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_255A1522C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_255C7DAE8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255A15280()
{
  return 0;
}

uint64_t sub_255A15288(uint64_t a1, unsigned int a2, unint64_t a3, unint64_t a4, double a5)
{
  uint64_t v25 = sub_255C7D898();
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D160);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, v17, v14);
  type metadata accessor for AudioTapQueueProcessor();
  swift_allocObject();
  uint64_t v20 = sub_255AC94A8(a2, a3, a4, (OpaqueAudioQueue *)sub_255A158D4, v19, a5);
  swift_retain();
  sub_255C80998();
  uint64_t v21 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 1, 1, v21);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v20;
  sub_255B5DB70((uint64_t)v13, (uint64_t)&unk_269F20FF0, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_255A15748(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D150);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D160);
  sub_255C809A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_255A15840()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D160);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_255A158D4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D160);

  return sub_255A15748(a1);
}

uint64_t sub_255A15948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C80988();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  int v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_255A095A4((uint64_t)v5, (uint64_t *)&unk_26B29F0C0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_255C80978();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_255C80908();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_269F21000;
  *(void *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_255A15B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 96) = a4;
  return MEMORY[0x270FA2498](sub_255A15BAC, a4, 0);
}

uint64_t sub_255A15BAC()
{
  uint64_t v1 = *(void *)(v0 + 96) + 144;
  swift_beginAccess();
  sub_255A15E88(v1, v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_255A095A4(v0 + 16, &qword_26B297D00);
  if (v2)
  {
    uint64_t v3 = *(OpaqueAudioQueue **)(*(void *)(v0 + 96) + 112);
    if (v3) {
      AudioQueueStop(v3, 1u);
    }
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_beginAccess();
    sub_255A15F58(v0 + 16, v1);
    swift_endAccess();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_255A15C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 128) = a4;
  return MEMORY[0x270FA2498](sub_255A15CB8, a4, 0);
}

uint64_t sub_255A15CB8()
{
  uint64_t v1 = v0[16] + 144;
  swift_beginAccess();
  sub_255A15E88(v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  sub_255A095A4((uint64_t)(v0 + 2), &qword_26B297D00);
  if (!v2)
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = *(OpaqueAudioQueue **)(v3 + 112);
    if (v4)
    {
      AudioQueueStart(v4, 0);
      uint64_t v3 = v0[16];
    }
    v0[5] = type metadata accessor for AudioTapQueueProcessor();
    v0[2] = v3;
    sub_255A15EF0((uint64_t)(v0 + 2), (uint64_t)(v0 + 6));
    swift_beginAccess();
    swift_retain();
    sub_255A15F58((uint64_t)(v0 + 6), v1);
    swift_endAccess();
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_255A15DD0(uint64_t a1)
{
  return sub_255A15948(a1, v1);
}

uint64_t sub_255A15DDC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A16A8C;
  v3[16] = v2;
  return MEMORY[0x270FA2498](sub_255A15CB8, v2, 0);
}

uint64_t sub_255A15E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B297D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A15EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B297D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A15F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B297D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A16004()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A160B0;
  v3[12] = v2;
  return MEMORY[0x270FA2498](sub_255A15BAC, v2, 0);
}

uint64_t sub_255A160B0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_255A161A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A161DC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_255A160B0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F228C0 + dword_269F228C0);
  return v6(a1, v4);
}

uint64_t sub_255A16294(uint64_t a1, double a2)
{
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v53 = (char *)&v51 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v51 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v51 - v16;
  if ((a1 & 0x100000000) != 0) {
    a1 = getpid();
  }
  double v18 = log2(48000.0 / (a2 + COERCE_DOUBLE(1)));
  double v19 = exp2(ceil(v18));
  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v19 < 9.22337204e18)
  {
    uint64_t v55 = v10;
    if (qword_26B29D050 == -1) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_7:
  uint64_t v20 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA560);
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v57(v17, v20, v4);
  uint64_t v21 = sub_255C7D878();
  os_log_type_t v22 = sub_255C80C08();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v56 = v20;
  uint64_t v52 = a1;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v51 = v5;
    uint64_t v26 = v25;
    uint64_t v60 = v25;
    *(_DWORD *)uint64_t v24 = 134349314;
    *(void *)&double v58 = (int)a1;
    sub_255C80F18();
    *(_WORD *)(v24 + 12) = 2082;
    double v58 = 0.0;
    unint64_t v59 = 0xE000000000000000;
    sub_255C810E8();
    sub_255C806E8();
    sub_255C80A88();
    sub_255C806E8();
    double v58 = COERCE_DOUBLE(sub_255A7BEC4(*(uint64_t *)&v58, v59, &v60));
    sub_255C80F18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v21, v22, "AudioTapSetup initialized for pid: %{public}ld, framing: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v26;
    uint64_t v5 = v51;
    MEMORY[0x25A297C00](v27, -1, -1);
    uint64_t v28 = v24;
    uint64_t v20 = v56;
    MEMORY[0x25A297C00](v28, -1, -1);
  }

  uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v17, v4);
  v57(v15, v20, v4);
  sub_255A15280();
  sub_255A15280();
  uint64_t v30 = sub_255C7D878();
  os_log_type_t v31 = sub_255C80C08();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 68157952;
    LODWORD(v58) = 0;
    sub_255C80F18();
    *(_WORD *)(v32 + 8) = 2050;
    double v58 = 48000.0;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v30, v31, "AudioTapSetup sampleRate: %{public}.*fHz", (uint8_t *)v32, 0x12u);
    uint64_t v33 = v32;
    uint64_t v20 = v56;
    MEMORY[0x25A297C00](v33, -1, -1);
  }
  uint64_t v34 = (uint64_t)v19;

  v29(v15, v4);
  uint64_t v35 = v53;
  v57(v53, v20, v4);
  sub_255A15280();
  sub_255A15280();
  uint64_t v36 = sub_255C7D878();
  os_log_type_t v37 = sub_255C80C08();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 68157952;
    LODWORD(v58) = 1;
    sub_255C80F18();
    *(_WORD *)(v38 + 8) = 2050;
    double v58 = 48000.0 / (double)v34;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v36, v37, "AudioTapSetup actual refresh rate: %{public}.*fHz", (uint8_t *)v38, 0x12u);
    uint64_t v39 = v38;
    uint64_t v20 = v56;
    MEMORY[0x25A297C00](v39, -1, -1);
  }

  v29(v35, v4);
  uint64_t v40 = v55;
  v57(v55, v20, v4);
  uint64_t v41 = sub_255C7D878();
  os_log_type_t v42 = sub_255C80C08();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v44 = v54;
  if (v43)
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 134349056;
    uint64_t v40 = v55;
    *(void *)&double v58 = (uint64_t)v19;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v41, v42, "AudioTapSetup frameCount: %{public}ld", v45, 0xCu);
    uint64_t v46 = v45;
    uint64_t v20 = v56;
    MEMORY[0x25A297C00](v46, -1, -1);
  }

  v29(v40, v4);
  v57(v44, v20, v4);
  uint64_t v47 = sub_255C7D878();
  os_log_type_t v48 = sub_255C80C08();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 134349312;
    double v58 = (double)v34 / 48000.0 * 1000.0;
    sub_255C80F18();
    *(_WORD *)(v49 + 12) = 2050;
    double v58 = 48000.0 / (double)v34;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v47, v48, "AudioTapSetup FFT info: dt=%{public}f, df=%{public}f", (uint8_t *)v49, 0x16u);
    MEMORY[0x25A297C00](v49, -1, -1);
  }

  v29(v44, v4);
  return v52;
}

uint64_t FittedTextStack.init(totalLineLimit:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for FittedTextStack(0);
  sub_255C7F448();
  uint64_t v13 = (void *)(a6 + *(int *)(v12 + 36));
  uint64_t v14 = sub_255C7FE58();
  *uint64_t v13 = v17;
  v13[1] = v18;
  if (a1 <= 1) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = a1;
  }
  *(void *)a6 = v15;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 24) = a4 & 1;
  uint64_t result = a5(v14);
  *(void *)(a6 + 32) = result;
  return result;
}

uint64_t type metadata accessor for FittedTextStack(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F21048);
}

uint64_t FittedTextStack.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for FittedTextStack(0);
  uint64_t v4 = v3 - 8;
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v36 = *(void *)(v37 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21010);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21018);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C7F458();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v2 + *(int *)(v4 + 40), v13);
  uint64_t v17 = *(void *)v2;
  uint64_t v18 = (uint64_t *)(v2 + *(int *)(v4 + 44));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v39 = v19;
  uint64_t v40 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF10);
  sub_255C7FE68();
  uint64_t v21 = v41;
  type metadata accessor for FittedTextHeightResolver(0);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_cache;
  *(void *)(v22 + v23) = sub_255A17820(MEMORY[0x263F8EE78]);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22 + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_measurements, v16, v13);
  *(void *)(v22
            + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines) = v17;
  *(void *)(v22
            + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_containerWidth) = v21;
  char v24 = *(unsigned char *)(v2 + 24);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(v2 + 8);
  v8[16] = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21040);
  sub_255A16F2C(v2, v22, (uint64_t)&v8[*(int *)(v25 + 44)]);
  uint64_t v26 = sub_255C801F8();
  uint64_t v28 = v27;
  uint64_t v29 = v35;
  sub_255A1A228(v2, v35, type metadata accessor for FittedTextStack);
  unint64_t v30 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v31 = swift_allocObject();
  sub_255A17B18(v29, v31 + v30);
  sub_255A09540((uint64_t)v8, (uint64_t)v12, &qword_269F21010);
  swift_release();
  uint64_t v32 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))&v12[*(int *)(v10 + 44)];
  *uint64_t v32 = sub_255A17B7C;
  v32[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v31;
  v32[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v26;
  v32[3] = v28;
  sub_255A095A4((uint64_t)v8, &qword_269F21010);
  return sub_255A17BFC((uint64_t)v12, v38);
}

uint64_t type metadata accessor for FittedTextHeightResolver(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F21058);
}

uint64_t sub_255A16F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v30 = type metadata accessor for FittedText();
  MEMORY[0x270FA5388](v30);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)MEMORY[0x263F8EE80];
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void **)(a1 + 32);
    *(void *)(swift_allocObject() + 16) = v12;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21108);
    sub_255C7D6A8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21110);
    sub_255A09998(&qword_269F21118, &qword_269F21108);
    sub_255A1A32C();
    sub_255A1A398();
    return sub_255C80078();
  }
  v29[0] = a1;
  v29[1] = a3;
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    unint64_t v13 = v8 + v10 + *(int *)(v30 + 20);
    sub_255A19134(*(void **)v13, *(void *)(v13 + 8), *(unsigned __int8 *)(v13 + 16), *(void *)(v13 + 24), v8 + v10);
    uint64_t v15 = v14;
    sub_255A1A228(v8 + v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FittedText);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v12;
    unint64_t v18 = sub_255B39D6C((uint64_t)v7);
    uint64_t v19 = v12[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (v12[3] >= v21)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v12 = v32;
        if (v17) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_255B83D04();
        uint64_t v12 = v32;
        if (v22) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_255B80810(v21, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = sub_255B39D6C((uint64_t)v7);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_21;
      }
      unint64_t v18 = v23;
      uint64_t v12 = v32;
      if (v22)
      {
LABEL_3:
        *(void *)(v12[7] + 8 * v18) = v15;
        goto LABEL_4;
      }
    }
    v12[(v18 >> 6) + 8] |= 1 << v18;
    sub_255A1A228((uint64_t)v7, v12[6] + v18 * v11, (uint64_t (*)(void))type metadata accessor for FittedText);
    *(void *)(v12[7] + 8 * v18) = v15;
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_20;
    }
    v12[2] = v27;
LABEL_4:
    swift_bridgeObjectRelease();
    sub_255A1A290((uint64_t)v7);
    v10 += v11;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      a1 = v29[0];
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_255C814B8();
  __break(1u);
  return result;
}

unint64_t sub_255A172A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t result = type metadata accessor for FittedText();
  if (*(void *)(a2 + 16)
    && (unint64_t v7 = result,
        uint64_t v8 = a1 + *(int *)(result + 20),
        uint64_t v9 = *(void *)v8,
        uint64_t v10 = *(void *)(v8 + 8),
        char v11 = *(unsigned char *)(v8 + 16),
        unint64_t result = sub_255B39D6C(a1),
        (v12 & 1) != 0)
    && *(double *)(*(void *)(a2 + 56) + 8 * result) > 0.0)
  {
    sub_255C801F8();
    sub_255C7DFE8();
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + *(int *)(v7 + 28));
    sub_255A093E4(v9, v10, v11);
    swift_bridgeObjectRetain();
    sub_255A093E4(v9, v10, v11);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29B730);
    sub_255A1A3F0((unint64_t *)&qword_26B29B728, (uint64_t *)&unk_26B29B730);
    uint64_t v14 = sub_255C7FFC8();
    uint64_t v22 = v13(v14, v15, v16, v17, v18, v19, v20, v21, v9, v10);
    sub_255A094C0(v9, v10, v11);
    swift_release();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = 0;
  }
  *a3 = v22;
  return result;
}

uint64_t sub_255A1744C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v5 = sub_255C7E0F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FittedTextStack(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  char v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_255C7FC78();
  uint64_t v25 = type metadata accessor for FittedTextStack;
  sub_255A1A228(a2, (uint64_t)v12, type metadata accessor for FittedTextStack);
  char v24 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v24(v8, a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  v21[1] = ((v11 + v14 + v13) & ~v14) + v7;
  unint64_t v22 = (v11 + v14 + v13) & ~v14;
  unint64_t v15 = v22;
  uint64_t v16 = swift_allocObject();
  sub_255A17B18((uint64_t)v12, v16 + v13);
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v17(v16 + v15, v8, v5);
  uint64_t v29 = v23;
  uint64_t v30 = sub_255A19F7C;
  uint64_t v31 = v16;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  sub_255C7E0D8();
  uint64_t v28 = v18;
  sub_255A1A228(v26, (uint64_t)v12, v25);
  v24(v8, a1, v5);
  uint64_t v19 = swift_allocObject();
  sub_255A17B18((uint64_t)v12, v19 + v13);
  v17(v19 + v22, v8, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC40);
  sub_255A1A3F0((unint64_t *)&qword_26B29EC38, &qword_26B29EC40);
  sub_255A1A1D4();
  sub_255C7FB48();
  swift_release();
  swift_release();
  sub_255A0DE20((uint64_t)v30);
  return sub_255A0DE20(v32);
}

uint64_t sub_255A1776C()
{
  uint64_t result = sub_255C7E0D8();
  if (v1 != 0.0)
  {
    double v2 = v1;
    type metadata accessor for FittedTextStack(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF10);
    uint64_t result = sub_255C7FE68();
    if (v3 != v2) {
      return sub_255C7FE78();
    }
  }
  return result;
}

unint64_t sub_255A17820(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21130);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21138);
  uint64_t v6 = sub_255C812F8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_255A09540(v12, (uint64_t)v5, &qword_269F21130);
    unint64_t result = sub_255B39C50((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_255C7D6A8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_255A17A14()
{
  double v1 = (int *)(type metadata accessor for FittedTextStack(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[10];
  uint64_t v4 = sub_255C7F458();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A17B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FittedTextStack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A17B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FittedTextStack(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_255A1744C(a1, v6, a2);
}

uint64_t sub_255A17BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A17C64()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for FittedTextStack(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_255C7F458();
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for FittedTextStack(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_255C7F458();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

uint64_t initializeWithCopy for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_255C7F458();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_255C7F458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_255C7F458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_255C7F458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A18188);
}

uint64_t sub_255A18188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_255C7F458();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A1824C);
}

uint64_t sub_255A1824C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_255C7F458();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_255A182F4()
{
  uint64_t result = sub_255C7F458();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_255A183B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298690);
  uint64_t v2 = (void *)sub_255C812F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_255B39F08(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A184CC(uint64_t a1)
{
  return sub_255A184E4(a1, &qword_269F210C8);
}

unint64_t sub_255A184D8(uint64_t a1)
{
  return sub_255A184E4(a1, &qword_269F210D0);
}

unint64_t sub_255A184E4(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_255C812F8();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_255B39E20(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A185FC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210C0);
  uint64_t v2 = (void *)sub_255C812F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_255B39E20(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18710(uint64_t a1)
{
  return sub_255A18E10(a1, &qword_26B29FCA8, &qword_269F21088, (uint64_t (*)(uint64_t))sub_255B3A064);
}

unint64_t sub_255A18738(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21090);
  uint64_t v2 = sub_255C812F8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_255A09540(v6, (uint64_t)&v15, &qword_269F21098);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_255B39E20(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_255A199E0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18870(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210D8);
  uint64_t v2 = (void *)sub_255C812F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_255B3A068((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A1897C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF90);
  uint64_t v2 = (void *)sub_255C812F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_255B3A140(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18A80(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29DA10);
  uint64_t v2 = (void *)sub_255C812F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_255B39E20(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18BA4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210F8);
  uint64_t v2 = sub_255C812F8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_255A09540(v6, (uint64_t)v15, &qword_269F21100);
    unint64_t result = sub_255B3A1B0((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_255A199E0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18CE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F3A0);
  uint64_t v2 = (void *)sub_255C812F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_255B3A064();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18DE8(uint64_t a1)
{
  return sub_255A18E10(a1, (uint64_t *)&unk_26B29F158, &qword_26B29F0F8, (uint64_t (*)(uint64_t))sub_255B3A064);
}

unint64_t sub_255A18E10(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_255C812F8();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_255A09540(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_255A199E0(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_255A18F40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F210B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210B8);
  uint64_t v6 = sub_255C812F8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_255A09540(v12, (uint64_t)v5, &qword_269F210B0);
    unint64_t result = sub_255B39F90((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_255C7D5C8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_255A19134(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v77 = a4;
  int v76 = a3;
  uint64_t v75 = a2;
  uint64_t v74 = a1;
  uint64_t v8 = sub_255C7D6A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v60 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F210E0);
  MEMORY[0x270FA5388](v15 - 8);
  unsigned __int8 v73 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)(v5 + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_cache);
  swift_beginAccess();
  uint64_t v18 = *v17;
  uint64_t v19 = *(void *)(*v17 + 16);
  BOOL v20 = &unk_269F21000;
  uint64_t v68 = a5;
  if (v19)
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_255B39C50(a5);
    if (v22)
    {
      uint64_t v23 = v6;
      uint64_t v24 = *(void *)(*(void *)(v18 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v24 + 16))
      {
        sub_255B39D24(*(double *)(v23
                                + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_containerWidth));
        if (v25) {
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v6 = v23;
      a5 = v68;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v66 = v17;
  uint64_t v63 = v12;
  unsigned __int8 v67 = v14;
  uint64_t v64 = (char *)v9;
  unsigned __int8 v65 = (char *)v8;
  uint64_t v27 = sub_255C7F418();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(char **)(v28 + 56);
  unint64_t v30 = (unint64_t)v73;
  unint64_t v70 = v27;
  uint64_t v72 = v29;
  unsigned __int8 v71 = (char *)(v28 + 56);
  ((void (*)(char *, uint64_t, uint64_t))v29)(v73, 1, 1);
  sub_255C7F438();
  double v32 = v31;
  sub_255A095A4(v30, &qword_269F210E0);
  uint64_t v33 = a5 + *(int *)(type metadata accessor for FittedText() + 24);
  uint64_t v34 = (uint64_t *)(v6
                  + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines);
  if (*(unsigned char *)(v33 + 8)) {
    uint64_t v33 = v6
  }
        + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines;
  uint64_t v35 = *(void *)v33;
  uint64_t v36 = *v34;
  if (*v34 < v35) {
    uint64_t v35 = *v34;
  }
  if (v35 >= 1)
  {
    uint64_t v61 = (uint64_t *)(v6
                    + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines);
    uint64_t v37 = 0;
    uint64_t v69 = v35;
    double v38 = (double)v35;
    uint64_t v62 = v6;
    double v39 = 0.0;
    uint64_t v12 = v73;
    unint64_t v30 = v70;
    uint64_t v40 = v72;
    char v14 = v71;
    uint64_t v41 = v74;
    LOBYTE(v6) = v75;
    while (1)
    {
      uint64_t v78 = v37;
      ((void (*)(char *, uint64_t, uint64_t, unint64_t))v40)(v12, 1, 1, v30);
      sub_255C7F438();
      double v43 = v42;
      sub_255A095A4((uint64_t)v12, &qword_269F210E0);
      ((void (*)(char *, uint64_t, uint64_t, unint64_t))v40)(v12, 1, 1, v30);
      uint64_t v9 = sub_255C7F428();
      sub_255A095A4((uint64_t)v12, &qword_269F210E0);
      if (v9 < 0) {
        break;
      }
      uint64_t v37 = v78;
      if (v9 != v78)
      {
        double v38 = v38 + 1.0;
        uint64_t v37 = v9;
        double v39 = v43;
        if (v9 < v69) {
          continue;
        }
      }
      uint64_t v34 = v61;
      uint64_t v36 = *v61;
      uint64_t v6 = v62;
      BOOL v20 = (void *)&unk_269F21000;
      goto LABEL_19;
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v37 = 0;
  double v39 = 0.0;
LABEL_19:
  BOOL v44 = __OFSUB__(v36, v37);
  uint64_t v45 = v36 - v37;
  uint64_t v40 = v67;
  uint64_t v41 = v66;
  if (v44) {
    goto LABEL_29;
  }
  *uint64_t v34 = v45;
  uint64_t v12 = v64;
  uint64_t v9 = *((void *)v64 + 2);
  char v14 = v65;
  ((void (*)(char *, uint64_t, char *))v9)(v40, v68, v65);
  double v32 = *(double *)(v6 + v20[7]);
  swift_beginAccess();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unsigned __int8 v79 = (void *)*v41;
  uint64_t v47 = v79;
  *uint64_t v41 = 0x8000000000000000;
  unint64_t v30 = sub_255B39C50((uint64_t)v40);
  uint64_t v49 = v47[2];
  BOOL v50 = (v48 & 1) == 0;
  uint64_t v51 = v49 + v50;
  if (__OFADD__(v49, v50))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  LOBYTE(v6) = v48;
  if (v47[3] >= v51)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_31:
      sub_255B83A6C();
      uint64_t v47 = v79;
    }
  }
  else
  {
    sub_255B803EC(v51, isUniquelyReferenced_nonNull_native);
    uint64_t v47 = v79;
    unint64_t v52 = sub_255B39C50((uint64_t)v40);
    if ((v6 & 1) != (v53 & 1))
    {
      uint64_t result = sub_255C814B8();
      __break(1u);
      return result;
    }
    unint64_t v30 = v52;
  }
  *uint64_t v41 = v47;
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)*v41;
  swift_bridgeObjectRetain();
  if ((v6 & 1) == 0)
  {
    unint64_t v55 = sub_255A199F0(MEMORY[0x263F8EE78]);
    uint64_t v56 = (uint64_t)v63;
    ((void (*)(char *, char *, char *))v9)(v63, v40, v14);
    sub_255BCCE44(v30, v56, v55, v54);
  }
  uint64_t v57 = v54[7];
  swift_bridgeObjectRelease();
  uint64_t v58 = 8 * v30;
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  unsigned __int8 v79 = *(void **)(v57 + v58);
  *(void *)(v57 + v58) = 0x8000000000000000;
  sub_255BCC2A4(v59, v39, v32);
  *(void *)(v57 + v58) = v79;
  swift_bridgeObjectRelease();
  (*((void (**)(char *, char *))v12 + 1))(v40, v14);
  return swift_endAccess();
}

uint64_t sub_255A197B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_measurements;
  uint64_t v2 = sub_255C7F458();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_255A19864()
{
  return type metadata accessor for FittedTextHeightResolver(0);
}

uint64_t sub_255A1986C()
{
  uint64_t result = sub_255C7F458();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_255A1991C()
{
  unint64_t result = qword_269F21068;
  if (!qword_269F21068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21018);
    sub_255A09998(&qword_269F21070, &qword_269F21010);
    sub_255A09998(&qword_269F21078, &qword_269F21080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21068);
  }
  return result;
}

_OWORD *sub_255A199E0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_255A199F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F210E8);
    uint64_t v3 = (void *)sub_255C812F8();
    for (i = (double *)(a1 + 40); ; i += 2)
    {
      double v5 = *(i - 1);
      double v6 = *i;
      unint64_t result = sub_255B39D24(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(double *)(v3[6] + v9) = v5;
      *(double *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_255A19AC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D780);
  uint64_t v3 = (void *)sub_255C812F8();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_255B39E98(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_retain();
    unint64_t result = sub_255B39E98(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_255A19BCC(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210F0);
  uint64_t v3 = (void *)sub_255C812F8();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_255B3A284(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  char v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    char v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_255B3A284(v4);
    char v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_255A19CC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298688);
  uint64_t v3 = sub_255C812F8();
  long long v13 = *(_OWORD *)(a1 + 32);
  unint64_t result = sub_255B3B60C();
  if (v5)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return v3;
  }
  double v6 = (long long *)(a1 + 48);
  uint64_t v7 = v1 - 1;
  while (1)
  {
    *(void *)(v3 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_OWORD *)(*(void *)(v3 + 56) + 16 * result) = v13;
    uint64_t v8 = *(void *)(v3 + 16);
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    *(void *)(v3 + 16) = v10;
    if (!v7) {
      goto LABEL_8;
    }
    long long v11 = *v6++;
    long long v13 = v11;
    swift_retain();
    unint64_t result = sub_255B3B60C();
    --v7;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_255A19DB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F210A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F210A8);
    uint64_t v7 = (void *)sub_255C812F8();
    uint64_t v8 = (char *)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_255A09540(v9, (uint64_t)v5, &qword_269F210A0);
      uint64_t v11 = *v5;
      unint64_t result = sub_255B3A284(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_255C7D5C8();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      void v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for FittedTextStack(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_255C7E0F8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[10];
  uint64_t v8 = sub_255C7F458();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);

  return swift_deallocObject();
}

uint64_t sub_255A1A114()
{
  return sub_255A1776C();
}

unint64_t sub_255A1A1D4()
{
  unint64_t result = qword_26B29B3D0;
  if (!qword_26B29B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B3D0);
  }
  return result;
}

uint64_t sub_255A1A228(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255A1A290(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FittedText();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A1A2EC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_255A1A324@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_255A172A4(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_255A1A32C()
{
  unint64_t result = qword_269F21120;
  if (!qword_269F21120)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21120);
  }
  return result;
}

unint64_t sub_255A1A398()
{
  unint64_t result = qword_269F21128;
  if (!qword_269F21128)
  {
    type metadata accessor for FittedText();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21128);
  }
  return result;
}

uint64_t sub_255A1A3F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A1A460()
{
  return sub_255C80AE8();
}

uint64_t Numeric<>.isApproximatelyEqual(to:relativeTolerance:norm:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a4;
  uint64_t v20 = a1;
  unint64_t v21 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  sub_255C804B8();
  swift_getAssociatedConformanceWitness();
  sub_255C80AD8();
  BOOL v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v15, AssociatedTypeWitness);
  LOBYTE(a7) = AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(v20, (uint64_t)v17, a2, v21, v22, a5, AssociatedTypeWitness, *(void *)(a6 + 8), a7);
  v18(v17, AssociatedTypeWitness);
  return a7 & 1;
}

uint64_t AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v54 = a4;
  uint64_t v56 = a3;
  uint64_t v58 = a2;
  uint64_t v12 = *(void *)(a6 - 8);
  uint64_t v52 = a5;
  uint64_t v53 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  char v59 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v57 = (char *)&v49 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v55 = (char *)&v49 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v51 = (char *)&v49 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  unint64_t v30 = (void (*)(uint64_t))((char *)&v49 - v29);
  MEMORY[0x270FA5388](v28);
  double v32 = (char *)&v49 - v31;
  uint64_t v34 = v33;
  if (sub_255C80578())
  {
    char v35 = 1;
  }
  else
  {
    uint64_t v49 = a9;
    sub_255C81268();
    BOOL v50 = v32;
    uint64_t v36 = v54;
    v54((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v15, a6);
    v36(v9);
    uint64_t v37 = v51;
    v36(v34);
    double v38 = v30;
    uint64_t v39 = *(void *)(*(void *)(v49 + 24) + 8);
    sub_255C81478();
    uint64_t v40 = v60;
    uint64_t v41 = *(void (**)(char *, uint64_t))(v60 + 8);
    double v42 = v37;
    double v43 = v50;
    v41(v42, a7);
    v41(v27, a7);
    uint64_t v54 = v38;
    sub_255C80AD8();
    BOOL v44 = v55;
    uint64_t v58 = v39;
    sub_255C81478();
    v41(v27, a7);
    LOBYTE(v38) = sub_255C804C8();
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    uint64_t v46 = v57;
    v45(v57, v43, a7);
    uint64_t v47 = v59;
    v45(v59, v44, a7);
    if (v38) {
      char v35 = sub_255C80558();
    }
    else {
      char v35 = 0;
    }
    v41(v47, a7);
    v41(v46, a7);
    v41(v44, a7);
    v41((char *)v54, a7);
    v41(v43, a7);
  }
  return v35 & 1;
}

uint64_t Numeric<>.isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v11 = AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(a1, a2, a3, (void (*)(uint64_t))sub_255A1ABD4, (uint64_t)v13, a4, AssociatedTypeWitness, *(void *)(v14 + 8), v15);
  swift_release();
  return v11 & 1;
}

uint64_t sub_255A1AB84()
{
  return sub_255C80AE8();
}

uint64_t sub_255A1ABB4()
{
  return 24;
}

__n128 sub_255A1ABC0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_255A1ABD4()
{
  return swift_getAtKeyPath();
}

uint64_t sub_255A1ABDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v126 = a2;
  uint64_t v3 = sub_255C7EFA8();
  uint64_t v124 = *(void *)(v3 - 8);
  uint64_t v125 = v3;
  MEMORY[0x270FA5388](v3);
  long long v123 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_255C7EC18();
  MEMORY[0x270FA5388](v117);
  long long v116 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7DD28();
  uint64_t v121 = *(void *)(v6 - 8);
  uint64_t v122 = v6;
  MEMORY[0x270FA5388](v6);
  long long v119 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5F8);
  uint64_t v120 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  long long v118 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  _s18ArtworkPlaceholderVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  sub_255C80E88();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  uint64_t v11 = sub_255C7F0D8();
  sub_255C7E458();
  *(void *)&long long v160 = sub_255C7E458();
  _s22MiniPlayerMetadataViewVMa();
  uint64_t v133 = v11;
  *((void *)&v160 + 1) = sub_255C7E458();
  _s31MiniPlayerTransportControlsViewVMa();
  *(void *)&long long v161 = sub_255C7E458();
  *((void *)&v161 + 1) = MEMORY[0x263F1B6B0];
  swift_getTupleTypeMetadata();
  uint64_t v135 = sub_255C80318();
  uint64_t v134 = swift_getWitnessTable();
  uint64_t v12 = sub_255C7FED8();
  uint64_t v129 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v132 = (char *)&v89 - v13;
  uint64_t v14 = sub_255C7E458();
  uint64_t v94 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  v128 = (char *)&v89 - v15;
  uint64_t v16 = sub_255C7E458();
  uint64_t v98 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v131 = (char *)&v89 - v17;
  uint64_t v18 = sub_255C7E458();
  uint64_t v97 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v96 = (char *)&v89 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA78);
  uint64_t v20 = sub_255C7E458();
  uint64_t v105 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v102 = (char *)&v89 - v21;
  uint64_t v130 = v12;
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v157 = v127;
  uint64_t v158 = MEMORY[0x263F18860];
  uint64_t v95 = v14;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = MEMORY[0x263F18C10];
  uint64_t v89 = v22;
  uint64_t v155 = v22;
  uint64_t v156 = MEMORY[0x263F18C10];
  uint64_t v100 = v16;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v153 = v91;
  uint64_t v154 = v23;
  uint64_t v99 = v18;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = sub_255A09998(&qword_26B29BA70, &qword_26B29BA78);
  uint64_t v92 = v24;
  uint64_t v151 = v24;
  uint64_t v152 = v25;
  uint64_t v26 = swift_getWitnessTable();
  *(void *)&long long v160 = v20;
  *((void *)&v160 + 1) = v26;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v109 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v108 = (char *)&v89 - v28;
  uint64_t v106 = v20;
  *(void *)&long long v160 = v20;
  uint64_t v93 = v26;
  *((void *)&v160 + 1) = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = sub_255A09998(&qword_26B29B5F0, &qword_26B29B5F8);
  *(void *)&long long v160 = OpaqueTypeMetadata2;
  uint64_t v31 = v138;
  *((void *)&v160 + 1) = v138;
  *(void *)&long long v161 = OpaqueTypeConformance2;
  *((void *)&v161 + 1) = v30;
  uint64_t v32 = swift_getOpaqueTypeMetadata2();
  uint64_t v107 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v103 = OpaqueTypeConformance2;
  uint64_t v104 = (char *)&v89 - v33;
  uint64_t v110 = OpaqueTypeMetadata2;
  *(void *)&long long v160 = OpaqueTypeMetadata2;
  *((void *)&v160 + 1) = v31;
  *(void *)&long long v161 = OpaqueTypeConformance2;
  uint64_t v34 = v132;
  uint64_t v101 = v30;
  *((void *)&v161 + 1) = v30;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v111 = v32;
  *(void *)&long long v160 = v32;
  unint64_t v137 = v35;
  *((void *)&v160 + 1) = v35;
  uint64_t v36 = swift_getOpaqueTypeMetadata2();
  uint64_t v112 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v90 = (char *)&v89 - v37;
  uint64_t v114 = v38;
  uint64_t v133 = sub_255C7E458();
  uint64_t v39 = *(long long **)(v133 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v133);
  long long v113 = (char *)&v89 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  long long v115 = (char *)&v89 - v42;
  long long v43 = v136[5];
  long long v164 = v136[4];
  v165[0] = v43;
  *(_OWORD *)((char *)v165 + 10) = *(long long *)((char *)v136 + 90);
  long long v44 = v136[1];
  long long v160 = *v136;
  long long v161 = v44;
  long long v45 = v136[3];
  long long v162 = v136[2];
  long long v163 = v45;
  uint64_t v139 = v10;
  uint64_t v140 = v9;
  char v141 = &v160;
  sub_255C7E928();
  sub_255C7FEC8();
  v167[2] = v164;
  v168[0] = v165[0];
  *(_OWORD *)((char *)v168 + 10) = *(_OWORD *)((char *)v165 + 10);
  v167[0] = v162;
  v167[1] = v163;
  v165[4] = v164;
  v166[0] = v165[0];
  *(_OWORD *)((char *)v166 + 10) = *(_OWORD *)((char *)v165 + 10);
  v165[2] = v162;
  v165[3] = v163;
  sub_255A1D474((uint64_t)v167, (uint64_t)v169);
  sub_255A1D4DC((uint64_t)v169, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v147);
  uint64_t result = sub_255A1D4DC((uint64_t)v167, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  if (v150 == 3)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_255C801F8();
  uint64_t v47 = v128;
  uint64_t v48 = v130;
  sub_255C7FA38();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v34, v48);
  sub_255C7F188();
  sub_255A1D4DC((uint64_t)v169, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v147);
  uint64_t result = sub_255A1D4DC((uint64_t)v167, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  uint64_t v49 = v131;
  if (!v150)
  {
    if ((v149 & 1) == 0)
    {
      BOOL v50 = v47;
      goto LABEL_6;
    }
LABEL_12:
    __break(1u);
    return result;
  }
  BOOL v50 = v47;
LABEL_6:
  uint64_t v51 = v95;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v50, v51);
  sub_255C7F1F8();
  if (qword_26B29AD58 != -1) {
    swift_once();
  }
  uint64_t v136 = v39;
  uint64_t v52 = v96;
  uint64_t v53 = v100;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v49, v53);
  sub_255A1D53C();
  uint64_t v54 = v102;
  uint64_t v55 = v99;
  sub_255C7F708();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v52, v55);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v10;
  *(void *)(v56 + 24) = v9;
  long long v57 = v165[0];
  *(_OWORD *)(v56 + 96) = v164;
  *(_OWORD *)(v56 + 112) = v57;
  *(_OWORD *)(v56 + 122) = *(_OWORD *)((char *)v165 + 10);
  long long v58 = v161;
  *(_OWORD *)(v56 + 32) = v160;
  *(_OWORD *)(v56 + 48) = v58;
  long long v59 = v163;
  *(_OWORD *)(v56 + 64) = v162;
  *(_OWORD *)(v56 + 80) = v59;
  sub_255A1D5A0((uint64_t)&v160);
  uint64_t v60 = v108;
  uint64_t v61 = v106;
  sub_255C7F738();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v54, v61);
  if (qword_26B29AD40 != -1) {
    swift_once();
  }
  sub_255C7ED78();
  uint64_t v62 = v119;
  sub_255C7DCF8();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v10;
  *(void *)(v63 + 24) = v9;
  long long v64 = v165[0];
  *(_OWORD *)(v63 + 96) = v164;
  *(_OWORD *)(v63 + 112) = v64;
  *(_OWORD *)(v63 + 122) = *(_OWORD *)((char *)v165 + 10);
  long long v65 = v161;
  *(_OWORD *)(v63 + 32) = v160;
  *(_OWORD *)(v63 + 48) = v65;
  long long v66 = v163;
  *(_OWORD *)(v63 + 64) = v162;
  *(_OWORD *)(v63 + 80) = v66;
  sub_255A1D5A0((uint64_t)&v160);
  sub_255A1D668((unint64_t *)&unk_26B29D368, MEMORY[0x263F185B8]);
  unsigned __int8 v67 = v118;
  uint64_t v68 = v122;
  sub_255C80098();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v62, v68);
  sub_255C7DD68();
  uint64_t v69 = v104;
  uint64_t v70 = v110;
  uint64_t v71 = v138;
  sub_255C7F8E8();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v67, v71);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v60, v70);
  uint64_t v72 = v123;
  sub_255C7EF98();
  unsigned __int8 v73 = v90;
  uint64_t v74 = v111;
  sub_255C7F8F8();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v72, v125);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v69, v74);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BFA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_255C855F0;
  uint64_t v147 = 0;
  unint64_t v148 = 0xE000000000000000;
  sub_255C806E8();
  uint64_t v76 = v161;
  uint64_t v77 = v10;
  uint64_t v78 = v9;
  LOBYTE(v70) = BYTE8(v161);
  sub_255A0877C(v161, SBYTE8(v161));
  sub_255AB99AC(v76, v70, &v144);
  sub_255A087D0(v76, v70);
  char v146 = v144;
  sub_255C81228();
  unint64_t v79 = v148;
  *(void *)(inited + 32) = v147;
  *(void *)(inited + 40) = v79;
  uint64_t v144 = 0x6E6979616C507369;
  unint64_t v145 = 0xEA00000000003D67;
  sub_255C23448(v160);
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v9 + 208);
  swift_unknownObjectRetain();
  v80(v77, v78);
  swift_unknownObjectRelease();
  swift_beginAccess();
  swift_release();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  unint64_t v81 = v145;
  *(void *)(inited + 48) = v144;
  *(void *)(inited + 56) = v81;
  uint64_t v144 = v74;
  unint64_t v145 = v137;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v84 = v113;
  uint64_t v83 = v114;
  sub_255B4C09C(0xD000000000000016, 0x8000000255C9AAD0, inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v73, v83);
  uint64_t v85 = sub_255A1D668((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v142 = v82;
  uint64_t v143 = v85;
  uint64_t v86 = v133;
  swift_getWitnessTable();
  uint64_t v87 = v115;
  sub_255A20F54(v84);
  uint64_t v88 = (void (*)(char *, uint64_t))*((void *)v136 + 1);
  v88(v84, v86);
  sub_255A20F54(v87);
  return ((uint64_t (*)(char *, uint64_t))v88)(v87, v86);
}

uint64_t sub_255A1BE98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v92 = a4;
  uint64_t v7 = _s31MiniPlayerTransportControlsViewVMa();
  sub_255C7F0D8();
  uint64_t v88 = v7;
  uint64_t v91 = sub_255C7E458();
  uint64_t v89 = *(void *)(v91 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v91);
  uint64_t v100 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v90 = (char *)&v77 - v10;
  uint64_t v84 = (void *)_s22MiniPlayerMetadataViewVMa();
  uint64_t v99 = sub_255C7E458();
  uint64_t v87 = *(void *)(v99 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v99);
  uint64_t v103 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v98 = (char *)&v77 - v13;
  uint64_t v14 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v94 = (void (*)(char *, uint64_t))((char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_255C805E8();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v93 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
  _s18ArtworkPlaceholderVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  sub_255C80E88();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v78 = (void (*)(uint64_t, uint64_t))sub_255C7E598();
  uint64_t v79 = sub_255C7E458();
  uint64_t v18 = sub_255C7E458();
  uint64_t v81 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v95 = (char *)&v77 - v19;
  uint64_t v82 = v20;
  uint64_t v21 = sub_255C7E458();
  uint64_t v96 = *(void *)(v21 - 8);
  uint64_t v97 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v80 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v102 = (char *)&v77 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v101 = (char *)&v77 - v26;
  uint64_t v131 = sub_255C7FC78();
  uint64_t v132 = 0x3FF0000000000000;
  LOWORD(v133) = 0;
  *(void *)&long long v85 = a2;
  uint64_t v104 = a2;
  uint64_t v105 = a3;
  *(void *)&long long v86 = a3;
  uint64_t v83 = a1;
  uint64_t v106 = a1;
  sub_255C801F8();
  unint64_t v27 = sub_255A1D6BC();
  sub_255C7FAC8();
  swift_release();
  uint64_t v28 = *((void *)&v119 + 1);
  long long v30 = v120;
  uint64_t v29 = v121;
  uint64_t v31 = v122;
  char v32 = v123;
  uint64_t v131 = v117;
  uint64_t v132 = v118;
  LOWORD(v133) = v119;
  *((void *)&v133 + 1) = *((void *)&v119 + 1);
  long long v134 = v120;
  uint64_t v135 = v121;
  uint64_t v136 = v122;
  char v137 = v123;
  long long v138 = v124;
  uint64_t v33 = swift_getWitnessTable();
  unint64_t v129 = v27;
  uint64_t v130 = v33;
  uint64_t v34 = swift_getWitnessTable();
  sub_255B4BFB8();
  swift_release();
  sub_255A1D730(v28, v30, SBYTE8(v30), v29, v31, v32);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v35 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v117 = sub_255C80648();
  uint64_t v118 = v36;
  uint64_t v37 = sub_255A1D668((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v127 = v34;
  uint64_t v128 = v37;
  uint64_t v38 = v37;
  uint64_t v93 = (char *)v37;
  uint64_t v94 = (void (*)(char *, uint64_t))MEMORY[0x263F18E48];
  uint64_t v39 = v82;
  uint64_t v40 = swift_getWitnessTable();
  sub_255A1D78C();
  uint64_t v41 = v80;
  uint64_t v42 = v95;
  sub_255C7F868();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void))(v81 + 8))(v42, v39);
  long long v43 = v102;
  uint64_t v44 = v97;
  sub_255C7E408();
  long long v45 = (char *)(v96 + 8);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v96 + 8);
  v46(v41, v44);
  uint64_t v82 = v46;
  uint64_t v95 = v45;
  uint64_t v125 = v40;
  uint64_t v126 = v38;
  uint64_t v81 = swift_getWitnessTable();
  sub_255A20F54(v43);
  v46(v43, v44);
  uint64_t v47 = *v83;
  uint64_t v48 = v86;
  uint64_t v79 = *(void *)(v86 + 8);
  uint64_t v49 = v85;
  sub_255C23448(v47);
  uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v48 + 208);
  BOOL v50 = v78;
  swift_unknownObjectRetain();
  v50(v49, v48);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_255A44220((uint64_t)&v117);
  uint64_t v51 = v84;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = v103;
  sub_255C7F998();
  (*(void (**)(uint64_t *, void *))(*(v51 - 1) + 8))(&v117, v51);
  uint64_t v115 = v52;
  long long v116 = v93;
  uint64_t v54 = v99;
  uint64_t v80 = (char *)swift_getWitnessTable();
  sub_255A20F54(v53);
  uint64_t v55 = v87;
  uint64_t v56 = *(void **)(v87 + 8);
  uint64_t v83 = (uint64_t *)(v87 + 8);
  uint64_t v84 = v56;
  ((void (*)(char *, uint64_t))v56)(v53, v54);
  sub_255C23448(v47);
  swift_unknownObjectRetain();
  v78(v49, v48);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_255AD91A8((uint64_t)&v117);
  uint64_t v57 = v121;
  LOBYTE(v47) = v122;
  uint64_t v131 = v117;
  uint64_t v132 = v118;
  long long v85 = v119;
  long long v86 = v120;
  long long v133 = v119;
  long long v134 = v120;
  uint64_t v135 = v121;
  LOBYTE(v136) = v122;
  uint64_t v58 = swift_getWitnessTable();
  long long v59 = v100;
  sub_255C7F998();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_255A087D0(v57, v47);
  uint64_t v113 = v58;
  uint64_t v114 = v93;
  uint64_t v60 = v91;
  uint64_t v93 = (char *)swift_getWitnessTable();
  uint64_t v61 = v90;
  sub_255A20F54(v59);
  uint64_t v62 = v89;
  uint64_t v94 = *(void (**)(char *, uint64_t))(v89 + 8);
  v94(v59, v60);
  uint64_t v63 = v97;
  long long v64 = v102;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v102, v101, v97);
  uint64_t v117 = (uint64_t)v64;
  long long v65 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  long long v66 = v103;
  unsigned __int8 v67 = v98;
  uint64_t v68 = v99;
  v65(v103, v98, v99);
  uint64_t v118 = (uint64_t)v66;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v61, v60);
  uint64_t v111 = 0x4020000000000000;
  char v112 = 0;
  *(void *)&long long v119 = v59;
  *((void *)&v119 + 1) = &v111;
  uint64_t v131 = v63;
  uint64_t v132 = v68;
  *(void *)&long long v133 = v60;
  *((void *)&v133 + 1) = MEMORY[0x263F1B6B0];
  uint64_t v107 = v81;
  long long v108 = v80;
  uint64_t v109 = v93;
  uint64_t v110 = MEMORY[0x263F1B698];
  sub_255AF64A0((uint64_t)&v117, 4uLL, (uint64_t)&v131);
  uint64_t v69 = v94;
  v94(v61, v60);
  uint64_t v70 = v68;
  uint64_t v71 = v68;
  uint64_t v72 = (void (*)(char *, uint64_t))v84;
  ((void (*)(char *, uint64_t))v84)(v67, v70);
  uint64_t v73 = v63;
  uint64_t v74 = v63;
  uint64_t v75 = (uint64_t (*)(char *, uint64_t))v82;
  v82(v101, v73);
  v69(v100, v60);
  v72(v103, v71);
  return v75(v102, v74);
}

uint64_t sub_255A1CA34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  char v2 = *(unsigned char *)(a1 + 24);
  sub_255A0877C(v1, v2);
  sub_255AB99AC(v1, v2, &v50);
  sub_255A087D0(v1, v2);
  if (v50)
  {
    uint64_t v46 = 2;
    _s18ArtworkPlaceholderVMa();
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = 0;
    swift_getTupleTypeMetadata2();
    sub_255C80318();
    swift_getWitnessTable();
    sub_255A97640((uint64_t)&v46, (uint64_t)&v50);
  }
  else
  {
    char v3 = sub_255AC07EC(0);
    uint64_t v5 = v4;
    LOBYTE(v50) = v3 & 1;
    char v7 = v6 & 1;
    uint64_t v51 = v4;
    LOBYTE(v52) = v6 & 1;
    uint64_t v8 = _s18ArtworkPlaceholderVMa();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_255A20F54(&v50);
    sub_255A087D0(v5, v7);
    char v10 = sub_255AC07EC(1);
    uint64_t v12 = v11;
    LOBYTE(v50) = v10 & 1;
    char v14 = v13 & 1;
    uint64_t v51 = v11;
    LOBYTE(v52) = v13 & 1;
    sub_255A20F54(&v50);
    sub_255A087D0(v12, v14);
    char v35 = v42;
    uint64_t v36 = v43;
    char v37 = v44;
    uint64_t v15 = v40;
    char v16 = v41;
    char v32 = v39;
    uint64_t v33 = v40;
    char v34 = v41;
    v38[0] = &v35;
    v38[1] = &v32;
    sub_255A0877C(v43, v44);
    sub_255A0877C(v15, v16);
    v31[0] = v8;
    v31[1] = v8;
    uint64_t v29 = WitnessTable;
    uint64_t v30 = WitnessTable;
    sub_255AF64A0((uint64_t)v38, 2uLL, (uint64_t)v31);
    sub_255A087D0(v40, v41);
    sub_255A087D0(v43, v44);
    sub_255A087D0(v33, v34);
    sub_255A087D0(v36, v37);
    uint64_t v17 = v47;
    LOBYTE(v15) = BYTE8(v47);
    uint64_t v18 = *((void *)&v48 + 1);
    char v19 = v49;
    v27[0] = v46;
    v27[1] = v47;
    v27[2] = BYTE8(v47);
    v27[3] = v48;
    v27[4] = *((void *)&v48 + 1);
    char v28 = v49;
    swift_getTupleTypeMetadata2();
    sub_255C80318();
    swift_getWitnessTable();
    sub_255A97640((uint64_t)v27, (uint64_t)&v50);
    sub_255A087D0(v17, v15);
    sub_255A087D0(v18, v19);
  }
  uint64_t v20 = v50;
  uint64_t v21 = v51;
  char v22 = v52;
  uint64_t v23 = v53;
  uint64_t v24 = v54;
  char v25 = v55;
  _s18ArtworkPlaceholderVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  sub_255C80E88();
  uint64_t v45 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(&v50);
  return sub_255A1D730(v20, v21, v22, v23, v24, v25);
}

uint64_t sub_255A1CE14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_255C23448(*a1);
  unsigned __int8 v6 = 1;
  swift_unknownObjectRetain();
  NowPlayingController.transition(to:animated:)(&v6, 1, a2, a3);

  return swift_unknownObjectRelease();
}

uint64_t sub_255A1CE98(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_255C7DD08();
  if (v8 < 0.0)
  {
    sub_255C23448(*a2);
    unsigned __int8 v9 = 1;
    swift_unknownObjectRetain();
    NowPlayingController.transition(to:animated:)(&v9, 1, a3, a4);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_255A1CF1C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7E628();
  uint64_t v4 = v3;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = KeyPath;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v6;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  return result;
}

void sub_255A1CF9C()
{
  qword_26B29AD48 = 0x4020000000000000;
}

void sub_255A1CFAC()
{
  qword_26B29AD38 = 0x4049000000000000;
}

uint64_t sub_255A1CFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_255A1CFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  if ((a11 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_255A1CFEC(uint64_t a1)
{
  return sub_255A1D054(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104), *(unsigned char *)(a1 + 105));
}

uint64_t sub_255A1D054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  if ((a11 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_255A1D064(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_255A0877C(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v10 = *(void *)(v2 + 56);
  uint64_t v11 = *(void *)(v2 + 64);
  uint64_t v12 = *(void *)(v2 + 72);
  uint64_t v13 = *(void *)(v2 + 80);
  uint64_t v14 = *(void *)(v2 + 88);
  uint64_t v16 = *(void *)(v2 + 96);
  char v17 = *(unsigned char *)(v2 + 104);
  LOBYTE(v2) = *(unsigned char *)(v2 + 105);
  sub_255A1CFDC(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v2);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v16;
  *(unsigned char *)(a1 + 104) = v17;
  *(unsigned char *)(a1 + 105) = v2;
  return a1;
}

uint64_t sub_255A1D154(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  uint64_t v4 = v2[2];
  char v5 = *((unsigned char *)v2 + 24);
  sub_255A0877C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_255A087D0(v6, v7);
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = v2[8];
  uint64_t v13 = v2[9];
  uint64_t v14 = v2[10];
  uint64_t v15 = v2[11];
  uint64_t v28 = v2[12];
  char v29 = *((unsigned char *)v2 + 104);
  LOBYTE(v2) = *((unsigned char *)v2 + 105);
  sub_255A1CFDC(v8, v9, v10, v11, v12, v13, v14, v15, v28, v29, (char)v2);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 80);
  uint64_t v23 = *(void *)(a1 + 88);
  uint64_t v24 = *(void *)(a1 + 96);
  char v25 = *(unsigned char *)(a1 + 104);
  char v26 = *(unsigned char *)(a1 + 105);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v28;
  *(unsigned char *)(a1 + 104) = v29;
  *(unsigned char *)(a1 + 105) = (_BYTE)v2;
  sub_255A1D054(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  return a1;
}

uint64_t sub_255A1D290(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_255A087D0(v5, v6);
  uint64_t v7 = *(void *)(a2 + 96);
  char v8 = *(unsigned char *)(a2 + 104);
  char v9 = *(unsigned char *)(a2 + 105);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 96);
  char v19 = *(unsigned char *)(a1 + 104);
  char v20 = *(unsigned char *)(a1 + 105);
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  long long v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  *(void *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 105) = v9;
  sub_255A1D054(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t sub_255A1D340(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 106)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255A1D39C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 106) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 106) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t _s21MiniPlayerContentViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A1D424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A1D468@<X0>(uint64_t a1@<X8>)
{
  return sub_255A1BE98(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_255A1D474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A1D4DC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, _WORD))
{
  return a1;
}

unint64_t sub_255A1D53C()
{
  unint64_t result = qword_26B29BE58;
  if (!qword_26B29BE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BE58);
  }
  return result;
}

uint64_t sub_255A1D594()
{
  return sub_255A1CE14(v0 + 4, v0[2], v0[3]);
}

uint64_t sub_255A1D5A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 96);
  char v9 = *(unsigned char *)(a1 + 104);
  char v10 = *(unsigned char *)(a1 + 105);
  swift_unknownObjectRetain();
  sub_255A0877C(v2, v3);
  sub_255A1CFDC(v15, v14, v13, v4, v5, v6, v7, v12, v8, v9, v10);
  return a1;
}

uint64_t sub_255A1D65C(uint64_t a1)
{
  return sub_255A1CE98(a1, v1 + 4, v1[2], v1[3]);
}

uint64_t sub_255A1D668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A1D6B0()
{
  return sub_255A1CA34(*(void *)(v0 + 32));
}

unint64_t sub_255A1D6BC()
{
  unint64_t result = qword_26B29B770;
  if (!qword_26B29B770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B770);
  }
  return result;
}

uint64_t sub_255A1D730(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result != 2)
  {
    sub_255A087D0(a2, a3 & 1);
    return sub_255A087D0(a5, a6 & 1);
  }
  return result;
}

unint64_t sub_255A1D78C()
{
  unint64_t result = qword_26B29F250;
  if (!qword_26B29F250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29F250);
  }
  return result;
}

uint64_t sub_255A1D7E0()
{
  return swift_getWitnessTable();
}

BOOL static DeviceMetrics.Layout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceMetrics.size.getter()
{
  return *(void *)v0;
}

void DeviceMetrics.sizeClass.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

void DeviceMetrics.layout.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 18);
}

uint64_t DeviceMetrics.userInterfaceIdiom.getter()
{
  return *(void *)(v0 + 24);
}

__n128 DeviceMetrics.safeAreaInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 72);
  __n128 result = *(__n128 *)(v1 + 40);
  long long v4 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

void sub_255A1DCA8(char *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  if (a2 > 428.0) {
    char v3 = 6;
  }
  else {
    char v3 = 5;
  }
  if (a2 > 414.0) {
    char v4 = v3;
  }
  else {
    char v4 = 4;
  }
  if (a3 > 844.0) {
    char v5 = 3;
  }
  else {
    char v5 = 2;
  }
  if (a2 <= 393.0) {
    char v4 = v5;
  }
  if (a2 <= 375.0) {
    char v4 = a3 > 667.0;
  }
  *a1 = v4;
}

void sub_255A1DD3C(char *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  if (a2 <= 744.0)
  {
    *a1 = 0;
  }
  else if (a2 <= 768.0)
  {
    *a1 = 1;
  }
  else if (a2 <= 810.0)
  {
    *a1 = 2;
  }
  else
  {
    if (a3 > 1112.0) {
      char v3 = 5;
    }
    else {
      char v3 = 4;
    }
    if (a2 <= 834.0) {
      char v4 = v3;
    }
    else {
      char v4 = 6;
    }
    if (a2 > 820.0) {
      char v5 = v4;
    }
    else {
      char v5 = 3;
    }
    *a1 = v5;
  }
}

void sub_255A1DDF4()
{
  qword_26B2AA540 = 0x4090000000000000;
}

double DeviceMetrics.Layout.horizontalMargins.getter()
{
  return dbl_255C85948[*v0];
}

uint64_t DeviceMetrics.Layout.hash(into:)()
{
  return sub_255C81588();
}

uint64_t MCUINamespace<A>.deviceMetrics.getter()
{
  sub_255A1F634();

  return sub_255C7E8C8();
}

uint64_t MCUINamespace<A>.deviceMetrics.setter()
{
  return sub_255C7E8D8();
}

void (*MCUINamespace<A>.deviceMetrics.modify(void *a1))(_OWORD **a1)
{
  char v3 = malloc(0xB0uLL);
  *a1 = v3;
  v3[20] = v1;
  v3[21] = sub_255A1F634();
  sub_255C7E8C8();
  return sub_255A1DF80;
}

void sub_255A1DF80(_OWORD **a1)
{
  char v2 = *((unsigned char *)*a1 + 16);
  __int16 v3 = *(_WORD *)((char *)*a1 + 17);
  uint64_t v4 = *((void *)*a1 + 3);
  char v5 = *((unsigned char *)*a1 + 32);
  char v6 = *((unsigned char *)*a1 + 72);
  uint64_t v1 = (char *)*a1;
  *((_OWORD *)v1 + 5) = **a1;
  v1[96] = v2;
  *(_WORD *)(v1 + 97) = v3;
  *((void *)v1 + 13) = v4;
  v1[112] = v5;
  *(_OWORD *)(v1 + 120) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(v1 + 56);
  v1[152] = v6;
  sub_255C7E8D8();

  free(v1);
}

double MCUINamespace<A>.safeAreaInsets.getter()
{
  sub_255A1F688();
  sub_255C7E8C8();
  return v1;
}

double sub_255A1E04C@<D0>(_OWORD *a1@<X8>)
{
  sub_255A1F688();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_255A1E09C()
{
  return sub_255C7E8D8();
}

uint64_t MCUINamespace<A>.safeAreaInsets.setter()
{
  return sub_255C7E8D8();
}

void (*MCUINamespace<A>.safeAreaInsets.modify(void *a1))(uint64_t a1)
{
  long long v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[8] = v1;
  v3[9] = sub_255A1F688();
  sub_255C7E8C8();
  long long v4 = *((_OWORD *)v3 + 3);
  *(_OWORD *)long long v3 = *((_OWORD *)v3 + 2);
  *((_OWORD *)v3 + 1) = v4;
  return sub_255A1E1AC;
}

void sub_255A1E1AC(uint64_t a1)
{
  uint64_t v1 = *(_OWORD **)a1;
  long long v2 = *(_OWORD *)(*(void *)a1 + 16);
  v1[2] = *v1;
  v1[3] = v2;
  sub_255C7E8D8();

  free(v1);
}

double sub_255A1E204()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  xmmword_26B298E40 = 0uLL;
  byte_26B298E50 = 1;
  *(_WORD *)algn_26B298E51 = 777;
  qword_26B298E58 = (uint64_t)v1;
  byte_26B298E60 = 0;
  double result = 0.0;
  unk_26B298E68 = 0u;
  unk_26B298E78 = 0u;
  byte_26B298E88 = 0;
  return result;
}

double sub_255A1E28C@<D0>(uint64_t a1@<X8>)
{
  if (qword_26B298E90 != -1) {
    swift_once();
  }
  char v2 = byte_26B298E50;
  __int16 v3 = *(_WORD *)algn_26B298E51;
  uint64_t v4 = qword_26B298E58;
  char v5 = byte_26B298E60;
  char v6 = byte_26B298E88;
  *(_OWORD *)a1 = xmmword_26B298E40;
  *(unsigned char *)(a1 + 16) = v2;
  *(_WORD *)(a1 + 17) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = unk_26B298E68;
  double result = dbl_26B298E78[0];
  *(_OWORD *)(a1 + 56) = *(_OWORD *)dbl_26B298E78;
  *(unsigned char *)(a1 + 72) = v6;
  return result;
}

uint64_t sub_255A1E324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A1FBA0();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

double sub_255A1E388()
{
  double result = 0.0;
  xmmword_26B29D928 = 0u;
  unk_26B29D938 = 0u;
  return result;
}

double sub_255A1E39C@<D0>(_OWORD *a1@<X8>)
{
  if (qword_26B299178 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_26B29D928;
  long long v3 = unk_26B29D938;
  *a1 = xmmword_26B29D928;
  a1[1] = v3;
  return result;
}

uint64_t sub_255A1E3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A1FBF4();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

unint64_t DeviceMetrics.description.getter()
{
  if (v0[16]) {
    return 0xD00000000000001DLL;
  }
  unint64_t result = 0xD00000000000001DLL;
  BOOL v2 = v0[17] == 9 || v0[18] == 3;
  if (!v2 && (v0[32] & 1) == 0)
  {
    sub_255C810E8();
    sub_255C806E8();
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C81228();
    sub_255C806E8();
    sub_255C81228();
    sub_255C806E8();
    type metadata accessor for UIUserInterfaceIdiom(0);
    sub_255C81228();
    return 0;
  }
  return result;
}

uint64_t EnvironmentValues.deviceMetrics.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v1 - 8);
  long long v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v0, v4);
  sub_255A1F634();
  sub_255C7E8C8();
  return sub_255A1F6DC((uint64_t)v3);
}

double sub_255A1E768@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_255A1F634();
  sub_255C7E8C8();
  sub_255A1F6DC((uint64_t)v6);
  char v8 = v15;
  __int16 v9 = v16;
  uint64_t v10 = v17;
  char v11 = v18;
  char v12 = v21;
  *(_OWORD *)a2 = v14;
  *(unsigned char *)(a2 + 16) = v8;
  *(_WORD *)(a2 + 17) = v9;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
  *(_OWORD *)(a2 + 40) = v19;
  double result = *(double *)&v20;
  *(_OWORD *)(a2 + 56) = v20;
  *(unsigned char *)(a2 + 72) = v12;
  return result;
}

uint64_t sub_255A1E888(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[1];
  uint64_t v19 = *a1;
  char v8 = *((unsigned char *)a1 + 16);
  __int16 v9 = *(_WORD *)((char *)a1 + 17);
  uint64_t v10 = a1[3];
  char v11 = *((unsigned char *)a1 + 32);
  long long v18 = *(_OWORD *)(a1 + 5);
  uint64_t v12 = a1[7];
  uint64_t v17 = a1[8];
  HIDWORD(v16) = *((unsigned __int8 *)a1 + 72);
  uint64_t v13 = sub_255C7E8B8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, a2, v13);
  uint64_t v20 = v19;
  uint64_t v21 = v7;
  char v22 = v8;
  __int16 v23 = v9;
  uint64_t v24 = v10;
  char v25 = v11;
  long long v26 = v18;
  uint64_t v27 = v12;
  uint64_t v28 = v17;
  char v29 = BYTE4(v16);
  sub_255A1F634();
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v6, v13);
}

uint64_t EnvironmentValues.deviceMetrics.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[1];
  uint64_t v19 = *a1;
  char v8 = *((unsigned char *)a1 + 16);
  __int16 v9 = *(_WORD *)((char *)a1 + 17);
  uint64_t v10 = a1[3];
  char v11 = *((unsigned char *)a1 + 32);
  long long v18 = *(_OWORD *)(a1 + 5);
  uint64_t v12 = a1[7];
  uint64_t v17 = a1[8];
  HIDWORD(v16) = *((unsigned __int8 *)a1 + 72);
  uint64_t v13 = sub_255C7E8B8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v2, v13);
  uint64_t v20 = v19;
  uint64_t v21 = v7;
  char v22 = v8;
  __int16 v23 = v9;
  uint64_t v24 = v10;
  char v25 = v11;
  long long v26 = v18;
  uint64_t v27 = v12;
  uint64_t v28 = v17;
  char v29 = BYTE4(v16);
  sub_255A1F634();
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v2, v6, v13);
}

void (*EnvironmentValues.deviceMetrics.modify(void *a1))(uint64_t **a1, char a2)
{
  long long v3 = malloc(0x128uLL);
  *a1 = v3;
  v3[30] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[31] = v5;
  uint64_t v6 = sub_255C7E8B8();
  v3[32] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[33] = v7;
  char v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[34] = v8;
  v3[35] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v5, v1, v6);
  v3[36] = sub_255A1F634();
  sub_255C7E8C8();
  sub_255A1F6DC((uint64_t)v5);
  return sub_255A1ECDC;
}

void sub_255A1ECDC(uint64_t **a1, char a2)
{
  long long v3 = *a1;
  uint64_t v5 = **a1;
  uint64_t v4 = (*a1)[1];
  char v6 = *((unsigned char *)*a1 + 16);
  char v7 = *((unsigned char *)*a1 + 17);
  char v13 = *((unsigned char *)*a1 + 18);
  uint64_t v14 = (*a1)[3];
  char v15 = *((unsigned char *)*a1 + 32);
  uint64_t v16 = (*a1)[5];
  uint64_t v17 = (*a1)[6];
  uint64_t v18 = (*a1)[8];
  uint64_t v19 = (*a1)[7];
  char v20 = *((unsigned char *)*a1 + 72);
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[34])((*a1)[31], v3[30], v3[32]);
  uint64_t v8 = v3[32];
  uint64_t v9 = v3[33];
  uint64_t v11 = v3[30];
  uint64_t v10 = (void *)v3[31];
  if (a2)
  {
    v3[10] = v5;
    uint64_t v12 = v3 + 10;
  }
  else
  {
    v3[20] = v5;
    uint64_t v12 = v3 + 20;
  }
  v12[1] = v4;
  *((unsigned char *)v12 + 16) = v6;
  *((unsigned char *)v12 + 17) = v7;
  *((unsigned char *)v12 + 18) = v13;
  v12[3] = v14;
  *((unsigned char *)v12 + 32) = v15;
  v12[5] = v16;
  v12[6] = v17;
  v12[7] = v19;
  v12[8] = v18;
  *((unsigned char *)v12 + 72) = v20;
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(v11, v10, v8);
  free(v10);

  free(v3);
}

double EnvironmentValues.safeAreaInsets.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v1 - 8);
  long long v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v0, v4);
  sub_255A1F688();
  sub_255C7E8C8();
  double v5 = v7;
  sub_255A1F6DC((uint64_t)v3);
  return v5;
}

double sub_255A1EF40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_255A1F688();
  sub_255C7E8C8();
  v11[0] = v11[1];
  uint64_t v8 = v12;
  uint64_t v9 = v13;
  sub_255A1F6DC((uint64_t)v6);
  double result = *(double *)v11;
  *(_OWORD *)a2 = v11[0];
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_255A1F040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_OWORD *)a1;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = sub_255C7E8B8();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a2, v9);
  v12[1] = v12[0];
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  sub_255A1F688();
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v9);
}

uint64_t EnvironmentValues.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C7E8B8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v5, v13);
  *(double *)uint64_t v16 = a1;
  *(double *)&v16[1] = a2;
  *(double *)&v16[2] = a3;
  *(double *)&v16[3] = a4;
  sub_255A1F688();
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v5, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v5, v12, v13);
}

void (*EnvironmentValues.safeAreaInsets.modify(void *a1))(uint64_t **a1, char a2)
{
  long long v3 = malloc(0xB8uLL);
  *a1 = v3;
  v3[16] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[17] = v5;
  uint64_t v6 = sub_255C7E8B8();
  v3[18] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[19] = v7;
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[20] = v8;
  v3[21] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v5, v1, v6);
  v3[22] = sub_255A1F688();
  sub_255C7E8C8();
  long long v12 = *((_OWORD *)v3 + 2);
  uint64_t v9 = v3[6];
  uint64_t v10 = v3[7];
  sub_255A1F6DC((uint64_t)v5);
  *(_OWORD *)long long v3 = v12;
  v3[2] = v9;
  v3[3] = v10;
  return sub_255A1F428;
}

void sub_255A1F428(uint64_t **a1, char a2)
{
  long long v3 = *a1;
  uint64_t v4 = (*a1)[19];
  uint64_t v6 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v8 = (*a1)[2];
  uint64_t v7 = (*a1)[3];
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[20])((*a1)[17], (*a1)[16], (*a1)[18]);
  uint64_t v9 = (void *)v3[17];
  uint64_t v10 = v3[18];
  uint64_t v11 = v3[16];
  if (a2)
  {
    v3[8] = v6;
    long long v12 = v3 + 8;
  }
  else
  {
    v3[12] = v6;
    long long v12 = v3 + 12;
  }
  v12[1] = v5;
  _OWORD v12[2] = v8;
  v12[3] = v7;
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v10);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v11, v9, v10);
  free(v9);

  free(v3);
}

uint64_t _s11MediaCoreUI13DeviceMetricsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a1 + 17);
  int v5 = *(unsigned __int8 *)(a1 + 18);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 72);
  uint64_t result = *(unsigned __int8 *)(a2 + 16);
  int v10 = *(unsigned __int8 *)(a2 + 17);
  int v11 = *(unsigned __int8 *)(a2 + 18);
  if (v3)
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return result;
    }
  }
  else
  {
    if (result) {
      return 0;
    }
    uint64_t result = 0;
    if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      return result;
    }
  }
  if (v4 == 9)
  {
    if (v10 != 9) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    if (v10 == 9 || v4 != v10) {
      return result;
    }
  }
  if (v5 == 3)
  {
    if (v11 != 3) {
      return 0;
    }
LABEL_17:
    if (v7)
    {
      if (!*(unsigned char *)(a2 + 32)) {
        return 0;
      }
    }
    else
    {
      if (v6 == *(void *)(a2 + 24)) {
        char v12 = *(unsigned char *)(a2 + 32);
      }
      else {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    if (v8)
    {
      if ((*(unsigned char *)(a2 + 72) & 1) == 0) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a2 + 72) & 1) != 0 || (sub_255C7DBF8() & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  uint64_t result = 0;
  if (v11 != 3 && v5 == v11) {
    goto LABEL_17;
  }
  return result;
}

unint64_t sub_255A1F634()
{
  unint64_t result = qword_26B298E98;
  if (!qword_26B298E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298E98);
  }
  return result;
}

unint64_t sub_255A1F688()
{
  unint64_t result = qword_26B299180;
  if (!qword_26B299180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299180);
  }
  return result;
}

uint64_t sub_255A1F6DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_255A1F740()
{
  unint64_t result = qword_269F21140;
  if (!qword_269F21140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21140);
  }
  return result;
}

unint64_t sub_255A1F798()
{
  unint64_t result = qword_269F21148;
  if (!qword_269F21148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21148);
  }
  return result;
}

uint64_t sub_255A1F7F4()
{
  return 0;
}

uint64_t sub_255A1F80C()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for DeviceMetrics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 253);
  }
  if (*(unsigned __int8 *)(a1 + 18) <= 3u) {
    int v3 = 3;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 18);
  }
  int v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 18) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 18) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceMetrics()
{
  return &type metadata for DeviceMetrics;
}

uint64_t getEnumTagSinglePayload for DeviceMetrics.SizeClass(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceMetrics.SizeClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A1FA44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceMetrics.SizeClass()
{
  return &type metadata for DeviceMetrics.SizeClass;
}

unsigned char *storeEnumTagSinglePayload for DeviceMetrics.Layout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A1FB48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceMetrics.Layout()
{
  return &type metadata for DeviceMetrics.Layout;
}

ValueMetadata *type metadata accessor for SafeAreaInsetsKey()
{
  return &type metadata for SafeAreaInsetsKey;
}

ValueMetadata *type metadata accessor for DeviceMetricsKey()
{
  return &type metadata for DeviceMetricsKey;
}

unint64_t sub_255A1FBA0()
{
  unint64_t result = qword_26B297B90;
  if (!qword_26B297B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B297B90);
  }
  return result;
}

unint64_t sub_255A1FBF4()
{
  unint64_t result = qword_26B29B538;
  if (!qword_26B29B538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B538);
  }
  return result;
}

uint64_t static MCUINamespace<A>.motionModeKey.getter()
{
  return 0x6F4D6E6F69746F6DLL;
}

MediaCoreUI::MotionMode_optional __swiftcall MotionMode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (MediaCoreUI::MotionMode_optional)rawValue;
}

uint64_t MotionMode.rawValue.getter()
{
  return *v0;
}

MediaCoreUI::MotionMode_optional sub_255A1FC98(Swift::Int *a1)
{
  return MotionMode.init(rawValue:)(*a1);
}

void sub_255A1FCA0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t MotionMode.description.getter()
{
  uint64_t v1 = 28271;
  if (*v0 == 1) {
    uint64_t v1 = 0x796C6E4F69666977;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6710895;
  }
}

uint64_t sub_255A1FCF4()
{
  uint64_t v1 = 28271;
  if (*v0 == 1) {
    uint64_t v1 = 0x796C6E4F69666977;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6710895;
  }
}

uint64_t static NSUserDefaults.MotionModeKey.getter()
{
  return 0x6F4D6E6F69746F6DLL;
}

unint64_t sub_255A1FD5C()
{
  unint64_t result = qword_269F21150;
  if (!qword_269F21150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21150);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MotionMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A1FE7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionMode()
{
  return &type metadata for MotionMode;
}

uint64_t SplitPercentageLayout.axis.getter()
{
  return *v0;
}

uint64_t SplitPercentageLayout.axis.setter(uint64_t result)
{
  *uint64_t v1 = result & 1;
  return result;
}

uint64_t (*SplitPercentageLayout.axis.modify())()
{
  return CGSizeMake;
}

uint64_t SplitPercentageLayout.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SplitPercentageLayout.locations.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SplitPercentageLayout.locations.modify())()
{
  return CGSizeMake;
}

uint64_t SplitPercentageLayout.init(axis:locations:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = result & 1;
  *(void *)(a3 + 8) = a2;
  return result;
}

double SplitPercentageLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t SplitPercentageLayout.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, int a2, uint64_t a3, int a4, void (*a5)(char *, uint64_t, uint64_t))
{
  unsigned int v6 = v5;
  int v96 = a4;
  double v94 = *(double *)&a3;
  int v95 = a2;
  double v93 = *(double *)&a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v92 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v91 = (char *)&v84 - v11;
  uint64_t v12 = sub_255C7E158();
  uint64_t v106 = *(char **)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v90 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v100 = (char *)&v84 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v89 = (char *)&v84 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v99 = (char *)&v84 - v19;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D790);
  uint64_t v20 = MEMORY[0x270FA5388](v97);
  uint64_t v88 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v87 = (char *)&v84 - v22;
  uint64_t v23 = sub_255C7E288();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v107 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v84 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D7A8);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D7A0);
  uint64_t v32 = MEMORY[0x270FA5388](v86);
  uint64_t v84 = (char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  char v35 = (char *)&v84 - v34;
  int v85 = *v6;
  uint64_t v36 = *((void *)v6 + 1);
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = sub_255A20C64((unint64_t *)&qword_26B29F290);
  sub_255C80B08();
  sub_255C80B48();
  uint64_t v39 = sub_255C80B38();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v105 = v37;
  if (v37 != v39)
  {
LABEL_49:
    v40(v107, (char *)a5, v23);
    v108[0] = 0;
    v108[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_255C810E8();
    sub_255C806E8();
    sub_255C80B08();
    sub_255C80B48();
    uint64_t v109 = sub_255C80B38();
    sub_255C813E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v109 = v105;
    sub_255C813E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    uint64_t result = sub_255C81248();
    __break(1u);
    return result;
  }
  uint64_t v104 = v40;
  uint64_t v105 = v24 + 16;
  v40(v31, (char *)a5, v23);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v31, v23);
  sub_255A20C64(&qword_26B29D798);
  uint64_t v41 = v36;
  swift_bridgeObjectRetain();
  uint64_t v102 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v103 = (void (**)(char *))(v106 + 16);
  uint64_t v107 = v106 + 56;
  uint64_t v101 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
  char v42 = (void (**)(char *, uint64_t, uint64_t))(v106 + 32);
  uint64_t v98 = (void (**)(char *, uint64_t))(v106 + 8);
  if (v85)
  {
    if (v96) {
      double v43 = 10.0;
    }
    else {
      double v43 = v94;
    }
    sub_255C80788();
    uint64_t v44 = v86;
    uint64_t v45 = &v35[*(int *)(v86 + 52)];
    *(void *)uint64_t v45 = v41;
    *((void *)v45 + 1) = 0;
    uint64_t v100 = v45;
    uint64_t v106 = &v35[*(int *)(v44 + 56)];
    *uint64_t v106 = 0;
    uint64_t v46 = &v35[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_26B29D7B0) + 36)];
    double v47 = 0.0;
    long long v48 = v87;
    while (1)
    {
      uint64_t v49 = *(void *)v46;
      sub_255C80B48();
      if (v49 == v108[0])
      {
        uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v107;
        uint64_t v82 = &v110;
        goto LABEL_41;
      }
      uint64_t v50 = (void (*)(void *, void))sub_255C80B98();
      uint64_t v51 = (uint64_t)v91;
      (*v103)(v91);
      v50(v108, 0);
      v104(v28, v35, v23);
      sub_255C80B58();
      (*v102)(v28, v23);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v107)(v51, 0, 1, v12);
      if ((*v101)(v51, 1, v12) == 1) {
        goto LABEL_42;
      }
      a5 = *v42;
      (*v42)(v99, v51, v12);
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))v100;
      unint64_t v52 = *((void *)v100 + 1);
      unint64_t v53 = *(void *)(*(void *)v100 + 16);
      if (v52 == v53)
      {
        (*v98)(v99, v12);
        goto LABEL_45;
      }
      if (v52 >= v53) {
        break;
      }
      double v54 = *((double *)v40 + v52 + 4);
      *((void *)v100 + 1) = v52 + 1;
      uint64_t v55 = *(int *)(v97 + 48);
      a5(v48, (uint64_t)v99, v12);
      *(double *)&v48[v55] = v54;
      uint64_t v56 = v89;
      a5(v89, (uint64_t)v48, v12);
      if (v54 > 0.0) {
        double v57 = v54;
      }
      else {
        double v57 = 0.0;
      }
      if (v54 >= 1.0) {
        double v57 = 1.0;
      }
      double v58 = v43 * v57 - v47;
      if (v58 < 0.0) {
        double v59 = 0.0;
      }
      else {
        double v59 = v58;
      }
      sub_255C80338();
      LOBYTE(v108[0]) = v95 & 1;
      LOBYTE(v109) = 0;
      sub_255C7E138();
      (*v98)(v56, v12);
      double v47 = v47 + v59;
      if (*v106) {
        return sub_255A095A4((uint64_t)v35, &qword_26B29D7A0);
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v60 = v84;
  char v35 = v84;
  if (v95) {
    double v61 = 10.0;
  }
  else {
    double v61 = v93;
  }
  sub_255C80788();
  uint64_t v62 = v86;
  uint64_t v63 = &v60[*(int *)(v86 + 52)];
  *(void *)uint64_t v63 = v41;
  *((void *)v63 + 1) = 0;
  uint64_t v99 = v63;
  uint64_t v106 = &v60[*(int *)(v62 + 56)];
  *uint64_t v106 = 0;
  long long v64 = &v60[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_26B29D7B0) + 36)];
  double v65 = 0.0;
  while (1)
  {
    uint64_t v66 = *(void *)v64;
    sub_255C80B48();
    if (v66 == v108[0])
    {
      uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v107;
      uint64_t v82 = &v111;
LABEL_41:
      uint64_t v51 = *(v82 - 32);
      v81(v51, 1, 1, v12);
LABEL_42:
      sub_255A095A4(v51, &qword_26B29D470);
      goto LABEL_45;
    }
    unsigned __int8 v67 = (void (*)(void *, void))sub_255C80B98();
    uint64_t v51 = (uint64_t)v92;
    (*v103)(v92);
    v67(v108, 0);
    v104(v28, v35, v23);
    sub_255C80B58();
    (*v102)(v28, v23);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v107)(v51, 0, 1, v12);
    if ((*v101)(v51, 1, v12) == 1) {
      goto LABEL_42;
    }
    a5 = *v42;
    (*v42)(v100, v51, v12);
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))v99;
    unint64_t v68 = *((void *)v99 + 1);
    unint64_t v69 = *(void *)(*(void *)v99 + 16);
    if (v68 == v69) {
      break;
    }
    if (v68 >= v69) {
      goto LABEL_48;
    }
    double v70 = *((double *)v40 + v68 + 4);
    *((void *)v99 + 1) = v68 + 1;
    uint64_t v71 = *(int *)(v97 + 48);
    uint64_t v72 = v35;
    uint64_t v73 = v38;
    uint64_t v74 = v28;
    uint64_t v75 = v88;
    a5(v88, (uint64_t)v100, v12);
    *(double *)&v75[v71] = v70;
    uint64_t v76 = v90;
    uint64_t v77 = v75;
    uint64_t v28 = v74;
    uint64_t v38 = v73;
    char v35 = v72;
    a5(v90, (uint64_t)v77, v12);
    if (v70 > 0.0) {
      double v78 = v70;
    }
    else {
      double v78 = 0.0;
    }
    if (v70 >= 1.0) {
      double v78 = 1.0;
    }
    double v79 = v61 * v78 - v65;
    if (v79 < 0.0) {
      double v80 = 0.0;
    }
    else {
      double v80 = v79;
    }
    sub_255C80338();
    LOBYTE(v108[0]) = 0;
    LOBYTE(v109) = v96 & 1;
    sub_255C7E138();
    (*v98)(v76, v12);
    double v65 = v65 + v80;
    if (*v106) {
      return sub_255A095A4((uint64_t)v35, &qword_26B29D7A0);
    }
  }
  (*v98)(v100, v12);
LABEL_45:
  *uint64_t v106 = 1;
  return sub_255A095A4((uint64_t)v35, &qword_26B29D7A0);
}

uint64_t sub_255A20C64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255C7E288();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255A20CAC()
{
  unint64_t result = qword_26B29D468;
  if (!qword_26B29D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D468);
  }
  return result;
}

double sub_255A20D10(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t sub_255A20D30(uint64_t a1, char a2, uint64_t a3, char a4, void (*a5)(char *, uint64_t, uint64_t))
{
  return SplitPercentageLayout.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_255A20D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_255A20DB8(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B668]);
}

uint64_t sub_255A20D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_255A20DB8(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B670]);
}

uint64_t sub_255A20DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for SplitPercentageLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SplitPercentageLayout()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SplitPercentageLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SplitPercentageLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitPercentageLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitPercentageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitPercentageLayout()
{
  return &type metadata for SplitPercentageLayout;
}

uint64_t sub_255A20F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t MaterialView.init(_:placeholder:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  char v7 = *((unsigned char *)a1 + 16);
  uint64_t v8 = (int *)type metadata accessor for MaterialView();
  uint64_t v9 = v8[10];
  __swift_instantiateConcreteTypeFromMangledName(qword_269F21200);
  sub_255C7FE58();
  *(_OWORD *)(a3 + v9) = v13;
  uint64_t v10 = a3 + v8[11];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(unsigned char *)(v10 + 8) = 0;
  uint64_t v11 = a3 + v8[12];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  return a2();
}

uint64_t type metadata accessor for MaterialView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A21088()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21288);
  sub_255C7FE68();
  return v1;
}

uint64_t sub_255A210D4()
{
  return sub_255C7FE78();
}

uint64_t sub_255A21124(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 44);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  j__swift_retain();
  uint64_t v5 = sub_255AB9C8C(v3, v4);
  j__swift_release();
  return v5;
}

uint64_t sub_255A21184@<X0>(void *a1@<X8>)
{
  sub_255A23024();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A211D4@<X0>(void *a1@<X8>)
{
  sub_255A23024();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A21224()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A21288(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 48);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A0877C(*(void *)v2, v4);
  uint64_t v5 = sub_255AB9CBC(v3, v4);
  sub_255A087D0(v3, v4);
  return v5;
}

uint64_t sub_255A212E8@<X0>(unsigned char *a1@<X8>)
{
  sub_255A22FD0();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A21338@<X0>(unsigned char *a1@<X8>)
{
  sub_255A22FD0();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A21388()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A213D4()
{
  return sub_255C7E8D8();
}

uint64_t MaterialView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v48 = a2;
  uint64_t v4 = sub_255C80988();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *(void *)(a1 - 8);
  uint64_t v42 = *(void *)(v40 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F211C0);
  uint64_t v38 = sub_255C7E458();
  uint64_t v44 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v49 = (char *)&v36 - v13;
  sub_255C7E1A8();
  uint64_t v14 = sub_255C7E458();
  uint64_t v43 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v37 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = (char *)&v36 - v17;
  uint64_t v18 = *(int *)(a1 + 36);
  uint64_t v36 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v2 + v18, v9);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v50 = v9;
  uint64_t v51 = v19;
  uint64_t v52 = v2;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F211C8);
  sub_255A21A44();
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v21 = v39;
  uint64_t v20 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v36, a1);
  unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v9;
  *(void *)(v23 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v23 + v22, v21, a1);
  unint64_t v24 = sub_255A22114();
  uint64_t v55 = v19;
  unint64_t v56 = v24;
  uint64_t v25 = v38;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v45;
  sub_255C80968();
  uint64_t v28 = v37;
  uint64_t v29 = v49;
  sub_255C7FA18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v47);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v25);
  unint64_t v30 = sub_255A22170();
  uint64_t v53 = WitnessTable;
  unint64_t v54 = v30;
  swift_getWitnessTable();
  uint64_t v31 = v43;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v33 = v41;
  v32(v41, v28, v14);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v28, v14);
  v32(v48, v33, v14);
  return ((uint64_t (*)(char *, uint64_t))v34)(v33, v14);
}

void sub_255A21960(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MaterialView();
  uint64_t v5 = (void *)sub_255A21088();
  int64x2_t v6 = 0uLL;
  if (v5)
  {
    uint64_t v7 = sub_255A21124(v4);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v10 = *(void **)a1;
      uint64_t v9 = *(void **)(a1 + 8);
      uint64_t v11 = *(unsigned __int8 *)(a1 + 16);
      sub_255A22540(*(void **)a1, v9, *(unsigned char *)(a1 + 16));
      int64x2_t v6 = vdupq_n_s64(0xFuLL);
      v6.i64[0] = v8;
      uint64_t v12 = &off_270486A50;
    }
    else
    {

      uint64_t v10 = 0;
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v5 = 0;
      uint64_t v12 = 0;
      int64x2_t v6 = 0uLL;
    }
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v12;
  *(int64x2_t *)(a2 + 40) = v6;
}

void sub_255A21A38(uint64_t a1@<X8>)
{
  sub_255A21960(*(void *)(v1 + 32), a1);
}

unint64_t sub_255A21A44()
{
  unint64_t result = qword_269F211D0;
  if (!qword_269F211D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F211C8);
    sub_255A21AB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F211D0);
  }
  return result;
}

unint64_t sub_255A21AB8()
{
  unint64_t result = qword_269F211D8;
  if (!qword_269F211D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F211D8);
  }
  return result;
}

uint64_t sub_255A21B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_255C80958();
  v3[5] = sub_255C80948();
  uint64_t v5 = sub_255C80908();
  v3[6] = v5;
  v3[7] = v4;
  return MEMORY[0x270FA2498](sub_255A21BA8, v5, v4);
}

uint64_t sub_255A21BA8()
{
  uint64_t v1 = type metadata accessor for MaterialView();
  v0[8] = v1;
  uint64_t v2 = (void *)sub_255A21088();

  if (v2 || (uint64_t v5 = sub_255A21124(v1), (v0[9] = v5) == 0))
  {
    swift_release();
    char v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v6 = v5;
    swift_retain();
    char v7 = sub_255A21288(v1);
    objc_allocWithZone((Class)type metadata accessor for MaterialRenderer());
    uint64_t v8 = (void *)swift_task_alloc();
    v0[10] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_255A21CE8;
    return sub_255B4D1E4(v6, v7);
  }
}

uint64_t sub_255A21CE8(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return MEMORY[0x270FA2498](sub_255A21E10, v4, v3);
}

uint64_t sub_255A21E10()
{
  swift_release();
  sub_255A210D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255A21E98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for MaterialView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  sub_255A21FCC(*(void **)v3, *(void **)(v3 + 8), *(unsigned char *)(v3 + 16));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[11], v1);

  swift_release();
  j__swift_release();
  sub_255A087D0(*(void *)(v3 + v2[14]), *(unsigned char *)(v3 + v2[14] + 8));

  return swift_deallocObject();
}

void sub_255A21FCC(void *a1, void *a2, char a3)
{
  if ((a3 & 1) == 0)
  {
  }
}

uint64_t sub_255A22028()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for MaterialView() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_255A160B0;
  return sub_255A21B0C(v5, v2, v3);
}

unint64_t sub_255A22114()
{
  unint64_t result = qword_269F211F0;
  if (!qword_269F211F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F211C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F211F0);
  }
  return result;
}

unint64_t sub_255A22170()
{
  unint64_t result = qword_269F211F8;
  if (!qword_269F211F8)
  {
    sub_255C7E1A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F211F8);
  }
  return result;
}

uint64_t MaterialView<>.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(qword_269F21200);
  sub_255C7FE58();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  uint64_t result = sub_255C7FC78();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = result;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = KeyPath;
  *(unsigned char *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = v7;
  *(unsigned char *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_255A22278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A222BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_255A222C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_255A22374(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((((v8 + ((v7 + 17) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = &v11[(v7 & 0xF8 ^ 0x1F8) & (v7 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = *a2;
    uint64_t v13 = a2[1];
    char v14 = *((unsigned char *)a2 + 16);
    sub_255A22540(*a2, v13, v14);
    *(void *)a1 = v12;
    *((void *)a1 + 1) = v13;
    a1[16] = v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&a1[v7 + 17] & ~v7, ((unint64_t)a2 + v7 + 17) & ~v7, v5);
    uint64_t v15 = (void *)((v8 + ((unint64_t)&a1[v7 + 17] & ~v7)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v16 = (v8 + (((unint64_t)a2 + v7 + 17) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void **)v16;
    *uint64_t v15 = *(void *)v16;
    v15[1] = *(void *)(v16 + 8);
    unint64_t v18 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v12) = *(unsigned char *)(v19 + 8);
    id v21 = v17;
    swift_retain();
    j__swift_retain();
    *(void *)unint64_t v18 = v20;
    *(unsigned char *)(v18 + 8) = (_BYTE)v12;
    unint64_t v22 = ((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)v23;
    LOBYTE(v20) = *(unsigned char *)(v23 + 8);
    sub_255A0877C(*(void *)v23, v20);
    *(void *)unint64_t v22 = v24;
    *(unsigned char *)(v22 + 8) = v20;
  }
  return a1;
}

id sub_255A22540(void *a1, void *a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    id v5 = a1;
    a1 = a2;
    uint64_t v3 = vars8;
  }
  return a1;
}

uint64_t sub_255A22580(uint64_t a1, uint64_t a2)
{
  sub_255A21FCC(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = (id *)((*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);

  swift_release();
  j__swift_release();
  unint64_t v8 = ((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_255A087D0(v9, v10);
}

uint64_t sub_255A22650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_255A22540(*(void **)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 + 17 + a1) & ~v11;
  uint64_t v13 = (v11 + 17 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void **)v16;
  *uint64_t v15 = *(void *)v16;
  v15[1] = *(void *)(v16 + 8);
  unint64_t v18 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v10) = *(unsigned char *)(v19 + 8);
  id v21 = v17;
  swift_retain();
  j__swift_retain();
  *(void *)unint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v10;
  unint64_t v22 = ((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v20) = *(unsigned char *)(v23 + 8);
  sub_255A0877C(*(void *)v23, v20);
  *(void *)unint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v20;
  return a1;
}

uint64_t sub_255A2278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_255A22540(*(void **)a2, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void **)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_255A21FCC(v9, v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 17 + a1) & ~v14;
  uint64_t v16 = (v14 + 17 + a2) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 40) + 7;
  unint64_t v18 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v17 + v16) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void **)v18;
  id v21 = *(void **)v19;
  *(void *)unint64_t v18 = *(void *)v19;
  id v22 = v21;

  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  swift_retain();
  swift_release();
  unint64_t v23 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)v24;
  LOBYTE(v16) = *(unsigned char *)(v24 + 8);
  j__swift_retain();
  *(void *)unint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v16;
  j__swift_release();
  unint64_t v26 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  LOBYTE(v16) = *(unsigned char *)(v27 + 8);
  sub_255A0877C(*(void *)v27, v16);
  uint64_t v29 = *(void *)v26;
  char v30 = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v16;
  sub_255A087D0(v29, v30);
  return a1;
}

uint64_t sub_255A228F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 17 + a1) & ~v6;
  uint64_t v8 = (v6 + 17 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  char v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)unint64_t v12 = v14;
  unint64_t v15 = ((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v12) = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v12;
  return a1;
}

uint64_t sub_255A229DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255A21FCC(v7, v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 17 + a1) & ~v12;
  uint64_t v14 = (v12 + 17 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 24) + 7;
  unint64_t v16 = (v15 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = *(void **)v16;
  *(void *)unint64_t v16 = *v17;

  *(void *)(v16 + 8) = v17[1];
  swift_release();
  unint64_t v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  LOBYTE(v20) = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v20;
  j__swift_release();
  unint64_t v22 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v17 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v23) = *(unsigned char *)(v23 + 8);
  uint64_t v25 = *(void *)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v23;
  sub_255A087D0(v25, v26);
  return a1;
}

uint64_t sub_255A22B0C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + ((v6 + 17) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = a1[v9];
        if (!a1[v9]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)&a1[v9];
        if (*(_WORD *)&a1[v9]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255A22CA4);
      case 4:
        int v14 = *(_DWORD *)&a1[v9];
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = (v14 - 1) << (8 * v9);
        if (v9 >= 4) {
          int v16 = 0;
        }
        if (((((v8 + ((v6 + 17) & ~v6)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v17 = *a1;
        }
        else {
          int v17 = *(_DWORD *)a1;
        }
        return v7 + (v17 | v16) + 1;
      default:
        break;
    }
  }
  uint64_t v18 = (unint64_t)&a1[v6 + 17] & ~v6;
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(v18);
  }
  unint64_t v19 = *(void *)((v8 + v18) & 0xFFFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  int v20 = v19 - 1;
  if (v20 < 0) {
    int v20 = -1;
  }
  return (v20 + 1);
}

void sub_255A22CB8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7;
  size_t v11 = ((((v10 + ((v9 + 17) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v12 = 8 * v11;
  if (v8 >= a3)
  {
    int v16 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v16)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            unint64_t v19 = (unint64_t)&a1[v9 + 17] & ~v9;
            if (v7 < 0x7FFFFFFE)
            {
              uint64_t v21 = (void *)((v10 + v19) & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                uint64_t v22 = a2 - 0x7FFFFFFF;
                v21[1] = 0;
              }
              else
              {
                uint64_t v22 = a2;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              int v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v13 = (a3 - v8 + 255) >> v12;
    if (v11 <= 3) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  if (v11 < 4) {
    unsigned int v17 = ((~v8 + a2) >> v12) + 1;
  }
  else {
    unsigned int v17 = 1;
  }
  if (v11 >= 4) {
    unsigned int v18 = ~v8 + a2;
  }
  else {
    unsigned int v18 = (~(_BYTE)v8 + a2);
  }
  bzero(a1, v11);
  if (v11 == 1) {
    *a1 = v18;
  }
  else {
    *(_DWORD *)a1 = v18;
  }
  switch(v16)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x255A22EF4);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_255A22F1C()
{
  return swift_getWitnessTable();
}

unint64_t sub_255A22FD0()
{
  unint64_t result = qword_269F21290;
  if (!qword_269F21290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21290);
  }
  return result;
}

unint64_t sub_255A23024()
{
  unint64_t result = qword_269F25AB0;
  if (!qword_269F25AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25AB0);
  }
  return result;
}

uint64_t MotionView.init(url:previewFrame:fallback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  unsigned int v17 = a3;
  uint64_t v11 = sub_255C7D5C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned int v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  sub_255A231D0((uint64_t)v14, a2, v17, v18, 1, 0, a7, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
}

uint64_t sub_255A231D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v28 = a6;
  int v27 = a5;
  v24[1] = a4;
  uint64_t v25 = a3;
  v24[0] = a2;
  uint64_t v10 = *(void *)(a8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  uint64_t v26 = v14;
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  unsigned int v17 = (int *)type metadata accessor for MotionView();
  uint64_t v18 = v17[17];
  if (qword_269F20198 != -1) {
    swift_once();
  }
  *(void *)(a7 + v18) = qword_269F33358;
  uint64_t v19 = sub_255C7D5C8();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a7, a1, v19);
  uint64_t v21 = swift_retain();
  uint64_t v22 = ((uint64_t (*)(uint64_t))v24[0])(v21);
  v25(v22);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v19);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a7 + v17[14], v12, v26);
  *(unsigned char *)(a7 + v17[15]) = v27 & 1;
  *(void *)(a7 + v17[16]) = v28;
  return result;
}

uint64_t MotionView.init(url:previewFrame:fallback:stateObserver:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  unsigned int v17 = a3;
  uint64_t v18 = a4;
  uint64_t v12 = sub_255C7D5C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  sub_255A231D0((uint64_t)v15, a2, v17, v18, 1, v19, a8, a7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
}

uint64_t MotionView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v20 = v3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F212B0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F212B8);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  sub_255C7E458();
  sub_255C7EBE8();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v4 = sub_255C7FFB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_255C7E458();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v23 = v20;
  uint64_t v24 = v19;
  long long v25 = *(_OWORD *)(a1 + 32);
  uint64_t v26 = v21;
  sub_255C801F8();
  sub_255C7FFA8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F9E8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v16 = sub_255A2473C();
  uint64_t v27 = WitnessTable;
  unint64_t v28 = v16;
  swift_getWitnessTable();
  sub_255A20F54(v12);
  unsigned int v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  sub_255A20F54(v14);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
}

uint64_t sub_255A23874@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v110 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v104 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = *(a2 - 1);
  MEMORY[0x270FA5388](v12);
  double v94 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F212B0);
  uint64_t v15 = sub_255C7E458();
  uint64_t v96 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int v95 = (char *)&v87 - v16;
  uint64_t v115 = v17;
  uint64_t v18 = sub_255C7E458();
  uint64_t v98 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v97 = (char *)&v87 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F212B8);
  uint64_t v114 = v18;
  uint64_t v20 = sub_255C7E458();
  uint64_t v100 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v99 = (char *)&v87 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  uint64_t v113 = v20;
  uint64_t v22 = sub_255C7E458();
  uint64_t v103 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v102 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v101 = (char *)&v87 - v26;
  uint64_t v92 = *(uint64_t **)(a3 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v91 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v90 = (char *)&v87 - v29;
  uint64_t v109 = v30;
  uint64_t v31 = sub_255C7EBE8();
  uint64_t v107 = *(void *)(v31 - 8);
  uint64_t v108 = v31;
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v106 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  char v112 = (char *)&v87 - v34;
  uint64_t v105 = sub_255C7FC78();
  char v35 = a2;
  uint64_t v139 = a2;
  uint64_t v140 = (char *)a3;
  uint64_t v36 = a3;
  uint64_t v116 = a4;
  uint64_t v141 = a4;
  uint64_t v142 = a5;
  uint64_t v37 = (int *)type metadata accessor for MotionView();
  uint64_t v38 = a1;
  uint64_t v39 = *(void *)(a1 + v37[17]);
  swift_getKeyPath();
  uint64_t v139 = (void *)v39;
  sub_255A282FC(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  swift_release();
  char v40 = *(unsigned char *)(v39 + 33);
  uint64_t v111 = a5;
  if (v40)
  {
    uint64_t v88 = v37;
    uint64_t v41 = a1 + v37[13];
    uint64_t v43 = v93;
    uint64_t v42 = v94;
    uint64_t v44 = v35;
    uint64_t v45 = (*(uint64_t (**)(char *, uint64_t, void *))(v93 + 16))(v94, v41, v35);
    uint64_t v92 = &v87;
    MEMORY[0x270FA5388](v45);
    *(&v87 - 6) = (uint64_t)v35;
    *(&v87 - 5) = v36;
    uint64_t v89 = v36;
    uint64_t v87 = v38;
    uint64_t v46 = v116;
    *(&v87 - 4) = v116;
    *(&v87 - 3) = a5;
    *(&v87 - 2) = v38;
    sub_255C801F8();
    type metadata accessor for MotionPlayerView(0);
    sub_255A282FC(&qword_269F213A0, (void (*)(uint64_t))type metadata accessor for MotionPlayerView);
    uint64_t v47 = v95;
    sub_255C7FAC8();
    (*(void (**)(char *, void *))(v43 + 8))(v42, v44);
    uint64_t v48 = sub_255A09998(&qword_269F21390, &qword_269F212B0);
    uint64_t v123 = v46;
    uint64_t v124 = v48;
    uint64_t v49 = v115;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v51 = v97;
    sub_255C7F7F8();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v47, v49);
    swift_getKeyPath();
    uint64_t v52 = sub_255C7D5C8();
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = (uint64_t)v104;
    uint64_t v55 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v104, v87, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
    uint64_t v121 = WitnessTable;
    uint64_t v122 = MEMORY[0x263F1A070];
    uint64_t v56 = v114;
    uint64_t v57 = swift_getWitnessTable();
    double v58 = v99;
    sub_255C7F678();
    swift_release();
    sub_255A28104(v54);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v51, v56);
    swift_getKeyPath();
    LOBYTE(v139) = *(unsigned char *)(v55 + v88[15]);
    uint64_t v59 = sub_255A09998(&qword_269F21398, &qword_269F212B8);
    uint64_t v119 = v57;
    uint64_t v120 = v59;
    uint64_t v60 = v113;
    uint64_t v61 = swift_getWitnessTable();
    uint64_t v62 = (uint64_t)v102;
    sub_255C7F678();
    swift_release();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v60);
    uint64_t v63 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
    uint64_t v117 = v61;
    uint64_t v118 = v63;
    uint64_t v64 = v109;
    swift_getWitnessTable();
    double v65 = v101;
    sub_255A20F54(v62);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v66(v62, v64);
    sub_255A20F54(v65);
    sub_255A44128(v62, v89, v64);
    v66(v62, v64);
    v66((uint64_t)v65, v64);
  }
  else
  {
    unsigned __int8 v67 = v90;
    sub_255A20F54(a1 + v37[14]);
    uint64_t v68 = (uint64_t)v91;
    sub_255A20F54(v67);
    uint64_t v69 = sub_255A09998(&qword_269F21390, &qword_269F212B0);
    v138[7] = v116;
    v138[8] = v69;
    v138[5] = swift_getWitnessTable();
    v138[6] = MEMORY[0x263F1A070];
    uint64_t v70 = swift_getWitnessTable();
    uint64_t v71 = sub_255A09998(&qword_269F21398, &qword_269F212B8);
    v138[3] = v70;
    v138[4] = v71;
    uint64_t v72 = swift_getWitnessTable();
    uint64_t v73 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
    v138[1] = v72;
    v138[2] = v73;
    swift_getWitnessTable();
    sub_255A44030(v68, v36);
    uint64_t v74 = (void (*)(uint64_t, uint64_t))v92[1];
    v74(v68, v36);
    v74((uint64_t)v67, v36);
  }
  uint64_t v75 = v106;
  v138[0] = v105;
  uint64_t v139 = v138;
  uint64_t v77 = v107;
  uint64_t v76 = v108;
  double v78 = v112;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v106, v112, v108);
  uint64_t v140 = v75;
  swift_retain();
  v137[0] = MEMORY[0x263F1B440];
  v137[1] = v76;
  uint64_t v135 = MEMORY[0x263F1B428];
  uint64_t v79 = sub_255A09998(&qword_269F21390, &qword_269F212B0);
  uint64_t v133 = v116;
  uint64_t v134 = v79;
  uint64_t v131 = swift_getWitnessTable();
  uint64_t v132 = MEMORY[0x263F1A070];
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v81 = sub_255A09998(&qword_269F21398, &qword_269F212B8);
  uint64_t v129 = v80;
  uint64_t v130 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v83 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  uint64_t v127 = v82;
  uint64_t v128 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v125 = v111;
  uint64_t v126 = v84;
  uint64_t v136 = swift_getWitnessTable();
  sub_255AF64A0((uint64_t)&v139, 2uLL, (uint64_t)v137);
  int v85 = *(void (**)(char *, uint64_t))(v77 + 8);
  v85(v78, v76);
  swift_release();
  v85(v75, v76);
  return swift_release();
}

uint64_t sub_255A2451C()
{
  return sub_255A280E4((uint64_t (*)(void, void, void, void, void))sub_255A23874);
}

uint64_t sub_255A24534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for MotionPlayerView(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = a2;
  v20[1] = a3;
  v20[2] = a4;
  v20[3] = a5;
  uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for MotionView() + 64));
  type metadata accessor for MotionViewDisplayState(0);
  swift_retain();
  sub_255C802D8();
  uint64_t v16 = (uint64_t *)&v14[v12[5]];
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = &v14[v12[6]];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *((void *)v17 + 1) = 0;
  v17[16] = 0;
  uint64_t v18 = v12[8];
  if (qword_269F20198 != -1) {
    swift_once();
  }
  *(void *)&v14[v18] = qword_269F33358;
  *(void *)&v14[v12[7]] = v15;
  sub_255A281B4((uint64_t)v14, a6);
  return swift_retain();
}

uint64_t sub_255A246D4()
{
  sub_255A27F54();

  return sub_255C7E8C8();
}

uint64_t sub_255A2471C()
{
  return sub_255A2506C((void (*)(void))sub_255A27FA8);
}

unint64_t sub_255A2473C()
{
  unint64_t result = qword_26B298630;
  if (!qword_26B298630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298630);
  }
  return result;
}

BOOL static MotionViewStateObserver.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MotionViewStateObserver.State.hash(into:)()
{
  return sub_255C81588();
}

uint64_t MotionViewStateObserver.State.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255A2481C@<X0>(char *a1@<X8>)
{
  swift_getKeyPath();
  sub_255A282FC(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
  sub_255C7D718();
  swift_release();
  int v3 = *(unsigned __int8 *)(v1 + 16);
  swift_getKeyPath();
  sub_255C7D718();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v1 + 17)) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a1 = v5;
  return result;
}

uint64_t MotionViewStateObserver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(_WORD *)(v0 + 16) = 0;
  sub_255C7D748();
  return v0;
}

uint64_t MotionViewStateObserver.init()()
{
  *(_WORD *)(v0 + 16) = 0;
  sub_255C7D748();
  return v0;
}

uint64_t sub_255A24988()
{
  swift_getKeyPath();
  sub_255A282FC(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_255A24A28@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A282FC(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_255A24AD4()
{
  return swift_release();
}

uint64_t type metadata accessor for MotionViewStateObserver()
{
  uint64_t result = qword_269F21358;
  if (!qword_269F21358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255A24BF4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_255A24BFC()
{
  swift_getKeyPath();
  sub_255A282FC(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_255A24C9C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A282FC(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_255A24D48()
{
  return swift_release();
}

uint64_t sub_255A24E1C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2;
  return result;
}

uint64_t MotionViewStateObserver.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI23MotionViewStateObserver___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MotionViewStateObserver.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI23MotionViewStateObserver___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t MCUINamespace<A>.motionShouldResetOnSizeChange(_:)(uint64_t a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned int v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  swift_getKeyPath();
  v9[15] = v3;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255A2504C()
{
  return sub_255A2506C((void (*)(void))sub_255A28050);
}

uint64_t sub_255A2506C(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

uint64_t sub_255A250B4@<X0>(unsigned char *a1@<X8>)
{
  sub_255A28050();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A25104()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A25150()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  __swift_allocate_value_buffer(v0, qword_269F21298);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269F21298);
  uint64_t v2 = sub_255C7D5C8();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_255A251E8@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FD50 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269F21298);

  return sub_255A28344(v3, a1);
}

uint64_t sub_255A25264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A28258();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

void sub_255A252C8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_255A252D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, MEMORY[0x263F8D510]);
}

uint64_t sub_255A252E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A283AC();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255A25344()
{
  sub_255A27FFC();
  sub_255C7E8C8();
  return v1;
}

uint64_t _s11MediaCoreUI10MotionViewV3url10Foundation3URLVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7D5C8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t _s11MediaCoreUI10MotionViewV12previewFramexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t _s11MediaCoreUI10MotionViewV8fallbackq_vg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t MotionViewV2.init(url:keyframe:fallback:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v28 = a5;
  uint64_t v29 = a4;
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_255C7D5C8();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a9, a1, v18);
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v33 = a10;
  uint64_t v20 = type metadata accessor for MotionViewV2();
  uint64_t v24 = v27(v20, v21, v22, v23);
  v29(v24);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a9 + *(int *)(v20 + 56), v17, a7);
}

uint64_t type metadata accessor for MotionViewV2()
{
  return swift_getGenericMetadata();
}

uint64_t MotionViewV2.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v22 = sub_255C7D5C8();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v5;
  uint64_t v7 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v36 = a1[2];
  uint64_t v6 = v36;
  uint64_t v37 = v7;
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  uint64_t v10 = type metadata accessor for MotionView();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v17 = v5;
  uint64_t v18 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v17, v23, v22);
  uint64_t v31 = v6;
  uint64_t v32 = v7;
  uint64_t v33 = v9;
  uint64_t v34 = v8;
  uint64_t v35 = v18;
  uint64_t v26 = v6;
  uint64_t v27 = v7;
  uint64_t v28 = v9;
  uint64_t v29 = v8;
  uint64_t v30 = v18;
  MotionView.init(url:previewFrame:fallback:)((uint64_t)v21, (uint64_t)sub_255A258B0, (void (*)(uint64_t))sub_255A25938, (uint64_t)v25, v6, v7, (uint64_t)v14);
  swift_getWitnessTable();
  sub_255A20F54(v14);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  sub_255A20F54(v16);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t type metadata accessor for MotionView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255A258B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = type metadata accessor for MotionViewV2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, v3 + *(int *)(v4 + 52));
}

uint64_t sub_255A25938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 24);
  uint64_t v4 = type metadata accessor for MotionViewV2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, v3 + *(int *)(v4 + 56));
}

uint64_t sub_255A259CC()
{
  return sub_255A25A54();
}

unint64_t sub_255A259E8()
{
  unint64_t result = qword_269F212D0[0];
  if (!qword_269F212D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F212D0);
  }
  return result;
}

uint64_t sub_255A25A3C()
{
  return sub_255A25A54();
}

uint64_t sub_255A25A54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A25A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_255A25A94()
{
  uint64_t result = sub_255C7D5C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void *sub_255A25BC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12) & ~v12;
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v16 = *(void *)(v10 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v15 + v17;
  uint64_t v19 = *(void *)(v16 + 64);
  unint64_t v20 = ((((((v15 + v17 + v14) & ~v17) + v19) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v21 = v17 | *(_DWORD *)(v7 + 80) & 0xF8 | v12;
  if (v21 > 7 || ((*(_DWORD *)(v16 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0 || v20 > 0x18)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v32 = (void *)(v24 + (((v21 | 7) + 16) & ~(unint64_t)(v21 | 7)));
  }
  else
  {
    uint64_t v25 = ~v12;
    uint64_t v26 = ~v17;
    uint64_t v38 = v9;
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
    uint64_t v27 = a2;
    uint64_t v28 = a1;
    unint64_t v29 = ((unint64_t)a1 + v13) & v25;
    unint64_t v30 = ((unint64_t)v27 + v13) & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(v29, v30, v38);
    uint64_t v31 = v29 + v18;
    uint64_t v32 = v28;
    uint64_t v33 = v31 & v26;
    unint64_t v34 = (v30 + v18) & v26;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v31 & v26, v34, v10);
    *(unsigned char *)(v33 + v19) = *(unsigned char *)(v34 + v19);
    unint64_t v35 = (v33 + v19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v36 = (v34 + v19) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v35 + 8) = *(void *)(v36 + 8);
    *(void *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
  }
  swift_retain();
  return v32;
}

uint64_t sub_255A25E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7D5C8();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((v9
                                                                                            + *(void *)(v8 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_release();

  return swift_release();
}

uint64_t sub_255A25F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 48) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48);
  uint64_t v15 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v16 = v15 + 16;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (v18 + v12) & ~v17;
  uint64_t v20 = (v18 + v13) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v19, v20);
  uint64_t v21 = *(void *)(v16 + 48);
  uint64_t v22 = v21 + v19;
  uint64_t v23 = v21 + v20;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255A260B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 40) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40);
  uint64_t v15 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v16 = v15 + 24;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (v18 + v12) & ~v17;
  uint64_t v20 = (v18 + v13) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v19, v20);
  uint64_t v21 = *(void *)(v16 + 40);
  unint64_t v22 = v21 + v19;
  unint64_t v23 = v21 + v20;
  *(unsigned char *)unint64_t v22 = *(unsigned char *)v23;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_retain();
  swift_release();
  *(void *)((v24 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255A2622C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 32) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v16 = v15 + 32;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (v18 + v12) & ~v17;
  uint64_t v20 = (v18 + v13) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v19, v20);
  uint64_t v21 = *(void *)(v16 + 32);
  uint64_t v22 = v21 + v19;
  uint64_t v23 = v21 + v20;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255A26380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 24) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (v18 + v12) & ~v17;
  uint64_t v20 = (v18 + v13) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v19, v20);
  uint64_t v21 = *(void *)(v16 + 24);
  unint64_t v22 = v21 + v19;
  unint64_t v23 = v21 + v20;
  *(unsigned char *)unint64_t v22 = *(unsigned char *)v23;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  *(void *)((v24 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_255A264E4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11 <= v8) {
    unsigned int v13 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned int *)(v12 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = *(void *)(v12 + 64);
  if (v14 <= v13) {
    unsigned int v19 = v13;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v12 + 84);
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(void *)(*(void *)(v6 - 8) + 64) + v15;
  if (v19 < a2)
  {
    unint64_t v21 = ((((((v16 + v17 + (v20 & ~v15)) & ~v17) + v18) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 & 0xFFFFFFF8) != 0) {
      unsigned int v22 = 2;
    }
    else {
      unsigned int v22 = a2 - v19 + 1;
    }
    if (v22 >= 0x10000) {
      unsigned int v23 = 4;
    }
    else {
      unsigned int v23 = 2;
    }
    if (v22 < 0x100) {
      unsigned int v23 = 1;
    }
    if (v22 >= 2) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 0;
    }
    switch(v24)
    {
      case 1:
        int v25 = *((unsigned __int8 *)a1 + v21);
        if (!*((unsigned char *)a1 + v21)) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v25 = *(unsigned __int16 *)((char *)a1 + v21);
        if (*(_WORD *)((char *)a1 + v21)) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255A267E4);
      case 4:
        int v25 = *(_DWORD *)((char *)a1 + v21);
        if (!v25) {
          break;
        }
LABEL_27:
        int v27 = v25 - 1;
        if ((v21 & 0xFFFFFFF8) != 0)
        {
          int v27 = 0;
          int v28 = *a1;
        }
        else
        {
          int v28 = 0;
        }
        return v19 + (v28 | v27) + 1;
      default:
        break;
    }
  }
  if (v8 == v19)
  {
    unint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48);
    unint64_t v30 = a1;
    uint64_t v31 = *(unsigned int *)(v7 + 84);
    uint64_t v32 = v6;
    return v29(v30, v31, v32);
  }
  unint64_t v33 = ((unint64_t)a1 + v20) & ~v15;
  if (v11 == v19)
  {
    unint64_t v34 = *(uint64_t (**)(unint64_t))(v10 + 48);
    return v34(v33);
  }
  else
  {
    unint64_t v30 = (_DWORD *)((v33 + v16 + v17) & ~v17);
    if (v14 == v19)
    {
      unint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
      uint64_t v31 = v14;
      uint64_t v32 = v9;
      return v29(v30, v31, v32);
    }
    unint64_t v35 = *(void *)(((((unint64_t)v30 + v18) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v35 >= 0xFFFFFFFF) {
      LODWORD(v35) = -1;
    }
    return (v35 + 1);
  }
}

void sub_255A267F8(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_255C7D5C8() - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  uint64_t v11 = *(void *)(a4 + 24);
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= v10) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(void *)(v11 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v21 = *(void *)(v15 + 64);
  if (v16 <= v14) {
    unsigned int v22 = v14;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v15 + 84);
  }
  if (v22 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  size_t v23 = ((((((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20) + v21) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v22 >= a3)
  {
    int v26 = 0;
    int v27 = a2 - v22;
    if (a2 <= v22)
    {
LABEL_22:
      switch(v26)
      {
        case 1:
          *((unsigned char *)a1 + v23) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_35;
        case 2:
          *(_WORD *)((char *)a1 + v23) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_35;
        case 3:
          goto LABEL_56;
        case 4:
          *(_DWORD *)((char *)a1 + v23) = 0;
          goto LABEL_34;
        default:
LABEL_34:
          if (a2)
          {
LABEL_35:
            if (v10 == v22)
            {
              unint64_t v30 = *(void (**)(_DWORD *, uint64_t))(v9 + 56);
              v30(a1, a2);
            }
            else
            {
              unint64_t v31 = ((unint64_t)a1 + v17 + v18) & ~v18;
              if (v13 == v22)
              {
                uint64_t v32 = *(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 56);
                v32(v31, a2, v13);
              }
              else
              {
                unint64_t v33 = (v31 + v19 + v20) & ~v20;
                if (v16 == v22)
                {
                  unint64_t v34 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
                  v34(v33, a2, v16, v11);
                }
                else
                {
                  if ((a2 & 0x80000000) != 0) {
                    uint64_t v35 = a2 ^ 0x80000000;
                  }
                  else {
                    uint64_t v35 = (a2 - 1);
                  }
                  *(void *)((((v33 + v21) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) = v35;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20) + v21) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v24 = a3 - v22 + 1;
    else {
      unsigned int v24 = 2;
    }
    if (v24 >= 0x10000) {
      int v25 = 4;
    }
    else {
      int v25 = 2;
    }
    if (v24 < 0x100) {
      int v25 = 1;
    }
    if (v24 >= 2) {
      int v26 = v25;
    }
    else {
      int v26 = 0;
    }
    int v27 = a2 - v22;
    if (a2 <= v22) {
      goto LABEL_22;
    }
  }
  if (((((((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20) + v21) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v28 = v27;
  else {
    int v28 = 1;
  }
  if (v23)
  {
    int v29 = ~v22 + a2;
    bzero(a1, v23);
    *a1 = v29;
  }
  switch(v26)
  {
    case 1:
      *((unsigned char *)a1 + v23) = v28;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v23) = v28;
      break;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x255A26B60);
    case 4:
      *(_DWORD *)((char *)a1 + v23) = v28;
      break;
    default:
      return;
  }
}

uint64_t sub_255A26B88()
{
  return type metadata accessor for MotionViewStateObserver();
}

uint64_t sub_255A26B90()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MotionViewStateObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MotionViewStateObserver);
}

uint64_t dispatch thunk of MotionViewStateObserver.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MotionViewStateObserver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for MotionViewStateObserver.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A26D48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionViewStateObserver.State()
{
  return &type metadata for MotionViewStateObserver.State;
}

uint64_t sub_255A26D80()
{
  uint64_t result = sub_255C7D5C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_255A26E8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12) & ~v12;
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v16 = *(void *)(v10 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v15 + v17;
  unint64_t v19 = ((v15 + v17 + v14) & ~v17) + *(void *)(v16 + 64);
  uint64_t v20 = (*(unsigned char *)(v11 + 80) | *(unsigned char *)(v7 + 80) | *(unsigned char *)(v16 + 80));
  if (v20 <= 7
    && v19 <= 0x18
    && ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v16 + 80)) & 0x100000) == 0)
  {
    uint64_t v24 = ~v12;
    uint64_t v25 = ~v17;
    uint64_t v28 = v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    unint64_t v26 = ((unint64_t)a2 + v13) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)a1 + v13) & v24, v26, v28);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))(((((unint64_t)a1 + v13) & v24) + v18) & v25, (v26 + v18) & v25, v10);
  }
  else
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v20 + 16) & ~v20));
    swift_retain();
  }
  return a1;
}

uint64_t sub_255A27098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7D5C8();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  uint64_t v10 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v11 = *(uint64_t (**)(unint64_t))(v10 + 8);
  unint64_t v12 = (v9 + *(void *)(v8 + 56) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);

  return v11(v12);
}

uint64_t sub_255A2718C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 48) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 16))((*(void *)(v9 + 48) + *(unsigned __int8 *)(v14 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(void *)(v9 + 48) + *(unsigned __int8 *)(v14 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

uint64_t sub_255A2729C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 40) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 24))((*(void *)(v9 + 40) + *(unsigned __int8 *)(v14 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(void *)(v9 + 40) + *(unsigned __int8 *)(v14 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

uint64_t sub_255A273AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 32) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 32))((*(void *)(v9 + 32) + *(unsigned __int8 *)(v14 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(void *)(v9 + 32) + *(unsigned __int8 *)(v14 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

uint64_t sub_255A274BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 24) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 40))((*(void *)(v9 + 24) + *(unsigned __int8 *)(v14 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(void *)(v9 + 24) + *(unsigned __int8 *)(v14 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

uint64_t sub_255A275CC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v17 = v12;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v13 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(*(void *)(v6 - 8) + 64) + v14;
  if (a2 <= v17) {
    goto LABEL_27;
  }
  uint64_t v19 = ((v15 + v16 + (v18 & ~v14)) & ~v16) + *(void *)(*(void *)(v9 - 8) + 64);
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_10;
  }
  unsigned int v22 = ((a2 - v17 + ~(-1 << v20)) >> v20) + 1;
  if (HIWORD(v22))
  {
    int v21 = *(_DWORD *)((char *)a1 + v19);
    if (!v21) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v22 > 0xFF)
  {
    int v21 = *(unsigned __int16 *)((char *)a1 + v19);
    if (!*(unsigned __int16 *)((char *)a1 + v19)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v22 >= 2)
  {
LABEL_10:
    int v21 = *((unsigned __int8 *)a1 + v19);
    if (!*((unsigned char *)a1 + v19)) {
      goto LABEL_27;
    }
LABEL_17:
    int v23 = (v21 - 1) << v20;
    if (v19 > 3) {
      int v23 = 0;
    }
    if (v19)
    {
      if (v19 <= 3) {
        int v24 = ((v15 + v16 + (v18 & ~v14)) & ~v16) + *(_DWORD *)(*(void *)(v9 - 8) + 64);
      }
      else {
        int v24 = 4;
      }
      switch(v24)
      {
        case 2:
          int v25 = *a1;
          break;
        case 3:
          int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v25 = *(_DWORD *)a1;
          break;
        default:
          int v25 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v25 = 0;
    }
    return v17 + (v25 | v23) + 1;
  }
LABEL_27:
  if (!v17) {
    return 0;
  }
  if (v8 == v17)
  {
    unint64_t v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    int v27 = a1;
    uint64_t v28 = *(unsigned int *)(v7 + 84);
    uint64_t v29 = v6;
    return v26(v27, v28, v29);
  }
  unint64_t v31 = ((unint64_t)a1 + v18) & ~v14;
  if (v11 != v17)
  {
    int v27 = (unsigned __int16 *)((v31 + v15 + v16) & ~v16);
    unint64_t v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v28 = *(unsigned int *)(v13 + 84);
    uint64_t v29 = *(void *)(a3 + 24);
    return v26(v27, v28, v29);
  }
  uint64_t v32 = *(uint64_t (**)(unint64_t))(v10 + 48);

  return v32(v31);
}

void sub_255A278D8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_255C7D5C8() - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  uint64_t v11 = *(void *)(a4 + 24);
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= v10) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(void *)(v11 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
  if (v16 <= v14) {
    unsigned int v21 = v14;
  }
  else {
    unsigned int v21 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v22 = v17 + v18;
  size_t v23 = ((v19 + v20 + (v22 & ~v18)) & ~v20) + *(void *)(*(void *)(v11 - 8) + 64);
  if (a3 <= v21)
  {
    int v24 = 0;
  }
  else if (v23 <= 3)
  {
    unsigned int v28 = ((a3 - v21 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v28))
    {
      int v24 = 4;
    }
    else if (v28 >= 0x100)
    {
      int v24 = 2;
    }
    else
    {
      int v24 = v28 > 1;
    }
  }
  else
  {
    int v24 = 1;
  }
  if (v21 < a2)
  {
    unsigned int v25 = ~v21 + a2;
    if (v23 < 4)
    {
      int v26 = (v25 >> (8 * v23)) + 1;
      if (v23)
      {
        int v29 = v25 & ~(-1 << (8 * v23));
        bzero(a1, v23);
        if (v23 == 3)
        {
          *(_WORD *)a1 = v29;
          a1[2] = BYTE2(v29);
        }
        else if (v23 == 2)
        {
          *(_WORD *)a1 = v29;
        }
        else
        {
          *a1 = v29;
        }
      }
    }
    else
    {
      bzero(a1, v23);
      *(_DWORD *)a1 = v25;
      int v26 = 1;
    }
    switch(v24)
    {
      case 1:
        a1[v23] = v26;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v26;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v23] = v26;
        return;
      default:
        return;
    }
  }
  uint64_t v27 = ~v18;
  switch(v24)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x255A27C6CLL);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v10 == v21)
        {
          unint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v9 + 56);
          v30(a1, a2);
        }
        else
        {
          unint64_t v31 = (unint64_t)&a1[v22] & v27;
          if (v13 == v21)
          {
            uint64_t v32 = *(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 56);
            v32(v31, a2, v13);
          }
          else
          {
            unint64_t v33 = (v31 + v19 + v20) & ~v20;
            unint64_t v34 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
            v34(v33, a2, v16, v11);
          }
        }
      }
      return;
  }
}

uint64_t sub_255A27C94()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A27DF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A27E94()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A27EE0()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_26B2AA500);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA500);
  return sub_255C7D888();
}

unint64_t sub_255A27F54()
{
  unint64_t result = qword_269F21368;
  if (!qword_269F21368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21368);
  }
  return result;
}

unint64_t sub_255A27FA8()
{
  unint64_t result = qword_269F21370;
  if (!qword_269F21370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21370);
  }
  return result;
}

unint64_t sub_255A27FFC()
{
  unint64_t result = qword_269F21378;
  if (!qword_269F21378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21378);
  }
  return result;
}

unint64_t sub_255A28050()
{
  unint64_t result = qword_269F21380;
  if (!qword_269F21380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21380);
  }
  return result;
}

void sub_255A280A4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

void sub_255A280B4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_255A280CC()
{
  return sub_255A280E4((uint64_t (*)(void, void, void, void, void))sub_255A24534);
}

uint64_t sub_255A280E4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_255A28104(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A2816C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MotionViewDisplayState(0);
  swift_allocObject();
  uint64_t result = sub_255A75FD4();
  *a1 = result;
  return result;
}

uint64_t sub_255A281B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MotionPlayerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s23ShouldResetOnSizeChangeVMa()
{
  return &_s23ShouldResetOnSizeChangeVN;
}

ValueMetadata *_s25MotionPlacementContextKeyVMa()
{
  return &_s25MotionPlacementContextKeyVN;
}

ValueMetadata *_s32ShouldRenderMotionPlayerLayerKeyVMa()
{
  return &_s32ShouldRenderMotionPlayerLayerKeyVN;
}

ValueMetadata *_s12MotionURLKeyVMa()
{
  return &_s12MotionURLKeyVN;
}

unint64_t sub_255A28258()
{
  unint64_t result = qword_269F213B0;
  if (!qword_269F213B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29F230);
    sub_255A282FC(&qword_269F213B8, MEMORY[0x263F06EA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F213B0);
  }
  return result;
}

uint64_t sub_255A282FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A28344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_255A283AC()
{
  unint64_t result = qword_269F213C0;
  if (!qword_269F213C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F213C0);
  }
  return result;
}

uint64_t NowPlayingCustomButton.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A2840C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_255A28440(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_255A28480())()
{
  return j__swift_endAccess;
}

uint64_t NowPlayingCustomButton.content.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 112));
}

uint64_t NowPlayingCustomButton.__allocating_init(_:isEnabled:content:)()
{
  uint64_t v0 = swift_allocObject();
  NowPlayingCustomButton.init(_:isEnabled:content:)();
  return v0;
}

{
  uint64_t v0;

  uint64_t v0 = swift_allocObject();
  NowPlayingCustomButton.init(_:isEnabled:content:)();
  return v0;
}

uint64_t NowPlayingCustomButton.init(_:isEnabled:content:)()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (void *)MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = v3[1];
  *(void *)(v0 + 16) = *v3;
  *(void *)(v0 + 24) = v6;
  *(unsigned char *)(v0 + 32) = v7;
  v8();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0 + *(void *)(*(void *)v0 + 112), v5, v1);
  return v0;
}

uint64_t *NowPlayingCustomButton.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  return v0;
}

uint64_t NowPlayingCustomButton.__deallocating_deinit()
{
  NowPlayingCustomButton.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_255A287D8@<X0>(void *a1@<X8>)
{
  return NowPlayingCustomButton.id.getter(a1);
}

uint64_t sub_255A287FC@<X0>(uint64_t a1@<X8>)
{
  return NowPlayingCustomButton.content.getter(a1);
}

uint64_t static NowPlayingButton<>.none.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_269F213C8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x726563617073;
  *(void *)(result + 24) = 0xE600000000000000;
  *(unsigned char *)(result + 32) = 1;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 1;
  return result;
}

uint64_t sub_255A28870(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_255A28878@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255A2840C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255A288A8(char *a1)
{
  return sub_255A28440(*a1);
}

uint64_t sub_255A288D0()
{
  return 16;
}

__n128 sub_255A288DC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A288E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingCustomButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for NowPlayingCustomButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NowPlayingCustomButton);
}

uint64_t dispatch thunk of NowPlayingCustomButton.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NowPlayingCustomButton.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingCustomButton.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NowPlayingCustomButton.__allocating_init(_:isEnabled:content:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_255A28A40(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(v5 + 40));
  uint64_t v9 = sub_255C80028();
  MEMORY[0x25A295850](v9);
  MEMORY[0x25A295D10](&v11, v7, v8, v3, MEMORY[0x263F8D6C8], *(void *)(*(void *)(a1 + 24) + 8));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v11;
}

uint64_t sub_255A28B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  type metadata accessor for MinimumLayoutMargins();

  return sub_255C802D8();
}

uint64_t sub_255A28BCC()
{
  type metadata accessor for MinimumLayoutMargins();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_255C7D748();
  return v0;
}

uint64_t sub_255A28C1C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 52);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v2 + 16);
  int v6 = *(unsigned __int8 *)(v2 + 17);
  sub_255A322FC(*(void *)v2, v4, v5, *(unsigned char *)(v2 + 17));
  uint64_t v7 = sub_255AB9EC8(v3, v4, v5 | (v6 << 8));
  sub_255A31D88(v3, v4, v5, v6);
  return v7;
}

uint64_t ScopePicker.init(selection:scopes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v34 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v39 = sub_255C80E88();
  uint64_t v31 = *(void *)(v39 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v39);
  unsigned int v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = (int *)type metadata accessor for ScopePicker();
  *(void *)(a5 + v17[11]) = 0x4034000000000000;
  sub_255A28B48((uint64_t)sub_255A28BCC, 0);
  uint64_t v18 = a5 + v17[13];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(void *)(v18 + 8) = 0;
  *(_WORD *)(v18 + 16) = 0;
  uint64_t v19 = sub_255C80028();
  uint64_t v32 = *(void *)(v19 - 8);
  uint64_t v33 = v19;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v32 + 16);
  uint64_t v36 = a1;
  v20(a5, a1);
  uint64_t v35 = v17;
  uint64_t v21 = v17[9];
  uint64_t v37 = a5;
  uint64_t v22 = v30;
  *(void *)(a5 + v21) = v30;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_255C80848();
  uint64_t v38 = *(void *)(a4 + 8);
  uint64_t v44 = sub_255C80478();
  uint64_t v43 = v22;
  uint64_t v23 = sub_255C808C8();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A296010](&v40, v23, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v42 = v40;
  sub_255C812A8();
  sub_255C81278();
  sub_255C81298();
  unsigned int v25 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  int v26 = (void (**)(char *, char *, uint64_t))(v34 + 32);
  while (1)
  {
    sub_255C81288();
    (*v25)(v16, v14, v39);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) == 1)break; {
    uint64_t v27 = *(void *)v16;
    }
    (*v26)(v10, &v16[*(int *)(TupleTypeMetadata2 + 48)], a3);
    uint64_t v40 = v27;
    char v41 = 0;
    sub_255C80488();
    sub_255C804A8();
  }
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v33);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v37 + v35[10]) = v44;
  return result;
}

uint64_t type metadata accessor for ScopePicker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A29100(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = sub_255C80E88();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - v16;
  uint64_t v18 = sub_255A28A40(a3);
  if (v19)
  {
    v24[1] = a1;
    uint64_t v27 = *(void *)(v3 + *(int *)(a3 + 36));
    sub_255C808C8();
    swift_getWitnessTable();
    sub_255C80B68();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v11, v7);
      sub_255A34618((uint64_t)v17, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v7);
    }
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v26);
  }
  if (a2)
  {
    MEMORY[0x270FA5388](v18);
    uint64_t v20 = *(void *)(a3 + 24);
    v24[-4] = v7;
    v24[-3] = v20;
    v24[-2] = v21;
    v24[-1] = v3;
    sub_255C802A8();
    sub_255C7E1E8();
    return swift_release();
  }
  else
  {
    uint64_t v23 = sub_255C80028();
    MEMORY[0x25A295850](v23);
    sub_255C7E488();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v7);
  }
}

uint64_t sub_255A29404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScopePicker();
  uint64_t v7 = sub_255C80028();
  MEMORY[0x25A295850](v7);
  sub_255C7E488();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a3);
}

uint64_t ScopePicker.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v65 = *(void *)(a1 - 8);
  uint64_t v66 = *(void *)(v65 + 64);
  uint64_t v63 = MEMORY[0x270FA5388](a1);
  uint64_t v64 = (char *)v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void *)(v63 + 24);
  uint64_t v69 = *(ValueMetadata **)(v63 + 16);
  type metadata accessor for ScopePicker.ScopeButtonsWithHighlight();
  sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v118 = MEMORY[0x263F18C10];
  uint64_t v4 = MEMORY[0x263F18E48];
  swift_getWitnessTable();
  uint64_t v5 = sub_255C7DC48();
  uint64_t v6 = swift_getWitnessTable();
  uint64_t v97 = v5;
  uint64_t v98 = (ValueMetadata *)v6;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v5;
  uint64_t v98 = (ValueMetadata *)v6;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = OpaqueTypeMetadata2;
  uint64_t v98 = (ValueMetadata *)OpaqueTypeConformance2;
  swift_getOpaqueTypeMetadata2();
  uint64_t v9 = v3;
  uint64_t v56 = v3;
  type metadata accessor for ScopePicker.FadingView();
  swift_getWitnessTable();
  sub_255C7E268();
  sub_255C7E458();
  sub_255C7E578();
  sub_255C7E458();
  uint64_t v10 = swift_getWitnessTable();
  unint64_t v11 = sub_255A101A0();
  uint64_t v115 = v10;
  unint64_t v116 = v11;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v114 = MEMORY[0x263F190D0];
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  uint64_t v12 = sub_255C7E458();
  uint64_t v97 = OpaqueTypeMetadata2;
  uint64_t v98 = (ValueMetadata *)OpaqueTypeConformance2;
  uint64_t v13 = swift_getOpaqueTypeConformance2();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v111 = v13;
  uint64_t v112 = v14;
  uint64_t v62 = v4;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v110 = MEMORY[0x263F1A070];
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = *(void *)(*(void *)(v9 + 8) + 8);
  uint64_t v17 = v69;
  uint64_t v97 = v12;
  uint64_t v98 = v69;
  uint64_t v99 = v15;
  *(void *)&long long v100 = v16;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v19 = sub_255C808C8();
  uint64_t v97 = v12;
  uint64_t v98 = v17;
  uint64_t v99 = v15;
  *(void *)&long long v100 = v16;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  uint64_t v108 = v16;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v97 = v18;
  uint64_t v98 = (ValueMetadata *)v19;
  uint64_t v99 = v20;
  *(void *)&long long v100 = v21;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21450);
  uint64_t v97 = v18;
  uint64_t v98 = (ValueMetadata *)v19;
  uint64_t v99 = v20;
  *(void *)&long long v100 = v21;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  unint64_t v25 = sub_255A31B30();
  uint64_t v97 = v22;
  uint64_t v98 = (ValueMetadata *)v23;
  uint64_t v99 = v24;
  *(void *)&long long v100 = v25;
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v22;
  uint64_t v98 = (ValueMetadata *)v23;
  uint64_t v99 = v24;
  *(void *)&long long v100 = v25;
  uint64_t v27 = swift_getOpaqueTypeConformance2();
  unint64_t v28 = sub_255A31BA4();
  uint64_t v97 = v26;
  uint64_t v98 = &type metadata for HorizontalMargins;
  uint64_t v99 = v27;
  *(void *)&long long v100 = v28;
  swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v26;
  uint64_t v98 = &type metadata for HorizontalMargins;
  uint64_t v99 = v27;
  *(void *)&long long v100 = v28;
  swift_getOpaqueTypeConformance2();
  sub_255C7E558();
  v55[1] = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21468);
  uint64_t v58 = sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v29 = sub_255C7E458();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v60 = v29;
  uint64_t v61 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v57 = (char *)v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v59 = (char *)v55 - v33;
  uint64_t v35 = v64;
  uint64_t v34 = v65;
  uint64_t v36 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v67, v63);
  uint64_t v37 = v34;
  unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v56;
  *(void *)(v39 + 16) = v69;
  *(void *)(v39 + 24) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v39 + v38, v35, v36);
  uint64_t v97 = sub_255C7E548();
  uint64_t v98 = v41;
  sub_255C7F1F8();
  uint64_t v42 = swift_getWitnessTable();
  sub_255C7FAF8();
  swift_release();
  uint64_t v91 = v74;
  uint64_t v92 = v75;
  char v93 = v76;
  long long v94 = v77;
  long long v95 = v78;
  char v96 = v79;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21478);
  sub_255C802E8();
  uint64_t v43 = v97;
  uint64_t v44 = sub_255C7E468();
  char v45 = sub_255C7F198();
  uint64_t v87 = v43;
  uint64_t v88 = v44;
  char v89 = v45;
  uint64_t v90 = 0;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21480);
  uint64_t v85 = v42;
  uint64_t v86 = MEMORY[0x263F18C10];
  uint64_t v46 = swift_getWitnessTable();
  sub_255A31DF0(&qword_269F21488, &qword_269F21480, (void (*)(void))sub_255A31DC0);
  sub_255C7F5A8();
  swift_release();
  swift_release();
  uint64_t v74 = v97;
  uint64_t v75 = v98;
  char v76 = v99;
  long long v77 = v100;
  long long v78 = v101;
  char v79 = v102;
  uint64_t v80 = v103;
  uint64_t v81 = v104;
  char v82 = v105;
  uint64_t v83 = v106;
  long long v84 = v107;
  uint64_t v47 = sub_255A09998(qword_269F214A8, &qword_269F21468);
  uint64_t v72 = v46;
  uint64_t v73 = v47;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v57;
  sub_255B4BFB8();
  swift_release();
  swift_release();
  uint64_t v50 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v70 = v48;
  uint64_t v71 = v50;
  uint64_t v51 = v60;
  swift_getWitnessTable();
  uint64_t v52 = v59;
  sub_255A20F54(v49);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v61 + 8);
  v53(v49, v51);
  sub_255A20F54(v52);
  return ((uint64_t (*)(char *, uint64_t))v53)(v52, v51);
}

uint64_t sub_255A29E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, ValueMetadata *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v200 = a2;
  uint64_t v197 = a1;
  uint64_t v181 = a5;
  uint64_t v188 = sub_255C7E498();
  uint64_t v202 = *(void *)(v188 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v188);
  v194 = v8;
  v187 = (char *)&v135 - ((unint64_t)(v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Description = (void (**)(char *, void))a3[-1].Description;
  MEMORY[0x270FA5388](v7);
  v179 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_255C7ECC8();
  uint64_t v192 = *(void *)(v193 - 8);
  MEMORY[0x270FA5388](v193);
  v191 = (char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScopePicker.ScopeButtonsWithHighlight();
  uint64_t v11 = sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v217 = MEMORY[0x263F18C10];
  uint64_t v12 = swift_getWitnessTable();
  v189 = (void (*)(char *, uint64_t, uint64_t))v11;
  uint64_t v168 = v12;
  uint64_t v13 = sub_255C7DC48();
  uint64_t v190 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  v173 = (char *)&v135 - v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v204 = v13;
  v205 = (ValueMetadata *)v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v176 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v154 = (char *)&v135 - v17;
  uint64_t v167 = v13;
  uint64_t v204 = v13;
  v205 = (ValueMetadata *)v15;
  uint64_t v158 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v204 = OpaqueTypeMetadata2;
  v205 = (ValueMetadata *)OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeMetadata2();
  uint64_t v175 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v166 = (char *)&v135 - v20;
  type metadata accessor for ScopePicker.FadingView();
  swift_getWitnessTable();
  sub_255C7E268();
  sub_255C7E458();
  sub_255C7E578();
  uint64_t v21 = sub_255C7E458();
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v23 = sub_255A101A0();
  uint64_t v214 = v22;
  unint64_t v215 = v23;
  uint64_t v212 = swift_getWitnessTable();
  uint64_t v213 = MEMORY[0x263F190D0];
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v150 = v21;
  uint64_t v144 = v24;
  sub_255C7E598();
  uint64_t v177 = v19;
  uint64_t v25 = sub_255C7E458();
  uint64_t v146 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v142 = (char *)&v135 - v26;
  uint64_t v27 = sub_255C7E458();
  uint64_t v160 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  v184 = (char *)&v135 - v28;
  uint64_t v182 = OpaqueTypeMetadata2;
  uint64_t v204 = OpaqueTypeMetadata2;
  v205 = (ValueMetadata *)OpaqueTypeConformance2;
  uint64_t v155 = OpaqueTypeConformance2;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v141 = v29;
  uint64_t v210 = v29;
  uint64_t v211 = v30;
  uint64_t v139 = v25;
  uint64_t v140 = swift_getWitnessTable();
  uint64_t v208 = v140;
  uint64_t v209 = MEMORY[0x263F1A070];
  uint64_t v31 = swift_getWitnessTable();
  unint64_t v32 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v204 = v27;
  v205 = a3;
  uint64_t v206 = v31;
  unint64_t v207 = v32;
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v162 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  v185 = (char *)&v135 - v34;
  uint64_t v35 = sub_255C808C8();
  uint64_t v163 = v27;
  uint64_t v204 = v27;
  v205 = a3;
  uint64_t v145 = v31;
  uint64_t v206 = v31;
  unint64_t v207 = v32;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  unint64_t v143 = v32;
  unint64_t v203 = v32;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v204 = v33;
  v205 = (ValueMetadata *)v35;
  uint64_t v206 = v36;
  unint64_t v207 = v37;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v170 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  v186 = (char *)&v135 - v39;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21450);
  uint64_t v164 = v33;
  uint64_t v204 = v33;
  v205 = (ValueMetadata *)v35;
  uint64_t v148 = v35;
  uint64_t v149 = v36;
  uint64_t v206 = v36;
  unint64_t v207 = v37;
  uint64_t v147 = v37;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  unint64_t v42 = sub_255A31B30();
  uint64_t v204 = v38;
  v205 = (ValueMetadata *)v40;
  uint64_t v206 = v41;
  unint64_t v207 = v42;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v174 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  v165 = (char *)&v135 - v44;
  uint64_t v172 = v38;
  uint64_t v204 = v38;
  v205 = (ValueMetadata *)v40;
  uint64_t v153 = v40;
  uint64_t v152 = v41;
  uint64_t v206 = v41;
  unint64_t v207 = v42;
  unint64_t v151 = v42;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  unint64_t v46 = sub_255A31BA4();
  uint64_t v178 = v43;
  uint64_t v204 = v43;
  v205 = &type metadata for HorizontalMargins;
  uint64_t v161 = v45;
  uint64_t v206 = v45;
  unint64_t v207 = v46;
  unint64_t v159 = v46;
  uint64_t v171 = swift_getOpaqueTypeMetadata2();
  uint64_t v169 = *(void *)(v171 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v171);
  uint64_t v156 = (char *)&v135 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v157 = (char *)&v135 - v49;
  v199 = a3;
  uint64_t v201 = a4;
  uint64_t v50 = type metadata accessor for ScopePicker();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v183 = (char *)&v135 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v56 = (char *)&v135 - v55;
  uint64_t v57 = v200;
  uint64_t v58 = sub_255A28C1C(v54);
  uint64_t v60 = v59;
  char v62 = v61;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  uint64_t v195 = v51 + 16;
  v196 = v63;
  v63(v56, v57, v50);
  if (v62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21478);
    sub_255C802E8();
    uint64_t v64 = v204;
    swift_getKeyPath();
    uint64_t v204 = v64;
    sub_255A38C94((unint64_t *)&qword_269F21698, (void (*)(uint64_t))type metadata accessor for MinimumLayoutMargins);
    sub_255C7D718();
    swift_release();
    uint64_t v58 = *(void *)(v64 + 24);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21478);
    sub_255C802E8();
    uint64_t v65 = v204;
    swift_getKeyPath();
    uint64_t v204 = v65;
    sub_255C7D718();
    swift_release();
    uint64_t v60 = *(ValueMetadata **)(v65 + 40);
    swift_release();
  }
  uint64_t v135 = v50;
  uint64_t v136 = v58;
  uint64_t v198 = v51;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v56, v50);
  uint64_t v66 = sub_255C7F158();
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = v201;
  *(&v135 - 4) = (uint64_t)v199;
  *(&v135 - 3) = v67;
  *(&v135 - 2) = v57;
  uint64_t v68 = v173;
  sub_255C7DC58();
  uint64_t v69 = sub_255C7F1C8();
  uint64_t v70 = v191;
  sub_255C7ECB8();
  uint64_t v71 = v154;
  uint64_t v72 = v167;
  MEMORY[0x25A295010](v69, v58, 0, v70, v167, v158);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v192 + 8);
  uint64_t v74 = v193;
  v73(v70, v193);
  (*(void (**)(char *, uint64_t))(v190 + 8))(v68, v72);
  uint64_t v75 = sub_255C7F1E8();
  sub_255C7ECB8();
  char v76 = v166;
  char v137 = v60;
  uint64_t v77 = v182;
  MEMORY[0x25A295010](v75, v60, 0, v70, v182, v155);
  v73(v70, v74);
  uint64_t v78 = (*(uint64_t (**)(char *, uint64_t))(v176 + 8))(v71, v77);
  MEMORY[0x270FA5388](v78);
  uint64_t v79 = v201;
  *(&v135 - 4) = (uint64_t)v199;
  *(&v135 - 3) = v79;
  *(&v135 - 2) = v58;
  *(&v135 - 1) = (uint64_t)v60;
  sub_255C801F8();
  uint64_t v80 = v142;
  uint64_t v81 = v177;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v76, v81);
  uint64_t v82 = v139;
  sub_255C7F7F8();
  (*(void (**)(char *, uint64_t))(v146 + 8))(v80, v82);
  uint64_t v83 = v135;
  uint64_t v84 = sub_255C80028();
  uint64_t v85 = v179;
  uint64_t v86 = v200;
  MEMORY[0x25A295850](v84);
  uint64_t v87 = v183;
  v196(v183, v86, v83);
  uint64_t v88 = v202;
  char v89 = *(void (**)(char *, uint64_t, uint64_t))(v202 + 16);
  uint64_t v192 = v202 + 16;
  v189 = v89;
  uint64_t v90 = v188;
  v89(v187, v197, v188);
  uint64_t v91 = v198;
  uint64_t v92 = *(unsigned __int8 *)(v198 + 80);
  uint64_t v93 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v94 = (v92 + 32) & ~v92;
  uint64_t v182 = v94;
  v191 = &v194[(v138 + v93 + v94) & ~v93];
  uint64_t v95 = (v138 + v93 + v94) & ~v93;
  uint64_t v193 = v95;
  uint64_t v177 = v92 | v93 | 7;
  uint64_t v96 = swift_allocObject();
  uint64_t v97 = v199;
  uint64_t v98 = v201;
  *(void *)(v96 + 16) = v199;
  *(void *)(v96 + 24) = v98;
  uint64_t v99 = v96 + v94;
  long long v100 = *(char **)(v91 + 32);
  uint64_t v198 = v91 + 32;
  v194 = v100;
  long long v101 = v87;
  ((void (*)(uint64_t, char *, uint64_t))v100)(v99, v87, v83);
  uint64_t v190 = *(void *)(v88 + 32);
  uint64_t v202 = v88 + 32;
  char v102 = v187;
  ((void (*)(uint64_t, char *, uint64_t))v190)(v96 + v95, v187, v90);
  uint64_t v103 = v163;
  uint64_t v104 = v97;
  char v105 = v184;
  sub_255C7FB48();
  swift_release();
  ((void (**)(char *, ValueMetadata *))Description)[1](v85, v104);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v105, v103);
  uint64_t v204 = *(void *)(v200 + *(int *)(v83 + 36));
  uint64_t v106 = v101;
  long long v107 = v101;
  uint64_t v108 = v83;
  ((void (*)(char *))v196)(v107);
  uint64_t v109 = v188;
  v189(v102, v197, v188);
  uint64_t v110 = swift_allocObject();
  uint64_t v111 = v201;
  *(void *)(v110 + 16) = v104;
  *(void *)(v110 + 24) = v111;
  ((void (*)(uint64_t, char *, uint64_t))v194)(v110 + v182, v106, v108);
  uint64_t v112 = v102;
  ((void (*)(uint64_t, char *, uint64_t))v190)(v110 + v193, v102, v109);
  swift_bridgeObjectRetain();
  swift_checkMetadataState();
  uint64_t v113 = v164;
  uint64_t v114 = v185;
  sub_255C7FB48();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v162 + 8))(v114, v113);
  uint64_t v115 = v200;
  uint64_t v204 = sub_255A28C1C(v108);
  v205 = v116;
  LOBYTE(v206) = v117 & 1;
  uint64_t v118 = v183;
  v196(v183, v115, v108);
  uint64_t v119 = v109;
  v189(v112, v197, v109);
  uint64_t v120 = swift_allocObject();
  *(void *)(v120 + 16) = v199;
  *(void *)(v120 + 24) = v111;
  uint64_t v121 = v182;
  ((void (*)(uint64_t, char *, uint64_t))v194)(v120 + v182, v118, v108);
  ((void (*)(uint64_t, char *, uint64_t))v190)(v120 + v193, v112, v119);
  uint64_t v122 = v165;
  uint64_t v123 = v172;
  uint64_t v124 = v186;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v124, v123);
  uint64_t v204 = v136;
  v205 = v137;
  v196(v118, v200, v108);
  v189(v112, v197, v119);
  uint64_t v125 = swift_allocObject();
  uint64_t v126 = v201;
  *(void *)(v125 + 16) = v199;
  *(void *)(v125 + 24) = v126;
  ((void (*)(uint64_t, char *, uint64_t))v194)(v125 + v121, v118, v108);
  ((void (*)(uint64_t, char *, uint64_t))v190)(v125 + v193, v112, v119);
  uint64_t v127 = v156;
  uint64_t v128 = v178;
  uint64_t v129 = v161;
  unint64_t v130 = v159;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v174 + 8))(v122, v128);
  uint64_t v204 = v128;
  v205 = &type metadata for HorizontalMargins;
  uint64_t v206 = v129;
  unint64_t v207 = v130;
  swift_getOpaqueTypeConformance2();
  uint64_t v131 = v157;
  uint64_t v132 = v171;
  sub_255A20F54(v127);
  uint64_t v133 = *(void (**)(char *, uint64_t))(v169 + 8);
  v133(v127, v132);
  sub_255A20F54(v131);
  return ((uint64_t (*)(char *, uint64_t))v133)(v131, v132);
}

uint64_t sub_255A2B514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v7 = sub_255C80028();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v24 - v8;
  v24[0] = a2;
  v24[1] = a3;
  uint64_t v10 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight();
  uint64_t v26 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void *)((char *)v24 - v11);
  uint64_t v13 = sub_255C7E458();
  uint64_t v27 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v25 = (char *)v24 - v17;
  uint64_t v18 = type metadata accessor for ScopePicker();
  uint64_t v19 = *(void *)(a1 + *(int *)(v18 + 36));
  sub_255C80028();
  swift_bridgeObjectRetain();
  sub_255C7FFF8();
  sub_255A2B834(v19, (uint64_t)v9, *(void *)(a1 + *(int *)(v18 + 40)), v12);
  swift_bridgeObjectRetain();
  sub_255C7F1F8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  (*(void (**)(void *, uint64_t))(v26 + 8))(v12, v10);
  uint64_t v29 = WitnessTable;
  uint64_t v30 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  uint64_t v21 = v25;
  sub_255A20F54(v16);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22(v16, v13);
  sub_255A20F54(v21);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v13);
}

uint64_t sub_255A2B834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight();
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 36);
  uint64_t v9 = sub_255C80028();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *(void *)((char *)a4 + *(int *)(v7 + 40)) = a3;
  return result;
}

uint64_t sub_255A2B8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v29 = a3;
  uint64_t v28 = sub_255C802C8();
  uint64_t v9 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScopePicker.FadingView();
  swift_getWitnessTable();
  sub_255C7E268();
  uint64_t v26 = sub_255C7E458();
  sub_255C7E578();
  uint64_t v12 = sub_255C7E458();
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(double *)(v18 + 32) = a4;
  *(double *)(v18 + 40) = a5;
  *(void *)&long long v34 = sub_255C7E258();
  *((void *)&v34 + 1) = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F7E8();
  swift_release();
  long long v34 = v36;
  char v35 = v37;
  uint64_t v21 = v28;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1B970], v28);
  unint64_t v22 = sub_255A101A0();
  uint64_t v32 = WitnessTable;
  unint64_t v33 = v22;
  uint64_t v23 = swift_getWitnessTable();
  sub_255C7FB78();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  swift_release();
  uint64_t v30 = v23;
  uint64_t v31 = MEMORY[0x263F190D0];
  swift_getWitnessTable();
  sub_255A20F54(v15);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v27 + 8);
  v24(v15, v12);
  sub_255A20F54(v17);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, v12);
}

uint64_t sub_255A2BC60(double a1, double a2)
{
  sub_255C7E0C8();
  *(void *)&v5[0] = v3;
  *((double *)v5 + 1) = a2;
  type metadata accessor for ScopePicker.FadingView();
  swift_getWitnessTable();
  sub_255A20F54(v5);
  v5[0] = v5[1];
  return sub_255A20F54(v5);
}

uint64_t sub_255A2BD18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(v5 + 40));
  uint64_t v9 = sub_255C80028();
  MEMORY[0x25A295850](v9);
  MEMORY[0x25A295D10](&v11, v7, v8, v3, MEMORY[0x263F8D6C8], *(void *)(*(void *)(a1 + 24) + 8));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v11;
}

uint64_t sub_255A2BE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v119 = sub_255C7EFA8();
  uint64_t v118 = *(void *)(v119 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v119);
  char v117 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v116 = v5;
  uint64_t v127 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v124 = a1;
  uint64_t v122 = (void (*)(char *, uint64_t *, uint64_t))sub_255C80028();
  MEMORY[0x270FA5388](v122);
  uint64_t v108 = (char *)&v89 - v7;
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v123 = v6;
  uint64_t v9 = type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v110 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v109 = (uint64_t *)((char *)&v89 - v10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21648);
  uint64_t v11 = sub_255C7E458();
  uint64_t v113 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v112 = (char *)&v89 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21650);
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v128 = v8;
  type metadata accessor for ScopePicker.ScopeButtonHighlight();
  swift_getWitnessTable();
  sub_255C7DE88();
  sub_255C7E458();
  uint64_t v107 = sub_255C7F0D8();
  sub_255C7E458();
  uint64_t v13 = sub_255C80E88();
  unint64_t OpaqueTypeConformance2 = sub_255A345C4();
  uint64_t v111 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
  uint64_t v99 = WitnessTable;
  uint64_t v144 = WitnessTable;
  uint64_t v145 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_255A09998(&qword_269F21660, &qword_269F21650);
  uint64_t v142 = v16;
  uint64_t v143 = v17;
  uint64_t v18 = swift_getWitnessTable();
  unint64_t v19 = sub_255A101A0();
  uint64_t v140 = v18;
  unint64_t v141 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v138 = v20;
  uint64_t v139 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v136 = v22;
  uint64_t v137 = v23;
  uint64_t v115 = v23;
  uint64_t v135 = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v146 = &type metadata for AnchorKey;
  uint64_t v147 = v13;
  uint64_t v106 = v13;
  unint64_t v148 = OpaqueTypeConformance2;
  uint64_t v149 = v24;
  uint64_t v93 = v24;
  sub_255C7EFE8();
  uint64_t v114 = v11;
  uint64_t v25 = sub_255C7E458();
  uint64_t v96 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v94 = (char *)&v89 - v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v102 = v16;
  uint64_t v133 = v16;
  uint64_t v134 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v92 = v25;
  uint64_t v146 = (ValueMetadata *)v25;
  uint64_t v147 = v28;
  uint64_t v95 = v28;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v100 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v98 = (char *)&v89 - v30;
  uint64_t v97 = v31;
  uint64_t v32 = sub_255C7E458();
  uint64_t v107 = *(void *)(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  long long v101 = (char *)&v89 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v103 = (char *)&v89 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v104 = (char *)&v89 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  char v105 = (char *)&v89 - v40;
  uint64_t v41 = v123;
  uint64_t v42 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v89 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v124;
  unint64_t v46 = v126;
  sub_255A2BD18(v124);
  if (v47)
  {
    uint64_t v91 = 0;
    unint64_t v90 = 0xE000000000000000;
  }
  else
  {
    MEMORY[0x25A295850](v122);
    uint64_t v91 = (*(uint64_t (**)(uint64_t))(v128 + 16))(v41);
    unint64_t v90 = v48;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
  }
  uint64_t v49 = *v46;
  uint64_t v50 = v45;
  swift_bridgeObjectRetain();
  uint64_t v51 = (uint64_t)v108;
  sub_255C7FFF8();
  uint64_t v52 = v109;
  uint64_t v53 = v41;
  uint64_t v54 = v128;
  sub_255A2CD40(v49, v51, v109);
  sub_255A346E8((uint64_t)&v146);
  uint64_t v55 = v150;
  uint64_t v151 = v150;
  swift_retain();
  sub_255A34A58((uint64_t)&v146);
  uint64_t v131 = v55;
  uint64_t v56 = v112;
  uint64_t v57 = v111;
  sub_255C7F7C8();
  sub_255A34AC0((uint64_t)&v151);
  (*(void (**)(void *, uint64_t))(v110 + 8))(v52, v57);
  uint64_t v58 = v120;
  uint64_t v59 = *(void (**)(char *, uint64_t *, uint64_t))(v120 + 16);
  uint64_t v111 = v120 + 16;
  uint64_t v122 = v59;
  uint64_t v60 = v127;
  v59(v127, v46, v50);
  uint64_t v61 = *(unsigned __int8 *)(v58 + 80);
  v116 += (v61 + 32) & ~v61;
  uint64_t v62 = (v61 + 32) & ~v61;
  uint64_t v110 = v62;
  uint64_t v109 = (void *)(v61 | 7);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v53;
  *(void *)(v63 + 24) = v54;
  uint64_t v120 = *(void *)(v58 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v120)(v63 + v62, v60, v50);
  sub_255C801F8();
  uint64_t v64 = v94;
  uint64_t v65 = v114;
  sub_255C7F968();
  swift_release();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v56, v65);
  uint64_t v66 = v117;
  sub_255C7EF88();
  uint64_t v67 = v98;
  uint64_t v68 = v92;
  unint64_t v69 = v95;
  sub_255C7F8F8();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v66, v119);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v68);
  sub_255C7E968();
  uint64_t v70 = sub_255C7F538();
  uint64_t v72 = v71;
  LOBYTE(v64) = v73 & 1;
  uint64_t v131 = v68;
  unint64_t v132 = v69;
  unint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = v101;
  uint64_t v75 = v97;
  sub_255C7F858();
  sub_255A094C0(v70, v72, (char)v64);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v67, v75);
  uint64_t v131 = v91;
  unint64_t v132 = v90;
  sub_255A1D78C();
  uint64_t v76 = sub_255C7F548();
  uint64_t v78 = v77;
  LOBYTE(v75) = v79 & 1;
  uint64_t v80 = v103;
  sub_255C7E3D8();
  sub_255A094C0(v76, v78, v75);
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void (**)(char *, uint64_t))(v107 + 8);
  v81(v74, v32);
  uint64_t v82 = v127;
  uint64_t v83 = v124;
  v122(v127, v126, v124);
  uint64_t v84 = swift_allocObject();
  uint64_t v85 = v128;
  *(void *)(v84 + 16) = v123;
  *(void *)(v84 + 24) = v85;
  ((void (*)(uint64_t, char *, uint64_t))v120)(v84 + v110, v82, v83);
  uint64_t v86 = v104;
  sub_255C7E438();
  swift_release();
  v81(v80, v32);
  unint64_t v129 = OpaqueTypeConformance2;
  uint64_t v130 = v115;
  swift_getWitnessTable();
  uint64_t v87 = v105;
  sub_255A20F54(v86);
  v81(v86, v32);
  sub_255A20F54(v87);
  return ((uint64_t (*)(char *, uint64_t))v81)(v87, v32);
}

uint64_t sub_255A2CD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v5 = type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v6 = (char *)a3 + *(int *)(v5 + 36);
  uint64_t v7 = sub_255C80028();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
  uint64_t v8 = (void *)((char *)a3 + *(int *)(v5 + 40));
  *uint64_t v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29EB20);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255A2CE18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v142 = a2;
  uint64_t v149 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21668);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v135 = (uint64_t *)((char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ScopePicker.ScopeButtonHighlight();
  uint64_t v137 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v136 = (char *)&v116 - v11;
  uint64_t v12 = sub_255C80028();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v122 = (char *)&v116 - v13;
  uint64_t v141 = a4;
  uint64_t v14 = type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v124 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v123 = (uint64_t *)((char *)&v116 - v15);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21648);
  uint64_t v153 = v14;
  uint64_t v16 = sub_255C7E458();
  uint64_t v126 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v140 = (char *)&v116 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21650);
  uint64_t v152 = v16;
  uint64_t v18 = sub_255C7E458();
  uint64_t v127 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v125 = (char *)&v116 - v19;
  uint64_t v151 = v20;
  uint64_t v21 = sub_255C7E458();
  uint64_t v133 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v130 = (char *)&v116 - v22;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v138 = v10;
  uint64_t v128 = WitnessTable;
  uint64_t v24 = sub_255C7DE88();
  uint64_t v148 = v21;
  uint64_t v25 = sub_255C7E458();
  uint64_t v131 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v129 = (char *)&v116 - v26;
  sub_255C7F0D8();
  uint64_t v147 = v25;
  uint64_t v27 = sub_255C7E458();
  uint64_t v143 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  unint64_t v132 = (char *)&v116 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v134 = (char *)&v116 - v30;
  uint64_t v31 = sub_255C80E88();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v116 - v34;
  uint64_t v36 = *(void *)(a3 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v33);
  uint64_t v121 = (char *)&v116 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)&v116 - v39;
  uint64_t v146 = sub_255C80E88();
  uint64_t v144 = *(void *)(v146 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v146);
  MEMORY[0x270FA5388](v41);
  uint64_t v145 = (char *)&v116 - v43;
  uint64_t v44 = *a1;
  uint64_t v150 = v24;
  if (v44)
  {
    uint64_t v119 = v42;
    uint64_t v120 = v27;
    uint64_t v45 = *v142;
    v194[0] = *v142;
    sub_255C808C8();
    uint64_t v139 = v44;
    swift_retain();
    swift_getWitnessTable();
    sub_255C80B68();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v35, 1, a3) != 1)
    {
      char v117 = v40;
      uint64_t v118 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v40, v35, a3);
      swift_bridgeObjectRetain();
      uint64_t v60 = (uint64_t)v122;
      sub_255C80018();
      uint64_t v61 = v123;
      sub_255A2CD40(v45, v60, v123);
      sub_255A346E8((uint64_t)v192);
      uint64_t v62 = v193;
      uint64_t v195 = v193;
      swift_retain();
      sub_255A34A58((uint64_t)v192);
      v194[0] = v62;
      uint64_t v63 = v153;
      uint64_t v64 = swift_getWitnessTable();
      sub_255C7F7C8();
      sub_255A34AC0((uint64_t)&v195);
      (*(void (**)(void *, uint64_t))(v124 + 8))(v61, v63);
      LOBYTE(v62) = sub_255C7F188();
      sub_255C7DC08();
      uint64_t v66 = v65;
      uint64_t v68 = v67;
      uint64_t v70 = v69;
      uint64_t v72 = v71;
      sub_255A346E8((uint64_t)v194);
      uint64_t v73 = v194[5];
      swift_retain();
      sub_255A34A58((uint64_t)v194);
      char v164 = v62;
      uint64_t v165 = v66;
      uint64_t v166 = v68;
      uint64_t v167 = v70;
      uint64_t v168 = v72;
      char v169 = 0;
      uint64_t v170 = v73;
      sub_255C801F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F21670);
      uint64_t v74 = sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
      uint64_t v162 = v64;
      uint64_t v163 = v74;
      uint64_t v124 = MEMORY[0x263F18E48];
      uint64_t v75 = v152;
      uint64_t v76 = swift_getWitnessTable();
      sub_255A34D44();
      uint64_t v77 = v125;
      uint64_t v78 = v140;
      sub_255C7F5A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v78, v75);
      uint64_t v79 = sub_255A09998(&qword_269F21660, &qword_269F21650);
      uint64_t v160 = v76;
      uint64_t v161 = v79;
      uint64_t v80 = v151;
      uint64_t v81 = swift_getWitnessTable();
      uint64_t v82 = v130;
      sub_255C7F7E8();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v77, v80);
      type metadata accessor for ScopePicker.ScopeButtonsWithHighlight();
      uint64_t v83 = sub_255C80028();
      uint64_t v84 = v139;
      swift_retain();
      uint64_t v85 = (uint64_t)v121;
      MEMORY[0x25A295850](v83);
      uint64_t v86 = v135;
      sub_255A2DE04(v135);
      uint64_t v87 = v136;
      sub_255A2DE5C(v84, v85, (uint64_t)v86, a3, v136);
      unint64_t v88 = sub_255A101A0();
      uint64_t v158 = v81;
      unint64_t v159 = v88;
      uint64_t v89 = v148;
      uint64_t v90 = swift_getWitnessTable();
      uint64_t v91 = v129;
      uint64_t v92 = v138;
      sub_255C7FA08();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v87, v92);
      (*(void (**)(char *, uint64_t))(v133 + 8))(v82, v89);
      uint64_t v93 = swift_getWitnessTable();
      uint64_t v156 = v90;
      uint64_t v157 = v93;
      uint64_t v94 = v147;
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v96 = v132;
      sub_255C7F8D8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v91, v94);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v117, a3);
      uint64_t v97 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
      uint64_t v154 = v95;
      uint64_t v155 = v97;
      uint64_t v98 = v120;
      swift_getWitnessTable();
      uint64_t v99 = v134;
      sub_255A20F54(v96);
      uint64_t v100 = v143;
      long long v101 = *(void (**)(char *, uint64_t))(v143 + 8);
      v101(v96, v98);
      uint64_t v46 = v119;
      sub_255A20F54(v99);
      v101(v99, v98);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v46, 0, 1, v98);
      uint64_t v57 = v145;
      uint64_t v58 = (uint64_t)v145;
      uint64_t v59 = v46;
      goto LABEL_6;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
    uint64_t v42 = v119;
    uint64_t v27 = v120;
  }
  uint64_t v46 = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v42, 1, 1, v27);
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
  uint64_t v190 = v47;
  uint64_t v191 = v48;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = sub_255A09998(&qword_269F21660, &qword_269F21650);
  uint64_t v188 = v49;
  uint64_t v189 = v50;
  uint64_t v51 = swift_getWitnessTable();
  unint64_t v52 = sub_255A101A0();
  uint64_t v186 = v51;
  unint64_t v187 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v184 = v53;
  uint64_t v185 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v56 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v182 = v55;
  uint64_t v183 = v56;
  swift_getWitnessTable();
  uint64_t v57 = v145;
  uint64_t v58 = (uint64_t)v145;
  uint64_t v59 = v46;
LABEL_6:
  sub_255A97640(v59, v58);
  uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
  uint64_t v103 = v46;
  uint64_t v104 = v146;
  v102(v103, v146);
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v106 = sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
  uint64_t v180 = v105;
  uint64_t v181 = v106;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = sub_255A09998(&qword_269F21660, &qword_269F21650);
  uint64_t v178 = v107;
  uint64_t v179 = v108;
  uint64_t v109 = swift_getWitnessTable();
  unint64_t v110 = sub_255A101A0();
  uint64_t v176 = v109;
  unint64_t v177 = v110;
  uint64_t v111 = swift_getWitnessTable();
  uint64_t v112 = swift_getWitnessTable();
  uint64_t v174 = v111;
  uint64_t v175 = v112;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v114 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v172 = v113;
  uint64_t v173 = v114;
  uint64_t v171 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v57);
  return ((uint64_t (*)(char *, uint64_t))v102)(v57, v104);
}

uint64_t sub_255A2DE04@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255A2DE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  *(void *)a5 = a1;
  uint64_t v9 = type metadata accessor for ScopePicker.ScopeButtonHighlight();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(&a5[*(int *)(v9 + 36)], a2, a4);
  return sub_255A10514(a3, (uint64_t)&a5[*(int *)(v9 + 40)], &qword_269F21668);
}

uint64_t sub_255A2DF00(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C7F0F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1A498], v8);
  char v12 = sub_255C7F0E8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight();
  uint64_t result = sub_255A2BD18(v13);
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = 1;
    if ((v12 & 1) == 0) {
      uint64_t v16 = -1;
    }
    if (__OFADD__(result, v16))
    {
      __break(1u);
    }
    else
    {
      uint64_t result = MEMORY[0x25A296130](*a2, a3);
      if (!__OFSUB__(result, 1))
      {
        sub_255C808E8();
        sub_255A3901C((uint64_t)v7, v13);
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a3);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_255A2E118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE50);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v39 = a1;
  uint64_t v38 = sub_255C808C8();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F217D8);
  uint64_t v7 = sub_255A09998(&qword_269F217E0, &qword_269F217D8);
  uint64_t v40 = *(void *)(a1 + 24);
  uint64_t v37 = *(void *)(v40 + 8);
  uint64_t v54 = v6;
  uint64_t v55 = v5;
  uint64_t v36 = v5;
  uint64_t v56 = v7;
  uint64_t v57 = v37;
  uint64_t v8 = sub_255C7FEE8();
  uint64_t v9 = sub_255C7E4C8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_255A38C94(&qword_269F217E8, MEMORY[0x263F18FD0]);
  uint64_t v54 = v8;
  uint64_t v55 = v9;
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v11;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F217F0);
  uint64_t v12 = sub_255C7E458();
  uint64_t v13 = sub_255C7EC08();
  uint64_t v54 = v8;
  uint64_t v55 = v9;
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v15 = sub_255A09998(&qword_269F217F8, &qword_269F217F0);
  uint64_t v52 = OpaqueTypeConformance2;
  uint64_t v53 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_255A38C94(&qword_269F21800, MEMORY[0x263F19BA8]);
  uint64_t v54 = v12;
  uint64_t v55 = v13;
  uint64_t v56 = v16;
  uint64_t v57 = v17;
  swift_getOpaqueTypeMetadata2();
  sub_255C7F0D8();
  sub_255C7E458();
  uint64_t v18 = sub_255C7E458();
  uint64_t v19 = v38;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v54 = v19;
  uint64_t v55 = v5;
  uint64_t v56 = v18;
  uint64_t v57 = v20;
  uint64_t v58 = v37;
  uint64_t v21 = sub_255C80088();
  uint64_t v54 = v12;
  uint64_t v55 = v13;
  uint64_t v56 = v16;
  uint64_t v57 = v17;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v50 = v22;
  uint64_t v51 = v23;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v23;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v38 = v21;
  swift_getWitnessTable();
  uint64_t v24 = sub_255C7FED8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v36 - v29;
  sub_255A346E8((uint64_t)&v54);
  uint64_t v31 = v59;
  swift_retain();
  sub_255A34A58((uint64_t)&v54);
  uint64_t v32 = v42;
  uint64_t v33 = v41;
  sub_255ABA0FC(v41);
  v31(v33);
  swift_release();
  sub_255A095A4(v33, &qword_26B29EE50);
  uint64_t v44 = v36;
  uint64_t v45 = v40;
  uint64_t v46 = v32;
  sub_255C7E928();
  sub_255C7FEC8();
  swift_getWitnessTable();
  sub_255A20F54(v28);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v25 + 8);
  v34(v28, v24);
  sub_255A20F54(v30);
  return ((uint64_t (*)(char *, uint64_t))v34)(v30, v24);
}

uint64_t sub_255A2E70C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v56 = a4;
  uint64_t v50 = a3;
  uint64_t v55 = type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v52 = *(void *)(v55 - 8);
  uint64_t v54 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v55);
  uint64_t v51 = (char *)v39 - v6;
  uint64_t v7 = sub_255C808C8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F217D8);
  uint64_t v9 = sub_255A09998(&qword_269F217E0, &qword_269F217D8);
  uint64_t v57 = *(void *)(a3 + 8);
  uint64_t v66 = v8;
  uint64_t v67 = a2;
  uint64_t v68 = v9;
  uint64_t v69 = v57;
  uint64_t v10 = sub_255C7FEE8();
  uint64_t v11 = sub_255C7E4C8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_255A38C94(&qword_269F217E8, MEMORY[0x263F18FD0]);
  uint64_t v66 = v10;
  uint64_t v67 = v11;
  uint64_t v68 = WitnessTable;
  uint64_t v69 = v13;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F217F0);
  uint64_t v14 = sub_255C7E458();
  uint64_t v15 = sub_255C7EC08();
  uint64_t v43 = v15;
  uint64_t v66 = v10;
  uint64_t v67 = v11;
  uint64_t v68 = WitnessTable;
  uint64_t v69 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_255A09998(&qword_269F217F8, &qword_269F217F0);
  uint64_t v71 = OpaqueTypeConformance2;
  uint64_t v72 = v17;
  uint64_t v49 = MEMORY[0x263F18E48];
  uint64_t v44 = v14;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v42 = v18;
  uint64_t v41 = sub_255A38C94(&qword_269F21800, MEMORY[0x263F19BA8]);
  uint64_t v66 = v14;
  uint64_t v67 = v15;
  uint64_t v68 = v18;
  uint64_t v69 = v41;
  v39[3] = MEMORY[0x263F1A988];
  swift_getOpaqueTypeMetadata2();
  sub_255C7F0D8();
  uint64_t v45 = sub_255C7E458();
  uint64_t v19 = sub_255C7E458();
  v39[2] = v19;
  uint64_t v47 = v7;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v66 = v7;
  uint64_t v67 = a2;
  uint64_t v20 = a2;
  uint64_t v68 = v19;
  uint64_t v69 = v46;
  uint64_t v70 = v57;
  uint64_t v21 = sub_255C80088();
  uint64_t v48 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v40 = (char *)v39 - v25;
  uint64_t v26 = v53;
  uint64_t v65 = *v53;
  uint64_t v27 = v50;
  uint64_t v58 = a2;
  uint64_t v59 = v50;
  v39[1] = swift_getKeyPath();
  uint64_t v28 = v52;
  uint64_t v29 = v51;
  uint64_t v30 = v55;
  (*(void (**)(char *, void *, uint64_t))(v52 + 16))(v51, v26, v55);
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v20;
  *(void *)(v32 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v32 + v31, v29, v30);
  swift_bridgeObjectRetain();
  uint64_t v66 = v44;
  uint64_t v67 = v43;
  uint64_t v68 = v42;
  uint64_t v69 = v41;
  uint64_t v33 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v63 = v33;
  uint64_t v64 = v34;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = v34;
  uint64_t v38 = swift_getWitnessTable();
  sub_255C80068();
  uint64_t v60 = v38;
  swift_getWitnessTable();
  uint64_t v35 = v40;
  sub_255A20F54(v24);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v48 + 8);
  v36(v24, v21);
  sub_255A20F54(v35);
  return ((uint64_t (*)(char *, uint64_t))v36)(v35, v21);
}

uint64_t sub_255A2ED7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v134 = a2;
  uint64_t v135 = a1;
  uint64_t v128 = a5;
  uint64_t v7 = sub_255C7EC08();
  uint64_t v98 = v7;
  uint64_t v127 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v126 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_255C80038();
  MEMORY[0x270FA5388](v125);
  uint64_t v122 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_255C7E5B8();
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v121 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_255C7E4C8();
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v116 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = *(void *)(a3 - 8);
  uint64_t v100 = *(void *)(v94 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v133 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = a4;
  uint64_t v132 = type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v130 = *(void *)(v132 - 8);
  uint64_t v92 = *(void *)(v130 + 64);
  MEMORY[0x270FA5388](v132);
  uint64_t v16 = (char *)&v83 - v15;
  uint64_t v83 = (char *)&v83 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F217D8);
  uint64_t v102 = v17;
  uint64_t v108 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v104 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_255A09998(&qword_269F217E0, &qword_269F217D8);
  uint64_t v101 = *(void *)(a4 + 8);
  v149[0] = v17;
  v149[1] = a3;
  uint64_t v150 = v103;
  uint64_t v151 = v101;
  uint64_t v19 = sub_255C7FEE8();
  uint64_t v106 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v90 = (char *)&v83 - v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_255A38C94(&qword_269F217E8, MEMORY[0x263F18FD0]);
  v149[0] = v19;
  v149[1] = v11;
  uint64_t v85 = v19;
  uint64_t v84 = v11;
  uint64_t v150 = WitnessTable;
  uint64_t v151 = v22;
  uint64_t v87 = WitnessTable;
  uint64_t v86 = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v109 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  unint64_t v88 = (char *)&v83 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F217F0);
  uint64_t v24 = sub_255C7E458();
  uint64_t v114 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v91 = (char *)&v83 - v25;
  v149[0] = v19;
  v149[1] = v11;
  uint64_t v150 = WitnessTable;
  uint64_t v151 = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = OpaqueTypeConformance2;
  uint64_t v27 = sub_255A09998(&qword_269F217F8, &qword_269F217F0);
  uint64_t v147 = OpaqueTypeConformance2;
  uint64_t v148 = v27;
  uint64_t v120 = MEMORY[0x263F18E48];
  uint64_t v97 = v24;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v96 = v28;
  uint64_t v95 = sub_255A38C94(&qword_269F21800, MEMORY[0x263F19BA8]);
  v149[0] = v24;
  v149[1] = v7;
  uint64_t v150 = v28;
  uint64_t v151 = v95;
  uint64_t v107 = MEMORY[0x263F1A988];
  uint64_t v105 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v131 = (char *)&v83 - v29;
  sub_255C7F0D8();
  uint64_t v112 = sub_255C7E458();
  uint64_t v117 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v93 = (char *)&v83 - v30;
  uint64_t v115 = sub_255C7E458();
  uint64_t v118 = *(void *)(v115 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v115);
  uint64_t v111 = (char *)&v83 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v113 = (char *)&v83 - v33;
  uint64_t v34 = v130;
  uint64_t v35 = v16;
  uint64_t v36 = v134;
  uint64_t v37 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v35, v134, v132);
  uint64_t v38 = v94;
  uint64_t v39 = v133;
  uint64_t v40 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v133, v135, a3);
  unint64_t v41 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v42 = (v92 + *(unsigned __int8 *)(v38 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v136;
  *(void *)(v43 + 16) = a3;
  *(void *)(v43 + 24) = v44;
  (*(void (**)(unint64_t, char *, uint64_t))(v130 + 32))(v43 + v41, v83, v37);
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v43 + v42, v39, a3);
  uint64_t v137 = a3;
  uint64_t v138 = v44;
  uint64_t v129 = a3;
  uint64_t v139 = v40;
  uint64_t v140 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21808);
  sub_255A38A4C();
  uint64_t v45 = v104;
  sub_255C7FEA8();
  uint64_t v46 = v90;
  uint64_t v47 = v102;
  sub_255C7F9D8();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v45, v47);
  uint64_t v48 = v116;
  sub_255C7E4B8();
  uint64_t v49 = v88;
  uint64_t v50 = v85;
  uint64_t v51 = v84;
  sub_255C7F638();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v48, v51);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v46, v50);
  uint64_t v52 = v121;
  sub_255C7E5A8();
  uint64_t v53 = *MEMORY[0x263F19860];
  uint64_t v54 = sub_255C7E988();
  uint64_t v55 = (uint64_t)v122;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v122, v53, v54);
  sub_255A38C94(&qword_269F21868, MEMORY[0x263F1B7A0]);
  uint64_t v56 = v91;
  uint64_t v57 = OpaqueTypeMetadata2;
  sub_255C7F718();
  sub_255A38C38(v55);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v52, v124);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v49, v57);
  uint64_t v58 = v126;
  sub_255C7E608();
  uint64_t v59 = sub_255C80028();
  uint64_t v60 = v133;
  MEMORY[0x25A295850](v59);
  uint64_t v61 = v129;
  sub_255C80578();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v61);
  uint64_t v62 = v97;
  uint64_t v63 = v98;
  uint64_t v64 = v96;
  uint64_t v65 = v95;
  sub_255C7F688();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v58, v63);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v56, v62);
  uint64_t v66 = *(uint64_t (**)(uint64_t))(v136 + 16);
  uint64_t v67 = v129;
  uint64_t v145 = v66(v129);
  uint64_t v146 = v68;
  v149[0] = v62;
  v149[1] = v63;
  uint64_t v150 = v64;
  uint64_t v151 = v65;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  sub_255A1D78C();
  uint64_t v70 = v93;
  uint64_t v71 = v105;
  uint64_t v72 = v131;
  sub_255C7F868();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v72, v71);
  strcpy((char *)v149, "scopeButton.");
  BYTE5(v149[1]) = 0;
  HIWORD(v149[1]) = -5120;
  uint64_t v73 = ((uint64_t (*)(uint64_t, uint64_t))v66)(v67, v136);
  sub_255B4C32C(v73, v74);
  swift_bridgeObjectRelease();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  uint64_t v75 = sub_255A38C94((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v143 = v69;
  uint64_t v144 = v75;
  uint64_t v76 = v112;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = v111;
  sub_255B4BFB8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v70, v76);
  uint64_t v141 = v77;
  uint64_t v142 = v75;
  uint64_t v79 = v115;
  swift_getWitnessTable();
  uint64_t v80 = v113;
  sub_255A20F54(v78);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v118 + 8);
  v81(v78, v79);
  sub_255A20F54(v80);
  return ((uint64_t (*)(char *, uint64_t))v81)(v80, v79);
}

uint64_t sub_255A2FDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a3;
  uint64_t v91 = a2;
  uint64_t v100 = a5;
  uint64_t v98 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v94 = v8;
  uint64_t v96 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v93 = *(void *)(v95 - 8);
  uint64_t v89 = *(void *)(v93 + 64);
  MEMORY[0x270FA5388](v95);
  uint64_t v90 = (char *)&v77 - v9;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v78);
  uint64_t v101 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21870);
  uint64_t v82 = *(void *)(v11 - 8);
  uint64_t v83 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v80 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21840);
  MEMORY[0x270FA5388](v79);
  uint64_t v84 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21830);
  MEMORY[0x270FA5388](v81);
  uint64_t v85 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21820);
  MEMORY[0x270FA5388](v86);
  uint64_t v102 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21808);
  MEMORY[0x270FA5388](v87);
  uint64_t v88 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v92 = a1;
  uint64_t v99 = v6;
  uint64_t v97 = a4;
  *(void *)&long long v108 = v17(v6, a4);
  *((void *)&v108 + 1) = v18;
  sub_255A1D78C();
  uint64_t v19 = sub_255C7F548();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_255A346E8((uint64_t)v103);
  swift_retain();
  sub_255A34A58((uint64_t)v103);
  uint64_t v24 = sub_255C7F4A8();
  uint64_t v26 = v25;
  LOBYTE(v6) = v27;
  uint64_t v29 = v28;
  swift_release();
  sub_255A094C0(v19, v21, v23);
  uint64_t v30 = (uint64_t)v101;
  swift_bridgeObjectRelease();
  *(void *)&long long v108 = v24;
  *((void *)&v108 + 1) = v26;
  LOBYTE(v109) = v6 & 1;
  *((void *)&v109 + 1) = v29;
  uint64_t v31 = *MEMORY[0x263F18D70];
  uint64_t v32 = sub_255C7E378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  sub_255A38C94(qword_269F21878, MEMORY[0x263F18D80]);
  uint64_t result = sub_255C80578();
  if (result)
  {
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    uint64_t v34 = v80;
    sub_255C7F7B8();
    sub_255A095A4(v30, &qword_269F21848);
    sub_255A094C0(v108, *((uint64_t *)&v108 + 1), v109);
    swift_bridgeObjectRelease();
    char v35 = sub_255C7F188();
    sub_255A346E8((uint64_t)v104);
    sub_255A34A58((uint64_t)v104);
    sub_255C7DC08();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v45 = v82;
    uint64_t v44 = v83;
    uint64_t v46 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v84, v34, v83);
    uint64_t v47 = v46 + *(int *)(v79 + 36);
    *(unsigned char *)uint64_t v47 = v35;
    *(void *)(v47 + 8) = v37;
    *(void *)(v47 + 16) = v39;
    *(void *)(v47 + 24) = v41;
    *(void *)(v47 + 32) = v43;
    *(unsigned char *)(v47 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v44);
    char v48 = sub_255C7F1F8();
    sub_255A346E8((uint64_t)v105);
    sub_255A34A58((uint64_t)v105);
    sub_255C7DC08();
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v57 = v85;
    sub_255A09540(v46, v85, &qword_269F21840);
    uint64_t v58 = v57 + *(int *)(v81 + 36);
    *(unsigned char *)uint64_t v58 = v48;
    *(void *)(v58 + 8) = v50;
    *(void *)(v58 + 16) = v52;
    *(void *)(v58 + 24) = v54;
    *(void *)(v58 + 32) = v56;
    *(unsigned char *)(v58 + 40) = 0;
    sub_255A095A4(v46, &qword_269F21840);
    sub_255A346E8((uint64_t)v106);
    sub_255A34A58((uint64_t)v106);
    sub_255A346E8((uint64_t)v107);
    sub_255A34A58((uint64_t)v107);
    sub_255C801F8();
    sub_255C7E588();
    uint64_t v59 = v102;
    sub_255A09540(v57, v102, &qword_269F21830);
    uint64_t v60 = (_OWORD *)(v59 + *(int *)(v86 + 36));
    long long v61 = v113;
    v60[4] = v112;
    v60[5] = v61;
    v60[6] = v114;
    long long v62 = v109;
    *uint64_t v60 = v108;
    v60[1] = v62;
    long long v63 = v111;
    v60[2] = v110;
    v60[3] = v63;
    sub_255A095A4(v57, &qword_269F21830);
    uint64_t v101 = (char *)sub_255C7FE98();
    uint64_t v64 = v93;
    uint64_t v65 = v90;
    uint64_t v66 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v90, v91, v95);
    uint64_t v68 = v98;
    uint64_t v67 = v99;
    uint64_t v69 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v96, v92, v99);
    unint64_t v70 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    unint64_t v71 = (v89 + *(unsigned __int8 *)(v68 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v72 = swift_allocObject();
    uint64_t v73 = v97;
    *(void *)(v72 + 16) = v67;
    *(void *)(v72 + 24) = v73;
    (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v72 + v70, v65, v66);
    (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v72 + v71, v69, v67);
    uint64_t v74 = v102;
    uint64_t v75 = v88;
    sub_255A09540(v102, v88, &qword_269F21820);
    uint64_t v76 = (void *)(v75 + *(int *)(v87 + 36));
    void *v76 = v101;
    v76[1] = sub_255A38F28;
    v76[2] = v72;
    sub_255A095A4(v74, &qword_269F21820);
    return sub_255A10514(v75, v100, &qword_269F21808);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255A30678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScopePicker.ScopeButtons();
  uint64_t v9 = sub_255C80028();
  MEMORY[0x25A295850](v9);
  char v10 = sub_255C80578();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  uint64_t v12 = 0;
  if (v10)
  {
    uint64_t result = swift_retain();
    uint64_t v12 = a1;
  }
  *a3 = v12;
  return result;
}

uint64_t sub_255A307B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(v5 + 16) = *(void *)(a1 + 16);
  *(void *)(v5 + 24) = v6;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule();
  sub_255C7E998();
  sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v13 = WitnessTable;
  uint64_t v14 = v8;
  swift_getWitnessTable();
  uint64_t v11 = sub_255C7E258();
  uint64_t v12 = v9;
  sub_255C7E268();
  swift_getWitnessTable();
  sub_255A20F54(&v11);
  swift_release();
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  sub_255A20F54(&v11);
  return swift_release();
}

uint64_t sub_255A30A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v9 = type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule();
  uint64_t v44 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v45 = v9;
  uint64_t v43 = sub_255C7E998();
  uint64_t v10 = sub_255C7E458();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)v39 - v13;
  uint64_t v14 = sub_255C7E398();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v39 - v19;
  type metadata accessor for CGRect(0);
  v39[1] = a1;
  sub_255C7E108();
  CGFloat v21 = v51;
  CGFloat v22 = v52;
  CGFloat v23 = v53;
  CGFloat v24 = v54;
  uint64_t v46 = a3;
  type metadata accessor for ScopePicker.ScopeButtonHighlight();
  uint64_t v42 = a2;
  sub_255ABA128((uint64_t)v20);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x263F18DC8], v14);
  char v25 = sub_255C7E388();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v18, v14);
  v26(v20, v14);
  if (v25)
  {
    v55.origin.x = v21;
    v55.origin.y = v22;
    v55.size.width = v23;
    v55.size.height = v24;
    double MinX = CGRectGetMinX(v55);
  }
  else
  {
    sub_255C7E0D8();
    double v29 = v28;
    v56.origin.x = v21;
    v56.origin.y = v22;
    v56.size.width = v23;
    v56.size.height = v24;
    double MinX = v29 - CGRectGetMaxX(v56);
  }
  v57.origin.x = v21;
  v57.origin.y = v22;
  v57.size.width = v23;
  v57.size.height = v24;
  CGFloat MinY = CGRectGetMinY(v57);
  v58.origin.x = v21;
  v58.origin.y = v22;
  v58.size.width = v23;
  v58.size.height = v24;
  CGFloat Width = CGRectGetWidth(v58);
  v59.origin.x = v21;
  v59.origin.y = v22;
  v59.size.width = v23;
  v59.size.height = v24;
  CGFloat Height = CGRectGetHeight(v59);
  double v51 = MinX;
  double v52 = MinY;
  double v53 = Width;
  CGFloat v54 = Height;
  sub_255C80298();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = v40;
  sub_255C7FB68();
  swift_release();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v49 = WitnessTable;
  uint64_t v50 = v35;
  swift_getWitnessTable();
  uint64_t v36 = v41;
  sub_255A20F54(v34);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v47 + 8);
  v37(v34, v10);
  sub_255A20F54(v36);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v10);
}

uint64_t sub_255A30E7C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21900);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255C80038();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21908);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21910);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *MEMORY[0x263F19860];
  uint64_t v21 = sub_255C7E988();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v12, v20, v21);
  sub_255A395C4((uint64_t)v12, (uint64_t)v9);
  *(_WORD *)&v9[*(int *)(v7 + 44)] = 256;
  sub_255A09540((uint64_t)v9, (uint64_t)v15, &qword_269F21900);
  sub_255A095A4((uint64_t)v9, &qword_269F21900);
  sub_255A38C38((uint64_t)v12);
  sub_255A09540((uint64_t)v15, (uint64_t)v19, &qword_269F21908);
  CGFloat v22 = (double *)&v19[*(int *)(v17 + 44)];
  *CGFloat v22 = a2;
  v22[1] = a3;
  sub_255A095A4((uint64_t)v15, &qword_269F21908);
  sub_255C801F8();
  sub_255C7DFE8();
  sub_255A09540((uint64_t)v19, a1, &qword_269F21910);
  CGFloat v23 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F21918) + 36));
  long long v24 = v26[1];
  *CGFloat v23 = v26[0];
  v23[1] = v24;
  v23[2] = v26[2];
  return sub_255A095A4((uint64_t)v19, &qword_269F21910);
}

uint64_t sub_255A31130@<X0>(uint64_t a1@<X8>)
{
  return sub_255A30E7C(a1, *v1, v1[1]);
}

__n128 sub_255A31144@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v17 = sub_255C7E928();
  sub_255A31254((uint64_t)&v18);
  unint64_t v2 = v18;
  unsigned __int8 v3 = v19;
  unint64_t v4 = v20;
  __n128 v16 = v21;
  unint64_t v5 = v22;
  unint64_t v6 = v23;
  unint64_t v7 = v24;
  unsigned __int8 v8 = v25;
  unint64_t v9 = v26;
  unsigned __int8 v10 = v27;
  unint64_t v11 = v28;
  unint64_t v15 = v29;
  LOBYTE(v18) = 1;
  unsigned __int8 v32 = v19;
  unsigned __int8 v31 = v25;
  unsigned __int8 v30 = v27;
  uint64_t v12 = sub_255C7E468();
  unsigned __int8 v13 = sub_255C7F198();
  a1->n128_u64[0] = v17;
  a1->n128_u64[1] = 0;
  a1[1].n128_u8[0] = 1;
  a1[1].n128_u64[1] = v2;
  a1[2].n128_u8[0] = v3;
  a1[2].n128_u64[1] = v4;
  __n128 result = v16;
  a1[3] = v16;
  a1[4].n128_u64[0] = v5;
  a1[4].n128_u64[1] = v6;
  a1[5].n128_u64[0] = v7;
  a1[5].n128_u8[8] = v8;
  a1[6].n128_u64[0] = v9;
  a1[6].n128_u8[8] = v10;
  a1[7].n128_u64[0] = v11;
  a1[7].n128_u64[1] = v15;
  a1[8].n128_u64[0] = v12;
  a1[8].n128_u8[8] = v13;
  return result;
}

double sub_255A31254@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21690);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_255C84C00;
  sub_255C7FC68();
  sub_255C7FCA8();
  swift_release();
  *(void *)(v2 + 32) = sub_255C80148();
  *(void *)(v2 + 40) = v3;
  sub_255C7FC68();
  *(void *)(v2 + 48) = sub_255C80148();
  *(void *)(v2 + 56) = v4;
  sub_255C7FC68();
  *(void *)(v2 + 64) = sub_255C80148();
  *(void *)(v2 + 72) = v5;
  MEMORY[0x25A2959D0](v2);
  sub_255C80388();
  sub_255C80398();
  sub_255C7E2A8();
  sub_255C801F8();
  sub_255C7DFE8();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 24) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a1 + 88) = v15;
  return result;
}

double sub_255A313CC@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_255A31144(a1).n128_u64[0];
  return result;
}

double sub_255A313DC()
{
  return 4.0;
}

double sub_255A313E4(uint64_t a1)
{
  uint64_t v2 = sub_255C7ED28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE58);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE50);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v15 = (char *)&v21 - v14;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))((char *)&v21 - v14, *MEMORY[0x263F19F08], v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_255A09540(a1, (uint64_t)v9, &qword_26B29EE50);
  sub_255A09540((uint64_t)v15, v16, &qword_26B29EE50);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v17((uint64_t)v9, 1, v2) == 1)
  {
    sub_255A095A4((uint64_t)v15, &qword_26B29EE50);
    if (v17(v16, 1, v2) == 1)
    {
      sub_255A095A4((uint64_t)v9, &qword_26B29EE50);
      return 20.0;
    }
  }
  else
  {
    sub_255A09540((uint64_t)v9, (uint64_t)v13, &qword_26B29EE50);
    if (v17(v16, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
      sub_255A38C94((unint64_t *)&unk_26B29EE40, MEMORY[0x263F19F18]);
      char v19 = sub_255C80578();
      unint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v20(v5, v2);
      sub_255A095A4((uint64_t)v15, &qword_26B29EE50);
      v20(v13, v2);
      sub_255A095A4((uint64_t)v9, &qword_26B29EE50);
      double result = 20.0;
      if (v19) {
        return result;
      }
      return 0.0;
    }
    sub_255A095A4((uint64_t)v15, &qword_26B29EE50);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  sub_255A095A4((uint64_t)v9, &qword_26B29EE58);
  return 0.0;
}

uint64_t sub_255A31770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255A09998(&qword_269F217C8, &qword_269F217D0);

  return MEMORY[0x270EFF8A8](a1, a2, v4);
}

void *sub_255A317E8(void *result, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v2 = result;
  uint64_t v3 = *result;
  if (!*result)
  {
    double result = a2(&v4);
    uint64_t v3 = v4;
  }
  *uint64_t v2 = v3;
  return result;
}

BOOL sub_255A31838(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void sub_255A31864(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
}

uint64_t sub_255A31874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A31B30();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255A318D8()
{
  sub_255A351F0();
  sub_255C7E8C8();
  return v1;
}

uint64_t MCUINamespace<A>.scopePickerHorizontalMargins(_:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  swift_getKeyPath();
  if (a2) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a1;
  }
  v12[1] = v10;
  _OWORD v12[2] = v10;
  char v13 = a2 & 1;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double sub_255A31A54@<D0>(uint64_t a1@<X8>)
{
  sub_255A351F0();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_255A31AAC()
{
  return sub_255C7E8D8();
}

uint64_t type metadata accessor for ScopePicker.ScopeButtonsWithHighlight()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ScopePicker.FadingView()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255A31B30()
{
  unint64_t result = qword_269F21458;
  if (!qword_269F21458)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21450);
    sub_255A31BA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21458);
  }
  return result;
}

unint64_t sub_255A31BA4()
{
  unint64_t result = qword_269F21460;
  if (!qword_269F21460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21460);
  }
  return result;
}

uint64_t sub_255A31BF8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScopePicker() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_release();
  swift_release();
  uint64_t v4 = sub_255C80028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v4 + 32), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v2[14];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21478);
  swift_release();
  sub_255A31D88(*(void *)(v3 + v2[15]), *(void *)(v3 + v2[15] + 8), *(unsigned __int8 *)(v3 + v2[15] + 16), *(unsigned char *)(v3 + v2[15] + 17));

  return swift_deallocObject();
}

uint64_t sub_255A31D88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_255A31D94(uint64_t a1)
{
  return sub_255A388C0(a1, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ScopePicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255A29E84);
}

uint64_t sub_255A31DC0()
{
  return sub_255A31DF0(&qword_269F21490, &qword_269F21498, (void (*)(void))sub_255A31E6C);
}

uint64_t sub_255A31DF0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255A31E6C()
{
  unint64_t result = qword_269F214A0;
  if (!qword_269F214A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F214A0);
  }
  return result;
}

uint64_t sub_255A31EC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ScopePickerItem.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_255A31F18()
{
  sub_255C80028();
  if (v0 <= 0x3F)
  {
    sub_255A3665C(319, &qword_269F21530, (uint64_t (*)(uint64_t))type metadata accessor for MinimumLayoutMargins, MEMORY[0x263F1BA20]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_255A32038(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v41 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v41 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 16) & ~(unint64_t)v6) + *(void *)(v5 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = (v10 & 0xF8) + 15;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  int v14 = (v10 | v6) & 0x100000;
  if ((v11 | v6) != 7
    || v14 != 0
    || (v13 & 0xFFFFFFFFFFFFFFF8)
     + ((v12 + ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
     + 26 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v36 = (uint64_t *)(v17 + (((v11 | v6) + 16) & ~(v11 | v6)));
    swift_retain();
  }
  else
  {
    uint64_t v38 = ~v11;
    uint64_t v39 = v8;
    unint64_t v40 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    *a1 = *a2;
    unint64_t v18 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v19 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v18 = *v19;
    unint64_t v20 = ((unint64_t)v18 + v6 + 8) & ~(unint64_t)v6;
    unint64_t v21 = ((unint64_t)v19 + v6 + 8) & ~(unint64_t)v6;
    uint64_t v42 = a1;
    unint64_t v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v22(v20, v21, v41);
    unint64_t v23 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v24 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v23 = *v24;
    unsigned __int8 v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned __int8 v25 = *v26;
    unsigned __int8 v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned __int8 v27 = *v28;
    unint64_t v29 = ((unint64_t)v27 + v12) & v38;
    unint64_t v30 = ((unint64_t)v28 + v12) & v38;
    unsigned __int8 v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v29, v30, v39);
    *(void *)((v13 + v29) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + v30) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v32 = v29 + v40;
    uint64_t v33 = *(void *)(v30 + v40);
    uint64_t v34 = *(void *)(v30 + v40 + 8);
    LOBYTE(v29) = *(unsigned char *)(v30 + v40 + 17);
    uint64_t v35 = *(unsigned __int8 *)(v30 + v40 + 16);
    swift_retain();
    sub_255A322FC(v33, v34, v35, v29);
    *(void *)unint64_t v32 = v33;
    *(void *)(v32 + 8) = v34;
    uint64_t v36 = v42;
    *(unsigned char *)(v32 + 16) = v35;
    *(unsigned char *)(v32 + 17) = v29;
  }
  return v36;
}

uint64_t sub_255A322FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_255A32308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = v5 + 8;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
  unint64_t v8 = ((a1 + *(void *)(v6 + 56) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 8;
  uint64_t v12 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  unint64_t v13 = ((((v8 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v14 = *(void *)(v11 + 56) + 7;
  swift_release();
  unint64_t v15 = v13 + (v14 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t v17 = *(void *)(v15 + 16);
  char v18 = *(unsigned char *)(v15 + 25);
  uint64_t v19 = *(unsigned __int8 *)(v15 + 24);

  return sub_255A31D88(v16, v17, v19, v18);
}

void *sub_255A3244C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  swift_retain();
  swift_retain();
  v8(v11, v12, v7);
  uint64_t v13 = ((v10 + 16) & ~v10) + *(void *)(v9 + 48) + 7;
  uint64_t v14 = (void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  char v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v18 = *v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v24 = v23 + 15;
  unint64_t v25 = (unint64_t)v18 + v23 + 15;
  unint64_t v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & v26;
  unint64_t v28 = ((unint64_t)v19 + v24) & v26;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 16))(v25 & v26, v28, v20);
  uint64_t v29 = *(void *)(v22 + 48) + 7;
  *(void *)((v29 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v29 + v28) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v31 = v30 + v27;
  unint64_t v32 = v30 + v28;
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = *(void *)(v32 + 8);
  LOBYTE(v19) = *(unsigned char *)(v32 + 17);
  uint64_t v35 = *(unsigned __int8 *)(v32 + 16);
  swift_retain();
  sub_255A322FC(v33, v34, v35, (char)v19);
  *(void *)unint64_t v31 = v33;
  *(void *)(v31 + 8) = v34;
  *(unsigned char *)(v31 + 16) = v35;
  *(unsigned char *)(v31 + 17) = (_BYTE)v19;
  return a1;
}

void *sub_255A3262C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 40) + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (unint64_t)a2 + v11;
  unint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v12 = *(void *)(v13 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v15 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 &= 0xFFFFFFFFFFFFFFF8;
  *unint64_t v15 = *(void *)v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19 + 24;
  uint64_t v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = v21 + 15;
  unint64_t v23 = (unint64_t)v16 + v21 + 15;
  unint64_t v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v23 & v24;
  unint64_t v26 = ((unint64_t)v17 + v22) & v24;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 24))(v23 & v24, v26, v18);
  uint64_t v27 = *(void *)(v20 + 40) + 7;
  *(void *)((v27 + v25) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v27 + v26) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v29 = v28 + v25;
  unint64_t v30 = v28 + v26;
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *(void *)(v30 + 8);
  LOBYTE(v20) = *(unsigned char *)(v30 + 17);
  LOBYTE(v27) = *(unsigned char *)(v30 + 16);
  sub_255A322FC(*(void *)v30, v32, v27, v20);
  uint64_t v33 = *(void *)v29;
  uint64_t v34 = *(void *)(v29 + 8);
  char v35 = *(unsigned char *)(v29 + 17);
  *(void *)unint64_t v29 = v31;
  *(void *)(v29 + 8) = v32;
  uint64_t v36 = *(unsigned __int8 *)(v29 + 16);
  *(unsigned char *)(v29 + 16) = v27;
  *(unsigned char *)(v29 + 17) = v20;
  sub_255A31D88(v33, v34, v36, v35);
  return a1;
}

void *sub_255A32838(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9);
  uint64_t v10 = ((v9 + 16) & ~v9) + *(void *)(v8 + 32) + 7;
  uint64_t v11 = (void *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  unint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v13 = *v14;
  unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v15 = *v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18 + 32;
  uint64_t v20 = *(_DWORD *)(v18 + 80) & 0xF8;
  uint64_t v21 = v20 + 15;
  unint64_t v22 = (unint64_t)v15 + v20 + 15;
  unint64_t v23 = ~v20 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v22 & v23;
  unint64_t v25 = ((unint64_t)v16 + v21) & v23;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 32))(v22 & v23, v25, v17);
  uint64_t v26 = *(void *)(v19 + 32) + 7;
  *(void *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v26 + v25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v28 = v27 + v24;
  unint64_t v29 = v27 + v25;
  __int16 v30 = *(_WORD *)(v29 + 16);
  *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
  *(_WORD *)(v28 + 16) = v30;
  return a1;
}

void *sub_255A329BC(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 24) + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_bridgeObjectRelease();
  unint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = v21 + 15;
  unint64_t v23 = (unint64_t)v16 + v21 + 15;
  unint64_t v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v23 & v24;
  unint64_t v26 = ((unint64_t)v17 + v22) & v24;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 40))(v23 & v24, v26, v18);
  uint64_t v27 = *(void *)(v20 + 24) + 7;
  *(void *)((v27 + v25) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v27 + v26) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v29 = v28 + v25;
  unint64_t v30 = v28 + v26;
  char v31 = *(unsigned char *)(v30 + 16);
  char v32 = *(unsigned char *)(v30 + 17);
  uint64_t v33 = *(void *)v29;
  uint64_t v34 = *(void *)(v29 + 8);
  char v35 = *(unsigned char *)(v29 + 17);
  *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
  uint64_t v36 = *(unsigned __int8 *)(v29 + 16);
  *(unsigned char *)(v29 + 16) = v31;
  *(unsigned char *)(v29 + 17) = v32;
  sub_255A31D88(v33, v34, v36, v35);
  return a1;
}

uint64_t sub_255A32B8C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v13;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = ((v12 + 16) & ~v12) + *(void *)(v6 + 64);
  uint64_t v16 = *(_DWORD *)(v10 + 80) & 0xF8;
  unint64_t v17 = ~v16 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = v16 + 15;
  uint64_t v19 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  if (a2 > v14)
  {
    unint64_t v20 = (v19 & 0xFFFFFFFFFFFFFFF8)
        + ((v18 + ((((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v17)
        + 26;
    char v21 = 8 * v20;
    if (v20 > 3) {
      goto LABEL_13;
    }
    unsigned int v24 = ((a2 - v14 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v24))
    {
      int v22 = *(_DWORD *)((char *)a1 + v20);
      if (!v22) {
        goto LABEL_26;
      }
      goto LABEL_21;
    }
    if (v24 > 0xFF)
    {
      int v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!*(unsigned __int16 *)((char *)a1 + v20)) {
        goto LABEL_26;
      }
      goto LABEL_21;
    }
    if (v24 >= 2)
    {
LABEL_13:
      int v22 = *((unsigned __int8 *)a1 + v20);
      if (!*((unsigned char *)a1 + v20)) {
        goto LABEL_26;
      }
LABEL_21:
      int v25 = (v22 - 1) << v21;
      if (v20 <= 3)
      {
        int v26 = *a1;
      }
      else
      {
        int v25 = 0;
        int v26 = *(_DWORD *)a1;
      }
      return v14 + (v26 | v25) + 1;
    }
  }
LABEL_26:
  if (v8 >= v13)
  {
    unint64_t v29 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v7 & 0x80000000) == 0)
    {
      unint64_t v28 = *v29;
      goto LABEL_31;
    }
    char v32 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    return v32(((unint64_t)v29 + v12 + 8) & ~v12, v7, v5);
  }
  else
  {
    uint64_t v27 = (unint64_t *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v14 == 0x7FFFFFFF)
    {
      unint64_t v28 = *v27;
LABEL_31:
      if (v28 >= 0xFFFFFFFF) {
        LODWORD(v28) = -1;
      }
      return (v28 + 1);
    }
    unint64_t v30 = (v18 + (((((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v17;
    if (v11 < 0x7FFFFFFE)
    {
      unint64_t v33 = *(void *)((v19 + v30) & 0xFFFFFFFFFFFFFFF8);
      if (v33 >= 0xFFFFFFFF) {
        LODWORD(v33) = -1;
      }
      if ((v33 + 1) >= 2) {
        return v33;
      }
      else {
        return 0;
      }
    }
    else
    {
      char v31 = *(uint64_t (**)(unint64_t))(v10 + 48);
      return v31(v30);
    }
  }
}

void sub_255A32EA8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v39 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  uint64_t v12 = *(void *)(v11 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  if (v15 <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v15;
  }
  size_t v17 = ((v14 + 16) & ~v14) + *(void *)(v8 + 64);
  uint64_t v18 = *(_DWORD *)(v12 + 80) & 0xF8;
  unint64_t v19 = ~v18 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = v18 + 15;
  uint64_t v21 = *(void *)(*(void *)(v11 - 8) + 64) + 7;
  int v22 = v21 & 0xFFFFFFF8;
  unint64_t v23 = (v21 & 0xFFFFFFFFFFFFFFF8)
      + ((v20 + ((((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v19)
      + 26;
  if (a3 <= v16)
  {
    int v24 = 0;
  }
  else if (v23 <= 3)
  {
    unsigned int v27 = ((a3 - v16 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v27))
    {
      int v24 = 4;
    }
    else if (v27 >= 0x100)
    {
      int v24 = 2;
    }
    else
    {
      int v24 = v27 > 1;
    }
  }
  else
  {
    int v24 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v25 = ~v16 + a2;
    if (v23 < 4)
    {
      int v26 = (v25 >> (8 * v23)) + 1;
      bzero(a1, (v21 & 0xFFFFFFFFFFFFFFF8)+ ((v20 + ((((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v19)+ 26);
      *(_WORD *)a1 = v25 & ~(-1 << (8 * v23));
    }
    else
    {
      bzero(a1, (v21 & 0xFFFFFFFFFFFFFFF8)+ ((v20 + ((((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v19)+ 26);
      *(_DWORD *)a1 = v25;
      int v26 = 1;
    }
    switch(v24)
    {
      case 1:
        a1[v23] = v26;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v26;
        return;
      case 3:
        goto LABEL_72;
      case 4:
        *(_DWORD *)&a1[v23] = v26;
        return;
      default:
        return;
    }
  }
  switch(v24)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_72:
      __break(1u);
      JUMPOUT(0x255A3333CLL);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v10 < v15)
      {
        unint64_t v28 = (void *)((unint64_t)&a1[v17 + 7] & 0xFFFFFFFFFFFFFFF8);
        if (v16 == 0x7FFFFFFF)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v29 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v29 = (a2 - 1);
          }
          *unint64_t v28 = v29;
          return;
        }
        unint64_t v33 = (_DWORD *)((v20 + (((((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v19);
        if (v15 < a2)
        {
          if (v22 != -8)
          {
            int v34 = ~v15 + a2;
            bzero((void *)((v20 + (((((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v19), (v22 + 8));
            *unint64_t v33 = v34;
          }
          return;
        }
        if (v13 >= 0x7FFFFFFE)
        {
          uint64_t v37 = *(void (**)(_DWORD *, uint64_t))(v12 + 56);
          v37(v33, a2);
          return;
        }
        char v35 = (void *)(((unint64_t)v33 + v21) & 0xFFFFFFFFFFFFFFF8);
        if (a2 > 0x7FFFFFFE)
        {
          *char v35 = 0;
          *(_DWORD *)char v35 = a2 - 0x7FFFFFFF;
          return;
        }
        uint64_t v36 = a2;
LABEL_66:
        *char v35 = v36;
        return;
      }
      if (v10 >= a2)
      {
        char v35 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v9 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v36 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v36 = (a2 - 1);
          }
          goto LABEL_66;
        }
        uint64_t v38 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
        v38(((unint64_t)v35 + v14 + 8) & ~v14, a2, v9, v7);
      }
      else
      {
        if (v17 <= 3) {
          int v30 = ~(-1 << (8 * v17));
        }
        else {
          int v30 = -1;
        }
        if (v17)
        {
          int v31 = v30 & (~v10 + a2);
          if (v17 <= 3) {
            int v32 = v17;
          }
          else {
            int v32 = 4;
          }
          bzero(a1, v17);
          switch(v32)
          {
            case 2:
              *(_WORD *)a1 = v31;
              break;
            case 3:
              *(_WORD *)a1 = v31;
              a1[2] = BYTE2(v31);
              break;
            case 4:
              *(_DWORD *)a1 = v31;
              break;
            default:
              *a1 = v31;
              break;
          }
        }
      }
      return;
  }
}

uint64_t sub_255A33374()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A338D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A33974()
{
  uint64_t result = sub_255C80028();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255A33A14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  unint64_t v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v6 + 8;
  uint64_t v10 = ((v7 + 16) & ~v7) + *(void *)(v5 + 64) + 7;
  int v11 = v6 & 0x100000;
  uint64_t v12 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v11 != 0 || ((v10 + (v8 & (v7 + 8))) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    a1 = (uint64_t *)(v12 + (v8 & (v7 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = ~v7;
    unsigned int v16 = (void *)(v8 & ((unint64_t)a1 + 15));
    size_t v17 = (void *)(v8 & ((unint64_t)a2 + 15));
    *unsigned int v16 = *v17;
    uint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = *v19;
    unint64_t v23 = ((unint64_t)v18 + v9) & v15;
    unint64_t v20 = ((unint64_t)v19 + v9) & v15;
    uint64_t v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v21(v23, v20, v4);
    *(void *)(((unint64_t)v16 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_255A33B9C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))((v6 + ((((a1 + (v6 | 7) + 8) & ~(v6 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v4);

  return swift_bridgeObjectRelease();
}

void *sub_255A33C84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  unsigned int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v5 = *(void *)(v4 - 8) + 16;
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = (v6 | 7) + 8;
  uint64_t v9 = (void *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  unint64_t v8 = (void *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  *unint64_t v8 = *v9;
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  uint64_t v12 = ((unint64_t)v10 + v6 + 8) & ~v6;
  uint64_t v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v16(v12, v13, v4);
  uint64_t v14 = *(void *)(v5 + 48) + ((v6 + 16) & ~v6) + 7;
  *(void *)(((unint64_t)v8 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v9 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255A33DAC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  int v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_retain();
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  uint64_t v14 = *(void *)(v7 + 64) + ((v8 + 16) & ~v8) + 7;
  *(void *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_255A33F00(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t))(v4 + 32);
  uint64_t v6 = v4 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = (v7 | 7) + 8;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  *uint64_t v9 = *v10;
  int v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v11 = *v12;
  v5(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7);
  uint64_t v13 = *(void *)(v6 + 32) + ((v7 + 16) & ~v7) + 7;
  *(void *)(((unint64_t)v9 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_255A33FE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  int v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 40))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  uint64_t v14 = *(void *)(v7 + 64) + ((v8 + 16) & ~v8) + 7;
  *(void *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255A34110(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= 0) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v10 = v8 | 7;
  uint64_t v11 = v8 + 8;
  if (v9 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v8 + 16) & ~v8) + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v13 = a2 - v9;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v12);
        if (!v18) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v18) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255A3429CLL);
      case 4:
        int v18 = *(_DWORD *)((char *)a1 + v12);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if (v14)
        {
          int v20 = 0;
          LODWORD(v14) = *a1;
        }
        return v9 + (v14 | v20) + 1;
      default:
        break;
    }
  }
  if (v9 != 0x7FFFFFFF) {
    return (*(uint64_t (**)(unint64_t))(v5 + 48))((v11
  }
                                                                  + (((((unint64_t)a1 + v10 + 8) & ~v10) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8);
  uint64_t v21 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v21) = -1;
  }
  return (v21 + 1);
}

void sub_255A342B0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    int v8 = 0x7FFFFFFF;
  }
  else {
    int v8 = *(_DWORD *)(v6 + 84);
  }
  if (v7 >= 0) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  size_t v11 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
        + ((v10 + 8) & ~(v10 | 7))
        + ((v10 + 16) & ~v10)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v9 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_20:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v9 == 0x7FFFFFFF)
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
            else
            {
              unint64_t v20 = (v10 + 8 + ((((unint64_t)&a1[(v10 | 7) + 8] & ~(v10 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
              uint64_t v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
         + ((v10 + 8) & ~(v10 | 7))
         + ((v10 + 16) & ~v10)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v13 = v12 + 1;
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v10 + 8) & ~(v10 | 7))
       + ((v10 + 16) & ~v10)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v17 = v16;
  else {
    int v17 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((v10 + 8) & ~(v10 | 7))
       + ((v10 + 16) & ~v10)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v18 = ~v9 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x255A344D4);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for HorizontalMargins()
{
  return &type metadata for HorizontalMargins;
}

uint64_t sub_255A3450C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A34550()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ScopePicker.ScopeButtons()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ScopePicker.ScopeButtonHighlight()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255A345C4()
{
  unint64_t result = qword_269F21658;
  if (!qword_269F21658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21658);
  }
  return result;
}

uint64_t sub_255A34618(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v2);
  sub_255C80028();
  return sub_255C7FFE8();
}

uint64_t sub_255A346E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7E2F8();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7F328();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unsigned int v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_currentDevice);
  id v11 = objc_msgSend(v10, sel_userInterfaceIdiom);

  if (v11 == (id)6)
  {
    uint64_t v12 = sub_255C7F228();
    uint64_t v21 = sub_255C7FC88();
    uint64_t v13 = sub_255C7DFF8();
    uint64_t v21 = sub_255C7FC68();
    uint64_t v14 = sub_255C7DFF8();
    LODWORD(v21) = sub_255C7ECD8();
    uint64_t result = sub_255C7DFF8();
    long long v16 = xmmword_255C861B0;
    long long v17 = xmmword_255C861C0;
    int v18 = sub_255A313DC;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1A728], v6);
    uint64_t v19 = sub_255C7F258();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
    sub_255C7F298();
    uint64_t v12 = sub_255C7F2B8();
    sub_255A095A4((uint64_t)v5, &qword_26B29BD88);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_255C7E2E8();
    uint64_t v13 = sub_255C7DFF8();
    uint64_t v21 = sub_255C7FC88();
    uint64_t v14 = sub_255C7DFF8();
    LODWORD(v21) = sub_255C7ECD8();
    uint64_t result = sub_255C7DFF8();
    long long v16 = xmmword_255C86190;
    long long v17 = xmmword_255C861A0;
    int v18 = sub_255A313E4;
  }
  *(void *)a1 = v12;
  *(_OWORD *)(a1 + 8) = v17;
  *(_OWORD *)(a1 + 24) = v16;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_255A34A58(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A34AC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A34AF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ScopePicker.ScopeButtonsWithHighlight() - 8);
  uint64_t v8 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));

  return sub_255A2CE18(a1, v8, v5, v6, a2);
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScopePicker.ScopeButtonsWithHighlight() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v2[11];
  swift_release();
  swift_release();
  uint64_t v5 = sub_255C80028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v5 + 32), v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255A34CB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(type metadata accessor for ScopePicker.ScopeButtonsWithHighlight() - 8);
  uint64_t v5 = (void *)(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));

  return sub_255A2DF00(a1, v5, v3);
}

unint64_t sub_255A34D44()
{
  unint64_t result = qword_269F21678;
  if (!qword_269F21678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21670);
    sub_255A31DF0(&qword_269F21680, &qword_269F21688, (void (*)(void))sub_255A34E10);
    sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21678);
  }
  return result;
}

unint64_t sub_255A34E10()
{
  unint64_t result = qword_26B298660;
  if (!qword_26B298660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298660);
  }
  return result;
}

uint64_t sub_255A34E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_255A2B514(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255A34E88@<X0>(uint64_t a1@<X8>)
{
  return sub_255A2B8D8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1, *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_255A34E98()
{
  return sub_255A350D0(1);
}

uint64_t sub_255A34EA8()
{
  return sub_255A350D0(0);
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScopePicker() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  uint64_t v5 = sub_255C7E498();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v3;
  swift_release();
  swift_release();
  uint64_t v9 = sub_255C80028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v8 + *(int *)(v9 + 32), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v8 + v2[14];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21478);
  swift_release();
  sub_255A31D88(*(void *)(v8 + v2[15]), *(void *)(v8 + v2[15] + 8), *(unsigned __int8 *)(v8 + v2[15] + 16), *(unsigned char *)(v8 + v2[15] + 17));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_255A350D0(char a1)
{
  uint64_t v3 = type metadata accessor for ScopePicker();
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(sub_255C7E498() - 8);
  return sub_255A29100(v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, v3);
}

uint64_t sub_255A351B4()
{
  return sub_255A29404(v0[4], v0[5], v0[2]);
}

uint64_t sub_255A351D4()
{
  return swift_deallocObject();
}

uint64_t sub_255A351E4()
{
  return sub_255A2BC60(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

unint64_t sub_255A351F0()
{
  unint64_t result = qword_269F216A0[0];
  if (!qword_269F216A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F216A0);
  }
  return result;
}

uint64_t sub_255A35244()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A3527C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ScopePickerCustomMarginsKey()
{
  return &type metadata for ScopePickerCustomMarginsKey;
}

void sub_255A352BC()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_255A3665C(319, (unint64_t *)&qword_26B29B5B0, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_255A353C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_255C7E398() - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = v8 + v11;
  unint64_t v13 = (v8 + v11 + ((v7 + 8) & ~(unint64_t)v7)) & ~v11;
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v9 + 64);
  }
  unint64_t v15 = v14 + v13 + 1;
  int v16 = (v10 | v7) & 0x100000;
  uint64_t v17 = *a2;
  *a1 = *a2;
  if ((v11 | v7) != 7 || v16 != 0 || v15 > 0x18)
  {
    a1 = (uint64_t *)(v17 + (((v11 | v7) + 16) & ~(v11 | v7)));
LABEL_27:
    swift_retain();
    return a1;
  }
  uint64_t v20 = ~v11;
  uint64_t v21 = (char *)a2 + v7;
  unint64_t v22 = ((unint64_t)a1 + v7 + 8) & ~(unint64_t)v7;
  unint64_t v23 = (unint64_t)(v21 + 8) & ~(unint64_t)v7;
  int v24 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v24(v22, v23, v5);
  unsigned int v25 = (void *)((v22 + v12) & v20);
  int v26 = (unsigned __int8 *)((v23 + v12) & v20);
  unsigned int v27 = v26[v14];
  unsigned int v28 = v27 - 2;
  if (v27 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v29 = v14;
    }
    else {
      uint64_t v29 = 4;
    }
    switch(v29)
    {
      case 1:
        int v30 = *v26;
        goto LABEL_22;
      case 2:
        int v30 = *(unsigned __int16 *)v26;
        goto LABEL_22;
      case 3:
        int v30 = *(unsigned __int16 *)v26 | (*(unsigned __int8 *)(((v23 + v12) & v20) + 2) << 16);
        goto LABEL_22;
      case 4:
        int v30 = *(_DWORD *)v26;
LABEL_22:
        int v31 = (v30 | (v28 << (8 * v14))) + 2;
        unsigned int v27 = v30 + 2;
        if (v14 < 4) {
          unsigned int v27 = v31;
        }
        break;
      default:
        break;
    }
  }
  if (v27 != 1)
  {
    *unsigned int v25 = *(void *)v26;
    *((unsigned char *)v25 + v14) = 0;
    goto LABEL_27;
  }
  (*(void (**)(unint64_t))(v9 + 16))((v22 + v12) & v20);
  *((unsigned char *)v25 + v14) = 1;
  return a1;
}

uint64_t sub_255A3563C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(sub_255C7E398() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  int v10 = (unsigned __int8 *)((v6 + v7 + v9) & ~v9);
  unint64_t v11 = *(void *)(v8 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unsigned int v12 = v10[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *v10;
        goto LABEL_12;
      case 2:
        int v15 = *(unsigned __int16 *)v10;
        goto LABEL_12;
      case 3:
        int v15 = *(unsigned __int16 *)v10 | (v10[2] << 16);
        goto LABEL_12;
      case 4:
        int v15 = *(_DWORD *)v10;
LABEL_12:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    uint64_t v17 = *(uint64_t (**)(void))(v8 + 8);
    return v17();
  }
  else
  {
    return swift_release();
  }
}

void *sub_255A357FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(void *)(v4 - 8) + 16;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  swift_retain();
  v5(v8, v9, v4);
  uint64_t v10 = *(void *)(v6 + 48);
  uint64_t v11 = *(void *)(sub_255C7E398() - 8);
  uint64_t v12 = v11;
  uint64_t v13 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  uint64_t v14 = v10 + v13;
  int v15 = (void *)((v10 + v13 + v8) & ~v13);
  int v16 = (unsigned __int8 *)((v14 + v9) & ~v13);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = *(void *)(v11 + 64);
  }
  unsigned int v18 = v16[v17];
  unsigned int v19 = v18 - 2;
  if (v18 >= 2)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *v16;
        goto LABEL_13;
      case 2:
        int v21 = *(unsigned __int16 *)v16;
        goto LABEL_13;
      case 3:
        int v21 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_13;
      case 4:
        int v21 = *(_DWORD *)v16;
LABEL_13:
        int v22 = (v21 | (v19 << (8 * v17))) + 2;
        unsigned int v18 = v21 + 2;
        if (v17 < 4) {
          unsigned int v18 = v22;
        }
        break;
      default:
        break;
    }
  }
  if (v18 == 1)
  {
    (*(void (**)(void *))(v12 + 16))(v15);
    char v23 = 1;
  }
  else
  {
    *int v15 = *(void *)v16;
    swift_retain();
    char v23 = 0;
  }
  *((unsigned char *)v15 + v17) = v23;
  return a1;
}

void *sub_255A359D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = sub_255C7E398();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v15 = v11 + v14;
  int v16 = (unsigned __int8 *)((v11 + v14 + v9) & ~v14);
  uint64_t v17 = (unsigned __int8 *)((v15 + v10) & ~v14);
  if (v16 != v17)
  {
    uint64_t v18 = v12;
    uint64_t v19 = *(void *)(v12 - 8);
    if (*(void *)(v13 + 64) <= 8uLL) {
      uint64_t v20 = 8;
    }
    else {
      uint64_t v20 = *(void *)(v13 + 64);
    }
    unsigned int v21 = v16[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v16;
          goto LABEL_14;
        case 2:
          int v24 = *(unsigned __int16 *)v16;
          goto LABEL_14;
        case 3:
          int v24 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_14;
        case 4:
          int v24 = *(_DWORD *)v16;
LABEL_14:
          int v25 = (v24 | (v22 << (8 * v20))) + 2;
          unsigned int v21 = v24 + 2;
          if (v20 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v16, v12);
    }
    else {
      swift_release();
    }
    unsigned int v26 = v17[v20];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v17;
          goto LABEL_28;
        case 2:
          int v29 = *(unsigned __int16 *)v17;
          goto LABEL_28;
        case 3:
          int v29 = *(unsigned __int16 *)v17 | (v17[2] << 16);
          goto LABEL_28;
        case 4:
          int v29 = *(_DWORD *)v17;
LABEL_28:
          int v30 = (v29 | (v27 << (8 * v20))) + 2;
          unsigned int v26 = v29 + 2;
          if (v20 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 16))(v16, v17, v18);
      v16[v20] = 1;
    }
    else
    {
      *(void *)int v16 = *(void *)v17;
      v16[v20] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_255A35C6C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = *(void *)(sub_255C7E398() - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v13 = (void *)((v9 + v12 + v7) & ~v12);
  uint64_t v14 = (unsigned __int8 *)((v9 + v12 + v8) & ~v12);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(v10 + 64);
  }
  unsigned int v16 = v14[v15];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *v14;
        goto LABEL_13;
      case 2:
        int v19 = *(unsigned __int16 *)v14;
        goto LABEL_13;
      case 3:
        int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
        goto LABEL_13;
      case 4:
        int v19 = *(_DWORD *)v14;
LABEL_13:
        int v20 = (v19 | (v17 << (8 * v15))) + 2;
        unsigned int v16 = v19 + 2;
        if (v15 < 4) {
          unsigned int v16 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v16 == 1)
  {
    (*(void (**)(void *))(v11 + 32))(v13);
    char v21 = 1;
  }
  else
  {
    char v21 = 0;
    *uint64_t v13 = *(void *)v14;
  }
  *((unsigned char *)v13 + v15) = v21;
  return a1;
}

void *sub_255A35E2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = sub_255C7E398();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v15 = (unsigned __int8 *)((v11 + v14 + v9) & ~v14);
  unsigned int v16 = (unsigned __int8 *)((v11 + v14 + v10) & ~v14);
  if (v15 != v16)
  {
    uint64_t v17 = v12;
    uint64_t v18 = *(void *)(v12 - 8);
    if (*(void *)(v13 + 64) <= 8uLL) {
      uint64_t v19 = 8;
    }
    else {
      uint64_t v19 = *(void *)(v13 + 64);
    }
    unsigned int v20 = v15[v19];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *v15;
          goto LABEL_14;
        case 2:
          int v23 = *(unsigned __int16 *)v15;
          goto LABEL_14;
        case 3:
          int v23 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_14;
        case 4:
          int v23 = *(_DWORD *)v15;
LABEL_14:
          int v24 = (v23 | (v21 << (8 * v19))) + 2;
          unsigned int v20 = v23 + 2;
          if (v19 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v20 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v18 + 8))(v15, v12);
    }
    else {
      swift_release();
    }
    unsigned int v25 = v16[v19];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v27 = v19;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *v16;
          goto LABEL_28;
        case 2:
          int v28 = *(unsigned __int16 *)v16;
          goto LABEL_28;
        case 3:
          int v28 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_28;
        case 4:
          int v28 = *(_DWORD *)v16;
LABEL_28:
          int v29 = (v28 | (v26 << (8 * v19))) + 2;
          unsigned int v25 = v28 + 2;
          if (v19 < 4) {
            unsigned int v25 = v29;
          }
          break;
        default:
          break;
      }
    }
    if (v25 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v18 + 32))(v15, v16, v17);
      char v30 = 1;
    }
    else
    {
      char v30 = 0;
      *(void *)uint64_t v15 = *(void *)v16;
    }
    v15[v19] = v30;
  }
  return a1;
}

uint64_t sub_255A360BC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(sub_255C7E398() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_25;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v13 = v10 + ((((v11 + 8) & ~v11) + *(void *)(v6 + 64) + v12) & ~v12) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_25:
      if ((v7 & 0x80000000) != 0)
      {
        unsigned int v20 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v20(((unint64_t)a1 + v11 + 8) & ~v11, v7, v5);
      }
      else
      {
        uint64_t v19 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v19) = -1;
        }
        return (v19 + 1);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_25;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v13 | v18) + 1;
}

void sub_255A3633C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v23 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(sub_255C7E398() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12 + ((((v13 + 8) & ~v13) + *(void *)(v8 + 64) + v14) & ~v14) + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x255A36634);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if ((v9 & 0x80000000) != 0)
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
          v22((unint64_t)&a1[v13 + 8] & ~v13, a2, v9, v7);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v21 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v21 = (a2 - 1);
          }
          *(void *)a1 = v21;
        }
      }
      return;
  }
}

void sub_255A3665C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for AnchorKey()
{
  return &type metadata for AnchorKey;
}

void sub_255A366D0()
{
  sub_255C80028();
  if (v0 <= 0x3F)
  {
    sub_255A38004();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_255A367AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v45 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v45 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v8 = v6 + 8;
  unint64_t v9 = ((v6 + 16) & ~(unint64_t)v6) + *(void *)(v5 + 64);
  uint64_t v10 = sub_255C7ED28();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 & 0xF8 | 7;
  if (*(_DWORD *)(v11 + 84)) {
    unint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    unint64_t v14 = *(void *)(v11 + 64) + 1;
  }
  if (v14 <= 8) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = v14;
  }
  int v16 = (v12 | v6) & 0x100000;
  uint64_t v17 = *a2;
  *a1 = *a2;
  if ((v13 | v6) != 7
    || v16 != 0
    || v15 + ((v9 + v13 + ((v6 + 8) & ~(v6 | 7))) & ~v13) + 1 > 0x18)
  {
    int v20 = (uint64_t *)(v17 + (((v13 | v6) + 16) & ~(v13 | v6)));
LABEL_35:
    swift_retain();
    return v20;
  }
  size_t __n = v14;
  uint64_t v41 = v10;
  uint64_t v42 = ~v13;
  uint64_t v43 = v11;
  uint64_t v44 = v15;
  uint64_t v21 = (void *)(((unint64_t)a1 + v7 + 8) & ~v7);
  uint64_t v22 = (void *)(((unint64_t)a2 + v7 + 8) & ~v7);
  *uint64_t v21 = *v22;
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + v8) & ~(unint64_t)v6;
  unint64_t v26 = ((unint64_t)v24 + v8) & ~(unint64_t)v6;
  uint64_t v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v27(v25, v26, v45);
  unint64_t v28 = v9 + v13;
  int v29 = (void *)(((unint64_t)v21 + v9 + v13) & v42);
  char v30 = (unsigned __int8 *)(((((unint64_t)a2 + v7 + 8) & ~v7) + v28) & v42);
  unsigned int v31 = v30[v44];
  unsigned int v32 = v31 - 2;
  if (v31 < 2)
  {
    int v20 = a1;
    uint64_t v34 = v43;
LABEL_23:
    if (v31 != 1)
    {
LABEL_34:
      *int v29 = *(void *)v30;
      *((unsigned char *)v29 + v44) = 0;
      goto LABEL_35;
    }
  }
  else
  {
    if (v44 <= 3) {
      uint64_t v33 = v44;
    }
    else {
      uint64_t v33 = 4;
    }
    int v20 = a1;
    uint64_t v34 = v43;
    switch(v33)
    {
      case 1:
        int v35 = *v30;
        break;
      case 2:
        int v35 = *(unsigned __int16 *)v30;
        break;
      case 3:
        int v35 = *(unsigned __int16 *)v30 | (v30[2] << 16);
        break;
      case 4:
        int v35 = *(_DWORD *)v30;
        break;
      default:
        goto LABEL_23;
    }
    int v37 = (v35 | (v32 << (8 * v44))) + 2;
    int v38 = v35 + 2;
    if (v44 < 4) {
      int v38 = v37;
    }
    if (v38 != 1) {
      goto LABEL_34;
    }
  }
  uint64_t v36 = v34;
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v34 + 48))(v30, 1, v41))
  {
    memcpy(v29, v30, __n);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 16))(v29, v30, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v29, 0, 1, v41);
  }
  *((unsigned char *)v29 + v44) = 1;
  return v20;
}

uint64_t sub_255A36B10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (a1 + (v6 | 7) + 8) & ~(v6 | 7);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))((v6 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v4);
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_255C7ED28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  int v12 = (unsigned __int8 *)((v7 + ((v6 + 16) & ~v6) + v8 + v11) & ~v11);
  if (*(_DWORD *)(v10 + 84)) {
    unint64_t v13 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    uint64_t v21 = *(void *)(v9 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9);
    if (!result)
    {
      int v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v21 + 8);
      return v20(v12, v9);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_255A36D84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  uint64_t v5 = *(void *)(v3 - 8) + 16;
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = (v6 | 7) + 8;
  uint64_t v9 = (void *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  uint64_t v8 = (void *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  uint64_t v12 = ((unint64_t)v10 + v6 + 8) & ~v6;
  uint64_t v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v4(v12, v13, v3);
  uint64_t v14 = *(void *)(v5 + 48);
  uint64_t v15 = sub_255C7ED28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  uint64_t v18 = v14 + v17 + ((v6 + 16) & ~v6);
  unsigned int v19 = (void *)(((unint64_t)v8 + v18) & ~v17);
  int v20 = (unsigned __int8 *)(((unint64_t)v9 + v18) & ~v17);
  if (*(_DWORD *)(v16 + 84)) {
    size_t v21 = *(void *)(v16 + 64);
  }
  else {
    size_t v21 = *(void *)(v16 + 64) + 1;
  }
  if (v21 <= 8) {
    uint64_t v22 = 8;
  }
  else {
    uint64_t v22 = v21;
  }
  unsigned int v23 = v20[v22];
  unsigned int v24 = v23 - 2;
  if (v23 >= 2)
  {
    if (v22 <= 3) {
      uint64_t v25 = v22;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *v20;
        goto LABEL_16;
      case 2:
        int v26 = *(unsigned __int16 *)v20;
        goto LABEL_16;
      case 3:
        int v26 = *(unsigned __int16 *)v20 | (v20[2] << 16);
        goto LABEL_16;
      case 4:
        int v26 = *(_DWORD *)v20;
LABEL_16:
        int v27 = (v26 | (v24 << (8 * v22))) + 2;
        unsigned int v23 = v26 + 2;
        if (v22 < 4) {
          unsigned int v23 = v27;
        }
        break;
      default:
        break;
    }
  }
  if (v23 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
    {
      memcpy(v19, v20, v21);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v16 + 16))(v19, v20, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    *((unsigned char *)v19 + v22) = 1;
  }
  else
  {
    *unsigned int v19 = *(void *)v20;
    *((unsigned char *)v19 + v22) = 0;
    swift_retain();
  }
  return a1;
}

void *sub_255A37034(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  uint64_t v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_retain();
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  uint64_t v14 = (v8 + 16) & ~v8;
  uint64_t v15 = *(void *)(v7 + 64);
  uint64_t v16 = sub_255C7ED28();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  uint64_t v19 = v15 + v18 + v14;
  int v20 = (unsigned __int8 *)(((unint64_t)v10 + v19) & ~v18);
  size_t v21 = (unsigned __int8 *)(((unint64_t)v11 + v19) & ~v18);
  if (v20 != v21)
  {
    uint64_t v22 = v16;
    uint64_t v23 = *(void *)(v16 - 8);
    if (*(_DWORD *)(v17 + 84)) {
      size_t v24 = *(void *)(v17 + 64);
    }
    else {
      size_t v24 = *(void *)(v17 + 64) + 1;
    }
    if (v24 <= 8) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = v24;
    }
    unsigned int v26 = v20[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v20;
          goto LABEL_17;
        case 2:
          int v29 = *(unsigned __int16 *)v20;
          goto LABEL_17;
        case 3:
          int v29 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_17;
        case 4:
          int v29 = *(_DWORD *)v20;
LABEL_17:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v16)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v20, v22);
      }
    }
    else
    {
      swift_release();
    }
    unsigned int v31 = v21[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v21;
          goto LABEL_32;
        case 2:
          int v34 = *(unsigned __int16 *)v21;
          goto LABEL_32;
        case 3:
          int v34 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_32;
        case 4:
          int v34 = *(_DWORD *)v21;
LABEL_32:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        memcpy(v20, v21, v24);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v20[v25] = 1;
    }
    else
    {
      *(void *)int v20 = *(void *)v21;
      v20[v25] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_255A373E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t))(v4 + 32);
  uint64_t v6 = v4 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = (v7 | 7) + 8;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  *uint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  v5(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7);
  uint64_t v13 = (v7 + 16) & ~v7;
  uint64_t v14 = *(void *)(v6 + 32);
  uint64_t v15 = sub_255C7ED28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  uint64_t v18 = v14 + v17 + v13;
  uint64_t v19 = (void *)(((unint64_t)v9 + v18) & ~v17);
  int v20 = (unsigned __int8 *)(((unint64_t)v10 + v18) & ~v17);
  if (*(_DWORD *)(v16 + 84)) {
    size_t v21 = *(void *)(v16 + 64);
  }
  else {
    size_t v21 = *(void *)(v16 + 64) + 1;
  }
  if (v21 <= 8) {
    uint64_t v22 = 8;
  }
  else {
    uint64_t v22 = v21;
  }
  unsigned int v23 = v20[v22];
  unsigned int v24 = v23 - 2;
  if (v23 >= 2)
  {
    if (v22 <= 3) {
      uint64_t v25 = v22;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *v20;
        goto LABEL_16;
      case 2:
        int v26 = *(unsigned __int16 *)v20;
        goto LABEL_16;
      case 3:
        int v26 = *(unsigned __int16 *)v20 | (v20[2] << 16);
        goto LABEL_16;
      case 4:
        int v26 = *(_DWORD *)v20;
LABEL_16:
        int v27 = (v26 | (v24 << (8 * v22))) + 2;
        unsigned int v23 = v26 + 2;
        if (v22 < 4) {
          unsigned int v23 = v27;
        }
        break;
      default:
        break;
    }
  }
  if (v23 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
    {
      memcpy(v19, v20, v21);
      char v28 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v16 + 32))(v19, v20, v15);
      char v28 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
  }
  else
  {
    char v28 = 0;
    *uint64_t v19 = *(void *)v20;
  }
  *((unsigned char *)v19 + v22) = v28;
  return a1;
}

void *sub_255A3765C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  uint64_t v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 40))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = sub_255C7ED28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  uint64_t v18 = v14 + v17 + ((v8 + 16) & ~v8);
  uint64_t v19 = (unsigned __int8 *)(((unint64_t)v10 + v18) & ~v17);
  int v20 = (unsigned __int8 *)(((unint64_t)v11 + v18) & ~v17);
  if (v19 != v20)
  {
    uint64_t v21 = v15;
    uint64_t v22 = *(void *)(v15 - 8);
    if (*(_DWORD *)(v16 + 84)) {
      size_t v23 = *(void *)(v16 + 64);
    }
    else {
      size_t v23 = *(void *)(v16 + 64) + 1;
    }
    if (v23 <= 8) {
      uint64_t v24 = 8;
    }
    else {
      uint64_t v24 = v23;
    }
    unsigned int v25 = v19[v24];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v24 <= 3) {
        uint64_t v27 = v24;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *v19;
          goto LABEL_17;
        case 2:
          int v28 = *(unsigned __int16 *)v19;
          goto LABEL_17;
        case 3:
          int v28 = *(unsigned __int16 *)v19 | (v19[2] << 16);
          goto LABEL_17;
        case 4:
          int v28 = *(_DWORD *)v19;
LABEL_17:
          int v29 = (v28 | (v26 << (8 * v24))) + 2;
          unsigned int v25 = v28 + 2;
          if (v24 < 4) {
            unsigned int v25 = v29;
          }
          break;
        default:
          break;
      }
    }
    if (v25 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v15)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v22 + 8))(v19, v21);
      }
    }
    else
    {
      swift_release();
    }
    unsigned int v30 = v20[v24];
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v24 <= 3) {
        uint64_t v32 = v24;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v20;
          goto LABEL_32;
        case 2:
          int v33 = *(unsigned __int16 *)v20;
          goto LABEL_32;
        case 3:
          int v33 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_32;
        case 4:
          int v33 = *(_DWORD *)v20;
LABEL_32:
          int v34 = (v33 | (v31 << (8 * v24))) + 2;
          unsigned int v30 = v33 + 2;
          if (v24 < 4) {
            unsigned int v30 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v30 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        memcpy(v19, v20, v23);
        char v35 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v22 + 32))(v19, v20, v21);
        char v35 = 1;
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      char v35 = 0;
      *(void *)uint64_t v19 = *(void *)v20;
    }
    v19[v24] = v35;
  }
  return a1;
}

uint64_t sub_255A379E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    int v8 = 0x7FFFFFFF;
  }
  else {
    int v8 = *(_DWORD *)(v6 + 84);
  }
  if ((int)v7 >= 0) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(void *)(sub_255C7ED28() - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v11;
  }
  if (v11 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = v11;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v12 | 7;
  uint64_t v15 = v12 + 8;
  if (a2 <= v9) {
    goto LABEL_31;
  }
  uint64_t v16 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v17 = v13 + ((((v12 + 16) & ~v12) + *(void *)(v6 + 64) + (v15 & ~v14) + v16) & ~v16) + 1;
  char v18 = 8 * v17;
  if (v17 <= 3)
  {
    unsigned int v21 = ((a2 - v9 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_31;
      }
      goto LABEL_23;
    }
    if (v21 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_31;
      }
      goto LABEL_23;
    }
    if (v21 < 2)
    {
LABEL_31:
      if (v9 == 0x7FFFFFFF)
      {
        uint64_t v23 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v23) = -1;
        }
        return (v23 + 1);
      }
      else
      {
        uint64_t v24 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v24((v15 + (((((unint64_t)a1 + v14 + 8) & ~v14) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12, v7, v5);
      }
    }
  }
  int v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((unsigned char *)a1 + v17)) {
    goto LABEL_31;
  }
LABEL_23:
  int v22 = (v19 - 1) << v18;
  if (v17 > 3) {
    int v22 = 0;
  }
  if (v17)
  {
    if (v17 > 3) {
      LODWORD(v17) = 4;
    }
    switch((int)v17)
    {
      case 2:
        LODWORD(v17) = *a1;
        break;
      case 3:
        LODWORD(v17) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v17) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v17) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v9 + (v17 | v22) + 1;
}

void sub_255A37CA8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v25 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    int v10 = 0x7FFFFFFF;
  }
  else {
    int v10 = *(_DWORD *)(v8 + 84);
  }
  if ((int)v9 >= 0) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(void *)(sub_255C7ED28() - 8);
  unint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  uint64_t v16 = (((v14 + 16) & ~v14) + *(void *)(v8 + 64) + ((v14 + 8) & ~(v14 | 7)) + v15) & ~v15;
  if (!*(_DWORD *)(v12 + 84)) {
    ++v13;
  }
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  size_t v17 = v13 + v16 + 1;
  if (a3 <= v11)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v21 = ((a3 - v11 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v11 < a2)
  {
    unsigned int v19 = ~v11 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v22 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x255A37FDCLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_30;
    default:
LABEL_30:
      if (a2)
      {
LABEL_31:
        if (v11 == 0x7FFFFFFF)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v23 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v23 = (a2 - 1);
          }
          *(void *)a1 = v23;
        }
        else
        {
          uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
          v24((v14 + 8 + ((((unint64_t)&a1[(v14 | 7) + 8] & ~(v14 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14, a2, v9, v7);
        }
      }
      return;
  }
}

void sub_255A38004()
{
  if (!qword_26B29EB30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EE50);
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29EB30);
    }
  }
}

uint64_t sub_255A38060()
{
  return swift_getWitnessTable();
}

unint64_t sub_255A383F0()
{
  unint64_t result = qword_269F217A8;
  if (!qword_269F217A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F217B0);
    sub_255A09998(&qword_269F217B8, &qword_269F217C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F217A8);
  }
  return result;
}

uint64_t sub_255A38490()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A384D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A38518()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScopePicker.ScopeButtonHighlight() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[11], v1);
  uint64_t v4 = v3 + v2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7E398();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255A38674(uint64_t a1)
{
  return sub_255A388C0(a1, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ScopePicker.ScopeButtonHighlight, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255A30A10);
}

uint64_t type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A386B8@<X0>(uint64_t a1@<X8>)
{
  return sub_255A2E70C(*(void **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_255A386C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScopePicker.ScopeButtons() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v2[11];
  swift_release();
  swift_release();
  uint64_t v5 = sub_255C80028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v5 + 32), v1);
  uint64_t v6 = v3 + v2[12];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29EB20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7ED28();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255A38894(uint64_t a1)
{
  return sub_255A388C0(a1, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ScopePicker.ScopeButtons, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255A2ED7C);
}

uint64_t sub_255A388C0(uint64_t a1, uint64_t (*a2)(void, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(a2(0, v5, v6) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a3(a1, v8, v5, v6);
}

uint64_t sub_255A3897C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for ScopePicker.ScopeButtons();
  return sub_255A3901C(v0+ ((((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80))+ *(void *)(*(void *)(v2 - 8) + 64)+ *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v2);
}

uint64_t sub_255A38A40@<X0>(uint64_t a1@<X8>)
{
  return sub_255A2FDAC(v1[4], v1[5], v1[2], v1[3], a1);
}

unint64_t sub_255A38A4C()
{
  unint64_t result = qword_269F21810;
  if (!qword_269F21810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21808);
    sub_255A31DF0(&qword_269F21818, &qword_269F21820, (void (*)(void))sub_255A38B18);
    sub_255A09998(&qword_269F21858, &qword_269F21860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21810);
  }
  return result;
}

uint64_t sub_255A38B18()
{
  return sub_255A31DF0(&qword_269F21828, &qword_269F21830, (void (*)(void))sub_255A38B48);
}

unint64_t sub_255A38B48()
{
  unint64_t result = qword_269F21838;
  if (!qword_269F21838)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21840);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21848);
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21838);
  }
  return result;
}

uint64_t sub_255A38C38(uint64_t a1)
{
  uint64_t v2 = sub_255C80038();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A38C94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_65Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScopePicker.ScopeButtons() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v13 = *(void *)(*(void *)v2 + 64);
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v3 + v2[11];
  swift_release();
  swift_release();
  unint64_t v7 = v6 + *(int *)(sub_255C80028() + 32);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v8(v7, v1);
  unint64_t v9 = v0 + v3 + v2[12];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29EB20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7ED28();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
  }
  else
  {
    swift_release();
  }
  v8(v0 + ((v3 + v13 + v5) & ~v5), v1);

  return swift_deallocObject();
}

uint64_t sub_255A38F28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  type metadata accessor for ScopePicker.ScopeButtons();

  return sub_255A30678(a1, v5, a2);
}

uint64_t sub_255A3901C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v2);
  sub_255C80028();
  return sub_255C7FFE8();
}

uint64_t sub_255A390F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A391F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A39580()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A395C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C80038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A39628()
{
  return sub_255A31DF0(&qword_269F21920, &qword_269F21918, (void (*)(void))sub_255A3966C);
}

uint64_t sub_255A3966C()
{
  return sub_255A31DF0(&qword_269F21928, &qword_269F21910, (void (*)(void))sub_255A3969C);
}

unint64_t sub_255A3969C()
{
  unint64_t result = qword_269F21930;
  if (!qword_269F21930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21908);
    sub_255A34E10();
    sub_255A09998(&qword_269F21938, &qword_269F21900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21930);
  }
  return result;
}

uint64_t sub_255A3973C(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_255C7D668();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void *)(*(void *)((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 208))(ObjectType, a3) + 88)
                  + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
  swift_retain();
  swift_release();
  double v11 = a1 * 5220.0;
  sub_255C7D658();
  sub_255C7D628();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  int v14 = *(unsigned __int8 *)(v10 + 72);
  if (v14 == 2) {
    goto LABEL_3;
  }
  long long v15 = *(_OWORD *)(v10 + 40);
  v23[0] = *(_OWORD *)(v10 + 24);
  v23[1] = v15;
  v23[2] = *(_OWORD *)(v10 + 56);
  char v24 = v14;
  *(double *)int v18 = v11;
  v18[1] = 0x40B4640000000000;
  v18[2] = 0;
  char v19 = 1;
  uint64_t v20 = v13;
  uint64_t v21 = 0;
  char v22 = 0;
  if ((_s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)v23, (uint64_t)v18) & 1) == 0)
  {
LABEL_3:
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_255A3A950();
    sub_255C7D9E8();
    sub_255C7DA48();
    swift_release();
  }
  *(double *)(v10 + 24) = v11;
  *(_OWORD *)(v10 + 32) = xmmword_255C866C0;
  *(void *)(v10 + 48) = 1;
  *(void *)(v10 + 56) = v13;
  *(void *)(v10 + 64) = 0;
  *(unsigned char *)(v10 + 72) = 0;
  return swift_release();
}

uint64_t sub_255A39940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(double *)(v5 + 16) = a5;
  uint64_t v6 = sub_255C81208();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  *(void *)(v5 + 80) = swift_task_alloc();
  *(void *)(v5 + 88) = swift_task_alloc();
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  sub_255C80958();
  *(void *)(v5 + 112) = sub_255C80948();
  uint64_t v8 = sub_255C80908();
  *(void *)(v5 + 120) = v8;
  *(void *)(v5 + 128) = v7;
  return MEMORY[0x270FA2498](sub_255A39A70, v8, v7);
}

uint64_t sub_255A39A70()
{
  sub_255C811F8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A39B38;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255A39B38()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 104);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = *(void *)(*(void *)v1 + 56);
  v2[18] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[19] = v6;
  v2[20] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  uint64_t v7 = v2[16];
  uint64_t v8 = v2[15];
  if (v0) {
    unint64_t v9 = sub_255A39F7C;
  }
  else {
    unint64_t v9 = sub_255A39CE4;
  }
  return MEMORY[0x270FA2498](v9, v8, v7);
}

uint64_t sub_255A39CE4()
{
  sub_255A3973C(*(double *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
  uint64_t v1 = sub_255C815E8();
  uint64_t v3 = v2;
  sub_255C811F8();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_255A39DD4;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_255A39DD4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 152);
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 128);
  uint64_t v7 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v8 = sub_255A3A290;
  }
  else {
    uint64_t v8 = sub_255A39F98;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_255A39F7C()
{
  return MEMORY[0x270FA0588](*(void *)(v0 + 144), "MediaCoreUI/PPT+Scrubber.swift", 30, 1, 12);
}

uint64_t sub_255A39F98()
{
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 184) = swift_getObjectType();
  uint64_t v2 = *(void (**)(void))(v1 + 208);
  *(void *)(v0 + 192) = v2;
  *(void *)(v0 + 200) = (v1 + 208) & 0xFFFFFFFFFFFFLL | 0x3906000000000000;
  v2();
  *(unsigned char *)(v0 + 256) = 1;
  swift_retain();
  sub_255C7D9F8();
  swift_release();
  swift_release();
  sub_255C811F8();
  uint64_t v5 = (char *)&dword_269F23700 + dword_269F23700;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_255A3A0E8;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v5)(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255A3A0E8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 152);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 128);
  uint64_t v7 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v8 = sub_255A3A58C;
  }
  else {
    uint64_t v8 = sub_255A3A2AC;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_255A3A290()
{
  return MEMORY[0x270FA0588](*(void *)(v0 + 176), "MediaCoreUI/PPT+Scrubber.swift", 30, 1, 14);
}

uint64_t sub_255A3A2AC()
{
  (*(void (**)(void, void))(v0 + 192))(*(void *)(v0 + 184), *(void *)(v0 + 32));
  *(unsigned char *)(v0 + 257) = 2;
  swift_retain();
  sub_255C7D9F8();
  swift_release();
  swift_release();
  uint64_t v1 = sub_255C815E8();
  uint64_t v3 = v2;
  sub_255C811F8();
  uint64_t v6 = (char *)&dword_269F23700 + dword_269F23700;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_255A3A3E4;
  return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v6)(v1, v3, 0, 0, 1);
}

uint64_t sub_255A3A3E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 152);
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 128);
  uint64_t v7 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v8 = sub_255A3A878;
  }
  else {
    uint64_t v8 = sub_255A3A5A8;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_255A3A58C()
{
  return MEMORY[0x270FA0588](*(void *)(v0 + 216), "MediaCoreUI/PPT+Scrubber.swift", 30, 1, 16);
}

uint64_t sub_255A3A5A8()
{
  (*(void (**)(void, void))(v0 + 192))(*(void *)(v0 + 184), *(void *)(v0 + 32));
  *(unsigned char *)(v0 + 258) = 0;
  swift_retain();
  sub_255C7D9F8();
  swift_release();
  swift_release();
  sub_255C811F8();
  uint64_t v3 = (char *)&dword_269F23700 + dword_269F23700;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A3A6D0;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255A3A6D0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 152);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 128);
  uint64_t v7 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v8 = sub_255A3A934;
  }
  else {
    uint64_t v8 = sub_255A3A894;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_255A3A878()
{
  return MEMORY[0x270FA0588](*(void *)(v0 + 232), "MediaCoreUI/PPT+Scrubber.swift", 30, 1, 18);
}

uint64_t sub_255A3A894()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255A3A934()
{
  return MEMORY[0x270FA0588](*(void *)(v0 + 248), "MediaCoreUI/PPT+Scrubber.swift", 30, 1, 20);
}

unint64_t sub_255A3A950()
{
  unint64_t result = qword_26B2996E0;
  if (!qword_26B2996E0)
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2996E0);
  }
  return result;
}

uint64_t sub_255A3A9A8(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_255A3A9D0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isBufferingPulseEnabled] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waitToEnableBufferingPulseTask] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_inputMode] = 2;
  *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] = 2;
  uint64_t v6 = &v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
  uint64_t v7 = qword_26B29C8E8;
  uint64_t v8 = v1;
  if (v7 != -1) {
    swift_once();
  }
  unint64_t v9 = (void *)qword_26B29C8C8;
  uint64_t v10 = (void *)unk_26B29C8D0;
  uint64_t v11 = (void *)qword_26B29C8D8;
  uint64_t v12 = (void *)unk_26B29C8E0;
  *uint64_t v6 = qword_26B29C8C8;
  v6[1] = v10;
  v6[2] = v11;
  v6[3] = v12;
  uint64_t v13 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs;
  uint64_t v14 = qword_26B29C110;
  id v15 = v9;
  id v16 = v10;
  id v17 = v11;
  id v18 = v12;
  if (v14 != -1) {
    swift_once();
  }
  *(_OWORD *)&v8[v13] = xmmword_26B2AA550;
  v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformValueSubscriber] = 0;
  char v19 = &v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform];
  *(_OWORD *)char v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((_OWORD *)v19 + 2) = 0u;
  v19[48] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask] = 0;
  v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset] = 0;

  v29.receiver = v8;
  v29.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v29, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  unint64_t result = sub_255A3AD50();
  unint64_t v22 = result;
  if (!(result >> 62))
  {
    uint64_t v23 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23) {
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v5, 1, 1, v27);
    int v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v20;
    sub_255A812C8((uint64_t)v5, (uint64_t)&unk_269F21A18, (uint64_t)v28);
    swift_release();
    sub_255A095A4((uint64_t)v5, (uint64_t *)&unk_26B29F0C0);
    return (unint64_t)v20;
  }
  unint64_t result = sub_255C812B8();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_7:
  if (v23 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x25A2969C0](v24, v22);
      }
      else {
        id v25 = *(id *)(v22 + 8 * v24 + 32);
      }
      unsigned int v26 = v25;
      ++v24;
      objc_msgSend(v20, sel_addSubview_, v25);
      objc_msgSend(v26, sel_setAlpha_, 0.0);
    }
    while (v23 != v24);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_255A3AD50()
{
  uint64_t v1 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars);
  }
  else
  {
    sub_255A3D45C();
    uint64_t v2 = v3;
    *(void *)(v0 + v1) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_255A3ADB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for BouncyBarsAsset();
  swift_allocObject();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_255A3AE5C;
  return sub_255A4112C();
}

uint64_t sub_255A3AE5C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_255A3AF5C, 0, 0);
}

uint64_t sub_255A3AF5C()
{
  sub_255C80958();
  *(void *)(v0 + 40) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A3AFF0, v2, v1);
}

uint64_t sub_255A3AFF0()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset);
  *(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset) = v1;
  swift_retain_n();
  if (v3)
  {
    swift_release();
  }
  else if (v1)
  {
    uint64_t v4 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    if ((unint64_t)(v4 - 2) >= 3 && v4 == 1)
    {
      unint64_t v6 = 1;
      uint64_t v7 = 1;
      sub_255A42574(1uLL);
      sub_255A3B84C(&v6, &v7, 1);
    }
  }
  swift_release();
  return MEMORY[0x270FA2498](sub_255A3B0E0, 0, 0);
}

uint64_t sub_255A3B0E0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_255A3B164()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_inputMode;
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_inputMode];
  uint64_t v7 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waitToEnableBufferingPulseTask;
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waitToEnableBufferingPulseTask];
  if (v6 == 4)
  {
    if (!v8)
    {
      v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isBufferingPulseEnabled] = 0;
      unint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
      *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] = 4;
      sub_255A42678(v9);
      sub_255A42584(v9);
      unint64_t v18 = v9;
      sub_255A3C700(&v18);
      sub_255A42584(v9);
      uint64_t v10 = sub_255C80988();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
      sub_255C80958();
      uint64_t v11 = v1;
      uint64_t v12 = sub_255C80948();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = MEMORY[0x263F8F500];
      v13[2] = v12;
      v13[3] = v14;
      v13[4] = v11;
      *(void *)&v1[v7] = sub_255AE4788((uint64_t)v4, (uint64_t)&unk_269F219E8, (uint64_t)v13);
      swift_release();
    }
  }
  else
  {
    if (v8)
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
      sub_255C80A18();
      swift_release();
    }
    *(void *)&v1[v7] = 0;
    swift_release();
    unint64_t v15 = *(void *)&v1[v5];
    unint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
    *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] = v15;
    sub_255A42678(v15);
    sub_255A42678(v16);
    sub_255A42584(v16);
    unint64_t v18 = v16;
    sub_255A3C700(&v18);
    sub_255A42584(v16);
  }
}

uint64_t sub_255A3B398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_255C81208();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_255C80958();
  v4[6] = sub_255C80948();
  uint64_t v7 = sub_255C80908();
  v4[7] = v7;
  v4[8] = v6;
  return MEMORY[0x270FA2498](sub_255A3B48C, v7, v6);
}

uint64_t sub_255A3B48C()
{
  uint64_t v1 = sub_255C815E8();
  uint64_t v3 = v2;
  sub_255C811F8();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_255A3B568;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_255A3B568()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v8 = sub_255A3B7E0;
  }
  else {
    uint64_t v8 = sub_255A3B700;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_255A3B700()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[10];
  swift_release();
  sub_255C80A58();
  if (v1)
  {
    swift_task_dealloc();
  }
  else
  {
    uint64_t v3 = v0[2];
    *(unsigned char *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isBufferingPulseEnabled) = 1;
    unint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    unint64_t v6 = v4;
    unint64_t v7 = v4;
    sub_255A42678(v4);
    sub_255A3B84C(&v6, (uint64_t *)&v7, 1);
    sub_255A42584(v4);
    swift_task_dealloc();
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_255A3B7E0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t *sub_255A3B84C(unint64_t *result, uint64_t *a2, char a3)
{
  unint64_t v5 = *result;
  uint64_t v6 = *a2;
  switch(*result)
  {
    case 0uLL:
      unint64_t result = (unint64_t *)sub_255A42574(0);
      goto LABEL_3;
    case 1uLL:
      if (v6 == 1)
      {
        sub_255A42678(1uLL);
        unint64_t result = (unint64_t *)sub_255A42678(1uLL);
        if ((a3 & 1) == 0) {
          return result;
        }
      }
      else
      {
        sub_255A42574(1uLL);
      }
      goto LABEL_24;
    case 2uLL:
      if (v6 != 2) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 3uLL:
      if (v6 != 3) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 4uLL:
      if (v6 != 4) {
        goto LABEL_24;
      }
      goto LABEL_21;
    default:
LABEL_3:
      if ((unint64_t)(v6 - 2) >= 3)
      {
        if (v6 == 1) {
          goto LABEL_24;
        }
        if (!v6) {
          unint64_t result = (unint64_t *)sub_255A42574(0);
        }
      }
      else if (v5 != 4 || v6 != 4)
      {
        goto LABEL_24;
      }
LABEL_21:
      if ((a3 & 1) == 0) {
        return result;
      }
LABEL_24:
      unint64_t v8 = sub_255A3AD50();
      type metadata accessor for AnimationGroup();
      uint64_t v9 = swift_allocObject();
      uint64_t v10 = MEMORY[0x263F8EE78];
      *(void *)(v9 + 16) = MEMORY[0x263F8EE78];
      uint64_t v99 = (void **)(v9 + 16);
      *(void *)(v9 + 24) = v10;
      uint64_t v11 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask;
      if (*(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask])
      {
        swift_retain();
        sub_255C80A18();
        swift_release();
      }
      *(void *)&v3[v11] = 0;
      swift_release();
      if (v5 == 1)
      {
        sub_255A42574(1uLL);
        sub_255A3E1D8();
      }
      if (v6 == 3)
      {
        id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82640]), sel_initWithControlPoint1_controlPoint2_, 0.33, 1.0, 0.67, 1.0);
        id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v26, 0.9);

        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v3;
        uint64_t v104 = sub_255A42720;
        uint64_t v105 = v28;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v101 = 1107296256;
        uint64_t v102 = sub_255AE4914;
        uint64_t v103 = &block_descriptor_38;
        objc_super v29 = _Block_copy(&aBlock);
        swift_retain_n();
        unsigned int v30 = v3;
        swift_release();
        objc_msgSend(v27, sel_addAnimations_, v29);
        _Block_release(v29);
        swift_release();
        swift_beginAccess();
        unsigned int v31 = *v99;
        id v21 = v27;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char *v99 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unsigned int v31 = sub_255C15848(0, v31[2] + 1, 1, v31);
          char *v99 = v31;
        }
        unint64_t v34 = v31[2];
        unint64_t v33 = v31[3];
        if (v34 >= v33 >> 1)
        {
          unsigned int v31 = sub_255C15848((void *)(v33 > 1), v34 + 1, 1, v31);
          char *v99 = v31;
        }
        void v31[2] = v34 + 1;
        char v35 = &v31[2 * v34];
        v35[4] = v21;
        v35[5] = 0;
        swift_endAccess();
        swift_release();
      }
      else
      {
        if (v6 != 4) {
          goto LABEL_41;
        }
        id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82640]), sel_initWithControlPoint1_controlPoint2_, 0.5, 1.0, 0.89, 1.0);
        id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v12, 0.25);

        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v3;
        uint64_t v104 = sub_255A42728;
        uint64_t v105 = v14;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v101 = 1107296256;
        uint64_t v102 = sub_255AE4914;
        uint64_t v103 = &block_descriptor_44;
        unint64_t v15 = _Block_copy(&aBlock);
        unint64_t v16 = v3;
        swift_release();
        objc_msgSend(v13, sel_addAnimations_, v15);
        _Block_release(v15);
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v16;
        uint64_t v104 = sub_255A42730;
        uint64_t v105 = v17;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v101 = 1107296256;
        uint64_t v102 = sub_255A3E650;
        uint64_t v103 = &block_descriptor_50;
        unint64_t v18 = _Block_copy(&aBlock);
        char v19 = v16;
        swift_release();
        objc_msgSend(v13, sel_addCompletion_, v18);
        _Block_release(v18);
        swift_beginAccess();
        id v20 = *v99;
        id v21 = v13;
        char v22 = swift_isUniquelyReferenced_nonNull_native();
        char *v99 = v20;
        if ((v22 & 1) == 0)
        {
          id v20 = sub_255C15848(0, v20[2] + 1, 1, v20);
          char *v99 = v20;
        }
        unint64_t v24 = v20[2];
        unint64_t v23 = v20[3];
        uint64_t v6 = 4;
        if (v24 >= v23 >> 1)
        {
          id v20 = sub_255C15848((void *)(v23 > 1), v24 + 1, 1, v20);
          char *v99 = v20;
        }
        v20[2] = v24 + 1;
        id v25 = &v20[2 * v24];
        void v25[4] = v21;
        v25[5] = 0;
        swift_endAccess();
      }

LABEL_41:
      if (v5 == 2)
      {
        uint64_t v97 = v6;
        unint64_t v36 = swift_bridgeObjectRetain();
        unint64_t v95 = v8;
        sub_255A3E7A0(v36);
        uint64_t v38 = v37;
        uint64_t v96 = v3;
        sub_255A3D78C();
        uint64_t v98 = *(void *)(v38 + 16);
        if (v98)
        {
          uint64_t v39 = 0;
          unint64_t v40 = (void **)(v38 + 40);
          do
          {
            uint64_t v41 = *(v40 - 1);
            uint64_t v42 = *v40;
            id v43 = objc_allocWithZone(MEMORY[0x263F82640]);
            id v44 = v42;
            id v45 = v41;
            id v46 = objc_msgSend(v43, sel_initWithControlPoint1_controlPoint2_, 0.32, 0.0, 0.67, 0.0);
            id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v46, 0.5);

            uint64_t v48 = swift_allocObject();
            *(void *)(v48 + 16) = v45;
            *(void *)(v48 + 24) = v42;
            uint64_t v104 = sub_255A426D4;
            uint64_t v105 = v48;
            uint64_t aBlock = MEMORY[0x263EF8330];
            uint64_t v101 = 1107296256;
            uint64_t v102 = sub_255AE4914;
            uint64_t v103 = &block_descriptor_32;
            uint64_t v49 = _Block_copy(&aBlock);
            swift_retain_n();
            id v50 = v45;
            id v51 = v44;
            swift_release();
            objc_msgSend(v47, sel_addAnimations_, v49);
            _Block_release(v49);
            swift_release();
            swift_beginAccess();
            double v52 = *v99;
            id v53 = v47;
            char v54 = swift_isUniquelyReferenced_nonNull_native();
            char *v99 = v52;
            if ((v54 & 1) == 0)
            {
              double v52 = sub_255C15848(0, v52[2] + 1, 1, v52);
              char *v99 = v52;
            }
            unint64_t v56 = v52[2];
            unint64_t v55 = v52[3];
            if (v56 >= v55 >> 1)
            {
              double v52 = sub_255C15848((void *)(v55 > 1), v56 + 1, 1, v52);
              char *v99 = v52;
            }
            v40 += 2;
            v52[2] = v56 + 1;
            CGRect v57 = (double *)&v52[2 * v56];
            *((void *)v57 + 4) = v53;
            v57[5] = (double)v39 * 0.03;
            swift_endAccess();
            swift_release();

            ++v39;
          }
          while (v98 != v39);
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = v96;
        unint64_t v8 = v95;
        uint64_t v6 = v97;
        unint64_t v5 = 2;
      }
      switch(v6)
      {
        case 0:
          sub_255A42574(0);
          goto LABEL_52;
        case 1:
          id v69 = objc_allocWithZone(MEMORY[0x263F82640]);
          sub_255A42574(1uLL);
          id v70 = objc_msgSend(v69, sel_initWithControlPoint1_controlPoint2_, 0.5, 1.0, 0.89, 1.0);
          id v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v70, 0.15);

          uint64_t v72 = swift_allocObject();
          *(void *)(v72 + 16) = v3;
          uint64_t v104 = sub_255A4268C;
          uint64_t v105 = v72;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v101 = 1107296256;
          uint64_t v102 = sub_255AE4914;
          uint64_t v103 = &block_descriptor_26;
          uint64_t v73 = _Block_copy(&aBlock);
          swift_retain_n();
          uint64_t v74 = v3;
          swift_release();
          objc_msgSend(v71, sel_addAnimations_, v73);
          _Block_release(v73);
          swift_release();
          swift_beginAccess();
          uint64_t v75 = *v99;
          id v76 = v71;
          char v77 = swift_isUniquelyReferenced_nonNull_native();
          char *v99 = v75;
          if ((v77 & 1) == 0)
          {
            uint64_t v75 = sub_255C15848(0, v75[2] + 1, 1, v75);
            char *v99 = v75;
          }
          unint64_t v79 = v75[2];
          unint64_t v78 = v75[3];
          if (v79 >= v78 >> 1)
          {
            uint64_t v75 = sub_255C15848((void *)(v78 > 1), v79 + 1, 1, v75);
            char *v99 = v75;
          }
          v75[2] = v79 + 1;
          uint64_t v80 = &v75[2 * v79];
          v80[4] = v76;
          v80[5] = 0;
          swift_endAccess();
          swift_release();

          goto LABEL_62;
        case 2:
          if (v8 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v81 = sub_255C812B8();
            swift_bridgeObjectRelease();
            if (!v81) {
              goto LABEL_72;
            }
          }
          else
          {
            uint64_t v81 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v81) {
              goto LABEL_72;
            }
          }
          if (v81 < 1)
          {
            __break(1u);
            JUMPOUT(0x255A3C6D8);
          }
          for (uint64_t i = 0; i != v81; ++i)
          {
            if ((v8 & 0xC000000000000001) != 0) {
              id v83 = (id)MEMORY[0x25A2969C0](i, v8);
            }
            else {
              id v83 = *(id *)(v8 + 8 * i + 32);
            }
            uint64_t v84 = v83;
            objc_msgSend(v83, sel_setAlpha_, 0.0, v95);
          }
LABEL_72:
          swift_bridgeObjectRelease();
          sub_255A3D78C();
LABEL_73:
          uint64_t v85 = *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation];
          if (v85)
          {
            uint64_t v86 = swift_allocObject();
            *(void *)(v86 + 16) = v3;
            *(void *)(v86 + 24) = v9;
            uint64_t v87 = swift_allocObject();
            *(void *)(v87 + 16) = sub_255A425E8;
            *(void *)(v87 + 24) = v86;
            uint64_t v88 = (void *)(v85 + 24);
            swift_beginAccess();
            uint64_t v89 = *(void **)(v85 + 24);
            uint64_t v90 = v3;
            swift_retain();
            swift_retain();
            swift_retain();
            char v91 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v85 + 24) = v89;
            if ((v91 & 1) == 0)
            {
              uint64_t v89 = sub_255C15958(0, v89[2] + 1, 1, v89);
              *uint64_t v88 = v89;
            }
            unint64_t v93 = v89[2];
            unint64_t v92 = v89[3];
            if (v93 >= v92 >> 1)
            {
              uint64_t v89 = sub_255C15958((void *)(v92 > 1), v93 + 1, 1, v89);
              *uint64_t v88 = v89;
            }
            v89[2] = v93 + 1;
            uint64_t v94 = &v89[2 * v93];
            v94[4] = sub_255A1050C;
            v94[5] = v87;
            swift_endAccess();
            swift_release();
            swift_release();
          }
          else
          {
            sub_255A409A0();
          }
          unint64_t result = (unint64_t *)swift_release();
          break;
        case 3:
        case 4:
LABEL_62:
          swift_bridgeObjectRelease();
          goto LABEL_73;
        default:
LABEL_52:
          swift_bridgeObjectRelease();
          id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82640]), sel_initWithControlPoint1_controlPoint2_, 0.5, 1.0, 0.89, 1.0);
          id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v58, 0.15);

          uint64_t v60 = swift_allocObject();
          *(void *)(v60 + 16) = v3;
          *(void *)(v60 + 24) = v5;
          uint64_t v104 = sub_255A42670;
          uint64_t v105 = v60;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v101 = 1107296256;
          uint64_t v102 = sub_255AE4914;
          uint64_t v103 = &block_descriptor_1;
          long long v61 = _Block_copy(&aBlock);
          swift_retain();
          sub_255A42678(v5);
          long long v62 = v3;
          swift_retain();
          swift_release();
          objc_msgSend(v59, sel_addAnimations_, v61);
          _Block_release(v61);
          swift_release();
          swift_beginAccess();
          long long v63 = *v99;
          id v64 = v59;
          char v65 = swift_isUniquelyReferenced_nonNull_native();
          char *v99 = v63;
          if ((v65 & 1) == 0)
          {
            long long v63 = sub_255C15848(0, v63[2] + 1, 1, v63);
            char *v99 = v63;
          }
          unint64_t v67 = v63[2];
          unint64_t v66 = v63[3];
          if (v67 >= v66 >> 1)
          {
            long long v63 = sub_255C15848((void *)(v66 > 1), v67 + 1, 1, v63);
            char *v99 = v63;
          }
          v63[2] = v67 + 1;
          uint64_t v68 = &v63[2 * v67];
          v68[4] = v64;
          v68[5] = 0;
          swift_endAccess();
          swift_release();

          goto LABEL_73;
      }
      return result;
  }
}

unint64_t sub_255A3C700(unint64_t *a1)
{
  unint64_t v2 = *a1;
  uint64_t v3 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode;
  if (*a1 - 2 >= 3)
  {
    unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    BOOL v5 = v2 >= 2 && v4 >= 5;
    if (v5 && v2 != v4)
    {
      uint64_t v7 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
      if (*(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber))
      {
        sub_255A42678(*a1);
        sub_255A42678(v4);
        sub_255A42678(v2);
        sub_255A42678(v4);
        swift_retain();
        sub_255C7D9B8();
        swift_release();
      }
      else
      {
        sub_255A42678(*a1);
        sub_255A42678(v4);
        sub_255A42678(v2);
        sub_255A42678(v4);
      }
      *(void *)(v1 + v7) = 0;
      swift_release();
      sub_255A42584(v4);
      sub_255A42584(v2);
      sub_255A42584(v4);
      sub_255A42584(v2);
      uint64_t v3 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode;
    }
  }
  unint64_t v8 = *(void *)(v1 + v3);
  unint64_t v11 = v8;
  unint64_t v12 = v2;
  sub_255A42678(v8);
  sub_255A3C85C(&v12, &v11);
  sub_255A42584(v8);
  unint64_t v12 = v2;
  unint64_t v9 = *(void *)(v1 + v3);
  unint64_t v11 = v9;
  sub_255A42678(v9);
  sub_255A3B84C(&v12, (uint64_t *)&v11, 0);

  return sub_255A42584(v9);
}

void sub_255A3C85C(void *a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D438);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D6E0);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = *a2;
  if (v17)
  {
    uint64_t v25 = v14;
    uint64_t v18 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber;
    if (*(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber))
    {
      if (qword_26B29C6C8 != -1) {
        swift_once();
      }
      sub_255A8D6EC();
      if (*(void *)(v3 + v18))
      {
        swift_retain();
        sub_255C7D9B8();
        swift_release();
      }
      *(void *)(v3 + v18) = 0;
      swift_release();
    }
    if (v17 >= 5)
    {
      if (!*(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber))
      {
        uint64_t v24 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
        swift_beginAccess();
        sub_255A42574(v17);
        sub_255A42574(v17);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F20F68);
        sub_255C7DA98();
        swift_endAccess();
        sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
        id v26 = (id)sub_255C80C88();
        uint64_t v20 = sub_255C80C78();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
        sub_255A09998(&qword_269F219F0, &qword_26B29D438);
        sub_255A42F64();
        sub_255C7DB68();
        sub_255A095A4((uint64_t)v8, (uint64_t *)&unk_26B29F010);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_255A09998(&qword_269F219F8, &qword_26B29D6E0);
        uint64_t v21 = sub_255C7DB98();
        swift_release();
        sub_255A42584(v17);
        sub_255A42584(v17);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v13);
        *(void *)(v3 + v24) = v21;
        swift_release();
      }
      return;
    }
  }
  else
  {
    if (*a1)
    {
      uint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber);
      sub_255A42574(0);
      if (!v19)
      {
        sub_255A3DB18();
        if (qword_26B29C6C8 != -1) {
          swift_once();
        }
        sub_255A8D454();
      }
    }
    else
    {
      sub_255A42678(0);
      sub_255A42678(0);
    }
    sub_255A42574(0);
  }
  uint64_t v22 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
  if (*(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber))
  {
    swift_retain();
    sub_255C7D9B8();
    swift_release();
  }
  *(void *)(v3 + v22) = 0;

  swift_release();
}

void sub_255A3CD64()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
  switch(v1)
  {
    case 2:
      return;
    case 3:
      id v2 = *(id *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8);
      unint64_t v3 = sub_255A3AD50();
      unint64_t v4 = v3;
      if (v3 >> 62)
      {
        uint64_t v5 = sub_255C812B8();
        if (!v5) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v5) {
          goto LABEL_24;
        }
      }
      if (v5 >= 1)
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)MEMORY[0x25A2969C0](i, v4);
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          unint64_t v8 = v7;
          objc_msgSend(v7, sel_setBackgroundColor_, v2);
        }
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_28;
    case 4:
      return;
  }
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  unint64_t v9 = sub_255A3AD50();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    uint64_t v11 = sub_255C812B8();
    if (v11)
    {
LABEL_15:
      if (v11 >= 1)
      {
        for (uint64_t j = 0; j != v11; ++j)
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v13 = (id)MEMORY[0x25A2969C0](j, v10);
          }
          else {
            id v13 = *(id *)(v10 + 8 * j + 32);
          }
          uint64_t v14 = v13;
          objc_msgSend(v13, sel_setBackgroundColor_, v2);
        }
        goto LABEL_24;
      }
LABEL_28:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_15;
    }
  }
LABEL_24:

  swift_bridgeObjectRelease();
}

void sub_255A3CF3C(uint64_t a1)
{
  id v2 = *(void **)a1;
  unint64_t v3 = *(void **)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8);
  id v15 = *(id *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  unint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16);
  unint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 24);
  *uint64_t v6 = *(void *)a1;
  v6[1] = v3;
  v6[2] = v4;
  v6[3] = v5;
  sub_255A43740(0, &qword_26B29D1B0);
  id v10 = v2;
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  if ((sub_255C80DD8() & 1) == 0 || (sub_255C80DD8() & 1) == 0 || (sub_255C80DD8() & 1) == 0)
  {

    goto LABEL_7;
  }
  char v14 = sub_255C80DD8();

  if ((v14 & 1) == 0) {
LABEL_7:
  }
    sub_255A3CD64();
}

unint64_t *sub_255A3D078(double a1, double a2)
{
  unint64_t v3 = (double *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs);
  double v4 = *(double *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs);
  double v5 = *(double *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs + 8);
  *unint64_t v3 = a1;
  v3[1] = a2;
  if (v4 != a1 || v5 != a2)
  {
    uint64_t v7 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode;
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    if (v8 == 4)
    {
      uint64_t v10 = 4;
      unint64_t v11 = 4;
      unint64_t result = sub_255A3B84C(&v11, &v10, 1);
      uint64_t v8 = *(void *)(v2 + v7);
    }
    if (v8 == 1)
    {
      uint64_t v10 = 1;
      unint64_t v11 = 1;
      sub_255A42574(1uLL);
      sub_255A42574(1uLL);
      sub_255A3B84C(&v11, &v10, 1);
      return (unint64_t *)sub_255A42584(1uLL);
    }
  }
  return result;
}

unsigned __int8 *sub_255A3D11C(unsigned __int8 *result)
{
  if (*result == v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout]) {
    return result;
  }
  unint64_t v2 = sub_255A3AD50();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t result = (unsigned __int8 *)sub_255C812B8();
    uint64_t v4 = (uint64_t)result;
    if (!result) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (unsigned __int8 *)swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_11;
    }
  }
  if (v4 < 1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x25A2969C0](i, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    objc_msgSend(v6, sel_removeFromSuperview);
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  sub_255A3D45C();
  *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars] = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_255A3AD50();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    unint64_t v16 = v1;
    swift_bridgeObjectRetain();
    unint64_t result = (unsigned __int8 *)sub_255C812B8();
    uint64_t v11 = (uint64_t)result;
    if (!result) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v12 = v1;
    unint64_t result = (unsigned __int8 *)swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_20;
    }
  }
  if (v11 < 1)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  for (uint64_t j = 0; j != v11; ++j)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x25A2969C0](j, v10);
    }
    else {
      id v14 = *(id *)(v10 + 8 * j + 32);
    }
    id v15 = v14;
    objc_msgSend(v1, sel_addSubview_, v14);
  }
LABEL_20:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_255A3CD64();
  uint64_t v17 = self;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_255A430BC;
  *(void *)(v19 + 24) = v18;
  v22[4] = sub_255A430D4;
  v22[5] = v19;
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 1107296256;
  void v22[2] = sub_255A3D764;
  v22[3] = &block_descriptor_132;
  uint64_t v20 = _Block_copy(v22);
  uint64_t v21 = v1;
  swift_retain();
  swift_release();
  objc_msgSend((id)v17, sel_performWithoutAnimation_, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = (unsigned __int8 *)swift_release();
  if (v17)
  {
    __break(1u);
    goto LABEL_26;
  }
  sub_255A3D78C();
  if (!*(void *)&v21[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode])
  {
    sub_255A42574(0);
    sub_255A3DB18();
  }
  return (unsigned __int8 *)swift_release();
}

void sub_255A3D45C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout)) {
    uint64_t v1 = &unk_270478308;
  }
  else {
    uint64_t v1 = &unk_2704782D0;
  }
  uint64_t v2 = v1[2];
  uint64_t v3 = v2 - 1;
  if (v2 - 1 < 0)
  {
    __break(1u);
  }
  else if (v2 != 1)
  {
    sub_255C811B8();
    uint64_t v4 = *MEMORY[0x263F15A20];
    do
    {
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
      id v6 = objc_msgSend(v5, sel_layer);
      objc_msgSend(v6, sel_setCornerCurve_, v4);

      id v7 = objc_msgSend(v5, sel_layer);
      objc_msgSend(v7, sel_setAllowsEdgeAntialiasing_, 1);

      id v8 = objc_msgSend(v5, sel_tintColor);
      objc_msgSend(v5, sel_setBackgroundColor_, v8);

      sub_255C81198();
      sub_255C811C8();
      sub_255C811D8();
      sub_255C811A8();
      --v3;
    }
    while (v3);
  }
}

void sub_255A3D5E4(unsigned char *a1)
{
  char v1 = a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout];
  uint64_t v2 = &a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  v2[48] = v1;
  uint64_t v3 = *(void *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
  if ((unint64_t)(v3 - 2) >= 3 && v3 != 1)
  {
    if (!v3) {
      sub_255A42574(0);
    }
    id v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    v10[4] = sub_255A4381C;
    v10[5] = v7;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_255AE4914;
    v10[3] = &block_descriptor_139;
    id v8 = _Block_copy(v10);
    unint64_t v9 = a1;
    swift_release();
    objc_msgSend(v6, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v8, 0, 0.325, 0.0, 0.8, 0.0);
    _Block_release(v8);
  }
}

uint64_t sub_255A3D73C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_255A3D764(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_255A3D78C()
{
  char v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
  BOOL v3 = (unint64_t)(v2 - 2) < 3 || v2 == 1;
  if (!v3 && !v2) {
    sub_255A42574(0);
  }
  uint64_t v4 = sub_255B54E88();
  unint64_t v5 = sub_255A3AD50();
  unint64_t v6 = v5;
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    double v8 = *(double *)(v4 + 32);
    if (v5 >> 62) {
      goto LABEL_35;
    }
    for (uint64_t i = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_255C812B8())
    {
      uint64_t v10 = 0;
      uint64_t v11 = (double *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs];
      uint64_t v12 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout;
      uint64_t v22 = v7 - 1;
      uint64_t v7 = i;
      while (1)
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          id v13 = (id)MEMORY[0x25A2969C0](v10, v6);
        }
        else
        {
          if ((unint64_t)v10 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_34;
          }
          id v13 = *(id *)(v6 + 32 + 8 * v10);
        }
        id v14 = v13;
        objc_msgSend(v1, sel_bounds);
        CGRectGetHeight(v24);
        double v15 = *v11 * 0.125;
        if (v1[v12] == 1) {
          double v15 = v15 * 5.0 / 6.0;
        }
        double v8 = (v8 * 0.12 + 1.0) * v15;
        id v16 = objc_msgSend(v14, sel_layer);
        objc_msgSend(v16, sel_setCornerRadius_, v8 * 0.5);

        objc_msgSend(v14, sel_bounds);
        objc_msgSend(v14, sel_setBounds_);
        objc_msgSend(v14, sel_bounds);
        objc_msgSend(v14, sel_setBounds_);
        if (v1[v12] == 1) {
          uint64_t v17 = &unk_270478380;
        }
        else {
          uint64_t v17 = &unk_270478348;
        }
        if (v1[v12] == 1) {
          double v18 = *v11 * 0.125 * 5.0 / 6.0;
        }
        else {
          double v18 = *v11 * 0.125;
        }
        uint64_t v19 = v17[2];
        swift_bridgeObjectRelease();
        double v20 = *v11 * 0.125;
        if (v1[v12] == 1) {
          double v20 = v20 * 5.0 / 6.0;
        }
        objc_msgSend(v14, sel_setCenter_, v20 * 1.12 * 0.5 + (v18 * 1.12 + (*v11 - v20 * 1.12 * (double)(v19 - 1)) / (double)(v19 - 2)) * (double)v10, v11[1] * 0.5);

        if (v22 == v10) {
          goto LABEL_30;
        }
        if ((unint64_t)(v10 + 1) >= *(void *)(v4 + 16)) {
          break;
        }
        double v8 = *(double *)(v4 + 40 + 8 * v10++);
        if (v7 == v10) {
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      ;
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255A3DB18()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D6D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B29C6C8 != -1) {
    swift_once();
  }
  char v9 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout);
  swift_retain();
  uint64_t v10 = (void *)sub_255A8FB00(v9);
  swift_release();
  v14[1] = v10;
  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  v14[0] = (id)sub_255C80C88();
  uint64_t v11 = sub_255C80C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D6F0);
  sub_255A09998(&qword_26B29D6E8, &qword_26B29D6F0);
  sub_255A42F64();
  sub_255C7DB68();
  sub_255A095A4((uint64_t)v4, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_255A09998(&qword_26B29D6D0, &qword_26B29D6D8);
  uint64_t v12 = sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber) = v12;
  return swift_release();
}

void sub_255A3DE24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a2 + 16;
  char v13 = *((unsigned char *)a1 + 48);
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x25A297D40](v12);
  if (v14)
  {
    double v15 = (void *)v14;
    uint64_t v16 = v14 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform;
    *(void *)uint64_t v16 = v6;
    *(void *)(v16 + 8) = v7;
    *(void *)(v16 + 16) = v8;
    *(void *)(v16 + 24) = v9;
    *(void *)(v16 + 32) = v10;
    *(void *)(v16 + 40) = v11;
    *(unsigned char *)(v16 + 48) = v13;
    uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    if ((unint64_t)(v17 - 2) >= 3 && v17 != 1)
    {
      if (!v17) {
        sub_255A42574(0);
      }
      uint64_t v19 = self;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v15;
      aBlock[4] = a4;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_255AE4914;
      aBlock[3] = a5;
      uint64_t v21 = _Block_copy(aBlock);
      id v22 = v15;
      swift_release();
      objc_msgSend(v19, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v21, 0, 0.325, 0.0, 0.8, 0.0);
      _Block_release(v21);
    }
  }
}

id sub_255A3DFB4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber;
  if (*(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber])
  {
    if (qword_26B29C6C8 != -1) {
      swift_once();
    }
    sub_255A8D6EC();
    if (*(void *)&v0[v2])
    {
      swift_retain();
      sub_255C7D9B8();
      swift_release();
    }
    *(void *)&v0[v2] = 0;
    swift_release();
  }
  uint64_t v3 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
  if (*(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber])
  {
    swift_retain();
    sub_255C7D9B8();
    swift_release();
  }
  *(void *)&v0[v3] = 0;
  swift_release();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_255A3E1D8()
{
  unint64_t v0 = sub_255A3AD50();
  unint64_t v1 = sub_255A407C8(v0);
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_255C812B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v13 = v1 & 0xC000000000000001;
    unint64_t v5 = v1;
    do
    {
      if (v13) {
        id v6 = (id)MEMORY[0x25A2969C0](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      uint64_t v8 = (void *)sub_255C805F8();
      objc_msgSend(v7, sel_removeAnimationForKey_, v8);

      uint64_t v9 = (void *)sub_255C805F8();
      objc_msgSend(v7, sel_removeAnimationForKey_, v9);

      uint64_t v10 = (void *)sub_255C805F8();
      objc_msgSend(v7, sel_removeAnimationForKey_, v10);

      id v11 = objc_msgSend(v7, sel_presentationLayer);
      if (v11)
      {
        uint64_t v12 = v11;
        objc_msgSend(v11, sel_frame);
        objc_msgSend(v7, sel_setFrame_);
        objc_msgSend(v12, sel_cornerRadius);
        objc_msgSend(v7, sel_setCornerRadius_);
      }
      ++v4;

      unint64_t v1 = v5;
    }
    while (v3 != v4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_255A3E3FC(uint64_t a1)
{
  sub_255A3D78C();
  id v2 = *(id *)(a1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16);
  unint64_t result = sub_255A3AD50();
  unint64_t v4 = result;
  if (result >> 62)
  {
    unint64_t result = sub_255C812B8();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x25A2969C0](i, v4);
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_setBackgroundColor_, v2);
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

uint64_t sub_255A3E4F8(uint64_t a1, char *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&a2[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] == 4
    && a2[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isBufferingPulseEnabled] == 1)
  {
    uint64_t v7 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    sub_255C80958();
    uint64_t v8 = a2;
    uint64_t v9 = sub_255C80948();
    uint64_t v10 = (void *)swift_allocObject();
    uint64_t v11 = MEMORY[0x263F8F500];
    v10[2] = v9;
    v10[3] = v11;
    v10[4] = v8;
    *(void *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask] = sub_255B5DB70((uint64_t)v6, (uint64_t)&unk_269F219D8, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_255A3E650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

unint64_t sub_255A3E6A4(uint64_t a1)
{
  sub_255A3D78C();
  id v2 = *(id *)(a1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8);
  unint64_t result = sub_255A3AD50();
  unint64_t v4 = result;
  if (result >> 62)
  {
    unint64_t result = sub_255C812B8();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x25A2969C0](i, v4);
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_setBackgroundColor_, v2);
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

void sub_255A3E7A0(unint64_t a1)
{
  unint64_t v1 = (void *)sub_255A4298C(a1);
  unint64_t v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 2 * v2;
  uint64_t v7 = 5;
  unint64_t v21 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    if (v5 >= v8) {
      goto LABEL_13;
    }
    uint64_t v9 = (void *)v1[v7 - 1];
    uint64_t v10 = (void *)v1[v7];
    uint64_t v11 = (void *)v1[v6 + 2];
    uint64_t v12 = (void *)v1[v6 + 3];
    id v13 = v12;
    id v14 = v9;
    id v15 = v10;
    id v16 = v11;
    id v22 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v1 = sub_255C57B0C(v1);
    }
    uint64_t v17 = &v1[v7];
    double v18 = (void *)v1[v7];

    *(v17 - 1) = v16;
    *uint64_t v17 = v12;
    if (v5 >= v1[2]) {
      goto LABEL_14;
    }
    uint64_t v19 = &v1[v6];
    uint64_t v20 = (void *)v1[v6 + 3];

    v19[2] = v22;
    v19[3] = v10;
    unint64_t v4 = v21;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3) {
      return;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_255A3E8EC(uint64_t a1)
{
  sub_255A3D78C();
  id v2 = *(id *)(a1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  unint64_t v3 = sub_255A3AD50();
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    sub_255A3E9DC();
    return;
  }
  uint64_t v5 = sub_255C812B8();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x25A2969C0](i, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      unint64_t v8 = v7;
      objc_msgSend(v7, sel_setBackgroundColor_, v2);
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_255A3E9DC()
{
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset);
  if (v2)
  {
    swift_retain();
    unint64_t v3 = sub_255A42900(3uLL);
    if (v3 > 2)
    {
      __break(1u);
    }
    else
    {
      unsigned int v46 = byte_2704783E8[v3 + 32];
      unint64_t v4 = sub_255A3AD50();
      unint64_t v1 = v4;
      unint64_t v2 = v4 >> 62;
      if (!(v4 >> 62))
      {
        if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 5) {
          uint64_t v5 = 5;
        }
        else {
          uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_255C812B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_255C812B8();
    swift_bridgeObjectRelease();
    if (v42 < 0)
    {
LABEL_61:
      __break(1u);
      return;
    }
    if (v41 >= 5) {
      uint64_t v43 = 5;
    }
    else {
      uint64_t v43 = v41;
    }
    if (v41 >= 0) {
      uint64_t v5 = v43;
    }
    else {
      uint64_t v5 = 5;
    }
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_255C812B8();
    swift_bridgeObjectRelease();
    if (v44 < v5)
    {
      __break(1u);
      goto LABEL_57;
    }
LABEL_7:
    if ((v1 & 0xC000000000000001) != 0 && v5)
    {
      sub_255A43740(0, (unint64_t *)&qword_26B29F140);
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = v6 + 1;
        sub_255C81128();
        uint64_t v6 = v7;
      }
      while (v5 != v7);
    }
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_255C812C8();
      uint64_t v9 = v11;
      uint64_t v8 = v12;
      unint64_t v10 = v13;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = (v1 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v10 = (2 * v5) | 1;
    }
    unint64_t v14 = sub_255A42D14(v9, v8, v10);
    unint64_t v1 = v14;
    if (!(v14 >> 62))
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_16:
        if (v15 >= 1)
        {
          unint64_t v16 = 0;
          uint64_t v17 = (double *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs);
          uint64_t v45 = v15;
          while (1)
          {
            id v19 = (v1 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x25A2969C0](v16, v1)
                : *(id *)(v1 + 8 * v16 + 32);
            uint64_t v20 = v19;
            unint64_t v21 = sub_255A417BC(v46, v16, *v17, v17[1]);
            if (v21) {
              break;
            }

            uint64_t v18 = v45;
LABEL_19:
            if (v18 == ++v16) {
              goto LABEL_58;
            }
          }
          CGRect v24 = v22;
          uint64_t v25 = v23;
          id v26 = v21;
          id v27 = (void *)sub_255C805F8();
          objc_msgSend(v20, sel_addAnimation_forKey_, v26, v27);

          id v28 = v24;
          objc_super v29 = (void *)sub_255C805F8();
          objc_msgSend(v20, sel_addAnimation_forKey_, v28, v29);

          id v30 = v25;
          unsigned int v31 = (void *)sub_255C805F8();
          objc_msgSend(v20, sel_addAnimation_forKey_, v30, v31);

          id v32 = objc_msgSend(v28, sel_values);
          if (v32)
          {
            unint64_t v33 = v32;
            uint64_t v34 = sub_255C807F8();

            if (*(void *)(v34 + 16))
            {
              sub_255A42E30(v34 + 32, (uint64_t)&v48);
            }
            else
            {
              long long v48 = 0u;
              long long v49 = 0u;
            }
            uint64_t v18 = v45;
            swift_bridgeObjectRelease();
            if (!*((void *)&v49 + 1)) {
              goto LABEL_41;
            }
            if ((swift_dynamicCast() & 1) == 0) {
              goto LABEL_46;
            }
            id v35 = objc_msgSend(v26, sel_values);
            if (v35)
            {
              unint64_t v36 = v35;
              uint64_t v37 = sub_255C807F8();

              if (*(void *)(v37 + 16))
              {
                sub_255A42E30(v37 + 32, (uint64_t)&v48);
              }
              else
              {
                long long v48 = 0u;
                long long v49 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((void *)&v49 + 1)) {
                goto LABEL_41;
              }
              if ((swift_dynamicCast() & 1) == 0) {
                goto LABEL_46;
              }
              id v38 = objc_msgSend(v30, sel_values);
              if (v38)
              {
                uint64_t v39 = v38;
                uint64_t v40 = sub_255C807F8();

                if (*(void *)(v40 + 16))
                {
                  sub_255A42E30(v40 + 32, (uint64_t)&v48);
                }
                else
                {
                  long long v48 = 0u;
                  long long v49 = 0u;
                }
                swift_bridgeObjectRelease();
                if (*((void *)&v49 + 1))
                {
                  if (swift_dynamicCast())
                  {
                    objc_msgSend(v20, sel_frame);
                    objc_msgSend(v20, sel_setFrame_);
                    objc_msgSend(v20, sel_setCornerRadius_, v47);
                  }
LABEL_46:

                  goto LABEL_19;
                }
                goto LABEL_41;
              }
            }
            long long v48 = 0u;
            long long v49 = 0u;
          }
          else
          {
            long long v48 = 0u;
            long long v49 = 0u;
            uint64_t v18 = v45;
          }
LABEL_41:

          sub_255A095A4((uint64_t)&v48, &qword_26B297D00);
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_61;
      }
      goto LABEL_58;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_255C812B8();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_16;
    }
LABEL_58:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void sub_255A3F024(char *a1, uint64_t a2)
{
  id v4 = *(id *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
  unint64_t v5 = sub_255A3AD50();
  unint64_t v6 = v5;
  if (v5 >> 62)
  {
    uint64_t v7 = sub_255C812B8();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x25A2969C0](i, v6);
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    unint64_t v10 = v9;
    objc_msgSend(v9, sel_setBackgroundColor_, v4);
  }
LABEL_10:
  swift_bridgeObjectRelease();

  if (a2 == 1)
  {
    uint64_t v11 = self;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    void v15[4] = sub_255A42E8C;
    v15[5] = v12;
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 1107296256;
    _OWORD v15[2] = sub_255AE4914;
    v15[3] = &block_descriptor_88;
    unint64_t v13 = _Block_copy(v15);
    sub_255A42678(1uLL);
    unint64_t v14 = a1;
    swift_release();
    objc_msgSend(v11, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v13, 0, 0.325, 0.0, 0.8, 0.0);
    _Block_release(v13);
  }
}

uint64_t sub_255A3F208(char *a1, uint64_t a2)
{
  *(void *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = a2;
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_255A42E94;
  *(void *)(v5 + 24) = v4;
  unint64_t v6 = (void *)(a2 + 24);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a2 + 24);
  swift_retain();
  uint64_t v8 = a1;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_255C15958(0, v7[2] + 1, 1, v7);
    *unint64_t v6 = v7;
  }
  unint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v7 = sub_255C15958((void *)(v10 > 1), v11 + 1, 1, v7);
    *unint64_t v6 = v7;
  }
  void v7[2] = v11 + 1;
  uint64_t v12 = &v7[2 * v11];
  v12[4] = sub_255A43840;
  v12[5] = v5;
  swift_endAccess();
  swift_release();
  return sub_255A409A0();
}

uint64_t sub_255A3F370(char *a1)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  uint64_t result = (uint64_t)objc_msgSendSuper2(&v5, sel_layoutSubviews);
  uint64_t v3 = *(void *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
  if ((unint64_t)(v3 - 2) >= 3 && v3 != 1)
  {
    if (!v3) {
      uint64_t result = sub_255A42574(0);
    }
    if (!*(void *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation]) {
      return sub_255A3D78C();
    }
  }
  return result;
}

uint64_t sub_255A3F3EC()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  uint64_t result = (uint64_t)objc_msgSendSuper2(&v4, sel_layoutSubviews);
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
  if ((unint64_t)(v2 - 2) >= 3 && v2 != 1)
  {
    if (!v2) {
      uint64_t result = sub_255A42574(0);
    }
    if (!*(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation]) {
      return sub_255A3D78C();
    }
  }
  return result;
}

void sub_255A3F460()
{
  double v1 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs] * 0.125;
  if (v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout] == 1) {
    double v1 = v1 * 5.0 / 6.0;
  }
  objc_msgSend(v0, sel_bounds);
  double Height = CGRectGetHeight(v57);
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16];
  objc_super v4 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 24];
  type metadata accessor for AnimationGroup();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v5 + 16) = MEMORY[0x263F8EE78];
  long long v48 = (void **)(v5 + 16);
  uint64_t v43 = v5;
  *(void *)(v5 + 24) = v6;
  uint64_t v44 = (void **)(v5 + 24);
  id v50 = v3;
  id v49 = v4;
  unint64_t v7 = sub_255A3AD50();
  unint64_t v8 = v7;
  if (v7 >> 62)
  {
    uint64_t v9 = sub_255C812B8();
    if (v9) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_17;
  }
LABEL_5:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v42 = v0;
  uint64_t v10 = 0;
  unint64_t v45 = v8 & 0xC000000000000001;
  uint64_t v46 = v9;
  unint64_t v47 = v8;
  do
  {
    if (v45) {
      id v11 = (id)MEMORY[0x25A2969C0](v10, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * v10 + 32);
    }
    uint64_t v12 = v11;
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82640]), sel_initWithControlPoint1_controlPoint2_, 0.11, 0.0, 0.5, 0.0);
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v13, 0.25);

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v49;
    *(double *)(v15 + 32) = Height * 0.7;
    unint64_t v55 = (id (*)(id))sub_255A42878;
    uint64_t v56 = v15;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v52 = 1107296256;
    id v53 = sub_255AE4914;
    char v54 = &block_descriptor_62;
    unint64_t v16 = _Block_copy(&aBlock);
    id v17 = v49;
    id v18 = v12;
    swift_release();
    objc_msgSend(v14, sel_addAnimations_, v16);
    _Block_release(v16);
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82640]), sel_initWithControlPoint1_controlPoint2_, 0.11, 0.0, 0.5, 0.0);
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v19, 0.25);

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v18;
    *(void *)(v21 + 24) = v50;
    *(double *)(v21 + 32) = v1;
    unint64_t v55 = (id (*)(id))sub_255A42878;
    uint64_t v56 = v21;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v52 = 1107296256;
    id v53 = sub_255AE4914;
    char v54 = &block_descriptor_68;
    id v22 = _Block_copy(&aBlock);
    id v23 = v50;
    id v24 = v18;
    swift_release();
    objc_msgSend(v20, sel_addAnimations_, v22);
    _Block_release(v22);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v20;
    unint64_t v55 = sub_255A428E8;
    uint64_t v56 = v25;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v52 = 1107296256;
    id v53 = sub_255A3E650;
    char v54 = &block_descriptor_74;
    id v26 = _Block_copy(&aBlock);
    id v27 = v20;
    swift_release();
    objc_msgSend(v14, sel_addCompletion_, v26);
    _Block_release(v26);
    swift_beginAccess();
    id v28 = *v48;
    id v29 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v48 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v28 = sub_255C15848(0, v28[2] + 1, 1, v28);
      *long long v48 = v28;
    }
    unint64_t v32 = v28[2];
    unint64_t v31 = v28[3];
    if (v32 >= v31 >> 1)
    {
      id v28 = sub_255C15848((void *)(v31 > 1), v32 + 1, 1, v28);
      *long long v48 = v28;
    }
    v28[2] = v32 + 1;
    unint64_t v33 = (double *)&v28[2 * v32];
    *((void *)v33 + 4) = v29;
    v33[5] = (double)v10 * 0.1;
    swift_endAccess();

    ++v10;
    unint64_t v8 = v47;
  }
  while (v46 != v10);
  swift_bridgeObjectRelease();
  uint64_t v0 = v42;
LABEL_18:
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v0;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_255A4377C;
  *(void *)(v35 + 24) = v34;
  swift_beginAccess();
  unint64_t v36 = *v44;
  uint64_t v37 = v0;
  swift_retain();
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v44 = v36;
  if ((v38 & 1) == 0)
  {
    unint64_t v36 = sub_255C15958(0, v36[2] + 1, 1, v36);
    *uint64_t v44 = v36;
  }
  unint64_t v40 = v36[2];
  unint64_t v39 = v36[3];
  if (v40 >= v39 >> 1)
  {
    unint64_t v36 = sub_255C15958((void *)(v39 > 1), v40 + 1, 1, v36);
    *uint64_t v44 = v36;
  }
  v36[2] = v40 + 1;
  uint64_t v41 = &v36[2 * v40];
  v41[4] = sub_255A43840;
  v41[5] = v35;
  swift_endAccess();
  swift_release();
  *(void *)&v37[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = v43;
  swift_retain();
  swift_release();
  sub_255A409A0();
  swift_release();
}

uint64_t sub_255A3FAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = sub_255C811E8();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_255C81208();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  sub_255C80958();
  v4[15] = sub_255C80948();
  uint64_t v8 = sub_255C80908();
  v4[16] = v8;
  v4[17] = v7;
  return MEMORY[0x270FA2498](sub_255A3FC40, v8, v7);
}

uint64_t sub_255A3FC40()
{
  if (sub_255C80A48())
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout;
  *(void *)(v0 + 144) = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout;
  sub_255A3F460();
  uint64_t v5 = (uint64_t *)&unk_270478458;
  if (!*(unsigned char *)(v3 + v4)) {
    uint64_t v5 = (uint64_t *)&unk_270478420;
  }
  uint64_t v6 = *v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = 100 * (v6 - 1);
  if ((unsigned __int128)((v6 - 1) * (__int128)100) >> 64 != v7 >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v8 = __OFADD__(v7, 500);
  uint64_t v9 = v7 + 500;
  if (v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v10 = v9 + 600;
  if (__OFADD__(v9, 600))
  {
LABEL_16:
    __break(1u);
    return sub_255C81238();
  }
  if (v10 < 0) {
    return sub_255C81238();
  }
  uint64_t v11 = 1000000000000000 * v10;
  uint64_t v12 = ((unint64_t)v10 * (unsigned __int128)0x38D7EA4C68000uLL) >> 64;
  sub_255C811F8();
  *(void *)(v0 + 40) = v11;
  *(void *)(v0 + 48) = v12;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255A3FE08, 0, 0);
}

uint64_t sub_255A3FE08()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_255A427F0(&qword_26B29D458, MEMORY[0x263F8F710]);
  sub_255C814C8();
  sub_255A427F0(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[19] = v5;
  v0[20] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_255A3FF9C;
  uint64_t v8 = v0[11];
  uint64_t v7 = v0[12];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_255A3FF9C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = sub_255A402FC;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
    uint64_t v7 = v2[16];
    uint64_t v8 = v2[17];
    uint64_t v6 = sub_255A4013C;
  }
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_255A4013C()
{
  if (sub_255C80A48())
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 56);
  sub_255A3F460();
  uint64_t v5 = (uint64_t *)&unk_270478458;
  if (!*(unsigned char *)(v4 + v3)) {
    uint64_t v5 = (uint64_t *)&unk_270478420;
  }
  uint64_t v6 = *v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = 100 * (v6 - 1);
  if ((unsigned __int128)((v6 - 1) * (__int128)100) >> 64 != v7 >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v8 = __OFADD__(v7, 500);
  uint64_t v9 = v7 + 500;
  if (v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v10 = v9 + 600;
  if (__OFADD__(v9, 600))
  {
LABEL_16:
    __break(1u);
    return sub_255C81238();
  }
  if (v10 < 0) {
    return sub_255C81238();
  }
  uint64_t v11 = 1000000000000000 * v10;
  uint64_t v12 = ((unint64_t)v10 * (unsigned __int128)0x38D7EA4C68000uLL) >> 64;
  sub_255C811F8();
  *(void *)(v0 + 40) = v11;
  *(void *)(v0 + 48) = v12;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255A3FE08, 0, 0);
}

uint64_t sub_255A402FC()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  return MEMORY[0x270FA2498](sub_255A437F4, v4, v5);
}

void sub_255A403B0()
{
  uint64_t v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_tintColorDidChange);
  if ((unint64_t)(*(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] - 2) >= 3)
  {
    uint64_t v2 = (id *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8];
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16];
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 24];
    uint64_t v6 = qword_26B29C8E8;
    id v7 = *(id *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
    id v8 = v3;
    id v26 = v4;
    id v25 = v5;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_26B29C8C8;
    uint64_t v10 = (void *)unk_26B29C8D0;
    uint64_t v12 = (void *)qword_26B29C8D8;
    uint64_t v11 = (void *)unk_26B29C8E0;
    sub_255A43740(0, &qword_26B29D1B0);
    id v13 = v9;
    id v14 = v10;
    id v15 = v12;
    id v16 = v11;
    if ((sub_255C80DD8() & 1) == 0 || (sub_255C80DD8() & 1) == 0)
    {

      return;
    }
    if ((sub_255C80DD8() & 1) == 0)
    {

      return;
    }
    char v17 = sub_255C80DD8();

    if (v17)
    {
      id v18 = *v2;
      unint64_t v19 = sub_255A3AD50();
      unint64_t v20 = v19;
      if (v19 >> 62)
      {
        uint64_t v21 = sub_255C812B8();
        if (v21) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v21)
        {
LABEL_10:
          if (v21 >= 1)
          {
            for (uint64_t i = 0; i != v21; ++i)
            {
              if ((v20 & 0xC000000000000001) != 0) {
                id v23 = (id)MEMORY[0x25A2969C0](i, v20);
              }
              else {
                id v23 = *(id *)(v20 + 8 * i + 32);
              }
              id v24 = v23;
              objc_msgSend(v23, sel_setBackgroundColor_, v18);
            }
            goto LABEL_20;
          }
          __break(1u);
          return;
        }
      }
LABEL_20:

      swift_bridgeObjectRelease();
    }
  }
}

void sub_255A406F8()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_didMoveToWindow);
  id v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {

    int v2 = v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible];
    v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 1;
    if (v2 != 1) {
      sub_255A3D78C();
    }
  }
  else
  {
    v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 0;
  }
}

uint64_t sub_255A407C8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v2) {
      break;
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t result = sub_255C811B8();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x25A2969C0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = objc_msgSend(v5, sel_layer);

      sub_255C81198();
      sub_255C811C8();
      sub_255C811D8();
      sub_255C811A8();
      if (v2 == v4) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_255C812B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for WaveformPlayIndicator()
{
  return self;
}

uint64_t sub_255A40960@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255A409A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C803B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C803E8();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x270FA5388](v6);
  id v28 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = dispatch_group_create();
  swift_beginAccess();
  uint64_t v9 = *(void *)(*(void *)(v0 + 16) + 16);
  if (v9)
  {
    uint64_t v24 = v0;
    id v25 = v5;
    uint64_t v26 = v3;
    uint64_t v27 = v2;
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v10 = (double *)(v23 + 40);
    do
    {
      uint64_t v11 = (void *)*((void *)v10 - 1);
      double v12 = *v10;
      v10 += 2;
      id v13 = v11;
      dispatch_group_enter(v8);
      objc_msgSend(v13, sel_startAnimationAfterDelay_, v12);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v8;
      unint64_t v36 = sub_255A43164;
      uint64_t v37 = v14;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_255A3E650;
      uint64_t v35 = &block_descriptor_145;
      id v15 = _Block_copy(&aBlock);
      id v16 = v13;
      char v17 = v8;
      swift_release();
      objc_msgSend(v16, sel_addCompletion_, v15);
      _Block_release(v15);

      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    uint64_t v2 = v27;
    uint64_t v1 = v24;
    id v5 = v25;
  }
  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  id v18 = (void *)sub_255C80C88();
  unint64_t v36 = sub_255A4316C;
  uint64_t v37 = v1;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_255AE4914;
  uint64_t v35 = &block_descriptor_148;
  unint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  unint64_t v20 = v28;
  sub_255C803D8();
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_255A427F0((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
  sub_255A09998((unint64_t *)&qword_26B29FC50, &qword_26B29F390);
  sub_255C80F78();
  sub_255C80C58();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v30);
  return swift_release();
}

uint64_t sub_255A40DB8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_255A40E4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnimationGroup()
{
  return self;
}

uint64_t sub_255A40EB0()
{
  uint64_t v0 = sub_255C7D5C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, qword_26B29C308);
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)qword_26B29C308);
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_26B2AA660;
  uint64_t v9 = (void *)sub_255C805F8();
  uint64_t v10 = (void *)sub_255C805F8();
  id v11 = objc_msgSend(v8, sel_URLForResource_withExtension_, v9, v10);

  if (v11)
  {
    sub_255C7D598();

    double v12 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v12(v6, v3, v0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(v7, v6, v0);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

void sub_255A4111C()
{
  qword_269F21948 = 0x4059000000000000;
}

uint64_t sub_255A4112C()
{
  v1[7] = v0;
  uint64_t v2 = sub_255C7D898();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = sub_255C7D5C8();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255A41248, 0, 0);
}

uint64_t sub_255A41248()
{
  if (qword_26B29C320 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26B29C308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_269F23330 + dword_269F23330);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_255A4135C;
  uint64_t v6 = v0[13];
  return v8(v6);
}

uint64_t sub_255A4135C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_255A41510;
  }
  else
  {
    *(void *)(v6 + 128) = a2;
    *(void *)(v6 + 136) = a1;
    uint64_t v7 = sub_255A41490;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_255A41490()
{
  uint64_t v1 = (int8x16_t *)v0[3].i64[1];
  v1[1] = vextq_s8(v0[8], v0[8], 8uLL);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(int8x16_t *))v0->i64[1];
  return v2(v1);
}

uint64_t sub_255A41510()
{
  uint64_t v24 = v0;
  if (qword_269F1FD60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[15];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_269F32F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  id v7 = v1;
  uint64_t v8 = sub_255C7D878();
  os_log_type_t v9 = sub_255C80C08();
  BOOL v10 = os_log_type_enabled(v8, v9);
  id v11 = (void *)v0[15];
  uint64_t v13 = v0[9];
  uint64_t v12 = v0[10];
  uint64_t v14 = v0[8];
  if (v10)
  {
    uint64_t v22 = v0[10];
    uint64_t v21 = v0[8];
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)id v15 = 136446210;
    swift_getErrorValue();
    uint64_t v17 = sub_255C81508();
    v0[6] = sub_255A7BEC4(v17, v18, &v23);
    sub_255C80F18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255A00000, v8, v9, "WaveformPlayIndicator: unable to decode mica asset for WaveformIndicator  %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v16, -1, -1);
    MEMORY[0x25A297C00](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v21);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  type metadata accessor for BouncyBarsAsset();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19(0);
}

void *sub_255A417BC(uint64_t a1, unint64_t a2, double a3, double a4)
{
  p_isa = (void *)sub_255C7D898();
  os_log_type_t v9 = (void (**)(char *, uint64_t, void *))*(p_isa - 1);
  uint64_t v10 = MEMORY[0x270FA5388](p_isa);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v59 - v13;
  sub_255A420C8(a1, a2);
  if (!v15)
  {
LABEL_29:
    if (qword_269F1FD60 != -1) {
LABEL_48:
    }
      swift_once();
    uint64_t v44 = __swift_project_value_buffer((uint64_t)p_isa, (uint64_t)qword_269F32F40);
    v9[2](v12, v44, p_isa);
    unint64_t v45 = sub_255C7D878();
    os_log_type_t v46 = sub_255C80C08();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl(&dword_255A00000, v45, v46, "WaveformPlayIndicator: BouncyBars asset does not have expected layers / animations", v47, 2u);
      MEMORY[0x25A297C00](v47, -1, -1);
    }

    ((void (*)(char *, void *))v9[1])(v12, p_isa);
    return 0;
  }
  uint64_t v16 = v15;
  id v17 = objc_msgSend(v15, sel_values);
  if (!v17)
  {

    goto LABEL_29;
  }
  unint64_t v18 = v17;
  id v59 = v14;
  uint64_t v60 = v9;
  uint64_t v61 = (uint64_t)p_isa;
  uint64_t v19 = sub_255C807F8();

  objc_msgSend(v16, sel_copy);
  sub_255C80F58();
  swift_unknownObjectRelease();
  sub_255A43740(0, &qword_269F21A00);
  swift_dynamicCast();
  p_isa = (void *)v72;
  objc_msgSend(v16, sel_copy);
  sub_255C80F58();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  unint64_t v20 = v72;
  id v62 = v16;
  objc_msgSend(v16, sel_copy);
  sub_255C80F58();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v12 = 0;
  uint64_t v68 = v72;
  uint64_t v69 = v19;
  uint64_t v65 = v19 + 32;
  id v64 = &v71;
  long long v63 = (long long *)((char *)&v72 + 8);
  unint64_t v67 = v76;
  double v21 = a3 * 0.125;
  uint64_t v22 = MEMORY[0x263F8EF38];
  unint64_t v66 = 0x8000000255C9B180;
  os_log_type_t v9 = (void (**)(char *, uint64_t, void *))&unk_2653EB000;
  while (1)
  {
    uint64_t v23 = *(char **)(v69 + 16);
    if (v12 == v23)
    {
      uint64_t v74 = 0;
      long long v72 = 0u;
      long long v73 = 0u;
    }
    else
    {
      if (v12 >= v23) {
        goto LABEL_47;
      }
      uint64_t v24 = v64;
      sub_255A42E30(v65 + 32 * (void)v12, (uint64_t)v64);
      *(void *)&long long v72 = v12;
      sub_255A199E0(v24, v63);
      ++v12;
    }
    sub_255A430FC((uint64_t)&v72, (uint64_t)&v75);
    if (!v76[3])
    {

      swift_bridgeObjectRelease();
      return p_isa;
    }
    unint64_t v25 = v75;
    sub_255A199E0(v67, &v72);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      if (qword_269F1FD60 != -1) {
        swift_once();
      }
      uint64_t v48 = v61;
      uint64_t v49 = __swift_project_value_buffer(v61, (uint64_t)qword_269F32F40);
      id v50 = v60;
      id v51 = v59;
      v60[2](v59, v49, (void *)v48);
      uint64_t v52 = sub_255C7D878();
      os_log_type_t v53 = sub_255C80C08();
      if (os_log_type_enabled(v52, v53))
      {
        id v54 = v62;
        unint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v55 = 0;
        _os_log_impl(&dword_255A00000, v52, v53, "BouncyBars asset does not have expected layers / animations", v55, 2u);
        MEMORY[0x25A297C00](v55, -1, -1);
        uint64_t v56 = v20;
        CGRect v57 = &v78;
      }
      else
      {
        uint64_t v56 = v52;
        id v54 = p_isa;
        uint64_t v52 = v68;
        p_isa = &v20->isa;
        CGRect v57 = &v77;
      }
      id v58 = (void *)*(v57 - 32);

      ((void (*)(char *, uint64_t))v50[1])(v51, v48);
      return 0;
    }
    double v26 = v70;
    if (qword_269F1FD58 != -1) {
      swift_once();
    }
    double v27 = v26 / *(double *)&qword_269F21948;
    *((void *)&v73 + 1) = v22;
    *(double *)&long long v72 = v27 * a4;
    uint64_t result = objc_msgSend(p_isa, sel_values);
    if (!result) {
      break;
    }
    uint64_t v29 = result;
    uint64_t v30 = (void *)sub_255C807F8();

    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v25 & 0x8000000000000000) != 0) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v30 = sub_255C57B9C(v30);
      if ((v25 & 0x8000000000000000) != 0)
      {
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
    if (v25 >= v30[2]) {
      goto LABEL_43;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v30[4 * v25 + 4]);
    sub_255A199E0(&v72, &v30[4 * v25 + 4]);
    uint64_t v31 = (void *)sub_255C807E8();
    swift_bridgeObjectRelease();
    objc_msgSend(p_isa, sel_setValues_, v31);

    unint64_t v32 = v20;
    uint64_t v33 = (void *)sub_255C805F8();
    [v32 setKeyPath:v33];

    if (v21 > v21 * 1.12) {
      goto LABEL_44;
    }
    uint64_t v34 = v20;
    double v35 = v21 + (v21 * 1.12 - v21) * v27;
    *((void *)&v73 + 1) = v22;
    *(double *)&long long v72 = v35;
    uint64_t result = [v32 values];
    if (!result) {
      goto LABEL_50;
    }
    unint64_t v36 = result;
    uint64_t v37 = (void *)sub_255C807F8();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_255C57B9C(v37);
    }
    if (v25 >= v37[2]) {
      goto LABEL_45;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37[4 * v25 + 4]);
    sub_255A199E0(&v72, &v37[4 * v25 + 4]);
    char v38 = (void *)sub_255C807E8();
    swift_bridgeObjectRelease();
    [v32 setValues:v38];

    os_log_type_t v9 = (void (**)(char *, uint64_t, void *))&unk_2653EB000;
    unint64_t v39 = v68;
    unint64_t v40 = (void *)sub_255C805F8();
    [v39 setKeyPath:v40];

    *((void *)&v73 + 1) = v22;
    *(double *)&long long v72 = v35 * 0.5;
    uint64_t result = [v39 values];
    if (!result) {
      goto LABEL_51;
    }
    uint64_t v41 = result;
    uint64_t v42 = (void *)sub_255C807F8();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = sub_255C57B9C(v42);
    }
    if (v25 >= v42[2]) {
      goto LABEL_46;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v42[4 * v25 + 4]);
    sub_255A199E0(&v72, &v42[4 * v25 + 4]);
    uint64_t v43 = (void *)sub_255C807E8();
    swift_bridgeObjectRelease();
    [v39 setValues:v43];

    unint64_t v20 = v34;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_255A420C8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = (a1 << 56) + 0x41746E6169726156;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_255B39E20(v5, 0xE800000000000000);
    if (v7)
    {
      sub_255A42E30(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v18);
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B297D00);
  sub_255A43740(0, &qword_26B29D198);
  if (swift_dynamicCast())
  {
    uint64_t v8 = v20;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v20 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = objc_msgSend(v8, sel_sublayers);

    if (v9)
    {
      uint64_t v10 = sub_255C807F8();

      if ((v10 & 0xC000000000000001) == 0)
      {
        if ((a2 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          id v11 = *(id *)(v10 + 8 * a2 + 32);
          goto LABEL_16;
        }
        __break(1u);
        return;
      }
      id v11 = (id)MEMORY[0x25A2969C0](a2, v10);
LABEL_16:
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v12, sel_animationKeys);
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_255C807F8();

        if (*(void *)(v15 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v16 = (void *)sub_255C805F8();
          swift_bridgeObjectRelease();
          id v17 = objc_msgSend(v12, sel_animationForKey_, v16);

          if (v17)
          {
            self;
            if (!swift_dynamicCastObjCClass()) {
          }
            }
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
    }
  }
}

uint64_t sub_255A42338()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BouncyBarsAsset()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for AnimationGroup.Animator(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

void destroy for AnimationGroup.Animator(id *a1)
{
}

uint64_t assignWithCopy for AnimationGroup.Animator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for AnimationGroup.Animator(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationGroup.Animator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationGroup.Animator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationGroup.Animator()
{
  return &type metadata for AnimationGroup.Animator;
}

uint64_t sub_255A424FC()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F32F40);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F32F40);
  return sub_255C7D888();
}

unint64_t sub_255A42574(unint64_t result)
{
  if (result >= 2) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_255A42584(unint64_t result)
{
  if (result - 2 >= 3) {
    return sub_255A42598(result);
  }
  return result;
}

unint64_t sub_255A42598(unint64_t result)
{
  if (result >= 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_255A425A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A425E8()
{
  return sub_255A3F208(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_255A425F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A42628()
{
  if (*(void *)(v0 + 24) >= 5uLL) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_255A42670()
{
  sub_255A3F024(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_255A42678(unint64_t result)
{
  if (result - 2 >= 3) {
    return sub_255A42574(result);
  }
  return result;
}

void sub_255A4268C()
{
  sub_255A3E8EC(*(void *)(v0 + 16));
}

uint64_t sub_255A42694()
{
  return swift_deallocObject();
}

id sub_255A426D4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);

  return objc_msgSend(v1, sel_setAlpha_, 1.0);
}

unint64_t sub_255A42720()
{
  return sub_255A3E6A4(*(void *)(v0 + 16));
}

unint64_t sub_255A42728()
{
  return sub_255A3E3FC(*(void *)(v0 + 16));
}

uint64_t sub_255A42730(uint64_t a1)
{
  return sub_255A3E4F8(a1, *(char **)(v1 + 16));
}

uint64_t sub_255A4273C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_255A160B0;
  return sub_255A3FAE0(a1, v4, v5, v6);
}

uint64_t sub_255A427F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A42838()
{
  return swift_deallocObject();
}

id sub_255A4287C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_setBackgroundColor_, *(void *)(v0 + 24));
  objc_msgSend(v1, sel_bounds);

  return objc_msgSend(v1, sel_setBounds_);
}

id sub_255A428E8(id result)
{
  if (!result) {
    return objc_msgSend(*(id *)(v1 + 16), sel_startAnimation);
  }
  return result;
}

unint64_t sub_255A42900(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x25A297C20](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x25A297C20](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255A4298C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v32 = a1;
  if (a1 >> 62) {
    goto LABEL_57;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  unint64_t v3 = (void *)MEMORY[0x263F8EE78];
  uint64_t v4 = 0;
  if (v2)
  {
    uint64_t v5 = (void *)(MEMORY[0x263F8EE78] + 32);
    while (1)
    {
      unint64_t v6 = v1 >> 62;
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_255C812B8();
        swift_bridgeObjectRelease();
        if (!v13) {
          goto LABEL_51;
        }
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_255C812B8();
        swift_bridgeObjectRelease();
        if (!v14) {
          goto LABEL_52;
        }
      }
      else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_51;
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x25A2969C0](0, v1);
        if (!v6) {
          goto LABEL_10;
        }
      }
      else
      {
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_255C812B8();
          goto LABEL_3;
        }
        id v7 = *(id *)(v1 + 32);
        if (!v6)
        {
LABEL_10:
          if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_55;
          }
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_255C812B8();
      swift_bridgeObjectRelease();
      if (!v15) {
        goto LABEL_55;
      }
LABEL_11:
      sub_255A433FC(0, 1, (unint64_t *)&qword_26B29F140);
      unint64_t v1 = v32;
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_255C812B8();
        swift_bridgeObjectRelease();
        if (!v16)
        {
LABEL_29:
          uint64_t v11 = 0;
          if (v4) {
            goto LABEL_19;
          }
          goto LABEL_30;
        }
      }
      else if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
        || (v1 & 0x8000000000000000) != 0
        || (v1 & 0x4000000000000000) != 0)
      {
        sub_255C57B20(v1);
        unint64_t v1 = v8;
        unint64_t v32 = v8;
      }
      uint64_t v9 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v9) {
        goto LABEL_54;
      }
      uint64_t v10 = v9 - 1;
      uint64_t v11 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
      *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
      unint64_t v1 = (unint64_t)&v32;
      sub_255C80818();
      if (v4)
      {
LABEL_19:
        BOOL v12 = __OFSUB__(v4--, 1);
        if (v12) {
          goto LABEL_53;
        }
        goto LABEL_42;
      }
LABEL_30:
      unint64_t v17 = v3[3];
      if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_56;
      }
      int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
      if (v18 <= 1) {
        uint64_t v19 = 1;
      }
      else {
        uint64_t v19 = v18;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D200);
      unint64_t v1 = swift_allocObject();
      int64_t v20 = _swift_stdlib_malloc_size((const void *)v1);
      uint64_t v21 = v20 - 32;
      if (v20 < 32) {
        uint64_t v21 = v20 - 17;
      }
      uint64_t v22 = v21 >> 4;
      *(void *)(v1 + 16) = v19;
      *(void *)(v1 + 24) = 2 * (v21 >> 4);
      unint64_t v23 = v1 + 32;
      uint64_t v24 = v3[3] >> 1;
      if (v3[2])
      {
        unint64_t v25 = v3 + 4;
        if ((void *)v1 != v3 || v23 >= (unint64_t)v25 + 16 * v24) {
          memmove((void *)(v1 + 32), v25, 16 * v24);
        }
        v3[2] = 0;
      }
      uint64_t v5 = (void *)(v23 + 16 * v24);
      uint64_t v26 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
      swift_release();
      unint64_t v3 = (void *)v1;
      BOOL v12 = __OFSUB__(v26, 1);
      uint64_t v4 = v26 - 1;
      if (v12) {
        goto LABEL_53;
      }
LABEL_42:
      *uint64_t v5 = v7;
      v5[1] = v11;
      unint64_t v1 = v32;
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_255C812B8();
        swift_bridgeObjectRelease();
        v5 += 2;
        if (!v27) {
          break;
        }
      }
      else
      {
        v5 += 2;
        if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          break;
        }
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v29 = v3[3];
  if (v29 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v30 = v29 >> 1;
  BOOL v12 = __OFSUB__(v30, v4);
  uint64_t v31 = v30 - v4;
  if (!v12)
  {
    v3[2] = v31;
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_255A42D14(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  uint64_t v4 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2)) {
    goto LABEL_13;
  }
  uint64_t v5 = result;
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t result = sub_255C811B8();
    if (v4 < 0)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v8 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (a2 + i >= v3 || i >= v4) {
        goto LABEL_12;
      }
      id v9 = objc_msgSend(*(id *)(v5 + 8 * a2 + 8 * i), sel_layer);
      sub_255C81198();
      sub_255C811C8();
      sub_255C811D8();
      uint64_t result = sub_255C811A8();
      if (v8 == v4) {
        return v10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_255A42E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_255A42E8C()
{
  return sub_255A3F370(*(char **)(v0 + 16));
}

uint64_t sub_255A42E94()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  return swift_release();
}

uint64_t sub_255A42EB0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_255A160B0;
  return sub_255A3B398(a1, v4, v5, v6);
}

unint64_t sub_255A42F64()
{
  unint64_t result = qword_26B29F110;
  if (!qword_26B29F110)
  {
    sub_255A43740(255, (unint64_t *)&qword_26B29FC80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29F110);
  }
  return result;
}

uint64_t sub_255A42FCC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_255A43004(uint64_t *a1)
{
  sub_255A3DE24(a1, v1, (uint64_t)&unk_270480138, (uint64_t)sub_255A4381C, (uint64_t)&block_descriptor_123);
}

void sub_255A43044(uint64_t *a1)
{
  sub_255A3DE24(a1, v1, (uint64_t)&unk_2704800E8, (uint64_t)sub_255A4381C, (uint64_t)&block_descriptor_116);
}

uint64_t sub_255A43084()
{
  return swift_deallocObject();
}

void sub_255A430BC()
{
  sub_255A3D5E4(*(unsigned char **)(v0 + 16));
}

uint64_t sub_255A430C4()
{
  return swift_deallocObject();
}

uint64_t sub_255A430D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_255A430FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_255A43164()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_255A4316C()
{
  return sub_255A40DB8(v0);
}

void sub_255A43174()
{
  v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isBufferingPulseEnabled] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waitToEnableBufferingPulseTask] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_inputMode] = 2;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] = 2;
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
  if (qword_26B29C8E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26B29C8C8;
  uint64_t v3 = (void *)unk_26B29C8D0;
  uint64_t v4 = (void *)qword_26B29C8D8;
  uint64_t v5 = (void *)unk_26B29C8E0;
  *uint64_t v1 = qword_26B29C8C8;
  v1[1] = v3;
  v1[2] = v4;
  v1[3] = v5;
  uint64_t v6 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs;
  uint64_t v7 = qword_26B29C110;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  if (v7 != -1) {
    swift_once();
  }
  *(_OWORD *)&v0[v6] = xmmword_26B2AA550;
  v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_barLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformValueSubscriber] = 0;
  BOOL v12 = &v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform];
  *(_OWORD *)BOOL v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  v12[48] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask] = 0;
  v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset] = 0;

  sub_255C81248();
  __break(1u);
}

uint64_t sub_255A43334(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A16A8C;
  return sub_255A3ADB4(a1, v4, v5, v6);
}

uint64_t sub_255A433E8(uint64_t a1, uint64_t a2)
{
  return sub_255A433FC(a1, a2, qword_26B2978F8);
}

uint64_t sub_255A433FC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    uint64_t v7 = (unint64_t *)*v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)(((unint64_t)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_255C812B8();
  swift_bridgeObjectRelease();
  if (v23 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = (unint64_t *)(v3 - v5);
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v8 = (unint64_t *)(v5 - v3);
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_255C812B8();
    swift_bridgeObjectRelease();
    uint64_t v10 = (uint64_t)v8 + v9;
    if (!__OFADD__(v9, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_255C812B8();
    swift_bridgeObjectRelease();
    unint64_t v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - (void)v7;
  if (__OFADD__(v9, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  uint64_t v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v9 = 1;
  }
  uint64_t v26 = v5;
  uint64_t v7 = v8;
  id v8 = v6;
  if (v11 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  *uint64_t v4 = MEMORY[0x25A2969D0](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = v8;
  id v8 = v7;
  uint64_t v5 = v26;
LABEL_18:
  uint64_t v15 = v13 + 32;
  uint64_t v16 = (char *)(v13 + 32 + 8 * v5);
  sub_255A43740(0, v6);
  swift_arrayDestroy();
  if (v8)
  {
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_255C812B8();
      swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_21:
        if (v18 < 0)
        {
LABEL_46:
          uint64_t result = sub_255C81308();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v15 + 8 * v3);
        if (v5 != v3 || v16 >= &v19[8 * v18]) {
          memmove(v16, v19, 8 * v18);
        }
        if (!(*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = (char *)v8 + v20;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_255C812B8();
        swift_bridgeObjectRelease();
        uint64_t v21 = (char *)v8 + v25;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_255C80818();
}

uint64_t sub_255A43740(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_255A43844()
{
  uint64_t v31 = sub_255C7D7D8();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v1 = (char *)&v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (int *)_s18SingleFireSignpostVMa();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_255C7D818();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - v12;
  if (qword_269F1FD68 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_269F32F58);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, v14, v7);
  v15(v11, (uint64_t)v13, v7);
  *(void *)&v6[v2[7]] = 0;
  v15(v6, (uint64_t)v11, v7);
  uint64_t v16 = &v6[v2[5]];
  *(void *)uint64_t v16 = "Looper Configuration";
  *((void *)v16 + 1) = 20;
  v16[16] = 2;
  sub_255C7D7F8();
  sub_255C7D798();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v27 = v8 + 8;
  unint64_t v30 = v17;
  v17(v11, v7);
  uint64_t v18 = &v6[v2[6]];
  uint64_t v29 = *(void *)(v29 + 32);
  ((void (*)(char *, char *, uint64_t))v29)(v18, v1, v31);
  sub_255A43FCC((uint64_t)v6, v32 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperConfiguration);
  uint64_t v26 = v13;
  v15(v11, (uint64_t)v13, v7);
  *(void *)&v6[v2[7]] = 0;
  v15(v6, (uint64_t)v11, v7);
  uint64_t v19 = &v6[v2[5]];
  *(void *)uint64_t v19 = "Geometry Computation";
  *((void *)v19 + 1) = 20;
  v19[16] = 2;
  sub_255C7D7F8();
  sub_255C7D798();
  v30(v11, v7);
  ((void (*)(char *, char *, uint64_t))v29)(&v6[v2[6]], v1, v31);
  sub_255A43FCC((uint64_t)v6, v32 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_geometry);
  v15(v11, (uint64_t)v13, v7);
  uint64_t v20 = (uint64_t)v28;
  *(void *)&v28[v2[7]] = 0;
  v15((char *)v20, (uint64_t)v11, v7);
  uint64_t v21 = v20 + v2[5];
  *(void *)uint64_t v21 = "Looper Begin Playback";
  *(void *)(v21 + 8) = 21;
  *(unsigned char *)(v21 + 16) = 2;
  sub_255C7D7F8();
  sub_255C7D798();
  uint64_t v22 = v30;
  v30(v11, v7);
  ((void (*)(uint64_t, char *, uint64_t))v29)(v20 + v2[6], v1, v31);
  sub_255A43FCC(v20, (uint64_t)v6);
  v22(v26, v7);
  uint64_t v23 = v32;
  sub_255A43FCC((uint64_t)v6, v32 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperBeginPlayback);
  return v23;
}

uint64_t sub_255A43CC8()
{
  sub_255A43E34(v0 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperConfiguration);
  sub_255A43E34(v0 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_geometry);
  sub_255A43E34(v0 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperBeginPlayback);

  return swift_deallocClassInstance();
}

uint64_t sub_255A43D4C()
{
  return type metadata accessor for MotionSignposts();
}

uint64_t type metadata accessor for MotionSignposts()
{
  uint64_t result = qword_269F21A28;
  if (!qword_269F21A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255A43DA0()
{
  uint64_t result = _s18SingleFireSignpostVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_255A43E34(uint64_t a1)
{
  uint64_t v2 = _s18SingleFireSignpostVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A43E90()
{
  uint64_t v0 = sub_255C7D898();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_255C7D818();
  __swift_allocate_value_buffer(v4, qword_269F32F58);
  __swift_project_value_buffer(v4, (uint64_t)qword_269F32F58);
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_255C7D7E8();
}

uint64_t sub_255A43FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s18SingleFireSignpostVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A44030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7EBC8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_255C7EBD8();
}

uint64_t sub_255A44128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_255C7EBC8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_255C7EBD8();
}

uint64_t sub_255A44220@<X0>(uint64_t a1@<X8>)
{
  _s18MiniPlayerMetadataCMa();
  sub_255A55384(&qword_26B299948, v2, (void (*)(uint64_t))_s18MiniPlayerMetadataCMa);
  *(void *)a1 = sub_255C7E2B8();
  *(void *)(a1 + 8) = v3;
  type metadata accessor for NowPlayingRouteObserver();
  sub_255A55384(&qword_26B29AA00, 255, (void (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver);
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = swift_getKeyPath();
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = swift_getKeyPath();
  *(unsigned char *)(a1 + 88) = 0;
  uint64_t result = swift_getKeyPath();
  *(void *)(a1 + 96) = result;
  *(unsigned char *)(a1 + 104) = 0;
  return result;
}

BOOL sub_255A4432C()
{
  sub_255ABA420((uint64_t)v24);
  uint64_t v1 = v25;
  uint64_t v2 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  long long v3 = v0[9];
  v27[2] = v0[8];
  v28[0] = v3;
  *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v0 + 154);
  long long v4 = v0[7];
  v27[0] = v0[6];
  v27[1] = v4;
  sub_255A1D4DC((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v16);
  sub_255A1D4DC((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v8 = v16;
  char v9 = v17;
  __int16 v10 = v18;
  uint64_t v11 = v19;
  char v12 = v20;
  long long v13 = v21;
  long long v14 = v22;
  char v15 = v23;
  uint64_t v5 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v2 + 16))(&v8, v1, v2);
  BOOL v6 = sub_255BEA05C(3u, v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v6;
}

uint64_t sub_255A44478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBB0);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  sub_255C80E88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D48);
  _s23MarqueeTitleAndSubtitleVMa();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  type metadata accessor for MetadataStyleModifier();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_255C7FED8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&WitnessTable - v7;
  uint64_t v9 = sub_255C7E458();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&WitnessTable - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)&WitnessTable - v14;
  long long v16 = v2[9];
  void v30[2] = v2[8];
  v31[0] = v16;
  *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v2 + 154);
  long long v17 = v2[7];
  v30[0] = v2[6];
  v30[1] = v17;
  sub_255A1D4DC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v29);
  sub_255A1D4DC((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  if (v29[18] == 1) {
    uint64_t v18 = sub_255C7E8F8();
  }
  else {
    uint64_t v18 = sub_255C7E928();
  }
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = v25;
  *(&WitnessTable - 4) = v24;
  *(&WitnessTable - 3) = v19;
  *(&WitnessTable - 2) = (uint64_t)v2;
  sub_255C7FEC8();
  uint64_t v20 = swift_getWitnessTable();
  MEMORY[0x25A295390](v20, v5, MEMORY[0x263F19C70], v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v27 = v20;
  uint64_t v28 = MEMORY[0x263F19C68];
  swift_getWitnessTable();
  sub_255A20F54(v13);
  long long v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v13, v9);
  sub_255A20F54(v15);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, v9);
}

uint64_t sub_255A44984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v125 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D48);
  _s23MarqueeTitleAndSubtitleVMa();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v116 = v7;
  uint64_t v8 = sub_255C7FF98();
  uint64_t v120 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v119 = (char *)&v98 - v9;
  uint64_t v118 = type metadata accessor for MetadataStyleModifier();
  uint64_t v123 = sub_255C7E458();
  uint64_t v121 = *(void *)(v123 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v123);
  uint64_t v124 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v117 = (char *)&v98 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v122 = (char *)&v98 - v14;
  uint64_t v105 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x270FA5388](v105);
  uint64_t v107 = (uint64_t *)((char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v104 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v18 = (char *)&v98 - v17;
  uint64_t v133 = v19;
  uint64_t v20 = sub_255C7E458();
  uint64_t v106 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v103 = (char *)&v98 - v21;
  uint64_t v132 = v22;
  uint64_t v23 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBB0);
  uint64_t v129 = v23;
  uint64_t v24 = sub_255C7E458();
  uint64_t v110 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  long long v108 = (char *)&v98 - v25;
  uint64_t v131 = v26;
  uint64_t v27 = sub_255C7E458();
  uint64_t v113 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  long long v109 = (char *)&v98 - v28;
  sub_255C7F0D8();
  uint64_t v128 = v27;
  uint64_t v29 = sub_255C7E458();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  long long v111 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  long long v114 = (char *)&v98 - v33;
  uint64_t v130 = sub_255C80E88();
  uint64_t v127 = *(void *)(v130 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v130);
  unint64_t v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v134 = (uint64_t)&v98 - v37;
  _s19DefaultMetadataViewVMa();
  BOOL v38 = sub_255A4432C();
  uint64_t v39 = MEMORY[0x263F198F8];
  uint64_t v126 = v29;
  if (v38)
  {
    uint64_t v99 = v30;
    uint64_t v100 = a1;
    uint64_t v102 = v8;
    sub_255C23448(*(void *)(a1 + 32));
    unint64_t v40 = *(void (**)(uint64_t, uint64_t))(a3 + 264);
    swift_unknownObjectRetain();
    v40(a2, a3);
    swift_unknownObjectRelease();
    uint64_t v101 = a3;
    uint64_t v41 = a2;
    uint64_t v42 = v133;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v44 = v103;
    sub_255C7F628();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v18, v42);
    unint64_t v45 = v44;
    if (qword_269F1FD78 != -1) {
      swift_once();
    }
    uint64_t v46 = qword_269F21A38;
    unint64_t v47 = v107;
    uint64_t v48 = (char *)v107 + *(int *)(v105 + 20);
    uint64_t v49 = *MEMORY[0x263F19868];
    uint64_t v50 = sub_255C7E988();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v48, v49, v50);
    *unint64_t v47 = v46;
    uint64_t v51 = v132;
    if (qword_26B2986A8 != -1) {
      swift_once();
    }
    v160[0] = xmmword_26B2AA4B8;
    v160[1] = *(_OWORD *)algn_26B2AA4C8;
    uint64_t v161 = qword_26B2AA4D8;
    uint64_t v143 = AssociatedConformanceWitness;
    uint64_t v144 = MEMORY[0x263F198F8];
    uint64_t v52 = swift_getWitnessTable();
    os_log_type_t v53 = v108;
    sub_255B44574(0.5, (uint64_t)v47, (uint64_t *)v160, v51, v52);
    sub_255A54F38((uint64_t)v47);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v45, v51);
    if (qword_26B29E8D0 != -1) {
      swift_once();
    }
    sub_255C801F8();
    unint64_t v54 = sub_255A54ED8();
    uint64_t v141 = v52;
    unint64_t v142 = v54;
    uint64_t v55 = swift_getWitnessTable();
    uint64_t v56 = sub_255A09998(&qword_26B29BBA8, &qword_26B29BBB0);
    uint64_t v139 = v55;
    uint64_t v140 = v56;
    uint64_t v96 = v131;
    uint64_t v97 = swift_getWitnessTable();
    CGRect v57 = v109;
    sub_255C7FA48();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v53, v96);
    uint64_t v137 = v97;
    uint64_t v138 = MEMORY[0x263F19100];
    uint64_t v58 = v128;
    uint64_t v59 = swift_getWitnessTable();
    uint64_t v60 = v111;
    sub_255B4BFB8();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v57, v58);
    uint64_t v61 = sub_255A55384((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    uint64_t v135 = v59;
    uint64_t v136 = v61;
    uint64_t v62 = v126;
    swift_getWitnessTable();
    long long v63 = v114;
    sub_255A20F54(v60);
    uint64_t v64 = v99;
    uint64_t v65 = *(void (**)(char *, uint64_t))(v99 + 8);
    v65(v60, v62);
    sub_255A20F54(v63);
    v65(v63, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v36, 0, 1, v62);
    a2 = v41;
    a1 = v100;
    uint64_t v8 = v102;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v36, 1, 1, v29);
    v159[13] = swift_getAssociatedConformanceWitness();
    v159[14] = v39;
    uint64_t v66 = swift_getWitnessTable();
    unint64_t v67 = sub_255A54ED8();
    v159[11] = v66;
    v159[12] = v67;
    uint64_t v68 = swift_getWitnessTable();
    uint64_t v69 = sub_255A09998(&qword_26B29BBA8, &qword_26B29BBB0);
    v159[9] = v68;
    v159[10] = v69;
    v159[7] = swift_getWitnessTable();
    v159[8] = MEMORY[0x263F19100];
    uint64_t v70 = swift_getWitnessTable();
    uint64_t v71 = sub_255A55384((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    v159[5] = v70;
    v159[6] = v71;
    swift_getWitnessTable();
  }
  sub_255A97640((uint64_t)v36, v134);
  long long v72 = *(char **)(v127 + 8);
  uint64_t v113 = v127 + 8;
  long long v114 = v72;
  ((void (*)(char *, uint64_t))v72)(v36, v130);
  sub_255C7EA68();
  id v73 = objc_msgSend(self, sel_currentTraitCollection);
  objc_msgSend(v73, sel_displayScale);

  MEMORY[0x270FA5388](v74);
  unint64_t v75 = v119;
  sub_255C7FF88();
  uint64_t v76 = sub_255C23448(*(void *)(a1 + 32));
  uint64_t v77 = *(void *)(a1 + 8) + 80;
  swift_beginAccess();
  sub_255A53C38(v77, (uint64_t)v159);
  swift_unknownObjectRetain();
  uint64_t v78 = swift_getWitnessTable();
  unint64_t v79 = v117;
  sub_255A46DE0(v76, (uint64_t)v159, v8, a2, v78);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v159);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v75, v8);
  uint64_t v80 = swift_getWitnessTable();
  v158[2] = v78;
  v158[3] = v80;
  uint64_t v81 = v123;
  uint64_t v119 = (char *)swift_getWitnessTable();
  long long v112 = v36;
  uint64_t v82 = v122;
  sub_255A20F54(v79);
  uint64_t v83 = v121;
  uint64_t v120 = *(void *)(v121 + 8);
  ((void (*)(char *, uint64_t))v120)(v79, v81);
  uint64_t v84 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v36, v134, v130);
  v159[0] = v36;
  uint64_t v85 = v124;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v124, v82, v81);
  v159[1] = v85;
  v158[0] = v84;
  v158[1] = v81;
  uint64_t v86 = v84;
  uint64_t v154 = swift_getAssociatedConformanceWitness();
  uint64_t v155 = MEMORY[0x263F198F8];
  uint64_t v87 = swift_getWitnessTable();
  unint64_t v88 = sub_255A54ED8();
  uint64_t v152 = v87;
  unint64_t v153 = v88;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v90 = sub_255A09998(&qword_26B29BBA8, &qword_26B29BBB0);
  uint64_t v150 = v89;
  uint64_t v151 = v90;
  uint64_t v148 = swift_getWitnessTable();
  uint64_t v149 = MEMORY[0x263F19100];
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = sub_255A55384((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v146 = v91;
  uint64_t v147 = v92;
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v157 = v119;
  sub_255AF64A0((uint64_t)v159, 2uLL, (uint64_t)v158);
  unint64_t v93 = (void (*)(char *, uint64_t))v120;
  ((void (*)(char *, uint64_t))v120)(v82, v81);
  uint64_t v94 = (uint64_t (*)(char *, uint64_t))v114;
  ((void (*)(uint64_t, uint64_t))v114)(v134, v86);
  v93(v85, v81);
  return v94(v112, v86);
}

uint64_t sub_255A45A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v138 = type metadata accessor for MCUINamespace();
  uint64_t v137 = *(void *)(v138 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v138);
  uint64_t v150 = &v114[-v10];
  uint64_t v146 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v144 = &v114[-v11];
  uint64_t v12 = sub_255C7E458();
  uint64_t v153 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v157 = &v114[-v13];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  uint64_t v154 = v12;
  uint64_t v136 = sub_255C7E458();
  uint64_t v155 = *(void *)(v136 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v136);
  uint64_t v140 = &v114[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v152 = &v114[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v139 = &v114[-v18];
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v124);
  uint64_t v134 = &v114[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C88);
  uint64_t v20 = MEMORY[0x270FA5388](v128);
  uint64_t v22 = &v114[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v129 = &v114[-v23];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v126 = &v114[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25);
  uint64_t v135 = &v114[-v27];
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C98);
  MEMORY[0x270FA5388](v125);
  uint64_t v29 = &v114[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D50);
  MEMORY[0x270FA5388](v127);
  uint64_t v130 = &v114[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D58);
  MEMORY[0x270FA5388](v132);
  uint64_t v131 = &v114[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D60);
  MEMORY[0x270FA5388](v119);
  uint64_t v133 = &v114[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D68);
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v121 = &v114[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D70);
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v120 = &v114[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D48);
  uint64_t v35 = MEMORY[0x270FA5388](v145);
  uint64_t v149 = &v114[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v35);
  uint64_t v156 = &v114[-v37];
  uint64_t v147 = a2;
  uint64_t v148 = a3;
  uint64_t v143 = _s19DefaultMetadataViewVMa();
  uint64_t v38 = *(void *)(a1 + 8);
  swift_beginAccess();
  uint64_t v39 = *(void *)(v38 + 24);
  uint64_t v151 = a4;
  if (v39 && (uint64_t v40 = *(void *)(a1 + 24), swift_beginAccess(), (*(unsigned char *)(v40 + 16) & 1) == 0))
  {
    uint64_t v161 = sub_255C80678();
    uint64_t v162 = v42;
    sub_255A1D78C();
    uint64_t v43 = sub_255C7F548();
    uint64_t v45 = v44;
    char v47 = v46;
    if (qword_26B29E8E0 != -1) {
      swift_once();
    }
    uint64_t v117 = sub_255C7F4A8();
    uint64_t v116 = v48;
    int v115 = v49;
    uint64_t v118 = v50;
    sub_255A094C0(v43, v45, v47 & 1);
    swift_bridgeObjectRelease();
    if (qword_269F1FD88 != -1) {
      swift_once();
    }
    uint64_t v51 = __swift_project_value_buffer(v24, (uint64_t)qword_269F21A40);
    uint64_t v52 = v135;
    sub_255A09540(v51, (uint64_t)v135, &qword_269F21C90);
    uint64_t v41 = a1;
    if (qword_269F1FDA0 != -1) {
      swift_once();
    }
    uint64_t v53 = *(void *)__swift_project_value_buffer(MEMORY[0x263F1B440], (uint64_t)qword_269F21A88);
    unint64_t v54 = v126;
    sub_255A09540((uint64_t)v52, (uint64_t)v126, &qword_269F21C90);
    uint64_t v55 = v128;
    uint64_t v56 = (uint64_t *)&v22[*(int *)(v128 + 56)];
    *uint64_t v56 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    swift_storeEnumTagMultiPayload();
    sub_255A10514((uint64_t)v54, (uint64_t)v22, &qword_269F21C90);
    *(void *)&v22[*(int *)(v55 + 52)] = v53;
    CGRect v57 = v129;
    sub_255A10514((uint64_t)v22, (uint64_t)v129, &qword_269F21C88);
    sub_255A09540((uint64_t)v57, (uint64_t)&v29[*(int *)(v125 + 36)], &qword_269F21C88);
    uint64_t v58 = v117;
    uint64_t v59 = v116;
    *(void *)uint64_t v29 = v117;
    *((void *)v29 + 1) = v59;
    LOBYTE(v55) = v115 & 1;
    v29[16] = v115 & 1;
    *((void *)v29 + 3) = v118;
    swift_retain();
    sub_255A093E4(v58, v59, v55);
    swift_bridgeObjectRetain();
    sub_255A095A4((uint64_t)v57, &qword_269F21C88);
    sub_255A095A4((uint64_t)v135, &qword_269F21C90);
    sub_255A094C0(v58, v59, v55);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v61 = v130;
    sub_255A09540((uint64_t)v29, (uint64_t)v130, &qword_269F21C98);
    uint64_t v62 = &v61[*(int *)(v127 + 36)];
    *(void *)uint64_t v62 = KeyPath;
    *((void *)v62 + 1) = 1;
    v62[16] = 0;
    sub_255A095A4((uint64_t)v29, &qword_269F21C98);
    uint64_t v63 = swift_getKeyPath();
    type metadata accessor for Geometry();
    sub_255A55384(&qword_26B29B0F8, 255, (void (*)(uint64_t))type metadata accessor for Geometry);
    uint64_t v64 = sub_255C7E628();
    uint64_t v66 = v65;
    unint64_t v67 = v131;
    sub_255A09540((uint64_t)v61, (uint64_t)v131, &qword_269F21D50);
    uint64_t v68 = &v67[*(int *)(v132 + 36)];
    *(void *)uint64_t v68 = v63;
    v68[8] = 0;
    *((void *)v68 + 2) = v64;
    *((void *)v68 + 3) = v66;
    *((void *)v68 + 4) = 0x776F7262657965;
    *((void *)v68 + 5) = 0xE700000000000000;
    sub_255A095A4((uint64_t)v61, &qword_269F21D50);
    id v69 = objc_msgSend(self, sel_mainBundle);
    uint64_t v70 = sub_255B4C6B8();
    long long v72 = v71;

    uint64_t v161 = v70;
    uint64_t v162 = v72;
    sub_255C806E8();
    sub_255C806E8();
    sub_255A55204();
    uint64_t v73 = (uint64_t)v133;
    sub_255C7F978();
    swift_bridgeObjectRelease();
    sub_255A095A4((uint64_t)v67, &qword_269F21D58);
    uint64_t v74 = *MEMORY[0x263F18D60];
    uint64_t v75 = sub_255C7E378();
    uint64_t v76 = (uint64_t)v134;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 104))(v134, v74, v75);
    sub_255A55384(qword_269F21878, 255, MEMORY[0x263F18D80]);
    uint64_t result = sub_255C80578();
    if ((result & 1) == 0)
    {
      __break(1u);
      return result;
    }
    sub_255A55150(&qword_269F21D88, &qword_269F21D60, (void (*)(void))sub_255A55204);
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    uint64_t v78 = v121;
    sub_255C7F7B8();
    sub_255A095A4(v76, &qword_269F21848);
    sub_255A095A4(v73, &qword_269F21D60);
    sub_255C7E018();
    sub_255C7E048();
    sub_255C7E058();
    swift_release();
    swift_release();
    sub_255C7E018();
    sub_255C7E048();
    sub_255C7E058();
    swift_release();
    swift_release();
    uint64_t v79 = sub_255C7E008();
    swift_release();
    swift_release();
    uint64_t v80 = v122;
    uint64_t v81 = (uint64_t)v120;
    uint64_t v82 = v123;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v122 + 16))(v120, v78, v123);
    uint64_t v83 = v142;
    *(void *)(v81 + *(int *)(v142 + 36)) = v79;
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v78, v82);
    uint64_t v84 = v156;
    sub_255A10514(v81, (uint64_t)v156, &qword_269F21D70);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v141 + 56))(v84, 0, 1, v83);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v141 + 56))(v156, 1, 1, v142);
    uint64_t v41 = a1;
  }
  swift_retain();
  uint64_t v85 = v144;
  sub_255A46CC8((uint64_t)v144);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v87 = v150;
  View.mcui.getter(v8, (uint64_t)v150);
  (*(void (**)(unsigned char *, uint64_t))(v146 + 8))(v85, v8);
  if (sub_255A4432C())
  {
    unint64_t v88 = v140;
    uint64_t v89 = v139;
    uint64_t v90 = v138;
    uint64_t v91 = v137;
    if (qword_269F1FDC8 != -1) {
      swift_once();
    }
    uint64_t v92 = &qword_269F21AE0;
  }
  else
  {
    unint64_t v88 = v140;
    uint64_t v89 = v139;
    uint64_t v90 = v138;
    uint64_t v91 = v137;
    if (qword_269F1FDC0 != -1) {
      swift_once();
    }
    uint64_t v92 = &qword_269F21AD8;
  }
  uint64_t v93 = v136;
  MCUINamespace<A>.marqueeFeathering(_:_:)(0, *v92, 0, v90, WitnessTable);
  (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v87, v90);
  swift_getKeyPath();
  uint64_t v94 = *(void *)(v41 + 176);
  char v95 = *(unsigned char *)(v41 + 184);
  sub_255A52558(v94, v95);
  uint64_t v96 = (void *)sub_255ABA458(v94, v95);
  sub_255A525AC(v94, v95);
  swift_bridgeObjectRetain();
  uint64_t v97 = v96;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v97 = sub_255C15738(0, v96[2] + 1, 1, v96);
  }
  uint64_t v98 = v93;
  unint64_t v100 = v97[2];
  unint64_t v99 = v97[3];
  if (v100 >= v99 >> 1) {
    uint64_t v97 = sub_255C15738((void *)(v99 > 1), v100 + 1, 1, v97);
  }
  v97[2] = v100 + 1;
  uint64_t v101 = &v97[2 * v100];
  v101[4] = 0x746C7561666544;
  v101[5] = 0xE700000000000000;
  swift_bridgeObjectRelease();
  uint64_t v161 = (uint64_t)v97;
  unint64_t v102 = sub_255A52830();
  uint64_t v165 = WitnessTable;
  unint64_t v166 = v102;
  uint64_t v103 = v154;
  uint64_t v104 = swift_getWitnessTable();
  uint64_t v105 = v152;
  uint64_t v106 = v157;
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v153 + 8))(v106, v103);
  uint64_t v107 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
  uint64_t v163 = v104;
  uint64_t v164 = v107;
  uint64_t v108 = v98;
  uint64_t v109 = swift_getWitnessTable();
  sub_255A20F54(v105);
  uint64_t v110 = v155;
  long long v111 = *(void (**)(unsigned char *, uint64_t))(v155 + 8);
  v111(v105, v98);
  long long v112 = v156;
  uint64_t v113 = v149;
  sub_255A09540((uint64_t)v156, (uint64_t)v149, &qword_269F21D48);
  uint64_t v161 = (uint64_t)v113;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v110 + 16))(v88, v89, v108);
  uint64_t v162 = v88;
  v160[0] = v145;
  v160[1] = v108;
  unint64_t v158 = sub_255A54F94();
  uint64_t v159 = v109;
  sub_255AF64A0((uint64_t)&v161, 2uLL, (uint64_t)v160);
  v111(v89, v108);
  sub_255A095A4((uint64_t)v112, &qword_269F21D48);
  v111(v88, v108);
  return sub_255A095A4((uint64_t)v113, &qword_269F21D48);
}

uint64_t sub_255A46CC8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = swift_getKeyPath();
  *(unsigned char *)(a1 + 8) = 0;
  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  sub_255A55384(&qword_26B29C090, v2, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
  *(void *)(a1 + 16) = sub_255C7E2B8();
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = swift_getKeyPath();
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t v4 = _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 44));
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = a1 + *(int *)(v4 + 48);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v6 = result;
  *(unsigned char *)(v6 + 8) = 0;
  return result;
}

uint64_t sub_255A46DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_255A53C38(a2, (uint64_t)v10);
  uint64_t v11 = a1;
  sub_255A524B4(v10, (uint64_t)&v12);
  uint64_t v8 = type metadata accessor for MetadataStyleModifier();
  swift_unknownObjectRetain();
  MEMORY[0x25A295390](&v11, a3, v8, a5);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v8 - 8) + 8))(&v11, v8);
}

uint64_t sub_255A46EBC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  sub_255A55384(&qword_26B29C090, v2, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
  *(void *)a1 = sub_255C7E2B8();
  *(void *)(a1 + 8) = v3;
  _s6BannerCMa();
  sub_255A55384((unint64_t *)&qword_26B29E940, 255, (void (*)(uint64_t))_s6BannerCMa);
  *(void *)(a1 + 16) = sub_255C7E2B8();
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = sub_255C7E628();
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = swift_getKeyPath();
  *(unsigned char *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = swift_getKeyPath();
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_WORD *)(a1 + 168) = 0;
  uint64_t result = swift_getKeyPath();
  *(void *)(a1 + 176) = result;
  *(unsigned char *)(a1 + 184) = 0;
  return result;
}

uint64_t sub_255A47008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v53 = type metadata accessor for MetadataStyleModifier();
  uint64_t v5 = sub_255C7E458();
  uint64_t v56 = type metadata accessor for MCUINamespace();
  uint64_t v55 = *(void *)(v56 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v56);
  uint64_t v51 = (char *)&v51 - v7;
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t v52 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v51 - v12;
  uint64_t v14 = sub_255C7E458();
  uint64_t v60 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v54 = (char *)&v51 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  uint64_t v62 = v14;
  uint64_t v16 = sub_255C7E458();
  uint64_t v63 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v58 = (char *)&v51 - v17;
  uint64_t v64 = v18;
  uint64_t v19 = sub_255C7E458();
  uint64_t v65 = *(void *)(v19 - 8);
  uint64_t v66 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v59 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v61 = (char *)&v51 - v22;
  uint64_t v23 = *(void *)(v2 + 8);
  swift_retain();
  sub_255A46CC8((uint64_t)v11);
  uint64_t v24 = *(void *)(v2 + 16);
  uint64_t v57 = v2;
  uint64_t v25 = sub_255C23448(v24);
  swift_beginAccess();
  sub_255A53C38(v23 + 80, (uint64_t)v76);
  swift_unknownObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A46DE0(v25, (uint64_t)v76, v4, v3, WitnessTable);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v4);
  uint64_t v27 = (uint64_t)v51;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v74 = WitnessTable;
  uint64_t v75 = v28;
  uint64_t v29 = swift_getWitnessTable();
  View.mcui.getter(v5, v27);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v5);
  if (qword_269F1FDC8 != -1) {
    swift_once();
  }
  uint64_t v30 = v54;
  uint64_t v31 = v56;
  MCUINamespace<A>.marqueeFeathering(_:_:)(0, qword_269F21AE0, 0, v56, v29);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v27, v31);
  swift_getKeyPath();
  uint64_t v32 = *(void *)(v57 + 32);
  char v33 = *(unsigned char *)(v57 + 40);
  sub_255A52558(v32, v33);
  uint64_t v34 = (void *)sub_255ABA458(v32, v33);
  sub_255A525AC(v32, v33);
  swift_bridgeObjectRetain();
  uint64_t v35 = v34;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v35 = sub_255C15738(0, v34[2] + 1, 1, v34);
  }
  unint64_t v37 = v35[2];
  unint64_t v36 = v35[3];
  if (v37 >= v36 >> 1) {
    uint64_t v35 = sub_255C15738((void *)(v36 > 1), v37 + 1, 1, v35);
  }
  v35[2] = v37 + 1;
  uint64_t v38 = &v35[2 * v37];
  v38[4] = 0x726564616548;
  v38[5] = 0xE600000000000000;
  swift_bridgeObjectRelease();
  v76[0] = v35;
  unint64_t v39 = sub_255A52830();
  uint64_t v72 = v29;
  unint64_t v73 = v39;
  uint64_t v40 = v62;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v58;
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v40);
  uint64_t v43 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
  uint64_t v70 = v41;
  uint64_t v71 = v43;
  uint64_t v44 = v64;
  uint64_t v45 = swift_getWitnessTable();
  char v46 = v59;
  MEMORY[0x25A295390](v45, v44, MEMORY[0x263F19C70], v45);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v44);
  uint64_t v68 = v45;
  uint64_t v69 = MEMORY[0x263F19C68];
  uint64_t v47 = v66;
  swift_getWitnessTable();
  uint64_t v48 = v61;
  sub_255A20F54(v46);
  int v49 = *(void (**)(char *, uint64_t))(v65 + 8);
  v49(v46, v47);
  sub_255A20F54(v48);
  return ((uint64_t (*)(char *, uint64_t))v49)(v48, v47);
}

uint64_t sub_255A47804@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  sub_255A55384(&qword_26B29C090, v2, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
  uint64_t v3 = sub_255C7E2B8();
  uint64_t v5 = v4;
  uint64_t v6 = sub_255C7E628();
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_255A478C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B98);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v59 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BA0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v58 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v53);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BA8);
  MEMORY[0x270FA5388](v51);
  uint64_t v10 = (double *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BB0);
  uint64_t v11 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BB8);
  MEMORY[0x270FA5388](v52);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BC0);
  MEMORY[0x270FA5388](v55);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BC8);
  MEMORY[0x270FA5388](v56);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BD0);
  MEMORY[0x270FA5388](v57);
  uint64_t v50 = (uint64_t)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_255C7EA68();
  id v22 = objc_msgSend(self, sel_currentTraitCollection);
  objc_msgSend(v22, sel_displayScale);
  double v24 = v23;

  double v25 = 1.0;
  if ((*(void *)&v24 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v26 = 1.0;
  }
  else {
    double v26 = v24;
  }
  if ((~*(void *)&v24 & 0x7FF0000000000000) != 0) {
    double v26 = v24;
  }
  if (v24 >= 1.0) {
    double v25 = v26;
  }
  *(void *)uint64_t v10 = v21;
  v10[1] = 2.0 / v25 + 4.0;
  *((unsigned char *)v10 + 16) = 0;
  uint64_t v27 = (uint64_t)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F21BD8) + 44);
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = *(void *)(a1 + 24);
  uint64_t v60 = a1;
  sub_255A47FD4(v62, v28, v29, v27);
  uint64_t v30 = *MEMORY[0x263F18D70];
  uint64_t v31 = sub_255C7E378();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v8, v30, v31);
  sub_255A55384(qword_269F21878, 255, MEMORY[0x263F18D80]);
  if ((sub_255C80578() & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_255A09998(&qword_269F21BE0, &qword_269F21BA8);
  sub_255A09998(&qword_269F21850, &qword_269F21848);
  sub_255C7F7B8();
  sub_255A095A4((uint64_t)v8, &qword_269F21848);
  sub_255A095A4((uint64_t)v10, &qword_269F21BA8);
  uint64_t v32 = (uint64_t)v58;
  uint64_t v33 = v54;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v58, v13, v54);
  uint64_t v63 = 0;
  sub_255C7FE58();
  uint64_t v34 = v64;
  uint64_t v35 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, v32, v33);
  unint64_t v36 = &v15[*(int *)(v52 + 36)];
  *(void *)unint64_t v36 = v34;
  *((void *)v36 + 1) = v35;
  sub_255A095A4(v32, &qword_269F21BA0);
  uint64_t v37 = (uint64_t)v15;
  uint64_t v15 = v59;
  sub_255A10514(v37, (uint64_t)v59, &qword_269F21BB8);
  if (qword_269F1FDD0 != -1) {
LABEL_12:
  }
    swift_once();
  uint64_t v38 = qword_269F21AE8;
  uint64_t KeyPath = swift_getKeyPath();
  sub_255A09540((uint64_t)v15, (uint64_t)v17, &qword_269F21BB8);
  uint64_t v40 = &v17[*(int *)(v55 + 36)];
  *(void *)uint64_t v40 = KeyPath;
  *((_WORD *)v40 + 4) = 256;
  *((void *)v40 + 2) = v38;
  v40[24] = 0;
  sub_255A095A4((uint64_t)v15, &qword_269F21B98);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = sub_255AC72FC((uint64_t)&unk_2704784B0);
  sub_255A09540((uint64_t)v17, (uint64_t)v19, &qword_269F21BC0);
  uint64_t v43 = (uint64_t *)&v19[*(int *)(v56 + 36)];
  uint64_t *v43 = v41;
  v43[1] = v42;
  sub_255A095A4((uint64_t)v17, &qword_269F21BC0);
  uint64_t v44 = sub_255A4A6A8();
  uint64_t v46 = v45;
  uint64_t v47 = v50;
  sub_255A09540((uint64_t)v19, v50, &qword_269F21BC8);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(v57 + 52));
  *uint64_t v48 = v44;
  v48[1] = v46;
  sub_255A095A4((uint64_t)v19, &qword_269F21BC8);
  return sub_255A10514(v47, v61, &qword_269F21BD0);
}

uint64_t sub_255A47FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BF0);
  MEMORY[0x270FA5388](v49);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BF8);
  uint64_t v9 = MEMORY[0x270FA5388](v50);
  uint64_t v52 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)&v45 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v48 = (char *)&v45 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = (uint64_t)&v45 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C00);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C08);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v47 = (uint64_t)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  double v24 = (char *)&v45 - v23;
  MEMORY[0x270FA5388](v22);
  double v26 = (char *)&v45 - v25;
  *(void *)uint64_t v18 = sub_255C7E928();
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  uint64_t v27 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F21C10) + 44)];
  uint64_t v45 = a3;
  sub_255A484D0(a1, a2, a3, v27);
  _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v28 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v28 + 40);
  uint64_t v56 = *(void *)(v28 + 32);
  uint64_t v57 = v29;
  sub_255A09998(&qword_269F21C18, &qword_269F21C00);
  sub_255A1D78C();
  sub_255C7F868();
  uint64_t v30 = (uint64_t)v26;
  sub_255A095A4((uint64_t)v18, &qword_269F21C00);
  sub_255A10514((uint64_t)v24, (uint64_t)v26, &qword_269F21C08);
  *(void *)uint64_t v8 = sub_255C7E928();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C20);
  sub_255A49AFC(a1, a2, v45, (uint64_t)&v8[*(int *)(v31 + 44)]);
  uint64_t v32 = *(void *)(a1 + 24);
  uint64_t v33 = (uint64_t *)(v32 + 56);
  swift_beginAccess();
  unint64_t v34 = *(void *)(v32 + 64);
  if (v34)
  {
    uint64_t v35 = *v33;
    unint64_t v36 = v34;
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
  }
  uint64_t v54 = v35;
  unint64_t v55 = v36;
  sub_255A09998(&qword_269F21C28, &qword_269F21BF0);
  swift_bridgeObjectRetain();
  uint64_t v37 = (uint64_t)v46;
  sub_255C7F868();
  swift_bridgeObjectRelease();
  sub_255A095A4((uint64_t)v8, &qword_269F21BF0);
  swift_beginAccess();
  uint64_t v38 = (uint64_t)v48;
  sub_255C7E3F8();
  sub_255A095A4(v37, &qword_269F21BF8);
  uint64_t v39 = v51;
  sub_255A10514(v38, v51, &qword_269F21BF8);
  uint64_t v40 = v47;
  sub_255A09540(v30, v47, &qword_269F21C08);
  uint64_t v41 = v52;
  sub_255A09540(v39, v52, &qword_269F21BF8);
  uint64_t v42 = v53;
  sub_255A09540(v40, v53, &qword_269F21C08);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C30);
  sub_255A09540(v41, v42 + *(int *)(v43 + 48), &qword_269F21BF8);
  sub_255A095A4(v39, &qword_269F21BF8);
  sub_255A095A4(v30, &qword_269F21C08);
  sub_255A095A4(v41, &qword_269F21BF8);
  return sub_255A095A4(v40, &qword_269F21C08);
}

uint64_t sub_255A484D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v101 = a3;
  uint64_t v99 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CA0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v93 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7EA18();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v85 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CA8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CB0);
  MEMORY[0x270FA5388](v85);
  uint64_t v87 = (uint64_t)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CB8);
  uint64_t v18 = MEMORY[0x270FA5388](v86);
  uint64_t v89 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v85 - v20;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CC0);
  MEMORY[0x270FA5388](v88);
  uint64_t v90 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CC8);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CD0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v96 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21CD8);
  uint64_t v26 = MEMORY[0x270FA5388](v95);
  uint64_t v98 = (uint64_t)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v94 = (uint64_t)&v85 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v97 = (uint64_t)&v85 - v30;
  if (qword_269F1FDB8 != -1) {
    swift_once();
  }
  double v31 = *(double *)&qword_269F21AD0;
  uint64_t v32 = *(void *)(a1 + 32);
  char v33 = *(unsigned char *)(a1 + 40);
  sub_255A0877C(v32, v33);
  sub_255AB99AC(v32, v33, v104);
  uint64_t v34 = sub_255A087D0(v32, v33);
  char v35 = v104[0];
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = v101;
  *(&v85 - 4) = v100;
  *(&v85 - 3) = v36;
  *(&v85 - 2) = a1;
  if (qword_26B298D90 != -1) {
    swift_once();
  }
  v104[0] = 1;
  sub_255A49968(v35, 0, 0x100000000, (uint64_t (*)(void))sub_255A53E08, &qword_269F21CA8, (uint64_t)v16, v31, *(double *)&qword_26B298D80, 3.0);
  uint64_t v37 = _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v38 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v39 = *(void *)(v38 + 48);
  uint64_t v100 = v37;
  uint64_t v101 = a1;
  swift_bridgeObjectRetain();
  sub_255ABA66C((uint64_t)v13);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F19968], v7);
  LOBYTE(v38) = sub_255C7DCB8();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v8 + 8);
  v40(v11, v7);
  v40(v13, v7);
  if (v38)
  {
    uint64_t v41 = (uint64_t)v90;
    if (qword_269F1FF00 != -1) {
      swift_once();
    }
    uint64_t v42 = qword_269F33050;
    swift_retain();
    if (*(void *)(v39 + 16)) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v42 = sub_255C7FD18();
    uint64_t v41 = (uint64_t)v90;
    if (*(void *)(v39 + 16))
    {
LABEL_9:
      uint64_t KeyPath = swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v44 = v39;
      uint64_t v45 = v42;
      goto LABEL_12;
    }
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = 0;
  uint64_t v45 = 0;
LABEL_12:
  uint64_t v46 = v87;
  sub_255A09540((uint64_t)v16, v87, &qword_269F21CA8);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v85 + 36));
  *uint64_t v47 = KeyPath;
  v47[1] = 0;
  v47[2] = v44;
  v47[3] = v45;
  v47[4] = 0;
  sub_255A095A4((uint64_t)v16, &qword_269F21CA8);
  uint64_t v48 = swift_getKeyPath();
  int v49 = _AXSInvertColorsEnabled();
  uint64_t v50 = &type metadata for DefaultMarqueeMaskStyle;
  if (!v49) {
    uint64_t v50 = &type metadata for BackdropMarqueeMaskStyle;
  }
  uint64_t v51 = &off_27048AA80;
  if (!v49) {
    uint64_t v51 = &off_27048AA78;
  }
  uint64_t v105 = v50;
  uint64_t v106 = v51;
  uint64_t v52 = (uint64_t *)&v21[*(int *)(v86 + 36)];
  sub_255A53C38((uint64_t)v104, (uint64_t)(v52 + 1));
  *uint64_t v52 = v48;
  sub_255A10514(v46, (uint64_t)v21, &qword_269F21CB0);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v104);
  uint64_t v53 = v93;
  sub_255A10514((uint64_t)v21, v93, &qword_269F21CB8);
  uint64_t v54 = v101;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v55 = (void *)sub_255C805F8();
  unsigned __int8 v56 = objc_msgSend(v55, sel__isNaturallyRTL);
  swift_bridgeObjectRelease();

  uint64_t v57 = v89;
  sub_255A09540(v53, v89, &qword_269F21CB8);
  uint64_t v58 = swift_getKeyPath();
  sub_255A09540(v57, v41, &qword_269F21CB8);
  uint64_t v59 = v41 + *(int *)(v88 + 36);
  *(void *)uint64_t v59 = v58;
  *(unsigned char *)(v59 + 8) = v56;
  sub_255A095A4(v57, &qword_269F21CB8);
  sub_255A095A4(v53, &qword_269F21CA0);
  if (qword_26B29E908 != -1) {
    swift_once();
  }
  uint64_t v60 = qword_26B29E8F8;
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = v92;
  sub_255A09540(v41, v92, &qword_269F21CC0);
  uint64_t v63 = (uint64_t *)(v62 + *(int *)(v91 + 36));
  uint64_t *v63 = v61;
  v63[1] = v60;
  swift_retain();
  sub_255A095A4(v41, &qword_269F21CC0);
  id v64 = objc_msgSend(self, sel_mainBundle);
  uint64_t v65 = sub_255B4C6B8();
  uint64_t v67 = v66;

  uint64_t v102 = v65;
  uint64_t v103 = v67;
  sub_255C806E8();
  sub_255C806E8();
  sub_255A53E1C();
  uint64_t v68 = (uint64_t)v96;
  sub_255C7F978();
  swift_bridgeObjectRelease();
  sub_255A095A4(v62, &qword_269F21CC8);
  uint64_t v69 = swift_getKeyPath();
  uint64_t v70 = v54 + *(int *)(v100 + 48);
  uint64_t v71 = *(void *)v70;
  LOBYTE(v67) = *(unsigned char *)(v70 + 8);
  sub_255A52558(*(void *)v70, v67);
  uint64_t v72 = (void *)sub_255ABA458(v71, v67);
  sub_255A525AC(v71, v67);
  swift_bridgeObjectRetain();
  unint64_t v73 = v72;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v73 = sub_255C15738(0, v72[2] + 1, 1, v72);
  }
  unint64_t v75 = v73[2];
  unint64_t v74 = v73[3];
  if (v75 >= v74 >> 1) {
    unint64_t v73 = sub_255C15738((void *)(v74 > 1), v75 + 1, 1, v73);
  }
  v73[2] = v75 + 1;
  uint64_t v76 = &v73[2 * v75];
  void v76[4] = 0x656C746954;
  void v76[5] = 0xE500000000000000;
  swift_bridgeObjectRelease();
  uint64_t v77 = v94;
  sub_255A09540(v68, v94, &qword_269F21CD0);
  uint64_t v78 = (uint64_t *)(v77 + *(int *)(v95 + 36));
  *uint64_t v78 = v69;
  v78[1] = (uint64_t)v73;
  sub_255A095A4(v68, &qword_269F21CD0);
  uint64_t v79 = v77;
  uint64_t v80 = v97;
  sub_255A10514(v79, v97, &qword_269F21CD8);
  uint64_t v81 = v98;
  sub_255A09540(v80, v98, &qword_269F21CD8);
  uint64_t v82 = v99;
  sub_255A09540(v81, v99, &qword_269F21CD8);
  uint64_t v83 = v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F21D18) + 48);
  *(void *)uint64_t v83 = 0;
  *(unsigned char *)(v83 + 8) = 0;
  sub_255A095A4(v80, &qword_269F21CD8);
  return sub_255A095A4(v81, &qword_269F21CD8);
}

uint64_t sub_255A48FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_255C7F518();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v65 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v50 - v5;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C88);
  uint64_t v6 = MEMORY[0x270FA5388](v56);
  uint64_t v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v57 = (uint64_t)&v50 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v55 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C98);
  MEMORY[0x270FA5388](v69);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21D20);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a1;
  uint64_t v17 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 40);
  v73[0] = *(void *)(v17 + 32);
  v73[1] = v18;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_255C7F548();
  uint64_t v21 = v20;
  char v23 = v22;
  if (qword_26B29E908 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_255C7F4A8();
  uint64_t v51 = v25;
  int v53 = v26;
  uint64_t v54 = v27;
  sub_255A094C0(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  if (qword_269F1FD90 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_project_value_buffer(v9, (uint64_t)qword_269F21A58);
  sub_255A09540(v28, (uint64_t)v13, &qword_269F21C90);
  uint64_t v29 = (uint64_t)v13;
  uint64_t v30 = v69;
  if (qword_269F1FDA8 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)__swift_project_value_buffer(MEMORY[0x263F1B440], (uint64_t)qword_269F21AA0);
  uint64_t v32 = v55;
  sub_255A09540(v29, v55, &qword_269F21C90);
  uint64_t v33 = v56;
  uint64_t v34 = (uint64_t)v52;
  char v35 = (uint64_t *)&v52[*(int *)(v56 + 56)];
  *char v35 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  sub_255A10514(v32, v34, &qword_269F21C90);
  *(void *)(v34 + *(int *)(v33 + 52)) = v31;
  uint64_t v36 = v57;
  sub_255A10514(v34, v57, &qword_269F21C88);
  sub_255A09540(v36, (uint64_t)&v15[*(int *)(v30 + 36)], &qword_269F21C88);
  uint64_t v37 = v51;
  *(void *)uint64_t v15 = v24;
  *((void *)v15 + 1) = v37;
  char v38 = v53 & 1;
  v15[16] = v53 & 1;
  *((void *)v15 + 3) = v54;
  swift_retain();
  sub_255A093E4(v24, v37, v38);
  swift_bridgeObjectRetain();
  sub_255A095A4(v36, &qword_269F21C88);
  sub_255A095A4(v29, &qword_269F21C90);
  sub_255A094C0(v24, v37, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = v61;
  uint64_t v40 = *(void *)v61;
  LOBYTE(v37) = *(unsigned char *)(v61 + 8);
  sub_255A0877C(*(void *)v61, v37);
  LOBYTE(v31) = sub_255ABA6A4(v40, v37);
  sub_255A087D0(v40, v37);
  uint64_t v41 = v63;
  uint64_t v42 = v62;
  uint64_t v43 = v39;
  uint64_t v44 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v43, v64);
  if (v31)
  {
    uint64_t v45 = *((void *)v42 + 3) + 80;
    swift_beginAccess();
    sub_255A53C38(v45, (uint64_t)v73);
    uint64_t v46 = v74;
    __swift_project_boxed_opaque_existential_1(v73, v74);
    uint64_t v71 = &type metadata for MetadataButtonStyle;
    unint64_t v72 = sub_255A54160();
    sub_255A4974C((uint64_t)v70, v46);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
  }
  uint64_t v47 = v65;
  sub_255C7F508();
  sub_255A540C0();
  uint64_t v48 = v58;
  sub_255C7FBC8();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v67);
  sub_255A095A4((uint64_t)v15, &qword_269F21C98);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v59 + 32))(v68, v48, v60);
}

uint64_t sub_255A4974C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C80E88();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v17[-v7 - 8];
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_255A53C38(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29C040);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    char v14 = sub_255C80578();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_255A49968@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t *a5@<X5>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v18 = (void *)(a6 + v17[14]);
  sub_255C7FE58();
  *uint64_t v18 = v27;
  v18[1] = v28;
  uint64_t v19 = a6 + v17[15];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a6 + v17[16];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = a6 + v17[17];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  *(unsigned char *)(v21 + 32) = 0;
  uint64_t v22 = a6 + v17[18];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(unsigned char *)(v22 + 8) = 0;
  uint64_t v23 = a6 + v17[19];
  *(void *)uint64_t v23 = swift_getKeyPath();
  *(unsigned char *)(v23 + 8) = 0;
  *(double *)(a6 + v17[9]) = a7;
  *(double *)(a6 + v17[10]) = a8;
  *(double *)(a6 + v17[11]) = a9;
  *(unsigned char *)(a6 + v17[12]) = a1;
  uint64_t v24 = a6 + v17[13];
  *(void *)uint64_t v24 = a2;
  *(_DWORD *)(v24 + 8) = a3;
  *(unsigned char *)(v24 + 12) = BYTE4(a3) & 1;
  uint64_t result = a4();
  uint64_t v26 = a6 + v17[20];
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  return result;
}

uint64_t sub_255A49AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v73 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C38);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v74 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C40);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C48);
  uint64_t v12 = MEMORY[0x270FA5388](v72);
  uint64_t v65 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v65 - v14;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C50);
  MEMORY[0x270FA5388](v68);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C58);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v71 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C60);
  uint64_t v20 = MEMORY[0x270FA5388](v70);
  uint64_t v67 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v69 = (uint64_t)&v65 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v66 = (char *)&v65 - v24;
  if (qword_269F1FDB8 != -1) {
    swift_once();
  }
  double v25 = *(double *)&qword_269F21AD0;
  uint64_t v26 = *(void *)(a1 + 32);
  char v27 = *(unsigned char *)(a1 + 40);
  sub_255A0877C(v26, v27);
  sub_255AB99AC(v26, v27, v77);
  uint64_t v28 = sub_255A087D0(v26, v27);
  char v29 = v77[0];
  MEMORY[0x270FA5388](v28);
  *(&v65 - 4) = a2;
  *(&v65 - 3) = a3;
  *(&v65 - 2) = a1;
  if (qword_26B298D90 != -1) {
    swift_once();
  }
  v77[0] = 1;
  sub_255A49968(v29, 0, 0x100000000, (uint64_t (*)(void))sub_255A53C2C, &qword_269F21C40, (uint64_t)v11, v25, *(double *)&qword_26B298D80, 3.0);
  uint64_t KeyPath = swift_getKeyPath();
  int v31 = _AXSInvertColorsEnabled();
  uint64_t v32 = &type metadata for DefaultMarqueeMaskStyle;
  if (!v31) {
    uint64_t v32 = &type metadata for BackdropMarqueeMaskStyle;
  }
  uint64_t v33 = &off_27048AA80;
  if (!v31) {
    uint64_t v33 = &off_27048AA78;
  }
  uint64_t v78 = v32;
  uint64_t v79 = v33;
  uint64_t v34 = (uint64_t *)&v15[*(int *)(v72 + 36)];
  sub_255A53C38((uint64_t)v77, (uint64_t)(v34 + 1));
  *uint64_t v34 = KeyPath;
  sub_255A10514((uint64_t)v11, (uint64_t)v15, &qword_269F21C40);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
  sub_255A10514((uint64_t)v15, v74, &qword_269F21C48);
  uint64_t v35 = _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v72 = a1;
  uint64_t v36 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v36 + 64)
    && (swift_bridgeObjectRetain(),
        uint64_t v37 = (void *)sub_255C805F8(),
        unsigned __int8 v38 = objc_msgSend(v37, sel__isNaturallyRTL),
        swift_bridgeObjectRelease(),
        v37,
        (v38 & 1) != 0))
  {
    uint64_t v39 = v35;
    char v40 = 1;
  }
  else
  {
    uint64_t v39 = v35;
    char v40 = 0;
  }
  uint64_t v42 = (uint64_t)v66;
  uint64_t v41 = (uint64_t)v67;
  uint64_t v43 = v65;
  uint64_t v44 = v74;
  sub_255A09540(v74, v65, &qword_269F21C48);
  uint64_t v45 = swift_getKeyPath();
  sub_255A09540(v43, (uint64_t)v17, &qword_269F21C48);
  uint64_t v46 = &v17[*(int *)(v68 + 36)];
  *(void *)uint64_t v46 = v45;
  v46[8] = v40;
  sub_255A095A4(v43, &qword_269F21C48);
  sub_255A095A4(v44, &qword_269F21C38);
  id v47 = objc_msgSend(self, sel_mainBundle);
  uint64_t v48 = sub_255B4C6B8();
  uint64_t v50 = v49;

  uint64_t v75 = v48;
  uint64_t v76 = v50;
  sub_255C806E8();
  sub_255C806E8();
  sub_255A53CA4();
  uint64_t v51 = (uint64_t)v71;
  sub_255C7F978();
  swift_bridgeObjectRelease();
  sub_255A095A4((uint64_t)v17, &qword_269F21C50);
  uint64_t v52 = swift_getKeyPath();
  uint64_t v53 = v72 + *(int *)(v39 + 48);
  uint64_t v54 = *(void *)v53;
  LOBYTE(v50) = *(unsigned char *)(v53 + 8);
  sub_255A52558(*(void *)v53, v50);
  uint64_t v55 = (void *)sub_255ABA458(v54, v50);
  sub_255A525AC(v54, v50);
  swift_bridgeObjectRetain();
  uint64_t v56 = v55;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v56 = sub_255C15738(0, v55[2] + 1, 1, v55);
  }
  unint64_t v58 = v56[2];
  unint64_t v57 = v56[3];
  if (v58 >= v57 >> 1) {
    uint64_t v56 = sub_255C15738((void *)(v57 > 1), v58 + 1, 1, v56);
  }
  v56[2] = v58 + 1;
  uint64_t v59 = &v56[2 * v58];
  v59[4] = 0x656C746974627553;
  v59[5] = 0xE800000000000000;
  swift_bridgeObjectRelease();
  uint64_t v60 = v69;
  sub_255A09540(v51, v69, &qword_269F21C58);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v70 + 36));
  *uint64_t v61 = v52;
  v61[1] = (uint64_t)v56;
  sub_255A095A4(v51, &qword_269F21C58);
  sub_255A10514(v60, v42, &qword_269F21C60);
  sub_255A09540(v42, v41, &qword_269F21C60);
  uint64_t v62 = v73;
  sub_255A09540(v41, v73, &qword_269F21C60);
  uint64_t v63 = v62 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F21C80) + 48);
  *(void *)uint64_t v63 = 0;
  *(unsigned char *)(v63 + 8) = 0;
  sub_255A095A4(v42, &qword_269F21C60);
  return sub_255A095A4(v41, &qword_269F21C60);
}

uint64_t sub_255A4A268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C88);
  uint64_t v3 = MEMORY[0x270FA5388](v43);
  uint64_t v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v44 = (uint64_t)&v39 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v40 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C98);
  MEMORY[0x270FA5388](v41);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23MarqueeTitleAndSubtitleVMa();
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = (uint64_t *)(v13 + 56);
  swift_beginAccess();
  unint64_t v15 = *(void *)(v13 + 64);
  if (v15)
  {
    uint64_t v16 = *v14;
    unint64_t v17 = v15;
  }
  else
  {
    unint64_t v17 = 0xE100000000000000;
    uint64_t v16 = 32;
  }
  uint64_t v46 = v10;
  uint64_t v47 = v16;
  unint64_t v48 = v17;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_255C7F548();
  uint64_t v20 = v19;
  char v22 = v21;
  if (qword_26B29E8F0 != -1) {
    swift_once();
  }
  char v23 = v22 & 1;
  uint64_t v24 = sub_255C7F4A8();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v39 = v29;
  sub_255A094C0(v18, v20, v23);
  swift_bridgeObjectRelease();
  if (qword_269F1FD98 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_project_value_buffer(v6, (uint64_t)qword_269F21A70);
  uint64_t v31 = (uint64_t)v46;
  sub_255A09540(v30, (uint64_t)v46, &qword_269F21C90);
  if (qword_269F1FDB0 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)__swift_project_value_buffer(MEMORY[0x263F1B440], (uint64_t)qword_269F21AB8);
  uint64_t v33 = v40;
  sub_255A09540(v31, v40, &qword_269F21C90);
  uint64_t v35 = (uint64_t)v42;
  uint64_t v34 = v43;
  uint64_t v36 = (uint64_t *)&v42[*(int *)(v43 + 56)];
  *uint64_t v36 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  sub_255A10514(v33, v35, &qword_269F21C90);
  *(void *)(v35 + *(int *)(v34 + 52)) = v32;
  uint64_t v37 = v44;
  sub_255A10514(v35, v44, &qword_269F21C88);
  sub_255A09540(v37, (uint64_t)&v12[*(int *)(v41 + 36)], &qword_269F21C88);
  *(void *)uint64_t v12 = v24;
  *((void *)v12 + 1) = v26;
  v12[16] = v28 & 1;
  *((void *)v12 + 3) = v39;
  swift_retain();
  sub_255A093E4(v24, v26, v28 & 1);
  swift_bridgeObjectRetain();
  sub_255A095A4(v37, &qword_269F21C88);
  sub_255A095A4((uint64_t)v46, &qword_269F21C90);
  sub_255A094C0(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  return sub_255A10514((uint64_t)v12, v45, &qword_269F21C98);
}

uint64_t sub_255A4A6A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21BE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_255C855F0;
  uint64_t v2 = *(void **)(v0 + 24);
  swift_beginAccess();
  uint64_t v4 = v2[4];
  uint64_t v3 = v2[5];
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v3;
  swift_beginAccess();
  uint64_t v6 = v2[7];
  uint64_t v5 = v2[8];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_255C15738(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  unint64_t v10 = v9 + 1;
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_255C15738((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  void v7[2] = v10;
  uint64_t v11 = &v7[2 * v9];
  v11[4] = v4;
  v11[5] = v3;
  if (v5)
  {
    unint64_t v12 = v7[3];
    swift_bridgeObjectRetain();
    if (v10 >= v12 >> 1) {
      uint64_t v7 = sub_255C15738((void *)(v12 > 1), v9 + 2, 1, v7);
    }
    void v7[2] = v9 + 2;
    uint64_t v13 = &v7[2 * v10];
    v13[4] = v6;
    v13[5] = v5;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE80);
  sub_255A09998((unint64_t *)&qword_26B29BE88, &qword_26B29BE80);
  uint64_t v14 = sub_255C80538();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t static MetadataAutomaticStyle.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_255A4A878()
{
  return 1;
}

uint64_t static MetadataButtonStyle.== infix(_:_:)()
{
  return 1;
}

uint64_t MetadataStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v55 = a1;
  uint64_t v57 = a3;
  swift_getWitnessTable();
  uint64_t v6 = sub_255C7EC98();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = sub_255C7E4C8();
  uint64_t v54 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v52 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_255C7FEB8();
  uint64_t v50 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v48 = (char *)&v46 - v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_255A55384(&qword_269F217E8, 255, MEMORY[0x263F18FD0]);
  *(void *)&long long v62 = v13;
  *((void *)&v62 + 1) = v11;
  uint64_t v56 = v11;
  uint64_t v61 = v15;
  *(void *)&long long v63 = v15;
  *((void *)&v63 + 1) = v16;
  uint64_t v59 = v16;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v49 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v47 = (char *)&v46 - v21;
  uint64_t v22 = sub_255C7EBE8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v60 = (char *)&v46 - v24;
  sub_255A53C38(v4 + 8, (uint64_t)v67);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29C040);
  if (swift_dynamicCast())
  {
    (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(&v62, v4, a2);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = *(void *)(a2 + 24);
    *(void *)(v25 + 16) = *(void *)(a2 + 16);
    *(void *)(v25 + 24) = v26;
    long long v27 = v63;
    *(_OWORD *)(v25 + 32) = v62;
    *(_OWORD *)(v25 + 48) = v27;
    *(_OWORD *)(v25 + 64) = v64;
    MEMORY[0x270FA5388](v25);
    *(&v46 - 4) = v28;
    *(&v46 - 3) = v29;
    *(&v46 - 2) = v55;
    uint64_t v30 = v48;
    sub_255C7FEA8();
    uint64_t v31 = v52;
    sub_255C7E4B8();
    uint64_t v32 = v56;
    uint64_t v55 = v6;
    uint64_t v33 = v23;
    uint64_t v34 = v22;
    uint64_t v35 = v59;
    uint64_t v36 = v61;
    sub_255C7F638();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v32);
    uint64_t v37 = v32;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v13);
    *(void *)&long long v62 = v13;
    *((void *)&v62 + 1) = v32;
    uint64_t v38 = v35;
    uint64_t v22 = v34;
    uint64_t v23 = v33;
    *(void *)&long long v63 = v36;
    *((void *)&v63 + 1) = v38;
    swift_getOpaqueTypeConformance2();
    uint64_t v39 = v47;
    sub_255A20F54(v20);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v49 + 8);
    v40(v20, OpaqueTypeMetadata2);
    sub_255A20F54(v39);
    uint64_t v41 = WitnessTable;
    sub_255A44030((uint64_t)v20, OpaqueTypeMetadata2);
    v40(v20, OpaqueTypeMetadata2);
    v40(v39, OpaqueTypeMetadata2);
  }
  else
  {
    uint64_t v41 = WitnessTable;
    sub_255A20F54(v55);
    uint64_t v42 = (uint64_t)v51;
    sub_255A20F54(v10);
    uint64_t v37 = v56;
    *(void *)&long long v62 = v13;
    *((void *)&v62 + 1) = v56;
    *(void *)&long long v63 = v61;
    *((void *)&v63 + 1) = v59;
    swift_getOpaqueTypeConformance2();
    sub_255A44128(v42, OpaqueTypeMetadata2, v6);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v43(v42, v6);
    v43((uint64_t)v10, v6);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
  *(void *)&long long v62 = v13;
  *((void *)&v62 + 1) = v37;
  *(void *)&long long v63 = v61;
  *((void *)&v63 + 1) = v59;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = v41;
  swift_getWitnessTable();
  uint64_t v44 = v60;
  sub_255A20F54(v60);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v44, v22);
}

uint64_t sub_255A4B028()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);

  return swift_deallocObject();
}

uint64_t sub_255A4B068()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 272))(*(void *)(v0 + 16));
}

uint64_t sub_255A4B0A0(uint64_t a1)
{
  type metadata accessor for MetadataStyleModifier();
  swift_getWitnessTable();
  uint64_t v2 = sub_255C7EC98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - v4;
  swift_getWitnessTable();
  sub_255A20F54(a1);
  sub_255A20F54(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_255A4B1DC()
{
  return sub_255A4B0A0(*(void *)(v0 + 32));
}

void static NowPlayingGeometryIdentifier.metadataEyebrow.getter(void *a1@<X8>)
{
  *a1 = 0x776F7262657965;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_255A4B208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v76 = sub_255C7E378();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B870);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298410);
  uint64_t v73 = a1;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v65 = *(void *)(a1 + 16);
  uint64_t v72 = v4;
  _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC50);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298420);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB90);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BE20);
  sub_255C7EBE8();
  sub_255C7EBE8();
  sub_255C7FD58();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCF0);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB60);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD50);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v5 = sub_255C7FF98();
  uint64_t v69 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v50 - v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v8 = sub_255A12A3C();
  *(void *)&long long v82 = v5;
  *((void *)&v82 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
  *(void *)&long long v83 = WitnessTable;
  *((void *)&v83 + 1) = v8;
  uint64_t v53 = WitnessTable;
  unint64_t v9 = v8;
  unint64_t v52 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v71 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v55 = (char *)&v50 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BF50);
  *(void *)&long long v82 = v5;
  *((void *)&v82 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
  *(void *)&long long v83 = WitnessTable;
  *((void *)&v83 + 1) = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v14 = sub_255A53964();
  uint64_t v58 = OpaqueTypeMetadata2;
  *(void *)&long long v82 = OpaqueTypeMetadata2;
  *((void *)&v82 + 1) = v12;
  uint64_t v15 = v12;
  uint64_t v61 = v12;
  *(void *)&long long v83 = OpaqueTypeConformance2;
  *((void *)&v83 + 1) = v14;
  uint64_t v60 = OpaqueTypeConformance2;
  unint64_t v59 = v14;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v64 = v16;
  uint64_t v70 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v57 = (char *)&v50 - v17;
  *(void *)&long long v82 = OpaqueTypeMetadata2;
  *((void *)&v82 + 1) = v15;
  *(void *)&long long v83 = OpaqueTypeConformance2;
  *((void *)&v83 + 1) = v14;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v82 = v16;
  *((void *)&v82 + 1) = v63;
  uint64_t v66 = MEMORY[0x263F1AB40];
  uint64_t v67 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v67);
  uint64_t v56 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  long long v62 = (char *)&v50 - v20;
  sub_255C7EA68();
  uint64_t v21 = v65;
  uint64_t v78 = v65;
  uint64_t v22 = v72;
  uint64_t v79 = v72;
  uint64_t v23 = v54;
  uint64_t v80 = v54;
  sub_255C7FF88();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 + 32);
  LOBYTE(v14) = *(unsigned char *)(v23 + 40);
  sub_255A0877C(v25, v14);
  sub_255AB99AC(v25, v14, v81);
  sub_255A087D0(v25, v14);
  char v88 = v81[0];
  uint64_t v26 = v73;
  long long v27 = *(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16);
  v27(&v82, v24, v73);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v21;
  *(void *)(v28 + 24) = v22;
  long long v29 = *(_OWORD *)v87;
  *(_OWORD *)(v28 + 96) = v86;
  *(_OWORD *)(v28 + 112) = v29;
  *(_OWORD *)(v28 + 121) = *(_OWORD *)&v87[9];
  long long v30 = v83;
  *(_OWORD *)(v28 + 32) = v82;
  *(_OWORD *)(v28 + 48) = v30;
  long long v31 = v85;
  *(_OWORD *)(v28 + 64) = v84;
  *(_OWORD *)(v28 + 80) = v31;
  uint64_t v32 = v55;
  uint64_t v33 = v51;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v33, v5);
  sub_255ABA8A8((uint64_t)v81);
  v27(&v82, v24, v26);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v21;
  *(void *)(v34 + 24) = v22;
  long long v35 = *(_OWORD *)v87;
  *(_OWORD *)(v34 + 96) = v86;
  *(_OWORD *)(v34 + 112) = v35;
  *(_OWORD *)(v34 + 121) = *(_OWORD *)&v87[9];
  long long v36 = v83;
  *(_OWORD *)(v34 + 32) = v82;
  *(_OWORD *)(v34 + 48) = v36;
  long long v37 = v85;
  *(_OWORD *)(v34 + 64) = v84;
  *(_OWORD *)(v34 + 80) = v37;
  uint64_t v38 = v57;
  uint64_t v39 = v58;
  sub_255C7FB38();
  swift_release();
  sub_255A095A4((uint64_t)v81, (uint64_t *)&unk_26B29BF50);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v32, v39);
  uint64_t v40 = v75;
  uint64_t v41 = v74;
  uint64_t v42 = v76;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, *MEMORY[0x263F18D10], v76);
  uint64_t v43 = v56;
  uint64_t v44 = v64;
  uint64_t v45 = v63;
  sub_255C7F7A8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v44);
  *(void *)&long long v82 = v44;
  *((void *)&v82 + 1) = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v62;
  uint64_t v47 = v67;
  sub_255A20F54(v43);
  unint64_t v48 = *(void (**)(char *, uint64_t))(v68 + 8);
  v48(v43, v47);
  sub_255A20F54(v46);
  return ((uint64_t (*)(char *, uint64_t))v48)(v46, v47);
}

uint64_t sub_255A4BC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v224 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298420);
  uint64_t v225 = a2;
  uint64_t v226 = a3;
  uint64_t v7 = _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa();
  uint64_t v8 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB90);
  uint64_t v238 = v8;
  uint64_t v9 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  uint64_t v242 = v9;
  uint64_t v10 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC50);
  uint64_t v240 = v10;
  uint64_t v11 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BE20);
  uint64_t v239 = v11;
  uint64_t v243 = sub_255C7EBE8();
  uint64_t v244 = sub_255C7EBE8();
  uint64_t v12 = sub_255C7FD58();
  uint64_t v196 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v195 = &v190[-v13];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCF0);
  uint64_t v245 = v12;
  uint64_t v14 = sub_255C7E458();
  uint64_t v199 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v197 = &v190[-v15];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB60);
  uint64_t v241 = v14;
  uint64_t v16 = sub_255C7E458();
  uint64_t v200 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v198 = &v190[-v17];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD50);
  uint64_t v237 = v16;
  uint64_t v18 = sub_255C7E458();
  uint64_t v205 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v201 = &v190[-v19];
  uint64_t v20 = sub_255C7E458();
  uint64_t v206 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v203 = &v190[-v21];
  sub_255C7F0D8();
  uint64_t v247 = v20;
  uint64_t v22 = sub_255C7E458();
  uint64_t v218 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v202 = &v190[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v23);
  uint64_t v204 = &v190[-v25];
  uint64_t v227 = v26;
  uint64_t v223 = sub_255C80E88();
  uint64_t v220 = *(void *)(v223 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v223);
  v235 = &v190[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v27);
  v234 = &v190[-v29];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298410);
  uint64_t v231 = v7;
  uint64_t v31 = sub_255C7E458();
  uint64_t v32 = sub_255C7E458();
  uint64_t v229 = type metadata accessor for MCUINamespace();
  uint64_t v214 = *(void *)(v229 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v229);
  uint64_t v213 = &v190[-v34];
  uint64_t v230 = v30;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  long long v37 = &v190[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v211 = *(void *)(v31 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v210 = &v190[-v39];
  uint64_t v212 = *(void *)(v32 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v42 = &v190[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v40);
  uint64_t v44 = &v190[-v43];
  uint64_t v209 = v32;
  uint64_t v45 = sub_255C7E458();
  uint64_t v217 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  unint64_t v215 = &v190[-v46];
  uint64_t v228 = v47;
  uint64_t v48 = sub_255C7E458();
  uint64_t v232 = *(void *)(v48 - 8);
  uint64_t v233 = v48;
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  v222 = &v190[-((v50 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v216 = &v190[-v52];
  MEMORY[0x270FA5388](v51);
  v249 = &v190[-v53];
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B870);
  uint64_t v54 = MEMORY[0x270FA5388](v219);
  v221 = &v190[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v54);
  v248 = &v190[-v56];
  uint64_t v246 = a1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_31;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  swift_release();
  id v57 = v326;
  uint64_t v236 = v18;
  uint64_t v58 = v246;
  unint64_t v207 = v42;
  uint64_t v208 = v37;
  if (!v326) {
    goto LABEL_5;
  }
  if (objc_msgSend(v326, sel_isDeviceRoute))
  {

LABEL_5:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B868);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v248, 1, 1, v59);
    goto LABEL_11;
  }
  uint64_t v193 = v44;
  uint64_t v194 = v31;
  id v60 = objc_msgSend(v57, sel_routeName);
  sub_255C80628();

  uint64_t v61 = (void *)sub_255C80678();
  uint64_t v63 = v62;
  swift_bridgeObjectRelease();
  id v326 = v61;
  v327 = v63;
  sub_255A1D78C();
  uint64_t v64 = sub_255C7F548();
  uint64_t v66 = v65;
  char v68 = v67;
  if (qword_269F1FDD8 != -1) {
    swift_once();
  }
  uint64_t v69 = sub_255C7F4A8();
  uint64_t v71 = v70;
  char v73 = v72;
  sub_255A094C0(v64, v66, v68 & 1);
  swift_bridgeObjectRelease();
  if (qword_269F1FDE0 != -1) {
    swift_once();
  }
  id v326 = (id)qword_269F21AF8;
  swift_retain();
  uint64_t v74 = sub_255C7F468();
  uint64_t v75 = v69;
  uint64_t v76 = (void *)v74;
  uint64_t v78 = v77;
  uint64_t v192 = v77;
  uint64_t v80 = v79;
  char v82 = v81 & 1;
  int v191 = v81 & 1;
  sub_255A094C0(v75, v71, v73 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  id v326 = v76;
  v327 = (unsigned char *)v78;
  LOBYTE(v328) = v82;
  uint64_t v329 = v80;
  uint64_t v330 = KeyPath;
  uint64_t v331 = 1;
  char v332 = 0;
  id v84 = objc_msgSend(self, sel_mainBundle);
  uint64_t v85 = sub_255B4C6B8();
  uint64_t v87 = v86;

  *(void *)&long long v323 = v85;
  *((void *)&v323 + 1) = v87;
  sub_255C806E8();
  sub_255C806E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B748);
  sub_255A53AF4();
  char v88 = v248;
  sub_255C7F978();

  swift_bridgeObjectRelease();
  sub_255A094C0((uint64_t)v76, v192, v191);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B868);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v88, 0, 1, v89);
  uint64_t v58 = v246;
  uint64_t v44 = v193;
  uint64_t v31 = v194;
LABEL_11:
  uint64_t v90 = *(void *)(v58 + 8);
  uint64_t v91 = swift_beginAccess();
  char v92 = *(unsigned char *)(v90 + 81);
  MEMORY[0x270FA5388](v91);
  if (qword_26B298DA0 != -1) {
    swift_once();
  }
  double v93 = *(double *)&qword_26B298D98;
  if (qword_26B298D90 != -1) {
    swift_once();
  }
  LOBYTE(v326) = 1;
  uint64_t v94 = (uint64_t)v208;
  sub_255A49968(v92, 0, 0x100000000, (uint64_t (*)(void))sub_255A53A50, &qword_26B298410, (uint64_t)v208, v93, *(double *)&qword_26B298D80, 3.0);
  uint64_t v95 = sub_255A09998(&qword_26B298408, &qword_26B298410);
  uint64_t v96 = v210;
  MEMORY[0x25A295390](v95, v230, v231, v95);
  sub_255A095A4(v94, &qword_26B298410);
  uint64_t v97 = *(void *)(v58 + 8);
  swift_beginAccess();
  uint64_t v98 = *(unsigned char **)(v97 + 24);
  id v326 = *(id *)(v97 + 16);
  v327 = v98;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v339 = v95;
  uint64_t v340 = WitnessTable;
  uint64_t v230 = WitnessTable;
  uint64_t v100 = swift_getWitnessTable();
  sub_255A1D78C();
  uint64_t v101 = v207;
  sub_255C7F868();
  (*(void (**)(unsigned char *, uint64_t))(v211 + 8))(v96, v31);
  uint64_t v102 = v209;
  sub_255C7E448();
  uint64_t v103 = *(void (**)(unsigned char *, uint64_t))(v212 + 8);
  v103(v101, v102);
  uint64_t v104 = sub_255A55384((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v337 = v100;
  uint64_t v338 = v104;
  uint64_t v231 = v104;
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v106 = v213;
  View.mcui.getter(v102, (uint64_t)v213);
  v103(v44, v102);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v107 = (void *)sub_255C805F8();
  LOBYTE(v95) = objc_msgSend(v107, sel__isNaturallyRTL);
  swift_bridgeObjectRelease();

  LOBYTE(v326) = v95;
  uint64_t v108 = v215;
  uint64_t v109 = v229;
  MCUINamespace<A>.marqueeAnimationDirection(_:)((uint64_t)&v326, v229);
  (*(void (**)(unsigned char *, uint64_t))(v214 + 8))(v106, v109);
  swift_getKeyPath();
  uint64_t v110 = *(void *)(v58 + 96);
  LOBYTE(v103) = *(unsigned char *)(v58 + 104);
  sub_255A52558(v110, (char)v103);
  long long v111 = (void *)sub_255ABA458(v110, (char)v103);
  sub_255A525AC(v110, (char)v103);
  swift_bridgeObjectRetain();
  long long v112 = v111;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v112 = sub_255C15738(0, v111[2] + 1, 1, v111);
  }
  unint64_t v114 = v112[2];
  unint64_t v113 = v112[3];
  if (v114 >= v113 >> 1) {
    long long v112 = sub_255C15738((void *)(v113 > 1), v114 + 1, 1, v112);
  }
  v112[2] = v114 + 1;
  int v115 = &v112[2 * v114];
  v115[4] = 0xD000000000000010;
  v115[5] = 0x8000000255C9B420;
  swift_bridgeObjectRelease();
  id v326 = v112;
  uint64_t v116 = sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
  uint64_t v335 = v105;
  uint64_t v336 = v116;
  uint64_t v229 = v116;
  uint64_t v117 = v228;
  uint64_t v118 = swift_getWitnessTable();
  uint64_t v119 = v216;
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v217 + 8))(v108, v117);
  uint64_t v120 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
  uint64_t v333 = v118;
  uint64_t v334 = v120;
  uint64_t v228 = v120;
  uint64_t v121 = v233;
  unint64_t v215 = (unsigned char *)swift_getWitnessTable();
  sub_255A20F54(v119);
  v216 = *(unsigned char **)(v232 + 8);
  uint64_t v217 = v232 + 8;
  ((void (*)(unsigned char *, uint64_t))v216)(v119, v121);
  uint64_t v122 = v246;
  if (*(void *)(v246 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    swift_release();
    id v123 = v326;
    uint64_t v124 = MEMORY[0x263F1BA00];
    uint64_t v125 = v245;
    uint64_t v126 = v227;
    if (!v326 || (unsigned __int8 v127 = objc_msgSend(v326, sel_isDeviceRoute), v123, (v127 & 1) != 0))
    {
      uint64_t v128 = *(void *)(v122 + 8) + 32;
      swift_beginAccess();
      sub_255A09540(v128, (uint64_t)&v323, &qword_26B299A60);
      if (v325 != 255)
      {
        uint64_t v129 = sub_255A52494(&v323, (uint64_t)&v326);
        MEMORY[0x270FA5388](v129);
        uint64_t v271 = sub_255A09998(&qword_26B298418, &qword_26B298420);
        uint64_t v272 = v230;
        uint64_t v130 = swift_getWitnessTable();
        uint64_t v131 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
        uint64_t v269 = v130;
        uint64_t v270 = v131;
        uint64_t v267 = swift_getWitnessTable();
        uint64_t v268 = v228;
        uint64_t v265 = swift_getWitnessTable();
        uint64_t v266 = v229;
        uint64_t v132 = swift_getWitnessTable();
        uint64_t v133 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
        uint64_t v263 = v132;
        uint64_t v264 = v133;
        uint64_t v261 = swift_getWitnessTable();
        uint64_t v262 = v124;
        uint64_t v134 = swift_getWitnessTable();
        uint64_t v135 = v195;
        sub_255C7FD48();
        if (qword_26B29C058 != -1) {
          swift_once();
        }
        uint64_t v260 = v134;
        uint64_t v136 = swift_getWitnessTable();
        uint64_t v137 = v197;
        sub_255C7F9F8();
        (*(void (**)(unsigned char *, uint64_t))(v196 + 8))(v135, v125);
        if (qword_26B29C070 != -1) {
          swift_once();
        }
        *(void *)&long long v323 = qword_26B29C060;
        uint64_t v138 = sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
        uint64_t v258 = v136;
        uint64_t v259 = v138;
        uint64_t v139 = v241;
        uint64_t v140 = swift_getWitnessTable();
        uint64_t v141 = v198;
        sub_255C7F7C8();
        (*(void (**)(unsigned char *, uint64_t))(v199 + 8))(v137, v139);
        uint64_t v142 = sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
        uint64_t v256 = v140;
        uint64_t v257 = v142;
        uint64_t v143 = v237;
        uint64_t v144 = swift_getWitnessTable();
        uint64_t v145 = v201;
        sub_255C7FB98();
        (*(void (**)(unsigned char *, uint64_t))(v200 + 8))(v141, v143);
        sub_255C80208();
        uint64_t v146 = sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
        uint64_t v254 = v144;
        uint64_t v255 = v146;
        uint64_t v188 = v236;
        uint64_t v189 = swift_getWitnessTable();
        uint64_t v147 = v203;
        sub_255C7FA48();
        (*(void (**)(unsigned char *, uint64_t))(v205 + 8))(v145, v188);
        uint64_t v252 = v189;
        uint64_t v253 = MEMORY[0x263F19100];
        uint64_t v148 = v247;
        uint64_t v149 = swift_getWitnessTable();
        uint64_t v150 = v202;
        sub_255B4BFB8();
        (*(void (**)(unsigned char *, uint64_t))(v206 + 8))(v147, v148);
        uint64_t v250 = v149;
        uint64_t v251 = v231;
        uint64_t v151 = v227;
        swift_getWitnessTable();
        uint64_t v152 = v204;
        sub_255A20F54(v150);
        uint64_t v153 = v218;
        uint64_t v154 = *(void (**)(unsigned char *, uint64_t))(v218 + 8);
        v154(v150, v151);
        uint64_t v155 = (uint64_t)v235;
        sub_255A20F54(v152);
        v154(v152, v151);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v155, 0, 1, v151);
        uint64_t v156 = v234;
        sub_255A97640(v155, (uint64_t)v234);
        uint64_t v157 = v220;
        uint64_t v158 = v223;
        uint64_t v246 = *(void *)(v220 + 8);
        ((void (*)(uint64_t, uint64_t))v246)(v155, v223);
        sub_255A52464((uint64_t)&v326);
        goto LABEL_30;
      }
      sub_255A095A4((uint64_t)&v323, &qword_26B299A60);
    }
    uint64_t v159 = v124;
    uint64_t v160 = (uint64_t)v235;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v218 + 56))(v235, 1, 1, v126);
    uint64_t v321 = sub_255A09998(&qword_26B298418, &qword_26B298420);
    uint64_t v322 = v230;
    uint64_t v161 = swift_getWitnessTable();
    uint64_t v162 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
    uint64_t v319 = v161;
    uint64_t v320 = v162;
    uint64_t v317 = swift_getWitnessTable();
    uint64_t v318 = v228;
    uint64_t v315 = swift_getWitnessTable();
    uint64_t v316 = v229;
    uint64_t v163 = swift_getWitnessTable();
    uint64_t v164 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
    uint64_t v313 = v163;
    uint64_t v314 = v164;
    uint64_t v311 = swift_getWitnessTable();
    uint64_t v312 = v159;
    uint64_t v310 = swift_getWitnessTable();
    uint64_t v165 = swift_getWitnessTable();
    uint64_t v166 = sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    uint64_t v308 = v165;
    uint64_t v309 = v166;
    uint64_t v167 = swift_getWitnessTable();
    uint64_t v168 = sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
    uint64_t v306 = v167;
    uint64_t v307 = v168;
    uint64_t v169 = swift_getWitnessTable();
    uint64_t v170 = sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
    uint64_t v304 = v169;
    uint64_t v155 = v160;
    uint64_t v305 = v170;
    uint64_t v302 = swift_getWitnessTable();
    uint64_t v303 = MEMORY[0x263F19100];
    uint64_t v300 = swift_getWitnessTable();
    uint64_t v301 = v231;
    swift_getWitnessTable();
    uint64_t v156 = v234;
    sub_255A97640(v160, (uint64_t)v234);
    uint64_t v171 = v220;
    uint64_t v158 = v223;
    uint64_t v246 = *(void *)(v220 + 8);
    ((void (*)(uint64_t, uint64_t))v246)(v155, v223);
    uint64_t v157 = v171;
LABEL_30:
    uint64_t v172 = v221;
    sub_255A09540((uint64_t)v248, (uint64_t)v221, &qword_26B29B870);
    id v326 = v172;
    uint64_t v173 = v233;
    uint64_t v174 = v222;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v232 + 16))(v222, v249, v233);
    v327 = v174;
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v157 + 16))(v155, v156, v158);
    uint64_t v328 = v155;
    *(void *)&long long v323 = v219;
    *((void *)&v323 + 1) = v173;
    uint64_t v324 = v158;
    unint64_t v297 = sub_255A53A5C();
    v298 = v215;
    uint64_t v295 = sub_255A09998(&qword_26B298418, &qword_26B298420);
    uint64_t v296 = v230;
    uint64_t v175 = swift_getWitnessTable();
    uint64_t v176 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
    uint64_t v293 = v175;
    uint64_t v294 = v176;
    uint64_t v291 = swift_getWitnessTable();
    uint64_t v292 = v228;
    uint64_t v289 = swift_getWitnessTable();
    uint64_t v290 = v229;
    uint64_t v177 = swift_getWitnessTable();
    uint64_t v178 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
    uint64_t v287 = v177;
    uint64_t v288 = v178;
    uint64_t v285 = swift_getWitnessTable();
    uint64_t v286 = MEMORY[0x263F1BA00];
    uint64_t v284 = swift_getWitnessTable();
    uint64_t v179 = swift_getWitnessTable();
    uint64_t v180 = sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    uint64_t v282 = v179;
    uint64_t v283 = v180;
    uint64_t v181 = swift_getWitnessTable();
    uint64_t v182 = sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
    uint64_t v280 = v181;
    uint64_t v281 = v182;
    uint64_t v183 = swift_getWitnessTable();
    uint64_t v184 = sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
    uint64_t v278 = v183;
    uint64_t v279 = v184;
    uint64_t v276 = swift_getWitnessTable();
    uint64_t v277 = MEMORY[0x263F19100];
    uint64_t v274 = swift_getWitnessTable();
    uint64_t v275 = v231;
    uint64_t v273 = swift_getWitnessTable();
    uint64_t v299 = swift_getWitnessTable();
    sub_255AF64A0((uint64_t)&v326, 3uLL, (uint64_t)&v323);
    uint64_t v185 = (void (*)(unsigned char *, uint64_t))v246;
    ((void (*)(unsigned char *, uint64_t))v246)(v234, v158);
    uint64_t v186 = (void (*)(unsigned char *, uint64_t))v216;
    ((void (*)(unsigned char *, uint64_t))v216)(v249, v173);
    sub_255A095A4((uint64_t)v248, &qword_26B29B870);
    v185(v235, v158);
    v186(v174, v173);
    return sub_255A095A4((uint64_t)v172, &qword_26B29B870);
  }
LABEL_31:
  type metadata accessor for NowPlayingRouteObserver();
  sub_255A55384(&qword_26B29AA00, 255, (void (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

uint64_t sub_255A4DC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_255C7E378();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  long long v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B868);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 8);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v43 = *(void *)(v7 + 16);
  uint64_t v44 = v8;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_255C7F548();
  uint64_t v11 = v10;
  char v13 = v12;
  if (qword_26B2990E0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_255C7F4A8();
  uint64_t v16 = v15;
  char v18 = v17;
  sub_255A094C0(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  if (qword_26B299098 != -1) {
    swift_once();
  }
  char v19 = v18 & 1;
  uint64_t v43 = qword_26B299088;
  swift_retain();
  uint64_t v20 = sub_255C7F468();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_255A094C0(v14, v16, v19);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = v20;
  uint64_t v44 = v22;
  char v45 = v26;
  uint64_t v46 = v24;
  uint64_t v47 = KeyPath;
  uint64_t v48 = 1;
  char v49 = 0;
  id v28 = objc_msgSend(self, sel_mainBundle);
  uint64_t v29 = sub_255B4C6B8();
  uint64_t v31 = v30;

  uint64_t v41 = v29;
  uint64_t v42 = v31;
  sub_255C806E8();
  sub_255C806E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B748);
  sub_255A53AF4();
  sub_255C7F978();
  swift_bridgeObjectRelease();
  sub_255A094C0(v20, v22, v26);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = v39;
  uint64_t v32 = v40;
  uint64_t v34 = v37;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v37, *MEMORY[0x263F18D10], v40);
  sub_255A55150(&qword_26B29B860, &qword_26B29B868, (void (*)(void))sub_255A53AF4);
  sub_255C7F7A8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  return sub_255A095A4((uint64_t)v6, &qword_26B29B868);
}

uint64_t sub_255A4E008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v133 = a2;
  uint64_t v145 = a3;
  uint64_t v146 = (char *)a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298420);
  uint64_t v149 = _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa();
  uint64_t v4 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB90);
  uint64_t v5 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29D398);
  uint64_t v6 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC50);
  uint64_t v7 = sub_255C7E458();
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BE20);
  uint64_t v8 = sub_255C7EBE8();
  uint64_t v141 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v140 = (char *)&v122 - v9;
  uint64_t v10 = type metadata accessor for MCUINamespace();
  uint64_t v137 = *(void *)(v10 - 8);
  uint64_t v138 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v131 = (char *)&v122 - v12;
  uint64_t v134 = v3;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = v4;
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = (char *)&v122 - v17;
  uint64_t v150 = v5;
  uint64_t v135 = *(void *)(v5 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v122 - v20;
  uint64_t v152 = v6;
  uint64_t v136 = *(void *)(v6 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v122 - v23;
  uint64_t v143 = v7;
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v22);
  id v28 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v122 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v122 - v32;
  uint64_t v144 = v8;
  uint64_t v34 = sub_255C7EBE8();
  uint64_t v147 = *(void *)(v34 - 8);
  uint64_t v148 = v34;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v122 - v35;
  sub_255A524CC((uint64_t)v146, (uint64_t)v199);
  uint64_t v142 = v36;
  if (v202)
  {
    if (v202 == 1)
    {
      v175[0] = v199[0];
      v175[1] = v199[1];
      long long v37 = v201;
      uint64_t v176 = v200;
      sub_255A53BA8((uint64_t)v175, (uint64_t)v174);
      uint64_t v173 = v37;
      uint64_t v38 = sub_255A09998(&qword_26B298418, &qword_26B298420);
      swift_retain();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v171 = v38;
      uint64_t v172 = WitnessTable;
      uint64_t v40 = swift_getWitnessTable();
      uint64_t v41 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
      uint64_t v169 = v40;
      uint64_t v170 = v41;
      uint64_t v42 = swift_getWitnessTable();
      uint64_t v43 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
      uint64_t v167 = v42;
      uint64_t v168 = v43;
      uint64_t v44 = swift_getWitnessTable();
      uint64_t v45 = sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
      uint64_t v165 = v44;
      uint64_t v166 = v45;
      uint64_t v46 = v143;
      uint64_t v47 = swift_getWitnessTable();
      uint64_t v48 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
      uint64_t v49 = (uint64_t)v140;
      sub_255A44128((uint64_t)&v173, v46, v139);
      uint64_t v163 = v47;
      uint64_t v164 = v48;
      uint64_t v50 = v144;
      swift_getWitnessTable();
      uint64_t v51 = v142;
      sub_255A44030(v49, v50);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v49, v50);
      sub_255A095A4((uint64_t)&v173, (uint64_t *)&unk_26B29BE20);
      sub_255A52504((uint64_t)v175);
    }
    else
    {
      if (qword_26B29B3F0 != -1) {
        swift_once();
      }
      uint64_t v93 = sub_255C7D898();
      __swift_project_value_buffer(v93, (uint64_t)qword_26B2AA4E8);
      uint64_t v94 = sub_255C7D878();
      os_log_type_t v95 = sub_255C80BE8();
      BOOL v96 = os_log_type_enabled(v94, v95);
      uint64_t v97 = v144;
      if (v96)
      {
        uint64_t v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v98 = 0;
        _os_log_impl(&dword_255A00000, v94, v95, "Mini player metadata should never have type .copy. Falling back to primary subtitle.", v98, 2u);
        MEMORY[0x25A297C00](v98, -1, -1);
      }

      uint64_t v99 = sub_255A09998(&qword_26B298418, &qword_26B298420);
      uint64_t v100 = swift_getWitnessTable();
      uint64_t v197 = v99;
      uint64_t v198 = v100;
      uint64_t v101 = swift_getWitnessTable();
      uint64_t v102 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
      uint64_t v195 = v101;
      uint64_t v196 = v102;
      uint64_t v103 = swift_getWitnessTable();
      uint64_t v104 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
      uint64_t v193 = v103;
      uint64_t v194 = v104;
      uint64_t v105 = swift_getWitnessTable();
      uint64_t v106 = sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
      uint64_t v191 = v105;
      uint64_t v192 = v106;
      uint64_t v107 = swift_getWitnessTable();
      uint64_t v108 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
      uint64_t v189 = v107;
      uint64_t v190 = v108;
      uint64_t v109 = swift_getWitnessTable();
      uint64_t v51 = v142;
      sub_255A44128(v109, v97, MEMORY[0x263F1BA08]);
    }
  }
  else
  {
    id v123 = v15;
    uint64_t v124 = v18;
    uint64_t v146 = v21;
    uint64_t v126 = v24;
    unsigned __int8 v127 = v31;
    uint64_t v128 = v28;
    uint64_t v129 = v33;
    uint64_t v52 = (uint64_t)v131;
    long long v53 = v199[0];
    uint64_t v54 = v133;
    uint64_t v55 = *(void *)(v133 + 8);
    swift_beginAccess();
    char v56 = *(unsigned char *)(v55 + 81);
    uint64_t v57 = qword_26B298DA0;
    swift_bridgeObjectRetain();
    if (v57 != -1) {
      swift_once();
    }
    uint64_t v130 = v25;
    double v58 = *(double *)&qword_26B298D98;
    uint64_t v59 = (uint64_t)v123;
    if (qword_26B298D90 != -1) {
      swift_once();
    }
    LOBYTE(v173) = 1;
    long long v125 = v53;
    sub_255BEA968(v56, 0, 0x100000000, v53, *((uint64_t *)&v53 + 1), v59, v58, *(double *)&qword_26B298D80, 3.0);
    uint64_t v60 = v59;
    uint64_t v61 = sub_255A09998(&qword_26B298418, &qword_26B298420);
    long long v62 = v124;
    MEMORY[0x25A295390](v61, v134, v149, v61);
    sub_255A095A4(v60, &qword_26B298420);
    swift_getKeyPath();
    v174[2] = &type metadata for BackdropMarqueeMaskStyle;
    v174[3] = &off_27048AA78;
    uint64_t v63 = swift_getWitnessTable();
    uint64_t v161 = v61;
    uint64_t v162 = v63;
    uint64_t v64 = v151;
    uint64_t v65 = swift_getWitnessTable();
    sub_255C7F678();
    swift_release();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v62, v64);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v173);
    swift_getKeyPath();
    uint64_t v66 = *(void *)(v54 + 96);
    LOBYTE(v62) = *(unsigned char *)(v54 + 104);
    sub_255A52558(v66, (char)v62);
    char v67 = (void *)sub_255ABA458(v66, (char)v62);
    sub_255A525AC(v66, (char)v62);
    swift_bridgeObjectRetain();
    char v68 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v68 = sub_255C15738(0, v67[2] + 1, 1, v67);
    }
    unint64_t v70 = v68[2];
    unint64_t v69 = v68[3];
    uint64_t v71 = v126;
    if (v70 >= v69 >> 1) {
      char v68 = sub_255C15738((void *)(v69 > 1), v70 + 1, 1, v68);
    }
    v68[2] = v70 + 1;
    char v72 = &v68[2 * v70];
    v72[4] = 0xD000000000000013;
    void v72[5] = 0x8000000255C9B480;
    swift_bridgeObjectRelease();
    uint64_t v173 = v68;
    uint64_t v73 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
    uint64_t v159 = v65;
    uint64_t v160 = v73;
    uint64_t v74 = v150;
    uint64_t v75 = swift_getWitnessTable();
    uint64_t v76 = (uint64_t)v146;
    sub_255C7F678();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v76, v74);
    uint64_t v77 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
    uint64_t v157 = v75;
    uint64_t v158 = v77;
    uint64_t v78 = v152;
    uint64_t v79 = v71;
    uint64_t v80 = swift_getWitnessTable();
    View.mcui.getter(v78, v52);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v79, v78);
    char v81 = (void *)sub_255C805F8();
    LOBYTE(v78) = objc_msgSend(v81, sel__isNaturallyRTL);
    swift_bridgeObjectRelease();

    LOBYTE(v173) = v78;
    char v82 = v127;
    uint64_t v83 = v138;
    MCUINamespace<A>.marqueeAnimationDirection(_:)((uint64_t)&v173, v138);
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v52, v83);
    uint64_t v84 = sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
    uint64_t v155 = v80;
    uint64_t v156 = v84;
    uint64_t v85 = v143;
    uint64_t v86 = swift_getWitnessTable();
    uint64_t v87 = v129;
    sub_255A20F54(v82);
    char v88 = *(void (**)(char *, uint64_t))(v130 + 8);
    v88(v82, v85);
    uint64_t v89 = (uint64_t)v128;
    sub_255A20F54(v87);
    uint64_t v90 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
    uint64_t v91 = (uint64_t)v140;
    sub_255A44030(v89, v85);
    v88((char *)v89, v85);
    uint64_t v153 = v86;
    uint64_t v154 = v90;
    uint64_t v92 = v144;
    swift_getWitnessTable();
    uint64_t v51 = v142;
    sub_255A44030(v91, v92);
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v91, v92);
    v88(v87, v85);
  }
  uint64_t v110 = sub_255A09998(&qword_26B298418, &qword_26B298420);
  uint64_t v111 = swift_getWitnessTable();
  uint64_t v187 = v110;
  uint64_t v188 = v111;
  uint64_t v112 = swift_getWitnessTable();
  uint64_t v113 = sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
  uint64_t v185 = v112;
  uint64_t v186 = v113;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v115 = sub_255A09998(&qword_26B29D390, (uint64_t *)&unk_26B29D398);
  uint64_t v183 = v114;
  uint64_t v184 = v115;
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v117 = sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
  uint64_t v181 = v116;
  uint64_t v182 = v117;
  uint64_t v118 = swift_getWitnessTable();
  uint64_t v119 = sub_255A09998(&qword_26B29BE18, (uint64_t *)&unk_26B29BE20);
  uint64_t v179 = v118;
  uint64_t v180 = v119;
  uint64_t v177 = swift_getWitnessTable();
  uint64_t v178 = MEMORY[0x263F1BA00];
  uint64_t v120 = v148;
  swift_getWitnessTable();
  sub_255A20F54(v51);
  return (*(uint64_t (**)(char *, uint64_t))(v147 + 8))(v51, v120);
}

void sub_255A4F0EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  sub_255A0877C(v2, v3);
  sub_255AB99AC(v2, v3, &v11);
  sub_255A087D0(v2, v3);
  if (v11 == 1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v6 = swift_getKeyPath();
    swift_retain();
    sub_255BCF994(0, v4, KeyPath, v6);
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_255C7D898();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B2AA4E8);
    oslog = sub_255C7D878();
    os_log_type_t v8 = sub_255C80C08();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_255A00000, oslog, v8, "Mini player marquee disabled (transitioning out of mini player)", v9, 2u);
      MEMORY[0x25A297C00](v9, -1, -1);
    }
  }
}

void sub_255A4F270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 32);
  char v7 = *(unsigned char *)(a3 + 40);
  sub_255A0877C(v6, v7);
  sub_255AB99AC(v6, v7, v23);
  sub_255A087D0(v6, v7);
  if ((v23[0] & 1) == 0)
  {
    uint64_t v8 = *(void *)(a3 + 8);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v10 = swift_getKeyPath();
    swift_retain();
    sub_255BCF994(1, v8, KeyPath, v10);
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_255C7D898();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B2AA4E8);
    sub_255A09540(a1, (uint64_t)v23, (uint64_t *)&unk_26B29BF50);
    sub_255A09540(a2, (uint64_t)v22, (uint64_t *)&unk_26B29BF50);
    uint64_t v12 = sub_255C7D878();
    os_log_type_t v13 = sub_255C80C08();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      sub_255A09540((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_26B29BF50);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29BF50);
      uint64_t v16 = sub_255C80658();
      v20[0] = sub_255A7BEC4(v16, v17, &v21);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255A095A4((uint64_t)v23, (uint64_t *)&unk_26B29BF50);
      *(_WORD *)(v14 + 12) = 2082;
      sub_255A09540((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_26B29BF50);
      uint64_t v18 = sub_255C80658();
      v20[0] = sub_255A7BEC4(v18, v19, &v21);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255A095A4((uint64_t)v22, (uint64_t *)&unk_26B29BF50);
      _os_log_impl(&dword_255A00000, v12, v13, "Mini player marquee enabled (currentItemID changed from %{public}s to %{public}s)", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v15, -1, -1);
      MEMORY[0x25A297C00](v14, -1, -1);
    }
    else
    {
      sub_255A095A4((uint64_t)v23, (uint64_t *)&unk_26B29BF50);
      sub_255A095A4((uint64_t)v22, (uint64_t *)&unk_26B29BF50);
    }
  }
}

uint64_t sub_255A4F554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v44 = a2;
  _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa();
  swift_getWitnessTable();
  sub_255C7EC98();
  uint64_t v2 = sub_255C7E458();
  uint64_t v3 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD40);
  uint64_t v4 = sub_255C7E458();
  uint64_t v5 = type metadata accessor for MCUINamespace();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v40 = (uint64_t)&v33 - v7;
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v39 = v3;
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  os_log_type_t v13 = (char *)&v33 - v12;
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = sub_255C7E458();
  uint64_t v41 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  long long v37 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v38 = (char *)&v33 - v19;
  sub_255C80208();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FA48();
  sub_255C7F1E8();
  if (qword_26B2990B0 != -1) {
    swift_once();
  }
  uint64_t v52 = WitnessTable;
  uint64_t v53 = MEMORY[0x263F19100];
  uint64_t v21 = swift_getWitnessTable();
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v2);
  swift_getKeyPath();
  uint64_t v51 = 1;
  uint64_t v49 = v21;
  uint64_t v50 = MEMORY[0x263F18C10];
  uint64_t v22 = v39;
  uint64_t v23 = swift_getWitnessTable();
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v22);
  uint64_t v24 = sub_255A09998(&qword_26B29BD38, &qword_26B29BD40);
  uint64_t v47 = v23;
  uint64_t v48 = v24;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v40;
  View.mcui.getter(v4, v40);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v4);
  if (qword_26B2990C8 != -1) {
    swift_once();
  }
  uint64_t v27 = v37;
  uint64_t v28 = v43;
  MCUINamespace<A>.marqueeFeathering(_:_:)(1, qword_26B2990B8, 0, v43, v25);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v26, v28);
  unint64_t v29 = sub_255A52830();
  uint64_t v45 = v25;
  unint64_t v46 = v29;
  swift_getWitnessTable();
  uint64_t v30 = v38;
  sub_255A20F54(v27);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v41 + 8);
  v31(v27, v16);
  sub_255A20F54(v30);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v16);
}

uint64_t sub_255A4FBA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255A4F554(a1, a2);
}

void sub_255A4FBB4()
{
  qword_26B29E8C0 = 0x404E000000000000;
}

void sub_255A4FBC4()
{
  qword_269F21A38 = 0x4014000000000000;
}

uint64_t sub_255A4FBD4(uint64_t a1)
{
  return sub_255A4FFB8(a1, MEMORY[0x263F1A6A0], MEMORY[0x263F1A640], &qword_26B29E8D8);
}

uint64_t sub_255A4FC08(uint64_t a1)
{
  return sub_255A4FFB8(a1, MEMORY[0x263F1A5E8], MEMORY[0x263F1A640], &qword_26B29E8F8);
}

uint64_t sub_255A4FC3C(uint64_t a1)
{
  return sub_255A4FFB8(a1, MEMORY[0x263F1A5E8], MEMORY[0x263F1A638], &qword_26B29E8E8);
}

uint64_t sub_255A4FC70(uint64_t a1)
{
  return sub_255A4FCF4(a1, qword_269F21A40, &qword_269F1FF00, &qword_269F33050);
}

uint64_t sub_255A4FC9C(uint64_t a1)
{
  return sub_255A4FCF4(a1, qword_269F21A58, &qword_269F1FEF8, &qword_269F33048);
}

uint64_t sub_255A4FCC8(uint64_t a1)
{
  return sub_255A4FCF4(a1, qword_269F21A70, &qword_269F1FF00, &qword_269F33050);
}

uint64_t sub_255A4FCF4(uint64_t a1, uint64_t *a2, void *a3, uint64_t *a4)
{
  uint64_t v7 = sub_255C802C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  __swift_allocate_value_buffer(v11, a2);
  uint64_t v12 = (char *)__swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v13 = *a4;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B968], v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v12[*(int *)(v11 + 36)], v10, v7);
  *(void *)uint64_t v12 = v13;
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  return v14(v10, v7);
}

uint64_t sub_255A4FE6C(uint64_t a1)
{
  return sub_255A4FECC(a1, qword_269F21A88, MEMORY[0x263F1B368]);
}

uint64_t sub_255A4FE8C(uint64_t a1)
{
  return sub_255A4FECC(a1, qword_269F21AA0, MEMORY[0x263F1B3F8]);
}

uint64_t sub_255A4FEAC(uint64_t a1)
{
  return sub_255A4FECC(a1, qword_269F21AB8, MEMORY[0x263F1B368]);
}

uint64_t sub_255A4FECC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = MEMORY[0x263F1B440];
  __swift_allocate_value_buffer(MEMORY[0x263F1B440], a2);
  uint64_t v6 = (void *)__swift_project_value_buffer(v5, (uint64_t)a2);
  uint64_t result = a3();
  *uint64_t v6 = result;
  return result;
}

void sub_255A4FF24()
{
  qword_269F21AD0 = 0x4038000000000000;
}

void sub_255A4FF34()
{
  qword_269F21AD8 = 0x4038000000000000;
}

void sub_255A4FF44()
{
  qword_269F21AE0 = 0x4024000000000000;
}

void sub_255A4FF54()
{
  qword_269F21AE8 = 0x4040000000000000;
}

uint64_t sub_255A4FF64()
{
  uint64_t result = sub_255C7F2F8();
  qword_269F21AF0 = result;
  return result;
}

uint64_t sub_255A4FF84(uint64_t a1)
{
  return sub_255A4FFB8(a1, MEMORY[0x263F1A5C8], MEMORY[0x263F1A630], &qword_26B2990D0);
}

uint64_t sub_255A4FFB8(uint64_t a1, void (*a2)(void), void (*a3)(void), uint64_t *a4)
{
  a2();
  a3();
  uint64_t v6 = sub_255C7F2C8();
  uint64_t result = swift_release();
  *a4 = v6;
  return result;
}

uint64_t sub_255A50010()
{
  uint64_t result = sub_255C7F208();
  qword_26B29C048 = result;
  return result;
}

uint64_t sub_255A50030()
{
  uint64_t result = sub_255C7FD18();
  qword_269F21AF8 = result;
  return result;
}

uint64_t sub_255A50050()
{
  uint64_t result = sub_255C7FCB8();
  qword_26B299088 = result;
  return result;
}

uint64_t sub_255A50070()
{
  uint64_t result = sub_255C7FD18();
  qword_26B29C060 = result;
  return result;
}

void sub_255A50090()
{
  qword_26B2990B8 = 0x4038000000000000;
}

void sub_255A500A0()
{
  qword_26B2990A0 = 0x4038000000000000;
}

uint64_t NowPlayingViewModel.SubtitleStyle.hash(into:)()
{
  return sub_255C81588();
}

BOOL static NowPlayingViewModel.SubtitleStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_255A500F8()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t result = sub_255C80648();
  qword_26B2AA528 = result;
  unk_26B2AA530 = v4;
  return result;
}

uint64_t sub_255A50248()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t result = sub_255C80648();
  qword_269F32F88 = result;
  unk_269F32F90 = v4;
  return result;
}

uint64_t sub_255A50394@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A503E0(uint64_t *a1, uint64_t *a2)
{
  return sub_255A505EC(a1, a2);
}

uint64_t sub_255A503F4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_255A50440()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_255A5048C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A504D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();

  return sub_255BCFC3C(v2, v3);
}

uint64_t sub_255A50554()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A5058C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A505D8(uint64_t *a1, uint64_t *a2)
{
  return sub_255A505EC(a1, a2);
}

uint64_t sub_255A505EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();

  return sub_255BCF9DC(v2, v3, v4);
}

uint64_t sub_255A50670()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_255A506BC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 72);
  return result;
}

uint64_t sub_255A50704(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();

  return sub_255BCFDCC(v2, v3);
}

uint64_t sub_255A50778@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 72);
  return result;
}

uint64_t sub_255A507BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCF9DC(0, 0, v0);
  if (qword_26B299568 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B2AA528;
  uint64_t v2 = unk_26B2AA530;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255BCFBD8(v1, v2, v0, KeyPath, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCFC3C(MEMORY[0x263F8EE78], v0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCF9DC(0, 0, v0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();

  return sub_255BCFDCC(0, v0);
}

uint64_t NowPlayingViewModel.PrimaryMetadata.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  return v0;
}

uint64_t NowPlayingViewModel.PrimaryMetadata.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);

  return swift_deallocClassInstance();
}

uint64_t sub_255A50A0C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t static NowPlayingViewModel.MiniPlayerSubtitle.customView<A, B>(id:content:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_255C81078();
  a2(v8);
  uint64_t result = sub_255C7FFC8();
  *(void *)(a3 + 40) = result;
  *(unsigned char *)(a3 + 48) = 1;
  return result;
}

uint64_t sub_255A50BB8@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_255A09540(v1 + 32, a1, &qword_26B299A60);
}

uint64_t sub_255A50C0C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t sub_255A50C40()
{
  if (qword_26B299568 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B2AA528;
  uint64_t v2 = unk_26B2AA530;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_255BCFF28(v1, v2, v0, KeyPath, v4);
  memset(v11, 0, sizeof(v11));
  char v12 = -1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255A09540((uint64_t)v11, (uint64_t)v10, &qword_26B299A60);
  swift_retain();
  sub_255BD0154((uint64_t)v10, v0);
  sub_255A095A4((uint64_t)v11, &qword_26B299A60);
  if (qword_269F1FDF0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_269F32F88;
  uint64_t v6 = unk_269F32F90;
  uint64_t v7 = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_255BCFF28(v5, v6, v0, v7, v8);
}

uint64_t sub_255A50DF0()
{
  swift_bridgeObjectRelease();
  sub_255A095A4(v0 + 32, &qword_26B29C078);

  return swift_deallocClassInstance();
}

uint64_t sub_255A50E38@<X0>(uint64_t *a1@<X8>)
{
  _s18MiniPlayerMetadataCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255A50E74(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  swift_retain();

  return sub_255BCF994(v2, v3, KeyPath, v5);
}

uint64_t sub_255A50EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  double v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, double))(v7 + 16))(v10, v8);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v13 = v12;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCF9DC(v11, v13, a2);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v16 = v15;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  swift_retain();
  sub_255BCFBD8(v14, v16, a2, KeyPath, v18);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCFC3C(v19, a2);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  uint64_t v22 = v21;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCF9DC(v20, v22, a2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 48))(&v28, a3, a4);
  LOBYTE(v20) = v28;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255BCFDCC(v20, a2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 56))(&v28, a3, a4);
  uint64_t v23 = v29;
  __swift_project_boxed_opaque_existential_1(&v28, v29);
  swift_beginAccess();
  sub_255A53C38(a2 + 80, (uint64_t)v27);
  LOBYTE(v23) = sub_255A4974C((uint64_t)v27, v23);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  if ((v23 & 1) == 0)
  {
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_255A55384(&qword_26B29C090, v24, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
    sub_255C7D9E8();
    sub_255C7DA48();
    swift_release();
  }
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(a2 + 80);
  sub_255A524B4(&v28, a2 + 80);
  swift_endAccess();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, a3);
}

uint64_t sub_255A512E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v16)(_OWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  long long v21[3];
  char v22;
  _OWORD v23[3];
  unsigned __int8 v24;

  uint64_t v7 = *(void *)(a3 - 8);
  double v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v8);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v13 = v12;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  swift_retain();
  sub_255BCFF28(v11, v13, a2, KeyPath, v15);
  uint64_t v16 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a4 + 64);
  v16(v23, a3, a4);
  if (v24 == 2)
  {
    if (v23[0])
    {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
      if (v18)
      {
LABEL_6:
        *(void *)&v21[0] = v17;
        *((void *)&v21[0] + 1) = v18;
        uint64_t v22 = 0;
        sub_255A52494(v21, (uint64_t)v23);
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
      if (v18) {
        goto LABEL_6;
      }
    }
    memset(v23, 0, sizeof(v23));
    uint64_t v24 = -1;
    goto LABEL_9;
  }
  if (v24 == 255) {
    sub_255A095A4((uint64_t)v23, &qword_26B299A60);
  }
  else {
    sub_255A52464((uint64_t)v23);
  }
  v16(v23, a3, a4);
LABEL_9:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255A09540((uint64_t)v23, (uint64_t)v21, &qword_26B299A60);
  swift_retain();
  sub_255BD0154((uint64_t)v21, a2);
  sub_255A095A4((uint64_t)v23, &qword_26B299A60);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a3);
}

uint64_t _s11MediaCoreUI19NowPlayingViewModelC18MiniPlayerSubtitleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_255A524CC(a1, (uint64_t)v11);
  sub_255A524CC(a2, (uint64_t)v13);
  if (v12)
  {
    if (v12 == 1)
    {
      sub_255A524CC((uint64_t)v11, (uint64_t)v9);
      swift_release();
      if (v15 == 1)
      {
        swift_release();
        v7[0] = v9[0];
        v7[1] = v9[1];
        uint64_t v8 = v10;
        v5[0] = v13[0];
        v5[1] = v13[1];
        uint64_t v6 = v14;
        char v3 = MEMORY[0x25A2968E0](v7, v5);
        sub_255A52504((uint64_t)v5);
        sub_255A52504((uint64_t)v7);
LABEL_15:
        sub_255A52464((uint64_t)v11);
        return v3 & 1;
      }
      sub_255A52504((uint64_t)v9);
    }
    else
    {
      sub_255A524CC((uint64_t)v11, (uint64_t)v9);
      if (v15 == 2)
      {
        char v3 = LOBYTE(v9[0]) ^ LOBYTE(v13[0]) ^ 1;
        goto LABEL_15;
      }
    }
  }
  else
  {
    sub_255A524CC((uint64_t)v11, (uint64_t)v9);
    if (!v15)
    {
      if (v9[0] == v13[0]) {
        char v3 = 1;
      }
      else {
        char v3 = sub_255C81428();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  sub_255A095A4((uint64_t)v11, &qword_26B29E938);
  char v3 = 0;
  return v3 & 1;
}

unint64_t sub_255A516FC(uint64_t a1)
{
  unint64_t result = sub_255A51724();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255A51724()
{
  unint64_t result = qword_26B29A9C0;
  if (!qword_26B29A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A9C0);
  }
  return result;
}

unint64_t sub_255A51778(uint64_t a1)
{
  unint64_t result = sub_255A517A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255A517A0()
{
  unint64_t result = qword_26B29C080;
  if (!qword_26B29C080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29C080);
  }
  return result;
}

uint64_t sub_255A517F4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A5183C()
{
  unint64_t result = qword_269F21B00;
  if (!qword_269F21B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21B00);
  }
  return result;
}

unint64_t sub_255A51894()
{
  unint64_t result = qword_269F21B08[0];
  if (!qword_269F21B08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F21B08);
  }
  return result;
}

uint64_t sub_255A518E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A51940@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A51990@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255A519E0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 72);
  return result;
}

ValueMetadata *type metadata accessor for MetadataAutomaticStyle()
{
  return &type metadata for MetadataAutomaticStyle;
}

ValueMetadata *type metadata accessor for MetadataButtonStyle()
{
  return &type metadata for MetadataButtonStyle;
}

uint64_t sub_255A51A4C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_unknownObjectRelease();

  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t sub_255A51A88(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_unknownObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *sub_255A51B10(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t sub_255A51B68(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t sub_255A51BC0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255A51C08(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MetadataStyleModifier()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.SubtitleStyle()
{
  return &type metadata for NowPlayingViewModel.SubtitleStyle;
}

uint64_t type metadata accessor for NowPlayingViewModel.PrimaryMetadata()
{
  return self;
}

uint64_t method lookup function for NowPlayingViewModel.PrimaryMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NowPlayingViewModel.PrimaryMetadata);
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.eyebrow.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.title.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.titleBadges.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.subtitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.subtitleStyle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t _s18MiniPlayerSubtitleOwxx(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 48);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)result + 3;
  }
  if (v1 != 2)
  {
    if (v1 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0(result);
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t _s18MiniPlayerSubtitleOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 48) = 2;
  }
  else if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = 1;
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 48) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s18MiniPlayerSubtitleOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 != 2)
    {
      if (v4 == 1)
      {
        __swift_destroy_boxed_opaque_existential_0(a1);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 48) = 2;
    }
    else if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = 1;
      swift_retain();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 48) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s18MiniPlayerSubtitleOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 != 2)
    {
      if (v4 == 1)
      {
        __swift_destroy_boxed_opaque_existential_0(a1);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      LOBYTE(v5) = 2;
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(unsigned char *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t _s18MiniPlayerSubtitleOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s18MiniPlayerSubtitleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255A52130(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_255A5214C(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle()
{
  return &type metadata for NowPlayingViewModel.MiniPlayerSubtitle;
}

unsigned char *_s13SubtitleStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A52250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle.CopyField()
{
  return &type metadata for NowPlayingViewModel.MiniPlayerSubtitle.CopyField;
}

uint64_t _s18MiniPlayerMetadataCMa()
{
  return self;
}

uint64_t sub_255A522AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A52464(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A52494(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_255A524B4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_255A524CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_255A52504(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A52558(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_255A52564(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);

  return sub_255A525AC(v2, v3);
}

uint64_t sub_255A525AC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_255A525B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_unknownObjectRetain();
  sub_255A52558(v5, v6);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t sub_255A5261C(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v2[3];
  uint64_t v4 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_255A52558(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_255A525AC(v5, v6);
  return a1;
}

uint64_t sub_255A526B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v4;
  sub_255A525AC(v5, v6);
  return a1;
}

uint64_t sub_255A52718(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255A52760(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s18HeaderMetadataViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A527C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s23MarqueeTitleAndSubtitleVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255A52830()
{
  unint64_t result = qword_26B29AD30;
  if (!qword_26B29AD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29AD30);
  }
  return result;
}

uint64_t sub_255A52884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255C7E7E8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255A528B8(uint64_t a1)
{
  swift_release();
  swift_release();
  sub_255A087D0(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  if (*(unsigned char *)(a1 + 88))
  {
    if (*(void *)(a1 + 72)) {
      __swift_destroy_boxed_opaque_existential_0(a1 + 48);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);

  return sub_255A525AC(v2, v3);
}

uint64_t sub_255A52930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_255A0877C(v6, v7);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  uint64_t v8 = (_OWORD *)(a2 + 48);
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v9 = (_OWORD *)(a1 + 48);
    uint64_t v10 = *(void *)(a2 + 72);
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v10;
      *(void *)(a1 + 80) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v9, v8);
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 64);
      *uint64_t v9 = *v8;
      *(_OWORD *)(a1 + 64) = v12;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
    }
    *(unsigned char *)(a1 + 88) = 1;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)v8;
    *(unsigned char *)(a1 + 88) = 0;
    swift_retain();
  }
  uint64_t v13 = *(void *)(a2 + 96);
  char v14 = *(unsigned char *)(a2 + 104);
  sub_255A52558(v13, v14);
  *(void *)(a1 + 96) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  return a1;
}

uint64_t sub_255A52A34(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  sub_255A0877C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  sub_255A087D0(v6, v7);
  if (a1 != a2)
  {
    uint64_t v8 = (long long *)(a2 + 48);
    sub_255A095A4(a1 + 48, &qword_26B29B5B8);
    if (*(unsigned char *)(a2 + 88))
    {
      uint64_t v9 = *(void *)(a2 + 72);
      if (v9)
      {
        *(void *)(a1 + 72) = v9;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
      }
      else
      {
        long long v10 = *v8;
        long long v11 = *(_OWORD *)(a2 + 64);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(_OWORD *)(a1 + 48) = v10;
        *(_OWORD *)(a1 + 64) = v11;
      }
      *(unsigned char *)(a1 + 88) = 1;
    }
    else
    {
      *(void *)(a1 + 48) = *(void *)v8;
      *(unsigned char *)(a1 + 88) = 0;
      swift_retain();
    }
  }
  uint64_t v12 = *(void *)(a2 + 96);
  char v13 = *(unsigned char *)(a2 + 104);
  sub_255A52558(v12, v13);
  uint64_t v14 = *(void *)(a1 + 96);
  char v15 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  sub_255A525AC(v14, v15);
  return a1;
}

uint64_t sub_255A52B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5;
  sub_255A087D0(v6, v7);
  if (a1 != a2)
  {
    sub_255A095A4(a1 + 48, &qword_26B29B5B8);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  char v9 = *(unsigned char *)(a2 + 104);
  uint64_t v10 = *(void *)(a1 + 96);
  char v11 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = v9;
  sub_255A525AC(v10, v11);
  return a1;
}

uint64_t sub_255A52C38(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255A52C80(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s22MiniPlayerMetadataViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

void sub_255A52CF4()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_255A52D98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_255A0877C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    char v11 = *(unsigned char *)(a2 + 40);
    swift_retain();
    sub_255A0877C(v10, v11);
    *(void *)(a1 + 32) = v10;
    *(unsigned char *)(a1 + 40) = v11;
    uint64_t v12 = *(int *)(a3 + 44);
    char v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *char v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 48);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    sub_255A52558(*(void *)v19, v21);
    *(void *)uint64_t v18 = v20;
    *(unsigned char *)(v18 + 8) = v21;
  }
  return a1;
}

uint64_t sub_255A52F20(uint64_t a1, uint64_t a2)
{
  sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  sub_255A087D0(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_255A525AC(v7, v8);
}

uint64_t sub_255A52FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  swift_retain();
  sub_255A0877C(v9, v10);
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = (void *)(a1 + v11);
  char v13 = (void *)(a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 48);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_255A52558(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  return a1;
}

uint64_t sub_255A53130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255A087D0(v8, v9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 32);
  char v11 = *(unsigned char *)(a2 + 40);
  sub_255A0877C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  sub_255A087D0(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 44);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_255A095A4(a1 + v14, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = *(int *)(a3 + 48);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_255A52558(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  sub_255A525AC(v23, v24);
  return a1;
}

uint64_t sub_255A532B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 44);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t sub_255A533D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255A087D0(v8, v9);
  uint64_t v10 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v10;
  swift_release();
  char v11 = *((unsigned char *)a2 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = v11;
  sub_255A087D0(v12, v13);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 44);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (char *)a2 + v14;
    sub_255A095A4(a1 + v14, (uint64_t *)&unk_26B298500);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_255C7EA18();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  uint64_t v19 = *(int *)(a3 + 48);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)((char *)a2 + v19);
  uint64_t v22 = *v21;
  LOBYTE(v21) = *((unsigned char *)v21 + 8);
  uint64_t v23 = *(void *)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = (_BYTE)v21;
  sub_255A525AC(v23, v24);
  return a1;
}

uint64_t sub_255A5353C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A53550);
}

uint64_t sub_255A53550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255A53604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A53618);
}

uint64_t sub_255A53618(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255A536C4()
{
  if (!qword_26B298510)
  {
    sub_255C7EA18();
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B298510);
    }
  }
}

uint64_t sub_255A5371C()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A538C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A53908()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255A53964()
{
  unint64_t result = qword_26B29BF68;
  if (!qword_26B29BF68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BF50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BF68);
  }
  return result;
}

uint64_t sub_255A539D0@<X0>(uint64_t a1@<X8>)
{
  return sub_255A4BC60(v1[4], v1[2], v1[3], a1);
}

void sub_255A539E0()
{
  sub_255A4F0EC(v0 + 32);
}

void sub_255A539F0(uint64_t a1, uint64_t a2)
{
  sub_255A4F270(a1, a2, v2 + 32);
}

uint64_t sub_255A539FC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 81);
  return result;
}

uint64_t sub_255A53A50@<X0>(uint64_t a1@<X8>)
{
  return sub_255A4DC08(*(void *)(v1 + 32), a1);
}

unint64_t sub_255A53A5C()
{
  unint64_t result = qword_26B29B878;
  if (!qword_26B29B878)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B870);
    sub_255A55150(&qword_26B29B860, &qword_26B29B868, (void (*)(void))sub_255A53AF4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B878);
  }
  return result;
}

unint64_t sub_255A53AF4()
{
  unint64_t result = qword_26B29B740;
  if (!qword_26B29B740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B748);
    sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B740);
  }
  return result;
}

uint64_t sub_255A53B94@<X0>(uint64_t a1@<X8>)
{
  return sub_255A4E008(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_255A53BA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_255A53C2C@<X0>(uint64_t a1@<X8>)
{
  return sub_255A4A268(*(void *)(v1 + 32), a1);
}

uint64_t sub_255A53C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_255A53CA4()
{
  unint64_t result = qword_269F21C68;
  if (!qword_269F21C68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21C50);
    sub_255A53D44();
    sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21C68);
  }
  return result;
}

unint64_t sub_255A53D44()
{
  unint64_t result = qword_269F21C70;
  if (!qword_269F21C70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21C48);
    sub_255A09998(&qword_269F21C78, &qword_269F21C40);
    sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21C70);
  }
  return result;
}

uint64_t sub_255A53E08@<X0>(uint64_t a1@<X8>)
{
  return sub_255A48FB8(*(void *)(v1 + 32), a1);
}

unint64_t sub_255A53E1C()
{
  unint64_t result = qword_269F21CE0;
  if (!qword_269F21CE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21CC8);
    sub_255A53EBC();
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21CE0);
  }
  return result;
}

unint64_t sub_255A53EBC()
{
  unint64_t result = qword_269F21CE8;
  if (!qword_269F21CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21CC0);
    sub_255A53F5C();
    sub_255A09998(&qword_26B29BC48, &qword_26B29BC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21CE8);
  }
  return result;
}

unint64_t sub_255A53F5C()
{
  unint64_t result = qword_269F21CF0;
  if (!qword_269F21CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21CB8);
    sub_255A53FFC();
    sub_255A09998(&qword_26B29BB88, &qword_26B29BB90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21CF0);
  }
  return result;
}

unint64_t sub_255A53FFC()
{
  unint64_t result = qword_269F21CF8;
  if (!qword_269F21CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21CB0);
    sub_255A09998(&qword_269F21D00, &qword_269F21CA8);
    sub_255A09998(&qword_269F21D08, &qword_269F21D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21CF8);
  }
  return result;
}

unint64_t sub_255A540C0()
{
  unint64_t result = qword_269F21D28;
  if (!qword_269F21D28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21C98);
    sub_255A09998(&qword_269F21D30, &qword_269F21C88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21D28);
  }
  return result;
}

unint64_t sub_255A54160()
{
  unint64_t result = qword_269F21D38;
  if (!qword_269F21D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21D38);
  }
  return result;
}

uint64_t sub_255A541B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_255A541BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A5453C()
{
  return sub_255A09998(&qword_269F21D40, &qword_269F21BD0);
}

uint64_t sub_255A54578()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A545BC@<X0>(void *a1@<X8>)
{
  sub_255A54658();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A5460C()
{
  return sub_255C7E8D8();
}

unint64_t sub_255A54658()
{
  unint64_t result = qword_26B29B9C0;
  if (!qword_26B29B9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B9C0);
  }
  return result;
}

uint64_t sub_255A546AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A54864(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  if (*(unsigned char *)(a1 + 88)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 48);
  }
  else {
    swift_release();
  }
  sub_255A1D054(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(unsigned char *)(a1 + 168), *(unsigned char *)(a1 + 169));
  uint64_t v2 = *(void *)(a1 + 176);
  char v3 = *(unsigned char *)(a1 + 184);

  return sub_255A525AC(v2, v3);
}

uint64_t sub_255A54904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = (void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  if (v8)
  {
    long long v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v9;
    (**(void (***)(uint64_t, void *))(v9 - 8))(a1 + 48, v7);
  }
  else
  {
    *(void *)(a1 + 48) = *v7;
    swift_retain();
  }
  *(unsigned char *)(a1 + 88) = v8;
  uint64_t v10 = *(void *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 136);
  uint64_t v16 = *(void *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 152);
  uint64_t v21 = *(void *)(a2 + 160);
  char v22 = *(unsigned char *)(a2 + 168);
  char v23 = *(unsigned char *)(a2 + 169);
  sub_255A1CFDC(v10, v11, v12, v13, v14, v15, v16, v17, v21, v22, v23);
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = v15;
  *(void *)(a1 + 144) = v16;
  *(void *)(a1 + 152) = v17;
  *(void *)(a1 + 160) = v21;
  *(unsigned char *)(a1 + 168) = v22;
  *(unsigned char *)(a1 + 169) = v23;
  uint64_t v18 = *(void *)(a2 + 176);
  char v19 = *(unsigned char *)(a2 + 184);
  sub_255A52558(v18, v19);
  *(void *)(a1 + 176) = v18;
  *(unsigned char *)(a1 + 184) = v19;
  return a1;
}

uint64_t sub_255A54A78(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (a1 != a2)
  {
    sub_255A095A4(a1 + 48, &qword_26B29B580);
    if (*(unsigned char *)(a2 + 88))
    {
      uint64_t v4 = *(void *)(a2 + 72);
      *(void *)(a1 + 72) = v4;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 48, a2 + 48);
      *(unsigned char *)(a1 + 88) = 1;
    }
    else
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 88) = 0;
      swift_retain();
    }
  }
  uint64_t v5 = *(void *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 136);
  uint64_t v11 = *(void *)(a2 + 144);
  uint64_t v12 = *(void *)(a2 + 152);
  uint64_t v29 = *(void *)(a2 + 160);
  char v30 = *(unsigned char *)(a2 + 168);
  char v31 = *(unsigned char *)(a2 + 169);
  sub_255A1CFDC(v5, v6, v7, v8, v9, v10, v11, v12, v29, v30, v31);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a1 + 128);
  uint64_t v18 = *(void *)(a1 + 136);
  uint64_t v19 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 152);
  uint64_t v21 = *(void *)(a1 + 160);
  char v22 = *(unsigned char *)(a1 + 168);
  char v23 = *(unsigned char *)(a1 + 169);
  *(void *)(a1 + 96) = v5;
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v8;
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = v11;
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v29;
  *(unsigned char *)(a1 + 168) = v30;
  *(unsigned char *)(a1 + 169) = v31;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v24 = *(void *)(a2 + 176);
  char v25 = *(unsigned char *)(a2 + 184);
  sub_255A52558(v24, v25);
  uint64_t v26 = *(void *)(a1 + 176);
  char v27 = *(unsigned char *)(a1 + 184);
  *(void *)(a1 + 176) = v24;
  *(unsigned char *)(a1 + 184) = v25;
  sub_255A525AC(v26, v27);
  return a1;
}

__n128 __swift_memcpy185_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(long long *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t sub_255A54CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (a1 != a2)
  {
    sub_255A095A4(a1 + 48, &qword_26B29B580);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  uint64_t v7 = *(void *)(a2 + 160);
  char v8 = *(unsigned char *)(a2 + 168);
  char v9 = *(unsigned char *)(a2 + 169);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a1 + 136);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 160);
  char v19 = *(unsigned char *)(a1 + 168);
  char v20 = *(unsigned char *)(a1 + 169);
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  long long v22 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v22;
  *(void *)(a1 + 160) = v7;
  *(unsigned char *)(a1 + 168) = v8;
  *(unsigned char *)(a1 + 169) = v9;
  sub_255A1D054(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  char v23 = *(unsigned char *)(a2 + 184);
  uint64_t v24 = *(void *)(a1 + 176);
  char v25 = *(unsigned char *)(a1 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = v23;
  sub_255A525AC(v24, v25);
  return a1;
}

uint64_t sub_255A54DB8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 185)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255A54E00(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 184) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 185) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 185) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s19DefaultMetadataViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A54E88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A54ECC@<X0>(uint64_t a1@<X8>)
{
  return sub_255A44984(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_255A54ED8()
{
  unint64_t result = qword_26B29A5D8;
  if (!qword_26B29A5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A5D8);
  }
  return result;
}

uint64_t sub_255A54F2C@<X0>(uint64_t a1@<X8>)
{
  return sub_255A45A10(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255A54F38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_255A54F94()
{
  unint64_t result = qword_269F21D78;
  if (!qword_269F21D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D48);
    sub_255A55008();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21D78);
  }
  return result;
}

unint64_t sub_255A55008()
{
  unint64_t result = qword_269F21D80;
  if (!qword_269F21D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D70);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D60);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21848);
    sub_255A55150(&qword_269F21D88, &qword_269F21D60, (void (*)(void))sub_255A55204);
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    swift_getOpaqueTypeConformance2();
    sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21D80);
  }
  return result;
}

uint64_t sub_255A55150(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_255A55384((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255A55204()
{
  unint64_t result = qword_269F21D90;
  if (!qword_269F21D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D58);
    sub_255A55280();
    sub_255A55320();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21D90);
  }
  return result;
}

unint64_t sub_255A55280()
{
  unint64_t result = qword_269F21D98;
  if (!qword_269F21D98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21D50);
    sub_255A540C0();
    sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21D98);
  }
  return result;
}

unint64_t sub_255A55320()
{
  unint64_t result = qword_269F21DA0;
  if (!qword_269F21DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21DA0);
  }
  return result;
}

uint64_t sub_255A55384(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A553CC()
{
  return swift_getWitnessTable();
}

uint64_t static NowPlayingViewModel.Metrics.Event.== infix(_:_:)()
{
  return 1;
}

uint64_t NowPlayingViewModel.Metrics.Event.hash(into:)()
{
  return sub_255C81588();
}

uint64_t NowPlayingViewModel.Metrics.Event.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255A556A8()
{
  return sub_255C815B8();
}

uint64_t sub_255A556EC()
{
  return sub_255C81588();
}

uint64_t sub_255A55714()
{
  return sub_255C815B8();
}

uint64_t NowPlayingViewModel.Metrics.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel7Metrics___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t NowPlayingViewModel.Metrics.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel7Metrics___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

unint64_t sub_255A5586C()
{
  unint64_t result = qword_26B2981A0;
  if (!qword_26B2981A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2981A0);
  }
  return result;
}

uint64_t sub_255A558C0()
{
  return type metadata accessor for NowPlayingViewModel.Metrics();
}

uint64_t type metadata accessor for NowPlayingViewModel.Metrics()
{
  uint64_t result = qword_26B297B48;
  if (!qword_26B297B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255A55914()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for NowPlayingViewModel.Metrics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NowPlayingViewModel.Metrics);
}

uint64_t _s7MetricsC5EventOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s7MetricsC5EventOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x255A55ABCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.Metrics.Event()
{
  return &type metadata for NowPlayingViewModel.Metrics.Event;
}

uint64_t sub_255A55AF4()
{
  return sub_255C7E778();
}

uint64_t MCUINamespace<A>.glowEffect(isActive:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for GlowModifier();
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *char v8 = a1;
  *((void *)v8 + 1) = swift_getKeyPath();
  v8[16] = 0;
  char v9 = (uint64_t *)&v8[*(int *)(v6 + 24)];
  *char v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  MEMORY[0x25A295390](v8, *(void *)(a2 + 16), v6, a3);
  return sub_255A582F8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GlowModifier);
}

uint64_t type metadata accessor for GlowModifier()
{
  uint64_t result = qword_269F21DB8;
  if (!qword_269F21DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MCUINamespace<A>.glowEffectForegroundColor(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  swift_getKeyPath();
  v9[1] = a1;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255A55D9C()
{
  sub_255A58358();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255A55DD8@<X0>(void *a1@<X8>)
{
  sub_255A58358();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A55E28()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A55E8C()
{
  return sub_255C7E778();
}

uint64_t sub_255A55EB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21DD8);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7EA18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *v0;
  type metadata accessor for GlowModifier();
  sub_255ABA66C((uint64_t)v9);
  uint64_t v11 = &v5[*(int *)(v3 + 56)];
  *uint64_t v5 = v10;
  (*(void (**)(unsigned char *, char *, uint64_t))(v7 + 32))(v11, v9, v6);
  int v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 88))(v11, v6);
  int v13 = *MEMORY[0x263F19968];
  if (v10 == 1)
  {
    if (v12 == v13)
    {
      char v14 = v1[16];
      uint64_t v15 = swift_retain();
      uint64_t v16 = sub_255AB9568(v15, v14);
      swift_release();
      return v16;
    }
    if (v12 == *MEMORY[0x263F19978])
    {
      id v17 = objc_msgSend(self, sel_tintColor);
      return MEMORY[0x25A295490](v17);
    }
LABEL_10:
    uint64_t v16 = sub_255C7FD18();
    sub_255A095A4((uint64_t)v5, &qword_269F21DD8);
    return v16;
  }
  if (v12 != v13) {
    goto LABEL_10;
  }
  if (qword_269F1FF00 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_269F33050;
  swift_retain();
  return v16;
}

uint64_t sub_255A560FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE08);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v70 = v6;
  uint64_t v71 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = sub_255C7EA18();
  uint64_t v57 = *(void *)(v59 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v59);
  double v58 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  char v56 = &v53[-v9];
  uint64_t v55 = type metadata accessor for GlowModifier();
  uint64_t v66 = *(void *)(v55 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v55);
  uint64_t v67 = v11;
  char v68 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  int v13 = &v53[-v12];
  uint64_t v63 = sub_255C802C8();
  uint64_t v14 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  long long v62 = &v53[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB98);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v53[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21DC8);
  MEMORY[0x270FA5388](v61);
  long long v21 = &v53[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21DD0);
  MEMORY[0x270FA5388](v64);
  uint64_t v65 = &v53[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_255A55EB0();
  uint64_t v72 = v5;
  uint64_t v73 = v4;
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v69 = a1;
  uint64_t v25 = v4;
  uint64_t v26 = (uint64_t)v2;
  uint64_t v60 = v24;
  v24(v19, a1, v25);
  *(void *)&v19[*(int *)(v17 + 44)] = v23;
  uint64_t v27 = (uint64_t)v13;
  int v28 = *v2;
  sub_255A58290(v26, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GlowModifier);
  if (v28 == 1)
  {
    sub_255A582F8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GlowModifier);
    uint64_t v29 = (unsigned int *)MEMORY[0x263F1B998];
  }
  else
  {
    char v30 = v56;
    sub_255ABA66C((uint64_t)v56);
    uint64_t v31 = *MEMORY[0x263F19968];
    uint64_t v32 = v57;
    uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 104);
    uint64_t v55 = v27;
    uint64_t v35 = v58;
    uint64_t v34 = v59;
    v33(v58, v31, v59);
    sub_255A57F4C(&qword_26B298580, MEMORY[0x263F19988]);
    int v54 = sub_255C80578();
    uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
    v36(v35, v34);
    v36(v30, v34);
    sub_255A582F8(v55, (uint64_t (*)(void))type metadata accessor for GlowModifier);
    uint64_t v29 = (unsigned int *)MEMORY[0x263F1B998];
    if (v54) {
      uint64_t v29 = (unsigned int *)MEMORY[0x263F1B968];
    }
  }
  uint64_t v38 = v62;
  uint64_t v37 = v63;
  (*(void (**)(unsigned char *, void, uint64_t))(v14 + 104))(v62, *v29, v63);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(&v21[*(int *)(v61 + 36)], v38, v37);
  sub_255A09540((uint64_t)v19, (uint64_t)v21, &qword_26B29EB98);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v38, v37);
  sub_255A095A4((uint64_t)v19, &qword_26B29EB98);
  uint64_t v39 = sub_255C801F8();
  uint64_t v41 = v40;
  uint64_t v42 = v71;
  uint64_t v43 = v73;
  v60(v71, v69, v73);
  uint64_t v44 = v26;
  uint64_t v45 = v68;
  sub_255A58290(v44, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for GlowModifier);
  uint64_t v46 = v72;
  unint64_t v47 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  unint64_t v48 = (v70 + *(unsigned __int8 *)(v66 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v49 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v46 + 32))(v49 + v47, v42, v43);
  sub_255A5813C((uint64_t)v45, v49 + v48);
  uint64_t v50 = v65;
  sub_255A09540((uint64_t)v21, (uint64_t)v65, &qword_269F21DC8);
  uint64_t v51 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v50[*(int *)(v64 + 36)];
  *uint64_t v51 = sub_255A581A0;
  v51[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v51[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v39;
  v51[3] = v41;
  sub_255A095A4((uint64_t)v21, &qword_269F21DC8);
  return sub_255A10514((uint64_t)v50, v74, &qword_269F21DD0);
}

uint64_t sub_255A567A8@<X0>(unsigned __int8 *a1@<X1>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_255C7EC18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF20);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255C7E0D8();
  double v14 = v13;
  *uint64_t v12 = sub_255C801F8();
  v12[1] = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB88);
  sub_255A569B0(a1, a2, (uint64_t)v12 + *(int *)(v16 + 44), v14);
  sub_255C7ED78();
  sub_255C7E0E8();
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v30.origin.x = v18;
  v30.origin.y = v20;
  v30.size.width = v22;
  v30.size.height = v24;
  CGFloat MidX = CGRectGetMidX(v30);
  v31.origin.x = v18;
  v31.origin.y = v20;
  v31.size.width = v22;
  v31.size.height = v24;
  CGFloat MidY = CGRectGetMidY(v31);
  sub_255A09540((uint64_t)v12, a3, &qword_26B29EF20);
  uint64_t v27 = (CGFloat *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC58) + 36));
  *uint64_t v27 = MidX;
  v27[1] = MidY;
  return sub_255A095A4((uint64_t)v12, &qword_26B29EF20);
}

uint64_t sub_255A569B0@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v88 = a1;
  uint64_t v102 = a3;
  uint64_t v6 = sub_255C7E578();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v98 = &v84[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v99 = sub_255C802C8();
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  BOOL v96 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECE0);
  uint64_t v9 = MEMORY[0x270FA5388](v95);
  uint64_t v101 = &v84[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  double v13 = &v84[-v12];
  MEMORY[0x270FA5388](v11);
  uint64_t v100 = &v84[-v14];
  uint64_t v90 = sub_255C7EA18();
  uint64_t v89 = *(void *)(v90 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v90);
  uint64_t v87 = &v84[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = &v84[-v17];
  uint64_t v91 = type metadata accessor for GlowModifier();
  uint64_t v18 = MEMORY[0x270FA5388](v91);
  uint64_t v92 = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  double v21 = &v84[-v20];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBA0);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = &v84[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC78);
  uint64_t v27 = v26 - 8;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = &v84[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECC0);
  uint64_t v30 = MEMORY[0x270FA5388](v86);
  uint64_t v94 = &v84[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = &v84[-v33];
  MEMORY[0x270FA5388](v32);
  uint64_t v103 = &v84[-v35];
  char v36 = a2[16];
  uint64_t v37 = swift_retain();
  uint64_t v38 = sub_255AB9568(v37, v36);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE08);
  (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v40 - 8) + 16))(v25, v88, v40);
  uint64_t v41 = (uint64_t *)&v25[*(int *)(v23 + 44)];
  *uint64_t v41 = KeyPath;
  v41[1] = v38;
  sub_255A09540((uint64_t)v25, (uint64_t)v29, &qword_26B29EBA0);
  uint64_t v42 = (double *)&v29[*(int *)(v27 + 44)];
  double *v42 = a4 * 0.1;
  *((unsigned char *)v42 + 8) = 0;
  uint64_t v43 = (uint64_t)v25;
  uint64_t v44 = (uint64_t)v21;
  sub_255A095A4(v43, &qword_26B29EBA0);
  LODWORD(KeyPath) = *a2;
  char v88 = a2;
  sub_255A58290((uint64_t)a2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GlowModifier);
  uint64_t v45 = (unsigned int *)MEMORY[0x263F19968];
  if (KeyPath != 1)
  {
    sub_255A582F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GlowModifier);
    uint64_t v52 = v90;
    uint64_t v53 = v89;
    unint64_t v48 = v87;
    goto LABEL_5;
  }
  uint64_t v46 = v93;
  sub_255ABA66C((uint64_t)v93);
  uint64_t v47 = v89;
  unint64_t v48 = v87;
  uint64_t v49 = v90;
  (*(void (**)(unsigned char *, void, uint64_t))(v89 + 104))(v87, *v45, v90);
  int v85 = sub_255C7DCB8();
  uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
  v50(v48, v49);
  v50(v46, v49);
  sub_255A582F8(v44, (uint64_t (*)(void))type metadata accessor for GlowModifier);
  double v51 = 1.0;
  uint64_t v52 = v49;
  uint64_t v53 = v47;
  if ((v85 & 1) == 0) {
LABEL_5:
  }
    double v51 = 0.0;
  sub_255A09540((uint64_t)v29, (uint64_t)v34, &qword_26B29EC78);
  *(double *)&v34[*(int *)(v86 + 36)] = v51;
  sub_255A095A4((uint64_t)v29, &qword_26B29EC78);
  sub_255A10514((uint64_t)v34, (uint64_t)v103, &qword_26B29ECC0);
  int v54 = v88;
  char v55 = v88[16];
  uint64_t v56 = swift_retain();
  sub_255AB9568(v56, v55);
  swift_release();
  uint64_t v57 = sub_255C7FCA8();
  swift_release();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v58 = v104;
  char v59 = v105;
  uint64_t v90 = v106;
  LODWORD(v89) = v107;
  uint64_t v87 = v108;
  uint64_t v86 = v109;
  int v60 = *v54;
  uint64_t v61 = (uint64_t)v54;
  long long v62 = v92;
  sub_255A58290(v61, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for GlowModifier);
  if (v60 == 1)
  {
    char v63 = v59;
    uint64_t v64 = v58;
    uint64_t v65 = v62;
    uint64_t v66 = v93;
    sub_255ABA66C((uint64_t)v93);
    (*(void (**)(unsigned char *, void, uint64_t))(v53 + 104))(v48, *MEMORY[0x263F19968], v52);
    char v67 = sub_255C7DCB8();
    char v68 = *(void (**)(unsigned char *, uint64_t))(v53 + 8);
    v68(v48, v52);
    v68(v66, v52);
    uint64_t v69 = (uint64_t)v65;
    uint64_t v58 = v64;
    char v59 = v63;
    sub_255A582F8(v69, (uint64_t (*)(void))type metadata accessor for GlowModifier);
    double v70 = 1.0;
    if (v67) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_255A582F8((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for GlowModifier);
  }
  double v70 = 0.0;
LABEL_11:
  uint64_t v72 = v96;
  uint64_t v71 = v97;
  uint64_t v73 = v99;
  (*(void (**)(unsigned char *, void, uint64_t))(v97 + 104))(v96, *MEMORY[0x263F1B9B0], v99);
  uint64_t v74 = (uint64_t)v98;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v71 + 16))(v98, v72, v73);
  uint64_t v75 = (uint64_t (*)(void))MEMORY[0x263F190D8];
  sub_255A58290(v74, (uint64_t)&v13[*(int *)(v95 + 36)], MEMORY[0x263F190D8]);
  *(void *)double v13 = v57;
  *((_WORD *)v13 + 4) = 256;
  *((void *)v13 + 2) = 0x3FF0000000000000;
  *((_WORD *)v13 + 12) = 256;
  *((double *)v13 + 4) = a4 * 0.6;
  v13[40] = 0;
  *((void *)v13 + 6) = v58;
  v13[56] = v59;
  *((void *)v13 + 8) = v90;
  v13[72] = v89;
  uint64_t v76 = v86;
  *((void *)v13 + 10) = v87;
  *((void *)v13 + 11) = v76;
  *((double *)v13 + 12) = v70;
  swift_retain();
  sub_255A582F8(v74, v75);
  (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v72, v73);
  swift_release();
  uint64_t v77 = v100;
  sub_255A10514((uint64_t)v13, (uint64_t)v100, &qword_26B29ECE0);
  uint64_t v78 = v103;
  uint64_t v79 = v94;
  sub_255A09540((uint64_t)v103, (uint64_t)v94, &qword_26B29ECC0);
  uint64_t v80 = v101;
  sub_255A09540((uint64_t)v77, (uint64_t)v101, &qword_26B29ECE0);
  uint64_t v81 = v102;
  sub_255A09540((uint64_t)v79, v102, &qword_26B29ECC0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECC8);
  sub_255A09540((uint64_t)v80, v81 + *(int *)(v82 + 48), &qword_26B29ECE0);
  sub_255A095A4((uint64_t)v77, &qword_26B29ECE0);
  sub_255A095A4((uint64_t)v78, &qword_26B29ECC0);
  sub_255A095A4((uint64_t)v80, &qword_26B29ECE0);
  return sub_255A095A4((uint64_t)v79, &qword_26B29ECC0);
}

uint64_t sub_255A5739C()
{
  uint64_t result = sub_255C7FC88();
  qword_26B29EA80 = result;
  return result;
}

uint64_t sub_255A573BC@<X0>(void *a1@<X8>)
{
  if (qword_26B29EA88 != -1) {
    swift_once();
  }
  *a1 = qword_26B29EA80;

  return swift_retain();
}

uint64_t View.glowEffect(isActive:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MCUINamespace();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - v8;
  View.mcui.getter(a2, (uint64_t)&v11 - v8);
  MCUINamespace<A>.glowEffect(isActive:)(a1, v6, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t View.glowEffectForegroundColor(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  View.mcui.getter(a2, (uint64_t)&v9 - v6);
  MCUINamespace<A>.glowEffectForegroundColor(_:)(a1, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255A57620()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A576BC()
{
  return swift_getWitnessTable();
}

void *sub_255A57758(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    char v5 = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_255A57888(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255A57940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255A57A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_255A095A4(a1 + v7, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255A57B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  char v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255A57C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_255A095A4(a1 + v7, (uint64_t *)&unk_26B298500);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255A57D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A57D20);
}

uint64_t sub_255A57D20(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    double v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_255A57DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A57DE8);
}

unsigned char *sub_255A57DE8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255A57E90()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255A57F30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A57F4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A57F94()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE08);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  BOOL v5 = (int *)(type metadata accessor for GlowModifier() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  unint64_t v7 = v0 + v6 + v5[8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA18();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255A5813C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GlowModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A581A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE08) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for GlowModifier() - 8);
  unint64_t v7 = (unsigned __int8 *)(v1
                         + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_255A567A8((unsigned __int8 *)(v1 + v4), v7, a1);
}

uint64_t sub_255A58290(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255A582F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_255A58358()
{
  unint64_t result = qword_26B29EA90;
  if (!qword_26B29EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EA90);
  }
  return result;
}

ValueMetadata *type metadata accessor for GlowEffectForegroundColorKey()
{
  return &type metadata for GlowEffectForegroundColorKey;
}

unint64_t sub_255A583C0()
{
  unint64_t result = qword_269F21DE0;
  if (!qword_269F21DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DD0);
    sub_255A58460();
    sub_255A09998(&qword_26B29EDB8, &qword_26B29EDC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21DE0);
  }
  return result;
}

unint64_t sub_255A58460()
{
  unint64_t result = qword_269F21DE8;
  if (!qword_269F21DE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DC8);
    sub_255A584DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21DE8);
  }
  return result;
}

unint64_t sub_255A584DC()
{
  unint64_t result = qword_26B29EB90;
  if (!qword_26B29EB90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB98);
    sub_255A09998(&qword_26B29EE00, &qword_26B29EE08);
    sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EB90);
  }
  return result;
}

uint64_t sub_255A585A0()
{
  sub_255A1058C();

  return sub_255C7E8C8();
}

uint64_t sub_255A585E8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_255C80BF8();
    uint64_t v31 = (void *)sub_255C7F148();
    sub_255C7D788();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_255C7E588();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_255A093E4(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

__n128 sub_255A587DC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_255C80BF8();
    uint64_t v28 = (void *)sub_255C7F148();
    sub_255C7D788();

    uint64_t v19 = a17;
  }
  sub_255C7E588();
  sub_255A09540(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  void v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_255A589AC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_255C80BF8();
    uint64_t v28 = (void *)sub_255C7F148();
    sub_255C7D788();

    uint64_t v19 = a17;
  }
  sub_255C7E588();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v19;
  *(unsigned char *)(a9 + 16) = a18 & 1;
  *(_OWORD *)(a9 + 56) = v32;

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A58B88@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_255C80BF8();
    uint64_t v25 = (void *)sub_255C7F148();
    sub_255C7D788();
  }
  sub_255C7E588();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_retain();
}

double sub_255A58D44@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_255A587DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_269F22120, &qword_269F22128).n128_u64[0];
  return result;
}

double sub_255A58DA0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_255A587DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_269F21C98, &qword_269F22118).n128_u64[0];
  return result;
}

uint64_t sub_255A58DFC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_255C80BF8();
    uint64_t v23 = (void *)sub_255C7F148();
    sub_255C7D788();
  }
  sub_255C7E588();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 88) = v29;
  *(_OWORD *)(a9 + 104) = v30;
  *(_OWORD *)(a9 + 120) = v31;
  *(_OWORD *)(a9 + 136) = v32;
  *(_OWORD *)(a9 + 40) = v26;
  *(_OWORD *)(a9 + 56) = v27;
  *(void *)(a9 + 32) = *(void *)(v13 + 32);
  *(_OWORD *)(a9 + 72) = v28;

  return swift_bridgeObjectRetain();
}

void sub_255A58FC8()
{
  qword_269F21DF0 = 0x4026000000000000;
}

void sub_255A58FD8()
{
  qword_269F21DF8 = 0x4010000000000000;
}

double sub_255A58FE8()
{
  double result = 11.0;
  xmmword_269F21E00 = xmmword_255C87650;
  *(_OWORD *)&qword_269F21E10 = xmmword_255C87650;
  return result;
}

void sub_255A59000()
{
  qword_269F21E20 = 0x4028000000000000;
}

void sub_255A59010()
{
  qword_269F21E28 = 0x4014000000000000;
}

int64x2_t sub_255A59020()
{
  int64x2_t result = vdupq_n_s64(0x4050000000000000uLL);
  xmmword_269F21E30 = (__int128)result;
  return result;
}

double sub_255A59038()
{
  double result = 45.0;
  xmmword_269F21E40 = xmmword_255C87660;
  return result;
}

uint64_t sub_255A59050()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_255C7F328();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F1A6C8], v3);
  uint64_t v7 = sub_255C7F258();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_255C7F298();
  uint64_t v8 = sub_255C7F2B8();
  sub_255A095A4((uint64_t)v2, &qword_26B29BD88);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_269F21E50 = v8;
  return result;
}

void sub_255A591F4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C80]), sel_initWithStyle_reuseIdentifier_, 0, 0);
  objc_msgSend(v0, sel_bounds);
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v9.origin.x = v2;
  v9.origin.y = v4;
  v9.size.width = v6;
  v9.size.height = v8;
  qword_269F21E58 = CGRectGetHeight(v9);
}

uint64_t BubbleTip.init<>(titleView:actions:closeButtonHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v11 = (void (*)(void))MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = 1;
  v11();
  char v17 = 1;
  uint64_t v14 = sub_255C7E928();
  return sub_255A59558((uint64_t)&v18, v14, (uint64_t)v13, (uint64_t)&v17, a2, a3, a4, a6, a5);
}

uint64_t sub_255A59384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22190);
  swift_storeEnumTagMultiPayload();
  char v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269F221B8);
  uint64_t v22 = (uint64_t *)((char *)a9 + v21[23]);
  *uint64_t v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)((char *)a9 + v21[24]);
  *uint64_t v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  swift_storeEnumTagMultiPayload();
  long long v24 = (uint64_t *)((char *)a9 + v21[25]);
  *long long v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (char *)a9 + v21[17];
  *(void *)uint64_t v25 = a1;
  *((void *)v25 + 1) = a2;
  *((void *)v25 + 2) = a3;
  v25[24] = a4;
  *(uint64_t *)((char *)a9 + v21[18]) = a5;
  uint64_t result = sub_255A10514(a6, (uint64_t)a9 + v21[19], &qword_269F21E78);
  long long v27 = (uint64_t *)((char *)a9 + v21[20]);
  *long long v27 = a7;
  v27[1] = a8;
  v27[2] = a10;
  _OWORD v27[3] = a11;
  *(uint64_t *)((char *)a9 + v21[21]) = a12;
  long long v28 = (uint64_t *)((char *)a9 + v21[22]);
  *long long v28 = a13;
  v28[1] = a14;
  return result;
}

uint64_t sub_255A59558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>, uint64_t a9)
{
  *a8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22190);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (int *)type metadata accessor for BubbleTip();
  uint64_t v15 = (uint64_t *)((char *)a8 + v14[23]);
  *uint64_t v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (uint64_t *)((char *)a8 + v14[24]);
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  swift_storeEnumTagMultiPayload();
  char v17 = (uint64_t *)((char *)a8 + v14[25]);
  *char v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
  swift_storeEnumTagMultiPayload();
  char v18 = (char *)a8 + v14[17];
  uint64_t v19 = sub_255C80E88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a1, v19);
  *(uint64_t *)((char *)a8 + v14[18]) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))((char *)a8 + v14[19], a3, a9);
  uint64_t v20 = (char *)a8 + v14[20];
  uint64_t v21 = sub_255C80E88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a4, v21);
  *(uint64_t *)((char *)a8 + v14[21]) = a5;
  uint64_t v23 = (uint64_t *)((char *)a8 + v14[22]);
  *uint64_t v23 = a6;
  v23[1] = a7;
  return result;
}

uint64_t BubbleTip.init<>(titleView:subtitleView:actions:closeButtonHandler:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v22 = a7;
  uint64_t v23 = a3;
  uint64_t v11 = sub_255C80E88();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v26 = 1;
  uint64_t v18 = a1(v15);
  a2(v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56))(v14, 0, 1, a8);
  uint64_t v19 = sub_255C7E928();
  return sub_255A59558((uint64_t)&v26, v19, (uint64_t)v17, (uint64_t)v14, v23, v24, v25, v22, a6);
}

uint64_t BubbleTip.init<>(accessoryView:accessoryViewVerticalAlignment:titleView:actions:closeButtonHandler:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v20 = a2;
  uint64_t v21 = a4;
  uint64_t v19 = a7;
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C80E88();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v19 - v15;
  a1(v14);
  uint64_t v17 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56))(v16, 0, 1, a8);
  a3(v17);
  char v24 = 1;
  return sub_255A59558((uint64_t)v16, v20, (uint64_t)v12, (uint64_t)&v24, v21, v22, v23, v19, a9);
}

uint64_t BubbleTip.init(accessoryView:accessoryViewVerticalAlignment:titleView:subtitleView:actions:closeButtonHandler:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, uint64_t a14)
{
  uint64_t v36 = a2;
  uint64_t v37 = a6;
  v29[1] = a5;
  long long v30 = a4;
  long long v33 = a7;
  uint64_t v34 = a9;
  uint64_t v35 = a8;
  long long v32 = a13;
  uint64_t v31 = a14;
  uint64_t v16 = sub_255C80E88();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v29 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_255C80E88();
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)v29 - v24;
  a1(v23);
  uint64_t v26 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v25, 0, 1, a10);
  uint64_t v27 = a3(v26);
  v30(v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a12 - 8) + 56))(v19, 0, 1, a12);
  return sub_255A59558((uint64_t)v25, v36, (uint64_t)v21, (uint64_t)v19, v37, v35, v34, v33, a11);
}

uint64_t BubbleTip.init<>(image:title:subtitle:bundle:tableName:actions:closeButtonHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, void *a5@<X5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  v40[2] = a7;
  v40[3] = a5;
  uint64_t v42 = a2;
  uint64_t v43 = a4;
  int v41 = a3;
  uint64_t v52 = a8;
  uint64_t v17 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (BOOL *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21E78);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)a1;
  uint64_t v50 = *(void *)(a1 + 8);
  uint64_t v51 = v23;
  uint64_t v49 = *(void *)(a1 + 16);
  int v24 = *(unsigned __int8 *)(a1 + 24);
  int v48 = v24;
  if (v24 != 255 && (v24 & 1) != 0) {
    uint64_t v25 = sub_255C7E918();
  }
  else {
    uint64_t v25 = sub_255C7E928();
  }
  v40[1] = a10;
  uint64_t v46 = a15;
  uint64_t v47 = v25;
  uint64_t v44 = a13;
  uint64_t v45 = a14;
  v40[0] = a10;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_255C7F538();
  uint64_t v28 = v27;
  uint64_t v42 = a11;
  uint64_t v43 = a12;
  char v30 = v29;
  uint64_t v32 = v31;
  *(void *)&v19[*(int *)(v17 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v19 = a6 != 0;
  sub_255A5EE1C((uint64_t)v19, (uint64_t)&v22[*(int *)(v20 + 36)]);
  *(void *)uint64_t v22 = v26;
  *((void *)v22 + 1) = v28;
  v22[16] = v30 & 1;
  *((void *)v22 + 3) = v32;
  sub_255A5F0C4((uint64_t)v19, type metadata accessor for BubbleTipTitleViewModifier);
  if (a6)
  {
    uint64_t v34 = sub_255C7F538();
    uint64_t v36 = v35;
    uint64_t v38 = v37 & 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v34 = 0;
    uint64_t v36 = 0;
    uint64_t v38 = 0;
    uint64_t v33 = 0;
  }
  return sub_255A59384(v51, v50, v49, v48, v47, (uint64_t)v22, v34, v36, v52, v38, v33, v44, v45, v46);
}

uint64_t type metadata accessor for BubbleTipTitleViewModifier(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22060);
}

uint64_t BubbleTip.init<>(image:title:subtitle:actions:closeButtonHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v45 = a8;
  uint64_t v46 = a7;
  uint64_t v47 = a6;
  uint64_t v43 = a5;
  uint64_t v44 = a9;
  uint64_t v36 = a4;
  uint64_t v12 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (BOOL *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21E78);
  MEMORY[0x270FA5388](v37);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)a1;
  uint64_t v41 = *(void *)(a1 + 8);
  uint64_t v42 = v17;
  uint64_t v40 = *(void *)(a1 + 16);
  int v18 = *(unsigned __int8 *)(a1 + 24);
  int v39 = v18;
  if (v18 != 255 && (v18 & 1) != 0) {
    uint64_t v19 = sub_255C7E918();
  }
  else {
    uint64_t v19 = sub_255C7E928();
  }
  uint64_t v38 = v19;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  sub_255A1D78C();
  uint64_t v20 = sub_255C7F548();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = v43;
  BOOL v28 = v43 != 0;
  *(void *)&v14[*(int *)(v12 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  swift_storeEnumTagMultiPayload();
  BOOL *v14 = v28;
  sub_255A5EE1C((uint64_t)v14, (uint64_t)&v16[*(int *)(v37 + 36)]);
  *(void *)uint64_t v16 = v20;
  *((void *)v16 + 1) = v22;
  v16[16] = v24 & 1;
  *((void *)v16 + 3) = v26;
  sub_255A5F0C4((uint64_t)v14, type metadata accessor for BubbleTipTitleViewModifier);
  if (v27)
  {
    uint64_t v48 = v36;
    uint64_t v49 = v27;
    uint64_t v30 = sub_255C7F548();
    uint64_t v32 = v31;
    uint64_t v34 = v33 & 1;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v29 = 0;
  }
  return sub_255A59384(v42, v41, v40, v39, v38, (uint64_t)v16, v30, v32, v44, v34, v29, v47, v46, v45);
}

uint64_t BubbleTip.init<>(accessoryView:accessoryViewVerticalAlignment:title:subtitle:bundle:tableName:actions:closeButtonHandler:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(void), uint64_t a19)
{
  v44[1] = a7;
  LODWORD(v48) = a5;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v56 = a1;
  uint64_t v57 = a2;
  char v55 = a8;
  uint64_t v53 = a19;
  uint64_t v54 = a17;
  uint64_t v52 = a16;
  uint64_t v50 = a6;
  uint64_t v51 = a15;
  uint64_t v19 = type metadata accessor for BubbleTipTitleViewModifier(0);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (BOOL *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21E78);
  MEMORY[0x270FA5388](v45);
  char v24 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_255C80E88();
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  BOOL v28 = (char *)v44 - v27;
  v56(v26);
  uint64_t v29 = *(void (**)(char *, void, uint64_t, void (*)(void)))(*((void *)a18 - 1) + 56);
  uint64_t v49 = v28;
  uint64_t v56 = a18;
  v29(v28, 0, 1, a18);
  v44[0] = a12;
  swift_bridgeObjectRetain();
  uint64_t v47 = a13;
  uint64_t v48 = a12;
  uint64_t v50 = a14;
  uint64_t v30 = sub_255C7F538();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v36 = v35;
  *(void *)&v22[*(int *)(v20 + 28)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  uint64_t v37 = v45;
  swift_storeEnumTagMultiPayload();
  *uint64_t v22 = a9 != 0;
  sub_255A5EE1C((uint64_t)v22, (uint64_t)&v24[*(int *)(v37 + 36)]);
  *(void *)char v24 = v30;
  *((void *)v24 + 1) = v32;
  v24[16] = v34 & 1;
  *((void *)v24 + 3) = v36;
  sub_255A5F0C4((uint64_t)v22, type metadata accessor for BubbleTipTitleViewModifier);
  if (a9)
  {
    uint64_t v38 = sub_255C7F538();
    uint64_t v42 = v41 & 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v42 = 0;
    uint64_t v40 = 0;
  }
  v58[0] = v38;
  v58[1] = v39;
  v58[2] = v42;
  v58[3] = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21E80);
  sub_255A5EE80();
  sub_255A5EF2C();
  return sub_255A59558((uint64_t)v49, v57, (uint64_t)v24, (uint64_t)v58, v51, v52, v54, v55, v37);
}

uint64_t sub_255A5A57C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *((void *)a1 - 1);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  CGFloat v8 = (uint64_t *)(v2 + *(int *)(v7 + 96));
  uint64_t v9 = *v8;
  if (*v8)
  {
    uint64_t v10 = v8[1];
    (*(void (**)(char *))(v5 + 16))((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v12 = swift_allocObject();
    long long v13 = a1[2];
    *(_OWORD *)(v12 + 16) = a1[1];
    *(_OWORD *)(v12 + 32) = v13;
    *(_OWORD *)(v12 + 48) = a1[3];
    *(void *)(v12 + 64) = v9;
    *(void *)(v12 + 72) = v10;
    (*(void (**)(unint64_t, char *, _OWORD *))(v5 + 32))(v12 + v11, (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
    sub_255A0DE10(v9);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22198);
    sub_255A690DC();
    sub_255C7FEA8();
    sub_255A0DE20(v9);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22188);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22188);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    return v17(a2, 1, 1, v16);
  }
}

uint64_t sub_255A5A7D4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v20[0] = a8;
  v20[1] = a3;
  uint64_t v14 = sub_255C7E0A8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v16);
  v20[2] = a4;
  v20[3] = a5;
  void v20[4] = a6;
  void v20[5] = a7;
  v20[6] = v20[0];
  v20[7] = a9;
  type metadata accessor for BubbleTip();
  sub_255ABAAE0((uint64_t)v18);
  sub_255C7E098();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_255A5A900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v2);
  CGFloat v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F221A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  CGFloat v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_255C7FD78();
  if (qword_269F1FE38 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_269F21E50;
  uint64_t KeyPath = swift_getKeyPath();
  v19[1] = v9;
  v19[2] = KeyPath;
  v19[3] = v10;
  uint64_t v12 = *MEMORY[0x263F18CB8];
  uint64_t v13 = sub_255C7E378();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v4, v12, v13);
  sub_255A5F124(qword_269F21878, MEMORY[0x263F18D80]);
  swift_retain();
  uint64_t result = sub_255C80578();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F68);
    sub_255A6138C();
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    sub_255C7F7B8();
    sub_255A095A4((uint64_t)v4, &qword_269F21848);
    swift_release();
    swift_release();
    swift_release();
    id v15 = objc_msgSend(self, sel_quaternaryLabelColor);
    uint64_t v16 = MEMORY[0x25A2955B0](v15);
    uint64_t v17 = swift_getKeyPath();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(a1, v8, v5);
    uint64_t v18 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F22198) + 36));
    *uint64_t v18 = v17;
    v18[1] = v16;
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255A5AC34@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_255C7EA58();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22138);
  return sub_255A5AC94();
}

uint64_t sub_255A5AC94()
{
  return sub_255C80068();
}

uint64_t sub_255A5ADC0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22160);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = sub_255C80058();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = *a1;
  uint64_t v18 = a1[3];
  sub_255C80048();
  uint64_t v23 = v17;
  long long v24 = *(_OWORD *)(a1 + 1);
  uint64_t v25 = v18;
  sub_255A68B1C();
  sub_255C7F998();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v19(v14, v16, v10);
  sub_255A09540((uint64_t)v9, (uint64_t)v7, &qword_269F22160);
  v19(a2, v14, v10);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22170);
  sub_255A09540((uint64_t)v7, (uint64_t)&a2[*(int *)(v20 + 48)], &qword_269F22160);
  sub_255A095A4((uint64_t)v9, &qword_269F22160);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v16, v10);
  sub_255A095A4((uint64_t)v7, &qword_269F22160);
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v10);
}

uint64_t BubbleTip.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v133 = a2;
  uint64_t v126 = a1[2];
  sub_255C80E88();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  uint64_t v3 = a1[3];
  uint64_t v119 = a1;
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EA8);
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FED8();
  uint64_t v4 = a1[4];
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  sub_255C7E458();
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EB0);
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v5;
  uint64_t v6 = sub_255C7FED8();
  uint64_t v111 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v110 = (char *)v100 - v7;
  uint64_t v139 = v8;
  uint64_t v9 = sub_255C7E458();
  uint64_t v113 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v112 = (char *)v100 - v10;
  uint64_t v11 = type metadata accessor for BubbleBackground(255);
  uint64_t v136 = v9;
  uint64_t v12 = sub_255C7E458();
  uint64_t v115 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v114 = (char *)v100 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29F240);
  uint64_t v138 = v12;
  uint64_t v14 = sub_255C7E458();
  uint64_t v117 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v116 = (char *)v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v125 = (char *)v100 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v122 = (void *)((char *)v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  uint64_t v124 = (uint64_t)v100 - v21;
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EB8);
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FED8();
  sub_255C7E458();
  uint64_t v121 = v4;
  sub_255C80E88();
  uint64_t v123 = v3;
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  sub_255C7E458();
  sub_255C7E458();
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  v100[1] = swift_getWitnessTable();
  uint64_t v22 = sub_255C7FF98();
  uint64_t v101 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v24 = (char *)v100 - v23;
  uint64_t v135 = v25;
  uint64_t v26 = sub_255C7E458();
  uint64_t v103 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v102 = (char *)v100 - v27;
  uint64_t v134 = v28;
  uint64_t v127 = v11;
  uint64_t v29 = sub_255C7E458();
  uint64_t v105 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v104 = (char *)v100 - v30;
  uint64_t v129 = v31;
  uint64_t v32 = sub_255C7E458();
  uint64_t v107 = *(void *)(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v106 = (char *)v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v118 = (char *)v100 - v35;
  uint64_t v36 = sub_255C7EA38();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)v100 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = v32;
  uint64_t v132 = v14;
  uint64_t v40 = sub_255C7EBE8();
  uint64_t v130 = *(void *)(v40 - 8);
  uint64_t v131 = v40;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)v100 - v41;
  uint64_t v43 = v119;
  uint64_t v44 = v120;
  sub_255AB9974((uint64_t)v39);
  LOBYTE(v32) = sub_255C7EA28();
  uint64_t v45 = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  uint64_t v46 = MEMORY[0x263F18C10];
  uint64_t v137 = (uint64_t)v42;
  if (v32)
  {
    if (qword_269F1FE08 != -1) {
      uint64_t v45 = swift_once();
    }
    MEMORY[0x270FA5388](v45);
    uint64_t v47 = v123;
    v100[-8] = v126;
    v100[-7] = v47;
    v100[-6] = v121;
    *(_OWORD *)&v100[-5] = *(_OWORD *)(v43 + 5);
    v100[-3] = v43[7];
    v100[-2] = v44;
    sub_255C7EA58();
    sub_255C7FF88();
    uint64_t v49 = v134;
    uint64_t v48 = v135;
    uint64_t v50 = v128;
    if (qword_269F1FE10 != -1) {
      swift_once();
    }
    uint64_t v51 = swift_getWitnessTable();
    uint64_t v52 = v102;
    sub_255C7FAE8();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v24, v48);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v54 = v122;
    *uint64_t v122 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = v127;
    uint64_t v56 = (uint64_t *)((char *)v54 + *(int *)(v127 + 20));
    *uint64_t v56 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = (uint64_t)v54;
    uint64_t v58 = v124;
    sub_255A5F060(v57, v124);
    uint64_t v150 = v51;
    uint64_t v151 = MEMORY[0x263F18C10];
    uint64_t v59 = swift_getWitnessTable();
    int v60 = v104;
    MEMORY[0x25A295390](v58, v49, v55, v59);
    sub_255A5F0C4(v58, type metadata accessor for BubbleBackground);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v52, v49);
    if (qword_269F1FE18 != -1) {
      swift_once();
    }
    uint64_t v127 = sub_255A5F124(&qword_269F21ED0, (void (*)(uint64_t))type metadata accessor for BubbleBackground);
    uint64_t v148 = v59;
    uint64_t v149 = v127;
    uint64_t v61 = v129;
    uint64_t v62 = swift_getWitnessTable();
    uint64_t v63 = (uint64_t)v106;
    sub_255C7F728();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v60, v61);
    uint64_t v64 = sub_255A09998(&qword_26B29F238, (uint64_t *)&unk_26B29F240);
    uint64_t v146 = v62;
    uint64_t v147 = v64;
    swift_getWitnessTable();
    uint64_t v65 = v50;
    uint64_t v66 = v118;
    sub_255A20F54(v63);
    char v67 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
    v67(v63, v65);
    sub_255A20F54(v66);
    uint64_t v144 = swift_getWitnessTable();
    uint64_t v145 = MEMORY[0x263F18C10];
    uint64_t v142 = swift_getWitnessTable();
    uint64_t v143 = v127;
    uint64_t v140 = swift_getWitnessTable();
    uint64_t v141 = v64;
    swift_getWitnessTable();
    sub_255A44030(v63, v65);
    v67(v63, v65);
    v67((uint64_t)v118, v65);
  }
  else
  {
    if (qword_269F1FE00 != -1) {
      uint64_t v45 = swift_once();
    }
    MEMORY[0x270FA5388](v45);
    uint64_t v68 = v123;
    v100[-8] = v126;
    v100[-7] = v68;
    v100[-6] = v121;
    *(_OWORD *)&v100[-5] = *(_OWORD *)(v43 + 5);
    v100[-3] = v43[7];
    v100[-2] = v44;
    sub_255C7E928();
    uint64_t v69 = v110;
    sub_255C7FEC8();
    uint64_t v71 = v138;
    uint64_t v70 = v139;
    uint64_t v72 = v136;
    if (qword_269F1FE10 != -1) {
      swift_once();
    }
    uint64_t v73 = swift_getWitnessTable();
    uint64_t v74 = v112;
    sub_255C7FAE8();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v69, v70);
    uint64_t v75 = swift_getKeyPath();
    uint64_t v76 = v122;
    *uint64_t v122 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
    swift_storeEnumTagMultiPayload();
    uint64_t v77 = v127;
    uint64_t v78 = (uint64_t *)((char *)v76 + *(int *)(v127 + 20));
    *uint64_t v78 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = (uint64_t)v76;
    uint64_t v80 = v124;
    sub_255A5F060(v79, v124);
    uint64_t v176 = v73;
    uint64_t v177 = v46;
    uint64_t v81 = swift_getWitnessTable();
    uint64_t v82 = v114;
    MEMORY[0x25A295390](v80, v72, v77, v81);
    sub_255A5F0C4(v80, type metadata accessor for BubbleBackground);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v74, v72);
    if (qword_269F1FE18 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_255A5F124(&qword_269F21ED0, (void (*)(uint64_t))type metadata accessor for BubbleBackground);
    uint64_t v174 = v81;
    uint64_t v175 = v83;
    uint64_t v84 = swift_getWitnessTable();
    uint64_t v85 = (uint64_t)v116;
    sub_255C7F728();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v82, v71);
    uint64_t v127 = sub_255A09998(&qword_26B29F238, (uint64_t *)&unk_26B29F240);
    uint64_t v172 = v84;
    uint64_t v173 = v127;
    uint64_t v86 = v132;
    swift_getWitnessTable();
    uint64_t v87 = v125;
    sub_255A20F54(v85);
    char v88 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
    v88(v85, v86);
    sub_255A20F54(v87);
    uint64_t v170 = swift_getWitnessTable();
    uint64_t v171 = v46;
    uint64_t v168 = swift_getWitnessTable();
    uint64_t v169 = v83;
    uint64_t v166 = swift_getWitnessTable();
    uint64_t v167 = v127;
    uint64_t v89 = v128;
    swift_getWitnessTable();
    sub_255A44128(v85, v89, v86);
    v88(v85, v86);
    v88((uint64_t)v125, v86);
  }
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v90 = MEMORY[0x263F18C10];
  uint64_t v165 = MEMORY[0x263F18C10];
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = sub_255A5F124(&qword_269F21ED0, (void (*)(uint64_t))type metadata accessor for BubbleBackground);
  uint64_t v162 = v91;
  uint64_t v163 = v92;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v94 = sub_255A09998(&qword_26B29F238, (uint64_t *)&unk_26B29F240);
  uint64_t v160 = v93;
  uint64_t v161 = v94;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v159 = v90;
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v157 = v92;
  uint64_t v154 = swift_getWitnessTable();
  uint64_t v155 = v94;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v152 = v95;
  uint64_t v153 = v96;
  uint64_t v97 = v131;
  swift_getWitnessTable();
  uint64_t v98 = v137;
  sub_255A20F54(v137);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 8))(v98, v97);
}

uint64_t sub_255A5C450@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v67 = a7;
  uint64_t v90 = a6;
  uint64_t v91 = a5;
  uint64_t v89 = a1;
  uint64_t v83 = a8;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EB0);
  uint64_t v11 = MEMORY[0x270FA5388](v82);
  uint64_t v81 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v80 = (uint64_t)&v62 - v13;
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v70 = v14;
  uint64_t v68 = WitnessTable;
  uint64_t v16 = sub_255C7FF98();
  uint64_t v71 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v69 = (char *)&v62 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  uint64_t v72 = v16;
  uint64_t v18 = sub_255C7E458();
  uint64_t v74 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v73 = (char *)&v62 - v19;
  uint64_t v75 = v20;
  uint64_t v79 = sub_255C7E458();
  uint64_t v76 = *(void *)(v79 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v79);
  uint64_t v78 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v77 = (char *)&v62 - v23;
  sub_255C80E88();
  sub_255C7F0D8();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EB8);
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v24 = sub_255C7FED8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v62 - v26;
  uint64_t v28 = sub_255C7E458();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v85 = (char *)&v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v84 = (char *)&v62 - v32;
  uint64_t v87 = a2;
  uint64_t v92 = a2;
  char v88 = a3;
  uint64_t v93 = a3;
  uint64_t v86 = a4;
  uint64_t v94 = a4;
  uint64_t v95 = v91;
  uint64_t v96 = v90;
  uint64_t v33 = v67;
  uint64_t v97 = v67;
  uint64_t v98 = v89;
  sub_255C7E928();
  sub_255C7FEC8();
  sub_255C7F1E8();
  if (qword_269F1FE10 != -1) {
    swift_once();
  }
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v85;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v113 = v34;
  uint64_t v114 = MEMORY[0x263F18C10];
  uint64_t v63 = swift_getWitnessTable();
  sub_255A20F54(v35);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
  uint64_t v66 = v29 + 8;
  uint64_t v65 = v36;
  uint64_t v37 = v36(v35, v28);
  uint64_t v64 = v28;
  uint64_t v38 = v29;
  if (qword_269F1FE08 != -1) {
    uint64_t v37 = swift_once();
  }
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = v88;
  *(&v62 - 8) = (uint64_t)v87;
  *(&v62 - 7) = (uint64_t)v39;
  uint64_t v40 = v91;
  *(&v62 - 6) = v86;
  *(&v62 - 5) = v40;
  uint64_t v41 = v90;
  *(&v62 - 4) = v90;
  *(&v62 - 3) = v33;
  *(&v62 - 2) = v89;
  sub_255C7EA58();
  uint64_t v42 = v69;
  sub_255C7FF88();
  uint64_t v70 = MEMORY[0x263F1B6E0];
  uint64_t v43 = v72;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v73;
  sub_255C7F8A8();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v43);
  uint64_t v46 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v111 = v44;
  uint64_t v112 = v46;
  uint64_t v47 = v75;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v78;
  sub_255C7FAE8();
  (*(void (**)(char *, void))(v74 + 8))(v45, v47);
  uint64_t v109 = v48;
  uint64_t v110 = MEMORY[0x263F18C10];
  uint64_t v50 = v79;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v51 = v77;
  sub_255A20F54(v49);
  uint64_t v52 = v76;
  uint64_t v75 = *(void (**)(void, void))(v76 + 8);
  v75(v49, v50);
  uint64_t v103 = v87;
  uint64_t v104 = v88;
  uint64_t v105 = v86;
  uint64_t v106 = v91;
  uint64_t v107 = v41;
  uint64_t v108 = v33;
  type metadata accessor for BubbleTip();
  uint64_t v53 = v80;
  sub_255A5AC34(v80);
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  uint64_t v55 = v85;
  uint64_t v56 = v84;
  uint64_t v57 = v64;
  v54(v85, v84, v64);
  uint64_t v103 = v55;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v51, v50);
  uint64_t v104 = v49;
  uint64_t v58 = v81;
  sub_255A09540(v53, v81, &qword_269F21EB0);
  uint64_t v105 = v58;
  v102[0] = v57;
  v102[1] = v50;
  v102[2] = v82;
  uint64_t v99 = v63;
  uint64_t v100 = v74;
  uint64_t v101 = sub_255A09998(&qword_269F22130, &qword_269F21EB0);
  sub_255AF64A0((uint64_t)&v103, 3uLL, (uint64_t)v102);
  sub_255A095A4(v53, &qword_269F21EB0);
  uint64_t v59 = (void (*)(char *, uint64_t))v75;
  v75(v51, v50);
  int v60 = v65;
  v65(v56, v57);
  sub_255A095A4(v58, &qword_269F21EB0);
  v59(v49, v50);
  return v60(v55, v57);
}

uint64_t sub_255A5CF34@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v32 = a7;
  uint64_t v31 = a6;
  uint64_t v30 = a4;
  v29[1] = a1;
  uint64_t v35 = a8;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EB8);
  uint64_t v11 = MEMORY[0x270FA5388](v34);
  uint64_t v33 = (uint64_t)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v29 - v13;
  sub_255C80E88();
  sub_255C7F0D8();
  uint64_t v15 = sub_255C7E458();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v29 - v20;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v47 = v30;
  uint64_t v48 = a5;
  uint64_t v49 = v31;
  uint64_t v50 = v32;
  uint64_t v22 = (_OWORD *)type metadata accessor for BubbleTip();
  uint64_t v44 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F8D8();
  uint64_t v24 = sub_255A5F124((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v42 = WitnessTable;
  uint64_t v43 = v24;
  uint64_t v25 = swift_getWitnessTable();
  sub_255A20F54(v19);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v19, v15);
  sub_255A5A57C(v22, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  uint64_t v40 = 0;
  char v41 = 1;
  uint64_t v45 = v19;
  uint64_t v46 = &v40;
  uint64_t v27 = v33;
  sub_255A09540((uint64_t)v14, v33, &qword_269F21EB8);
  uint64_t v47 = v27;
  v39[0] = v15;
  v39[1] = MEMORY[0x263F1B6B0];
  void v39[2] = v34;
  uint64_t v36 = v25;
  uint64_t v37 = MEMORY[0x263F1B698];
  unint64_t v38 = sub_255A68B70();
  sub_255AF64A0((uint64_t)&v45, 3uLL, (uint64_t)v39);
  sub_255A095A4((uint64_t)v14, &qword_269F21EB8);
  v26(v21, v15);
  sub_255A095A4(v27, &qword_269F21EB8);
  return ((uint64_t (*)(char *, uint64_t))v26)(v19, v15);
}

uint64_t sub_255A5D2B8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a5;
  uint64_t v39 = a8;
  uint64_t v13 = sub_255C80E88();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v38 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = *((void *)a3 - 1);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v33 - v23;
  uint64_t v43 = v35;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = v36;
  uint64_t v34 = a6;
  uint64_t v47 = a6;
  uint64_t v48 = a7;
  uint64_t v25 = type metadata accessor for BubbleTip();
  sub_255A20F54(a1 + *(int *)(v25 + 76));
  uint64_t v26 = a1 + *(int *)(v25 + 80);
  v42[2] = a7;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A20F54(v26);
  (*(void (**)(char *, char *, char *))(v19 + 16))(v22, v24, a3);
  uint64_t v43 = v22;
  uint64_t v29 = v37;
  uint64_t v28 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v38, v18, v13);
  uint64_t v44 = v28;
  v42[0] = a3;
  v42[1] = v13;
  uint64_t v40 = v34;
  uint64_t v41 = WitnessTable;
  sub_255AF64A0((uint64_t)&v43, 2uLL, (uint64_t)v42);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v29 + 8);
  v30(v18, v13);
  uint64_t v31 = *(void (**)(char *, char *))(v19 + 8);
  v31(v24, a3);
  v30(v28, v13);
  return ((uint64_t (*)(char *, char *))v31)(v22, a3);
}

uint64_t sub_255A5D590@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v54 = a6;
  uint64_t v55 = a7;
  uint64_t v42 = a5;
  uint64_t v52 = a4;
  uint64_t v53 = a1;
  uint64_t v51 = a8;
  sub_255C7F0D8();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EA8);
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FED8();
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EB0);
  swift_getTupleTypeMetadata2();
  uint64_t v44 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v48 = sub_255C7FF98();
  uint64_t v45 = *(void *)(v48 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v37 - v12;
  sub_255C80E88();
  uint64_t v13 = sub_255C7E458();
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = sub_255C7E458();
  uint64_t v41 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v56 = (char *)&v37 - v20;
  uint64_t v49 = a2;
  int v60 = a2;
  uint64_t v61 = a3;
  uint64_t v50 = a3;
  uint64_t v21 = v42;
  uint64_t v62 = v52;
  uint64_t v63 = v42;
  uint64_t v64 = v54;
  uint64_t v65 = v55;
  type metadata accessor for BubbleTip();
  sub_255C7F1B8();
  if (qword_269F1FE10 != -1) {
    swift_once();
  }
  v59[6] = v21;
  uint64_t v22 = swift_getWitnessTable();
  sub_255C7FAF8();
  v59[4] = v22;
  v59[5] = MEMORY[0x263F18C10];
  uint64_t v23 = swift_getWitnessTable();
  sub_255C7F8D8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v13);
  uint64_t v24 = sub_255A5F124((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  v59[2] = v23;
  v59[3] = v24;
  uint64_t v38 = swift_getWitnessTable();
  sub_255A20F54(v19);
  uint64_t v25 = v41;
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  uint64_t v40 = v41 + 8;
  uint64_t v26 = v39(v19, v16);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (uint64_t)v50;
  *(&v37 - 8) = (uint64_t)v49;
  *(&v37 - 7) = v27;
  *(&v37 - 6) = v52;
  *(&v37 - 5) = v21;
  uint64_t v28 = v55;
  *(&v37 - 4) = v54;
  *(&v37 - 3) = v28;
  *(&v37 - 2) = v53;
  sub_255C7EA58();
  uint64_t v29 = v47;
  sub_255C7FF88();
  uint64_t v30 = v48;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = v46;
  sub_255A20F54(v29);
  uint64_t v33 = v45;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v45 + 8);
  v34(v29, v30);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v56, v16);
  int v60 = v19;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v32, v30);
  uint64_t v61 = v29;
  v59[0] = v16;
  v59[1] = v30;
  uint64_t v57 = v38;
  uint64_t v58 = v31;
  sub_255AF64A0((uint64_t)&v60, 2uLL, (uint64_t)v59);
  v34(v32, v30);
  uint64_t v35 = v39;
  v39(v56, v16);
  v34(v29, v30);
  return v35(v19, v16);
}

uint64_t sub_255A5DCDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v43 = a5;
  uint64_t v40 = a2;
  uint64_t v46 = a1;
  uint64_t v39 = a8;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EB0);
  uint64_t v10 = MEMORY[0x270FA5388](v36);
  uint64_t v38 = (uint64_t)&WitnessTable - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v37 = (uint64_t)&WitnessTable - v12;
  sub_255C7F0D8();
  uint64_t v41 = a3;
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EA8);
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FED8();
  uint64_t v42 = a4;
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_255C7FF98();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&WitnessTable - v15;
  uint64_t v17 = sub_255C7E458();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&WitnessTable - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v35 = (char *)&WitnessTable - v23;
  if (qword_269F1FE08 != -1) {
    uint64_t v22 = swift_once();
  }
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = v41;
  *(&WitnessTable - 8) = v40;
  *(&WitnessTable - 7) = v24;
  uint64_t v25 = v43;
  *(&WitnessTable - 6) = v42;
  *(&WitnessTable - 5) = v25;
  uint64_t v26 = v45;
  *(&WitnessTable - 4) = v44;
  *(&WitnessTable - 3) = v26;
  *(&WitnessTable - 2) = v46;
  sub_255C7EA58();
  sub_255C7FF88();
  if (qword_269F1FE10 != -1) {
    swift_once();
  }
  uint64_t v27 = swift_getWitnessTable();
  sub_255C7FAE8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v56 = v27;
  uint64_t v57 = MEMORY[0x263F18C10];
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v35;
  sub_255A20F54(v21);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v18 + 8);
  v30(v21, v17);
  uint64_t v50 = (char *)v40;
  uint64_t v51 = v41;
  uint64_t v52 = v42;
  uint64_t v53 = v43;
  uint64_t v54 = v44;
  uint64_t v55 = v45;
  type metadata accessor for BubbleTip();
  uint64_t v31 = v37;
  sub_255A5AC34(v37);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v29, v17);
  uint64_t v50 = v21;
  uint64_t v32 = v38;
  sub_255A09540(v31, v38, &qword_269F21EB0);
  uint64_t v51 = v32;
  v49[0] = v17;
  v49[1] = v36;
  uint64_t v47 = v28;
  uint64_t v48 = sub_255A09998(&qword_269F22130, &qword_269F21EB0);
  sub_255AF64A0((uint64_t)&v50, 2uLL, (uint64_t)v49);
  sub_255A095A4(v31, &qword_269F21EB0);
  v30(v29, v17);
  sub_255A095A4(v32, &qword_269F21EB0);
  return ((uint64_t (*)(char *, uint64_t))v30)(v21, v17);
}

uint64_t sub_255A5E2AC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v58 = a7;
  uint64_t v54 = a2;
  uint64_t v56 = a1;
  uint64_t v72 = a8;
  uint64_t v61 = sub_255C80E88();
  uint64_t v64 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v57 = (char *)&v53 - v13;
  sub_255C7F0D8();
  uint64_t v68 = sub_255C7E458();
  uint64_t v66 = sub_255C80E88();
  uint64_t v70 = *(void *)(v66 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v66);
  uint64_t v71 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v73 = (char *)&v53 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v69 = (char *)&v53 - v18;
  uint64_t v19 = a3;
  uint64_t v55 = a3;
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EA8);
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v20 = sub_255C7FED8();
  uint64_t v74 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v67 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v53 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v53 - v26;
  sub_255C7E918();
  uint64_t v75 = a2;
  uint64_t v76 = v19;
  uint64_t v28 = a4;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v29 = v58;
  uint64_t v79 = a6;
  uint64_t v80 = v58;
  uint64_t v30 = v56;
  uint64_t v81 = v56;
  sub_255C7FEC8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = v27;
  uint64_t v32 = v57;
  uint64_t v33 = v61;
  uint64_t v59 = WitnessTable;
  sub_255A20F54(v25);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v74 + 8);
  uint64_t v60 = v20;
  uint64_t v63 = v74 + 8;
  uint64_t v62 = v34;
  v34(v25, v20);
  uint64_t v85 = v54;
  uint64_t v86 = v55;
  uint64_t v87 = v28;
  uint64_t v88 = a5;
  uint64_t v89 = a6;
  uint64_t v90 = v29;
  uint64_t v35 = v64;
  uint64_t v36 = type metadata accessor for BubbleTip();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v32, v30 + *(int *)(v36 + 80), v33);
  uint64_t v37 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v32, 1, v28) == 1)
  {
    uint64_t v28 = v33;
    uint64_t v38 = 1;
  }
  else
  {
    sub_255C7F998();
    uint64_t v38 = 0;
    uint64_t v35 = v37;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v28);
  uint64_t v39 = v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v73, v38, 1, v68);
  uint64_t v40 = sub_255A5F124((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  v84[3] = v29;
  unsigned char v84[4] = v40;
  v84[2] = swift_getWitnessTable();
  uint64_t v41 = v66;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = v69;
  sub_255A20F54(v39);
  uint64_t v44 = v70;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v70 + 8);
  v45(v39, v41);
  uint64_t v46 = v67;
  uint64_t v47 = v65;
  uint64_t v48 = v60;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v67, v65, v60);
  uint64_t v85 = v46;
  uint64_t v49 = v71;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v71, v43, v41);
  uint64_t v86 = v49;
  v84[0] = v48;
  v84[1] = v41;
  uint64_t v82 = v59;
  uint64_t v83 = v42;
  sub_255AF64A0((uint64_t)&v85, 2uLL, (uint64_t)v84);
  v45(v43, v41);
  uint64_t v50 = v47;
  uint64_t v51 = v62;
  v62(v50, v48);
  v45(v49, v41);
  return v51(v46, v48);
}

uint64_t sub_255A5E9C4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v33 = a7;
  v31[1] = a1;
  uint64_t v38 = a8;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EB8);
  MEMORY[0x270FA5388](v36);
  uint64_t v34 = (uint64_t)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EA8);
  uint64_t v13 = MEMORY[0x270FA5388](v37);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v35 = (uint64_t)v31 - v16;
  sub_255C7F0D8();
  uint64_t v17 = sub_255C7E458();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v31[0] = (char *)v31 - v22;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = v32;
  uint64_t v46 = a6;
  uint64_t v47 = v33;
  uint64_t v23 = (_OWORD *)type metadata accessor for BubbleTip();
  sub_255C7F998();
  uint64_t v24 = sub_255A5F124((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  v41[2] = a6;
  v41[3] = v24;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A20F54(v21);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v21, v17);
  uint64_t v27 = v34;
  sub_255A5A57C(v23, v34);
  sub_255A68B70();
  sub_255C7F998();
  sub_255A095A4(v27, &qword_269F21EB8);
  uint64_t v28 = v35;
  sub_255A10514((uint64_t)v15, v35, &qword_269F21EA8);
  uint64_t v29 = (char *)v31[0];
  (*(void (**)(char *, void, uint64_t))(v18 + 16))(v21, v31[0], v17);
  uint64_t v42 = v21;
  sub_255A09540(v28, (uint64_t)v15, &qword_269F21EA8);
  uint64_t v43 = v15;
  v41[0] = v17;
  v41[1] = v37;
  uint64_t v39 = WitnessTable;
  unint64_t v40 = sub_255A69264();
  sub_255AF64A0((uint64_t)&v42, 2uLL, (uint64_t)v41);
  sub_255A095A4(v28, &qword_269F21EA8);
  v26(v29, v17);
  sub_255A095A4((uint64_t)v15, &qword_269F21EA8);
  return ((uint64_t (*)(char *, uint64_t))v26)(v21, v17);
}

uint64_t sub_255A5ED68()
{
  return sub_255C7E6B8();
}

uint64_t sub_255A5ED8C()
{
  return sub_255C7E6B8();
}

uint64_t sub_255A5EDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A617E8(a1, a2, a3, a4, MEMORY[0x263F19A00], MEMORY[0x263F192B8]);
}

uint64_t sub_255A5EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A617E8(a1, a2, a3, a4, MEMORY[0x263F19A00], MEMORY[0x263F192B8]);
}

uint64_t sub_255A5EE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BubbleTipTitleViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_255A5EE80()
{
  unint64_t result = qword_269F21E88;
  if (!qword_269F21E88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21E78);
    sub_255A5F124(&qword_269F21E90, (void (*)(uint64_t))type metadata accessor for BubbleTipTitleViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21E88);
  }
  return result;
}

unint64_t sub_255A5EF2C()
{
  unint64_t result = qword_269F21E98;
  if (!qword_269F21E98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21E80);
    sub_255A5EFA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21E98);
  }
  return result;
}

unint64_t sub_255A5EFA8()
{
  unint64_t result = qword_269F21EA0;
  if (!qword_269F21EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21EA0);
  }
  return result;
}

uint64_t type metadata accessor for BubbleBackground(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F220F0);
}

uint64_t sub_255A5F01C()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5D590);
}

uint64_t sub_255A5F034()
{
  return sub_255C7E728();
}

uint64_t sub_255A5F060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BubbleBackground(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A5F0C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255A5F124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A5F16C()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5C450);
}

uint64_t sub_255A5F188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C801A8();
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v23 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7E4E8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v23 - v12;
  sub_255ABAB20((uint64_t)&v23 - v12);
  sub_255C7E4D8();
  sub_255A5F124(&qword_269F22110, MEMORY[0x263F18FD8]);
  char v14 = sub_255C80578();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v15(v13, v7);
  if (v14) {
    goto LABEL_4;
  }
  type metadata accessor for BubbleBackground(0);
  sub_255ABAB58((uint64_t)v4);
  uint64_t v16 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v5) == 1)
  {
    sub_255A095A4((uint64_t)v4, &qword_269F20AB0);
LABEL_4:
    uint64_t result = sub_255C7FC78();
    uint64_t v18 = MEMORY[0x263F1B420];
    a1[3] = MEMORY[0x263F1B440];
    a1[4] = v18;
    *a1 = result;
    return result;
  }
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v20 = v23;
  v19(v23, v4, v5);
  uint64_t v21 = MEMORY[0x263F1B908];
  a1[3] = v5;
  a1[4] = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return ((uint64_t (*)(uint64_t *, char *, uint64_t))v19)(boxed_opaque_existential_1, v20, v5);
}

uint64_t sub_255A5F47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_255A5F188(v13);
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_255C7DFF8();
  char v8 = sub_255C7F198();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  uint64_t v10 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F22108) + 36);
  *(void *)uint64_t v10 = v7;
  *(unsigned char *)(v10 + 8) = v8;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
}

uint64_t BubbleImage.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21ED8);
  MEMORY[0x270FA5388](v22);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EE0);
  MEMORY[0x270FA5388](v21);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7FD88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EE8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 24))
  {
    swift_bridgeObjectRetain();
    sub_255C7FD98();
    LOBYTE(v24) = 1;
    BubbleTipAccessoryModifier.body(content:)((uint64_t)v12);
    swift_release();
    sub_255A09540((uint64_t)v12, (uint64_t)v3, &qword_269F21EE8);
    swift_storeEnumTagMultiPayload();
    sub_255A6102C();
    sub_255C7EBD8();
  }
  else
  {
    uint64_t v20 = v10;
    id v13 = *(id *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_255C7FDC8();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B4B8], v6);
    uint64_t v14 = sub_255C7FDB8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (qword_269F1FE28 != -1) {
      swift_once();
    }
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v15 = v24;
    char v16 = v25;
    uint64_t v17 = v26;
    char v18 = v27;
    *(void *)uint64_t v5 = v14;
    *((void *)v5 + 1) = 0;
    *((_WORD *)v5 + 8) = 1;
    *((void *)v5 + 3) = v15;
    v5[32] = v16;
    *((void *)v5 + 5) = v17;
    v5[48] = v18;
    *(_OWORD *)(v5 + 56) = v28;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F00);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F18);
    sub_255A610D4();
    sub_255A61170(&qword_269F21F10, &qword_269F21F18, (void (*)(void))sub_255A611EC);
    sub_255C7EBD8();
    swift_release();
    sub_255A09540((uint64_t)v12, (uint64_t)v3, &qword_269F21EE8);
    swift_storeEnumTagMultiPayload();
    sub_255A6102C();
    sub_255C7EBD8();
  }
  return sub_255A095A4((uint64_t)v12, &qword_269F21EE8);
}

uint64_t Image.bubbleTipAccessory(preset:)@<X0>(uint64_t a1@<X8>)
{
  return BubbleTipAccessoryModifier.body(content:)(a1);
}

uint64_t BubbleAction.init(title:handler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t BubbleAction.body.getter()
{
  return sub_255C7FEA8();
}

uint64_t sub_255A5FAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&v20[0] = a1;
  *((void *)&v20[0] + 1) = a2;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_255C7F548();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  if (qword_269F1FE40 != -1) {
    swift_once();
  }
  char v11 = v8 & 1;
  double v12 = *(double *)&qword_269F21E58;
  uint64_t v13 = sub_255C80208();
  sub_255A585E8(0.0, 1, 0.0, 1, INFINITY, 0, v12, 0, (uint64_t)v20, 0.0, 1, 0.0, 1, v13, v14, v4, v6, v11, v10);
  sub_255A094C0(v4, v6, v11);
  swift_bridgeObjectRelease();
  long long v15 = v20[7];
  *(_OWORD *)(a3 + 96) = v20[6];
  *(_OWORD *)(a3 + 112) = v15;
  *(_OWORD *)(a3 + 128) = v20[8];
  long long v16 = v20[3];
  *(_OWORD *)(a3 + 32) = v20[2];
  *(_OWORD *)(a3 + 48) = v16;
  long long v17 = v20[5];
  *(_OWORD *)(a3 + 64) = v20[4];
  *(_OWORD *)(a3 + 80) = v17;
  long long v18 = v20[1];
  *(_OWORD *)a3 = v20[0];
  *(_OWORD *)(a3 + 16) = v18;
  uint64_t result = swift_getKeyPath();
  *(void *)(a3 + 144) = result;
  *(void *)(a3 + 152) = 0x3FE4CCCCCCCCCCCDLL;
  return result;
}

uint64_t sub_255A5FC50()
{
  return sub_255C7FEA8();
}

uint64_t BubbleTipTitleViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F90);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F98);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_255C7F328();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2 == 1)
  {
    if (qword_269F1FE38 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_269F21E50;
    swift_retain();
    uint64_t v17 = 0;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F1A6C0], v12);
    uint64_t v18 = sub_255C7F258();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
    uint64_t v16 = sub_255C7F2B8();
    sub_255A095A4((uint64_t)v11, &qword_26B29BD88);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (*v2) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = sub_255C7FD18();
    }
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21FA0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v5, v27, v20);
  uint64_t v21 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *uint64_t v21 = KeyPath;
  v21[1] = v16;
  uint64_t v22 = swift_getKeyPath();
  sub_255A09540((uint64_t)v5, (uint64_t)v8, &qword_269F21F90);
  uint64_t v23 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *uint64_t v23 = v22;
  v23[1] = v17;
  swift_retain();
  swift_retain();
  sub_255A095A4((uint64_t)v5, &qword_269F21F90);
  uint64_t v24 = sub_255C80208();
  sub_255A587DC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v28, 0.0, 1, 0.0, 1, v24, v25, &qword_269F21F98, &qword_269F22098);
  swift_release();
  swift_release();
  return sub_255A095A4((uint64_t)v8, &qword_269F21F98);
}

uint64_t BubbleTipSubtitleViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C7F328();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21FA8);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21FB0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1A6C0], v5);
  uint64_t v17 = sub_255C7F258();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = sub_255C7F2B8();
  sub_255A095A4((uint64_t)v4, &qword_26B29BD88);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21FB8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v12, v28, v20);
  uint64_t v21 = (uint64_t *)&v12[*(int *)(v10 + 44)];
  *uint64_t v21 = KeyPath;
  v21[1] = v18;
  uint64_t v22 = sub_255C7FD18();
  uint64_t v23 = swift_getKeyPath();
  sub_255A09540((uint64_t)v12, (uint64_t)v16, &qword_269F21FA8);
  uint64_t v24 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  *uint64_t v24 = v23;
  v24[1] = v22;
  sub_255A095A4((uint64_t)v12, &qword_269F21FA8);
  uint64_t v25 = sub_255C80208();
  sub_255A587DC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v29, 0.0, 1, 0.0, 1, v25, v26, &qword_269F21FB0, &qword_269F220C0);
  return sub_255A095A4((uint64_t)v16, &qword_269F21FB0);
}

uint64_t sub_255A60424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BubbleTipSubtitleViewModifier.body(content:)(a1, a2);
}

uint64_t View.bubbleTipTitle(hasSubtitle:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v8[*(int *)(v6 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  swift_storeEnumTagMultiPayload();
  *char v8 = a1;
  MEMORY[0x25A295390](v8, a2, v6, a3);
  return sub_255A5F0C4((uint64_t)v8, type metadata accessor for BubbleTipTitleViewModifier);
}

void View.bubbleTipSubtitle()()
{
}

BOOL static BubbleTipAccessoryModifier.Preset.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BubbleTipAccessoryModifier.Preset.hash(into:)()
{
  return sub_255C81588();
}

uint64_t BubbleTipAccessoryModifier.Preset.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t BubbleTipAccessoryModifier.body(content:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D118);
  MEMORY[0x270FA5388](v70);
  uint64_t v74 = (uint64_t *)((char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_255C7FDA8();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v64 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_255C7F328();
  uint64_t v8 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F58);
  MEMORY[0x270FA5388](v65);
  uint64_t v62 = (uint64_t *)((char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F48);
  MEMORY[0x270FA5388](v67);
  uint64_t v69 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F38);
  MEMORY[0x270FA5388](v66);
  uint64_t v68 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F28);
  MEMORY[0x270FA5388](v71);
  uint64_t v76 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F18);
  uint64_t v15 = MEMORY[0x270FA5388](v79);
  uint64_t v75 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v77 = (uint64_t)&v62 - v17;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EE0);
  MEMORY[0x270FA5388](v78);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_255C7FD88();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v24 = *v1;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F1B4B8], v20);
  uint64_t v25 = sub_255C7FDB8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (v24)
  {
    uint64_t v26 = v63;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1A6F8], v63);
    uint64_t v27 = sub_255C7F258();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 1, 1, v27);
    sub_255C7F298();
    uint64_t v28 = sub_255C7F2B8();
    sub_255A095A4((uint64_t)v7, &qword_26B29BD88);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = v72;
    uint64_t v31 = v73;
    uint64_t v32 = v64;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v64, *MEMORY[0x263F1B540], v73);
    uint64_t v33 = swift_getKeyPath();
    uint64_t v34 = v74;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v74 + *(int *)(v70 + 28), v32, v31);
    *uint64_t v34 = v33;
    uint64_t v35 = v62;
    sub_255A09540((uint64_t)v34, (uint64_t)v62 + *(int *)(v65 + 36), &qword_26B29D118);
    *uint64_t v35 = v25;
    v35[1] = KeyPath;
    v35[2] = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_255A095A4((uint64_t)v34, &qword_26B29D118);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v36 = sub_255C7FD18();
    uint64_t v37 = swift_getKeyPath();
    uint64_t v38 = v69;
    sub_255A09540((uint64_t)v35, v69, &qword_269F21F58);
    uint64_t v39 = (uint64_t *)(v38 + *(int *)(v67 + 36));
    *uint64_t v39 = v37;
    v39[1] = v36;
    sub_255A095A4((uint64_t)v35, &qword_269F21F58);
    uint64_t v40 = v68;
    sub_255A09540(v38, v68, &qword_269F21F48);
    uint64_t v41 = v40 + *(int *)(v66 + 36);
    *(void *)uint64_t v41 = 0;
    *(_WORD *)(v41 + 8) = 1;
    sub_255A095A4(v38, &qword_269F21F48);
    char v42 = sub_255C7F188();
    if (qword_269F1FE20 != -1) {
      swift_once();
    }
    sub_255C7DC08();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v51 = v76;
    sub_255A09540(v40, v76, &qword_269F21F38);
    uint64_t v52 = v51 + *(int *)(v71 + 36);
    *(unsigned char *)uint64_t v52 = v42;
    *(void *)(v52 + 8) = v44;
    *(void *)(v52 + 16) = v46;
    *(void *)(v52 + 24) = v48;
    *(void *)(v52 + 32) = v50;
    *(unsigned char *)(v52 + 40) = 0;
    sub_255A095A4(v40, &qword_269F21F38);
    if (qword_269F1FE30 != -1) {
      swift_once();
    }
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v53 = v75;
    sub_255A09540(v51, v75, &qword_269F21F28);
    uint64_t v54 = (_OWORD *)(v53 + *(int *)(v79 + 36));
    long long v55 = v82;
    *uint64_t v54 = v81;
    v54[1] = v55;
    v54[2] = v83;
    sub_255A095A4(v51, &qword_269F21F28);
    uint64_t v56 = v77;
    sub_255A10514(v53, v77, &qword_269F21F18);
    sub_255A09540(v56, (uint64_t)v19, &qword_269F21F18);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F00);
    sub_255A610D4();
    sub_255A61170(&qword_269F21F10, &qword_269F21F18, (void (*)(void))sub_255A611EC);
    sub_255C7EBD8();
    return sub_255A095A4(v56, &qword_269F21F18);
  }
  else
  {
    if (qword_269F1FE28 != -1) {
      swift_once();
    }
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v58 = v81;
    char v59 = BYTE8(v81);
    uint64_t v60 = v82;
    char v61 = BYTE8(v82);
    *(void *)uint64_t v19 = v25;
    *((void *)v19 + 1) = 0;
    *((_WORD *)v19 + 8) = 1;
    *((void *)v19 + 3) = v58;
    v19[32] = v59;
    *((void *)v19 + 5) = v60;
    v19[48] = v61;
    *(_OWORD *)(v19 + 56) = v83;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21F00);
    sub_255A610D4();
    sub_255A61170(&qword_269F21F10, &qword_269F21F18, (void (*)(void))sub_255A611EC);
    return sub_255C7EBD8();
  }
}

unint64_t sub_255A6102C()
{
  unint64_t result = qword_269F21EF0;
  if (!qword_269F21EF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EE8);
    sub_255A610D4();
    sub_255A61170(&qword_269F21F10, &qword_269F21F18, (void (*)(void))sub_255A611EC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21EF0);
  }
  return result;
}

unint64_t sub_255A610D4()
{
  unint64_t result = qword_269F21EF8;
  if (!qword_269F21EF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F00);
    sub_255A1A3F0(&qword_269F21F08, (uint64_t *)&unk_269F23300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21EF8);
  }
  return result;
}

uint64_t sub_255A61170(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A611EC()
{
  return sub_255A61170(&qword_269F21F20, &qword_269F21F28, (void (*)(void))sub_255A6121C);
}

uint64_t sub_255A6121C()
{
  return sub_255A61170(&qword_269F21F30, &qword_269F21F38, (void (*)(void))sub_255A6124C);
}

unint64_t sub_255A6124C()
{
  unint64_t result = qword_269F21F40;
  if (!qword_269F21F40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F48);
    sub_255A612EC();
    sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21F40);
  }
  return result;
}

unint64_t sub_255A612EC()
{
  unint64_t result = qword_269F21F50;
  if (!qword_269F21F50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F58);
    sub_255A6138C();
    sub_255A09998((unint64_t *)&qword_26B29D110, &qword_26B29D118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21F50);
  }
  return result;
}

unint64_t sub_255A6138C()
{
  unint64_t result = qword_269F21F60;
  if (!qword_269F21F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F68);
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21F60);
  }
  return result;
}

uint64_t sub_255A6142C@<X0>(uint64_t a1@<X8>)
{
  return sub_255A5FAEC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255A61438()
{
  unint64_t result = qword_269F21F78;
  if (!qword_269F21F78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F70);
    sub_255A1A3F0(&qword_269F21F80, &qword_269F21F88);
    sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21F78);
  }
  return result;
}

uint64_t sub_255A614F8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  __swift_allocate_value_buffer(v0, qword_269F21E60);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269F21E60);
  sub_255C80178();
  uint64_t v2 = sub_255C801A8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_255A61598@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FE48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269F21E60);
  return sub_255A09540(v3, a1, &qword_269F20AB0);
}

uint64_t sub_255A61614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C7E818();
  *a1 = result;
  return result;
}

uint64_t sub_255A61640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C7E818();
  *a1 = result;
  return result;
}

uint64_t sub_255A6166C()
{
  return sub_255C7E828();
}

uint64_t sub_255A61698()
{
  return sub_255C7E828();
}

uint64_t sub_255A616C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C7E6D8();
  *a1 = result;
  return result;
}

uint64_t sub_255A616F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C7E6D8();
  *a1 = result;
  return result;
}

uint64_t sub_255A6171C()
{
  return sub_255C7E6E8();
}

uint64_t sub_255A61748()
{
  return sub_255C7E6E8();
}

uint64_t sub_255A61774()
{
  return sub_255C7E638();
}

uint64_t sub_255A61798()
{
  return sub_255C7E638();
}

uint64_t sub_255A617BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A617E8(a1, a2, a3, a4, MEMORY[0x263F1B548], MEMORY[0x263F191D8]);
}

uint64_t sub_255A617E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_255A618B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255A617E8(a1, a2, a3, a4, MEMORY[0x263F1B548], MEMORY[0x263F191D8]);
}

uint64_t sub_255A618F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A61944()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A61960()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A6197C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A61998()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A619B8()
{
  unint64_t result = qword_269F21FC0[0];
  if (!qword_269F21FC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F21FC0);
  }
  return result;
}

uint64_t sub_255A61A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 88);
}

void sub_255A61A14()
{
  sub_255A664DC(319, &qword_269F22048, MEMORY[0x263F188C0]);
  if (v0 <= 0x3F)
  {
    sub_255C80E88();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_255C80E88();
        if (v3 <= 0x3F)
        {
          sub_255A66480();
          if (v4 <= 0x3F)
          {
            sub_255A664DC(319, qword_269F20D80, MEMORY[0x263F19A00]);
            if (v5 <= 0x3F)
            {
              sub_255A664DC(319, &qword_269F22058, MEMORY[0x263F18FD8]);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void *sub_255A61C8C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v88 = sub_255C7E0A8();
  uint64_t v111 = *(void *)(v88 - 8);
  if (*(void *)(v111 + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(v88 - 8) + 64);
  }
  uint64_t v97 = a3[2];
  uint64_t v5 = *(void *)(v97 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  int v112 = v6;
  uint64_t v7 = v6;
  uint64_t v92 = v4;
  uint64_t v93 = v4 + v6 + 1;
  uint64_t v94 = v5;
  size_t v8 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v8;
  }
  size_t __n = v8;
  uint64_t v99 = a3[3];
  uint64_t v98 = *(void *)(v99 - 8);
  int v110 = *(_DWORD *)(v98 + 80);
  uint64_t v102 = a3[4];
  uint64_t v9 = *(void *)(v102 - 8);
  int v109 = *(_DWORD *)(v9 + 80);
  uint64_t v100 = v9;
  uint64_t v95 = *(void *)(v98 + 64);
  unint64_t v10 = (v95
       + v109
       + ((v110 + ((v8 + (v93 & ~(unint64_t)v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)v110)) & ~(unint64_t)v109;
  size_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  size_t v91 = v11;
  size_t v101 = v11 + 7;
  unint64_t v12 = (((v11 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = sub_255C801A8();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v105 = v14;
  uint64_t v106 = v13;
  uint64_t v16 = ((v15 & 0xF8 | 7) + v12 + 16) & ~(v15 & 0xF8 | 7);
  if (*(_DWORD *)(v14 + 84)) {
    unint64_t v17 = *(void *)(v14 + 64);
  }
  else {
    unint64_t v17 = *(void *)(v14 + 64) + 1;
  }
  size_t v87 = v17;
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = sub_255C7EA38();
  uint64_t v89 = *(void *)(v19 - 8);
  uint64_t v90 = v19;
  int v20 = *(_DWORD *)(v89 + 80);
  uint64_t v21 = v20 & 0xF8 | 7;
  uint64_t v108 = v18;
  uint64_t v103 = v21;
  uint64_t v104 = v18 + v21 + 1;
  uint64_t v22 = (v104 + v16) & ~v21;
  unint64_t v23 = *(void *)(v89 + 64);
  if (v23 <= 8) {
    unint64_t v23 = 8;
  }
  unint64_t v107 = v23;
  unint64_t v24 = v23 + 1;
  uint64_t v25 = sub_255C7E4E8();
  uint64_t v26 = v7;
  uint64_t v27 = *(void *)(v25 - 8);
  int v28 = *(_DWORD *)(v27 + 80);
  uint64_t v29 = v28 & 0xF8 | 7;
  uint64_t v116 = v29;
  if (*(void *)(v27 + 64) <= 8uLL) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = *(void *)(v27 + 64);
  }
  unsigned int v31 = v7 | *(_DWORD *)(v111 + 80) & 0xF8 | v15 & 0xF8 | v110 | v109 | v20 & 0xF8 | *(_DWORD *)(v27 + 80) & 0xF8;
  int v32 = (v110 | v112 | v109 | v15 | v20 | v28 | *(_DWORD *)(v111 + 80)) & 0x100000;
  if (v30 + ((v24 + v29 + v22) & ~v29) + 1 > 0x18 || v32 != 0 || v31 > 7)
  {
    uint64_t v35 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v36 = (void *)(v35 + (((v31 | 7) + 16) & ~(unint64_t)(v31 | 7)));
LABEL_105:
    swift_retain();
    return v36;
  }
  uint64_t v36 = a1;
  unsigned int v37 = a2[v92];
  unsigned int v38 = v37 - 2;
  if (v37 < 2)
  {
    uint64_t v40 = v15 & 0xF8 | 7;
    uint64_t v41 = v100;
    uint64_t v42 = v94;
  }
  else
  {
    if (v92 <= 3) {
      uint64_t v39 = v92;
    }
    else {
      uint64_t v39 = 4;
    }
    uint64_t v40 = v15 & 0xF8 | 7;
    uint64_t v41 = v100;
    uint64_t v42 = v94;
    switch(v39)
    {
      case 1:
        int v43 = *a2;
        if (v92 < 4) {
          goto LABEL_39;
        }
        goto LABEL_41;
      case 2:
        int v43 = *(unsigned __int16 *)a2;
        if (v92 >= 4) {
          goto LABEL_41;
        }
        goto LABEL_39;
      case 3:
        int v43 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v92 < 4) {
          goto LABEL_39;
        }
        goto LABEL_41;
      case 4:
        int v43 = *(_DWORD *)a2;
        if (v92 < 4) {
LABEL_39:
        }
          unsigned int v37 = (v43 | (v38 << (8 * v92))) + 2;
        else {
LABEL_41:
        }
          unsigned int v37 = v43 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v113 = *(void *)(v25 - 8);
  uint64_t v44 = ~v26;
  uint64_t v86 = v30;
  if (v37 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v111 + 16))(a1, a2, v88);
    char v45 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v45 = 0;
  }
  unint64_t v46 = ~(unint64_t)v110;
  unint64_t v47 = ~(unint64_t)v109;
  *((unsigned char *)a1 + v92) = v45;
  uint64_t v48 = (void *)(((unint64_t)a1 + v93) & v44);
  uint64_t v49 = (const void *)((unint64_t)&a2[v93] & v44);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v49, 1, v97))
  {
    size_t v50 = __n;
    memcpy(v48, v49, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v48, v49, v97);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v48, 0, 1, v97);
    size_t v50 = __n;
  }
  uint64_t v51 = (void *)(((unint64_t)v48 + v50 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v52 = (void *)(((unint64_t)v49 + v50 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v51 = *v52;
  uint64_t v53 = ((unint64_t)v51 + v110 + 8) & v46;
  uint64_t v54 = ((unint64_t)v52 + v110 + 8) & v46;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v53, v54, v99);
  long long v55 = (void *)((v53 + v95 + v109) & v47);
  uint64_t v56 = (const void *)((v54 + v95 + v109) & v47);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v56, 1, v102))
  {
    memcpy(v55, v56, v91);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v55, v56, v102);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v55, 0, 1, v102);
  }
  uint64_t v57 = ~v40;
  uint64_t v58 = (void *)(((unint64_t)v56 + v101) & 0xFFFFFFFFFFFFFFF8);
  char v59 = (void *)(((unint64_t)v55 + v101) & 0xFFFFFFFFFFFFFFF8);
  *char v59 = *v58;
  unint64_t v60 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v61 = (unint64_t *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v62 = *v61;
  swift_bridgeObjectRetain();
  if (v62 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v60 = *(_OWORD *)v61;
  }
  else
  {
    unint64_t v63 = v61[1];
    *(void *)unint64_t v60 = v62;
    *(void *)(v60 + 8) = v63;
    swift_retain();
  }
  uint64_t v64 = (void *)((v60 + v40 + 16) & v57);
  uint64_t v65 = (unsigned __int8 *)(((unint64_t)v61 + v40 + 16) & v57);
  unsigned int v66 = v65[v108];
  unsigned int v67 = v66 - 2;
  if (v66 >= 2)
  {
    if (v108 <= 3) {
      uint64_t v68 = v108;
    }
    else {
      uint64_t v68 = 4;
    }
    switch(v68)
    {
      case 1:
        int v69 = *v65;
        if (v108 < 4) {
          goto LABEL_64;
        }
        goto LABEL_66;
      case 2:
        int v69 = *(unsigned __int16 *)v65;
        if (v108 >= 4) {
          goto LABEL_66;
        }
        goto LABEL_64;
      case 3:
        int v69 = *(unsigned __int16 *)v65 | (v65[2] << 16);
        if (v108 < 4) {
          goto LABEL_64;
        }
        goto LABEL_66;
      case 4:
        int v69 = *(_DWORD *)v65;
        if (v108 < 4) {
LABEL_64:
        }
          unsigned int v66 = (v69 | (v67 << (8 * v108))) + 2;
        else {
LABEL_66:
        }
          unsigned int v66 = v69 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v70 = ~v103;
  if (v66 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v105 + 48))(v65, 1, v106))
    {
      memcpy(v64, v65, v87);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v105 + 16))(v64, v65, v106);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v64, 0, 1, v106);
    }
    *((unsigned char *)v64 + v108) = 1;
  }
  else
  {
    *uint64_t v64 = *(void *)v65;
    *((unsigned char *)v64 + v108) = 0;
    swift_retain();
  }
  uint64_t v71 = (void *)(((unint64_t)v64 + v104) & v70);
  uint64_t v72 = (unsigned __int8 *)((unint64_t)&v65[v104] & v70);
  unsigned int v73 = v72[v107];
  unsigned int v74 = v73 - 2;
  if (v73 >= 2)
  {
    if (v107 <= 3) {
      uint64_t v75 = v107;
    }
    else {
      uint64_t v75 = 4;
    }
    switch(v75)
    {
      case 1:
        int v76 = *v72;
        if (v107 < 4) {
          goto LABEL_83;
        }
        goto LABEL_85;
      case 2:
        int v76 = *(unsigned __int16 *)v72;
        if (v107 >= 4) {
          goto LABEL_85;
        }
        goto LABEL_83;
      case 3:
        int v76 = *(unsigned __int16 *)v72 | (v72[2] << 16);
        if (v107 < 4) {
          goto LABEL_83;
        }
        goto LABEL_85;
      case 4:
        int v76 = *(_DWORD *)v72;
        if (v107 < 4) {
LABEL_83:
        }
          unsigned int v73 = (v76 | (v74 << (8 * v107))) + 2;
        else {
LABEL_85:
        }
          unsigned int v73 = v76 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v77 = ~v116;
  if (v73 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v89 + 16))(v71, v72, v90);
    char v78 = 1;
  }
  else
  {
    *uint64_t v71 = *(void *)v72;
    swift_retain();
    char v78 = 0;
  }
  *((unsigned char *)v71 + v107) = v78;
  uint64_t v79 = (void *)(((unint64_t)v71 + v24 + v116) & v77);
  uint64_t v80 = (unsigned __int8 *)((unint64_t)&v72[v24 + v116] & v77);
  unsigned int v81 = v80[v86];
  unsigned int v82 = v81 - 2;
  if (v81 >= 2)
  {
    if (v86 <= 3) {
      uint64_t v83 = v86;
    }
    else {
      uint64_t v83 = 4;
    }
    switch(v83)
    {
      case 1:
        int v84 = *v80;
        if (v86 >= 4) {
          goto LABEL_103;
        }
        goto LABEL_99;
      case 2:
        int v84 = *(unsigned __int16 *)v80;
        if (v86 >= 4) {
          goto LABEL_103;
        }
        goto LABEL_99;
      case 3:
        int v84 = *(unsigned __int16 *)((unint64_t)&v72[v24 + v116] & v77) | (*(unsigned __int8 *)(((unint64_t)&v72[v24 + v116] & v77) + 2) << 16);
        if (v86 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 4:
        int v84 = *(_DWORD *)v80;
        if (v86 < 4)
        {
LABEL_99:
          unsigned int v81 = (v84 | (v82 << (8 * v86))) + 2;
          break;
        }
LABEL_103:
        if (v84 != -1) {
          goto LABEL_104;
        }
        goto LABEL_101;
      default:
        break;
    }
  }
  if (v81 != 1)
  {
LABEL_104:
    *uint64_t v79 = *(void *)v80;
    *((unsigned char *)v79 + v86) = 0;
    goto LABEL_105;
  }
LABEL_101:
  (*(void (**)(void *))(v113 + 16))(v79);
  *((unsigned char *)v79 + v86) = 1;
  return v36;
}

uint64_t sub_255A6272C(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = sub_255C7E0A8();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v5 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
        if (v5 < 4)
        {
LABEL_14:
          unsigned int v6 = (v9 | (v7 << (8 * v5))) + 2;
          break;
        }
LABEL_18:
        if (v9 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v6 == 1) {
LABEL_16:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  else {
LABEL_19:
  }
    swift_release();
  uint64_t v10 = a2[2];
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (unint64_t)&a1[v5 + 1 + *(unsigned __int8 *)(v11 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v12, v10);
  }
  unint64_t v13 = v12 + *(void *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v13;
  }
  uint64_t v14 = *(void *)(a2[3] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = a2[4];
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18)) {
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v20, v18);
  }
  unint64_t v21 = v20 + *(void *)(v19 + 64);
  if (!*(_DWORD *)(v19 + 84)) {
    ++v21;
  }
  unint64_t v22 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v22 & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t v24 = sub_255C801A8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  uint64_t v27 = (unsigned __int8 *)((v23 + v26 + 16) & ~v26);
  unint64_t v28 = *(void *)(v25 + 64);
  if (!*(_DWORD *)(v25 + 84)) {
    ++v28;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  unsigned int v30 = v27[v29];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v27;
        goto LABEL_44;
      case 2:
        int v33 = *(unsigned __int16 *)v27;
        goto LABEL_44;
      case 3:
        int v33 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_44;
      case 4:
        int v33 = *(_DWORD *)v27;
LABEL_44:
        int v34 = (v33 | (v31 << (8 * v29))) + 2;
        unsigned int v30 = v33 + 2;
        if (v29 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 == 1)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v25 + 8))(v27, v24);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v35 = sub_255C7EA38();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(_DWORD *)(v36 + 80) & 0xF8 | 7;
  unsigned int v38 = (unsigned __int8 *)((unint64_t)&v27[v29 + 1 + v37] & ~v37);
  if (*(void *)(v36 + 64) <= 8uLL) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = *(void *)(v36 + 64);
  }
  unsigned int v40 = v38[v39];
  unsigned int v41 = v40 - 2;
  if (v40 >= 2)
  {
    if (v39 <= 3) {
      uint64_t v42 = v39;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *v38;
        goto LABEL_62;
      case 2:
        int v43 = *(unsigned __int16 *)v38;
        goto LABEL_62;
      case 3:
        int v43 = *(unsigned __int16 *)v38 | (v38[2] << 16);
        goto LABEL_62;
      case 4:
        int v43 = *(_DWORD *)v38;
LABEL_62:
        int v44 = (v43 | (v41 << (8 * v39))) + 2;
        unsigned int v40 = v43 + 2;
        if (v39 < 4) {
          unsigned int v40 = v44;
        }
        break;
      default:
        break;
    }
  }
  if (v40 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v36 + 8))(v38, v35);
  }
  else {
    swift_release();
  }
  uint64_t v45 = *(void *)(sub_255C7E4E8() - 8);
  uint64_t v46 = *(_DWORD *)(v45 + 80) & 0xF8 | 7;
  unint64_t v47 = (unsigned __int8 *)((unint64_t)&v38[v39 + 1 + v46] & ~v46);
  unint64_t v48 = *(void *)(v45 + 64);
  if (v48 <= 8) {
    unint64_t v48 = 8;
  }
  unsigned int v49 = v47[v48];
  unsigned int v50 = v49 - 2;
  if (v49 >= 2)
  {
    if (v48 <= 3) {
      uint64_t v51 = v48;
    }
    else {
      uint64_t v51 = 4;
    }
    switch(v51)
    {
      case 1:
        int v52 = *v47;
        goto LABEL_78;
      case 2:
        int v52 = *(unsigned __int16 *)v47;
        goto LABEL_78;
      case 3:
        int v52 = *(unsigned __int16 *)v47 | (v47[2] << 16);
        goto LABEL_78;
      case 4:
        int v52 = *(_DWORD *)v47;
LABEL_78:
        int v53 = (v52 | (v50 << (8 * v48))) + 2;
        unsigned int v49 = v52 + 2;
        if (v48 < 4) {
          unsigned int v49 = v53;
        }
        break;
      default:
        break;
    }
  }
  if (v49 == 1)
  {
    uint64_t v54 = *(uint64_t (**)(void))(v45 + 8);
    return v54();
  }
  else
  {
    return swift_release();
  }
}

void *sub_255A62E18(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = sub_255C7E0A8();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = a3[2];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v7 + v15 + 1;
  uint64_t v17 = (void *)(((unint64_t)a1 + v16) & ~v15);
  uint64_t v18 = (const void *)((unint64_t)&a2[v16] & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
  {
    int v19 = *(_DWORD *)(v14 + 84);
    size_t v20 = *(void *)(v14 + 64);
    if (v19) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v20 + 1;
    }
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
    unint64_t v23 = *(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v22 = v14 + 56;
    v23(v17, 0, 1, v13);
    int v19 = *(_DWORD *)(v22 + 28);
    size_t v20 = *(void *)(v22 + 8);
  }
  if (v19) {
    size_t v24 = v20;
  }
  else {
    size_t v24 = v20 + 1;
  }
  uint64_t v25 = (void *)(((unint64_t)v17 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)(((unint64_t)v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  uint64_t v27 = *(void *)(a3[3] - 8);
  uint64_t v28 = v27 + 16;
  uint64_t v29 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v30 = ((unint64_t)v25 + v29 + 8) & ~v29;
  uint64_t v31 = ((unint64_t)v26 + v29 + 8) & ~v29;
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v30, v31);
  uint64_t v32 = *(void *)(v28 + 48);
  uint64_t v33 = a3[4];
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = v32 + v35;
  uint64_t v37 = (void *)((v36 + v30) & ~v35);
  unsigned int v38 = (const void *)((v36 + v31) & ~v35);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v38, 1, v33))
  {
    int v39 = *(_DWORD *)(v34 + 84);
    uint64_t v40 = *(void *)(v34 + 64);
    if (v39) {
      size_t v41 = *(void *)(v34 + 64);
    }
    else {
      size_t v41 = v40 + 1;
    }
    memcpy(v37, v38, v41);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v37, v38, v33);
    int v43 = *(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56);
    uint64_t v42 = v34 + 56;
    v43(v37, 0, 1, v33);
    int v39 = *(_DWORD *)(v42 + 28);
    uint64_t v40 = *(void *)(v42 + 8);
  }
  if (v39) {
    uint64_t v44 = v40;
  }
  else {
    uint64_t v44 = v40 + 1;
  }
  uint64_t v45 = (uint64_t)v37 + v44 + 7;
  uint64_t v46 = (void *)(((unint64_t)v38 + v44 + 7) & 0xFFFFFFFFFFFFFFF8);
  v45 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v45 = *v46;
  unint64_t v47 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (unint64_t *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v49 = *v48;
  swift_bridgeObjectRetain();
  if (v49 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
  }
  else
  {
    unint64_t v50 = v48[1];
    *(void *)unint64_t v47 = v49;
    *(void *)(v47 + 8) = v50;
    swift_retain();
  }
  uint64_t v51 = sub_255C801A8();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(_DWORD *)(v52 + 80) & 0xF8 | 7;
  uint64_t v54 = (char *)v48 + v53;
  long long v55 = (void *)((v47 + v53 + 16) & ~v53);
  uint64_t v56 = (unsigned __int8 *)((unint64_t)(v54 + 16) & ~v53);
  if (*(_DWORD *)(v52 + 84)) {
    size_t v57 = *(void *)(v52 + 64);
  }
  else {
    size_t v57 = *(void *)(v52 + 64) + 1;
  }
  if (v57 <= 8) {
    uint64_t v58 = 8;
  }
  else {
    uint64_t v58 = v57;
  }
  unsigned int v59 = v56[v58];
  unsigned int v60 = v59 - 2;
  if (v59 >= 2)
  {
    if (v58 <= 3) {
      uint64_t v61 = v58;
    }
    else {
      uint64_t v61 = 4;
    }
    switch(v61)
    {
      case 1:
        int v62 = *v56;
        goto LABEL_56;
      case 2:
        int v62 = *(unsigned __int16 *)v56;
        goto LABEL_56;
      case 3:
        int v62 = *(unsigned __int16 *)v56 | (v56[2] << 16);
        goto LABEL_56;
      case 4:
        int v62 = *(_DWORD *)v56;
LABEL_56:
        int v63 = (v62 | (v60 << (8 * v58))) + 2;
        unsigned int v59 = v62 + 2;
        if (v58 < 4) {
          unsigned int v59 = v63;
        }
        break;
      default:
        break;
    }
  }
  if (v59 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v52 + 48))(v56, 1, v51))
    {
      memcpy(v55, v56, v57);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v52 + 16))(v55, v56, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v55, 0, 1, v51);
    }
    *((unsigned char *)v55 + v58) = 1;
  }
  else
  {
    *long long v55 = *(void *)v56;
    *((unsigned char *)v55 + v58) = 0;
    swift_retain();
  }
  uint64_t v64 = sub_255C7EA38();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(_DWORD *)(v65 + 80) & 0xF8 | 7;
  uint64_t v67 = v58 + v66 + 1;
  uint64_t v68 = (void *)(((unint64_t)v55 + v67) & ~v66);
  int v69 = (unsigned __int8 *)((unint64_t)&v56[v67] & ~v66);
  if (*(void *)(v65 + 64) <= 8uLL) {
    uint64_t v70 = 8;
  }
  else {
    uint64_t v70 = *(void *)(v65 + 64);
  }
  unsigned int v71 = v69[v70];
  unsigned int v72 = v71 - 2;
  if (v71 >= 2)
  {
    if (v70 <= 3) {
      uint64_t v73 = v70;
    }
    else {
      uint64_t v73 = 4;
    }
    switch(v73)
    {
      case 1:
        int v74 = *v69;
        goto LABEL_76;
      case 2:
        int v74 = *(unsigned __int16 *)v69;
        goto LABEL_76;
      case 3:
        int v74 = *(unsigned __int16 *)v69 | (v69[2] << 16);
        goto LABEL_76;
      case 4:
        int v74 = *(_DWORD *)v69;
LABEL_76:
        int v75 = (v74 | (v72 << (8 * v70))) + 2;
        unsigned int v71 = v74 + 2;
        if (v70 < 4) {
          unsigned int v71 = v75;
        }
        break;
      default:
        break;
    }
  }
  if (v71 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v65 + 16))(v68, v69, v64);
    char v76 = 1;
  }
  else
  {
    *uint64_t v68 = *(void *)v69;
    swift_retain();
    char v76 = 0;
  }
  *((unsigned char *)v68 + v70) = v76;
  uint64_t v77 = v70 + 1;
  uint64_t v78 = *(void *)(sub_255C7E4E8() - 8);
  uint64_t v79 = v78;
  uint64_t v80 = *(_DWORD *)(v78 + 80) & 0xF8 | 7;
  unsigned int v81 = (void *)(((unint64_t)v68 + v77 + v80) & ~v80);
  unsigned int v82 = (unsigned __int8 *)((unint64_t)&v69[v77 + v80] & ~v80);
  if (*(void *)(v78 + 64) <= 8uLL) {
    uint64_t v83 = 8;
  }
  else {
    uint64_t v83 = *(void *)(v78 + 64);
  }
  unsigned int v84 = v82[v83];
  unsigned int v85 = v84 - 2;
  if (v84 >= 2)
  {
    if (v83 <= 3) {
      uint64_t v86 = v83;
    }
    else {
      uint64_t v86 = 4;
    }
    switch(v86)
    {
      case 1:
        int v87 = *v82;
        goto LABEL_93;
      case 2:
        int v87 = *(unsigned __int16 *)v82;
        goto LABEL_93;
      case 3:
        int v87 = *(unsigned __int16 *)v82 | (v82[2] << 16);
        goto LABEL_93;
      case 4:
        int v87 = *(_DWORD *)v82;
LABEL_93:
        int v88 = (v87 | (v85 << (8 * v83))) + 2;
        unsigned int v84 = v87 + 2;
        if (v83 < 4) {
          unsigned int v84 = v88;
        }
        break;
      default:
        break;
    }
  }
  if (v84 == 1)
  {
    (*(void (**)(void *))(v79 + 16))(v81);
    char v89 = 1;
  }
  else
  {
    *unsigned int v81 = *(void *)v82;
    swift_retain();
    char v89 = 0;
  }
  *((unsigned char *)v81 + v83) = v89;
  return a1;
}

unsigned __int8 *sub_255A6366C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_255C7E0A8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_255C7E0A8() - 8) + 64);
  uint64_t v18 = 8;
  if (v17 > 8) {
    uint64_t v18 = v17;
  }
  uint64_t v19 = a3[2];
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v18 + v21 + 1;
  unint64_t v23 = (void *)((unint64_t)&a1[v22] & ~v21);
  size_t v24 = (void *)((unint64_t)&a2[v22] & ~v21);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v26 = v25(v23, 1, v19);
  int v27 = v25(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v23, v24, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      goto LABEL_50;
    }
    int v28 = *(_DWORD *)(v20 + 84);
    size_t v29 = *(void *)(v20 + 64);
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v23, v24, v19);
      goto LABEL_50;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v23, v19);
    int v28 = *(_DWORD *)(v20 + 84);
    size_t v29 = *(void *)(v20 + 64);
  }
  if (v28) {
    size_t v30 = v29;
  }
  else {
    size_t v30 = v29 + 1;
  }
  memcpy(v23, v24, v30);
LABEL_50:
  if (*(_DWORD *)(v20 + 84)) {
    uint64_t v31 = *(void *)(v20 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v20 + 64) + 1;
  }
  uint64_t v32 = (void *)(((unint64_t)v23 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v24 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  uint64_t v34 = *(void *)(a3[3] - 8);
  uint64_t v35 = v34 + 24;
  uint64_t v36 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v37 = ((unint64_t)v32 + v36 + 8) & ~v36;
  uint64_t v38 = ((unint64_t)v33 + v36 + 8) & ~v36;
  (*(void (**)(uint64_t, uint64_t))(v34 + 24))(v37, v38);
  uint64_t v39 = *(void *)(v35 + 40);
  uint64_t v40 = a3[4];
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v43 = v39 + v42;
  uint64_t v44 = (void *)((v43 + v37) & ~v42);
  uint64_t v45 = (void *)((v43 + v38) & ~v42);
  uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v47 = v46(v44, 1, v40);
  int v48 = v46(v45, 1, v40);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v44, v45, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
      goto LABEL_64;
    }
    int v49 = *(_DWORD *)(v41 + 84);
    size_t v50 = *(void *)(v41 + 64);
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v44, v45, v40);
      goto LABEL_64;
    }
    (*(void (**)(void *, uint64_t))(v41 + 8))(v44, v40);
    int v49 = *(_DWORD *)(v41 + 84);
    size_t v50 = *(void *)(v41 + 64);
  }
  if (v49) {
    size_t v51 = v50;
  }
  else {
    size_t v51 = v50 + 1;
  }
  memcpy(v44, v45, v51);
LABEL_64:
  if (*(_DWORD *)(v41 + 84)) {
    uint64_t v52 = *(void *)(v41 + 64);
  }
  else {
    uint64_t v52 = *(void *)(v41 + 64) + 1;
  }
  uint64_t v53 = (uint64_t)v44 + v52 + 7;
  uint64_t v54 = (uint64_t)v45 + v52 + 7;
  unint64_t v55 = (v54 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v53 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v54 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  size_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v58 = v55 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v59 = *(void *)(v55 & 0xFFFFFFFFFFFFFFF8);
  if (*v57 < 0xFFFFFFFFuLL)
  {
    if (v59 >= 0xFFFFFFFF)
    {
      uint64_t v61 = *(void *)(v58 + 8);
      *size_t v57 = v59;
      v57[1] = v61;
      swift_retain();
      goto LABEL_74;
    }
  }
  else
  {
    if (v59 >= 0xFFFFFFFF)
    {
      uint64_t v60 = *(void *)(v58 + 8);
      *size_t v57 = v59;
      v57[1] = v60;
      swift_retain();
      swift_release();
      goto LABEL_74;
    }
    swift_release();
  }
  *(_OWORD *)size_t v57 = *(_OWORD *)v58;
LABEL_74:
  uint64_t v62 = sub_255C801A8();
  uint64_t v63 = *(void *)(v62 - 8);
  int v64 = *(_DWORD *)(v63 + 84);
  uint64_t v65 = *(_DWORD *)(v63 + 80) & 0xF8 | 7;
  uint64_t v66 = (unsigned __int8 *)(((unint64_t)v57 + v65 + 16) & ~v65);
  uint64_t v67 = (unsigned __int8 *)((v58 + v65 + 16) & ~v65);
  unint64_t v68 = *(void *)(v63 + 64);
  if (v66 != v67)
  {
    uint64_t v69 = v62;
    if (v64) {
      size_t v70 = *(void *)(v63 + 64);
    }
    else {
      size_t v70 = v68 + 1;
    }
    if (v70 <= 8) {
      uint64_t v71 = 8;
    }
    else {
      uint64_t v71 = v70;
    }
    unsigned int v72 = v66[v71];
    unsigned int v73 = v72 - 2;
    if (v72 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v74 = v71;
      }
      else {
        uint64_t v74 = 4;
      }
      switch(v74)
      {
        case 1:
          int v75 = *v66;
          goto LABEL_90;
        case 2:
          int v75 = *(unsigned __int16 *)v66;
          goto LABEL_90;
        case 3:
          int v75 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          goto LABEL_90;
        case 4:
          int v75 = *(_DWORD *)v66;
LABEL_90:
          int v76 = (v75 | (v73 << (8 * v71))) + 2;
          unsigned int v72 = v75 + 2;
          if (v71 < 4) {
            unsigned int v72 = v76;
          }
          break;
        default:
          break;
      }
    }
    if (v72 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v66, 1, v62)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(v66, v69);
      }
    }
    else
    {
      swift_release();
    }
    unsigned int v77 = v67[v71];
    unsigned int v78 = v77 - 2;
    if (v77 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v79 = v71;
      }
      else {
        uint64_t v79 = 4;
      }
      switch(v79)
      {
        case 1:
          int v80 = *v67;
          goto LABEL_105;
        case 2:
          int v80 = *(unsigned __int16 *)v67;
          goto LABEL_105;
        case 3:
          int v80 = *(unsigned __int16 *)v67 | (v67[2] << 16);
          goto LABEL_105;
        case 4:
          int v80 = *(_DWORD *)v67;
LABEL_105:
          int v81 = (v80 | (v78 << (8 * v71))) + 2;
          unsigned int v77 = v80 + 2;
          if (v71 < 4) {
            unsigned int v77 = v81;
          }
          break;
        default:
          break;
      }
    }
    if (v77 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v67, 1, v69))
      {
        memcpy(v66, v67, v70);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v63 + 16))(v66, v67, v69);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v63 + 56))(v66, 0, 1, v69);
      }
      v66[v71] = 1;
    }
    else
    {
      *(void *)uint64_t v66 = *(void *)v67;
      v66[v71] = 0;
      swift_retain();
    }
  }
  if (v64) {
    unint64_t v82 = v68;
  }
  else {
    unint64_t v82 = v68 + 1;
  }
  uint64_t v83 = 8;
  if (v82 <= 8) {
    uint64_t v84 = 8;
  }
  else {
    uint64_t v84 = v82;
  }
  uint64_t v85 = sub_255C7EA38();
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(_DWORD *)(v86 + 80) & 0xF8 | 7;
  uint64_t v88 = v84 + v87 + 1;
  char v89 = (unsigned __int8 *)((unint64_t)&v66[v88] & ~v87);
  uint64_t v90 = (unsigned __int8 *)((unint64_t)&v67[v88] & ~v87);
  if (*(void *)(v86 + 64) > 8uLL) {
    uint64_t v83 = *(void *)(v86 + 64);
  }
  if (v89 != v90)
  {
    uint64_t v91 = v85;
    unsigned int v92 = v89[v83];
    unsigned int v93 = v92 - 2;
    if (v92 >= 2)
    {
      if (v83 <= 3) {
        uint64_t v94 = v83;
      }
      else {
        uint64_t v94 = 4;
      }
      switch(v94)
      {
        case 1:
          int v95 = *v89;
          goto LABEL_131;
        case 2:
          int v95 = *(unsigned __int16 *)v89;
          goto LABEL_131;
        case 3:
          int v95 = *(unsigned __int16 *)v89 | (v89[2] << 16);
          goto LABEL_131;
        case 4:
          int v95 = *(_DWORD *)v89;
LABEL_131:
          int v96 = (v95 | (v93 << (8 * v83))) + 2;
          unsigned int v92 = v95 + 2;
          if (v83 < 4) {
            unsigned int v92 = v96;
          }
          break;
        default:
          break;
      }
    }
    if (v92 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v86 + 8))(v89, v85);
    }
    else {
      swift_release();
    }
    unsigned int v97 = v90[v83];
    unsigned int v98 = v97 - 2;
    if (v97 >= 2)
    {
      if (v83 <= 3) {
        uint64_t v99 = v83;
      }
      else {
        uint64_t v99 = 4;
      }
      switch(v99)
      {
        case 1:
          int v100 = *v90;
          goto LABEL_145;
        case 2:
          int v100 = *(unsigned __int16 *)v90;
          goto LABEL_145;
        case 3:
          int v100 = *(unsigned __int16 *)v90 | (v90[2] << 16);
          goto LABEL_145;
        case 4:
          int v100 = *(_DWORD *)v90;
LABEL_145:
          int v101 = (v100 | (v98 << (8 * v83))) + 2;
          unsigned int v97 = v100 + 2;
          if (v83 < 4) {
            unsigned int v97 = v101;
          }
          break;
        default:
          break;
      }
    }
    if (v97 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v86 + 16))(v89, v90, v91);
      v89[v83] = 1;
    }
    else
    {
      *(void *)char v89 = *(void *)v90;
      v89[v83] = 0;
      swift_retain();
    }
  }
  uint64_t v102 = sub_255C7E4E8();
  uint64_t v103 = *(void *)(v102 - 8);
  uint64_t v104 = *(_DWORD *)(v103 + 80) & 0xF8 | 7;
  uint64_t v105 = v83 + v104 + 1;
  uint64_t v106 = (unsigned __int8 *)((unint64_t)&v89[v105] & ~v104);
  unint64_t v107 = (unsigned __int8 *)((unint64_t)&v90[v105] & ~v104);
  if (v106 != v107)
  {
    uint64_t v108 = v102;
    uint64_t v109 = *(void *)(v102 - 8);
    if (*(void *)(v103 + 64) <= 8uLL) {
      uint64_t v110 = 8;
    }
    else {
      uint64_t v110 = *(void *)(v103 + 64);
    }
    unsigned int v111 = v106[v110];
    unsigned int v112 = v111 - 2;
    if (v111 >= 2)
    {
      if (v110 <= 3) {
        uint64_t v113 = v110;
      }
      else {
        uint64_t v113 = 4;
      }
      switch(v113)
      {
        case 1:
          int v114 = *v106;
          goto LABEL_163;
        case 2:
          int v114 = *(unsigned __int16 *)v106;
          goto LABEL_163;
        case 3:
          int v114 = *(unsigned __int16 *)v106 | (v106[2] << 16);
          goto LABEL_163;
        case 4:
          int v114 = *(_DWORD *)v106;
LABEL_163:
          int v115 = (v114 | (v112 << (8 * v110))) + 2;
          unsigned int v111 = v114 + 2;
          if (v110 < 4) {
            unsigned int v111 = v115;
          }
          break;
        default:
          break;
      }
    }
    if (v111 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v109 + 8))(v106, v102);
    }
    else {
      swift_release();
    }
    unsigned int v116 = v107[v110];
    unsigned int v117 = v116 - 2;
    if (v116 >= 2)
    {
      if (v110 <= 3) {
        uint64_t v118 = v110;
      }
      else {
        uint64_t v118 = 4;
      }
      switch(v118)
      {
        case 1:
          int v119 = *v107;
          goto LABEL_177;
        case 2:
          int v119 = *(unsigned __int16 *)v107;
          goto LABEL_177;
        case 3:
          int v119 = *(unsigned __int16 *)v107 | (v107[2] << 16);
          goto LABEL_177;
        case 4:
          int v119 = *(_DWORD *)v107;
LABEL_177:
          int v120 = (v119 | (v117 << (8 * v110))) + 2;
          unsigned int v116 = v119 + 2;
          if (v110 < 4) {
            unsigned int v116 = v120;
          }
          break;
        default:
          break;
      }
    }
    if (v116 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v109 + 16))(v106, v107, v108);
      v106[v110] = 1;
    }
    else
    {
      *(void *)uint64_t v106 = *(void *)v107;
      v106[v110] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_255A64380(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = sub_255C7E0A8();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = a3[2];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v7 + v15 + 1;
  unint64_t v17 = (void *)(((unint64_t)a1 + v16) & ~v15);
  uint64_t v18 = (const void *)((unint64_t)&a2[v16] & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
  {
    int v19 = *(_DWORD *)(v14 + 84);
    size_t v20 = *(void *)(v14 + 64);
    if (v19) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v20 + 1;
    }
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v17, v18, v13);
    unint64_t v23 = *(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v22 = v14 + 56;
    v23(v17, 0, 1, v13);
    int v19 = *(_DWORD *)(v22 + 28);
    size_t v20 = *(void *)(v22 + 8);
  }
  if (v19) {
    size_t v24 = v20;
  }
  else {
    size_t v24 = v20 + 1;
  }
  uint64_t v25 = (void *)(((unint64_t)v17 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v26 = (void *)(((unint64_t)v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  uint64_t v27 = *(void *)(a3[3] - 8);
  uint64_t v28 = v27 + 32;
  uint64_t v29 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v30 = ((unint64_t)v25 + v29 + 8) & ~v29;
  uint64_t v31 = ((unint64_t)v26 + v29 + 8) & ~v29;
  (*(void (**)(uint64_t, uint64_t))(v27 + 32))(v30, v31);
  uint64_t v32 = *(void *)(v28 + 32);
  uint64_t v33 = a3[4];
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = v32 + v35;
  uint64_t v37 = (void *)((v36 + v30) & ~v35);
  uint64_t v38 = (const void *)((v36 + v31) & ~v35);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v38, 1, v33))
  {
    int v39 = *(_DWORD *)(v34 + 84);
    uint64_t v40 = *(void *)(v34 + 64);
    if (v39) {
      size_t v41 = *(void *)(v34 + 64);
    }
    else {
      size_t v41 = v40 + 1;
    }
    memcpy(v37, v38, v41);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v37, v38, v33);
    uint64_t v43 = *(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56);
    uint64_t v42 = v34 + 56;
    v43(v37, 0, 1, v33);
    int v39 = *(_DWORD *)(v42 + 28);
    uint64_t v40 = *(void *)(v42 + 8);
  }
  if (v39) {
    uint64_t v44 = v40;
  }
  else {
    uint64_t v44 = v40 + 1;
  }
  uint64_t v45 = (void *)(((unint64_t)v37 + v44 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v46 = (void *)(((unint64_t)v38 + v44 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v45 = *v46;
  unint64_t v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = ((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v48 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
  }
  else
  {
    uint64_t v49 = *(void *)(v48 + 8);
    *(void *)unint64_t v47 = *(void *)v48;
    *(void *)(v47 + 8) = v49;
  }
  uint64_t v50 = sub_255C801A8();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(_DWORD *)(v51 + 80) & 0xF8 | 7;
  unint64_t v53 = v48 + v52;
  uint64_t v54 = (void *)((v47 + v52 + 16) & ~v52);
  unint64_t v55 = (unsigned __int8 *)((v53 + 16) & ~v52);
  if (*(_DWORD *)(v51 + 84)) {
    size_t v56 = *(void *)(v51 + 64);
  }
  else {
    size_t v56 = *(void *)(v51 + 64) + 1;
  }
  if (v56 <= 8) {
    uint64_t v57 = 8;
  }
  else {
    uint64_t v57 = v56;
  }
  unsigned int v58 = v55[v57];
  unsigned int v59 = v58 - 2;
  if (v58 >= 2)
  {
    if (v57 <= 3) {
      uint64_t v60 = v57;
    }
    else {
      uint64_t v60 = 4;
    }
    switch(v60)
    {
      case 1:
        int v61 = *v55;
        goto LABEL_56;
      case 2:
        int v61 = *(unsigned __int16 *)v55;
        goto LABEL_56;
      case 3:
        int v61 = *(unsigned __int16 *)v55 | (v55[2] << 16);
        goto LABEL_56;
      case 4:
        int v61 = *(_DWORD *)v55;
LABEL_56:
        int v62 = (v61 | (v59 << (8 * v57))) + 2;
        unsigned int v58 = v61 + 2;
        if (v57 < 4) {
          unsigned int v58 = v62;
        }
        break;
      default:
        break;
    }
  }
  if (v58 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v51 + 48))(v55, 1, v50))
    {
      memcpy(v54, v55, v56);
      char v63 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v51 + 32))(v54, v55, v50);
      char v63 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v50);
    }
  }
  else
  {
    char v63 = 0;
    *uint64_t v54 = *(void *)v55;
  }
  *((unsigned char *)v54 + v57) = v63;
  uint64_t v64 = sub_255C7EA38();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(_DWORD *)(v65 + 80) & 0xF8 | 7;
  uint64_t v67 = v57 + v66 + 1;
  unint64_t v68 = (void *)(((unint64_t)v54 + v67) & ~v66);
  uint64_t v69 = (unsigned __int8 *)((unint64_t)&v55[v67] & ~v66);
  if (*(void *)(v65 + 64) <= 8uLL) {
    uint64_t v70 = 8;
  }
  else {
    uint64_t v70 = *(void *)(v65 + 64);
  }
  unsigned int v71 = v69[v70];
  unsigned int v72 = v71 - 2;
  if (v71 >= 2)
  {
    if (v70 <= 3) {
      uint64_t v73 = v70;
    }
    else {
      uint64_t v73 = 4;
    }
    switch(v73)
    {
      case 1:
        int v74 = *v69;
        goto LABEL_75;
      case 2:
        int v74 = *(unsigned __int16 *)v69;
        goto LABEL_75;
      case 3:
        int v74 = *(unsigned __int16 *)v69 | (v69[2] << 16);
        goto LABEL_75;
      case 4:
        int v74 = *(_DWORD *)v69;
LABEL_75:
        int v75 = (v74 | (v72 << (8 * v70))) + 2;
        unsigned int v71 = v74 + 2;
        if (v70 < 4) {
          unsigned int v71 = v75;
        }
        break;
      default:
        break;
    }
  }
  if (v71 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v65 + 32))(v68, v69, v64);
    char v76 = 1;
  }
  else
  {
    char v76 = 0;
    *unint64_t v68 = *(void *)v69;
  }
  *((unsigned char *)v68 + v70) = v76;
  uint64_t v77 = v70 + 1;
  uint64_t v78 = *(void *)(sub_255C7E4E8() - 8);
  uint64_t v79 = v78;
  uint64_t v80 = *(_DWORD *)(v78 + 80) & 0xF8 | 7;
  int v81 = (void *)(((unint64_t)v68 + v77 + v80) & ~v80);
  unint64_t v82 = (unsigned __int8 *)((unint64_t)&v69[v77 + v80] & ~v80);
  if (*(void *)(v78 + 64) <= 8uLL) {
    uint64_t v83 = 8;
  }
  else {
    uint64_t v83 = *(void *)(v78 + 64);
  }
  unsigned int v84 = v82[v83];
  unsigned int v85 = v84 - 2;
  if (v84 >= 2)
  {
    if (v83 <= 3) {
      uint64_t v86 = v83;
    }
    else {
      uint64_t v86 = 4;
    }
    switch(v86)
    {
      case 1:
        int v87 = *v82;
        goto LABEL_92;
      case 2:
        int v87 = *(unsigned __int16 *)v82;
        goto LABEL_92;
      case 3:
        int v87 = *(unsigned __int16 *)v82 | (v82[2] << 16);
        goto LABEL_92;
      case 4:
        int v87 = *(_DWORD *)v82;
LABEL_92:
        int v88 = (v87 | (v85 << (8 * v83))) + 2;
        unsigned int v84 = v87 + 2;
        if (v83 < 4) {
          unsigned int v84 = v88;
        }
        break;
      default:
        break;
    }
  }
  if (v84 == 1)
  {
    (*(void (**)(void *))(v79 + 32))(v81);
    char v89 = 1;
  }
  else
  {
    char v89 = 0;
    *int v81 = *(void *)v82;
  }
  *((unsigned char *)v81 + v83) = v89;
  return a1;
}

unsigned __int8 *sub_255A64BC0(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_255C7E0A8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_255C7E0A8() - 8) + 64);
  uint64_t v19 = 8;
  if (v18 > 8) {
    uint64_t v19 = v18;
  }
  uint64_t v20 = a3[2];
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v19 + v22 + 1;
  size_t v24 = (void *)((unint64_t)&a1[v23] & ~v22);
  uint64_t v25 = (void *)((unint64_t)&a2[v23] & ~v22);
  int v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v27 = v26(v24, 1, v20);
  int v28 = v26(v25, 1, v20);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v24, v25, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
      goto LABEL_51;
    }
    int v29 = *(_DWORD *)(v21 + 84);
    size_t v30 = *(void *)(v21 + 64);
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v24, v25, v20);
      goto LABEL_51;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v24, v20);
    int v29 = *(_DWORD *)(v21 + 84);
    size_t v30 = *(void *)(v21 + 64);
  }
  if (v29) {
    size_t v31 = v30;
  }
  else {
    size_t v31 = v30 + 1;
  }
  memcpy(v24, v25, v31);
LABEL_51:
  if (*(_DWORD *)(v21 + 84)) {
    uint64_t v32 = *(void *)(v21 + 64);
  }
  else {
    uint64_t v32 = *(void *)(v21 + 64) + 1;
  }
  uint64_t v33 = (void *)(((unint64_t)v24 + v32 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = (void *)(((unint64_t)v25 + v32 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  uint64_t v35 = *(void *)(a3[3] - 8);
  uint64_t v36 = v35 + 40;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = ((unint64_t)v33 + v37 + 8) & ~v37;
  uint64_t v39 = ((unint64_t)v34 + v37 + 8) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v38, v39);
  uint64_t v40 = *(void *)(v36 + 24);
  uint64_t v41 = a3[4];
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = v40 + v43;
  uint64_t v45 = (void *)((v44 + v38) & ~v43);
  uint64_t v46 = (void *)((v44 + v39) & ~v43);
  unint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  int v48 = v47(v45, 1, v41);
  int v49 = v47(v46, 1, v41);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 32))(v45, v46, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v41);
      goto LABEL_65;
    }
    int v50 = *(_DWORD *)(v42 + 84);
    size_t v51 = *(void *)(v42 + 64);
  }
  else
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 40))(v45, v46, v41);
      goto LABEL_65;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v45, v41);
    int v50 = *(_DWORD *)(v42 + 84);
    size_t v51 = *(void *)(v42 + 64);
  }
  if (v50) {
    size_t v52 = v51;
  }
  else {
    size_t v52 = v51 + 1;
  }
  memcpy(v45, v46, v52);
LABEL_65:
  if (*(_DWORD *)(v42 + 84)) {
    uint64_t v53 = *(void *)(v42 + 64);
  }
  else {
    uint64_t v53 = *(void *)(v42 + 64) + 1;
  }
  uint64_t v54 = (uint64_t)v45 + v53 + 7;
  unint64_t v55 = (void *)(((unint64_t)v46 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v54 & 0xFFFFFFFFFFFFFFF8) = *v55;
  unint64_t v56 = (v54 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  uint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFF8);
  unsigned int v58 = (unint64_t *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v59 = *v58;
  if (*v57 < 0xFFFFFFFFuLL)
  {
    if (v59 >= 0xFFFFFFFF)
    {
      unint64_t v61 = v58[1];
      *uint64_t v57 = v59;
      v57[1] = v61;
      goto LABEL_75;
    }
  }
  else
  {
    if (v59 >= 0xFFFFFFFF)
    {
      unint64_t v60 = v58[1];
      *uint64_t v57 = v59;
      v57[1] = v60;
      swift_release();
      goto LABEL_75;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
LABEL_75:
  uint64_t v62 = sub_255C801A8();
  uint64_t v63 = *(void *)(v62 - 8);
  int v64 = *(_DWORD *)(v63 + 84);
  uint64_t v65 = *(_DWORD *)(v63 + 80) & 0xF8 | 7;
  uint64_t v66 = (char *)v58 + v65;
  uint64_t v67 = (unsigned __int8 *)(((unint64_t)v57 + v65 + 16) & ~v65);
  unint64_t v68 = (unsigned __int8 *)((unint64_t)(v66 + 16) & ~v65);
  unint64_t v69 = *(void *)(v63 + 64);
  if (v67 != v68)
  {
    uint64_t v70 = v62;
    if (v64) {
      size_t v71 = *(void *)(v63 + 64);
    }
    else {
      size_t v71 = v69 + 1;
    }
    if (v71 <= 8) {
      uint64_t v72 = 8;
    }
    else {
      uint64_t v72 = v71;
    }
    unsigned int v73 = v67[v72];
    unsigned int v74 = v73 - 2;
    if (v73 >= 2)
    {
      if (v72 <= 3) {
        uint64_t v75 = v72;
      }
      else {
        uint64_t v75 = 4;
      }
      switch(v75)
      {
        case 1:
          int v76 = *v67;
          goto LABEL_91;
        case 2:
          int v76 = *(unsigned __int16 *)v67;
          goto LABEL_91;
        case 3:
          int v76 = *(unsigned __int16 *)v67 | (v67[2] << 16);
          goto LABEL_91;
        case 4:
          int v76 = *(_DWORD *)v67;
LABEL_91:
          int v77 = (v76 | (v74 << (8 * v72))) + 2;
          unsigned int v73 = v76 + 2;
          if (v72 < 4) {
            unsigned int v73 = v77;
          }
          break;
        default:
          break;
      }
    }
    if (v73 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v67, 1, v62)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(v67, v70);
      }
    }
    else
    {
      swift_release();
    }
    unsigned int v78 = v68[v72];
    unsigned int v79 = v78 - 2;
    if (v78 >= 2)
    {
      if (v72 <= 3) {
        uint64_t v80 = v72;
      }
      else {
        uint64_t v80 = 4;
      }
      switch(v80)
      {
        case 1:
          int v81 = *v68;
          goto LABEL_106;
        case 2:
          int v81 = *(unsigned __int16 *)v68;
          goto LABEL_106;
        case 3:
          int v81 = *(unsigned __int16 *)v68 | (v68[2] << 16);
          goto LABEL_106;
        case 4:
          int v81 = *(_DWORD *)v68;
LABEL_106:
          int v82 = (v81 | (v79 << (8 * v72))) + 2;
          unsigned int v78 = v81 + 2;
          if (v72 < 4) {
            unsigned int v78 = v82;
          }
          break;
        default:
          break;
      }
    }
    if (v78 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v68, 1, v70))
      {
        memcpy(v67, v68, v71);
        char v83 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v63 + 32))(v67, v68, v70);
        char v83 = 1;
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v70);
      }
    }
    else
    {
      char v83 = 0;
      *(void *)uint64_t v67 = *(void *)v68;
    }
    v67[v72] = v83;
  }
  if (v64) {
    unint64_t v84 = v69;
  }
  else {
    unint64_t v84 = v69 + 1;
  }
  uint64_t v85 = 8;
  if (v84 <= 8) {
    uint64_t v86 = 8;
  }
  else {
    uint64_t v86 = v84;
  }
  uint64_t v87 = sub_255C7EA38();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = *(_DWORD *)(v88 + 80) & 0xF8 | 7;
  uint64_t v90 = v86 + v89 + 1;
  uint64_t v91 = (unsigned __int8 *)((unint64_t)&v67[v90] & ~v89);
  unsigned int v92 = (unsigned __int8 *)((unint64_t)&v68[v90] & ~v89);
  if (*(void *)(v88 + 64) > 8uLL) {
    uint64_t v85 = *(void *)(v88 + 64);
  }
  if (v91 != v92)
  {
    uint64_t v93 = v87;
    unsigned int v94 = v91[v85];
    unsigned int v95 = v94 - 2;
    if (v94 >= 2)
    {
      if (v85 <= 3) {
        uint64_t v96 = v85;
      }
      else {
        uint64_t v96 = 4;
      }
      switch(v96)
      {
        case 1:
          int v97 = *v91;
          goto LABEL_132;
        case 2:
          int v97 = *(unsigned __int16 *)v91;
          goto LABEL_132;
        case 3:
          int v97 = *(unsigned __int16 *)v91 | (v91[2] << 16);
          goto LABEL_132;
        case 4:
          int v97 = *(_DWORD *)v91;
LABEL_132:
          int v98 = (v97 | (v95 << (8 * v85))) + 2;
          unsigned int v94 = v97 + 2;
          if (v85 < 4) {
            unsigned int v94 = v98;
          }
          break;
        default:
          break;
      }
    }
    if (v94 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v88 + 8))(v91, v87);
    }
    else {
      swift_release();
    }
    unsigned int v99 = v92[v85];
    unsigned int v100 = v99 - 2;
    if (v99 >= 2)
    {
      if (v85 <= 3) {
        uint64_t v101 = v85;
      }
      else {
        uint64_t v101 = 4;
      }
      switch(v101)
      {
        case 1:
          int v102 = *v92;
          goto LABEL_146;
        case 2:
          int v102 = *(unsigned __int16 *)v92;
          goto LABEL_146;
        case 3:
          int v102 = *(unsigned __int16 *)v92 | (v92[2] << 16);
          goto LABEL_146;
        case 4:
          int v102 = *(_DWORD *)v92;
LABEL_146:
          int v103 = (v102 | (v100 << (8 * v85))) + 2;
          unsigned int v99 = v102 + 2;
          if (v85 < 4) {
            unsigned int v99 = v103;
          }
          break;
        default:
          break;
      }
    }
    if (v99 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v88 + 32))(v91, v92, v93);
      char v104 = 1;
    }
    else
    {
      char v104 = 0;
      *(void *)uint64_t v91 = *(void *)v92;
    }
    v91[v85] = v104;
  }
  uint64_t v105 = sub_255C7E4E8();
  uint64_t v106 = *(void *)(v105 - 8);
  uint64_t v107 = *(_DWORD *)(v106 + 80) & 0xF8 | 7;
  uint64_t v108 = v85 + v107 + 1;
  uint64_t v109 = (unsigned __int8 *)((unint64_t)&v91[v108] & ~v107);
  uint64_t v110 = (unsigned __int8 *)((unint64_t)&v92[v108] & ~v107);
  if (v109 != v110)
  {
    uint64_t v111 = v105;
    uint64_t v112 = *(void *)(v105 - 8);
    if (*(void *)(v106 + 64) <= 8uLL) {
      uint64_t v113 = 8;
    }
    else {
      uint64_t v113 = *(void *)(v106 + 64);
    }
    unsigned int v114 = v109[v113];
    unsigned int v115 = v114 - 2;
    if (v114 >= 2)
    {
      if (v113 <= 3) {
        uint64_t v116 = v113;
      }
      else {
        uint64_t v116 = 4;
      }
      switch(v116)
      {
        case 1:
          int v117 = *v109;
          goto LABEL_165;
        case 2:
          int v117 = *(unsigned __int16 *)v109;
          goto LABEL_165;
        case 3:
          int v117 = *(unsigned __int16 *)v109 | (v109[2] << 16);
          goto LABEL_165;
        case 4:
          int v117 = *(_DWORD *)v109;
LABEL_165:
          int v118 = (v117 | (v115 << (8 * v113))) + 2;
          unsigned int v114 = v117 + 2;
          if (v113 < 4) {
            unsigned int v114 = v118;
          }
          break;
        default:
          break;
      }
    }
    if (v114 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v112 + 8))(v109, v105);
    }
    else {
      swift_release();
    }
    unsigned int v119 = v110[v113];
    unsigned int v120 = v119 - 2;
    if (v119 >= 2)
    {
      if (v113 <= 3) {
        uint64_t v121 = v113;
      }
      else {
        uint64_t v121 = 4;
      }
      switch(v121)
      {
        case 1:
          int v122 = *v110;
          goto LABEL_179;
        case 2:
          int v122 = *(unsigned __int16 *)v110;
          goto LABEL_179;
        case 3:
          int v122 = *(unsigned __int16 *)v110 | (v110[2] << 16);
          goto LABEL_179;
        case 4:
          int v122 = *(_DWORD *)v110;
LABEL_179:
          int v123 = (v122 | (v120 << (8 * v113))) + 2;
          unsigned int v119 = v122 + 2;
          if (v113 < 4) {
            unsigned int v119 = v123;
          }
          break;
        default:
          break;
      }
    }
    if (v119 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v112 + 32))(v109, v110, v111);
      char v124 = 1;
    }
    else
    {
      char v124 = 0;
      *(void *)uint64_t v109 = *(void *)v110;
    }
    v109[v113] = v124;
  }
  return a1;
}

uint64_t sub_255A658B4(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  unint64_t v4 = *(void *)(*(void *)(sub_255C7E0A8() - 8) + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  unint64_t v53 = v4;
  uint64_t v46 = a3[2];
  uint64_t v5 = *(void *)(v46 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v56 = *(void *)(a3[3] - 8);
  unsigned int v8 = *(_DWORD *)(v56 + 84);
  uint64_t v44 = a3[4];
  uint64_t v9 = *(void *)(v44 - 8);
  unsigned int v47 = v8;
  unsigned int v51 = v7;
  if (v7 > v8) {
    unsigned int v8 = v7;
  }
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  unsigned int v45 = v11;
  if (v8 <= v11) {
    unsigned int v8 = v11;
  }
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  unsigned int v52 = v8;
  uint64_t v49 = *(void *)(sub_255C801A8() - 8);
  int v12 = *(_DWORD *)(v49 + 84);
  unint64_t v55 = *(void *)(v49 + 64);
  uint64_t v48 = *(void *)(sub_255C7EA38() - 8);
  unint64_t v13 = *(void *)(v48 + 64);
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  unint64_t v50 = v13;
  uint64_t v14 = *(void *)(sub_255C7E4E8() - 8);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(v14 + 64);
  }
  if (v6) {
    uint64_t v16 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v5 + 64) + 1;
  }
  if (v10) {
    uint64_t v17 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v19 = v55;
  uint64_t v20 = *(unsigned __int8 *)(v56 + 80);
  if (!v12) {
    unint64_t v19 = v55 + 1;
  }
  if (v19 <= 8) {
    uint64_t v21 = 8;
  }
  else {
    uint64_t v21 = v19;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v22 = v53 + v18 + 1;
  uint64_t v23 = v16 + 7;
  uint64_t v24 = v20 + 8;
  uint64_t v25 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v26 = *(void *)(v56 + 64) + v25;
  uint64_t v27 = v17 + 7;
  if (a2 <= v52) {
    goto LABEL_48;
  }
  uint64_t v28 = *(_DWORD *)(v49 + 80) & 0xF8 | 7;
  unint64_t v29 = (v28
       + ((((v27 + ((v26 + ((v24 + ((v23 + (v22 & ~v18)) & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & ~v25)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v28;
  uint64_t v30 = *(_DWORD *)(v48 + 80) & 0xF8 | 7;
  uint64_t v31 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  uint64_t v32 = v15 + ((v50 + v31 + ((v21 + v30 + v29 + 1) & ~v30) + 1) & ~v31) + 1;
  char v33 = 8 * v32;
  if (v32 > 3) {
    goto LABEL_33;
  }
  unsigned int v35 = ((a2 - v52 + ~(-1 << v33)) >> v33) + 1;
  if (HIWORD(v35))
  {
    int v34 = *(_DWORD *)((char *)a1 + v32);
    if (v34) {
      goto LABEL_40;
    }
  }
  else
  {
    if (v35 <= 0xFF)
    {
      if (v35 < 2) {
        goto LABEL_48;
      }
LABEL_33:
      int v34 = *((unsigned __int8 *)a1 + v32);
      if (!*((unsigned char *)a1 + v32)) {
        goto LABEL_48;
      }
LABEL_40:
      int v36 = (v34 - 1) << v33;
      if (v32 > 3) {
        int v36 = 0;
      }
      if (v32)
      {
        if (v32 > 3) {
          LODWORD(v32) = 4;
        }
        switch((int)v32)
        {
          case 2:
            LODWORD(v32) = *a1;
            break;
          case 3:
            LODWORD(v32) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v32) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v32) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v52 + (v32 | v36) + 1;
    }
    int v34 = *(unsigned __int16 *)((char *)a1 + v32);
    if (*(unsigned __int16 *)((char *)a1 + v32)) {
      goto LABEL_40;
    }
  }
LABEL_48:
  unint64_t v37 = ((unint64_t)a1 + v22) & ~v18;
  if (v51 == v52)
  {
    if (v6 < 2) {
      return 0;
    }
    unsigned int v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v37, v6, v46);
    goto LABEL_59;
  }
  unint64_t v39 = (v24 + ((v23 + v37) & 0xFFFFFFFFFFFFFFF8)) & ~v20;
  if (v47 == v52)
  {
    uint64_t v40 = *(uint64_t (**)(unint64_t))(v56 + 48);
    return v40(v39);
  }
  else
  {
    unint64_t v42 = (v26 + v39) & ~v25;
    if (v45 == v52)
    {
      if (v10 < 2) {
        return 0;
      }
      unsigned int v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v42, v10, v44);
LABEL_59:
      if (v41 >= 2) {
        return v41 - 1;
      }
      else {
        return 0;
      }
    }
    unint64_t v43 = *(void *)((v27 + v42) & 0xFFFFFFFFFFFFFFF8);
    if (v43 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    return (v43 + 1);
  }
}

void sub_255A65E24(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  unint64_t v5 = *(void *)(*(void *)(sub_255C7E0A8() - 8) + 64);
  if (v5 <= 8) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = v5;
  }
  uint64_t v7 = *(void *)(a4[2] - 8);
  uint64_t v52 = v7;
  int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v56 = *(void *)(a4[3] - 8);
  uint64_t v57 = v6;
  unsigned int v10 = *(_DWORD *)(v56 + 84);
  uint64_t v48 = a4[4];
  uint64_t v11 = *(void *)(v48 - 8);
  unsigned int v50 = v10;
  unsigned int v51 = v9;
  if (v9 > v10) {
    unsigned int v10 = v9;
  }
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  unsigned int v49 = v13;
  if (v10 <= v13) {
    unsigned int v10 = v13;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  unsigned int v58 = v10;
  uint64_t v14 = *(void *)(sub_255C801A8() - 8);
  int v15 = *(_DWORD *)(v14 + 84);
  unint64_t v54 = *(void *)(v14 + 64);
  uint64_t v53 = *(void *)(sub_255C7EA38() - 8);
  unint64_t v16 = *(void *)(v53 + 64);
  if (v16 <= 8) {
    unint64_t v16 = 8;
  }
  unint64_t v55 = v16;
  uint64_t v17 = sub_255C7E4E8();
  int v18 = v8;
  int v19 = 0;
  uint64_t v20 = *(void *)(v17 - 8);
  if (*(void *)(v20 + 64) <= 8uLL) {
    uint64_t v21 = 8;
  }
  else {
    uint64_t v21 = *(void *)(v20 + 64);
  }
  uint64_t v22 = *(void *)(v7 + 64);
  if (!v18) {
    ++v22;
  }
  uint64_t v23 = *(void *)(v11 + 64);
  if (!v12) {
    ++v23;
  }
  uint64_t v24 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v25 = v57 + v24 + 1;
  uint64_t v26 = v22 + 7;
  uint64_t v27 = *(unsigned __int8 *)(v56 + 80);
  uint64_t v28 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v29 = *(void *)(v56 + 64) + v28;
  uint64_t v30 = v23 + 7;
  uint64_t v31 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  unint64_t v32 = (v31
       + ((((v30 + ((v29 + ((v27 + 8 + ((v26 + (v25 & ~v24)) & 0xFFFFFFFFFFFFFFF8)) & ~v27)) & ~v28)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v31;
  unint64_t v33 = v54;
  if (!v15) {
    unint64_t v33 = v54 + 1;
  }
  if (v33 <= 8) {
    unint64_t v33 = 8;
  }
  uint64_t v34 = *(_DWORD *)(v53 + 80) & 0xF8 | 7;
  uint64_t v35 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  size_t v36 = v21 + ((v55 + v35 + ((v33 + v34 + v32 + 1) & ~v34) + 1) & ~v35) + 1;
  if (a3 > v58)
  {
    if (v36 <= 3)
    {
      unsigned int v37 = ((a3 - v58 + ~(-1 << (8 * v36))) >> (8 * v36)) + 1;
      if (HIWORD(v37))
      {
        int v19 = 4;
      }
      else if (v37 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v37 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  if (v58 < a2)
  {
    unsigned int v38 = ~v58 + a2;
    if (v36 < 4)
    {
      int v39 = (v38 >> (8 * v36)) + 1;
      if (v36)
      {
        int v40 = v38 & ~(-1 << (8 * v36));
        bzero(a1, v36);
        if (v36 == 3)
        {
          *(_WORD *)a1 = v40;
          a1[2] = BYTE2(v40);
        }
        else if (v36 == 2)
        {
          *(_WORD *)a1 = v40;
        }
        else
        {
          *a1 = v40;
        }
      }
    }
    else
    {
      bzero(a1, v36);
      *(_DWORD *)a1 = v38;
      int v39 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v36] = v39;
        return;
      case 2:
        *(_WORD *)&a1[v36] = v39;
        return;
      case 3:
        goto LABEL_73;
      case 4:
        *(_DWORD *)&a1[v36] = v39;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v36] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)&a1[v36] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_73:
      __break(1u);
      JUMPOUT(0x255A66440);
    case 4:
      *(_DWORD *)&a1[v36] = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (a2)
      {
LABEL_48:
        unint64_t v41 = (unint64_t)&a1[v25] & ~v24;
        if (v51 == v58)
        {
          unint64_t v42 = *(void (**)(unint64_t, void))(v52 + 56);
          v42(v41, a2 + 1);
        }
        else
        {
          unint64_t v43 = (v27 + 8 + ((v26 + v41) & 0xFFFFFFFFFFFFFFF8)) & ~v27;
          if (v50 == v58)
          {
            uint64_t v44 = *(void (**)(unint64_t))(v56 + 56);
            v44(v43);
          }
          else
          {
            unint64_t v45 = (v29 + v43) & ~v28;
            if (v49 == v58)
            {
              uint64_t v46 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v11 + 56);
              v46(v45, a2 + 1, v12, v48);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v47 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v47 = a2 - 1;
              }
              *(void *)((v30 + v45) & 0xFFFFFFFFFFFFFFF8) = v47;
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for BubbleTip()
{
  return swift_getGenericMetadata();
}

void sub_255A66480()
{
  if (!qword_269F22050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F20AB0);
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F22050);
    }
  }
}

void sub_255A664DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_255C7DD38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255A66530(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if ((a4 & 1) == 0) {
    id v4 = a3;
  }

  return swift_bridgeObjectRetain();
}

void destroy for BubbleImage(uint64_t a1)
{
}

void sub_255A66580(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
  }
}

uint64_t initializeWithCopy for BubbleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A66530(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for BubbleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A66530(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unsigned int v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_255A66580(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for BubbleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_255A66580(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BubbleImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BubbleImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255A6678C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_255A66794(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BubbleImage()
{
  return &type metadata for BubbleImage;
}

uint64_t destroy for BubbleAction()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for BubbleAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BubbleAction(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BubbleAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BubbleAction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BubbleAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BubbleAction()
{
  return &type metadata for BubbleAction;
}

uint64_t *initializeBufferWithCopyOfBuffer for BubbleTipTitleViewModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    char v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_255C7EA38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *char v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for BubbleTipTitleViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_255C7EA38();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

unsigned char *initializeWithCopy for BubbleTipTitleViewModifier(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for BubbleTipTitleViewModifier(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    char v6 = &a2[v4];
    sub_255A095A4((uint64_t)&a1[v4], &qword_269F20CF0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7EA38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *uint64_t v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for BubbleTipTitleViewModifier(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for BubbleTipTitleViewModifier(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    char v6 = &a2[v4];
    sub_255A095A4((uint64_t)&a1[v4], &qword_269F20CF0);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_255C7EA38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BubbleTipTitleViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A66EC0);
}

uint64_t sub_255A66EC0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_269F20CF8);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    unsigned int v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for BubbleTipTitleViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A66F88);
}

unsigned char *sub_255A66F88(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269F20CF8);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255A67030()
{
  sub_255A664DC(319, qword_269F20D80, MEMORY[0x263F19A00]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for BubbleTipSubtitleViewModifier()
{
  return &type metadata for BubbleTipSubtitleViewModifier;
}

ValueMetadata *type metadata accessor for BubbleTipAccessoryModifier()
{
  return &type metadata for BubbleTipAccessoryModifier;
}

unsigned char *_s11MediaCoreUI26BubbleTipAccessoryModifierV6PresetOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A671D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BubbleTipAccessoryModifier.Preset()
{
  return &type metadata for BubbleTipAccessoryModifier.Preset;
}

uint64_t sub_255A6720C()
{
  return swift_getWitnessTable();
}

unint64_t sub_255A67790()
{
  unint64_t result = qword_269F22070;
  if (!qword_269F22070)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22078);
    sub_255A6102C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22070);
  }
  return result;
}

uint64_t sub_255A67804()
{
  return sub_255A09998(&qword_269F22080, &qword_269F22088);
}

uint64_t sub_255A67840()
{
  return sub_255A61170(&qword_269F22090, &qword_269F22098, (void (*)(void))sub_255A67884);
}

unint64_t sub_255A67884()
{
  unint64_t result = qword_269F220A0;
  if (!qword_269F220A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F98);
    sub_255A67A48(&qword_269F220A8, &qword_269F21F90, &qword_269F220B0, &qword_269F21FA0);
    sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F220A0);
  }
  return result;
}

uint64_t sub_255A67944()
{
  return sub_255A61170(&qword_269F220B8, &qword_269F220C0, (void (*)(void))sub_255A67988);
}

unint64_t sub_255A67988()
{
  unint64_t result = qword_269F220C8;
  if (!qword_269F220C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21FB0);
    sub_255A67A48(&qword_269F220D0, &qword_269F21FA8, &qword_269F220D8, &qword_269F21FB8);
    sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F220C8);
  }
  return result;
}

uint64_t sub_255A67A48(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_255A09998(a3, a4);
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_255A67B0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7E4E8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C801A8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255A67D60(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7E4E8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C801A8();
    uint64_t v9 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      return v8(v5, v6);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_255A67EE4(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7E4E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C801A8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255A680E8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_269F21EC0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_255C7E4E8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_255A095A4((uint64_t)a1 + v7, &qword_269F21EC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_255C801A8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_255A68314(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7E4E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_255C801A8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

char *sub_255A68528(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_269F21EC0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7E4E8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_255A095A4((uint64_t)&a1[v8], &qword_269F21EC8);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C801A8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F20AB0);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255A68764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A68778);
}

uint64_t sub_255A68778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F220E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F220E8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_255A68878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A6888C);
}

uint64_t sub_255A6888C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F220E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F220E8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_255A68998()
{
  sub_255A664DC(319, &qword_269F22058, MEMORY[0x263F18FD8]);
  if (v0 <= 0x3F)
  {
    sub_255A66480();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255A68A7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A68A98@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E758();
  *a1 = v3;
  return result;
}

uint64_t sub_255A68AC4()
{
  return sub_255C7E768();
}

uint64_t sub_255A68AEC()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5CF34);
}

uint64_t sub_255A68B04()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5D2B8);
}

unint64_t sub_255A68B1C()
{
  unint64_t result = qword_269F22168;
  if (!qword_269F22168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22168);
  }
  return result;
}

unint64_t sub_255A68B70()
{
  unint64_t result = qword_269F22178;
  if (!qword_269F22178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EB8);
    sub_255A09998(&qword_269F22180, &qword_269F22188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22178);
  }
  return result;
}

uint64_t sub_255A68C08()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  long long v19 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = (int *)type metadata accessor for BubbleTip();
  unint64_t v4 = (*(unsigned __int8 *)(*((void *)v3 - 1) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v3 - 1) + 80);
  swift_release();
  uint64_t v5 = v0 + v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7E0A8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v4, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v3[17];
  uint64_t v8 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v2);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + v3[19], v1);
  uint64_t v9 = v5 + v3[20];
  uint64_t v10 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, void))(v10 + 48))(v9, 1, v19)) {
    (*(void (**)(uint64_t, void))(v10 + 8))(v9, v19);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v3[22])) {
    swift_release();
  }
  uint64_t v11 = v5 + v3[23];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_255C801A8();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = v5 + v3[24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F20CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_255C7EA38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = v5 + v3[25];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_255C7E4E8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_255A69028()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(type metadata accessor for BubbleTip() - 8);
  return sub_255A5A7D4(*(void (**)(uint64_t))(v0 + 64), *(void *)(v0 + 72), v0 + ((*(unsigned __int8 *)(v7 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v1, v2, v3, v4, v5, v6);
}

unint64_t sub_255A690DC()
{
  unint64_t result = qword_269F221A0;
  if (!qword_269F221A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22198);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21F68);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21848);
    sub_255A6138C();
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    swift_getOpaqueTypeConformance2();
    sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F221A0);
  }
  return result;
}

uint64_t sub_255A69200()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5DCDC);
}

uint64_t sub_255A69218()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5E2AC);
}

uint64_t sub_255A69230()
{
  return sub_255A69248((uint64_t (*)(void, void, void, void, void, void, void))sub_255A5E9C4);
}

uint64_t sub_255A69248(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

unint64_t sub_255A69264()
{
  unint64_t result = qword_269F221B0;
  if (!qword_269F221B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21EA8);
    sub_255A68B70();
    sub_255A5F124((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F221B0);
  }
  return result;
}

uint64_t sub_255A69310()
{
  return sub_255C7E838();
}

ValueMetadata *type metadata accessor for BubbleTipBackgroundKey()
{
  return &type metadata for BubbleTipBackgroundKey;
}

unint64_t sub_255A69348()
{
  unint64_t result = qword_269F221C0;
  if (!qword_269F221C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22108);
    sub_255A09998(&qword_269F221C8, &qword_269F22100);
    sub_255A09998(&qword_269F221D0, &qword_269F221D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F221C0);
  }
  return result;
}

uint64_t Backdrop.ViewConfiguration.useMask.getter()
{
  return *v0;
}

void static Backdrop.ViewConfiguration.standard.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static Backdrop.ViewConfiguration.masked.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

id Backdrop.SnapshotConfiguration.image.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

double Backdrop.SnapshotConfiguration.size.getter()
{
  return *(double *)(v0 + 8);
}

double Backdrop.SnapshotConfiguration.scale.getter()
{
  return *(double *)(v0 + 24);
}

double Backdrop.SnapshotConfiguration.offset.getter()
{
  return *(double *)(v0 + 32);
}

void Backdrop.SnapshotConfiguration.offset.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*Backdrop.SnapshotConfiguration.offset.modify())()
{
  return CGSizeMake;
}

id Backdrop.SnapshotConfiguration.traitCollection.getter()
{
  return *(id *)(v0 + 40);
}

void Backdrop.SnapshotConfiguration.traitCollection.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

uint64_t (*Backdrop.SnapshotConfiguration.traitCollection.modify())()
{
  return CGSizeMake;
}

uint64_t Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(void *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(double *)(a3 + 16) = a5;
  *(double *)(a3 + 24) = a6;
  *(double *)(a3 + 32) = a7;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t Backdrop.Recorder.deinit()
{
  sub_255A6963C(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_configuration);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder____lazy_storage___offscreenRenderPassDescriptor));
  sub_255A696B8(*(void *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder____lazy_storage___outputTexture));
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_selfRef);
  *(void *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_selfRef) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_selfRef);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_255A6963C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Backdrop.RecordingConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Backdrop.RecordingConfiguration(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22238);
}

uint64_t sub_255A696B8(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t Backdrop.Recorder.__deallocating_deinit()
{
  Backdrop.Recorder.deinit();

  return swift_deallocClassInstance();
}

uint64_t _s17ViewConfigurationVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17ViewConfigurationVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A6988CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.ViewConfiguration()
{
  return &type metadata for Backdrop.ViewConfiguration;
}

void _s21SnapshotConfigurationVwxx(uint64_t a1)
{
  int v2 = *(void **)(a1 + 40);
}

uint64_t _s21SnapshotConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  unsigned int v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t _s21SnapshotConfigurationVwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  BOOL v7 = *(void **)(a2 + 40);
  int v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  return a1;
}

uint64_t _s21SnapshotConfigurationVwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t _s21SnapshotConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21SnapshotConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.SnapshotConfiguration()
{
  return &type metadata for Backdrop.SnapshotConfiguration;
}

char *_s22RecordingConfigurationVwCP(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  id v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    int v8 = a2 + 1;
    unint64_t v9 = (unint64_t)a2[2];
    uint64_t v10 = v5;
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *v8;
    }
    else
    {
      uint64_t v11 = *(void *)v8;
      sub_255A69C48(v11, v9);
      *((void *)a1 + 1) = v11;
      *((void *)a1 + 2) = v9;
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v12 = a3[8];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_255C7D5C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[10];
    *(_OWORD *)&a1[a3[9]] = *(_OWORD *)((char *)a2 + a3[9]);
    uint64_t v17 = &a1[v16];
    int v18 = (char **)((char *)a2 + v16);
    if (*v18)
    {
      uint64_t v19 = v18[1];
      *(void *)uint64_t v17 = *v18;
      *((void *)v17 + 1) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v20 = a3[11];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = (char **)((char *)a2 + v20);
    if (*v22)
    {
      uint64_t v23 = v22[1];
      *(void *)uint64_t v21 = *v22;
      *((void *)v21 + 1) = v23;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    }
    uint64_t v24 = a3[12];
    uint64_t v25 = *(char **)((char *)a2 + v24);
    *(void *)&a1[v24] = v25;
    id v26 = v25;
  }
  return a1;
}

uint64_t sub_255A69C48(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void _s22RecordingConfigurationVwxx(uint64_t a1, int *a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60 != 15) {
    sub_255A69D74(*(void *)(a1 + 8), v4);
  }
  uint64_t v5 = a1 + a2[8];
  uint64_t v6 = sub_255C7D5C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  if (*(void *)(a1 + a2[10])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[11])) {
    swift_release();
  }
  BOOL v7 = *(void **)(a1 + a2[12]);
}

uint64_t sub_255A69D74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t _s22RecordingConfigurationVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  BOOL v7 = (_OWORD *)(a1 + 8);
  int v8 = (uint64_t *)(a2 + 8);
  unint64_t v9 = *(void *)(a2 + 16);
  id v10 = v6;
  if (v9 >> 60 == 15)
  {
    *BOOL v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v11 = *v8;
    sub_255A69C48(*v8, v9);
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v9;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_255C7D5C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v17 = (void *)(a1 + v16);
  int v18 = (void *)(a2 + v16);
  if (*v18)
  {
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  if (*v22)
  {
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v24 = a3[12];
  uint64_t v25 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v25;
  id v26 = v25;
  return a1;
}

uint64_t _s22RecordingConfigurationVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  BOOL v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  unint64_t v9 = (uint64_t *)(a2 + 8);
  unint64_t v10 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_255A69C48(*v9, *(void *)(a2 + 16));
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_255A6A11C(a1 + 8);
LABEL_6:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v12 = *v9;
  sub_255A69C48(*v9, *(void *)(a2 + 16));
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v12;
  *(void *)(a1 + 16) = v10;
  sub_255A69D74(v13, v14);
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_255C7D5C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a1 + v22);
  uint64_t v26 = *(void *)(a2 + v22);
  if (v25)
  {
    if (v26)
    {
      uint64_t v27 = *(void *)(v24 + 8);
      *uint64_t v23 = v26;
      v23[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v26)
  {
    uint64_t v28 = *(void *)(v24 + 8);
    *uint64_t v23 = v26;
    v23[1] = v28;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_15:
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a1 + v29);
  uint64_t v33 = *(void *)(a2 + v29);
  if (!v32)
  {
    if (v33)
    {
      uint64_t v35 = *(void *)(v31 + 8);
      *uint64_t v30 = v33;
      v30[1] = v35;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    goto LABEL_22;
  }
  if (!v33)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v34 = *(void *)(v31 + 8);
  *uint64_t v30 = v33;
  v30[1] = v34;
  swift_retain();
  swift_release();
LABEL_22:
  uint64_t v36 = a3[12];
  unsigned int v37 = *(void **)(a2 + v36);
  unsigned int v38 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = v37;
  id v39 = v37;

  return a1;
}

uint64_t sub_255A6A11C(uint64_t a1)
{
  return a1;
}

uint64_t _s22RecordingConfigurationVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_255C7D5C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = v12[1];
    *uint64_t v11 = v13;
    v11[1] = v14;
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    *uint64_t v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t _s22RecordingConfigurationVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = (_OWORD *)(a2 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 16);
  if (v9 >> 60 == 15)
  {
    sub_255A6A11C(a1 + 8);
LABEL_4:
    *(_OWORD *)(a1 + 8) = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)v7;
  *(void *)(a1 + 16) = v9;
  sub_255A69D74(v10, v8);
LABEL_6:
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_255C7D5C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15);
  if (*(void *)(a1 + v15))
  {
    if (v18)
    {
      uint64_t v19 = *(void *)(v17 + 8);
      *uint64_t v16 = v18;
      v16[1] = v19;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v18)
  {
    uint64_t v20 = *(void *)(v17 + 8);
    *uint64_t v16 = v18;
    v16[1] = v20;
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
LABEL_13:
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(a1 + v21);
  uint64_t v25 = *(void *)(a2 + v21);
  if (!v24)
  {
    if (v25)
    {
      uint64_t v27 = *(void *)(v23 + 8);
      *uint64_t v22 = v25;
      v22[1] = v27;
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    goto LABEL_20;
  }
  if (!v25)
  {
    swift_release();
    goto LABEL_19;
  }
  uint64_t v26 = *(void *)(v23 + 8);
  *uint64_t v22 = v25;
  v22[1] = v26;
  swift_release();
LABEL_20:
  uint64_t v28 = a3[12];
  uint64_t v29 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);

  return a1;
}

uint64_t _s22RecordingConfigurationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A6A428);
}

uint64_t sub_255A6A428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 48));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t _s22RecordingConfigurationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A6A500);
}

uint64_t sub_255A6A500(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_255C7D5C8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 48)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_255A6A5C0()
{
  uint64_t result = sub_255C7D5C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_255A6A694()
{
  return type metadata accessor for Backdrop.Recorder(0);
}

uint64_t type metadata accessor for Backdrop.Recorder(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22248);
}

uint64_t sub_255A6A6BC()
{
  uint64_t result = type metadata accessor for Backdrop.RecordingConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Backdrop.Recorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Backdrop.Recorder);
}

uint64_t MCUINamespace<A>.rotating(duration:isAnimating:isClockwise:)(char a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22258);
  swift_allocObject();
  uint64_t v10 = sub_255C7DA08();
  sub_255C7FE58();
  double v11 = v16;
  uint64_t v12 = v17;
  uint64_t v23 = 0;
  sub_255C7FE58();
  double v13 = v16;
  uint64_t v14 = v17;
  double v16 = a5;
  LOBYTE(v17) = a1;
  BYTE1(v17) = a2;
  double v18 = v11;
  uint64_t v19 = v12;
  double v20 = v13;
  uint64_t v21 = v14;
  uint64_t v22 = v10;
  MEMORY[0x25A295390](&v16, *(void *)(a3 + 16), &type metadata for RotationEffectModifier, a4);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_255A6A8CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 9) & 1) == 0)
  {
    sub_255C7FBE8();
    sub_255C7FBF8();
  }
  sub_255C7FBE8();
  sub_255C7FBE8();
  sub_255C7FBF8();
  return sub_255C7FE78();
}

uint64_t sub_255A6A9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v56 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22268);
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v55 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22270);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22278);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22280);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  uint64_t v52 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22288);
  uint64_t v53 = *(void *)(v18 - 8);
  uint64_t v54 = v18;
  MEMORY[0x270FA5388](v18);
  unsigned int v50 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v59 = *(_OWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22290);
  sub_255C7FE68();
  uint64_t v20 = v62;
  uint64_t v21 = *(void *)(v2 + 48);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22298);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v10, a1, v22);
  uint64_t v23 = &v10[*(int *)(v8 + 44)];
  *(void *)uint64_t v23 = v20;
  *((void *)v23 + 1) = v21;
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v24 + 32) = v25;
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(v3 + 32);
  *(void *)(v24 + 64) = *(void *)(v3 + 48);
  sub_255A6BEB0((uint64_t)v10, (uint64_t)v13);
  uint64_t v26 = (uint64_t (**)())&v13[*(int *)(v11 + 36)];
  *uint64_t v26 = sub_255A6BEA8;
  v26[1] = (uint64_t (*)())v24;
  v26[2] = 0;
  _OWORD v26[3] = 0;
  swift_retain();
  sub_255A6BF18(v3);
  sub_255A095A4((uint64_t)v10, &qword_269F22270);
  LOBYTE(v59) = *(unsigned char *)(v3 + 8);
  uint64_t v27 = swift_allocObject();
  long long v28 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v27 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v27 + 32) = v28;
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(v3 + 32);
  *(void *)(v27 + 64) = *(void *)(v3 + 48);
  sub_255A6BF18(v3);
  unint64_t v29 = sub_255A6BF70();
  uint64_t v30 = MEMORY[0x263F8D4F8];
  uint64_t v31 = MEMORY[0x263F8D510];
  sub_255C7FB48();
  swift_release();
  sub_255A095A4((uint64_t)v13, &qword_269F22278);
  LOBYTE(v62) = *(unsigned char *)(v3 + 9);
  uint64_t v32 = swift_allocObject();
  long long v33 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v32 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v32 + 32) = v33;
  *(_OWORD *)(v32 + 48) = *(_OWORD *)(v3 + 32);
  *(void *)(v32 + 64) = *(void *)(v3 + 48);
  sub_255A6BF18(v3);
  *(void *)&long long v59 = v11;
  *((void *)&v59 + 1) = v30;
  unint64_t v60 = v29;
  uint64_t v61 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v34);
  *(void *)&long long v59 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22258);
  sub_255A09998(&qword_269F222C0, &qword_269F22258);
  sub_255A6C0EC();
  uint64_t v36 = v55;
  sub_255C7DB88();
  uint64_t v37 = swift_allocObject();
  long long v38 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v37 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v37 + 32) = v38;
  *(_OWORD *)(v37 + 48) = *(_OWORD *)(v3 + 32);
  *(void *)(v37 + 64) = *(void *)(v3 + 48);
  uint64_t v40 = v53;
  uint64_t v39 = v54;
  uint64_t v41 = v56;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v56, v35, v54);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F222D0);
  uint64_t v43 = v41 + *(int *)(v42 + 52);
  uint64_t v44 = v41;
  uint64_t v46 = v57;
  uint64_t v45 = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v43, v36, v58);
  uint64_t v47 = (uint64_t (**)(uint64_t))(v44 + *(int *)(v42 + 56));
  *uint64_t v47 = sub_255A6C144;
  v47[1] = (uint64_t (*)(uint64_t))v37;
  sub_255A6BF18(v3);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v35, v39);
}

uint64_t sub_255A6AFE4(uint64_t result)
{
  if (*(unsigned char *)(result + 8))
  {
    uint64_t v1 = sub_255C80278();
    MEMORY[0x270FA5388](v1);
    sub_255C7E1E8();
    return swift_release();
  }
  return result;
}

uint64_t sub_255A6B084()
{
  uint64_t v0 = sub_255C80278();
  MEMORY[0x270FA5388](v0);
  sub_255C7E1E8();
  return swift_release();
}

uint64_t sub_255A6B16C()
{
  return sub_255C7FE78();
}

uint64_t sub_255A6B1E0()
{
  return swift_release();
}

uint64_t sub_255A6B254(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 9) & 1) == 0)
  {
    sub_255C7FBE8();
    sub_255C7FBF8();
  }
  sub_255C7FBE8();
  sub_255C7FBE8();
  sub_255C7FBF8();
  return sub_255C7FE78();
}

uint64_t sub_255A6B340(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22290);
  uint64_t result = sub_255C7FE78();
  if (*(unsigned char *)(a2 + 8))
  {
    sub_255C7FE68();
    sub_255C7FE68();
    uint64_t result = sub_255C7FC08();
    if (result)
    {
      sub_255C7FE68();
      long double v4 = fmod(v6, 6.28318531);
      fmod(v4 + 6.28318531, 6.28318531);
      sub_255C7FE78();
      uint64_t v5 = sub_255C80278();
      MEMORY[0x270FA5388](v5);
      sub_255C7E1E8();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255A6B4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255A6A9C4(a1, a2);
}

uint64_t sub_255A6B4F4(double a1)
{
  uint64_t v3 = sub_255C803B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long double v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_255C803E8();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)uint64_t v1 = a1;
  sub_255A6C3AC();
  uint64_t v10 = (void *)sub_255C80C88();
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v12 = swift_allocObject();
  *(double *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_255A6C424;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AE4914;
  aBlock[3] = &block_descriptor_2;
  double v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_255C803D8();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_255A6C45C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
  sub_255A09998((unint64_t *)&qword_26B29FC50, &qword_26B29F390);
  sub_255C80F78();
  MEMORY[0x25A296510](0, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

CGFloat sub_255A6B7B0@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  CGFloat v7 = *v3;
  CGAffineTransformMakeTranslation(&v12, a2 * 0.5, a3 * 0.5);
  CGAffineTransformRotate(&v11, &v12, v7);
  CGAffineTransform v12 = v11;
  CGAffineTransformTranslate(&v11, &v12, -(a2 * 0.5), -(a3 * 0.5));
  CGFloat result = v11.a;
  long long v9 = *(_OWORD *)&v11.c;
  long long v10 = *(_OWORD *)&v11.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v11.a;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v10;
  *(void *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

double sub_255A6B874@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_255A6B880(double *a1)
{
  return sub_255A6B4F4(*a1);
}

uint64_t (*sub_255A6B888(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_255A6B8B4;
}

uint64_t sub_255A6B8B4(double *a1)
{
  return sub_255A6B4F4(*a1);
}

uint64_t sub_255A6B8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_255A6C358();

  return MEMORY[0x270EFFA00](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_255A6B95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_255A6C358();

  return MEMORY[0x270EFF9E8](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_255A6B9D8()
{
  return sub_255C7E238();
}

void sub_255A6BA34()
{
}

uint64_t View.rotating(duration:isAnimating:isClockwise:)(char a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = type metadata accessor for MCUINamespace();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  double v13 = (char *)&v15 - v12;
  View.mcui.getter(a3, (uint64_t)&v15 - v12);
  MCUINamespace<A>.rotating(duration:isAnimating:isClockwise:)(a1, a2, v10, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_255A6BB68()
{
  return swift_getWitnessTable();
}

unint64_t sub_255A6BBCC()
{
  unint64_t result = qword_269F22260;
  if (!qword_269F22260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22260);
  }
  return result;
}

uint64_t destroy for RotationEffectModifier()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for RotationEffectModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RotationEffectModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RotationEffectModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RotationEffectModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RotationEffectModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RotationEffectModifier()
{
  return &type metadata for RotationEffectModifier;
}

uint64_t sub_255A6BE88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A6BEA8()
{
  return sub_255A6AFE4(v0 + 16);
}

uint64_t sub_255A6BEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A6BF18(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A6BF68()
{
  return sub_255A6B084();
}

unint64_t sub_255A6BF70()
{
  unint64_t result = qword_269F222A0;
  if (!qword_269F222A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22278);
    sub_255A6BFEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F222A0);
  }
  return result;
}

unint64_t sub_255A6BFEC()
{
  unint64_t result = qword_269F222A8;
  if (!qword_269F222A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22270);
    sub_255A09998(&qword_269F222B0, &qword_269F22298);
    sub_255A6C08C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F222A8);
  }
  return result;
}

unint64_t sub_255A6C08C()
{
  unint64_t result = qword_269F222B8;
  if (!qword_269F222B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F222B8);
  }
  return result;
}

uint64_t sub_255A6C0E4()
{
  return sub_255A6B1E0();
}

unint64_t sub_255A6C0EC()
{
  unint64_t result = qword_269F222C8;
  if (!qword_269F222C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F222C8);
  }
  return result;
}

uint64_t sub_255A6C144(uint64_t a1)
{
  return sub_255A6B340(a1, v1 + 16);
}

uint64_t sub_255A6C14C()
{
  return sub_255A6A8CC(*(void *)(v0 + 16));
}

uint64_t sub_255A6C168()
{
  return sub_255A6B254(*(void *)(v0 + 16));
}

uint64_t sub_255A6C184()
{
  return sub_255A6B16C();
}

void *initializeBufferWithCopyOfBuffer for RotationEffect(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for RotationEffect()
{
  return swift_release();
}

void *assignWithCopy for RotationEffect(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for RotationEffect(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RotationEffect()
{
  return &type metadata for RotationEffect;
}

uint64_t sub_255A6C268()
{
  return sub_255A09998(&qword_269F222D8, &qword_269F222D0);
}

unint64_t sub_255A6C2A8()
{
  unint64_t result = qword_269F242E0;
  if (!qword_269F242E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F242E0);
  }
  return result;
}

unint64_t sub_255A6C300()
{
  unint64_t result = qword_269F222E0;
  if (!qword_269F222E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F222E0);
  }
  return result;
}

unint64_t sub_255A6C358()
{
  unint64_t result = qword_269F222E8;
  if (!qword_269F222E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F222E8);
  }
  return result;
}

unint64_t sub_255A6C3AC()
{
  unint64_t result = qword_26B29FC80;
  if (!qword_26B29FC80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B29FC80);
  }
  return result;
}

uint64_t sub_255A6C3EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A6C424()
{
  return sub_255C7D9F8();
}

unint64_t sub_255A6C45C()
{
  unint64_t result = qword_26B29F370;
  if (!qword_26B29F370)
  {
    sub_255C803B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29F370);
  }
  return result;
}

uint64_t sub_255A6C4B4()
{
  return sub_255A6C14C();
}

BOOL static CircularProgressView.LineStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CircularProgressView.LineStyle.hash(into:)()
{
  return sub_255C81588();
}

uint64_t CircularProgressView.LineStyle.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t CircularProgressView.init(value:trackColor:progressColor:lineWidth:lineStyle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  char v6 = *a4;
  *(_DWORD *)a5 = result;
  *(unsigned char *)(a5 + 4) = BYTE4(result) & 1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(double *)(a5 + 24) = a6;
  *(unsigned char *)(a5 + 32) = v6;
  return result;
}

uint64_t CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  char v5 = *a3;
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = BYTE4(result) & 1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = 0;
  *(double *)(a4 + 24) = a5;
  *(unsigned char *)(a4 + 32) = v5;
  return result;
}

uint64_t CircularProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v37 = sub_255C7E9F8();
  uint64_t v31 = *(void *)(v37 - 8);
  uint64_t v32 = v37 - 8;
  uint64_t v33 = v31;
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v35 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F222F0);
  uint64_t v3 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)v30 - v5;
  float v6 = *(float *)v1;
  char v7 = *(unsigned char *)(v1 + 4);
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  char v11 = *(unsigned char *)(v1 + 32);
  if (v7) {
    float v12 = 0.6;
  }
  else {
    float v12 = *(float *)v1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22258);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v13 = sub_255C7DA08();
  uint64_t v40 = 0;
  sub_255C7FE58();
  uint64_t v14 = v45;
  uint64_t v15 = v46;
  v30[1] = v46;
  uint64_t v40 = 0;
  sub_255C7FE58();
  uint64_t v16 = v45;
  uint64_t v17 = v46;
  *(float *)&uint64_t v45 = v12;
  uint64_t v46 = v9;
  uint64_t v47 = v8;
  uint64_t v48 = v10;
  char v49 = v11;
  uint64_t v50 = 0x3FF0000000000000;
  char v51 = v7;
  char v52 = 1;
  uint64_t v53 = v14;
  uint64_t v54 = v15;
  uint64_t v55 = v16;
  uint64_t v56 = v17;
  uint64_t v57 = v13;
  *(float *)&uint64_t v40 = v6;
  BYTE4(v40) = v7;
  uint64_t v41 = v9;
  uint64_t v42 = v8;
  uint64_t v43 = v10;
  char v44 = v11;
  sub_255A6CA00();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  LOBYTE(v15) = v22 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F222F8);
  sub_255A6CAD8();
  sub_255C7F878();
  sub_255A094C0(v19, v21, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22310);
  uint64_t v23 = v33;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_255C83400;
  sub_255C7E9A8();
  uint64_t v45 = v24;
  sub_255A6D32C(&qword_26B29EDB0, MEMORY[0x263F19938]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF40);
  sub_255A09998((unint64_t *)&unk_26B29EF48, &qword_26B29EF40);
  long long v25 = v35;
  uint64_t v26 = v37;
  sub_255C80F78();
  uint64_t v27 = (uint64_t)v34;
  uint64_t v28 = (uint64_t)v39;
  sub_255C7E3B8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v26);
  sub_255A6CBA8(v28);
  return sub_255A10514(v27, v38, &qword_269F222F0);
}

void sub_255A6CA00()
{
  if ((*(unsigned char *)(v0 + 4) & 1) == 0 && (~*(_DWORD *)v0 & 0x7F800000) != 0)
  {
    float v1 = roundf(*(float *)v0 * 100.0);
    if ((~LODWORD(v1) & 0x7F800000) != 0)
    {
      if (v1 > -9.2234e18)
      {
        if (v1 < 9.2234e18)
        {
          sub_255C813E8();
          sub_255C806E8();
          return;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

unint64_t sub_255A6CAD8()
{
  unint64_t result = qword_269F22300;
  if (!qword_269F22300)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F222F8);
    sub_255A6CB54();
    sub_255A6BBCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22300);
  }
  return result;
}

unint64_t sub_255A6CB54()
{
  unint64_t result = qword_269F22308;
  if (!qword_269F22308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22308);
  }
  return result;
}

uint64_t sub_255A6CBA8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F222F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_255A6CC0C()
{
  unint64_t result = qword_269F22318;
  if (!qword_269F22318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22318);
  }
  return result;
}

uint64_t sub_255A6CC60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A6CC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = *(double *)(a1 + 24);
  sub_255C7DDD8();
  uint64_t v5 = *(void *)(a1 + 8);
  sub_255A10514(a1 + 16, (uint64_t)v18, &qword_269F22328);
  sub_255A10514((uint64_t)v18, (uint64_t)&v19, &qword_269F22328);
  if (v19)
  {
    swift_retain_n();
    sub_255A12480((uint64_t)v18);
  }
  else
  {
    swift_retain_n();
    sub_255C7FC28();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22330);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22338);
  sub_255A6D588();
  sub_255A6D67C();
  sub_255C7EBD8();
  *(double *)a2 = v4 * 0.5;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v10;
  *(void *)(a2 + 88) = v11;
  *(unsigned char *)(a2 + 96) = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_255A6D71C();
  sub_255A6D75C();
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_255A6CE78@<D0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v27[0] = *(_OWORD *)v1;
  v27[1] = v3;
  char v28 = *(unsigned char *)(v1 + 32);
  uint64_t v4 = sub_255C801F8();
  uint64_t v6 = v5;
  sub_255A6CC7C((uint64_t)v27, (uint64_t)&v17);
  uint64_t v7 = v20;
  double result = v21;
  uint64_t v9 = v22;
  uint64_t v10 = v25;
  char v11 = v26;
  long long v12 = v23;
  long long v13 = v24;
  uint64_t v15 = v18;
  uint64_t v14 = v19;
  long long v16 = v17;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = v16;
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = v7;
  *(double *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = v12;
  *(_OWORD *)(a1 + 88) = v13;
  *(void *)(a1 + 104) = v10;
  *(unsigned char *)(a1 + 112) = v11;
  return result;
}

double sub_255A6CF1C@<D0>(uint64_t a1@<X8>)
{
  float v3 = *(float *)v1;
  float v4 = 1.0;
  if (*(float *)v1 <= 1.0) {
    float v4 = *(float *)v1;
  }
  double v5 = *(double *)(v1 + 16) * 0.5;
  double v6 = v4;
  sub_255C7DDD8();
  sub_255C80378();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_255C80288();
  *(double *)a1 = v5;
  *(void *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v13;
  double result = v14;
  *(double *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = 0xBFF921FB54442D18;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  *(float *)(a1 + 96) = v3;
  return result;
}

uint64_t initializeWithCopy for CircularProgressView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CircularProgressView(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CircularProgressView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CircularProgressView()
{
  return &type metadata for CircularProgressView;
}

unsigned char *storeEnumTagSinglePayload for CircularProgressView.LineStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A6D244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.LineStyle()
{
  return &type metadata for CircularProgressView.LineStyle;
}

unint64_t sub_255A6D280()
{
  unint64_t result = qword_269F22320;
  if (!qword_269F22320)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F222F0);
    sub_255A6CAD8();
    sub_255A6D32C((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22320);
  }
  return result;
}

uint64_t sub_255A6D32C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s11MediaCoreUI20CircularProgressViewVwxx_0()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CircularProgressView.CircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CircularProgressView.CircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for CircularProgressView.CircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberTooltipContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberTooltipContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.CircleView()
{
  return &type metadata for CircularProgressView.CircleView;
}

uint64_t sub_255A6D56C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A6D588()
{
  unint64_t result = qword_269F22340;
  if (!qword_269F22340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22330);
    sub_255A6D628();
    sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22340);
  }
  return result;
}

unint64_t sub_255A6D628()
{
  unint64_t result = qword_269F22348;
  if (!qword_269F22348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22348);
  }
  return result;
}

unint64_t sub_255A6D67C()
{
  unint64_t result = qword_269F22350;
  if (!qword_269F22350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22338);
    sub_255A6D628();
    sub_255A09998(&qword_269F22358, &qword_269F22360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22350);
  }
  return result;
}

uint64_t sub_255A6D71C()
{
  swift_retain();

  return swift_retain();
}

uint64_t sub_255A6D75C()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CircularProgressView.ProgressCircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CircularProgressView.ProgressCircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for CircularProgressView.ProgressCircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.ProgressCircleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.ProgressCircleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.ProgressCircleView()
{
  return &type metadata for CircularProgressView.ProgressCircleView;
}

uint64_t sub_255A6D924()
{
  return sub_255A09998(&qword_269F22368, &qword_269F22370);
}

uint64_t sub_255A6D960()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255A6D980()
{
  unint64_t result = qword_269F22378;
  if (!qword_269F22378)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22380);
    sub_255A6DA20();
    sub_255A09998(&qword_269F223A8, &qword_269F223B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22378);
  }
  return result;
}

unint64_t sub_255A6DA20()
{
  unint64_t result = qword_269F22388;
  if (!qword_269F22388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22390);
    sub_255A09998(&qword_269F22398, &qword_269F223A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22388);
  }
  return result;
}

uint64_t FittedTextVStack.init(totalLineLimit:alignment:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  if (a1 <= 1) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = a1;
  }
  uint64_t v8 = type metadata accessor for FittedTextVStack();
  *(void *)(a4 + *(int *)(v8 + 36)) = v7;
  *(void *)(a4 + *(int *)(v8 + 40)) = a2;
  return a3();
}

uint64_t type metadata accessor for FittedTextVStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FittedTextVStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D090);
  uint64_t v4 = *(void *)(a1 + 16);
  sub_255A6DE5C(&qword_26B29D080);
  uint64_t v5 = sub_255C7E1B8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v18 - v10;
  uint64_t v12 = *(void *)(v2 + *(int *)(a1 + 36));
  uint64_t v13 = *(void *)(v2 + *(int *)(a1 + 40));
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v4;
  v15[3] = v14;
  void v15[4] = v12;
  v15[5] = v13;
  void v15[6] = 0x4010000000000000;
  uint64_t v20 = v4;
  uint64_t v21 = v14;
  uint64_t v22 = v2;
  sub_255A6E6D0((uint64_t)sub_255A6DE50, (uint64_t)v19, (uint64_t)v9);
  swift_release();
  uint64_t v23 = sub_255A6DE5C(&qword_26B29D088);
  uint64_t v24 = v14;
  swift_getWitnessTable();
  sub_255A20F54(v9);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  sub_255A20F54(v11);
  return ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
}

uint64_t sub_255A6DD74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A20F54(v4);
  sub_255A20F54(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, a2);
}

uint64_t sub_255A6DE50()
{
  return sub_255A6DD74(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_255A6DE5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D090);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A6DEA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A6DEEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255A6DF8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_255A6E09C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_255A6E0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255A6E154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255A6E1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255A6E26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255A6E2F8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255A6E414);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_255A6E428(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x255A6E5DCLL);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t sub_255A6E604()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A6E6C0()
{
  return swift_deallocObject();
}

uint64_t sub_255A6E6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  unint64_t v9 = sub_255A6E750();
  return sub_255AF6EAC(a1, a2, (uint64_t)&type metadata for FittedTextVStackLayout, v7, v9, v8, a3);
}

unint64_t sub_255A6E750()
{
  unint64_t result = qword_26B29CA48;
  if (!qword_26B29CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29CA48);
  }
  return result;
}

uint64_t sub_255A6E7A4()
{
  return sub_255C7E8C8();
}

uint64_t sub_255A6E7E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  unsigned int v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_255A09540(a1, (uint64_t)&v9 - v6, &qword_26B29F230);
  sub_255A09540((uint64_t)v7, (uint64_t)v5, &qword_26B29F230);
  sub_255A27F54();
  sub_255C7E8D8();
  return sub_255A095A4((uint64_t)v7, &qword_26B29F230);
}

uint64_t sub_255A6E8D0@<X0>(unsigned char *a1@<X8>)
{
  sub_255A27FA8();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A6E920()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A6E96C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v16[1] = a1;
  uint64_t v3 = type metadata accessor for MotionPlayerView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224A8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v9 = sub_255C801F8();
  v9[1] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224B0);
  sub_255A6EBEC(v2, (uint64_t)v9 + *(int *)(v11 + 44));
  uint64_t v12 = *(void *)(v2 + *(int *)(v4 + 40));
  swift_getKeyPath();
  uint64_t v18 = v12;
  sub_255A777D0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  swift_release();
  char v17 = *(unsigned char *)(v12 + 33);
  sub_255A776C0(v2, (uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_255A77960((uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for MotionPlayerView);
  sub_255A09998(&qword_269F224B8, &qword_269F224A8);
  sub_255C7FB38();
  swift_release();
  return sub_255A095A4((uint64_t)v9, &qword_269F224A8);
}

uint64_t sub_255A6EBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = type metadata accessor for MotionPlayerView(0);
  uint64_t v45 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = v4;
  uint64_t v42 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for MotionPlayerViewRepresentable(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224C0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224C8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224D0);
  MEMORY[0x270FA5388](v44);
  uint64_t v47 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224D8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  uint64_t v49 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v43 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  sub_255C802E8();
  uint64_t v16 = v51;
  swift_getKeyPath();
  uint64_t v51 = v16;
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  swift_release();
  char v17 = *(unsigned char *)(v16 + 17);
  swift_release();
  if (v17)
  {
    uint64_t v18 = 1;
    uint64_t v19 = v50;
    uint64_t v20 = v48;
  }
  else
  {
    sub_255C802E8();
    uint64_t v21 = *(void *)(a1 + *(int *)(v3 + 28));
    *(void *)uint64_t v7 = v51;
    *((void *)v7 + 1) = v21;
    type metadata accessor for MaterialMotionContentObserver(0);
    sub_255A777D0((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
    swift_retain();
    *((void *)v7 + 2) = sub_255C7DD48();
    v7[24] = v22 & 1;
    *((void *)v7 + 4) = swift_getKeyPath();
    v7[40] = 0;
    *((void *)v7 + 6) = swift_getKeyPath();
    *((void *)v7 + 7) = 0;
    v7[64] = 0;
    uint64_t v23 = (uint64_t *)&v7[v5[9]];
    *uint64_t v23 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = &v7[v5[10]];
    *(void *)uint64_t v24 = swift_getKeyPath();
    v24[8] = 0;
    uint64_t v25 = &v7[v5[11]];
    *(void *)uint64_t v25 = swift_getKeyPath();
    v25[8] = 0;
    char v26 = &v7[v5[12]];
    *(void *)char v26 = swift_getKeyPath();
    v26[8] = 0;
    sub_255ABAE0C((uint64_t)&v10[*(int *)(v8 + 52)]);
    sub_255A77960((uint64_t)v7, (uint64_t)v10, type metadata accessor for MotionPlayerViewRepresentable);
    uint64_t v27 = v42;
    sub_255A776C0(a1, v42);
    unint64_t v28 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v29 = swift_allocObject();
    sub_255A77960(v27, v29 + v28, type metadata accessor for MotionPlayerView);
    uint64_t v30 = v40;
    sub_255A09540((uint64_t)v10, v40, &qword_269F224C0);
    uint64_t v31 = (uint64_t (**)())(v30 + *(int *)(v41 + 36));
    *uint64_t v31 = sub_255A779CC;
    v31[1] = (uint64_t (*)())v29;
    void v31[2] = 0;
    _OWORD v31[3] = 0;
    sub_255A095A4((uint64_t)v10, &qword_269F224C0);
    sub_255A776C0(a1, v27);
    uint64_t v32 = swift_allocObject();
    sub_255A77960(v27, v32 + v28, type metadata accessor for MotionPlayerView);
    uint64_t v33 = v47;
    sub_255A09540(v30, v47, &qword_269F224C8);
    uint64_t v34 = (void *)(v33 + *(int *)(v44 + 36));
    *uint64_t v34 = 0;
    v34[1] = 0;
    v34[2] = sub_255A779E8;
    v34[3] = v32;
    sub_255A095A4(v30, &qword_269F224C8);
    uint64_t v35 = v43;
    sub_255A09540(v33, v43, &qword_269F224D0);
    uint64_t v36 = v48;
    uint64_t v37 = v35 + *(int *)(v48 + 36);
    *(void *)uint64_t v37 = sub_255B3F084;
    *(void *)(v37 + 8) = 0;
    *(unsigned char *)(v37 + 16) = 0;
    sub_255A095A4(v33, &qword_269F224D0);
    uint64_t v38 = v50;
    sub_255A77A74(v35, v50);
    uint64_t v18 = 0;
    uint64_t v19 = v38;
    uint64_t v20 = v36;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v19, v18, 1, v20);
}

uint64_t sub_255A6F244(uint64_t a1)
{
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for MotionPlayerView(0) + 24);
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  char v10 = *(unsigned char *)(v7 + 16);
  sub_255A7663C(*(void *)v7, v9, v10);
  sub_255ABAE40(v8, v9, v10, v16);
  sub_255A767C8(v8, v9, v10);
  uint64_t v12 = v16[0];
  uint64_t v11 = v16[1];
  os_log_type_t v13 = sub_255C80BD8();
  v15[0] = v12;
  v15[1] = v11;
  sub_255B54FC4(v13, 0x726165707061, 0xE600000000000000, (uint64_t)v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  sub_255C802E8();
  *(unsigned char *)(v16[0] + 128) = 1;
  return swift_release();
}

uint64_t sub_255A6F414(uint64_t a1)
{
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for MotionPlayerView(0) + 24);
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  char v10 = *(unsigned char *)(v7 + 16);
  sub_255A7663C(*(void *)v7, v9, v10);
  sub_255ABAE40(v8, v9, v10, v19);
  sub_255A767C8(v8, v9, v10);
  uint64_t v12 = v19[0];
  uint64_t v11 = v19[1];
  os_log_type_t v13 = sub_255C80BD8();
  v18[0] = v12;
  v18[1] = v11;
  sub_255B54FC4(v13, 0x6165707061736964, 0xE900000000000072, (uint64_t)v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  sub_255C802E8();
  uint64_t v14 = v19[0];
  char v15 = *(unsigned char *)(v19[0] + 128);
  *(unsigned char *)(v19[0] + 128) = 0;
  if (v15)
  {
    sub_255A75740(0, 0, 0);
    int v16 = *(unsigned __int8 *)(v14 + 104);
    *(unsigned char *)(v14 + 104) = 0;
    if (v16 == 1)
    {
      LOBYTE(v19[0]) = 0;
      sub_255C7D9F8();
    }
  }
  return swift_release();
}

uint64_t sub_255A6F628(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t result = type metadata accessor for MotionPlayerView(0);
  uint64_t v6 = *(void *)(a3 + *(int *)(result + 28));
  if (v6)
  {
    int v7 = *a2;
    swift_getKeyPath();
    sub_255A777D0(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
    sub_255C7D718();
    uint64_t result = swift_release();
    if (*(unsigned __int8 *)(v6 + 16) != v7)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_255C7D708();
      return swift_release();
    }
  }
  return result;
}

char *sub_255A6F78C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 64);
  sub_255A7663C(v7, v8, v9);
  sub_255ABAE40(v7, v8, v9, (uint64_t *)&v43);
  sub_255A767C8(v7, v8, v9);
  uint64_t v10 = *((void *)&v43 + 1);
  uint64_t v11 = v43;
  os_log_type_t v12 = sub_255C80C08();
  v42[0] = v11;
  v42[1] = v10;
  sub_255B54FC4(v12, 0xD000000000000028, 0x8000000255C9BCC0, (uint64_t)v42);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v13 = *(void *)(v1 + 32);
  char v14 = *(unsigned char *)(v1 + 40);
  sub_255A0877C(v13, v14);
  LOBYTE(v10) = sub_255ABA6A4(v13, v14);
  sub_255A087D0(v13, v14);
  if (v10)
  {
    char v15 = (char *)objc_allocWithZone((Class)type metadata accessor for PlayerView());
    swift_weakInit();
    int v16 = &v15[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext];
    *(void *)int v16 = 0;
    *((void *)v16 + 1) = 0;
    swift_unknownObjectWeakInit();
    swift_retain();
    char v17 = v15;
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_255C812B8()) {
      unint64_t v18 = sub_255AC746C(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v18 = MEMORY[0x263F8EE88];
    }
    *(void *)&v17[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions] = v18;
    swift_weakAssign();

    uint64_t v19 = (objc_class *)type metadata accessor for GeometryTrackingView();
    v40.receiver = v17;
    v40.super_class = v19;
    id v20 = objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    swift_release();
    uint64_t v21 = *(void *)(v1 + 48);
    uint64_t v22 = *(void *)(v1 + 56);
    char v23 = *(unsigned char *)(v1 + 64);
    uint64_t v24 = (char *)v20;
    sub_255A7663C(v21, v22, v23);
    sub_255ABAE40(v21, v22, v23, (uint64_t *)&v43);
    sub_255A767C8(v21, v22, v23);
    *(_OWORD *)&v24[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext] = v43;

    swift_bridgeObjectRelease();
    uint64_t v25 = self;
    char v26 = v24;
    id v27 = objc_msgSend(v25, sel_clearColor);
    objc_msgSend(v26, sel_setBackgroundColor_, v27);
  }
  else
  {
    unint64_t v28 = (objc_class *)type metadata accessor for GeometryTrackingView();
    uint64_t v29 = (char *)objc_allocWithZone(v28);
    swift_weakInit();
    uint64_t v30 = &v29[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext];
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v31 = v29;
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_255C812B8()) {
      unint64_t v32 = sub_255AC746C(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v32 = MEMORY[0x263F8EE88];
    }
    *(void *)&v31[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions] = v32;
    swift_weakAssign();

    v41.receiver = v31;
    v41.super_class = v28;
    uint64_t v33 = (char *)objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    swift_release();
    uint64_t v34 = *(void *)(v1 + 48);
    uint64_t v35 = *(void *)(v1 + 56);
    char v36 = *(unsigned char *)(v1 + 64);
    sub_255A7663C(v34, v35, v36);
    sub_255ABAE40(v34, v35, v36, (uint64_t *)&v43);
    sub_255A767C8(v34, v35, v36);
    *(_OWORD *)&v33[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext] = v43;
    swift_bridgeObjectRelease();
    uint64_t v37 = self;
    char v26 = v33;
    id v38 = objc_msgSend(v37, sel_clearColor);
    objc_msgSend(v26, sel_setBackgroundColor_, v38);

    objc_msgSend(v26, sel_setUserInteractionEnabled_, 0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22610);
  sub_255C7EFB8();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v26;
}

void sub_255A6FCDC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v79 = a1;
  uint64_t v80 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22558);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unsigned int v78 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int v77 = (char *)&v73 - v7;
  uint64_t v8 = sub_255C7E8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unsigned int v73 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unsigned int v74 = (char *)&v73 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int v76 = (char *)&v73 - v15;
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)&v73 - v16;
  uint64_t v18 = sub_255C7D898();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer(v18, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
  uint64_t v23 = *(void *)(v3 + 48);
  uint64_t v24 = *(void *)(v3 + 56);
  char v25 = *(unsigned char *)(v3 + 64);
  sub_255A7663C(v23, v24, v25);
  sub_255ABAE40(v23, v24, v25, (uint64_t *)&v82);
  sub_255A767C8(v23, v24, v25);
  long long v26 = v82;
  os_log_type_t v27 = sub_255C80BD8();
  v81[0] = v26;
  sub_255B54FC4(v27, 0xD00000000000002ALL, 0x8000000255C9BC60, (uint64_t)v81);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22610);
  sub_255C7EFB8();
  uint64_t v29 = v82;
  sub_255C7EFC8();
  sub_255C7E698();
  double v31 = v30;
  unint64_t v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32(v17, v8);
  sub_255A72F98(v31);
  uint64_t v33 = *(void *)(v3 + 16);
  char v34 = *(unsigned char *)(v3 + 24);
  j__swift_retain();
  uint64_t v35 = sub_255ABB07C(v33, v34);
  j__swift_release();
  sub_255A77D58(v35);
  swift_release();
  sub_255C7EFC8();
  sub_255A79D44();
  sub_255C7E8C8();
  v32(v17, v8);
  v81[0] = v82;
  sub_255A743CC(v81);
  char v36 = v76;
  sub_255C7EFC8();
  sub_255A79D98();
  sub_255C7E8C8();
  v32(v36, v8);
  int v37 = v82;
  int v38 = *(unsigned __int8 *)(v29
                           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy);
  *(unsigned char *)(v29
           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy) = v82;
  uint64_t v39 = (char *)(v9 + 8);
  if (v37 == 2)
  {
    objc_super v40 = (char *)v8;
    if (v38 != 2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v37 == 3)
    {
      objc_super v40 = (char *)v8;
      if (v38 == 3) {
        goto LABEL_12;
      }
LABEL_11:
      sub_255A74294();
      goto LABEL_12;
    }
    objc_super v40 = (char *)v8;
    if ((v38 & 0xFE) == 2 || ((v37 & 1) == 0) == (v38 & 1)) {
      goto LABEL_11;
    }
  }
LABEL_12:
  uint64_t v41 = *(void *)(v29
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator);
  uint64_t v42 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  unint64_t v75 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  swift_retain();
  sub_255C7EFC8();
  sub_255A27FFC();
  sub_255C7E8C8();
  char v43 = v82;
  v32(v17, (uint64_t)v40);
  *(unsigned char *)(v41 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext) = v43;
  swift_release();
  uint64_t v44 = *(void *)(v29 + v42);
  swift_retain();
  sub_255C7EFC8();
  sub_255A28050();
  sub_255C7E8C8();
  char v45 = v82;
  v32(v17, (uint64_t)v40);
  *(unsigned char *)(v44 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_shouldResetOnSizeChange) = v45;
  swift_release();
  sub_255C7EFC8();
  int v76 = (char *)v28;
  uint64_t v46 = (void (*)(char *, char *))v32;
  uint64_t v47 = (uint64_t)v77;
  sub_255C7E648();
  v46(v17, v40);
  uint64_t v48 = sub_255C7DC38();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  uint64_t v49 = v29
      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase;
  swift_beginAccess();
  uint64_t v50 = (uint64_t)v78;
  sub_255A09540(v49, (uint64_t)v78, &qword_269F22558);
  swift_beginAccess();
  sub_255A79DEC(v47, v49);
  swift_endAccess();
  sub_255A73024(v50);
  sub_255A095A4(v47, &qword_269F22558);
  sub_255A095A4(v50, &qword_269F22558);
  sub_255C7EFC8();
  sub_255A79E54();
  sub_255C7E8C8();
  v46(v17, v40);
  *(unsigned char *)(v29
           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_cacheDownloadPolicy) = v81[0];
  sub_255C7EFC8();
  sub_255A79EA8();
  sub_255C7E8C8();
  long long v51 = v81[0];
  v46(v17, v40);
  *(_OWORD *)(*(void *)(v29 + v75) + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID) = v51;
  swift_bridgeObjectRelease();
  type metadata accessor for PlayerView();
  id v52 = v79;
  uint64_t v53 = swift_dynamicCastClass();
  if (!v53)
  {
LABEL_21:
    swift_release();
    return;
  }
  uint64_t v54 = v39;
  uint64_t v55 = (void *)v53;
  id v79 = v52;
  uint64_t v56 = v74;
  sub_255C7EFC8();
  unint64_t v75 = sub_255A79EFC();
  sub_255C7E8C8();
  unsigned int v74 = v40;
  int v77 = v54;
  v46(v56, v40);
  uint64_t v57 = (void *)*MEMORY[0x263EF9C70];
  uint64_t v58 = (void *)*MEMORY[0x263EF9C78];
  if (LOBYTE(v81[0])) {
    long long v59 = (void *)*MEMORY[0x263EF9C78];
  }
  else {
    long long v59 = (void *)*MEMORY[0x263EF9C70];
  }
  unint64_t v60 = v59;
  id v61 = objc_msgSend(v55, sel_layer);
  self;
  id v62 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_videoGravity);

  unsigned int v78 = v60;
  uint64_t v63 = sub_255C80628();
  uint64_t v65 = v64;
  if (v63 == sub_255C80628() && v65 == v66)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v67 = sub_255C81428();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v67)
  {

    goto LABEL_21;
  }
  unint64_t v68 = self;
  objc_msgSend(v68, sel_begin);
  objc_msgSend(v68, sel_setDisableActions_, 1);
  unint64_t v69 = v73;
  sub_255C7EFC8();
  sub_255C7E8C8();
  v46(v69, v74);
  if (LOBYTE(v81[0])) {
    uint64_t v70 = v58;
  }
  else {
    uint64_t v70 = v57;
  }
  id v71 = v70;
  id v72 = objc_msgSend(v55, sel_layer);
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setVideoGravity_, v71);

  objc_msgSend(v68, sel_commit);
  swift_release();
}

unsigned char *sub_255A7070C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for MotionPlayerViewRepresentable(0);
  sub_255ABAE0C((uint64_t)v4);
  uint64_t v6 = sub_255C7D5C8();
  uint64_t result = (unsigned char *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v0 + v5[10];
    uint64_t v9 = *(void *)v8;
    char v10 = *(unsigned char *)(v8 + 8);
    sub_255A0877C(*(void *)v8, v10);
    sub_255ABB0AC(v9, v10, &v30);
    sub_255A087D0(v9, v10);
    uint64_t v11 = v1 + v5[11];
    uint64_t v12 = *(void *)v11;
    char v13 = *(unsigned char *)(v11 + 8);
    sub_255A0877C(*(void *)v11, v13);
    sub_255ABB0F0(v12, v13, &v29);
    sub_255A087D0(v12, v13);
    char v28 = v29;
    uint64_t v14 = *(void *)v1;
    uint64_t v15 = *(void *)(v1 + 8);
    uint64_t v16 = v1 + v5[12];
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    swift_retain();
    swift_retain();
    sub_255A0877C(v17, v18);
    double v19 = sub_255ABB36C(v17, v18);
    sub_255A087D0(v17, v18);
    uint64_t v20 = *(void *)(v1 + 16);
    char v21 = *(unsigned char *)(v1 + 24);
    j__swift_retain();
    uint64_t v22 = sub_255ABB07C(v20, v21);
    j__swift_release();
    uint64_t v23 = *(void *)(v1 + 48);
    uint64_t v24 = *(void *)(v1 + 56);
    char v25 = *(unsigned char *)(v1 + 64);
    sub_255A7663C(v23, v24, v25);
    sub_255ABAE40(v23, v24, v25, v27);
    sub_255A767C8(v23, v24, v25);
    long long v26 = *(_OWORD *)v27;
    type metadata accessor for MotionPlayerViewRepresentable.Coordinator(0);
    swift_allocObject();
    return sub_255A70DA4((uint64_t)v4, &v30, &v28, v14, v15, v22, (uint64_t *)&v26, v19);
  }
  return result;
}

uint64_t sub_255A70978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  return MEMORY[0x270FA2498](sub_255A709A0, 0, 0);
}

uint64_t sub_255A709A0()
{
  if (qword_269F202D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_269F33430;
  return MEMORY[0x270FA2498](sub_255A70A34, v0, 0);
}

uint64_t sub_255A70A34()
{
  if (qword_269F202E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_255A70AC4, 0, 0);
}

uint64_t sub_255A70AC4()
{
  return MEMORY[0x270FA2498](sub_255A70AE4, qword_269F33430, 0);
}

uint64_t sub_255A70AE4()
{
  *(void *)(v0 + 72) = qword_269F33438;
  return MEMORY[0x270FA2498](sub_255A70B0C, 0, 0);
}

uint64_t sub_255A70B0C()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  return MEMORY[0x270FA2498](sub_255A70B34, qword_269F33430, 0);
}

uint64_t sub_255A70B34()
{
  sub_255C5A0C0(*(char **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), (unint64_t *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255A70BAC(uint64_t a1, uint64_t *a2)
{
  return sub_255A78574(*a2);
}

unsigned char *sub_255A70BB4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255A7070C();
  *a1 = result;
  return result;
}

uint64_t sub_255A70BE0()
{
  return sub_255C7EB18();
}

uint64_t sub_255A70C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255A777D0(qword_269F22630, (void (*)(uint64_t))type metadata accessor for MotionPlayerViewRepresentable);

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_255A70CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255A777D0(qword_269F22630, (void (*)(uint64_t))type metadata accessor for MotionPlayerViewRepresentable);

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_255A70D4C()
{
}

unsigned char *sub_255A70DA4(uint64_t a1, char *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, double a8)
{
  uint64_t v9 = v8;
  uint64_t v88 = a5;
  uint64_t v89 = a4;
  uint64_t v80 = sub_255C7D898();
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  int v76 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22590);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  id v71 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22598);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  unint64_t v68 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v19 - 8);
  char v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F225A0);
  char v67 = *(char **)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v24 = *a2;
  char v25 = *a3;
  unint64_t v26 = a7[1];
  uint64_t v86 = *a7;
  unint64_t v87 = v26;
  uint64_t v27 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  type metadata accessor for LooperConfigurator(0);
  swift_allocObject();
  *(void *)&v9[v27] = sub_255ACF59C();
  swift_unknownObjectWeakInit();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_255C812B8()) {
    unint64_t v28 = sub_255AC746C(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v28 = MEMORY[0x263F8EE88];
  }
  *(void *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_subscriptions] = v28;
  *(void *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver] = 0;
  char v29 = &v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase];
  uint64_t v30 = sub_255C7DC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand] = 4;
  double v31 = &v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url];
  uint64_t v32 = sub_255C7D5C8();
  uint64_t v72 = *(void *)(v32 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v72 + 16);
  uint64_t v79 = a1;
  uint64_t v73 = v32;
  v33(v31, a1);
  v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy] = v24;
  v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_cacheDownloadPolicy] = v25;
  uint64_t v34 = v88;
  *(void *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState] = v89;
  *(void *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_stateObserver] = v34;
  *(double *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale] = a8;
  *(void *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver] = a6;
  swift_retain();
  swift_retain();
  uint64_t v77 = a6;
  swift_retain();
  swift_release();
  uint64_t v35 = (uint64_t *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext];
  uint64_t v37 = v86;
  unint64_t v36 = v87;
  *uint64_t v35 = v86;
  v35[1] = v36;
  uint64_t v85 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  int v38 = (uint64_t *)(*(void *)&v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator]
                  + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
  *int v38 = v37;
  v38[1] = v36;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  if (v34)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v61 - 2) = v34;
    *((unsigned char *)&v61 - 8) = 0;
    uint64_t v93 = v34;
    sub_255A777D0(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
    swift_retain();
    sub_255C7D708();
    swift_release();
    swift_release();
  }
  uint64_t v93 = sub_255A755A0();
  uint64_t v90 = sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  id v95 = (id)sub_255C80C88();
  uint64_t v40 = sub_255C80C78();
  uint64_t v41 = *(void *)(v40 - 8);
  unsigned int v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v81 = v40;
  uint64_t v82 = v41 + 56;
  uint64_t v42 = (uint64_t)v21;
  v92(v21, 1, 1, v40);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F225A8);
  uint64_t v84 = MEMORY[0x263EFDCF8];
  uint64_t v64 = sub_255A09998(&qword_269F225B0, &qword_269F225A8);
  unint64_t v91 = sub_255A42F64();
  char v43 = v23;
  sub_255C7DB68();
  sub_255A095A4(v42, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  uint64_t v83 = MEMORY[0x263EFDCB0];
  uint64_t v63 = sub_255A09998(&qword_269F225B8, &qword_269F225A0);
  uint64_t v44 = v66;
  sub_255C7DB98();
  swift_release();
  id v62 = (void (*)(char *, uint64_t))*((void *)v67 + 1);
  v62(v43, v44);
  char v45 = &v9[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_subscriptions];
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  uint64_t v93 = sub_255A758AC();
  id v95 = (id)sub_255C80C88();
  v92((char *)v42, 1, 1, v40);
  sub_255C7DB68();
  sub_255A095A4(v42, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_255C7DB98();
  swift_release();
  v62(v43, v44);
  char v67 = v45;
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  uint64_t v93 = sub_255AD04B0();
  id v95 = (id)sub_255C80C88();
  uint64_t v46 = v81;
  uint64_t v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v92;
  v92((char *)v42, 1, 1, v81);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F225C0);
  sub_255A09998(&qword_269F225C8, &qword_269F225C0);
  uint64_t v48 = v68;
  sub_255C7DB68();
  sub_255A095A4(v42, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_269F225D0, &qword_269F22598);
  uint64_t v49 = v70;
  sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v49);
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  uint64_t v93 = sub_255A75960();
  id v95 = (id)sub_255C80C88();
  v47(v42, 1, 1, v46);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F225D8);
  uint64_t v84 = sub_255A09998(&qword_269F225E0, &qword_269F225D8);
  uint64_t v50 = v71;
  sub_255C7DB68();
  sub_255A095A4(v42, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_269F225E8, &qword_269F22590);
  uint64_t v51 = v75;
  sub_255C7DB98();
  swift_release();
  id v52 = *(void (**)(char *, uint64_t))(v74 + 8);
  v52(v50, v51);
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  uint64_t v93 = sub_255AD0954();
  id v95 = (id)sub_255C80C88();
  v92((char *)v42, 1, 1, v81);
  sub_255C7DB68();
  sub_255A095A4(v42, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_255C7DB98();
  swift_release();
  v52(v50, v51);
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v53 = v80;
  uint64_t v54 = __swift_project_value_buffer(v80, (uint64_t)qword_26B2AA500);
  uint64_t v55 = v78;
  uint64_t v56 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v76, v54, v53);
  uint64_t v93 = 0;
  unint64_t v94 = 0xE000000000000000;
  sub_255C810E8();
  sub_255C806E8();
  id v95 = v9;
  sub_255C81228();
  sub_255C806E8();
  uint64_t v57 = v93;
  unint64_t v58 = v94;
  os_log_type_t v59 = sub_255C80BD8();
  uint64_t v93 = v86;
  unint64_t v94 = v87;
  sub_255B54FC4(v59, v57, v58, (uint64_t)&v93);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v79, v73);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v53);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_255A71C7C()
{
  uint64_t v0 = sub_255C7D898();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA500);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    unint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD000000000000021;
    unint64_t v19 = 0x8000000255C9BC30;
    v17[1] = 540702524;
    v17[2] = 0xE400000000000000;
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v7 = v18;
    unint64_t v8 = v19;
    unint64_t v10 = *(void *)(v5
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    unint64_t v9 = *(void *)(v5
                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                   + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v11 = sub_255C80BD8();
    unint64_t v18 = v10;
    unint64_t v19 = v9;
    sub_255B54FC4(v11, v7, v8, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v12 = *(void *)(v5
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    if ((*(unsigned char *)(v12 + 40) & 1) == 0)
    {
      double v14 = *(double *)(v12 + 24);
      double v13 = *(double *)(v12 + 32);
      if (v14 != 0.0 || v13 != 0.0)
      {
        double v15 = *(double *)(v5
                        + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale);
        uint64_t v16 = *(void *)(v5
                        + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
            + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
        *(double *)uint64_t v16 = v14 * v15;
        *(double *)(v16 + 8) = v13 * v15;
        *(unsigned char *)(v16 + 16) = 0;
        sub_255AD6318();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255A71F4C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy) == 2)
    {
      sub_255A74294();
      sub_255A73AA8();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255A71FBC(void **a1)
{
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    unint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v37 = 0xD000000000000023;
    unint64_t v38 = 0x8000000255C9BC00;
    v36[2] = v6;
    id v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F225F0);
    sub_255C80658();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v11 = v37;
    unint64_t v12 = v38;
    unint64_t v14 = *(void *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    unint64_t v13 = *(void *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                    + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v15 = sub_255C80BD8();
    unint64_t v37 = v14;
    unint64_t v38 = v13;
    sub_255B54FC4(v15, v11, v12, (uint64_t)&v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v6)
    {
      unint64_t v16 = *(void *)(v8
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver);
      if (v16)
      {
        swift_getKeyPath();
        unint64_t v37 = v16;
        sub_255A777D0((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
        id v17 = v10;
        swift_retain();
        sub_255C7D718();
        swift_release();
        unint64_t v18 = *(void **)(v16 + 16);
        if (v18)
        {
          sub_255A43740(0, &qword_269F225F8);
          id v19 = v17;
          id v20 = v18;
          char v21 = sub_255C80DD8();

          if (v21)
          {

            swift_release();
            goto LABEL_11;
          }
        }
        else
        {
        }
        uint64_t KeyPath = swift_getKeyPath();
        MEMORY[0x270FA5388](KeyPath);
        v36[-2] = v16;
        v36[-1] = v6;
        unint64_t v37 = v16;
        id v23 = v17;
        sub_255C7D708();
        swift_release();
        swift_release();
      }
    }
LABEL_11:
    uint64_t v24 = MEMORY[0x25A297D40](v8+ OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_view);
    if (!v24)
    {
LABEL_22:
      sub_255A74294();
      return swift_release();
    }
    char v25 = (void *)v24;
    type metadata accessor for PlayerView();
    unint64_t v26 = (void *)swift_dynamicCastClass();
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = objc_msgSend(v26, sel_layer);
      self;
      id v29 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_player);

      if (v29)
      {
        if (v6)
        {
          sub_255A43740(0, &qword_269F225F8);
          id v30 = v10;
          id v31 = v29;
          char v32 = sub_255C80DD8();

          if (v32) {
            goto LABEL_21;
          }
        }
        else
        {
        }
        goto LABEL_20;
      }
      if (v6)
      {
LABEL_20:
        id v34 = v10;
        id v35 = objc_msgSend(v27, sel_layer);
        self;
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setPlayer_, v34);

        char v25 = v34;
        goto LABEL_21;
      }
      id v33 = v10;
    }
LABEL_21:

    goto LABEL_22;
  }
  return result;
}

uint64_t sub_255A724E4()
{
  uint64_t v0 = sub_255C7D898();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA500);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000027;
    unint64_t v14 = 0x8000000255C9BBD0;
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v7 = v13;
    unint64_t v8 = v14;
    unint64_t v10 = *(void *)(v5
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    unint64_t v9 = *(void *)(v5
                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                   + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v11 = sub_255C80BD8();
    unint64_t v13 = v10;
    unint64_t v14 = v9;
    sub_255B54FC4(v11, v7, v8, (uint64_t)&v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_255A74294();
    sub_255A73AA8();
    return swift_release();
  }
  return result;
}

uint64_t sub_255A72710(char *a1)
{
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    unint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xD000000000000022;
    unint64_t v21 = 0x8000000255C9BBA0;
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v10 = v20;
    unint64_t v11 = v21;
    unint64_t v13 = *(void *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    unint64_t v12 = *(void *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                    + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v14 = sub_255C80BD8();
    unint64_t v20 = v13;
    unint64_t v21 = v12;
    sub_255B54FC4(v14, v10, v11, (uint64_t)&v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v15 = *(void *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v19 - 2) = v15;
    *((unsigned char *)&v19 - 8) = v6;
    unint64_t v20 = v15;
    sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
    swift_retain();
    sub_255C7D708();
    swift_release();
    swift_release();
    unint64_t v17 = *(void *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_stateObserver);
    if (v17)
    {
      uint64_t v18 = swift_getKeyPath();
      MEMORY[0x270FA5388](v18);
      *(&v19 - 2) = v17;
      *((unsigned char *)&v19 - 8) = v6;
      unint64_t v20 = v17;
      sub_255A777D0(&qword_269F212C8, (void (*)(uint64_t))type metadata accessor for MotionViewStateObserver);
      swift_retain();
      sub_255C7D708();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255A72B08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_255C810E8();
  sub_255C806E8();
  v15[1] = v0;
  sub_255C81228();
  sub_255C806E8();
  uint64_t v7 = v16;
  unint64_t v8 = v17;
  uint64_t v10 = *(void *)(v1
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  unint64_t v9 = *(void *)(v1
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                 + 8);
  swift_bridgeObjectRetain();
  os_log_type_t v11 = sub_255C80BD8();
  uint64_t v16 = v10;
  unint64_t v17 = v9;
  sub_255B54FC4(v11, v7, v8, (uint64_t)&v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
  uint64_t v13 = sub_255C7D5C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  sub_255A095A4(v1+ OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase, &qword_269F22558);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_255A72DBC()
{
  sub_255A72B08();

  return swift_deallocClassInstance();
}

uint64_t sub_255A72E10()
{
  return type metadata accessor for MotionPlayerViewRepresentable.Coordinator(0);
}

uint64_t type metadata accessor for MotionPlayerViewRepresentable.Coordinator(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22420);
}

void sub_255A72E38()
{
  sub_255C7D5C8();
  if (v0 <= 0x3F)
  {
    sub_255A77464(319, &qword_269F22430, MEMORY[0x263F18460], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_255A72F98(double a1)
{
  double v2 = *(double *)(v1
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale);
  *(double *)(v1
            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale) = a1;
  if (v2 != a1)
  {
    uint64_t v3 = *(void *)(v1
                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    if ((*(unsigned char *)(v3 + 40) & 1) == 0)
    {
      double v5 = *(double *)(v3 + 24);
      double v4 = *(double *)(v3 + 32);
      if (v5 != 0.0 || v4 != 0.0)
      {
        uint64_t v6 = *(void *)(v1
                       + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
           + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
        *(double *)uint64_t v6 = v5 * a1;
        *(double *)(v6 + 8) = v4 * a1;
        *(unsigned char *)(v6 + 16) = 0;
        return sub_255AD6318();
      }
    }
  }
  return result;
}

uint64_t sub_255A73024(uint64_t a1)
{
  unint64_t v58 = (char *)a1;
  uint64_t v2 = sub_255C7D898();
  uint64_t v52 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v51 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22628);
  MEMORY[0x270FA5388](v57);
  double v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22558);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  os_log_type_t v11 = (char *)&v45 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = sub_255C7DC38();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v56 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)&v45 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v45 - v20;
  uint64_t v54 = v1;
  uint64_t v22 = v1
      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase;
  swift_beginAccess();
  sub_255A09540(v22, (uint64_t)v13, &qword_269F22558);
  id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v23(v13, 1, v14) == 1) {
    return sub_255A095A4((uint64_t)v13, &qword_269F22558);
  }
  uint64_t v45 = v2;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v46(v21, v13, v14);
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v49 = v21;
  uint64_t v47 = v15 + 16;
  v48(v11, v21, v14);
  uint64_t v50 = v15;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  uint64_t v25 = (uint64_t)&v5[*(int *)(v57 + 48)];
  sub_255A09540((uint64_t)v11, (uint64_t)v5, &qword_269F22558);
  sub_255A09540((uint64_t)v58, v25, &qword_269F22558);
  if (v23(v5, 1, v14) == 1)
  {
    sub_255A095A4((uint64_t)v11, &qword_269F22558);
    unsigned int v26 = v23((char *)v25, 1, v14);
    uint64_t v27 = v50;
    if (v26 == 1)
    {
      sub_255A095A4((uint64_t)v5, &qword_269F22558);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v49, v14);
    }
    goto LABEL_8;
  }
  uint64_t v28 = v55;
  sub_255A09540((uint64_t)v5, v55, &qword_269F22558);
  if (v23((char *)v25, 1, v14) == 1)
  {
    sub_255A095A4((uint64_t)v11, &qword_269F22558);
    uint64_t v27 = v50;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v28, v14);
LABEL_8:
    sub_255A095A4((uint64_t)v5, &qword_269F22628);
    goto LABEL_9;
  }
  uint64_t v42 = v53;
  v46(v53, (char *)v25, v14);
  sub_255A777D0(&qword_26B29B540, MEMORY[0x263F18460]);
  LODWORD(v57) = sub_255C80578();
  uint64_t v27 = v50;
  uint64_t v43 = v28;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v50 + 8);
  v44(v42, v14);
  sub_255A095A4((uint64_t)v11, &qword_269F22558);
  v44((char *)v43, v14);
  sub_255A095A4((uint64_t)v5, &qword_269F22558);
  if (v57) {
    return ((uint64_t (*)(char *, uint64_t))v44)(v49, v14);
  }
LABEL_9:
  id v29 = v56;
  id v30 = v49;
  v48(v56, v49, v14);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v29, v14);
  if (v31 == *MEMORY[0x263F18448] || v31 == *MEMORY[0x263F18458])
  {
    if (v23(v58, 1, v14) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v30, v14);
    }
LABEL_16:
    sub_255A74294();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v30, v14);
  }
  if (v31 == *MEMORY[0x263F18450]) {
    goto LABEL_16;
  }
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v32 = v45;
  uint64_t v33 = __swift_project_value_buffer(v45, (uint64_t)qword_26B2AA500);
  id v35 = v51;
  uint64_t v34 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v33, v32);
  unint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_255C810E8();
  swift_bridgeObjectRelease();
  unint64_t v59 = 0xD00000000000002ALL;
  unint64_t v60 = 0x8000000255C9BC90;
  v48(v53, v30, v14);
  sub_255C80658();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  uint64_t v36 = v59;
  unint64_t v37 = v60;
  unint64_t v38 = *(void *)(v54
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  unint64_t v39 = *(void *)(v54
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                  + 8);
  swift_bridgeObjectRetain();
  os_log_type_t v40 = sub_255C80BF8();
  unint64_t v59 = v38;
  unint64_t v60 = v39;
  sub_255B54FC4(v40, v36, v37, (uint64_t)&v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v32);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v50 + 8);
  v41(v30, v14);
  return ((uint64_t (*)(char *, uint64_t))v41)(v29, v14);
}

uint64_t sub_255A737A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand;
  int v10 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand);
  if (v10 == 4)
  {
    if (a1 == 4) {
      return result;
    }
  }
  else if (a1 != 4 && v10 == a1)
  {
LABEL_9:
    uint64_t v17 = *(void *)(v2
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    if ((*(unsigned char *)(v17 + 40) & 1) == 0)
    {
      double v19 = *(double *)(v17 + 24);
      double v18 = *(double *)(v17 + 32);
      uint64_t v20 = *(void *)(v2
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator);
      uint64_t v21 = v2
          + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
      uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
      uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID + 8);
      unint64_t v24 = *(void *)(v2
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
      unint64_t v25 = *(void *)(v2
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                      + 8);
      unint64_t v28 = v24;
      unint64_t v29 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_255AD58A8(a1, v21, v22, v23, &v28, v19, v18);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    return result;
  }
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA500);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v11, v4);
  unint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_255C810E8();
  swift_bridgeObjectRelease();
  unint64_t v28 = 0xD00000000000001ELL;
  unint64_t v29 = 0x8000000255C9BAD0;
  char v27 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22560);
  sub_255C80658();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  char v27 = *(unsigned char *)(v1 + v9);
  sub_255C80658();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  uint64_t v12 = v28;
  unint64_t v13 = v29;
  unint64_t v15 = *(void *)(v2
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  unint64_t v14 = *(void *)(v2
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                  + 8);
  swift_bridgeObjectRetain();
  os_log_type_t v16 = sub_255C80BD8();
  unint64_t v28 = v15;
  unint64_t v29 = v14;
  sub_255B54FC4(v16, v12, v13, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  a1 = *(unsigned __int8 *)(v2 + v9);
  if (a1 != 4) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_255A73AA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C7D898();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_cacheDownloadPolicy) == 1
    && (*(unsigned char *)(*(void *)(v1
                             + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState)
                 + 104) & 1) == 0)
  {
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v5, (uint64_t)qword_26B2AA500);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
    uint64_t v12 = *(void *)(v1
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    uint64_t v11 = *(void *)(v1
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                    + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v13 = sub_255C80BD8();
    v16[0] = v12;
    v16[1] = v11;
    sub_255B54FC4(v13, 0xD000000000000019, 0x8000000255C9BB10, (uint64_t)v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v14 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    unint64_t v15 = (void *)swift_allocObject();
    void v15[2] = 0;
    v15[3] = 0;
    void v15[4] = v1;
    swift_retain();
    sub_255A812C8((uint64_t)v4, (uint64_t)&unk_269F22570, (uint64_t)v15);
    swift_release();
    return sub_255A095A4((uint64_t)v4, (uint64_t *)&unk_26B29F0C0);
  }
  return result;
}

uint64_t sub_255A73D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  return MEMORY[0x270FA2498](sub_255A73D4C, 0, 0);
}

uint64_t sub_255A73D4C()
{
  if (qword_269F202D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_269F33430;
  return MEMORY[0x270FA2498](sub_255A73DE0, v0, 0);
}

uint64_t sub_255A73DE0()
{
  if (qword_269F202E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_255A73E70, 0, 0);
}

uint64_t sub_255A73E70()
{
  return MEMORY[0x270FA2498](sub_255A73E90, qword_269F33430, 0);
}

uint64_t sub_255A73E90()
{
  *(void *)(v0 + 40) = qword_269F33438;
  return MEMORY[0x270FA2498](sub_255A73EB8, 0, 0);
}

uint64_t sub_255A73EB8()
{
  v0[6] = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
  v0[7] = sub_255C80958();
  v0[8] = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A73F5C, v2, v1);
}

uint64_t sub_255A73F5C()
{
  uint64_t v1 = v0[4];
  swift_release();
  uint64_t v2 = (void *)(*(void *)(v1
                            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
  v0[9] = *v2;
  v0[10] = v2[1];
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_255A73FFC, 0, 0);
}

uint64_t sub_255A73FFC()
{
  *(void *)(v0 + 88) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A74088, v2, v1);
}

uint64_t sub_255A74088()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  uint64_t v4 = *(void *)(v2
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  uint64_t v3 = *(void *)(v2
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                 + 8);
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_255A74168;
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 80);
  return sub_255C5A7A8(v2 + v1, v6, v7, (_OWORD *)(v0 + 16));
}

uint64_t sub_255A74168()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_255A74294()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22558);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0
     + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase;
  swift_beginAccess();
  sub_255A09540(v4, (uint64_t)v3, &qword_269F22558);
  uint64_t v5 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand;
  LODWORD(v4) = *(unsigned __int8 *)(v0
                                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand);
  unsigned __int8 v11 = *(unsigned char *)(v0
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy);
  unint64_t v6 = *(void *)(v0
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
  unint64_t v7 = *(void *)(v0
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                 + 8);
  v10[0] = *(void *)(v0
                     + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v10[1] = v7;
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_255A77EA8((uint64_t)v3, v4, &v11, v6, v10);
  swift_bridgeObjectRelease();
  sub_255A095A4((uint64_t)v3, &qword_269F22558);
  uint64_t v8 = *(unsigned __int8 *)(v0 + v5);
  *(unsigned char *)(v0 + v5) = v4;
  return sub_255A737A0(v8);
}

uint64_t sub_255A743CC(_OWORD *a1)
{
  uint64_t v2 = (void *)(v1
                + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  *(_OWORD *)(v1
            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext) = *a1;
  swift_bridgeObjectRelease();
  uint64_t v3 = v2[1];
  uint64_t v4 = (void *)(*(void *)(v1
                            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
  *uint64_t v4 = *v2;
  v4[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
  uint64_t v6 = v2[1];
  *(void *)(v5 + 136) = *v2;
  *(void *)(v5 + 144) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

void sub_255A7449C()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_window);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v0, sel_frame);
    objc_msgSend(v0, sel_convertRect_toCoordinateSpace_, v3);
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    uint64_t v12 = (void *)MEMORY[0x25A297D40](&v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_scrollView]);
    if (v12)
    {
      os_log_type_t v13 = v12;
      objc_msgSend(v12, sel_contentOffset);
      double v15 = v14;
      objc_msgSend(v13, sel_contentOffset);
      double v17 = v16;
      objc_msgSend(v13, sel_bounds);
      double Width = CGRectGetWidth(v34);
      objc_msgSend(v13, sel_bounds);
      objc_msgSend(v13, sel_convertRect_toCoordinateSpace_, v3, v15, v17, Width, CGRectGetHeight(v35));
      v40.origin.x = v19;
      v40.origin.y = v20;
      v40.size.width = v21;
      v40.size.double height = v22;
      v36.origin.x = v5;
      v36.origin.y = v7;
      v36.size.width = v9;
      v36.size.double height = v11;
      CGRect v37 = CGRectIntersection(v36, v40);
      double v23 = v37.size.width;
      double height = v37.size.height;
    }
    else
    {
      objc_msgSend(v3, sel_frame);
      v41.origin.x = v25;
      v41.origin.y = v26;
      v41.size.width = v27;
      v41.size.double height = v28;
      v38.origin.x = v5;
      v38.origin.y = v7;
      v38.size.width = v9;
      v38.size.double height = v11;
      CGRect v39 = CGRectIntersection(v38, v41);
      double v23 = v39.size.width;
      double height = v39.size.height;
    }
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      int v30 = v23 != 0.0;
      if (height != 0.0) {
        int v30 = 1;
      }
      int v31 = *(unsigned __int8 *)(Strong + 104);
      *(unsigned char *)(Strong + 104) = v30;
      if (v30 != v31) {
        sub_255C7D9F8();
      }
      swift_release();
      if (swift_weakLoadStrong())
      {
        objc_msgSend(v1, sel_frame);
        sub_255A75C2C(v32, v33, v23, height);
        swift_release();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_255A746CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v2 - 8);
  CGRect v40 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_255C803C8();
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  double v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22528);
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  CGFloat v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22530);
  uint64_t v10 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v13 = (objc_class *)type metadata accessor for GeometryTrackingView();
  v43.receiver = v1;
  v43.super_class = v13;
  objc_msgSendSuper2(&v43, sel_didMoveToWindow);
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_255C812B8()) {
    unint64_t v14 = sub_255AC746C(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v14 = MEMORY[0x263F8EE88];
  }
  double v15 = (unint64_t *)&v1[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions];
  swift_beginAccess();
  CGRect v36 = v15;
  *double v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v1, sel_window);

  if (v16)
  {
    CGRect v41 = v1;
    id v17 = objc_msgSend(v1, sel_superview);
    if (v17)
    {
      double v18 = v17;
      CGFloat v19 = 0;
      CGRect v34 = (void (**)(char *, uint64_t))(v4 + 8);
      CGRect v35 = (void (**)(char *, void, uint64_t))(v4 + 104);
      unsigned int v33 = *MEMORY[0x263F8F068];
      int v31 = (void (**)(char *, uint64_t))(v10 + 8);
      double v32 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v20 = v38;
      do
      {
        self;
        uint64_t v29 = swift_dynamicCastObjCClass();
        if (v29)
        {
          CGFloat v21 = (void *)v29;
          swift_getKeyPath();
          id v22 = v18;
          sub_255C7D4E8();
          swift_release();
          sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
          uint64_t v23 = v39;
          (*v35)(v6, v33, v39);
          unint64_t v24 = (void *)sub_255C80CA8();
          (*v34)(v6, v23);
          id v42 = v24;
          uint64_t v25 = sub_255C80C78();
          uint64_t v26 = (uint64_t)v40;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v40, 1, 1, v25);
          sub_255A09998(&qword_269F22538, &qword_269F22528);
          sub_255A42F64();
          sub_255C7DB68();
          sub_255A095A4(v26, (uint64_t *)&unk_26B29F010);

          (*v32)(v9, v20);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          sub_255A09998(&qword_269F22540, &qword_269F22530);
          uint64_t v27 = v37;
          sub_255C7DB98();
          swift_release();
          (*v31)(v12, v27);
          swift_beginAccess();
          sub_255C7D9A8();
          swift_endAccess();
          swift_release();

          CGFloat v19 = v21;
        }
        else
        {
          id v30 = v18;
        }
        id v28 = objc_msgSend(v18, sel_superview, v31);

        double v18 = v28;
      }
      while (v28);
    }
    else
    {
      CGFloat v19 = 0;
    }
    swift_unknownObjectWeakAssign();
    sub_255A7449C();
  }
}

uint64_t sub_255A74C90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_255C80958();
  swift_retain();
  uint64_t v7 = sub_255C80948();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8F500];
  _OWORD v8[2] = v7;
  v8[3] = v9;
  v8[4] = a2;
  sub_255B5DB9C((uint64_t)v5, (uint64_t)&unk_269F22550, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_255A74DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_255C80958();
  v4[7] = sub_255C80948();
  uint64_t v6 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A74E40, v6, v5);
}

uint64_t sub_255A74E40()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x25A297D40](v1 + 16);
  if (v2)
  {
    sub_255A7449C();
  }
  **(unsigned char **)(v0 + 40) = v2 == 0;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_255A74F5C()
{
  return sub_255A750A8((uint64_t (*)(void))type metadata accessor for GeometryTrackingView);
}

uint64_t type metadata accessor for GeometryTrackingView()
{
  return self;
}

id sub_255A75090()
{
  return sub_255A750A8((uint64_t (*)(void))type metadata accessor for PlayerView);
}

id sub_255A750A8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for PlayerView()
{
  return self;
}

uint64_t sub_255A7510C()
{
  swift_getKeyPath();
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_255A751AC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_255A75254()
{
  return swift_release();
}

uint64_t sub_255A75324()
{
  swift_getKeyPath();
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_255A753C4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_255A7546C()
{
  return swift_release();
}

uint64_t sub_255A7553C(uint64_t result, uint64_t a2, char a3)
{
  double v4 = *(double *)(v3 + 24);
  double v5 = *(double *)(v3 + 32);
  char v6 = *(unsigned char *)(v3 + 40);
  *(double *)(v3 + 24) = *(double *)&result;
  *(double *)(v3 + 32) = *(double *)&a2;
  *(unsigned char *)(v3 + 40) = a3 & 1;
  if ((a3 & 1) == 0)
  {
    if ((v6 & 1) != 0 || (v4 == *(double *)&result ? (BOOL v7 = v5 == *(double *)&a2) : (BOOL v7 = 0), !v7)) {
      *(double *)&uint64_t result = COERCE_DOUBLE(sub_255C7D9F8());
    }
  }
  return result;
}

uint64_t sub_255A755A0()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22500);
    sub_255A09998(&qword_269F22508, &qword_269F22500);
    uint64_t v1 = sub_255C7DAF8();
    *(void *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_255A75654(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(double *)(v6 + 72) = a2;
  *(double *)(v6 + 80) = a3;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a6;
  return MEMORY[0x270FA2498](sub_255A75678, 0, 0);
}

uint64_t sub_255A75678()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v2 = *(void *)(v0 + 80);
    swift_retain();
    swift_release();
    *(void *)(v0 + 40) = v3;
    *(void *)(v0 + 48) = v2;
    sub_255C7D9F8();
    swift_release();
  }
  **(unsigned char **)(v0 + 56) = Strong == 0;
  double v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_255A75740(uint64_t a1, uint64_t a2, char a3)
{
  char v7 = a3 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  uint64_t result = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = *(double *)(v3 + 64);
  double v13 = *(double *)(v3 + 72);
  char v14 = *(unsigned char *)(v3 + 80);
  *(double *)(v3 + 64) = *(double *)&a1;
  *(double *)(v3 + 72) = *(double *)&a2;
  *(unsigned char *)(v3 + 80) = v7;
  if ((a3 & 1) == 0)
  {
    if ((v14 & 1) != 0 || (v12 == *(double *)&a1 ? (BOOL v15 = v13 == *(double *)&a2) : (BOOL v15 = 0), !v15))
    {
      uint64_t v16 = sub_255C80988();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = v17;
      *(double *)(v18 + 40) = *(double *)&a1;
      *(double *)(v18 + 48) = *(double *)&a2;
      sub_255A814B4((uint64_t)v11, (uint64_t)&unk_269F22518, v18);
      swift_release();
      return sub_255A095A4((uint64_t)v11, (uint64_t *)&unk_26B29F0C0);
    }
  }
  return result;
}

uint64_t sub_255A758AC()
{
  if (*(void *)(v0 + 96))
  {
    uint64_t v1 = *(void *)(v0 + 96);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22500);
    sub_255A09998(&qword_269F22508, &qword_269F22500);
    uint64_t v1 = sub_255C7DAF8();
    *(void *)(v2 + 96) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_255A75960()
{
  if (*(void *)(v0 + 120))
  {
    uint64_t v1 = *(void *)(v0 + 120);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F224F0);
    sub_255A09998(&qword_269F224F8, &qword_269F224F0);
    uint64_t v1 = sub_255C7DAF8();
    *(void *)(v2 + 120) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_255A75A14()
{
  swift_getKeyPath();
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 129);
}

uint64_t sub_255A75AB4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 129);
  return result;
}

uint64_t sub_255A75B5C()
{
  return swift_release();
}

void sub_255A75C2C(double a1, double a2, double a3, double a4)
{
  if ((*(unsigned char *)(v4 + 40) & 1) != 0
    || *(double *)(v4 + 24) != a1
    || *(double *)(v4 + 32) != a2
    || (*(unsigned char *)(v4 + 80) & 1) != 0
    || *(double *)(v4 + 64) != a3
    || *(double *)(v4 + 72) != a4)
  {
    swift_getKeyPath();
    sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
    sub_255C7D718();
    swift_release();
    if ((*(unsigned char *)(v4 + 16) & 1) == 0)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_255C7D708();
      swift_release();
    }
    sub_255A7553C(*(uint64_t *)&a1, *(uint64_t *)&a2, 0);
    sub_255A75740(*(uint64_t *)&a3, *(uint64_t *)&a4, 0);
  }
}

uint64_t sub_255A75DE4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI22MotionViewDisplayState___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_255A75E80()
{
  sub_255A75DE4();

  return swift_deallocClassInstance();
}

uint64_t sub_255A75ED8()
{
  return type metadata accessor for MotionViewDisplayState(0);
}

uint64_t type metadata accessor for MotionViewDisplayState(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22460);
}

uint64_t sub_255A75F00()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_255A75FD4()
{
  *(_WORD *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22500);
  swift_allocObject();
  *(void *)(v0 + 48) = sub_255C7DA08();
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  swift_allocObject();
  *(void *)(v0 + 88) = sub_255C7DA08();
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F224F0);
  swift_allocObject();
  *(void *)(v0 + 112) = sub_255C7DA08();
  *(void *)(v0 + 120) = 0;
  *(_WORD *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  sub_255C7D748();
  return v0;
}

void *sub_255A7609C()
{
  swift_getKeyPath();
  sub_255A777D0((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D718();
  swift_release();
  unint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void sub_255A76144(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2;
  id v3 = a2;
}

void *sub_255A76178()
{
  swift_getKeyPath();
  sub_255A777D0((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D718();
  swift_release();
  unint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void sub_255A76220(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2;
  id v3 = a2;
}

uint64_t sub_255A76254()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI29MaterialMotionContentObserver___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255A76304()
{
  return type metadata accessor for MaterialMotionContentObserver(0);
}

uint64_t type metadata accessor for MaterialMotionContentObserver(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_26B29CD90);
}

uint64_t sub_255A7632C()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_255A763C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 28));
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7D5C8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *((void *)v18 + 1);
    char v21 = v18[16];
    sub_255A7663C(*(void *)v18, v20, v21);
    *(void *)uint64_t v17 = v19;
    *((void *)v17 + 1) = v20;
    v17[16] = v21;
    uint64_t v22 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_255A7663C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_255A7664C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7D5C8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  sub_255A767C8(*(void *)(a1 + *(int *)(a2 + 24)), *(void *)(a1 + *(int *)(a2 + 24) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 16));
  swift_release();

  return swift_release();
}

uint64_t sub_255A767C8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_255A767D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7D5C8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  char v19 = *(unsigned char *)(v16 + 16);
  sub_255A7663C(*(void *)v16, v18, v19);
  *(void *)uint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(unsigned char *)(v15 + 16) = v19;
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255A76A00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_255A095A4(a1 + v8, &qword_269F213A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7D5C8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  char v19 = *(unsigned char *)(v16 + 16);
  sub_255A7663C(*(void *)v16, v18, v19);
  uint64_t v20 = *(void *)v15;
  uint64_t v21 = *(void *)(v15 + 8);
  char v22 = *(unsigned char *)(v15 + 16);
  *(void *)uint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(unsigned char *)(v15 + 16) = v19;
  sub_255A767C8(v20, v21, v22);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255A76C70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_255C7D5C8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_255A76E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_255A095A4(a1 + v8, &qword_269F213A8);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7D5C8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 16);
  uint64_t v19 = *(void *)v16;
  uint64_t v20 = *(void *)(v16 + 8);
  char v21 = *(unsigned char *)(v16 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = v18;
  sub_255A767C8(v19, v20, v21);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_255A770D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A770E4);
}

uint64_t sub_255A770E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22480);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_255A77200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A77214);
}

uint64_t sub_255A77214(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22478);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22480);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for MotionPlayerView(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22488);
}

void sub_255A7734C()
{
  sub_255A77464(319, &qword_269F22498, type metadata accessor for MotionViewDisplayState, MEMORY[0x263F1BA20]);
  if (v0 <= 0x3F)
  {
    sub_255A774C8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_255A77464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255A774C8()
{
  if (!qword_269F224A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29F230);
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F224A0);
    }
  }
}

uint64_t sub_255A77524()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A77540@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A777D0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 33);
  return result;
}

uint64_t sub_255A775EC()
{
  return swift_release();
}

uint64_t sub_255A776C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MotionPlayerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A77728(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for MotionPlayerView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_255A6F628(a1, a2, v6);
}

uint64_t sub_255A777B0()
{
  return sub_255A24BF4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_255A777D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A77818()
{
  return sub_255BC0DC4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t type metadata accessor for MotionPlayerViewRepresentable(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F22578);
}

uint64_t sub_255A77860@<X0>(unsigned char *a1@<X8>)
{
  sub_255A27FA8();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A778B0()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A77904()
{
  return sub_255C7E8C8();
}

uint64_t sub_255A77960(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255A779CC()
{
  return sub_255A77A00(sub_255A6F244);
}

uint64_t sub_255A779E8()
{
  return sub_255A77A00(sub_255A6F414);
}

uint64_t sub_255A77A00(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for MotionPlayerView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_255A77A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F224D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_255A77AFC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 129) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_255A77B0C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255A77B44()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A77B4C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A16A8C;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = a1;
  unsigned char v7[8] = v4;
  return MEMORY[0x270FA2498](sub_255A75678, 0, 0);
}

id sub_255A77C14@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contentOffset);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_255A77C48(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentOffset_, *a1, a1[1]);
}

uint64_t sub_255A77C5C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255A77C94(uint64_t a1)
{
  return sub_255A74C90(a1, v1);
}

uint64_t sub_255A77C9C()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A77CA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A160B0;
  return sub_255A74DA8(a1, v4, v5, v6);
}

void sub_255A77D58(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver;
  *(void *)(v1
            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver) = a1;
  swift_retain();
  swift_release();
  if (*(void *)(v1 + v2))
  {
    uint64_t v3 = *(void **)(*(void *)(v1
                              + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                  + 16);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    sub_255A777D0((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
    swift_retain();
    id v5 = v3;
    sub_255C7D708();
    swift_release();
    swift_release();
  }
}

uint64_t sub_255A77EA8(uint64_t a1, unsigned int a2, unsigned __int8 *a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v44 = a4;
  unsigned int v47 = a2;
  uint64_t v8 = sub_255C7D898();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  objc_super v43 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22558);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C7DC38();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v41 - v19;
  MEMORY[0x270FA5388](v18);
  char v22 = (char *)&v41 - v21;
  int v23 = *a3;
  unint64_t v24 = *a5;
  unint64_t v25 = a5[1];
  unint64_t v42 = v24;
  sub_255A09540(a1, (uint64_t)v12, &qword_269F22558);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_255A095A4((uint64_t)v12, &qword_269F22558);
    return v47;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v27(v20, v22, v13);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v20, v13);
  if (v28 == *MEMORY[0x263F18448])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    return 3;
  }
  if (v28 == *MEMORY[0x263F18458]) {
    goto LABEL_7;
  }
  if (v28 != *MEMORY[0x263F18450])
  {
    unint64_t v44 = v25;
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v31 = v46;
    uint64_t v32 = __swift_project_value_buffer(v46, (uint64_t)qword_26B2AA500);
    uint64_t v33 = v45;
    CGRect v34 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v43, v32, v31);
    unint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v48 = 0xD00000000000001FLL;
    unint64_t v49 = 0x8000000255C9BAF0;
    v27(v17, v22, v13);
    sub_255C80658();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v35 = v48;
    unint64_t v36 = v49;
    os_log_type_t v37 = sub_255C80BF8();
    unint64_t v48 = v42;
    unint64_t v49 = v44;
    sub_255B54FC4(v37, v35, v36, (uint64_t)&v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v46);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v14 + 8);
    v38(v22, v13);
    v38(v20, v13);
    return v47;
  }
  swift_getKeyPath();
  unint64_t v29 = v44;
  unint64_t v48 = v44;
  sub_255A777D0(&qword_269F224E0, (void (*)(uint64_t))type metadata accessor for MotionViewDisplayState);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v29 + 129) == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v41 - 2) = v29;
    *((unsigned char *)&v41 - 8) = 0;
    unint64_t v48 = v29;
    sub_255C7D708();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    return 0;
  }
  if (v23 == 2)
  {
    if (*(unsigned char *)(v29 + 40) & 1) != 0 || (*(unsigned char *)(v29 + 80))
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      return v47;
    }
    if (*(unsigned char *)(v29 + 104) == 1)
    {
      double v39 = *(double *)(v29 + 72) * *(double *)(v29 + 64) / (*(double *)(v29 + 32) * *(double *)(v29 + 24));
      if (v39 >= COERCE_DOUBLE(1) && v39 < 0.6)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
        return 1;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      if (v39 < 0.6) {
        return 3;
      }
      else {
        return 2;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      uint64_t result = v47;
      if ((_BYTE)v47) {
        return 3;
      }
    }
  }
  else
  {
    if (v23 == 3)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      if (*(unsigned char *)(v29 + 104)) {
        return 2;
      }
      if (v47 != 4) {
        return v47 != 0;
      }
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    if (v23) {
      return 2;
    }
    else {
      return 1;
    }
  }
  return result;
}

uint64_t sub_255A78574(uint64_t a1)
{
  uint64_t v2 = sub_255C7D5C8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1
     + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
  uint64_t v10 = (uint64_t *)(*(void *)(a1
                              + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                  + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = *(void *)(a1
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  uint64_t v14 = *(void *)(a1
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                  + 8);
  uint64_t v22 = v13;
  uint64_t v23 = v11;
  uint64_t v15 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v17 = (v4 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v18 + v16, v5, v2);
  uint64_t v19 = (void *)(v18 + v17);
  *uint64_t v19 = v23;
  v19[1] = v12;
  uint64_t v20 = (void *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v20 = v22;
  v20[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255A812C8((uint64_t)v8, (uint64_t)&unk_269F22608, v18);
  swift_release();
  return sub_255A095A4((uint64_t)v8, (uint64_t *)&unk_26B29F0C0);
}

void sub_255A787D0()
{
  swift_weakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  swift_unknownObjectWeakInit();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_255C812B8()) {
    unint64_t v2 = sub_255AC746C(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v2 = MEMORY[0x263F8EE88];
  }
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions] = v2;

  sub_255C81248();
  __break(1u);
}

uint64_t sub_255A788AC()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A788B4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A16A8C;
  v3[4] = v2;
  return MEMORY[0x270FA2498](sub_255A73D4C, 0, 0);
}

uint64_t sub_255A78960(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    char v9 = *((unsigned char *)a2 + 24);
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
    uint64_t v10 = a2[4];
    LOBYTE(v8) = *((unsigned char *)a2 + 40);
    sub_255A0877C(v10, v8);
    *(void *)(a1 + 32) = v10;
    *(unsigned char *)(a1 + 40) = v8;
    uint64_t v11 = a2[6];
    uint64_t v12 = a2[7];
    char v13 = *((unsigned char *)a2 + 64);
    sub_255A7663C(v11, v12, v13);
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(unsigned char *)(a1 + 64) = v13;
    uint64_t v14 = a3[9];
    uint64_t v15 = (void *)(a1 + v14);
    unint64_t v16 = (uint64_t *)((char *)a2 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7D5C8();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[10];
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(void *)v22;
    char v24 = *(unsigned char *)(v22 + 8);
    sub_255A0877C(*(void *)v22, v24);
    *(void *)uint64_t v21 = v23;
    *(unsigned char *)(v21 + 8) = v24;
    uint64_t v25 = a3[11];
    uint64_t v26 = a1 + v25;
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = *(void *)v27;
    char v29 = *(unsigned char *)(v27 + 8);
    sub_255A0877C(*(void *)v27, v29);
    *(void *)uint64_t v26 = v28;
    *(unsigned char *)(v26 + 8) = v29;
    uint64_t v30 = a3[12];
    uint64_t v31 = a1 + v30;
    uint64_t v32 = (uint64_t)a2 + v30;
    uint64_t v33 = *(void *)v32;
    char v34 = *(unsigned char *)(v32 + 8);
    sub_255A0877C(*(void *)v32, v34);
    *(void *)uint64_t v31 = v33;
    *(unsigned char *)(v31 + 8) = v34;
  }
  return a1;
}

uint64_t sub_255A78C10(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  j__swift_release();
  sub_255A087D0(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_255A767C8(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  uint64_t v4 = a1 + a2[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7D5C8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  sub_255A087D0(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  sub_255A087D0(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v7 = a1 + a2[12];
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_255A087D0(v8, v9);
}

uint64_t sub_255A78D7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  LOBYTE(v7) = *(unsigned char *)(a2 + 40);
  sub_255A0877C(v9, v7);
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v7;
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v12 = *(unsigned char *)(a2 + 64);
  sub_255A7663C(v10, v11, v12);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_255C7D5C8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    void *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_255A0877C(*(void *)v21, v23);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_255A0877C(*(void *)v26, v28);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v28;
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = *(unsigned char *)(v31 + 8);
  sub_255A0877C(*(void *)v31, v33);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v33;
  return a1;
}

uint64_t sub_255A78FE0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  j__swift_retain();
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  j__swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_255A0877C(v8, v9);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  sub_255A087D0(v10, v11);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  char v14 = *(unsigned char *)(a2 + 64);
  sub_255A7663C(v12, v13, v14);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  char v17 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v14;
  sub_255A767C8(v15, v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[9];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_255A095A4(a1 + v18, &qword_269F213A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_255C7D5C8();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_255A0877C(*(void *)v26, v28);
  uint64_t v29 = *(void *)v25;
  char v30 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v28;
  sub_255A087D0(v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)v33;
  char v35 = *(unsigned char *)(v33 + 8);
  sub_255A0877C(*(void *)v33, v35);
  uint64_t v36 = *(void *)v32;
  char v37 = *(unsigned char *)(v32 + 8);
  *(void *)uint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = v35;
  sub_255A087D0(v36, v37);
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)v40;
  char v42 = *(unsigned char *)(v40 + 8);
  sub_255A0877C(*(void *)v40, v42);
  uint64_t v43 = *(void *)v39;
  char v44 = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = v42;
  sub_255A087D0(v43, v44);
  return a1;
}

uint64_t sub_255A792C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7D5C8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[12];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t sub_255A794D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  char v6 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v6;
  j__swift_release();
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v7;
  sub_255A087D0(v8, v9);
  char v10 = *(unsigned char *)(a2 + 64);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = v10;
  sub_255A767C8(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[9];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_255A095A4(a1 + v14, &qword_269F213A8);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F213A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_255C7D5C8();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v15, v16, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  uint64_t v25 = *(void *)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = (_BYTE)v23;
  sub_255A087D0(v25, v26);
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  LOBYTE(v29) = *((unsigned char *)v29 + 8);
  uint64_t v31 = *(void *)v28;
  char v32 = *(unsigned char *)(v28 + 8);
  *(void *)uint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = (_BYTE)v29;
  sub_255A087D0(v31, v32);
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v33;
  char v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  uint64_t v37 = *(void *)v34;
  char v38 = *(unsigned char *)(v34 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  sub_255A087D0(v37, v38);
  return a1;
}

uint64_t sub_255A7975C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A79770);
}

uint64_t sub_255A79770(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22480);
    char v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255A79824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A79838);
}

void *sub_255A79838(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22480);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255A798E4()
{
  sub_255A774C8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255A799A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A79A38()
{
  return sub_255A777D0(&qword_269F22588, (void (*)(uint64_t))type metadata accessor for MotionPlayerViewRepresentable);
}

uint64_t sub_255A79A80()
{
  return sub_255A71C7C();
}

uint64_t sub_255A79A88()
{
  return sub_255A71F4C();
}

uint64_t sub_255A79A90(void **a1)
{
  return sub_255A71FBC(a1);
}

uint64_t sub_255A79A98()
{
  return sub_255A724E4();
}

uint64_t sub_255A79AA0(char *a1)
{
  return sub_255A72710(a1);
}

uint64_t sub_255A79AB0()
{
  return sub_255A24E1C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_255A79AD0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v2;
  id v4 = v2;
}

uint64_t sub_255A79B08()
{
  uint64_t v1 = sub_255C7D5C8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255A79C08()
{
  uint64_t v2 = *(void *)(sub_255C7D5C8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v4 + 8);
  uint64_t v8 = (uint64_t *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_255A16A8C;
  v11[7] = v9;
  v11[8] = v10;
  v11[5] = v6;
  v11[6] = v7;
  v11[4] = v5;
  return MEMORY[0x270FA2498](sub_255A709A0, 0, 0);
}

unint64_t sub_255A79D44()
{
  unint64_t result = qword_26B29D0C8;
  if (!qword_26B29D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D0C8);
  }
  return result;
}

unint64_t sub_255A79D98()
{
  unint64_t result = qword_26B29CEC0;
  if (!qword_26B29CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29CEC0);
  }
  return result;
}

uint64_t sub_255A79DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_255A79E54()
{
  unint64_t result = qword_269F22618;
  if (!qword_269F22618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22618);
  }
  return result;
}

unint64_t sub_255A79EA8()
{
  unint64_t result = qword_26B29C6B8;
  if (!qword_26B29C6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29C6B8);
  }
  return result;
}

unint64_t sub_255A79EFC()
{
  unint64_t result = qword_269F22620;
  if (!qword_269F22620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22620);
  }
  return result;
}

void sub_255A79F54()
{
}

void sub_255A79F6C()
{
}

void sub_255A79F84()
{
}

void sub_255A79F9C()
{
}

uint64_t sub_255A79FB4()
{
  return sub_255A79AB0();
}

uint64_t ToastManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ToastManager.init()();
  return v0;
}

uint64_t ToastManager.init()()
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 56))(v0 + *(void *)(*(void *)v0 + 96), 1, 1);
  *(void *)(v0 + *(void *)(*(void *)v0 + 104)) = 0;
  sub_255C7D748();
  return v0;
}

uint64_t ToastManager.toast.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_255A7A244();
  swift_release();
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v4 = sub_255C80E88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_255A7A19C@<X0>(uint64_t a1@<X8>)
{
  return ToastManager.toast.getter(a1);
}

uint64_t sub_255A7A1C0@<X0>(uint64_t a1@<X8>)
{
  return ToastManager.toast.getter(a1);
}

uint64_t sub_255A7A1E4()
{
  return sub_255A7C4B4();
}

uint64_t sub_255A7A208()
{
  return sub_255A7C4B4();
}

uint64_t sub_255A7A22C()
{
  return 16;
}

__n128 sub_255A7A238(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A7A244()
{
  return sub_255C7D718();
}

uint64_t sub_255A7A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  uint64_t v4 = sub_255C80E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_255A7A3B4()
{
  return sub_255C7D708();
}

uint64_t ToastManager.post(_:dismissTimeInterval:animated:)(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5 = v4;
  int v81 = a4;
  int v80 = a3;
  double v74 = *(double *)&a2;
  uint64_t v7 = *(void *)(*(void *)v5 + 88);
  uint64_t v8 = *(void *)(*(void *)v5 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v78 = (char *)&v73 - v11;
  uint64_t v12 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v77 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  unsigned int v92 = (char *)&v73 - v14;
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v83 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (char *)&v73 - v17;
  uint64_t v85 = sub_255C80E88();
  uint64_t v18 = *(void *)(v85 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v85);
  uint64_t v21 = (char *)&v73 - v20;
  uint64_t v84 = v12;
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  int v76 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  char v26 = (char *)&v73 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v79 = a1;
  uint64_t v86 = v7;
  sub_255C81108();
  uint64_t v91 = v10;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v87 = AssociatedTypeWitness;
  uint64_t v88 = v28;
  v29(v28, 0, 1, AssociatedTypeWitness);
  uint64_t v82 = v5;
  ToastManager.toast.getter((uint64_t)v21);
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48))(v21, 1, v8);
  uint64_t v93 = v8;
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v85);
    uint64_t v31 = 1;
  }
  else
  {
    uint64_t v32 = v94;
    uint64_t v33 = v75;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v75, v21, v8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v85);
    sub_255C81108();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v8);
    uint64_t v31 = 0;
  }
  uint64_t v34 = v87;
  v29(v26, v31, 1, v87);
  uint64_t v35 = v89;
  uint64_t v36 = v92;
  uint64_t v37 = &v92[*(int *)(TupleTypeMetadata2 + 48)];
  char v38 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  uint64_t v39 = v88;
  uint64_t v40 = v84;
  v38(v92, v88, v84);
  uint64_t v85 = (uint64_t)v37;
  v38(v37, v26, v40);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  if (v41((uint64_t)v36, 1, v34) == 1)
  {
    char v42 = *(void (**)(char *, uint64_t))(v35 + 8);
    v42(v26, v40);
    v42(v39, v40);
    if (v41(v85, 1, v34) == 1)
    {
      v42(v92, v40);
      return 0;
    }
    goto LABEL_9;
  }
  char v44 = v76;
  v38(v76, v36, v40);
  uint64_t v45 = v85;
  if (v41(v85, 1, v34) == 1)
  {
    uint64_t v46 = *(void (**)(char *, uint64_t))(v89 + 8);
    v46(v26, v40);
    v46(v88, v40);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v44, v34);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v77 + 8))(v92, TupleTypeMetadata2);
    goto LABEL_10;
  }
  uint64_t v68 = v91;
  uint64_t v69 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v78, v45, v34);
  swift_getAssociatedConformanceWitness();
  char v70 = sub_255C80578();
  id v71 = *(void (**)(char *, uint64_t))(v68 + 8);
  v71(v69, v34);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v89 + 8);
  v72(v26, v40);
  v72(v88, v40);
  v71(v44, v34);
  v72(v36, v40);
  if (v70) {
    return 0;
  }
LABEL_10:
  if (qword_269F1FE50 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_255C7D898();
  __swift_project_value_buffer(v47, (uint64_t)qword_269F32FB0);
  unint64_t v48 = v83;
  uint64_t v49 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v83, v79, v93);
  uint64_t v50 = sub_255C7D878();
  os_log_type_t v51 = sub_255C80C08();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    aBlock[0] = v53;
    *(_DWORD *)uint64_t v52 = 136315138;
    unsigned int v92 = (char *)(v52 + 4);
    uint64_t v54 = v93;
    uint64_t v55 = v94;
    sub_255C81108();
    uint64_t v56 = sub_255C80658();
    uint64_t v95 = sub_255A7BEC4(v56, v57, aBlock);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v83, v54);
    _os_log_impl(&dword_255A00000, v50, v51, "Presenting toast with id=%s", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v53, -1, -1);
    MEMORY[0x25A297C00](v52, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v94 + 8))(v48, v93);
  }

  char v58 = v81;
  uint64_t v59 = v82;
  id v60 = objc_msgSend((id)sub_255A7C55C(), sel_invalidate);
  if (v58) {
    id v60 = (id)sub_255C802A8();
  }
  MEMORY[0x270FA5388](v60);
  *(&v73 - 2) = v59;
  *(&v73 - 1) = v49;
  sub_255C7E1E8();
  swift_release();
  if ((v80 & 1) == 0)
  {
    double v61 = v74;
    id v62 = self;
    uint64_t v63 = swift_allocObject();
    swift_weakInit();
    uint64_t v64 = swift_allocObject();
    uint64_t v65 = v86;
    *(void *)(v64 + 16) = v93;
    *(void *)(v64 + 24) = v65;
    *(void *)(v64 + 32) = v63;
    *(unsigned char *)(v64 + 40) = v58 & 1;
    aBlock[4] = (uint64_t)sub_255A7C670;
    aBlock[5] = v64;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_255A7BAD0;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    uint64_t v66 = _Block_copy(aBlock);
    swift_release();
    id v67 = objc_msgSend(v62, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v66, v61);
    _Block_release(v66);
    sub_255A7BB38(v67);
  }
  return 1;
}

void *sub_255A7AF48()
{
  uint64_t v0 = (void *)sub_255A7C55C();
  id v1 = v0;
  return v0;
}

uint64_t sub_255A7AF74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = sub_255C80E88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a2, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_255A7C4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255A7B0D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_255C80958();
  swift_retain();
  uint64_t v13 = sub_255C80948();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v15;
  *(void *)(v14 + 32) = a4;
  *(void *)(v14 + 40) = a5;
  *(void *)(v14 + 48) = a2;
  *(unsigned char *)(v14 + 56) = a3;
  sub_255B5DB9C((uint64_t)v11, (uint64_t)&unk_269F226C0, v14);
  return swift_release();
}

uint64_t sub_255A7B208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 96) = a5;
  *(void *)(v6 + 40) = a1;
  uint64_t v7 = sub_255C80E88();
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = *(void *)(v7 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  sub_255C80958();
  *(void *)(v6 + 88) = sub_255C80948();
  uint64_t v9 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A7B308, v9, v8);
}

uint64_t sub_255A7B308()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v4 = *(void *)(v0 + 64);
    int v5 = *(unsigned __int8 *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 56) - 8) + 56))(v2, 1, 1);
    ToastManager.dismiss(_:animated:)(v2, v5);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t ToastManager.dismiss(_:animated:)(uint64_t a1, int a2)
{
  uint64_t v56 = a1;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v55 = *(void *)(*(void *)v2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  os_log_type_t v51 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = &v47[-v7];
  uint64_t v8 = sub_255C80E88();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = &v47[-v14];
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  unint64_t v57 = &v47[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v50 = &v47[-v20];
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v47[-v21];
  ToastManager.toast.getter((uint64_t)v15);
  char v58 = (unsigned char *)v16;
  uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  if (v23(v15, 1, v4) == 1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v15, v8);
  }
  int v48 = a2;
  uint64_t v49 = v2;
  uint64_t v25 = (void (*)(unsigned char *, unsigned char *, uint64_t))*((void *)v58 + 4);
  v25(v22, v15, v4);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v12, v56, v8);
  uint64_t v26 = v4;
  if (v23(v12, 1, v4) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v27 = v57;
    uint64_t v28 = v58;
    uint64_t v29 = v22;
  }
  else
  {
    int v30 = v50;
    v25(v50, v12, v4);
    uint64_t v31 = v53;
    sub_255C81108();
    uint64_t v32 = v51;
    sub_255C81108();
    uint64_t v33 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    char v34 = sub_255C80578();
    uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v52 + 8);
    v35(v32, v33);
    v35(v31, v33);
    uint64_t v28 = v58;
    uint64_t v36 = (void (*)(unsigned char *, uint64_t))*((void *)v58 + 1);
    v36(v30, v4);
    uint64_t v29 = v22;
    uint64_t v27 = v57;
    if ((v34 & 1) == 0) {
      return ((uint64_t (*)(unsigned char *, uint64_t))v36)(v22, v26);
    }
  }
  if (qword_269F1FE50 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_255C7D898();
  __swift_project_value_buffer(v37, (uint64_t)qword_269F32FB0);
  (*((void (**)(unsigned char *, unsigned char *, uint64_t))v28 + 2))(v27, v29, v26);
  char v38 = sub_255C7D878();
  os_log_type_t v39 = sub_255C80C08();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    char v58 = v29;
    uint64_t v41 = (uint8_t *)v40;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v60 = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    unint64_t v57 = v41 + 4;
    sub_255C81108();
    uint64_t v43 = sub_255C80658();
    uint64_t v59 = sub_255A7BEC4(v43, v44, &v60);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    uint64_t v45 = (void (*)(unsigned char *, uint64_t))*((void *)v28 + 1);
    v45(v27, v26);
    _os_log_impl(&dword_255A00000, v38, v39, "Dismissing toast with id=%s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v42, -1, -1);
    uint64_t v46 = v41;
    uint64_t v29 = v58;
    MEMORY[0x25A297C00](v46, -1, -1);
  }
  else
  {
    uint64_t v45 = (void (*)(unsigned char *, uint64_t))*((void *)v28 + 1);
    v45(v27, v26);
  }

  objc_msgSend((id)sub_255A7C55C(), sel_invalidate);
  if (v48) {
    sub_255C802A8();
  }
  sub_255C7E1E8();
  swift_release();
  return ((uint64_t (*)(unsigned char *, uint64_t))v45)(v29, v26);
}

void sub_255A7BAD0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_255A7BB38(void *a1)
{
}

uint64_t sub_255A7BBE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 80);
  uint64_t v2 = sub_255C80E88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))((char *)&v7 - v4, 1, 1, v1);
  sub_255A7C4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ToastManager.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_255C80E88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v4 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t ToastManager.__deallocating_deinit()
{
  ToastManager.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_255A7BE50()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F32FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F32FB0);
  return sub_255C7D888();
}

uint64_t sub_255A7BEC4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_255A7BF98(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_255A42E30((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_255A42E30((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_255A7BF98(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_255C80F28();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_255A7C154(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_255C81168();
  if (!v8)
  {
    sub_255C81238();
    __break(1u);
LABEL_17:
    uint64_t result = sub_255C81308();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_255A7C154(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_255A7C1EC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_255A7C364(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_255A7C364(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_255A7C1EC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_255B39B6C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_255C810F8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_255C81238();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_255C806F8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_255C81308();
    __break(1u);
LABEL_14:
    uint64_t result = sub_255C81238();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_255A7C364(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCF8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255A7C4B4()
{
  return swift_release();
}

uint64_t sub_255A7C55C()
{
  swift_getKeyPath();
  sub_255A7A244();
  swift_release();
  return *(void *)(v0 + *(void *)(*(void *)v0 + 104));
}

uint64_t sub_255A7C5E4()
{
  return sub_255A7AF74(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_255A7C600()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255A7C638()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A7C670(uint64_t a1)
{
  return sub_255A7B0D4(a1, *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_255A7C680()
{
  return sub_255A7BBE4(v0);
}

uint64_t sub_255A7C69C()
{
  return 16;
}

__n128 sub_255A7C6A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255A7C6B4()
{
  uint64_t result = sub_255C80E88();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_255C7D758();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ToastManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ToastManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ToastManager);
}

uint64_t dispatch thunk of ToastManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_255A7C7D0()
{
  return sub_255A7A2E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_255A7C7EC@<X0>(void *a1@<X8>)
{
  unint64_t v2 = (void *)sub_255A7C55C();
  *a1 = v2;

  return v2;
}

void sub_255A7C828(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_255A7BB38(v1);
}

uint64_t sub_255A7C858()
{
  return 16;
}

__n128 sub_255A7C864(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_255A7C870()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(*(void *)v1 + 104);
  unint64_t v4 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = v2;
  id v5 = v2;
}

uint64_t sub_255A7C8BC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A7C8FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 56);
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *int64_t v9 = v2;
  v9[1] = sub_255A160B0;
  return sub_255A7B208(a1, v5, v6, v7, v8, v4);
}

unsigned char *storeEnumTagSinglePayload for MetalTextureProviderDisplayMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255A7CAA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetalTextureProviderDisplayMode()
{
  return &type metadata for MetalTextureProviderDisplayMode;
}

unint64_t sub_255A7CADC()
{
  unint64_t result = qword_269F226C8;
  if (!qword_269F226C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F226C8);
  }
  return result;
}

uint64_t sub_255A7CB30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

uint64_t destroy for MotionCacheIndexDestination(uint64_t a1)
{
  return sub_255A7CB90(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_255A7CB90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for MotionCacheIndexDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A7CB30(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for MotionCacheIndexDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A7CB30(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_255A7CB90(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for MotionCacheIndexDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_255A7CB90(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for MotionCacheIndexDestination()
{
  return &type metadata for MotionCacheIndexDestination;
}

uint64_t sub_255A7CD18()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F226D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F226D0);
  return sub_255C7D888();
}

void *sub_255A7CD9C(uint64_t a1)
{
  if (!a1)
  {
    sub_255A7D664();
    swift_allocError();
    *(void *)uint64_t v35 = 0;
    goto LABEL_27;
  }
  if (*(void *)(a1 + 16))
  {
    unint64_t v3 = sub_255B39E20(0xD000000000000016, 0x8000000255C9BF40);
    if (v4)
    {
      sub_255A42E30(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F226F8);
      if (swift_dynamicCast())
      {
        uint64_t v5 = v47;
        uint64_t v45 = *(void *)(v47 + 16);
        if (v45)
        {
          uint64_t v6 = MEMORY[0x263F8EE78];
          uint64_t v1 = (void *)sub_255A184D8(MEMORY[0x263F8EE78]);
          unint64_t v7 = sub_255A185FC(v6);
          uint64_t v8 = 0;
          unint64_t v53 = v7;
          do
          {
            uint64_t v9 = *(void *)(v5 + 8 * v8 + 32);
            uint64_t v10 = *(void *)(v9 + 16);
            swift_bridgeObjectRetain();
            if (!v10
              || (unint64_t v11 = sub_255B39E20(25705, 0xE200000000000000), (v12 & 1) == 0)
              || (sub_255A42E30(*(void *)(v9 + 56) + 32 * v11, (uint64_t)&v51), (swift_dynamicCast() & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_255A7D664();
              swift_allocError();
              *(void *)uint64_t v37 = v9;
              *(unsigned char *)(v37 + 8) = 0;
LABEL_32:
              swift_willThrow();
              swift_bridgeObjectRelease();
              return v1;
            }
            if (!*(void *)(v9 + 16)
              || (unint64_t v13 = sub_255B39E20(0x657A695378616DLL, 0xE700000000000000), (v14 & 1) == 0)
              || (sub_255A42E30(*(void *)(v9 + 56) + 32 * v13, (uint64_t)&v51), (swift_dynamicCast() & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_255A7D664();
              swift_allocError();
              *(void *)uint64_t v38 = v9;
              *(unsigned char *)(v38 + 8) = 1;
              goto LABEL_32;
            }
            ++v8;
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_269F226F0);
            uint64_t v15 = (void *)swift_allocObject();
            swift_bridgeObjectRetain();
            unint64_t v16 = sub_255A184CC(MEMORY[0x263F8EE78]);
            v15[3] = 0;
            void v15[4] = 0;
            void v15[2] = v16;
            id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
            v15[7] = 0;
            v15[8] = 0;
            v15[5] = v17;
            void v15[6] = v47;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v51 = v1;
            sub_255BCC538((uint64_t)v15, v47, v48, isUniquelyReferenced_nonNull_native);
            uint64_t v1 = (void *)v51;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v19 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v51 = v7;
            sub_255BCC3D4(v47, v47, v48, v19);
            unint64_t v7 = v51;
            unint64_t v53 = v51;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v5 = v47;
          }
          while (v45 != v8);
          swift_bridgeObjectRelease();
          if (qword_269F1FE58 != -1) {
            swift_once();
          }
          uint64_t v20 = sub_255C7D898();
          __swift_project_value_buffer(v20, (uint64_t)qword_269F226D0);
          uint64_t v21 = sub_255C7D878();
          os_log_type_t v22 = sub_255C80C08();
          if (os_log_type_enabled(v21, v22))
          {
            uint64_t v23 = (uint8_t *)swift_slowAlloc();
            uint64_t v46 = swift_slowAlloc();
            *(void *)&long long v51 = v46;
            *(_DWORD *)uint64_t v23 = 136315138;
            buf = v23;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            uint64_t v24 = sub_255C80468();
            unint64_t v26 = v25;
            swift_bridgeObjectRelease();
            uint64_t v49 = sub_255A7BEC4(v24, v26, (uint64_t *)&v51);
            sub_255C80F18();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_255A00000, v21, v22, "Client defined cache buckets (IDs and maxSizes): %s.", buf, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25A297C00](v46, -1, -1);
            MEMORY[0x25A297C00](buf, -1, -1);
          }

          if (*(void *)(a1 + 16) && (unint64_t v27 = sub_255B39E20(0xD000000000000018, 0x8000000255C9BF60), (v28 & 1) != 0))
          {
            sub_255A42E30(*(void *)(a1 + 56) + 32 * v27, (uint64_t)&v51);
          }
          else
          {
            long long v51 = 0u;
            long long v52 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v52 + 1))
          {
            if (swift_dynamicCast())
            {
              swift_bridgeObjectRetain_n();
              os_log_type_t v39 = sub_255C7D878();
              os_log_type_t v40 = sub_255C80C08();
              if (os_log_type_enabled(v39, v40))
              {
                uint64_t v41 = (uint8_t *)swift_slowAlloc();
                uint64_t v42 = swift_slowAlloc();
                *(void *)&long long v51 = v42;
                *(_DWORD *)uint64_t v41 = 136315138;
                swift_bridgeObjectRetain();
                sub_255A7BEC4(v49, v50, (uint64_t *)&v51);
                sub_255C80F18();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_255A00000, v39, v40, "Client defined default cache bucket: %s.", v41, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x25A297C00](v42, -1, -1);
                MEMORY[0x25A297C00](v41, -1, -1);
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              swift_bridgeObjectRelease();
              return v1;
            }
          }
          else
          {
            sub_255A7D6B8((uint64_t)&v51);
          }
          swift_bridgeObjectRelease();
          sub_255A7D664();
          swift_allocError();
          *(void *)uint64_t v43 = 2;
          *(unsigned char *)(v43 + 8) = 2;
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_255A7D664();
        swift_allocError();
        *(void *)uint64_t v35 = 1;
LABEL_27:
        *(unsigned char *)(v35 + 8) = 2;
        swift_willThrow();
        return v1;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_269F1FE58 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_255C7D898();
  __swift_project_value_buffer(v29, (uint64_t)qword_269F226D0);
  int v30 = sub_255C7D878();
  os_log_type_t v31 = sub_255C80C08();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 134217984;
    *(void *)&long long v51 = 20;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v30, v31, "Client did not define cache buckets. Will use default indices with capacity = %ld.", v32, 0xCu);
    MEMORY[0x25A297C00](v32, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_269F226F0);
  uint64_t v1 = (void *)swift_allocObject();
  unint64_t v33 = sub_255A184CC(MEMORY[0x263F8EE78]);
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = v33;
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  v1[7] = 0;
  v1[8] = 0;
  v1[5] = v34;
  v1[6] = 20;
  return v1;
}

unint64_t sub_255A7D664()
{
  unint64_t result = qword_269F226E8;
  if (!qword_269F226E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F226E8);
  }
  return result;
}

uint64_t sub_255A7D6B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B297D00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for MotionCacheInfoDictError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_255A7D760(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_255A7D760(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for MotionCacheInfoDictError(uint64_t a1)
{
  return sub_255A7D784(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_255A7D784(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t assignWithCopy for MotionCacheInfoDictError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_255A7D760(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_255A7D784(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for MotionCacheInfoDictError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_255A7D784(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MotionCacheInfoDictError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionCacheInfoDictError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255A7D8CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_255A7D8E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheInfoDictError()
{
  return &type metadata for MotionCacheInfoDictError;
}

uint64_t sub_255A7D910()
{
  uint64_t result = sub_255C80248();
  qword_269F32FC8 = result;
  return result;
}

uint64_t sub_255A7D94C()
{
  uint64_t result = sub_255C80248();
  qword_269F32FD0 = result;
  return result;
}

double sub_255A7D98C()
{
  UIAnimationDragCoefficient();
  double result = (float)(0.0083333 / v0);
  qword_26B2981C8 = *(void *)&result;
  return result;
}

uint64_t sub_255A7D9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_255C7F018();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  uint64_t v15 = sub_255C7DE38();
  if (qword_26B2981D0 != -1) {
    swift_once();
  }
  sub_255C7DE18();
  v14[4] = 0;
  sub_255C7DDF8();
  sub_255A7DBEC(a3, (uint64_t)v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_255A7DC54((uint64_t)v8);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
    if (a4)
    {
      swift_retain();
      sub_255C7DE08();
      sub_255A0DE20(a4);
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v15;
}

uint64_t sub_255A7DBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A7DC54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A7DCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v39 = a3;
  uint64_t v42 = a2;
  uint64_t v38 = a1;
  uint64_t v41 = a7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v59 = _s18PlayerControlsViewV15AccessoryButtonVMa();
  uint64_t v60 = _s18PlayerControlsViewV14FlexibleSpacerVMa();
  _s21TransportControlsViewVMa();
  uint64_t v61 = sub_255C7E458();
  uint64_t v62 = v60;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v55 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = a6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v63 = _s18PlayerControlsViewV15AccessoryButtonVMa();
  swift_getTupleTypeMetadata();
  sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_255C7FED8();
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&WitnessTable - v10;
  uint64_t v12 = sub_255C7E458();
  uint64_t v35 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&WitnessTable - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EEB8);
  uint64_t v15 = sub_255C7E458();
  uint64_t v36 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&WitnessTable - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD80);
  uint64_t v18 = sub_255C7E458();
  uint64_t v37 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v32 = (char *)&WitnessTable - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v34 = (char *)&WitnessTable - v21;
  sub_255C7E908();
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v45 = v38;
  uint64_t v46 = v42;
  uint64_t v47 = v39;
  uint64_t v48 = v40;
  sub_255C7FEC8();
  sub_255C801F8();
  uint64_t v30 = swift_getWitnessTable();
  sub_255C7FA48();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  sub_255C7FD18();
  uint64_t v53 = v30;
  uint64_t v54 = MEMORY[0x263F19100];
  uint64_t v22 = swift_getWitnessTable();
  sub_255C7F618();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
  swift_beginAccess();
  uint64_t v23 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  uint64_t v24 = swift_getWitnessTable();
  unint64_t v25 = v32;
  sub_255C7FB08();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v15);
  uint64_t v26 = sub_255A09998(&qword_26B29BD78, &qword_26B29BD80);
  uint64_t v49 = v24;
  uint64_t v50 = v26;
  swift_getWitnessTable();
  unint64_t v27 = v34;
  sub_255A20F54(v25);
  char v28 = *(void (**)(char *, uint64_t))(v37 + 8);
  v28(v25, v18);
  sub_255A20F54(v27);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v18);
}

uint64_t sub_255A7E404@<X0>(uint64_t a1@<X1>, void (*a2)(uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v87 = a6;
  uint64_t v88 = a3;
  uint64_t v93 = a2;
  uint64_t v74 = a1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v86 = (char *)&v64 - v9;
  uint64_t v80 = swift_checkMetadataState();
  uint64_t v84 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v78 = (char *)&v64 - v10;
  uint64_t v83 = AssociatedTypeWitness;
  uint64_t v82 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v153 = a4;
  *((void *)&v153 + 1) = AssociatedTypeWitness;
  *(void *)&long long v154 = a5;
  *((void *)&v154 + 1) = v82;
  uint64_t v81 = _s18PlayerControlsViewV15AccessoryButtonVMa();
  uint64_t v85 = *(void *)(v81 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v81);
  uint64_t v92 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v94 = (char *)&v64 - v13;
  uint64_t v14 = a4;
  swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v16);
  uint64_t v90 = (char *)&v64 - v17;
  uint64_t v18 = swift_checkMetadataState();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v89 = v16;
  uint64_t v77 = (uint64_t (*)(uint64_t, uint64_t))swift_getAssociatedConformanceWitness();
  *(void *)&long long v153 = a4;
  *((void *)&v153 + 1) = v16;
  *(void *)&long long v154 = a5;
  *((void *)&v154 + 1) = v77;
  uint64_t v96 = _s18PlayerControlsViewV15AccessoryButtonVMa();
  uint64_t v91 = *(void *)(v96 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v96);
  uint64_t v95 = (uint64_t)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  int v97 = (char *)&v64 - v24;
  uint64_t v73 = *(void *)(a5 + 8);
  sub_255C23448((uint64_t)v93);
  unint64_t v25 = *(void (**)(uint64_t, uint64_t))(a5 + 312);
  swift_unknownObjectRetain();
  v25(v14, a5);
  swift_unknownObjectRelease();
  uint64_t v26 = (uint64_t)v90;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v18, v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v27 = v95;
  sub_255A7EFF4(v26, 0xD000000000000021, 0x8000000255C9BFA0, v89, MEMORY[0x263F19A50], v95);
  uint64_t v72 = &unk_255C88A90;
  uint64_t v28 = v96;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A20F54(v27);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v91 + 8);
  uint64_t v76 = v91 + 8;
  uint64_t v77 = v29;
  v29(v27, v28);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v153 = KeyPath;
  BYTE8(v153) = 0;
  uint64_t v89 = _s18PlayerControlsViewV14FlexibleSpacerVMa();
  uint64_t v90 = (char *)swift_getWitnessTable();
  sub_255A20F54(&v153);
  sub_255A087D0(KeyPath, 0);
  swift_retain();
  uint64_t v69 = a5;
  uint64_t v70 = v14;
  sub_255AD9298((uint64_t)&v144);
  uint64_t v74 = *((void *)&v146 + 1);
  uint64_t v31 = v146;
  uint64_t v71 = v147;
  uint64_t v67 = *((void *)&v148 + 1);
  uint64_t v32 = v148;
  uint64_t v68 = *((void *)&v147 + 1);
  uint64_t v65 = *((void *)&v149 + 1);
  uint64_t v66 = v149;
  uint64_t v33 = v150;
  LOBYTE(v26) = BYTE8(v150);
  LOBYTE(a5) = BYTE9(v150);
  long long v135 = v144;
  long long v64 = v145;
  long long v136 = v145;
  long long v137 = v146;
  long long v138 = v147;
  long long v139 = v148;
  long long v140 = v149;
  *(void *)&long long v141 = v150;
  WORD4(v141) = WORD4(v150);
  uint64_t v34 = sub_255C7E908();
  uint64_t v35 = _s21TransportControlsViewVMa();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v34;
  uint64_t v38 = v36;
  MEMORY[0x25A295000](&v153, v37, sub_255A7EFC4, 0, v35);
  swift_release();
  swift_unknownObjectRelease();
  sub_255A1D054(v31, v74, v71, v68, v32, v67, v66, v65, v33, v26, a5);
  v133[6] = v159;
  v133[7] = v160;
  v133[2] = v155;
  v133[3] = v156;
  v133[4] = v157;
  v133[5] = v158;
  v133[0] = v153;
  v133[1] = v154;
  long long v150 = v159;
  long long v151 = v160;
  long long v146 = v155;
  long long v147 = v156;
  long long v149 = v158;
  long long v148 = v157;
  uint64_t v134 = v161;
  uint64_t v152 = v161;
  long long v145 = v154;
  long long v144 = v153;
  uint64_t v71 = sub_255C7E458();
  unint64_t v39 = sub_255A7FF44();
  uint64_t v120 = v38;
  unint64_t v121 = v39;
  uint64_t v74 = swift_getWitnessTable();
  sub_255A20F54(&v144);
  sub_255A7FF98((uint64_t)v133);
  uint64_t v40 = swift_getKeyPath();
  *(void *)&long long v153 = v40;
  BYTE8(v153) = 0;
  sub_255A20F54(&v153);
  sub_255A087D0(v40, 0);
  uint64_t v41 = v70;
  sub_255C23448((uint64_t)v93);
  uint64_t v42 = v69;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v69 + 320);
  swift_unknownObjectRetain();
  uint64_t v44 = v78;
  v43(v41, v42);
  swift_unknownObjectRelease();
  uint64_t v45 = (uint64_t)v86;
  uint64_t v46 = v44;
  uint64_t v47 = v80;
  (*(void (**)(uint64_t))(AssociatedConformanceWitness + 32))(v80);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v47);
  uint64_t v48 = v92;
  sub_255A7EFF4(v45, 0xD000000000000022, 0x8000000255C9BFD0, v83, MEMORY[0x263F19A58], v92);
  uint64_t v49 = v81;
  uint64_t v88 = swift_getWitnessTable();
  sub_255A20F54(v48);
  uint64_t v50 = v85;
  uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
  v93(v48, v49);
  uint64_t v51 = v95;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v95, v97, v96);
  long long v141 = v128;
  long long v142 = v129;
  long long v137 = v124;
  long long v138 = v125;
  long long v139 = v126;
  long long v140 = v127;
  long long v135 = v122;
  long long v136 = v123;
  long long v112 = v128;
  long long v113 = v129;
  long long v108 = v124;
  long long v109 = v125;
  long long v110 = v126;
  long long v111 = v127;
  uint64_t v52 = v131;
  LOBYTE(v46) = v132;
  uint64_t v115 = v131;
  char v116 = v132;
  v117[0] = v51;
  v117[1] = &v115;
  uint64_t v143 = v130;
  uint64_t v114 = v130;
  long long v106 = v122;
  long long v107 = v123;
  uint64_t v53 = v118;
  LOBYTE(a5) = v119;
  uint64_t v104 = v118;
  char v105 = v119;
  v117[2] = &v106;
  v117[3] = &v104;
  uint64_t v54 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 16);
  uint64_t v55 = v48;
  uint64_t v56 = v48;
  uint64_t v57 = v94;
  v54(v56, v94, v49);
  v117[4] = v55;
  sub_255A0877C(v52, (char)v46);
  sub_255A80058((uint64_t)&v135);
  sub_255A0877C(v53, a5);
  uint64_t v58 = v96;
  v103[0] = v96;
  v103[1] = v89;
  v103[2] = v71;
  v103[3] = v89;
  v103[4] = v49;
  uint64_t v98 = WitnessTable;
  unsigned int v99 = v90;
  uint64_t v100 = v74;
  uint64_t v101 = v90;
  uint64_t v102 = v88;
  sub_255AF64A0((uint64_t)v117, 5uLL, (uint64_t)v103);
  uint64_t v59 = v93;
  v93((uint64_t)v57, v49);
  sub_255A087D0(v118, v119);
  long long v150 = v128;
  long long v151 = v129;
  uint64_t v152 = v130;
  long long v146 = v124;
  long long v147 = v125;
  long long v149 = v127;
  long long v148 = v126;
  long long v145 = v123;
  long long v144 = v122;
  sub_255A7FF98((uint64_t)&v144);
  sub_255A087D0(v131, v132);
  uint64_t v60 = v58;
  uint64_t v61 = v58;
  uint64_t v62 = v77;
  v77((uint64_t)v97, v60);
  v59(v92, v49);
  sub_255A087D0(v104, v105);
  long long v159 = v112;
  long long v160 = v113;
  uint64_t v161 = v114;
  long long v155 = v108;
  long long v156 = v109;
  long long v157 = v110;
  long long v158 = v111;
  long long v153 = v106;
  long long v154 = v107;
  sub_255A7FF98((uint64_t)&v153);
  sub_255A087D0(v115, v116);
  return v62(v95, v61);
}

double sub_255A7EFC4()
{
  uint64_t v0 = sub_255C7E908();
  return MEMORY[0x25A293BB0](v0) + -4.0;
}

uint64_t sub_255A7EFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t)@<X7>, uint64_t a6@<X8>)
{
  uint64_t v12 = (int *)_s18PlayerControlsViewV15AccessoryButtonVMa();
  uint64_t v13 = a6 + v12[15];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a6, a1, a4);
  uint64_t v16 = (void *)(a6 + v12[13]);
  *uint64_t v16 = a2;
  v16[1] = a3;
  uint64_t v17 = a5(v15);
  uint64_t v18 = sub_255C7E908();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a4);
  uint64_t v20 = (uint64_t *)(a6 + v12[14]);
  *uint64_t v20 = v17;
  v20[1] = v18;
  return result;
}

void sub_255A7F10C()
{
  if (!*(unsigned char *)(v0 + 18) && (*(unsigned char *)(v0 + 16) & 1) != 0) {
    __break(1u);
  }
}

uint64_t sub_255A7F144@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v53 = sub_255C7E378();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v51 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
  uint64_t v4 = a1[3];
  sub_255C7E458();
  uint64_t v5 = sub_255C7E458();
  uint64_t v71 = a1[5];
  uint64_t v6 = v71;
  uint64_t v72 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v70 = MEMORY[0x263F189A8];
  uint64_t v46 = v5;
  uint64_t v45 = swift_getWitnessTable();
  sub_255C7E598();
  uint64_t v7 = sub_255C7E458();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)v34 - v8;
  uint64_t v35 = v7;
  uint64_t v9 = sub_255C7E458();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v42 = (char *)v34 - v10;
  sub_255C7F0D8();
  uint64_t v38 = v9;
  uint64_t v11 = sub_255C7E458();
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)v34 - v12;
  uint64_t v13 = sub_255A1A3F0((unint64_t *)&qword_26B29B770, &qword_26B29B778);
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v67 = v13;
  uint64_t v68 = v14;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v65 = v36;
  uint64_t v66 = MEMORY[0x263F18860];
  uint64_t v15 = swift_getWitnessTable();
  v34[1] = v15;
  uint64_t v16 = sub_255A8102C((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v63 = v15;
  uint64_t v64 = v16;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v60 = v11;
  uint64_t v61 = v37;
  uint64_t v39 = MEMORY[0x263F1AB40];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v40 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v34 - v21;
  uint64_t v60 = sub_255C7FC78();
  uint64_t v61 = 0x3FF0000000000000;
  __int16 v62 = 0;
  uint64_t v55 = a1[2];
  uint64_t v56 = v4;
  uint64_t v57 = a1[4];
  uint64_t v58 = v6;
  uint64_t v59 = v48;
  uint64_t v23 = v43;
  sub_255C7FAC8();
  swift_release();
  sub_255C801F8();
  uint64_t v24 = v42;
  uint64_t v25 = v35;
  sub_255C7FA38();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v25);
  uint64_t v26 = v41;
  uint64_t v27 = v38;
  sub_255B4BFB8();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v27);
  uint64_t v28 = v52;
  uint64_t v29 = v51;
  uint64_t v30 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, *MEMORY[0x263F18D10], v53);
  uint64_t v31 = v37;
  sub_255C7F7A8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v11);
  uint64_t v60 = v11;
  uint64_t v61 = v31;
  swift_getOpaqueTypeConformance2();
  sub_255A20F54(v20);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v40 + 8);
  v32(v20, OpaqueTypeMetadata2);
  sub_255A20F54(v22);
  return ((uint64_t (*)(char *, uint64_t))v32)(v22, OpaqueTypeMetadata2);
}

uint64_t sub_255A7F894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a6;
  uint64_t v11 = sub_255C7E458();
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_255C7E458();
  uint64_t v29 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v26 = a5;
  uint64_t v27 = (char *)&v25 - v18;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v19 = a1 + *(int *)(_s18PlayerControlsViewV15AccessoryButtonVMa() + 60);
  uint64_t v20 = *(void *)v19;
  LOBYTE(a4) = *(unsigned char *)(v19 + 8);
  sub_255A0877C(*(void *)v19, a4);
  sub_255ABB36C(v20, a4);
  sub_255A087D0(v20, a4);
  sub_255C7FAD8();
  sub_255C7EA68();
  sub_255C7E908();
  sub_255C801C8();
  sub_255A0877C(v20, a4);
  sub_255ABB36C(v20, a4);
  sub_255A087D0(v20, a4);
  uint64_t v33 = v26;
  uint64_t v34 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FA68();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  uint64_t v31 = WitnessTable;
  uint64_t v32 = MEMORY[0x263F189A8];
  swift_getWitnessTable();
  uint64_t v22 = v27;
  sub_255A20F54(v17);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v29 + 8);
  v23(v17, v14);
  sub_255A20F54(v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v22, v14);
}

double sub_255A7FBD8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  sub_255A0877C(v3, v4);
  sub_255ABB578(v3, v4, &v10);
  sub_255A087D0(v3, v4);
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v5 = v10;
  char v6 = v11;
  uint64_t v7 = v12;
  char v8 = v13;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 48) = v14;
  return result;
}

uint64_t sub_255A7FCB0()
{
  _s17TransportControlsCMa();
  sub_255A8102C((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
  uint64_t v0 = sub_255C7E2B8();
  sub_255C7E628();
  return v0;
}

uint64_t sub_255A7FD54()
{
  swift_release();

  return swift_unknownObjectRelease();
}

void *sub_255A7FD90(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_255A7FDD0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t sub_255A7FE40(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s18PlayerControlsViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A7FEA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A7FEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255A7DCB4(*v2, v2[1], v2[2], v2[3], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t _s18PlayerControlsViewV15AccessoryButtonVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s18PlayerControlsViewV14FlexibleSpacerVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A7FF34@<X0>(uint64_t a1@<X8>)
{
  return sub_255A7E404(*(void *)(v1 + 40), *(void (**)(uint64_t, uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255A7FF44()
{
  unint64_t result = qword_269F22700;
  if (!qword_269F22700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22700);
  }
  return result;
}

uint64_t sub_255A7FF98(uint64_t a1)
{
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  char v9 = *(unsigned char *)(a1 + 105);
  uint64_t v11 = *(void *)(a1 + 48);
  swift_release();
  swift_unknownObjectRelease();
  sub_255A1D054(v13, v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  swift_release();
  return a1;
}

uint64_t sub_255A80058(uint64_t a1)
{
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  char v9 = *(unsigned char *)(a1 + 105);
  uint64_t v11 = *(void *)(a1 + 48);
  swift_unknownObjectRetain();
  swift_retain();
  sub_255A1CFDC(v13, v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  swift_retain();
  return a1;
}

uint64_t sub_255A80124@<X0>(uint64_t result@<X0>, double *a2@<X8>)
{
  if (*(unsigned char *)(result + 18)) {
    goto LABEL_4;
  }
  if ((*(unsigned char *)(result + 16) & 1) == 0)
  {
    double v2 = 5.0;
    if (*(double *)result < 375.0)
    {
LABEL_5:
      *a2 = v2;
      return result;
    }
LABEL_4:
    double v2 = 10.0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryStandardButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithCopy for LibraryStandardButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_255A087D0(v5, v6);
  return a1;
}

uint64_t assignWithTake for LibraryStandardButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_255A087D0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryStandardButtonStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryStandardButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255A802D8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255A80384(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *int v4 = *a2;
    int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    uint64_t v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    unint64_t v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v16 = *(void *)v15;
    char v17 = *(unsigned char *)(v15 + 8);
    swift_bridgeObjectRetain();
    sub_255A0877C(v16, v17);
    *(void *)unint64_t v14 = v16;
    *(unsigned char *)(v14 + 8) = v17;
  }
  return v4;
}

uint64_t sub_255A804D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  unint64_t v5 = (((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_255A087D0(v6, v7);
}

uint64_t sub_255A80564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  char v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  char v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *char v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v5) = *(unsigned char *)(v12 + 8);
  swift_bridgeObjectRetain();
  sub_255A0877C(v13, v5);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v5;
  return a1;
}

uint64_t sub_255A80628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  char v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  char v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *char v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v7) = *(unsigned char *)(v12 + 8);
  sub_255A0877C(*(void *)v12, (char)v7);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = (_BYTE)v7;
  sub_255A087D0(v14, v15);
  return a1;
}

uint64_t sub_255A80714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  char v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  char v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *char v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)unint64_t v11 = v13;
  return a1;
}

uint64_t sub_255A807B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  char v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  char v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *char v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = *(unsigned char *)(v12 + 8);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v12;
  sub_255A087D0(v14, v15);
  return a1;
}

uint64_t sub_255A80890(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255A80A08);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((((v6 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_255A80A1C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  size_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *uint64_t v21 = a2 ^ 0x80000000;
                v21[1] = 0;
              }
              else
              {
                v21[1] = a2 - 1;
              }
            }
            else
            {
              uint64_t v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x255A80C40);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t sub_255A80C68()
{
  return swift_getWitnessTable();
}

uint64_t sub_255A80FA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A80FE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A8102C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A81074@<X0>(uint64_t a1@<X8>)
{
  return sub_255A7F894(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_255A81084()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A8128C()
{
  return sub_255A1A3F0((unint64_t *)&qword_26B29EC48, &qword_26B29EC50);
}

uint64_t sub_255A812C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v6 - 8);
  unsigned int v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A864A8(a1, (uint64_t)v8);
  uint64_t v9 = sub_255C80988();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_255A095A4((uint64_t)v8, (uint64_t *)&unk_26B29F0C0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_255C80908();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_255C80978();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_255A814B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v6 - 8);
  unsigned int v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A864A8(a1, (uint64_t)v8);
  uint64_t v9 = sub_255C80988();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_255A095A4((uint64_t)v8, (uint64_t *)&unk_26B29F0C0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_255C80908();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_255C80978();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F229E8);
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_255A816A8(void *a1, void *a2, objc_class *a3, float a4)
{
  id v66 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22840);
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22848);
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v67 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22850);
  uint64_t v73 = *(void *)(v15 - 8);
  uint64_t v74 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v72 = (char *)&ObjectType - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F22858);
  uint64_t v76 = *(void *)(v17 - 8);
  uint64_t v77 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v75 = (char *)&ObjectType - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&ObjectType - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTexture] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTextureRef] = 0;
  uint64_t v22 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats;
  uint64_t v23 = qword_269F1FE78;
  uint64_t v24 = v4;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_269F22710;
  *(void *)&v4[v22] = qword_269F22710;
  uint64_t v26 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_outputObserver;
  id v27 = objc_allocWithZone((Class)type metadata accessor for MetalVideoTextureProvider.OutputObserver());
  swift_retain();
  *(void *)&v24[v26] = objc_msgSend(v27, sel_init);
  uint64_t v28 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLinkTarget;
  type metadata accessor for MetalVideoTextureProvider.DisplayLinkTarget();
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v29 + 24) = v25;
  *(void *)&v24[v28] = v29;
  *(void *)&v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_playerTimeControlStatusObserver] = 0;
  v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode] = 0;
  uint64_t v30 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayModeSubject;
  LOBYTE(v79) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22828);
  swift_allocObject();
  swift_retain();
  *(void *)&v24[v30] = sub_255C7DA28();
  *(void *)&v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher] = 0;
  *(void *)&v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_loadTextureTask] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_context] = a3;
  *(float *)&v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_preferredFramesPerSecond] = a4;
  uint64_t v31 = self;
  swift_retain();
  id v32 = objc_msgSend(v31, sel_displayLinkWithTarget_selector_, v29, sel_frame_);
  uint64_t v33 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink;
  *(void *)&v24[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink] = v32;
  id v34 = v32;
  LOBYTE(v79) = 1;
  sub_255C80C28();
  objc_msgSend(v34, sel_setPreferredFrameRateRange_);

  uint64_t v35 = *(void **)&v24[v33];
  objc_msgSend(v35, sel_setPaused_, 1);
  uint64_t v36 = self;
  id v37 = v35;
  id v38 = objc_msgSend(v36, sel_mainRunLoop);
  objc_msgSend(v37, sel_addToRunLoop_forMode_, v38, *MEMORY[0x263EFF588]);

  v80.receiver = v24;
  v80.super_class = ObjectType;
  id v39 = objc_msgSendSuper2(&v80, sel_init);
  swift_unknownObjectWeakAssign();
  uint64_t v40 = (char *)v39;
  uint64_t ObjectType = a3;
  id v41 = v66;
  if (v66)
  {
    id v42 = v66;
    sub_255A82090(v42);
  }
  uint64_t v43 = *(void **)&v40[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_outputObserver];
  swift_unknownObjectWeakAssign();
  uint64_t v44 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v21, 1, 1, v44);
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v46 = (void *)swift_allocObject();
  v46[2] = 0;
  v46[3] = 0;
  v46[4] = v45;
  v46[5] = a1;
  id v47 = v43;
  id v48 = a1;
  sub_255A812C8((uint64_t)v21, (uint64_t)&unk_269F22870, (uint64_t)v46);
  swift_release();
  sub_255A095A4((uint64_t)v21, (uint64_t *)&unk_26B29F0C0);

  swift_getKeyPath();
  sub_255C7D4E8();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v48;
  sub_255A09998(&qword_269F22878, &qword_269F22840);
  id v49 = v48;
  uint64_t v50 = v67;
  uint64_t v51 = v69;
  sub_255C7DB08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v51);
  sub_255A09998((unint64_t *)&unk_269F22880, &qword_269F22848);
  uint64_t v52 = v71;
  uint64_t v53 = v72;
  sub_255C7DB88();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v50, v52);
  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  id v79 = (id)sub_255C80C88();
  uint64_t v54 = sub_255C80C78();
  uint64_t v55 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v78, 1, 1, v54);
  sub_255A09998((unint64_t *)&unk_269F22890, &qword_269F22850);
  sub_255A8654C((unint64_t *)&qword_26B29F110, (unint64_t *)&qword_26B29FC80);
  uint64_t v56 = v74;
  uint64_t v57 = v75;
  sub_255C7DB68();
  sub_255A095A4(v55, (uint64_t *)&unk_26B29F010);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v53, v56);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_255A09998((unint64_t *)&unk_269F228A0, (uint64_t *)&unk_269F22858);
  uint64_t v58 = v77;
  uint64_t v59 = sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v58);
  *(void *)&v40[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_playerTimeControlStatusObserver] = v59;

  swift_release();
  uint64_t result = swift_release();
  uint64_t v61 = *(void *)&v40[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats];
  uint64_t v62 = *(void *)(v61 + 24);
  BOOL v63 = __OFADD__(v62, 1);
  uint64_t v64 = v62 + 1;
  if (v63)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v61 + 24) = v64;
    return (uint64_t)v40;
  }
  return result;
}

uint64_t sub_255A82090(void *a1)
{
  uint64_t v3 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_context) + 40);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  id v5 = v3;
  id v6 = objc_msgSend(a1, sel_CGImage);
  if (v6)
  {
    uint64_t v7 = v6;
    if (qword_269F201E8 != -1) {
      swift_once();
    }
    type metadata accessor for Option(0);
    sub_255A85D84((unint64_t *)&qword_26B29FC90, type metadata accessor for Option);
    uint64_t v8 = (void *)sub_255C80448();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_255A85D78;
    *(void *)(v9 + 24) = v4;
    v12[4] = sub_255A85DCC;
    v12[5] = v9;
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 1107296256;
    _OWORD v12[2] = sub_255BE919C;
    uint64_t v12[3] = &block_descriptor_4;
    uint64_t v10 = _Block_copy(v12);
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_newTextureWithCGImage_options_completionHandler_, v7, v8, v10);
    _Block_release(v10);
    swift_release_n();
  }
  else
  {
    sub_255A82BF8((void *)1, 1, v4);
    swift_release_n();
  }

  return swift_release();
}

id sub_255A822CC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink];
  id result = objc_msgSend(v3, sel_invalidate);
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats];
  uint64_t v6 = *(void *)(v5 + 24);
  BOOL v7 = __OFSUB__(v6, 1);
  uint64_t v8 = v6 - 1;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v5 + 24) = v8;
    swift_retain();
    id v9 = v3;
    sub_255A85A04(v9);
    swift_release();

    v10.receiver = v1;
    v10.super_class = ObjectType;
    return objc_msgSendSuper2(&v10, sel_dealloc);
  }
  return result;
}

uint64_t sub_255A82498(void *a1)
{
  uint64_t v3 = MEMORY[0x25A297D40](v1 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    objc_msgSend(a1, sel_targetTimestamp);
    sub_255A82548(v5);
  }
  swift_beginAccess();
  swift_retain();
  sub_255BA661C(&v7, a1);
  swift_endAccess();

  sub_255A84F94();
  return swift_release();
}

void sub_255A82548(double a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v3 - 8);
  double v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7D6A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  objc_super v10 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = (void *)MEMORY[0x25A297D40](*(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_outputObserver)+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_output);
  if (v16)
  {
    id v45 = v16;
    objc_msgSend(v16, sel_itemTimeForHostTime_, a1);
    uint64_t v17 = v46;
    uint64_t v18 = v47;
    uint64_t v43 = v49;
    uint64_t v44 = v48;
    if (sub_255C80D58())
    {
      id v19 = v45;
    }
    else
    {
      sub_255C7D698();
      uint64_t v39 = v17;
      uint64_t v40 = v18;
      uint64_t v36 = v7;
      uint64_t v37 = v1;
      id v38 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v38(v10, v15, v6);
      uint64_t v20 = v5;
      swift_beginAccess();
      swift_retain();
      sub_255BA62F8((uint64_t)v13, v10);
      uint64_t v21 = v36;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v36 + 8);
      uint64_t v41 = v36 + 8;
      id v42 = v22;
      v22(v13, v6);
      swift_endAccess();
      swift_release();
      uint64_t v23 = sub_255C80988();
      uint64_t v24 = (uint64_t)v20;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
      uint64_t v25 = swift_allocObject();
      uint64_t v26 = v37;
      swift_unknownObjectWeakInit();
      id v27 = *(void **)(*(void *)(v26 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_context) + 56);
      v38(v13, v15, v6);
      unint64_t v28 = (*(unsigned __int8 *)(v21 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = 0;
      *(void *)(v29 + 24) = 0;
      *(void *)(v29 + 32) = v25;
      uint64_t v30 = v39;
      *(void *)(v29 + 40) = v45;
      *(void *)(v29 + 48) = v30;
      LODWORD(v30) = v44;
      *(_DWORD *)(v29 + 56) = v40;
      *(_DWORD *)(v29 + 60) = v30;
      *(void *)(v29 + 64) = v43;
      *(void *)(v29 + 72) = v27;
      (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v29 + v28, v13, v6);
      id v31 = v27;
      id v32 = v45;
      uint64_t v33 = sub_255A812C8(v24, (uint64_t)&unk_269F229C8, v29);
      sub_255A095A4(v24, (uint64_t *)&unk_26B29F0C0);
      uint64_t v34 = *(void *)(v26 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_loadTextureTask);
      *(void *)(v26 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_loadTextureTask) = v33;
      swift_retain();
      if (v34)
      {
        sub_255C80A18();
        swift_release();
      }

      swift_release();
      v42(v15, v6);
    }
  }
}

uint64_t sub_255A829EC()
{
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_255A82A2C(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x25A297D40](v3);
  if (v4)
  {
    double v5 = (void *)v4;
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink);
    objc_msgSend(v6, sel_setPaused_, v2 ^ 1u);
    if (v2)
    {
      swift_beginAccess();
      id v7 = v6;
      swift_retain();
      sub_255BA661C(&v8, v7);
      swift_endAccess();

      sub_255A84F94();
    }
    else
    {
      swift_retain();
      sub_255A85A04(v6);
    }

    swift_release();
  }
}

uint64_t sub_255A82B34()
{
  uint64_t v1 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher);
  }
  else
  {
    uint64_t v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22828);
    sub_255A09998((unint64_t *)&qword_269F22830, &qword_269F22828);
    uint64_t v2 = sub_255C7DAF8();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_255A82BF8(void *a1, char a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = (char *)MEMORY[0x25A297D40](v5);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode;
    if (v6[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode] == 2)
    {
    }
    else if (a2)
    {
      sub_255A85DD4(a1);
      if (qword_269F20130 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_255C7D898();
      __swift_project_value_buffer(v9, (uint64_t)qword_269F332E0);
      sub_255A85DD4(a1);
      sub_255A85DD4(a1);
      objc_super v10 = sub_255C7D878();
      os_log_type_t v11 = sub_255C80BE8();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 138543362;
        sub_255A86148();
        swift_allocError();
        void *v14 = a1;
        sub_255A85DD4(a1);
        uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
        sub_255C80F18();
        *uint64_t v13 = v15;
        sub_255A85DE4(a1, 1);
        sub_255A85DE4(a1, 1);
        _os_log_impl(&dword_255A00000, v10, v11, "MetalImageTextureProvider failed to load texture: %{public}@", v12, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F27D60);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v13, -1, -1);
        MEMORY[0x25A297C00](v12, -1, -1);

        sub_255A85DE4(a1, 1);
      }
      else
      {

        sub_255A85DE4(a1, 1);
        sub_255A85DE4(a1, 1);
        sub_255A85DF0(a1);
      }
    }
    else
    {
      *(void *)&v6[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTexture] = a1;
      sub_255A8619C(a1, 0);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *((unsigned char *)v7 + v8) = 1;
      sub_255C7DA18();

      sub_255A85DE4(a1, 0);
    }
  }
}

uint64_t sub_255A82EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = v13;
  v8[22] = v14;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  uint64_t v9 = sub_255C7D6A8();
  v8[23] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[24] = v10;
  v8[25] = *(void *)(v10 + 64);
  v8[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  v8[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255A82FEC, 0, 0);
}

uint64_t sub_255A82FEC()
{
  uint64_t v48 = v0;
  v47[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 128) + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25A297D40](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    if (sub_255C80A48()) {
      goto LABEL_17;
    }
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v6 = *(void **)(v0 + 136);
    *(void *)(v0 + 40) = *(void *)(v0 + 144);
    *(void *)(v0 + 48) = v5;
    *(void *)(v0 + 56) = v4;
    if (!objc_msgSend(v6, sel_hasNewPixelBufferForItemTime_, v0 + 40) || (sub_255C80A48() & 1) != 0) {
      goto LABEL_17;
    }
    uint64_t v8 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v9 = *(void **)(v0 + 136);
    *(void *)(v0 + 64) = *(void *)(v0 + 144);
    *(void *)(v0 + 72) = v8;
    *(void *)(v0 + 80) = v7;
    id v10 = objc_msgSend(v9, sel_copyPixelBufferForItemTime_itemTimeForDisplay_, v0 + 64, 0);
    if (!v10)
    {
      if (qword_269F20130 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_255C7D898();
      __swift_project_value_buffer(v12, (uint64_t)qword_269F332E0);
      uint64_t v13 = sub_255C7D878();
      os_log_type_t v14 = sub_255C80BE8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = *(void *)(v0 + 152);
        uint64_t v44 = *(void *)(v0 + 160);
        uint64_t v16 = *(void *)(v0 + 144);
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315138;
        v47[0] = v18;
        *(void *)(v0 + 88) = v16;
        *(void *)(v0 + 96) = v15;
        *(void *)(v0 + 104) = v44;
        type metadata accessor for CMTime(0);
        uint64_t v19 = sub_255C80658();
        *(void *)(v0 + 112) = sub_255A7BEC4(v19, v20, v47);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255A00000, v13, v14, "Expected pixel buffer for item time: %s but got none", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v18, -1, -1);
        MEMORY[0x25A297C00](v17, -1, -1);

        goto LABEL_18;
      }

      goto LABEL_17;
    }
    os_log_type_t v11 = v10;
    if (sub_255C80A48())
    {

      goto LABEL_18;
    }
    uint64_t v21 = *(__CVMetalTextureCache **)(v0 + 168);
    *(void *)(v0 + 120) = 0;
    CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    size_t Width = CVPixelBufferGetWidth((CVPixelBufferRef)v11);
    size_t Height = CVPixelBufferGetHeight((CVPixelBufferRef)v11);
    CVReturn TextureFromImage = CVMetalTextureCacheCreateTextureFromImage(v22, v21, (CVImageBufferRef)v11, 0, MTLPixelFormatBGRA8Unorm, Width, Height, 0, (CVMetalTextureRef *)(v0 + 120));
    id v26 = *(id *)(v0 + 120);
    if (TextureFromImage || (sub_255C80A48() & 1) != 0) {
      goto LABEL_14;
    }
    if (!v26) {
      goto LABEL_15;
    }
    id v26 = v26;
    id v29 = CVMetalTextureGetTexture((CVMetalTextureRef)v26);
    if (!v29)
    {

LABEL_14:
LABEL_15:

LABEL_17:
      goto LABEL_18;
    }
    id v30 = v29;
    uint64_t v32 = *(void *)(v0 + 208);
    uint64_t v31 = *(void *)(v0 + 216);
    uint64_t v33 = *(void *)(v0 + 192);
    uint64_t v46 = v31;
    uint64_t v34 = *(void *)(v0 + 184);
    uint64_t v43 = v34;
    uint64_t v45 = v32;
    uint64_t v42 = *(void *)(v0 + 176);
    uint64_t v35 = sub_255C80988();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v31, 1, 1, v35);
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v42, v34);
    sub_255C80958();
    id v37 = v26;
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v38 = sub_255C80948();
    unint64_t v39 = (*(unsigned __int8 *)(v33 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v40 = (char *)swift_allocObject();
    uint64_t v41 = MEMORY[0x263F8F500];
    *((void *)v40 + 2) = v38;
    *((void *)v40 + 3) = v41;
    *((void *)v40 + 4) = v36;
    *((void *)v40 + 5) = v37;
    *((void *)v40 + 6) = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(&v40[v39], v45, v43);
    swift_release();
    sub_255B5DB70(v46, (uint64_t)&unk_269F229D8, (uint64_t)v40);

    swift_release();
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  id v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_255A834E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  unsigned char v7[8] = a4;
  v7[9] = a5;
  sub_255C80958();
  v7[12] = sub_255C80948();
  uint64_t v9 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A83584, v9, v8);
}

uint64_t sub_255A83584()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25A297D40](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned char *)v2;
    if ((sub_255C80A48() & 1) == 0)
    {
      uint64_t v5 = *(void *)(v0 + 80);
      uint64_t v4 = *(void *)(v0 + 88);
      uint64_t v6 = *(void **)(v0 + 72);
      v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode] = 2;
      *(unsigned char *)(v0 + 40) = 2;
      sub_255C7DA18();
      uint64_t v7 = *(void **)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTextureRef];
      *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTextureRef] = v6;

      *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTexture] = v5;
      id v8 = v6;
      swift_unknownObjectRelease();
      uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats];
      swift_beginAccess();
      uint64_t v10 = *(void *)(v9 + 40);
      swift_unknownObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      LOBYTE(v4) = sub_255BEA14C(v4, v10);
      uint64_t result = swift_bridgeObjectRelease();
      if (v4)
      {
        uint64_t v12 = *(void *)(v9 + 48);
        BOOL v13 = __OFADD__(v12, 1);
        uint64_t v14 = v12 + 1;
        if (v13)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 48) = v14;
      }
      swift_release();
    }
  }
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t type metadata accessor for MetalVideoTextureProvider()
{
  return self;
}

uint64_t type metadata accessor for MetalVideoTextureProvider.DisplayLinkTarget()
{
  return self;
}

uint64_t sub_255A83780()
{
  return swift_unknownObjectRetain();
}

void sub_255A83794(void *a1)
{
  id v15 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x25A297D40](v1+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_output);
  swift_unknownObjectWeakAssign();
  uint64_t v6 = (void *)MEMORY[0x25A297D40](v1+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_previousPlayerItem);
  if (v5)
  {
    if (v6)
    {
      id v14 = v6;
      uint64_t v7 = sub_255C80988();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
      id v8 = (void *)swift_allocObject();
      _OWORD v8[2] = 0;
      v8[3] = 0;
      v8[4] = v5;
      v8[5] = v14;
      id v9 = v5;
      id v10 = v14;
      id v11 = v9;
      id v12 = v10;
      sub_255A812C8((uint64_t)v4, (uint64_t)&unk_269F229A0, (uint64_t)v8);

      swift_release();
      sub_255A095A4((uint64_t)v4, (uint64_t *)&unk_26B29F0C0);

      return;
    }

    id v13 = v15;
  }
  else
  {
    id v14 = v6;

    id v13 = v14;
  }
}

uint64_t sub_255A8396C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  v5[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  v5[9] = swift_task_alloc();
  uint64_t v6 = sub_255C803C8();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F228D0);
  v5[13] = v7;
  v5[14] = *(void *)(v7 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F228D8);
  v5[16] = v8;
  v5[17] = *(void *)(v8 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F228E0);
  v5[19] = v9;
  v5[20] = *(void *)(v9 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F228E8);
  v5[22] = v10;
  v5[23] = *(void *)(v10 - 8);
  v5[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255A83C0C, 0, 0);
}

uint64_t sub_255A83C0C()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25A297D40](v1);
  if (v2)
  {
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 192);
    uint64_t v26 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v24 = *(void *)(v0 + 152);
    uint64_t v22 = *(void *)(v0 + 168);
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v20 = *(void *)(v0 + 104);
    uint64_t v21 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v30 = *(void *)(v0 + 64);
    id v27 = (void *)v2;
    swift_getKeyPath();
    sub_255C7D4E8();
    swift_release();
    sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x263F8F068], v8);
    uint64_t v10 = sub_255C80CA8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    *(void *)(v0 + 40) = v10;
    uint64_t v11 = sub_255C80C78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_255A09998(&qword_269F228F0, &qword_269F228D0);
    sub_255A8654C((unint64_t *)&qword_26B29F110, (unint64_t *)&qword_26B29FC80);
    sub_255C7DB68();
    sub_255A095A4(v9, (uint64_t *)&unk_26B29F010);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v20);
    sub_255A43740(0, (unint64_t *)&qword_269F228F8);
    sub_255A09998(&qword_269F22900, &qword_269F228D8);
    sub_255C7DB08();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v3, v21);
    sub_255A09998(&qword_269F22908, &qword_269F228E0);
    sub_255A8654C(&qword_269F22910, (unint64_t *)&qword_269F228F8);
    sub_255C7DB88();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v24);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_255A09998(&qword_269F22918, &qword_269F228E8);
    uint64_t v12 = sub_255C7DB98();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v28);
    uint64_t v13 = sub_255C80988();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v30, 1, 1, v13);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_255C80958();
    swift_retain();
    swift_retain();
    uint64_t v15 = sub_255C80948();
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = MEMORY[0x263F8F500];
    void v16[2] = v15;
    v16[3] = v17;
    void v16[4] = v14;
    v16[5] = v12;
    swift_release();
    sub_255B5DB70(v30, (uint64_t)&unk_269F22928, (uint64_t)v16);

    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

id sub_255A84190@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_currentItem);
  *a2 = result;
  return result;
}

id sub_255A841CC@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_255A841D8(void **a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t result = MEMORY[0x25A297D40](a2 + 16);
  if (result)
  {
    uint64_t v9 = (void *)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22930);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_255C855F0;
    *(void *)(inited + 32) = sub_255C80628();
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 72) = MEMORY[0x263F8E8F8];
    *(_DWORD *)(inited + 48) = 1111970369;
    *(void *)(inited + 80) = sub_255C80628();
    *(void *)(inited + 88) = v12;
    *(void *)(inited + 120) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 96) = 1;
    sub_255A18738(inited);
    id v13 = objc_allocWithZone(MEMORY[0x263EFA830]);
    uint64_t v14 = (void *)sub_255C80448();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithPixelBufferAttributes_, v14);

    if (v15)
    {
      sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
      id v16 = v15;
      id v17 = v9;
      uint64_t v18 = (void *)sub_255C80C88();
      objc_msgSend(v16, sel_setDelegate_queue_, v17, v18);

      objc_msgSend(v16, sel_requestNotificationOfMediaDataChangeAsSoonAsPossible);
      objc_msgSend(v7, sel_addOutput_, v16);

      uint64_t v19 = sub_255C80988();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_255C80958();
      swift_retain();
      id v21 = v7;
      uint64_t v22 = sub_255C80948();
      uint64_t v23 = (void *)swift_allocObject();
      uint64_t v24 = MEMORY[0x263F8F500];
      v23[2] = v22;
      _OWORD v23[3] = v24;
      v23[4] = v20;
      v23[5] = v21;
      swift_release();
      uint64_t v25 = &unk_269F22948;
      uint64_t v26 = (uint64_t)v6;
      uint64_t v27 = (uint64_t)v23;
    }
    else
    {
      if (qword_269F20130 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_255C7D898();
      __swift_project_value_buffer(v28, (uint64_t)qword_269F332E0);
      uint64_t v29 = sub_255C7D878();
      os_log_type_t v30 = sub_255C80BF8();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v40 = v32;
        *(_DWORD *)uint64_t v31 = 136315138;
        uint64_t v39 = sub_255A7BEC4(0xD000000000000013, 0x8000000255C9C370, &v40);
        sub_255C80F18();
        _os_log_impl(&dword_255A00000, v29, v30, "MetalVideoTextureProvider.OutputObserver.%s: AVPlayerItemVideoOutput failed to initialize", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v32, -1, -1);
        MEMORY[0x25A297C00](v31, -1, -1);
      }

      uint64_t v33 = sub_255C80988();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v6, 1, 1, v33);
      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_255C80958();
      id v35 = v7;
      swift_retain();
      uint64_t v36 = sub_255C80948();
      id v37 = (void *)swift_allocObject();
      uint64_t v38 = MEMORY[0x263F8F500];
      v37[2] = v36;
      v37[3] = v38;
      v37[4] = v34;
      v37[5] = v35;
      swift_release();
      uint64_t v25 = &unk_269F22940;
      uint64_t v26 = (uint64_t)v6;
      uint64_t v27 = (uint64_t)v37;
    }
    sub_255B5DB70(v26, (uint64_t)v25, v27);

    return swift_release();
  }
  return result;
}

uint64_t sub_255A846F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  sub_255C80958();
  v5[7] = sub_255C80948();
  uint64_t v7 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A84790, v7, v6);
}

uint64_t sub_255A84790()
{
  uint64_t v1 = v0[5];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25A297D40](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    *(void *)(v2
              + OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_playerCurrentItemPublisher) = v0[6];
    swift_retain();
    swift_release();
  }
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_255A84844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  sub_255C80958();
  v5[4] = sub_255C80948();
  uint64_t v7 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A848DC, v7, v6);
}

uint64_t sub_255A848DC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  id v2 = v1;
  sub_255A83794(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_255A84AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_255A84AD4, 0, 0);
}

uint64_t sub_255A84AD4()
{
  objc_msgSend(*(id *)(v0 + 16), sel_setDelegate_queue_, 0, 0);
  sub_255C80958();
  *(void *)(v0 + 32) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A84B80, v2, v1);
}

uint64_t sub_255A84B80()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v0[2];
  swift_release();
  objc_msgSend(v1, sel_removeOutput_, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_255A84BF8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (id)MEMORY[0x25A297D40](&v0[OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_output]);
  uint64_t v5 = (void *)MEMORY[0x25A297D40](&v0[OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_currentPlayerItem]);
  uint64_t v6 = v5;
  if (v4)
  {
    if (v5)
    {
      uint64_t v7 = sub_255C80988();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
      uint64_t v8 = (void *)swift_allocObject();
      _OWORD v8[2] = 0;
      v8[3] = 0;
      v8[4] = v4;
      v8[5] = v6;
      id v9 = v4;
      id v10 = v6;
      id v4 = v9;
      id v11 = v10;
      sub_255A812C8((uint64_t)v3, (uint64_t)&unk_269F229B8, (uint64_t)v8);
      swift_release();

      sub_255A095A4((uint64_t)v3, (uint64_t *)&unk_26B29F0C0);
    }
  }
  else
  {
  }
  uint64_t v12 = (objc_class *)type metadata accessor for MetalVideoTextureProvider.OutputObserver();
  v14.receiver = v0;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

id sub_255A84E40()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_playerCurrentItemPublisher] = 0;
  uint64_t v1 = OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_itemForOutput;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_255A18870(MEMORY[0x263F8EE78]);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MetalVideoTextureProvider.OutputObserver();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for MetalVideoTextureProvider.OutputObserver()
{
  return self;
}

void *sub_255A84F50()
{
  type metadata accessor for MetalVideoTextureProvider.FrameStatsRecorder();
  uint64_t result = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x263F8EE88];
  result[2] = 0;
  result[3] = 0;
  result[4] = v1;
  result[5] = v1;
  result[6] = 0;
  qword_269F22710 = (uint64_t)result;
  return result;
}

uint64_t sub_255A84F94()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v2 - 8);
  objc_super v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22958);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22960);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 16))
  {
    uint64_t v25 = v10;
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_255C7D898();
    __swift_project_value_buffer(v13, (uint64_t)qword_269F332E0);
    objc_super v14 = sub_255C7D878();
    os_log_type_t v15 = sub_255C80C08();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl(&dword_255A00000, v14, v15, "Setting up video frame stats timer", v16, 2u);
      MEMORY[0x25A297C00](v16, -1, -1);
    }

    sub_255A43740(0, &qword_269F22968);
    id v17 = objc_msgSend(self, sel_mainRunLoop);
    uint64_t v18 = sub_255C80E38();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v7, 1, 1, v18);
    uint64_t v19 = sub_255C80D88();

    sub_255A095A4((uint64_t)v7, &qword_269F22958);
    uint64_t v27 = v19;
    sub_255C80D78();
    sub_255A85D84(&qword_269F22970, MEMORY[0x263F07CE8]);
    uint64_t v20 = sub_255C7DA38();
    swift_release();
    uint64_t v27 = v20;
    sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
    id v26 = (id)sub_255C80C88();
    uint64_t v21 = sub_255C80C78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22978);
    sub_255A09998(&qword_269F22980, &qword_269F22978);
    sub_255A8654C((unint64_t *)&qword_26B29F110, (unint64_t *)&qword_26B29FC80);
    sub_255C7DB68();
    sub_255A095A4((uint64_t)v4, (uint64_t *)&unk_26B29F010);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_255A09998((unint64_t *)&unk_269F22988, &qword_269F22960);
    uint64_t v22 = sub_255C7DB98();
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v8);
    uint64_t v23 = *(void *)(v1 + 16);
    *(void *)(v1 + 16) = v22;
    swift_retain();
    if (v23)
    {
      sub_255C7D9B8();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255A854A8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_255C7D898();
    __swift_project_value_buffer(v2, (uint64_t)qword_269F332E0);
    swift_retain_n();
    uint64_t v3 = sub_255C7D878();
    os_log_type_t v4 = sub_255C80C08();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      v13[0] = v6;
      *(_DWORD *)uint64_t v5 = 136446722;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29FD00);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_255C83400;
      swift_beginAccess();
      uint64_t v8 = *(void *)(*(void *)(v1 + 40) + 16);
      if (v8) {
        float v9 = (float)((float)*(uint64_t *)(v1 + 48) / (float)v8) * 100.0;
      }
      else {
        float v9 = 0.0;
      }
      uint64_t v10 = MEMORY[0x263F8D648];
      *(void *)(v7 + 56) = MEMORY[0x263F8D5C8];
      *(void *)(v7 + 64) = v10;
      *(float *)(v7 + 32) = v9;
      uint64_t v11 = sub_255C80638();
      sub_255A7BEC4(v11, v12, v13);
      sub_255C80F18();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2048;
      swift_release();
      sub_255C80F18();
      swift_release();
      *(_WORD *)(v5 + 22) = 2048;
      sub_255A857B4();
      swift_release();
      sub_255C80F18();
      swift_release();
      _os_log_impl(&dword_255A00000, v3, v4, "Video texture generation rate: %{public}s%%, %ld providers, running display links: %ld", (uint8_t *)v5, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v6, -1, -1);
      MEMORY[0x25A297C00](v5, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *(void *)(v1 + 48) = 0;
    swift_beginAccess();
    *(void *)(v1 + 40) = MEMORY[0x263F8EE88];
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_255A857B4()
{
  swift_beginAccess();
  if ((*(void *)(v0 + 32) & 0xC000000000000001) != 0)
  {
    uint64_t v1 = MEMORY[0x263F8EE88];
    uint64_t v16 = MEMORY[0x263F8EE88];
    swift_bridgeObjectRetain();
    sub_255C80FB8();
    if (sub_255C81028())
    {
      sub_255A43740(0, (unint64_t *)&qword_269F22950);
      do
      {
        swift_dynamicCast();
        if (objc_msgSend(v15, sel_isPaused))
        {
        }
        else
        {
          uint64_t v2 = v16;
          if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
          {
            sub_255BA4D38();
            uint64_t v2 = v16;
          }
          uint64_t result = sub_255C80DC8();
          uint64_t v4 = v2 + 56;
          uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
          unint64_t v6 = result & ~v5;
          unint64_t v7 = v6 >> 6;
          if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
          {
            unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v9 = 0;
            unint64_t v10 = (unint64_t)(63 - v5) >> 6;
            do
            {
              if (++v7 == v10 && (v9 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v11 = v7 == v10;
              if (v7 == v10) {
                unint64_t v7 = 0;
              }
              v9 |= v11;
              uint64_t v12 = *(void *)(v4 + 8 * v7);
            }
            while (v12 == -1);
            unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
          }
          *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
          *(void *)(*(void *)(v2 + 48) + 8 * v8) = v15;
          ++*(void *)(v2 + 16);
        }
      }
      while (sub_255C81028());
      uint64_t v1 = v16;
    }
    swift_release();
    if ((v1 & 0xC000000000000001) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v1 = sub_255A861A8(v13);
    if ((v1 & 0xC000000000000001) != 0)
    {
LABEL_24:
      uint64_t v14 = sub_255C80FF8();
      goto LABEL_25;
    }
  }
  uint64_t v14 = *(void *)(v1 + 16);
LABEL_25:
  swift_release();
  return v14;
}

void sub_255A85A04(void *a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = (void *)sub_255BA9E70(a1);
  swift_endAccess();

  if (*(void *)(v2 + 16) && !sub_255A857B4())
  {
    uint64_t v5 = *(void *)(v2 + 16);
    *(void *)(v2 + 16) = 0;
    if (v5)
    {
      sub_255C7D9B8();
      swift_release();
    }
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_255C7D898();
    __swift_project_value_buffer(v6, (uint64_t)qword_269F332E0);
    unint64_t v7 = sub_255C7D878();
    os_log_type_t v8 = sub_255C80C08();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v9 = 0;
      _os_log_impl(&dword_255A00000, v7, v8, "No active display links, cancelling frame stats timer", v9, 2u);
      MEMORY[0x25A297C00](v9, -1, -1);
    }
  }
}

uint64_t sub_255A85B4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalVideoTextureProvider.FrameStatsRecorder()
{
  return self;
}

uint64_t sub_255A85BB8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255A85BF4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  os_log_type_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *os_log_type_t v8 = v2;
  v8[1] = sub_255A16A8C;
  return sub_255A8396C(a1, v4, v5, v7, v6);
}

id sub_255A85CB4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timeControlStatus);
  *a2 = result;
  return result;
}

uint64_t sub_255A85CE8()
{
  return swift_deallocObject();
}

void *sub_255A85D20@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  if (*result == 2)
  {
    id result = objc_msgSend(*(id *)(v2 + 16), sel_rate);
    BOOL v5 = v4 > 0.0;
  }
  else
  {
    BOOL v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_255A85D70(unsigned __int8 *a1)
{
  sub_255A82A2C(a1, v1);
}

void sub_255A85D78(void *a1, char a2)
{
  sub_255A82BF8(a1, a2 & 1, v2);
}

uint64_t sub_255A85D84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A85DCC(uint64_t a1, void *a2)
{
  return sub_255BE98A8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

id sub_255A85DD4(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_255A85DE4(id a1, char a2)
{
  if (a2) {
    sub_255A85DF0(a1);
  }
  else {
    swift_unknownObjectRelease();
  }
}

void sub_255A85DF0(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_255A85E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  sub_255C80958();
  v5[7] = sub_255C80948();
  uint64_t v7 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A85E98, v7, v6);
}

uint64_t sub_255A85E98()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25A297D40](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    float v4 = (void *)MEMORY[0x25A297D40](v2+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_currentPlayerItem);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectWeakAssign();
  }
  BOOL v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_255A85F74(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  float v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *float v4 = v2;
  v4[1] = sub_255A86050;
  return v6(a1);
}

uint64_t sub_255A86050()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_255A86148()
{
  unint64_t result = qword_269F228B0;
  if (!qword_269F228B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F228B0);
  }
  return result;
}

id sub_255A8619C(id result, char a2)
{
  if (a2) {
    return sub_255A85DD4(result);
  }
  else {
    return (id)swift_unknownObjectRetain();
  }
}

uint64_t sub_255A861A8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_255A8630C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_255A8630C((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x25A297C00](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_255A8630C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (unint64_t *)result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (uint64_t)objc_msgSend(*(id *)(*(void *)(a3 + 48) + 8 * v13), sel_isPaused);
    if ((result & 1) == 0)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_255C64350(v4, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_255A864A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_255A86510@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_currentItem);
  *a2 = result;
  return result;
}

uint64_t sub_255A8654C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255A43740(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A86590(void **a1)
{
  return sub_255A841D8(a1, v1);
}

uint64_t sub_255A86598()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A865E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_255A16A8C;
  return sub_255A846F8(a1, v4, v5, v7, v6);
}

uint64_t sub_255A866A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_255A16A8C;
  return sub_255A85E00(a1, v4, v5, v7, v6);
}

uint64_t sub_255A86768()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255A867A0()
{
  return sub_255A854A8();
}

uint64_t sub_255A867AC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_255A16A8C;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_255A84AD4, 0, 0);
}

uint64_t sub_255A8685C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_255A16A8C;
  return sub_255A84844(a1, v4, v5, v7, v6);
}

uint64_t sub_255A86920()
{
  uint64_t v1 = sub_255C7D6A8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255A86A04(uint64_t a1)
{
  sub_255C7D6A8();
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_255A160B0;
  return sub_255A82EB4(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_255A86B2C()
{
  uint64_t v1 = sub_255C7D6A8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255A86C10(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_255C7D6A8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int64_t v11 = v2;
  v11[1] = sub_255A16A8C;
  return sub_255A834E8(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_255A86D20()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A86D58(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_255A160B0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F24FD0 + dword_269F24FD0);
  return v6(a1, v4);
}

uint64_t sub_255A86E1C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_255A86E98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255A86F78(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255A870C0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_255A87188(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255A871D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingEnvironmentModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255A87244()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A87288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(*(void *)a3 + 80);
  uint64_t v9 = *(void *)(*(void *)a3 + 88);
  sub_255C7FE58();
  sub_255C7FE58();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 208);
  swift_unknownObjectRetain();
  uint64_t v26 = a2;
  swift_retain();
  uint64_t v25 = v10(v8, v9);
  v10(v8, v9);
  swift_retain();
  swift_release();
  _s7ArtworkCMa();
  sub_255A8B420(&qword_26B299F60, (void (*)(uint64_t))_s7ArtworkCMa);
  uint64_t v11 = sub_255C7E2B8();
  uint64_t v23 = v12;
  uint64_t v24 = v11;
  v10(v8, v9);
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingViewModel.CurrentItem(0);
  sub_255A8B420(&qword_26B299340, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.CurrentItem);
  uint64_t v22 = sub_255C7E2B8();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v10(v8, v9) + 104);
  swift_retain();
  uint64_t result = swift_release();
  if (v15)
  {
    _s13HostedContentCMa();
    sub_255A8B420(&qword_26B298180, (void (*)(uint64_t))_s13HostedContentCMa);
    uint64_t v17 = sub_255C7E2B8();
    uint64_t v19 = v18;
    swift_retain();
    uint64_t v20 = v10(v8, v9);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    uint64_t v21 = *(void *)(v20 + 136);
    swift_retain();
    uint64_t result = swift_release();
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = v26;
    *(void *)(a4 + 16) = v25;
    *(void *)(a4 + 24) = a3;
    *(void *)(a4 + 32) = v21;
    *(void *)(a4 + 40) = v24;
    *(void *)(a4 + 48) = v23;
    *(void *)(a4 + 56) = v22;
    *(void *)(a4 + 64) = v14;
    *(void *)(a4 + 72) = v17;
    *(void *)(a4 + 80) = v19;
    *(unsigned char *)(a4 + 88) = v27;
    *(void *)(a4 + 96) = v28;
    *(unsigned char *)(a4 + 104) = v27;
    *(void *)(a4 + 112) = v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255A875B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v297 = a1;
  uint64_t v233 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F090);
  uint64_t v283 = v4;
  uint64_t v323 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v313 = (char *)v218 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B4C0);
  uint64_t v277 = v6;
  uint64_t v290 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v273 = (char *)v218 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  uint64_t v8 = a2;
  uint64_t v9 = sub_255C7EC98();
  uint64_t v276 = v9;
  uint64_t v10 = sub_255A09998(&qword_26B29B4B8, &qword_26B29B4C0);
  uint64_t v278 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v409 = v6;
  *((void *)&v409 + 1) = v9;
  *(void *)&long long v410 = v10;
  *((void *)&v410 + 1) = WitnessTable;
  uint64_t v11 = sub_255C7E568();
  uint64_t v285 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v271 = (char *)v218 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBC0);
  uint64_t v272 = v11;
  uint64_t v13 = sub_255C7E458();
  uint64_t v280 = v13;
  uint64_t v302 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v274 = (char *)v218 - v14;
  uint64_t v15 = sub_255A09998(&qword_26B29F088, &qword_26B29F090);
  uint64_t v284 = v15;
  uint64_t v332 = MEMORY[0x263F19078];
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v270 = v16;
  uint64_t v17 = sub_255A09998(&qword_26B29BBB8, &qword_26B29BBC0);
  uint64_t v407 = v16;
  uint64_t v408 = v17;
  uint64_t v281 = swift_getWitnessTable();
  *(void *)&long long v409 = v4;
  *((void *)&v409 + 1) = v13;
  *(void *)&long long v410 = v15;
  *((void *)&v410 + 1) = v281;
  uint64_t v335 = sub_255C7E568();
  uint64_t v295 = *(void *)(v335 - 8);
  MEMORY[0x270FA5388](v335);
  uint64_t v279 = (char *)v218 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  uint64_t v339 = sub_255C7E458();
  uint64_t v306 = *(void *)(v339 - 8);
  MEMORY[0x270FA5388](v339);
  uint64_t v282 = (char *)v218 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD70);
  uint64_t v336 = sub_255C7E458();
  uint64_t v301 = *(void *)(v336 - 8);
  MEMORY[0x270FA5388](v336);
  uint64_t v289 = (char *)v218 - v20;
  uint64_t v21 = *(void *)(v8 + 16);
  uint64_t v331 = v8;
  uint64_t v353 = v21;
  sub_255C80E88();
  uint64_t v268 = sub_255C7F0C8();
  uint64_t v337 = sub_255C7E458();
  uint64_t v300 = *(void *)(v337 - 8);
  MEMORY[0x270FA5388](v337);
  uint64_t v286 = (char *)v218 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC40);
  uint64_t v338 = sub_255C7E458();
  uint64_t v303 = *(void *)(v338 - 8);
  MEMORY[0x270FA5388](v338);
  uint64_t v287 = (char *)v218 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B297B80);
  uint64_t v340 = sub_255C7E458();
  uint64_t v305 = *(void *)(v340 - 8);
  MEMORY[0x270FA5388](v340);
  uint64_t v288 = (char *)v218 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBE0);
  uint64_t v341 = sub_255C7E458();
  uint64_t v308 = *(void *)(v341 - 8);
  MEMORY[0x270FA5388](v341);
  uint64_t v291 = (char *)v218 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC30);
  uint64_t v342 = sub_255C7E458();
  uint64_t v309 = *(void *)(v342 - 8);
  MEMORY[0x270FA5388](v342);
  uint64_t v292 = (char *)v218 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC80);
  uint64_t v343 = sub_255C7E458();
  uint64_t v310 = *(void *)(v343 - 8);
  MEMORY[0x270FA5388](v343);
  uint64_t v293 = (char *)v218 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBD0);
  uint64_t v345 = sub_255C7E458();
  uint64_t v311 = *(void *)(v345 - 8);
  MEMORY[0x270FA5388](v345);
  uint64_t v294 = (char *)v218 - v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298600);
  uint64_t v346 = sub_255C7E458();
  uint64_t v314 = *(void *)(v346 - 8);
  MEMORY[0x270FA5388](v346);
  uint64_t v296 = (char *)v218 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBF0);
  uint64_t v347 = sub_255C7E458();
  uint64_t v316 = *(void *)(v347 - 8);
  MEMORY[0x270FA5388](v347);
  v298 = (char *)v218 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC20);
  uint64_t v344 = sub_255C7E458();
  uint64_t v315 = *(void *)(v344 - 8);
  MEMORY[0x270FA5388](v344);
  uint64_t v299 = (char *)v218 - v31;
  uint64_t v351 = *(void *)(v8 + 24);
  uint64_t v304 = type metadata accessor for NowPlayingViewControllerProxy();
  sub_255C80E88();
  uint64_t v266 = (char *)sub_255C7F0C8();
  uint64_t v348 = sub_255C7E458();
  uint64_t v317 = *(void *)(v348 - 8);
  MEMORY[0x270FA5388](v348);
  v349 = (char *)v218 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2985F0);
  uint64_t v333 = sub_255C7E458();
  uint64_t v321 = *(void *)(v333 - 8);
  MEMORY[0x270FA5388](v333);
  uint64_t v307 = (char *)v218 - v33;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298618);
  uint64_t v34 = sub_255C7E458();
  uint64_t v324 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v312 = (char *)v218 - v35;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298628);
  uint64_t v260 = v34;
  uint64_t v36 = sub_255C7E458();
  uint64_t v326 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v318 = (char *)v218 - v37;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC00);
  uint64_t v262 = v36;
  uint64_t v38 = sub_255C7E458();
  uint64_t v327 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v319 = (char *)v218 - v39;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC10);
  uint64_t v264 = v38;
  uint64_t v40 = sub_255C7E458();
  uint64_t v328 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v320 = (char *)v218 - v41;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC60);
  uint64_t v267 = v40;
  uint64_t v42 = sub_255C7E458();
  uint64_t v330 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v322 = (char *)v218 - v43;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBA0);
  uint64_t v269 = v42;
  uint64_t v352 = sub_255C7E458();
  uint64_t v329 = *(void *)(v352 - 8);
  MEMORY[0x270FA5388](v352);
  unsigned __int8 v325 = (char *)v218 - v44;
  uint64_t v334 = type metadata accessor for WindowProperties();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v243 = v45;
  uint64_t v46 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  uint64_t v405 = v45;
  uint64_t v406 = v46;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v244 = v47;
  uint64_t v48 = sub_255A09998(&qword_26B29BD68, &qword_26B29BD70);
  uint64_t v403 = v47;
  uint64_t v404 = v48;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v245 = v49;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v401 = v49;
  uint64_t v402 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v246 = v51;
  uint64_t v52 = sub_255A09998(&qword_26B29BC38, &qword_26B29BC40);
  uint64_t v399 = v51;
  uint64_t v400 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v247 = v53;
  uint64_t v54 = sub_255A09998(&qword_26B298608, &qword_26B297B80);
  uint64_t v397 = v53;
  uint64_t v398 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v248 = v55;
  uint64_t v56 = sub_255A09998(&qword_26B29BBD8, &qword_26B29BBE0);
  uint64_t v395 = v55;
  uint64_t v396 = v56;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v249 = v57;
  uint64_t v58 = sub_255A09998(&qword_26B29BC28, &qword_26B29BC30);
  uint64_t v393 = v57;
  uint64_t v394 = v58;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v250 = v59;
  uint64_t v60 = sub_255A09998(&qword_26B29BC78, &qword_26B29BC80);
  uint64_t v391 = v59;
  uint64_t v392 = v60;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v251 = v61;
  uint64_t v62 = sub_255A09998(&qword_26B29BBC8, &qword_26B29BBD0);
  uint64_t v389 = v61;
  uint64_t v390 = v62;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v252 = v63;
  uint64_t v64 = sub_255A09998(&qword_26B2985F8, &qword_26B298600);
  uint64_t v387 = v63;
  uint64_t v388 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v253 = v65;
  uint64_t v66 = sub_255A09998(&qword_26B29BBE8, &qword_26B29BBF0);
  uint64_t v385 = v65;
  uint64_t v386 = v66;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v254 = v67;
  uint64_t v68 = sub_255A09998(&qword_26B29BC18, &qword_26B29BC20);
  uint64_t v383 = v67;
  uint64_t v384 = v68;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v255 = v69;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v381 = v69;
  uint64_t v382 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v256 = v71;
  uint64_t v72 = sub_255A09998(&qword_26B2985E8, &qword_26B2985F0);
  uint64_t v379 = v71;
  uint64_t v380 = v72;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v257 = v73;
  uint64_t v74 = sub_255A09998(&qword_26B298610, &qword_26B298618);
  uint64_t v377 = v73;
  uint64_t v378 = v74;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v259 = v75;
  uint64_t v76 = sub_255A09998(&qword_26B298620, &qword_26B298628);
  uint64_t v375 = v75;
  uint64_t v376 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v261 = v77;
  uint64_t v78 = sub_255A09998(&qword_26B29BBF8, &qword_26B29BC00);
  uint64_t v373 = v77;
  uint64_t v374 = v78;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v263 = v79;
  uint64_t v80 = sub_255A09998(&qword_26B29BC08, &qword_26B29BC10);
  uint64_t v371 = v79;
  uint64_t v372 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v265 = v81;
  uint64_t v82 = sub_255A09998(&qword_26B29BC58, &qword_26B29BC60);
  uint64_t v369 = v81;
  uint64_t v370 = v82;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v268 = v83;
  uint64_t v84 = sub_255A09998(&qword_26B29BB98, &qword_26B29BBA0);
  uint64_t v367 = v83;
  uint64_t v368 = v84;
  uint64_t v85 = v352;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v332 = sub_255A8B420((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  uint64_t v87 = v334;
  *(void *)&long long v409 = v85;
  *((void *)&v409 + 1) = v334;
  *(void *)&long long v410 = v86;
  *((void *)&v410 + 1) = v332;
  uint64_t v258 = v86;
  uint64_t v242 = MEMORY[0x263F1A970];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v236 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v266 = (char *)v218 - v89;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB80);
  uint64_t v237 = OpaqueTypeMetadata2;
  uint64_t v90 = sub_255C7E458();
  uint64_t v240 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v238 = (char *)v218 - v91;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCB0);
  uint64_t v92 = sub_255C7E458();
  uint64_t v231 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v239 = (char *)v218 - v93;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCA0);
  uint64_t v94 = sub_255C7E458();
  uint64_t v229 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v228 = (char *)v218 - v95;
  uint64_t v96 = type metadata accessor for NowPlayingViewModel.Metrics();
  *(void *)&long long v409 = v352;
  *((void *)&v409 + 1) = v87;
  *(void *)&long long v410 = v86;
  *((void *)&v410 + 1) = v332;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = sub_255A09998(&qword_26B29BB78, &qword_26B29BB80);
  uint64_t v234 = OpaqueTypeConformance2;
  uint64_t v365 = OpaqueTypeConformance2;
  uint64_t v366 = v98;
  uint64_t v241 = v90;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v100 = sub_255A09998(&qword_26B29BCA8, &qword_26B29BCB0);
  uint64_t v235 = v99;
  uint64_t v363 = v99;
  uint64_t v364 = v100;
  uint64_t v232 = v92;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v102 = sub_255A09998(&qword_26B29BC98, &qword_26B29BCA0);
  v218[2] = v101;
  uint64_t v361 = v101;
  uint64_t v362 = v102;
  uint64_t v103 = swift_getWitnessTable();
  uint64_t v104 = sub_255A8B420(&qword_26B297B40, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Metrics);
  *(void *)&long long v409 = v94;
  *((void *)&v409 + 1) = v96;
  *(void *)&long long v410 = v103;
  *((void *)&v410 + 1) = v104;
  uint64_t v105 = swift_getOpaqueTypeMetadata2();
  uint64_t v226 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v223 = (char *)v218 - v106;
  uint64_t v230 = v94;
  *(void *)&long long v409 = v94;
  *((void *)&v409 + 1) = v96;
  uint64_t v227 = v96;
  v218[3] = v103;
  *(void *)&long long v410 = v103;
  *((void *)&v410 + 1) = v104;
  v218[1] = v104;
  uint64_t v107 = swift_getOpaqueTypeConformance2();
  unint64_t v108 = sub_255A12A3C();
  uint64_t v242 = v105;
  *(void *)&long long v409 = v105;
  *((void *)&v409 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
  unint64_t v221 = v108;
  uint64_t v222 = v107;
  *(void *)&long long v410 = v107;
  *((void *)&v410 + 1) = v108;
  uint64_t v109 = swift_getOpaqueTypeMetadata2();
  uint64_t v224 = *(void *)(v109 - 8);
  uint64_t v225 = v109;
  uint64_t v110 = MEMORY[0x270FA5388](v109);
  uint64_t v219 = (char *)v218 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v110);
  uint64_t v220 = (char *)v218 - v112;
  long long v113 = v350[5];
  long long v413 = v350[4];
  v414[0] = v113;
  v414[1] = v350[6];
  *(void *)&v414[2] = *((void *)v350 + 14);
  long long v114 = v350[1];
  long long v409 = *v350;
  long long v410 = v114;
  long long v115 = v350[3];
  long long v411 = v350[2];
  long long v412 = v115;
  v350 = (long long *)v114;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B4D8);
  char v116 = v273;
  sub_255C7DA98();
  swift_endAccess();
  uint64_t v117 = swift_allocObject();
  uint64_t v118 = v353;
  uint64_t v119 = v351;
  *(void *)(v117 + 16) = v353;
  *(void *)(v117 + 24) = v119;
  long long v120 = v414[0];
  *(_OWORD *)(v117 + 96) = v413;
  *(_OWORD *)(v117 + 112) = v120;
  *(_OWORD *)(v117 + 128) = v414[1];
  *(void *)(v117 + 144) = *(void *)&v414[2];
  long long v121 = v410;
  *(_OWORD *)(v117 + 32) = v409;
  *(_OWORD *)(v117 + 48) = v121;
  long long v122 = v412;
  *(_OWORD *)(v117 + 64) = v411;
  *(_OWORD *)(v117 + 80) = v122;
  sub_255A8A7F4((uint64_t)&v409);
  long long v123 = v271;
  uint64_t v124 = v277;
  sub_255C7FBB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v290 + 8))(v116, v124);
  swift_getKeyPath();
  long long v415 = *(_OWORD *)((char *)&v414[1] + 8);
  long long v355 = *(_OWORD *)((char *)&v414[1] + 8);
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298658);
  sub_255C7FE68();
  LOBYTE(v355) = v359;
  long long v125 = v274;
  uint64_t v126 = v272;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v285 + 8))(v123, v126);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F098);
  long long v127 = v313;
  sub_255C7DA98();
  swift_endAccess();
  uint64_t v128 = swift_allocObject();
  *(void *)(v128 + 16) = v118;
  *(void *)(v128 + 24) = v119;
  long long v129 = v414[0];
  *(_OWORD *)(v128 + 96) = v413;
  *(_OWORD *)(v128 + 112) = v129;
  *(_OWORD *)(v128 + 128) = v414[1];
  *(void *)(v128 + 144) = *(void *)&v414[2];
  long long v130 = v410;
  *(_OWORD *)(v128 + 32) = v409;
  *(_OWORD *)(v128 + 48) = v130;
  long long v131 = v412;
  *(_OWORD *)(v128 + 64) = v411;
  *(_OWORD *)(v128 + 80) = v131;
  sub_255A8A7F4((uint64_t)&v409);
  char v132 = v279;
  uint64_t v133 = v127;
  uint64_t v134 = v280;
  uint64_t v135 = v283;
  sub_255C7FBB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v323 + 8))(v133, v135);
  (*(void (**)(char *, uint64_t))(v302 + 8))(v125, v134);
  swift_getKeyPath();
  long long v355 = *(_OWORD *)((char *)v414 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE68();
  LOBYTE(v355) = v359;
  long long v136 = v282;
  uint64_t v137 = v335;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v295 + 8))(v132, v137);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  long long v138 = v289;
  uint64_t v139 = v339;
  sub_255C7F678();
  swift_release();
  sub_255A8AF64((uint64_t)&v355);
  (*(void (**)(char *, uint64_t))(v306 + 8))(v136, v139);
  long long v140 = v286;
  uint64_t v141 = v336;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v301 + 8))(v138, v141);
  type metadata accessor for NowPlayingRouteObserver();
  sub_255A8B420(&qword_26B29AA00, (void (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver);
  long long v142 = v287;
  uint64_t v143 = v337;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v300 + 8))(v140, v143);
  type metadata accessor for NowPlayingViewModel(0);
  sub_255A8B420(&qword_26B2981B0, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel);
  long long v144 = v288;
  uint64_t v145 = v338;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v303 + 8))(v142, v145);
  _s5DebugCMa();
  sub_255A8B420((unint64_t *)&qword_26B299A80, (void (*)(uint64_t))_s5DebugCMa);
  long long v146 = v291;
  uint64_t v147 = v340;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v305 + 8))(v144, v147);
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_255A8B420(&qword_26B29A200, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle);
  long long v148 = v292;
  uint64_t v149 = v341;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v308 + 8))(v146, v149);
  type metadata accessor for Geometry();
  sub_255A8B420(&qword_26B29B0F8, (void (*)(uint64_t))type metadata accessor for Geometry);
  long long v150 = v293;
  uint64_t v151 = v342;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v309 + 8))(v148, v151);
  _s11TimeControlCMa();
  sub_255A8B420(&qword_26B299430, (void (*)(uint64_t))_s11TimeControlCMa);
  uint64_t v152 = v294;
  uint64_t v153 = v343;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v310 + 8))(v150, v153);
  _s17TransportControlsCMa();
  sub_255A8B420((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
  long long v154 = v296;
  uint64_t v155 = v345;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v311 + 8))(v152, v155);
  _s5QueueCMa();
  sub_255A8B420(&qword_26B299BC8, (void (*)(uint64_t))_s5QueueCMa);
  long long v156 = v298;
  uint64_t v157 = v346;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v314 + 8))(v154, v157);
  _s8BackdropCMa();
  sub_255A8B420(&qword_26B29A0A0, (void (*)(uint64_t))_s8BackdropCMa);
  long long v158 = v299;
  uint64_t v159 = v347;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v316 + 8))(v156, v159);
  swift_getWitnessTable();
  uint64_t v160 = v344;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v315 + 8))(v158, v160);
  swift_getKeyPath();
  uint64_t v161 = *(void *)&v414[0];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  long long v162 = v355;
  long long v359 = v355;
  long long v360 = v356;
  uint64_t v163 = v307;
  uint64_t v164 = v348;
  uint64_t v165 = v349;
  sub_255C7F678();
  swift_release();
  sub_255A8AFD4(v162, *((uint64_t *)&v162 + 1));
  (*(void (**)(char *, uint64_t))(v317 + 8))(v165, v164);
  swift_getKeyPath();
  swift_beginAccess();
  uint64_t v166 = *(void *)(v161 + 16);
  uint64_t v167 = *(void *)(v161 + 24);
  *(void *)&long long v355 = v166;
  *((void *)&v355 + 1) = v167;
  swift_bridgeObjectRetain();
  uint64_t v168 = v312;
  uint64_t v169 = v333;
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v321 + 8))(v163, v169);
  swift_getKeyPath();
  uint64_t v170 = swift_allocObject();
  uint64_t v171 = v351;
  *(void *)(v170 + 16) = v353;
  *(void *)(v170 + 24) = v171;
  long long v172 = v414[0];
  *(_OWORD *)(v170 + 96) = v413;
  *(_OWORD *)(v170 + 112) = v172;
  *(_OWORD *)(v170 + 128) = v414[1];
  *(void *)(v170 + 144) = *(void *)&v414[2];
  long long v173 = v410;
  *(_OWORD *)(v170 + 32) = v409;
  *(_OWORD *)(v170 + 48) = v173;
  long long v174 = v412;
  *(_OWORD *)(v170 + 64) = v411;
  *(_OWORD *)(v170 + 80) = v174;
  *(void *)&long long v355 = sub_255A8B07C;
  *((void *)&v355 + 1) = v170;
  sub_255A8A7F4((uint64_t)&v409);
  uint64_t v175 = v318;
  uint64_t v176 = v260;
  sub_255C7F678();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v324 + 8))(v168, v176);
  uint64_t v177 = v412;
  _s7ArtworkC17BackgroundArtworkCMa();
  sub_255A8B420((unint64_t *)&unk_26B299DA0, (void (*)(uint64_t))_s7ArtworkC17BackgroundArtworkCMa);
  uint64_t v178 = v319;
  uint64_t v179 = v262;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v326 + 8))(v175, v179);
  _s14DefaultArtworkCMa();
  sub_255A8B420(&qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
  uint64_t v180 = v320;
  uint64_t v181 = v264;
  sub_255C7F828();
  (*(void (**)(char *, uint64_t))(v327 + 8))(v178, v181);
  swift_getKeyPath();
  swift_beginAccess();
  sub_255A53C38(v177 + 64, (uint64_t)&v355);
  uint64_t v182 = v322;
  uint64_t v183 = v267;
  sub_255C7F678();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v355);
  (*(void (**)(char *, uint64_t))(v328 + 8))(v180, v183);
  swift_getKeyPath();
  v357[2] = v413;
  v357[3] = v414[0];
  v357[4] = v414[1];
  uint64_t v358 = *(void *)&v414[2];
  long long v355 = v409;
  long long v356 = v410;
  v357[0] = v411;
  v357[1] = v412;
  sub_255A8A290(&v354);
  uint64_t v184 = v325;
  uint64_t v185 = v269;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v330 + 8))(v182, v185);
  uint64_t v186 = v411;
  swift_checkMetadataState();
  uint64_t v187 = v266;
  uint64_t v188 = v352;
  sub_255C7F668();
  (*(void (**)(char *, uint64_t))(v329 + 8))(v184, v188);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v355 = v186;
  sub_255C7D718();
  uint64_t result = swift_release();
  uint64_t v190 = *(void *)(v186 + 32);
  if ((v190 & 0xFF0000) == 0x40000)
  {
    __break(1u);
    goto LABEL_6;
  }
  char v191 = *(unsigned char *)(v186 + 88);
  int v192 = *(_DWORD *)(v186 + 48);
  uint64_t v193 = *(void *)(v186 + 40);
  long long v194 = *(_OWORD *)(v186 + 56);
  long long v195 = *(_OWORD *)(v186 + 72);
  long long v355 = *(_OWORD *)(v186 + 16);
  LOWORD(v356) = v190 & 0xFF01;
  BYTE2(v356) = BYTE2(v190);
  *((void *)&v356 + 1) = v193;
  LOBYTE(v357[0]) = v192 & 1;
  *(_OWORD *)((char *)v357 + 8) = v194;
  *(_OWORD *)((char *)&v357[1] + 8) = v195;
  BYTE8(v357[2]) = v191 & 1;
  uint64_t v196 = v237;
  uint64_t v197 = v238;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v236 + 8))(v187, v196);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v355 = v186;
  sub_255C7D718();
  swift_release();
  long long v198 = *(_OWORD *)(v186 + 120);
  long long v355 = *(_OWORD *)(v186 + 104);
  long long v356 = v198;
  uint64_t v199 = v239;
  uint64_t v200 = v241;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v240 + 8))(v197, v200);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v355 = v186;
  sub_255C7D718();
  uint64_t result = swift_release();
  uint64_t v201 = *(void *)(v186 + 32);
  if ((v201 & 0xFF0000) == 0x40000)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((v201 & 1) == 0)
  {
    *(void *)&long long v355 = CGSize.aspectRatio.getter(*(double *)(v186 + 16), *(double *)(v186 + 24));
    BYTE8(v355) = 0;
    char v202 = v228;
    uint64_t v203 = v232;
    sub_255C7F678();
    swift_release();
    (*(void (**)(char *, uint64_t))(v231 + 8))(v199, v203);
    swift_checkMetadataState();
    uint64_t v204 = v223;
    uint64_t v205 = v230;
    sub_255C7F668();
    (*(void (**)(char *, uint64_t))(v229 + 8))(v202, v205);
    long long v355 = v415;
    sub_255C7FE68();
    LOBYTE(v355) = v354;
    uint64_t v206 = swift_allocObject();
    uint64_t v207 = v351;
    *(void *)(v206 + 16) = v353;
    *(void *)(v206 + 24) = v207;
    long long v208 = v414[0];
    *(_OWORD *)(v206 + 96) = v413;
    *(_OWORD *)(v206 + 112) = v208;
    *(_OWORD *)(v206 + 128) = v414[1];
    *(void *)(v206 + 144) = *(void *)&v414[2];
    long long v209 = v410;
    *(_OWORD *)(v206 + 32) = v409;
    *(_OWORD *)(v206 + 48) = v209;
    long long v210 = v412;
    *(_OWORD *)(v206 + 64) = v411;
    *(_OWORD *)(v206 + 80) = v210;
    sub_255A8A7F4((uint64_t)&v409);
    uint64_t v211 = v219;
    uint64_t v212 = v242;
    unint64_t v214 = v221;
    uint64_t v213 = v222;
    sub_255C7FB48();
    swift_release();
    (*(void (**)(char *, uint64_t))(v226 + 8))(v204, v212);
    *(void *)&long long v355 = v212;
    *((void *)&v355 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
    *(void *)&long long v356 = v213;
    *((void *)&v356 + 1) = v214;
    swift_getOpaqueTypeConformance2();
    unint64_t v215 = v220;
    uint64_t v216 = v225;
    sub_255A20F54(v211);
    uint64_t v217 = *(void (**)(char *, uint64_t))(v224 + 8);
    v217(v211, v216);
    sub_255A20F54(v215);
    return ((uint64_t (*)(char *, uint64_t))v217)(v215, v216);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_255A8A0DC@<X0>(unsigned char *a1@<X8>)
{
  sub_255A8B3CC();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A8A12C()
{
  return sub_255C7E8D8();
}

double sub_255A8A178@<D0>(_OWORD *a1@<X8>)
{
  sub_255A8B330();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255A8A1C8()
{
  return sub_255C7E8D8();
}

long long *sub_255A8A228(long long *result, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(a3 + 16) + 104))
  {
    int v3 = *a2;
    long long v4 = *result;
    swift_retain();
    sub_255AB6824((uint64_t *)&v4, v3);
    return (long long *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255A8A290@<X0>(char *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v20 = *(void *)(v1 + 80);
  char v3 = *(unsigned char *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 48) + 64;
  swift_beginAccess();
  sub_255A53C38(v5, (uint64_t)v31);
  uint64_t v6 = v32;
  uint64_t v7 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  swift_getKeyPath();
  *(void *)&long long v23 = v2;
  sub_255A8B420((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  uint64_t result = swift_release();
  uint64_t v9 = *(void *)(v2 + 32);
  if ((v9 & 0xFF0000) == 0x40000)
  {
    __break(1u);
  }
  else
  {
    char v10 = *(unsigned char *)(v2 + 88);
    int v11 = *(_DWORD *)(v2 + 48);
    uint64_t v12 = *(void *)(v2 + 40);
    long long v23 = *(_OWORD *)(v2 + 16);
    __int16 v24 = v9 & 0xFF01;
    char v25 = BYTE2(v9);
    uint64_t v26 = v12;
    char v27 = v11 & 1;
    long long v28 = *(_OWORD *)(v2 + 56);
    long long v29 = *(_OWORD *)(v2 + 72);
    char v30 = v10 & 1;
    uint64_t v13 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v7 + 16))(&v23, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    LOBYTE(v23) = v3;
    *((void *)&v23 + 1) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B298658);
    sub_255C7FE68();
    if ((v22 & 1) == 0)
    {
      BOOL v18 = sub_255BEA05C(4u, v13);
      uint64_t result = swift_bridgeObjectRelease();
      if (v18) {
        char v17 = 4;
      }
      else {
        char v17 = 0;
      }
      uint64_t v16 = a1;
      goto LABEL_17;
    }
    swift_beginAccess();
    if (!*(void *)(v20 + 24))
    {
      if (sub_255BEA05C(1u, v13))
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v17 = 1;
        uint64_t v16 = a1;
        goto LABEL_17;
      }
      BOOL v19 = sub_255BEA05C(0, v13);
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 0;
      uint64_t v16 = a1;
      if (v19) {
        goto LABEL_17;
      }
LABEL_16:
      char v17 = 0;
      goto LABEL_17;
    }
    BOOL v14 = sub_255BEA05C(2u, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!v14)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = a1;
      goto LABEL_16;
    }
    swift_getKeyPath();
    v31[0] = v2;
    sub_255C7D718();
    uint64_t result = swift_release();
    unint64_t v15 = (unint64_t)*(unsigned __int8 *)(v2 + 34) << 16;
    if (v15 != 0x40000)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = a1;
      if (v15 != 0x20000)
      {
        char v17 = 2;
LABEL_17:
        *uint64_t v16 = v17;
        return result;
      }
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

void sub_255A8A58C(uint64_t a1)
{
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_255C7D898();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA4E8);
  sub_255A8A7F4(a1);
  sub_255A8A7F4(a1);
  oslog = sub_255C7D878();
  os_log_type_t v3 = sub_255C80C08();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B298658);
    sub_255C7FE68();
    uint64_t v6 = sub_255C80658();
    sub_255A7BEC4(v6, v7, &v9);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    sub_255A8B184(a1);
    sub_255A8B184(a1);
    _os_log_impl(&dword_255A00000, oslog, v3, "[NowPlayingEnvironmentModifier] changed player style: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v5, -1, -1);
    MEMORY[0x25A297C00](v4, -1, -1);
  }
  else
  {
    sub_255A8B184(a1);
    sub_255A8B184(a1);
  }
}

uint64_t sub_255A8A7A4()
{
  return sub_255C7FE78();
}

uint64_t sub_255A8A7F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_255A8A8B0()
{
  return sub_255C7FE78();
}

uint64_t sub_255A8A900@<X0>(unsigned char *a1@<X8>)
{
  sub_255A8B3CC();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255A8A950()
{
  return sub_255C7E8D8();
}

uint64_t sub_255A8A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_255A87288(a1, a2, a3, (uint64_t)v17);
  v12[0] = v17[0];
  v12[1] = v17[1];
  _OWORD v12[2] = v17[2];
  uint64_t v12[3] = v17[3];
  v12[4] = v17[4];
  v12[5] = v17[5];
  void v12[6] = v17[6];
  v12[7] = v17[7];
  v12[8] = v17[8];
  v12[9] = v17[9];
  v12[10] = v17[10];
  char v13 = v18;
  uint64_t v14 = v19;
  char v15 = v20;
  uint64_t v16 = v21;
  uint64_t v8 = type metadata accessor for NowPlayingEnvironmentModifier();
  MEMORY[0x25A295390](v12, a4, v8, a5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

__n128 sub_255A8AB10@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A8B420((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 80);
  char v5 = *(unsigned char *)(v3 + 88);
  long long v6 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a2 + 16) = v6;
  __n128 result = *(__n128 *)(v3 + 48);
  long long v8 = *(_OWORD *)(v3 + 64);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  *(void *)(a2 + 64) = v4;
  *(unsigned char *)(a2 + 72) = v5;
  return result;
}

uint64_t sub_255A8ABD0(uint64_t a1)
{
  sub_255A8B2AC(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_255A8B420((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D708();
  return swift_release();
}

__n128 sub_255A8ACA8@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255A8B420((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  __n128 result = *(__n128 *)(v3 + 104);
  long long v5 = *(_OWORD *)(v3 + 120);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_255A8AD54()
{
  return swift_release();
}

double sub_255A8AE3C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_255A8AEBC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255A8B384(v1, v2);
  swift_retain();
  return sub_255C7DAD8();
}

uint64_t sub_255A8AF64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29BF50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A8AFD4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_255A8B024@<D0>(_OWORD *a1@<X8>)
{
  sub_255A8B330();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

long long *sub_255A8B07C(long long *a1, unsigned __int8 *a2)
{
  return sub_255A8A228(a1, a2, v2 + 32);
}

uint64_t sub_255A8B0C8@<X0>(uint64_t a1@<X8>)
{
  sub_255A8B234();
  uint64_t result = sub_255C7E8C8();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_255A8B120()
{
  return sub_255C7E8D8();
}

void sub_255A8B178()
{
  sub_255A8A58C(v0 + 32);
}

uint64_t sub_255A8B184(uint64_t a1)
{
  return a1;
}

unint64_t sub_255A8B234()
{
  unint64_t result = qword_26B299188;
  if (!qword_26B299188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299188);
  }
  return result;
}

double *sub_255A8B288()
{
  return sub_255AB36C0(*(double **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_255A8B2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2986B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A8B314()
{
  return sub_255AB358C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_255A8B330()
{
  unint64_t result = qword_26B2982D8;
  if (!qword_26B2982D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2982D8);
  }
  return result;
}

uint64_t sub_255A8B384(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_255A8B3CC()
{
  unint64_t result = qword_26B299270;
  if (!qword_26B299270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299270);
  }
  return result;
}

uint64_t sub_255A8B420(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A8B468()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MCUIText()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MCUIText(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MCUIText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MCUIText(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MCUIText(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MCUIText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MCUIText()
{
  return &type metadata for MCUIText;
}

uint64_t sub_255A8C14C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A8C168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = qword_26B29F398;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  id v3 = (id)qword_26B2AA660;
  uint64_t result = sub_255C7F538();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_255A8C24C()
{
  return MEMORY[0x263F1A820];
}

id sub_255A8C258()
{
  qword_26B297D10 = *MEMORY[0x263F83468];
  return (id)qword_26B297D10;
}

id static UIContentSizeCategory.default.getter()
{
  if (qword_26B2978F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_26B297D10;

  return v0;
}

void static UIContentSizeCategory.default.setter(uint64_t a1)
{
  if (qword_26B2978F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_26B297D10;
  qword_26B297D10 = a1;
}

uint64_t (*static UIContentSizeCategory.default.modify())()
{
  if (qword_26B2978F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id static UIFont.preferredFont(forTextStyle:weight:)(uint64_t a1, double a2)
{
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, a1, a2);
  if (!result) {
    __break(1u);
  }
  return result;
}

id static UIFont.shortPreferredFont(forTextStyle:)(uint64_t a1)
{
  return sub_255A8C470(a1, 256);
}

id static UIFont.emphasizedPreferredFont(forTextStyle:)(uint64_t a1)
{
  return sub_255A8C470(a1, 1024);
}

id static UIFont.shortEmphasizedPreferredFont(forTextStyle:)(uint64_t a1)
{
  return sub_255A8C470(a1, 1280);
}

id sub_255A8C470(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, a1, a2);
  if (!result) {
    __break(1u);
  }
  return result;
}

id static UIFont.font(forTextStyle:symbolicTraits:)(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, a1);
  id v4 = objc_msgSend(v3, sel_fontDescriptorWithSymbolicTraits_, a2);
  if (v4)
  {
    id v5 = v4;

    id v3 = v5;
  }
  id v6 = objc_msgSend(self, sel_fontWithDescriptor_size_, v3, 0.0);

  return v6;
}

id static UIFont.font(forTextStyle:symbolicTraits:contentSizeCategory:minimumContentSizeCategory:maximumContentSizeCategory:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = sub_255C80628();
  uint64_t v12 = v11;
  if (v10 == sub_255C80628() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
LABEL_9:
    uint64_t v16 = sub_255C80628();
    uint64_t v18 = v17;
    if (v16 == sub_255C80628() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_255C81428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        if (sub_255C80D18()) {
          a4 = a5;
        }
        else {
          a4 = a3;
        }
        goto LABEL_19;
      }
    }
    a4 = a3;
    goto LABEL_19;
  }
  char v15 = sub_255C81428();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0 || (sub_255C80D28() & 1) == 0) {
    goto LABEL_9;
  }
LABEL_19:
  id v22 = a4;
  id v23 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v22);

  id v24 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_, a1, v23);
  id v25 = objc_msgSend(v24, sel_fontDescriptorWithSymbolicTraits_, a2);
  if (v25)
  {
    id v26 = v25;

    id v24 = v26;
  }
  id v27 = objc_msgSend(self, sel_fontWithDescriptor_size_, v24, 0.0);

  return v27;
}

double UIFontMetrics.scaledValue(for:to:noSmallerThan:noLargerThan:where:)(void *a1, void *a2, void *a3, uint64_t (*a4)(void), double a5)
{
  id v6 = v5;
  if (a4())
  {
    uint64_t v11 = sub_255C80628();
    uint64_t v13 = v12;
    if (v11 == sub_255C80628() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v17 = a1;
    }
    else
    {
      char v16 = sub_255C81428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = a1;
      if ((v16 & 1) == 0)
      {
        if (sub_255C80D38()) {
          uint64_t v17 = a1;
        }
        else {
          uint64_t v17 = a2;
        }
      }
    }
    id v18 = v17;
    uint64_t v19 = sub_255C80628();
    uint64_t v21 = v20;
    if (v19 == sub_255C80628() && v21 == v22)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = sub_255C81428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        if (sub_255C80D28()) {
          id v25 = a1;
        }
        else {
          id v25 = a3;
        }
        id v26 = v25;

        id v18 = v26;
      }
    }
    id v27 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v18);
    objc_msgSend(v6, sel_scaledValueForValue_compatibleWithTraitCollection_, v27, a5);
    a5 = v28;
  }
  return a5;
}

double UIFontMetrics.scaledValue(for:traitCollection:noSmallerThan:noLargerThan:where:)(void *a1, void *a2, void *a3, uint64_t (*a4)(void), double a5)
{
  id v10 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  double v11 = sub_255A8C9E0(v10, a2, a3, v5, a4, a5);

  return v11;
}

double sub_255A8C9E0(void *a1, void *a2, void *a3, void *a4, uint64_t (*a5)(void), double a6)
{
  if (a5())
  {
    uint64_t v11 = sub_255C80628();
    uint64_t v13 = v12;
    if (v11 == sub_255C80628() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v17 = a1;
    }
    else
    {
      char v16 = sub_255C81428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = a1;
      if ((v16 & 1) == 0)
      {
        if (sub_255C80D38()) {
          uint64_t v17 = a1;
        }
        else {
          uint64_t v17 = a2;
        }
      }
    }
    id v18 = v17;
    uint64_t v19 = sub_255C80628();
    uint64_t v21 = v20;
    if (v19 == sub_255C80628() && v21 == v22)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = sub_255C81428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        if (sub_255C80D28()) {
          id v25 = a1;
        }
        else {
          id v25 = a3;
        }
        id v26 = v25;

        id v18 = v26;
      }
    }
    id v27 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v18);
    objc_msgSend(a4, sel_scaledValueForValue_compatibleWithTraitCollection_, v27, a6);
    a6 = v28;
  }
  return a6;
}

ValueMetadata *type metadata accessor for LineLimit()
{
  return &type metadata for LineLimit;
}

void sub_255A8CBC8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_255A8CBD8()
{
  type metadata accessor for WaveformAudioSampler();
  swift_allocObject();
  uint64_t result = sub_255A8CE74();
  qword_26B2AA548 = result;
  return result;
}

uint64_t sub_255A8CC14()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for ProcessIDManager();
    uint64_t v1 = swift_allocObject();
    swift_retain();
    swift_defaultActor_initialize();
    *(_DWORD *)(v1 + 112) = getpid();
    *(void *)(v1 + 120) = sub_255A91240;
    *(void *)(v1 + 128) = v2;
    swift_release();
    *(void *)(v0 + 72) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_255A8CCD8(int *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(void *)(result + 24))
    {
      swift_retain();
      sub_255C80A18();
      int v3 = v1;
      sub_255A8DD64(&v3);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255A8CD7C()
{
  return MEMORY[0x270FA2498](sub_255A8CD98, 0, 0);
}

uint64_t sub_255A8CD98()
{
  if (qword_26B29C6C8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B2AA548;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_255A16A8C;
  v2[2] = v1;
  return MEMORY[0x270FA2498](sub_255A8DADC, 0, 0);
}

uint64_t sub_255A8CE74()
{
  uint64_t v1 = v0;
  type metadata accessor for FFTProcessor();
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D700);
  swift_allocObject();
  *(void *)(v2 + 16) = sub_255C7DA08();
  *(void *)(v2 + 24) = 0;
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = 0;
  type metadata accessor for Counter();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(void *)(v1 + 72) = 0;
  id v4 = objc_msgSend(self, sel_sharedApplication);
  id v5 = objc_msgSend(v4, sel_applicationState);

  *(unsigned char *)(v1 + 80) = v5 == (id)2;
  sub_255A8CF60();
  sub_255A8D1FC();
  return v1;
}

uint64_t sub_255A8CF60()
{
  uint64_t v15 = *v0;
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  uint64_t v3 = *MEMORY[0x263EF90E8];
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_mainQueue);
  uint64_t v20 = sub_255A91334;
  uint64_t v21 = v0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v17 = 1107296256;
  id v18 = sub_255B3EBE0;
  uint64_t v19 = &block_descriptor_104;
  id v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v7 = objc_msgSend(v2, sel_addObserverForName_object_queue_usingBlock_, v3, 0, v5, v6);
  _Block_release(v6);

  v0[5] = v7;
  swift_unknownObjectRelease();
  id v8 = objc_msgSend(v1, sel_defaultCenter);
  uint64_t v9 = *MEMORY[0x263EF90F8];
  id v10 = objc_msgSend(v4, sel_mainQueue);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  *(void *)(v11 + 24) = v15;
  uint64_t v20 = sub_255A91374;
  uint64_t v21 = (void *)v11;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v17 = 1107296256;
  id v18 = sub_255B3EBE0;
  uint64_t v19 = &block_descriptor_110;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v13 = objc_msgSend(v8, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v10, v12);
  _Block_release(v12);

  v0[6] = v13;
  return swift_unknownObjectRelease();
}

uint64_t sub_255A8D1FC()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  uint64_t v3 = *MEMORY[0x263F833B8];
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_mainQueue);
  id v18 = sub_255A91248;
  uint64_t v19 = v0;
  uint64_t v14 = MEMORY[0x263EF8330];
  uint64_t v15 = 1107296256;
  char v16 = sub_255B3EBE0;
  uint64_t v17 = &block_descriptor_5;
  id v6 = _Block_copy(&v14);
  swift_retain();
  swift_release();
  id v7 = objc_msgSend(v2, sel_addObserverForName_object_queue_usingBlock_, v3, 0, v5, v6);
  _Block_release(v6);

  *(void *)(v0 + 64) = v7;
  swift_unknownObjectRelease();
  id v8 = objc_msgSend(v1, sel_defaultCenter);
  uint64_t v9 = *MEMORY[0x263F83330];
  id v10 = objc_msgSend(v4, sel_mainQueue);
  id v18 = sub_255A91250;
  uint64_t v19 = v0;
  uint64_t v14 = MEMORY[0x263EF8330];
  uint64_t v15 = 1107296256;
  char v16 = sub_255B3EBE0;
  uint64_t v17 = &block_descriptor_91;
  uint64_t v11 = _Block_copy(&v14);
  swift_retain();
  swift_release();
  id v12 = objc_msgSend(v8, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v10, v11);
  _Block_release(v11);

  *(void *)(v0 + 56) = v12;
  return swift_unknownObjectRelease();
}

uint64_t sub_255A8D454()
{
  return sub_255A8D728((uint64_t)&unk_270481B98, (uint64_t)&unk_270481BC0, (uint64_t)&unk_269F22A70);
}

uint64_t sub_255A8D490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_255A8D4B0, 0, 0);
}

uint64_t sub_255A8D4B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 32);
  *(void *)(v0 + 24) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_255A8D528, v1, 0);
}

uint64_t sub_255A8D528(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[3];
  uint64_t v5 = *(void *)(v4 + 112);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v4 + 112) = v7;
    sub_255A90AFC();
    swift_release();
    id v8 = (void *)swift_task_alloc();
    v3[4] = v8;
    *id v8 = v3;
    v8[1] = sub_255A8D5F8;
    _OWORD v8[2] = v3[2];
    a1 = sub_255A8DADC;
    a2 = 0;
    a3 = 0;
  }
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_255A8D5F8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_255A8D6EC()
{
  return sub_255A8D728((uint64_t)&unk_270481B48, (uint64_t)&unk_270481B70, (uint64_t)&unk_269F22A60);
}

uint64_t sub_255A8D728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_255C80988();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = 0;
  _OWORD v11[3] = 0;
  v11[4] = v5;
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_retain();
  if (v12 == 1)
  {
    sub_255A910C0((uint64_t)v8);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    sub_255C80978();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_255C80908();
      uint64_t v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v11;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    void v18[2] = v13;
    void v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_255A8D954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_255A8D974, 0, 0);
}

uint64_t sub_255A8D974()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 32);
  *(void *)(v0 + 24) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_255A8D9EC, v1, 0);
}

uint64_t sub_255A8D9EC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 112);
  BOOL v3 = v2 < 1;
  uint64_t v4 = v2 - 1;
  if (!v3)
  {
    *(void *)(v1 + 112) = v4;
    sub_255A90AFC();
  }
  swift_release();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[4] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_255A91460;
  _OWORD v5[2] = v0[2];
  return MEMORY[0x270FA2498](sub_255A8DADC, 0, 0);
}

uint64_t sub_255A8DABC()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_255A8DADC, 0, 0);
}

uint64_t sub_255A8DADC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 32);
  *(void *)(v0 + 24) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_255A8DB54, v1, 0);
}

uint64_t sub_255A8DB54()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + 112);
  swift_release();
  return MEMORY[0x270FA2498](sub_255A8DBC4, 0, 0);
}

uint64_t sub_255A8DBC4()
{
  uint64_t v1 = v0[2];
  if ((uint64_t)v0[4] < 1 || *(unsigned char *)(v1 + 80) == 1)
  {
    sub_255A8E7EC();
LABEL_5:
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  if (*(void *)(v1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_255A8CC14();
  v0[5] = v4;
  return MEMORY[0x270FA2498](sub_255A8DC88, v4, 0);
}

uint64_t sub_255A8DC88()
{
  *(_DWORD *)(v0 + 48) = *(_DWORD *)(*(void *)(v0 + 40) + 112);
  swift_release();
  return MEMORY[0x270FA2498](sub_255A8DCF8, 0, 0);
}

uint64_t sub_255A8DCF8()
{
  uint64_t v4 = v0;
  int v3 = *(_DWORD *)(v0 + 48);
  sub_255A8DD64(&v3);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255A8DD64(int *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7D898();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *a1;
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, (uint64_t)qword_26B2AA560);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  uint64_t v13 = sub_255C7D878();
  os_log_type_t v14 = sub_255C80C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_255A00000, v13, v14, "WaveformAudioSampler created sampling task", v15, 2u);
    MEMORY[0x25A297C00](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v16 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(_DWORD *)(v17 + 32) = v11;
  *(void *)(v17 + 40) = v2;
  swift_retain();
  *(void *)(v2 + 24) = sub_255B5DB70((uint64_t)v6, (uint64_t)&unk_269F22A50, v17);
  return swift_release();
}

uint64_t sub_255A8DFF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(void *)(v5 + 240) = a5;
  *(_DWORD *)(v5 + 352) = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D158);
  *(void *)(v5 + 248) = v6;
  *(void *)(v5 + 256) = *(void *)(v6 - 8);
  *(void *)(v5 + 264) = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D170);
  *(void *)(v5 + 272) = v7;
  *(void *)(v5 + 280) = *(void *)(v7 - 8);
  *(void *)(v5 + 288) = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D168);
  *(void *)(v5 + 296) = v8;
  *(void *)(v5 + 304) = *(void *)(v8 - 8);
  *(void *)(v5 + 312) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255A8E178, 0, 0);
}

uint64_t sub_255A8E178()
{
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v17 = *(void *)(v0 + 248);
  int v6 = sub_255A16294(*(unsigned int *)(v0 + 352), 15.0);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  type metadata accessor for AudioTapSampleTransformer();
  *(void *)(v0 + 320) = swift_initStackObject();
  *(void *)(v0 + 328) = sub_255B27D80(v12);
  uint64_t v13 = swift_task_alloc();
  *(_DWORD *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v8;
  *(void *)(v13 + 32) = v10;
  *(void *)(v13 + 40) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D148);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, *MEMORY[0x263F8F580], v17);
  sub_255C809E8();
  swift_task_dealloc();
  sub_255C809C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 336) = 0;
  os_log_type_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v14;
  void *v14 = v0;
  v14[1] = sub_255A8E360;
  uint64_t v15 = *(void *)(v0 + 296);
  return MEMORY[0x270FA1F68](v0 + 216, 0, 0, v15);
}

uint64_t sub_255A8E360()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_255A8E45C, 0, 0);
}

uint64_t sub_255A8E45C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 328);
    if (*(void *)(v1 + 16) > 2uLL)
    {
      swift_beginAccess();
      uint64_t v3 = *(char **)(v2 + 24);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v2 + 24) = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v21 = *(void *)(v0 + 328);
        uint64_t v3 = sub_255C57BB0((uint64_t)v3);
        *(void *)(v21 + 24) = v3;
      }
      uint64_t v5 = *(void *)(v0 + 328);
      swift_beginAccess();
      int v6 = *(char **)(v5 + 32);
      char v7 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v5 + 32) = v6;
      if ((v7 & 1) == 0)
      {
        uint64_t v22 = *(void *)(v0 + 328);
        int v6 = sub_255C57BB0((uint64_t)v6);
        *(void *)(v22 + 32) = v6;
      }
      uint64_t v8 = *(void *)(v0 + 328);
      swift_beginAccess();
      uint64_t v9 = *(char **)(v8 + 40);
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v8 + 40) = v9;
      if ((v10 & 1) == 0)
      {
        uint64_t v23 = *(void *)(v0 + 328);
        uint64_t v9 = sub_255C57BB0((uint64_t)v9);
        *(void *)(v23 + 40) = v9;
      }
      uint64_t v11 = *(void *)(v0 + 328);
      swift_beginAccess();
      uint64_t v12 = *(char **)(v11 + 48);
      char v13 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v11 + 48) = v12;
      if ((v13 & 1) == 0)
      {
        uint64_t v24 = *(void *)(v0 + 328);
        uint64_t v12 = sub_255C57BB0((uint64_t)v12);
        *(void *)(v24 + 48) = v12;
      }
      uint64_t v14 = *(void *)(v0 + 336);
      sub_255B28114((float *)v3 + 8, (float *)v6 + 8, (float *)v9 + 8, (float *)v12 + 8, v1, *(void *)(v0 + 328), (char **)(v0 + 224));
      if (v14)
      {
        swift_endAccess();
        swift_endAccess();
        swift_endAccess();
        return swift_endAccess();
      }
      else
      {
        uint64_t v17 = *(void **)(v0 + 328);
        uint64_t v18 = *(void *)(v0 + 224);
        v17[6] = v12;
        swift_endAccess();
        v17[5] = v9;
        swift_endAccess();
        v17[4] = v6;
        swift_endAccess();
        void v17[3] = v3;
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 232) = v18;
        sub_255C7D9F8();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 336) = 0;
        uint64_t v19 = (void *)swift_task_alloc();
        *(void *)(v0 + 344) = v19;
        *uint64_t v19 = v0;
        v19[1] = sub_255A8E360;
        uint64_t v20 = *(void *)(v0 + 296);
        return MEMORY[0x270FA1F68](v0 + 216, 0, 0, v20);
      }
    }
    (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_255A8E7EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C7D898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 24))
  {
    uint64_t v9 = qword_26B29D050;
    swift_retain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v5, (uint64_t)qword_26B2AA560);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    uint64_t v11 = sub_255C7D878();
    os_log_type_t v12 = sub_255C80C08();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v13 = 0;
      _os_log_impl(&dword_255A00000, v11, v12, "WaveformAudioSampler cancelled sampling task", v13, 2u);
      MEMORY[0x25A297C00](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_255C80A18();
    swift_release();
    *(void *)(v1 + 24) = 0;
    swift_release();
  }
  uint64_t v14 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_255C80958();
  swift_retain();
  uint64_t v15 = sub_255C80948();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = MEMORY[0x263F8F500];
  void v16[2] = v15;
  v16[3] = v17;
  void v16[4] = v1;
  sub_255B5DB70((uint64_t)v4, (uint64_t)&unk_269F22A40, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_255A8EAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  sub_255C80958();
  *(void *)(v4 + 32) = sub_255C80948();
  uint64_t v6 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255A8EB58, v6, v5);
}

uint64_t sub_255A8EB58()
{
  swift_release();
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  sub_255C7D9F8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_255A8EBD4()
{
  sub_255A8E7EC();
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);

    swift_unknownObjectRelease();
  }
  uint64_t v4 = v0[6];
  if (v4)
  {
    uint64_t v5 = self;
    swift_unknownObjectRetain();
    id v6 = objc_msgSend(v5, sel_defaultCenter);
    objc_msgSend(v6, sel_removeObserver_, v4);

    swift_unknownObjectRelease();
  }
  uint64_t v7 = v0[7];
  if (v7)
  {
    uint64_t v8 = self;
    swift_unknownObjectRetain();
    id v9 = objc_msgSend(v8, sel_defaultCenter);
    objc_msgSend(v9, sel_removeObserver_, v7);

    swift_unknownObjectRelease();
  }
  uint64_t v10 = v0[8];
  if (v10)
  {
    uint64_t v11 = self;
    swift_unknownObjectRetain();
    id v12 = objc_msgSend(v11, sel_defaultCenter);
    objc_msgSend(v12, sel_removeObserver_, v10);

    swift_unknownObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_255A8ED84()
{
  sub_255A8EBD4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WaveformAudioSampler()
{
  return self;
}

uint64_t sub_255A8EDDC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D6C8);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22A00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22A08);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 24))
  {
    uint64_t v14 = *(void **)(v0 + 24);
LABEL_16:
    swift_bridgeObjectRetain();
    return (uint64_t)v14;
  }
  else
  {
    uint64_t v48 = v13;
    uint64_t v49 = v11;
    uint64_t v50 = v8;
    uint64_t v51 = v5;
    uint64_t v14 = (void *)sub_255A19AC8(MEMORY[0x263F8EE78]);
    int v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = *(void **)(v0 + 16);
    uint64_t v46 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v47 = v17;
    uint64_t v45 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v43 = v0;
    uint64_t v44 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v18 = v50;
    while (1)
    {
      int v52 = v15;
      char v20 = *((unsigned char *)&unk_2704783C0 + v16 + 32);
      uint64_t v53 = v47;
      *(unsigned char *)(swift_allocObject() + 16) = v20;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D700);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D148);
      sub_255A09998(&qword_26B29D6F8, &qword_26B29D700);
      sub_255C7DB18();
      swift_release();
      swift_release();
      sub_255A09998(&qword_269F22A10, &qword_26B29D6C8);
      sub_255C7DB58();
      uint64_t v21 = v4;
      uint64_t v22 = v4;
      uint64_t v23 = v1;
      (*v46)(v22, v1);
      *(unsigned char *)(swift_allocObject() + 16) = v20;
      sub_255A09998(&qword_269F22A18, &qword_269F22A00);
      uint64_t v24 = v48;
      uint64_t v25 = v51;
      sub_255C7DB18();
      swift_release();
      (*v45)(v18, v25);
      sub_255A09998(&qword_269F22A20, &qword_269F22A08);
      uint64_t v26 = v49;
      uint64_t v27 = sub_255C7DB48();
      (*v44)(v24, v26);
      uint64_t v53 = (void *)v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F22A28);
      sub_255A09998(&qword_269F22A30, &qword_269F22A28);
      uint64_t v28 = sub_255C7DAF8();
      swift_release();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v53 = v14;
      unint64_t v31 = sub_255B39E98(v20);
      uint64_t v32 = v14[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        break;
      }
      char v35 = v30;
      if (v14[3] >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_255B8411C();
        }
      }
      else
      {
        sub_255B80F0C(v34, isUniquelyReferenced_nonNull_native);
        unint64_t v36 = sub_255B39E98(v20);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_19;
        }
        unint64_t v31 = v36;
      }
      uint64_t v1 = v23;
      uint64_t v14 = v53;
      uint64_t v4 = v21;
      if (v35)
      {
        uint64_t v19 = v53[7];
        swift_release();
        *(void *)(v19 + 8 * v31) = v28;
      }
      else
      {
        v53[(v31 >> 6) + 8] |= 1 << v31;
        *(unsigned char *)(v14[6] + v31) = v20;
        *(void *)(v14[7] + 8 * v31) = v28;
        uint64_t v38 = v14[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_18;
        }
        id v14[2] = v40;
      }
      swift_bridgeObjectRelease();
      int v15 = 1;
      uint64_t v16 = 1u;
      if (v52)
      {
        *(void *)(v43 + 24) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_255C814B8();
    __break(1u);
  }
  return result;
}

BOOL sub_255A8F3B4(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 16) != 0;
}

uint64_t sub_255A8F3C8@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = sub_255C7D898();
  MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  sub_255A8F8FC(*a1, v5, (uint64_t)v9);
  return sub_255A90D90((uint64_t)v9, a3);
}

void *sub_255A8F8FC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = &unk_2704782E0;
  uint64_t v5 = *(void *)(a1 + 16);
  if (a2) {
    uint64_t v4 = &unk_270478318;
  }
  uint64_t v6 = *v4 - 1;
  if (v5 != v6)
  {
    sub_255A90DEC();
    swift_allocError();
    uint64_t *v14 = v6;
    v14[1] = v5;
    return (void *)swift_willThrow();
  }
  uint64_t result = (void *)MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v22 = (void *)MEMORY[0x263F8EE78];
    uint64_t result = (void *)sub_255B16D0C(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t result = v22;
    uint64_t v10 = (float *)(a1 + 32);
    unint64_t v11 = v22[2];
    do
    {
      float v12 = *v10;
      uint64_t v23 = result;
      unint64_t v13 = result[3];
      if (v11 >= v13 >> 1)
      {
        sub_255B16D0C(v13 > 1, v11 + 1, 1);
        uint64_t result = v23;
      }
      result[2] = v11 + 1;
      *(double *)&result[v11 + 4] = v12;
      ++v10;
      ++v11;
      --v5;
    }
    while (v5);
  }
  unint64_t v15 = result[2];
  if (a2)
  {
    if (v15)
    {
      if (v15 != 1)
      {
        if (v15 >= 3)
        {
          if (v15 != 3)
          {
            if (v15 >= 5)
            {
              if (v15 != 5)
              {
                uint64_t v16 = result[4];
                uint64_t v17 = result[5];
                uint64_t v18 = result[6];
                uint64_t v19 = result[7];
                uint64_t v20 = result[9];
LABEL_26:
                uint64_t v21 = result[8];
                uint64_t result = (void *)swift_bridgeObjectRelease();
                *(void *)a3 = v16;
                *(void *)(a3 + 8) = v17;
                *(void *)(a3 + 16) = v18;
                *(void *)(a3 + 24) = v19;
                *(void *)(a3 + 32) = v21;
                *(void *)(a3 + 40) = v20;
                *(unsigned char *)(a3 + 48) = a2 & 1;
                return result;
              }
              goto LABEL_33;
            }
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (!v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 == 1)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v15 < 3)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v15 == 3)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v15 >= 5)
  {
    uint64_t v20 = 0;
    uint64_t v16 = result[4];
    uint64_t v17 = result[5];
    uint64_t v18 = result[6];
    uint64_t v19 = result[7];
    goto LABEL_26;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_255A8FB00(char a1)
{
  int v1 = a1 & 1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D708);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7D898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255A8EDDC();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_255B39E98(v1), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_269F1FD60 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v6, (uint64_t)qword_269F32F40);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
    unint64_t v15 = sub_255C7D878();
    os_log_type_t v16 = sub_255C80BF8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v28 = v2;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v27 = v3;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      int v29 = v1;
      uint64_t v20 = v19;
      *(void *)&v31[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v26[1] = v18 + 4;
      LOBYTE(v30) = v29;
      uint64_t v21 = sub_255C80658();
      uint64_t v30 = sub_255A7BEC4(v21, v22, (uint64_t *)v31);
      sub_255C80F18();
      uint64_t v2 = v28;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255A00000, v15, v16, "No value publisher found for %s, expected exactly one publisher per dataKind.", v18, 0xCu);
      swift_arrayDestroy();
      uint64_t v23 = v20;
      int v1 = v29;
      MEMORY[0x25A297C00](v23, -1, -1);
      uint64_t v24 = v18;
      uint64_t v3 = v27;
      MEMORY[0x25A297C00](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    memset(v31, 0, sizeof(v31));
    BOOL v32 = v1 != 0;
    sub_255C7DA68();
    sub_255A09998(&qword_269F229F8, &qword_26B29D708);
    uint64_t v13 = sub_255C7DAF8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t sub_255A8FE9C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FFTProcessor()
{
  return self;
}

uint64_t sub_255A8FF00()
{
  swift_release();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for ProcessIDManager()
{
  return self;
}

uint64_t sub_255A8FF5C()
{
  return v0;
}

uint64_t sub_255A8FF68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7D898();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_26B2AA560);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  char v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_255A00000, v12, v13, "WaveformAudioSampler received UIApplication.willEnterForegroundNotification", v14, 2u);
    MEMORY[0x25A297C00](v14, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  int v16 = *((unsigned __int8 *)a2 + 80);
  *((unsigned char *)a2 + 80) = 0;
  if (v16 == 1)
  {
    uint64_t v17 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = 0;
    void v18[3] = 0;
    void v18[4] = v3;
    sub_255B5DB70((uint64_t)v6, (uint64_t)&unk_269F22A90, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_255A90208(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7D898();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_26B2AA560);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  char v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_255A00000, v12, v13, "WaveformAudioSampler received UIApplication.didEnterBackgroundNotification", v14, 2u);
    MEMORY[0x25A297C00](v14, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  char v16 = *((unsigned char *)a2 + 80);
  *((unsigned char *)a2 + 80) = 1;
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = 0;
    void v18[3] = 0;
    void v18[4] = v3;
    sub_255B5DB70((uint64_t)v6, (uint64_t)&unk_269F22A88, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_255A904A8()
{
  uint64_t v0 = sub_255C7D898();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA560);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = sub_255C7D878();
  os_log_type_t v6 = sub_255C80C08();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_255A00000, v5, v6, "WaveformAudioSampler received mediaServicesWereLostNotification", v7, 2u);
    MEMORY[0x25A297C00](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_255A8E7EC();
}

uint64_t sub_255A90648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = a2;
  v9[5] = a3;
  swift_retain();
  sub_255B5DB70((uint64_t)v7, (uint64_t)&unk_269F22AA0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_255A9074C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_255C7D898();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255A9080C, 0, 0);
}

uint64_t sub_255A9080C()
{
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26B2AA560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_255C7D878();
  os_log_type_t v6 = sub_255C80C08();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_255A00000, v5, v6, "WaveformAudioSampler received mediaServicesWereResetNotification", v7, 2u);
    MEMORY[0x25A297C00](v7, -1, -1);
  }
  uint64_t v9 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v10 = v0[3];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  if (qword_26B29C6C8 != -1) {
    swift_once();
  }
  sub_255A8E7EC();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[6] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_255A909EC;
  _OWORD v11[2] = v0[2];
  return MEMORY[0x270FA2498](sub_255A8DADC, 0, 0);
}

uint64_t sub_255A909EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_255A90AFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA560);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  uint64_t v7 = sub_255C7D878();
  os_log_type_t v8 = sub_255C80C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134349056;
    v11[1] = *(void *)(v1 + 112);
    sub_255C80F18();
    swift_release();
    _os_log_impl(&dword_255A00000, v7, v8, "WaveformAudioSampler subscribers count: %{public}ld", v9, 0xCu);
    MEMORY[0x25A297C00](v9, -1, -1);
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_255A90CE4()
{
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for Counter()
{
  return self;
}

uint64_t sub_255A90D38()
{
  return swift_deallocObject();
}

uint64_t sub_255A90D48@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_255B524CC(*a1, *(unsigned char *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_255A90D78()
{
  return swift_deallocObject();
}

uint64_t sub_255A90D88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255A8F3C8(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_255A90D90(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_255A90DEC()
{
  unint64_t result = qword_26B29D6A0;
  if (!qword_26B29D6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D6A0);
  }
  return result;
}

uint64_t sub_255A90E40()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A90E48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A16A8C;
  return sub_255A8EAC0(a1, v4, v5, v6);
}

uint64_t sub_255A90EFC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A90F3C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  int v6 = *(_DWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  os_log_type_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *os_log_type_t v8 = v2;
  v8[1] = sub_255A16A8C;
  return sub_255A8DFF0(a1, v4, v5, v6, v7);
}

uint64_t sub_255A91000(uint64_t a1)
{
  return sub_255A15288(a1, *(_DWORD *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 24));
}

uint64_t sub_255A91010()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A91018()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A16A8C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_255A8D974, 0, 0);
}

uint64_t sub_255A910C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A91120()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A91158()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A91160()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A160B0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_255A8D4B0, 0, 0);
}

uint64_t sub_255A91208()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255A91240(int *a1)
{
  return sub_255A8CCD8(a1);
}

uint64_t sub_255A91248(uint64_t a1)
{
  return sub_255A8FF68(a1, v1);
}

uint64_t sub_255A91250(uint64_t a1)
{
  return sub_255A90208(a1, v1);
}

uint64_t sub_255A91258()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255A91290()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A16A8C;
  return MEMORY[0x270FA2498](sub_255A8CD98, 0, 0);
}

uint64_t sub_255A91334()
{
  return sub_255A904A8();
}

uint64_t sub_255A9133C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255A91374(uint64_t a1)
{
  return sub_255A90648(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_255A9137C()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255A91384(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A16A8C;
  return sub_255A9074C(a1, v4, v5, v6);
}

ValueMetadata *_s25UnexpectedValueCountErrorVMa()
{
  return &_s25UnexpectedValueCountErrorVN;
}

uint64_t sub_255A9147C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v64 = a1;
  uint64_t v78 = a2;
  uint64_t v70 = sub_255C7EA18();
  uint64_t v4 = *(void *)(v70 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v70);
  uint64_t v66 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (uint64_t)&v61 - v7;
  uint64_t v8 = sub_255C802C8();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v68 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for VolumeSliderWrapper();
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22AB0);
  MEMORY[0x270FA5388](v62);
  uint64_t v69 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22AB8);
  MEMORY[0x270FA5388](v67);
  uint64_t v76 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22AC0);
  MEMORY[0x270FA5388](v71);
  uint64_t v77 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22AC8);
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *((void *)v2 + 1);
  char v79 = *v2;
  uint64_t v80 = v17;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE88();
  if (!*((void *)v2 + 2))
  {
    type metadata accessor for NowPlayingRouteObserver();
    sub_255A94A40(&qword_26B29AA00, (void (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver);
    uint64_t result = sub_255C7E618();
    __break(1u);
    return result;
  }
  uint64_t v18 = v81;
  uint64_t v19 = v82;
  char v20 = v83;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v21 = v81;
  if (!v81) {
    goto LABEL_5;
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (!v22)
  {

LABEL_5:
    uint64_t v22 = 0;
  }
  uint64_t v24 = (uint64_t)v77;
  uint64_t v23 = v78;
  *(void *)char v12 = v18;
  *((void *)v12 + 1) = v19;
  v12[16] = v20;
  *((void *)v12 + 3) = v22;
  uint64_t v25 = (uint64_t *)&v12[v10[6]];
  *uint64_t v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = &v12[v10[7]];
  *(void *)uint64_t v26 = swift_getKeyPath();
  v26[8] = 0;
  uint64_t v27 = (uint64_t *)&v12[v10[8]];
  _s17TransportControlsCMa();
  sub_255A94A40((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
  *uint64_t v27 = sub_255C7E628();
  v27[1] = v28;
  uint64_t v29 = v65;
  sub_255ABA66C(v65);
  uint64_t v30 = v66;
  uint64_t v31 = v70;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v66, *MEMORY[0x263F19968], v70);
  LOBYTE(v25) = sub_255C7DCB8();
  BOOL v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v30, v31);
  v32((char *)v29, v31);
  uint64_t v34 = v72;
  uint64_t v33 = v73;
  char v35 = (unsigned int *)MEMORY[0x263F1B968];
  if ((v25 & 1) == 0) {
    char v35 = (unsigned int *)MEMORY[0x263F1B998];
  }
  unint64_t v36 = v68;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v68, *v35, v73);
  uint64_t v37 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v69[*(int *)(v62 + 36)], v36, v33);
  sub_255A93C64((uint64_t)v12, v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  sub_255A93CC8((uint64_t)v12);
  uint64_t v38 = *((void *)v3 + 1);
  LOBYTE(v81) = *v3;
  uint64_t v82 = v38;
  sub_255C7FE68();
  if (v79) {
    double v39 = 1.05;
  }
  else {
    double v39 = 1.0;
  }
  sub_255C80378();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = v76;
  sub_255A09540(v37, v76, &qword_269F22AB0);
  uint64_t v45 = v44 + *(int *)(v67 + 36);
  *(double *)uint64_t v45 = v39;
  *(double *)(v45 + 8) = v39;
  *(void *)(v45 + 16) = v41;
  *(void *)(v45 + 24) = v43;
  sub_255A095A4(v37, &qword_269F22AB0);
  uint64_t v46 = sub_255C802A8();
  uint64_t v47 = *((void *)v3 + 1);
  LOBYTE(v81) = *v3;
  uint64_t v82 = v47;
  sub_255C7FE68();
  char v48 = v79;
  sub_255A09540(v44, v24, &qword_269F22AB8);
  uint64_t v49 = v24 + *(int *)(v71 + 36);
  *(void *)uint64_t v49 = v46;
  *(unsigned char *)(v49 + 8) = v48;
  sub_255A095A4(v44, &qword_269F22AB8);
  LOBYTE(v46) = sub_255C7F1F8();
  sub_255C7DC08();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v58 = v75;
  sub_255A09540(v24, v75, &qword_269F22AC0);
  uint64_t v59 = v58 + *(int *)(v74 + 36);
  *(unsigned char *)uint64_t v59 = v46;
  *(void *)(v59 + 8) = v51;
  *(void *)(v59 + 16) = v53;
  *(void *)(v59 + 24) = v55;
  *(void *)(v59 + 32) = v57;
  *(unsigned char *)(v59 + 40) = 0;
  sub_255A095A4(v24, &qword_269F22AC0);
  return sub_255A93D24(v58, v23);
}

uint64_t sub_255A91BF8@<X0>(uint64_t a1@<X8>)
{
  sub_255C7FE58();
  *(unsigned char *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  type metadata accessor for NowPlayingRouteObserver();
  sub_255A94A40(&qword_26B29AA00, (void (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver);
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v2;
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(_s17VolumeControlViewVMa() + 40));
  *uint64_t v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  return swift_storeEnumTagMultiPayload();
}

id sub_255A91CF0()
{
  uint64_t v0 = sub_255C7EA18();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v32 - v5;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12348]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE88);
  sub_255C7EFB8();
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v32[0], sel_onTouchDown_, 1);
  swift_release();
  sub_255C7EFB8();
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v32[0], sel_onTouchUpInside_, 64);
  swift_release();
  objc_msgSend(v7, sel_setExpansionFactor_, 2.28571429);
  objc_msgSend(v7, sel_setHitRectInsets_, -10.0, 0.0, -10.0, 0.0);
  type metadata accessor for VolumeSliderWrapper();
  sub_255ABA66C((uint64_t)v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x263F19968], v0);
  char v8 = sub_255C7DCB8();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  v9(v6, v0);
  if (v8)
  {
    if (qword_26B29EAA0 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_26B2AA5F8;
  }
  else
  {
    if (qword_269F1FE90 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_269F32FF0;
  }
  uint64_t v11 = (void *)v10[1];
  char v12 = (void *)v10[2];
  id v13 = (id)*v10;
  id v14 = v11;
  id v15 = v12;
  objc_msgSend(v7, sel_setTintColor_, v13);
  objc_msgSend(v7, sel_setMinimumTrackTintColor_, v14);
  objc_msgSend(v7, sel_setMaximumTrackTintColor_, v15);

  id v16 = objc_msgSend(self, sel_mainBundle);
  uint64_t v17 = sub_255B4C6B8();
  uint64_t v19 = v18;

  v32[0] = v17;
  v32[1] = v19;
  sub_255C806E8();
  sub_255C806E8();
  char v20 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v20);

  id v21 = objc_msgSend(self, sel_configurationWithPointSize_, 14.0);
  id v22 = v7;
  id v23 = v21;
  uint64_t v24 = (void *)sub_255C805F8();
  uint64_t v25 = self;
  id v26 = objc_msgSend(v25, sel_systemImageNamed_withConfiguration_, v24, v23);

  objc_msgSend(v22, sel_setMinimumValueImage_, v26);
  id v27 = v22;
  id v28 = v23;
  uint64_t v29 = (void *)sub_255C805F8();
  id v30 = objc_msgSend(v25, sel_systemImageNamed_withConfiguration_, v29, v28);

  objc_msgSend(v27, sel_setMaximumValueImage_, v30);
  return v27;
}

void sub_255A921D8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v52 = a2;
  uint64_t v5 = type metadata accessor for VolumeSliderWrapper();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v49 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v46 - v8;
  uint64_t v9 = sub_255C7E8B8();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22AF0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_255C7EA18();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setGroupRoute_, *(void *)(v3 + 24));
  uint64_t v48 = v5;
  sub_255ABA66C((uint64_t)v19);
  uint64_t v20 = *(void *)(v3 + 8);
  char v21 = *(unsigned char *)(v3 + 16);
  uint64_t v54 = *(void *)v3;
  uint64_t v55 = v20;
  char v56 = v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  MEMORY[0x25A295850](&v57, v22);
  LOBYTE(v5) = v57;
  uint64_t v23 = *(int *)(v13 + 56);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v19, v16);
  v15[v23] = v5;
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v15, v16);
  int v25 = *MEMORY[0x263F19968];
  if (v5)
  {
    if (v24 == v25)
    {
      if (qword_269F1FE88 != -1) {
        swift_once();
      }
      id v26 = &qword_269F32FD8;
LABEL_10:
      id v27 = (void *)v26[1];
      id v28 = (void *)v26[2];
      id v29 = (id)*v26;
      id v30 = v27;
      id v31 = v28;
      goto LABEL_18;
    }
    if (qword_269F1FE98 != -1) {
      swift_once();
    }
    BOOL v32 = &qword_269F33008;
  }
  else
  {
    if (v24 == v25)
    {
      if (qword_26B29EAA0 != -1) {
        swift_once();
      }
      id v26 = &qword_26B2AA5F8;
      goto LABEL_10;
    }
    if (qword_269F1FE90 != -1) {
      swift_once();
    }
    BOOL v32 = &qword_269F32FF0;
  }
  uint64_t v33 = (void *)*v32;
  uint64_t v34 = (void *)v32[1];
  char v35 = (void *)v32[2];
  uint64_t v47 = *(void (**)(char *, uint64_t))(v17 + 8);
  id v29 = v33;
  id v30 = v34;
  id v31 = v35;
  v47(v15, v16);
LABEL_18:
  objc_msgSend(a1, sel_setTintColor_, v29);
  objc_msgSend(a1, sel_setMinimumTrackTintColor_, v30);
  objc_msgSend(a1, sel_setMaximumTrackTintColor_, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE88);
  sub_255C7EFC8();
  sub_255A12CE4();
  sub_255C7E8C8();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
  char v36 = v54;
  uint64_t v37 = v53;
  sub_255A93C64(v3, v53);
  if ((v36 & 1) == 0)
  {
    sub_255A93CC8(v37);
    BOOL v45 = 1;
LABEL_24:
    objc_msgSend(a1, sel__setIsOffScreen_, v45);

    return;
  }
  uint64_t v38 = v48;
  uint64_t v39 = *(void *)(v37 + *(int *)(v48 + 32));
  if (v39)
  {
    swift_beginAccess();
    char v40 = *(unsigned char *)(v39 + 58);
    uint64_t v41 = v49;
    sub_255A93C64(v37, v49);
    if (v40)
    {
      uint64_t v42 = v41 + *(int *)(v38 + 28);
      uint64_t v43 = *(void *)v42;
      char v44 = *(unsigned char *)(v42 + 8);
      sub_255A0877C(*(void *)v42, v44);
      sub_255ABB578(v43, v44, &v57);
      sub_255A087D0(v43, v44);
      sub_255A93CC8(v41);
      sub_255A93CC8(v37);
      BOOL v45 = v57 != 2;
    }
    else
    {
      sub_255A93CC8(v41);
      sub_255A93CC8(v37);
      BOOL v45 = 0;
    }
    goto LABEL_24;
  }
  _s17TransportControlsCMa();
  sub_255A94A40((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
  sub_255C7E618();
  __break(1u);
}

uint64_t sub_255A927AC(void *a1)
{
  char v8 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  sub_255C7FFE8();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = self;
  aBlock[4] = sub_255A93388;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AE4914;
  aBlock[3] = &block_descriptor_12;
  uint64_t v4 = _Block_copy(aBlock);
  id v5 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_, 2, v4, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
  _Block_release(v4);
  return swift_release();
}

void sub_255A92910(void *a1)
{
  id v2 = objc_msgSend(self, sel_currentTraitCollection);
  id v3 = objc_msgSend(v2, sel_accessibilityContrast);

  if (v3)
  {
    if (qword_269F1FE98 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_269F33008;
  }
  else
  {
    if (qword_269F1FE88 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_269F32FD8;
  }
  id v5 = (void *)v4[1];
  uint64_t v6 = (void *)v4[2];
  id v9 = (id)*v4;
  id v7 = v5;
  id v8 = v6;
  objc_msgSend(a1, sel_setTintColor_, v9);
  objc_msgSend(a1, sel_setMinimumTrackTintColor_, v7);
  objc_msgSend(a1, sel_setMaximumTrackTintColor_, v8);
}

uint64_t sub_255A92A80(void *a1)
{
  char v8 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  sub_255C7FFE8();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  id v3 = self;
  aBlock[4] = sub_255A92E54;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AE4914;
  aBlock[3] = &block_descriptor_6;
  uint64_t v4 = _Block_copy(aBlock);
  id v5 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_, 2, v4, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
  _Block_release(v4);
  return swift_release();
}

void sub_255A92BE0(void *a1)
{
  id v2 = objc_msgSend(self, sel_currentTraitCollection);
  id v3 = objc_msgSend(v2, sel_accessibilityContrast);

  if (v3)
  {
    if (qword_269F1FE90 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_269F32FF0;
  }
  else
  {
    if (qword_26B29EAA0 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_26B2AA5F8;
  }
  id v5 = (void *)v4[1];
  uint64_t v6 = (void *)v4[2];
  id v9 = (id)*v4;
  id v7 = v5;
  id v8 = v6;
  objc_msgSend(a1, sel_setTintColor_, v9);
  objc_msgSend(a1, sel_setMinimumTrackTintColor_, v7);
  objc_msgSend(a1, sel_setMaximumTrackTintColor_, v8);
}

uint64_t sub_255A92D50(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_255A92DB0()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VolumeSliderWrapper.Coordinator()
{
  return self;
}

uint64_t sub_255A92E1C()
{
  return swift_deallocObject();
}

void sub_255A92E54()
{
  sub_255A92BE0(*(void **)(v0 + 16));
}

uint64_t sub_255A92E68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = *((unsigned char *)v1 + 16);
  type metadata accessor for VolumeSliderWrapper.Coordinator();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v5;
  *a1 = v6;
  swift_retain();

  return swift_retain();
}

uint64_t sub_255A92ED4(uint64_t a1, char a2, int a3, int a4, id a5)
{
  if (a2) {
    return 0x4024000000000000;
  }
  else {
    return a1;
  }
}

uint64_t sub_255A92F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255A94A40(&qword_26B29E9B8, (void (*)(uint64_t))type metadata accessor for VolumeSliderWrapper);

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_255A92FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255A94A40(&qword_26B29E9B8, (void (*)(uint64_t))type metadata accessor for VolumeSliderWrapper);

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_255A93080()
{
}

uint64_t sub_255A930D8()
{
  sub_255A93348();
  if (qword_269F1FF00 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v0 = sub_255C80D98();
  swift_retain();
  uint64_t v1 = sub_255C80D98();
  if (qword_269F1FF08 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t result = sub_255C80D98();
  qword_26B2AA5F8 = v0;
  qword_26B2AA600 = v1;
  qword_26B2AA608 = result;
  return result;
}

uint64_t sub_255A931B0()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_labelColor);
  id v2 = objc_msgSend(v0, sel_whiteColor);
  sub_255A93348();
  if (qword_269F1FF08 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t result = sub_255C80D98();
  qword_269F32FD8 = (uint64_t)v1;
  qword_269F32FE0 = (uint64_t)v2;
  qword_269F32FE8 = result;
  return result;
}

id sub_255A93274(uint64_t a1)
{
  return sub_255A932AC(a1, (SEL *)&selRef_systemGrayColor, &qword_269F32FF0, &qword_269F32FF8, &qword_269F33000);
}

id sub_255A93290(uint64_t a1)
{
  return sub_255A932AC(a1, (SEL *)&selRef_labelColor, &qword_269F33008, &qword_269F33010, &qword_269F33018);
}

id sub_255A932AC(uint64_t a1, SEL *a2, void *a3, void *a4, void *a5)
{
  id v9 = self;
  id v10 = [v9 *a2];
  id v11 = [v9 *a2];
  id result = objc_msgSend(v9, sel_systemFillColor);
  *a3 = v10;
  *a4 = v11;
  *a5 = result;
  return result;
}

unint64_t sub_255A93348()
{
  unint64_t result = qword_269F22AA8;
  if (!qword_269F22AA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F22AA8);
  }
  return result;
}

void sub_255A93388()
{
  sub_255A92910(*(void **)(v0 + 16));
}

uint64_t _s17VolumeControlViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

void sub_255A933AC()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_255A93444(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    a1[3] = a2[3];
    uint64_t v6 = *(int *)(a3 + 40);
    id v7 = (uint64_t *)((char *)a1 + v6);
    id v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *id v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_255A9357C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255A9363C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (void *)(a1 + v5);
  id v7 = (void *)(a2 + v5);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255A9371C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 40);
    id v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_255A095A4(a1 + v6, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *id v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_255A93838(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (char *)a1 + v5;
  id v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255A9390C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 40);
    id v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_255A095A4(a1 + v6, (uint64_t *)&unk_26B298500);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255A93A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A93A3C);
}

uint64_t sub_255A93A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_255A93AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A93B10);
}

uint64_t sub_255A93B10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_255A93BBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for VolumeSliderWrapper()
{
  uint64_t result = qword_26B29E9C8;
  if (!qword_26B29E9C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255A93C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VolumeSliderWrapper();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A93CC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VolumeSliderWrapper();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255A93D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255A93D8C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = (void *)a2[3];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    id v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    sub_255A0877C(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    *(unsigned char *)(v15 + 8) = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = (void *)(a1 + v19);
    char v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    *uint64_t v20 = v22;
    v20[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_255A93F14(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_255A087D0(*(void *)(a1 + *(int *)(a2 + 28)), *(unsigned char *)(a1 + *(int *)(a2 + 28) + 8));

  return swift_release();
}

uint64_t sub_255A93FF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  swift_retain();
  swift_retain();
  id v11 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_255A0877C(*(void *)v15, v17);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  *uint64_t v19 = v21;
  v19[1] = v22;
  swift_retain();
  return a1;
}

uint64_t sub_255A9412C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a1 + 24);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  id v8 = v7;

  if (a1 != a2)
  {
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)(a1 + v9);
    id v11 = (void *)(a2 + v9);
    sub_255A095A4(a1 + v9, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_255A0877C(*(void *)v15, v17);
  uint64_t v18 = *(void *)v14;
  char v19 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v17;
  sub_255A087D0(v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_retain();
  swift_release();
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  return a1;
}

uint64_t sub_255A942BC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_255A943D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  if (a1 != a2)
  {
    uint64_t v7 = a3[6];
    id v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_255A095A4(a1 + v7, (uint64_t *)&unk_26B298500);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  uint64_t v16 = *(void *)v13;
  char v17 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = (_BYTE)v14;
  sub_255A087D0(v16, v17);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (void *)(a2 + v18);
  *(void *)(a1 + v18) = *v20;
  swift_release();
  *(void *)(v19 + 8) = v20[1];
  return a1;
}

uint64_t sub_255A9454C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255A94560);
}

uint64_t sub_255A94560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255A94614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255A94628);
}

uint64_t sub_255A94628(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255A946D4()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255A94788()
{
  return sub_255A94874(&qword_269F22AD0, &qword_269F22AC8, (void (*)(void))sub_255A947CC);
}

unint64_t sub_255A947CC()
{
  unint64_t result = qword_269F22AD8;
  if (!qword_269F22AD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22AC0);
    sub_255A94874(&qword_269F22AE0, &qword_269F22AB8, (void (*)(void))sub_255A948F0);
    sub_255A9499C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22AD8);
  }
  return result;
}

uint64_t sub_255A94874(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255A948F0()
{
  unint64_t result = qword_269F22AE8;
  if (!qword_269F22AE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22AB0);
    sub_255A94A40(&qword_26B29E9C0, (void (*)(uint64_t))type metadata accessor for VolumeSliderWrapper);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22AE8);
  }
  return result;
}

unint64_t sub_255A9499C()
{
  unint64_t result = qword_26B29B9F8;
  if (!qword_26B29B9F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B9F8);
  }
  return result;
}

uint64_t sub_255A949F8()
{
  return sub_255A94A40(&qword_26B29E9C0, (void (*)(uint64_t))type metadata accessor for VolumeSliderWrapper);
}

uint64_t sub_255A94A40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A94A94()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C7FD78();
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v3 = sub_255C80648();
  uint64_t v5 = v4;
  uint64_t result = sub_255C7F558();
  qword_26B29D948 = v3;
  unk_26B29D950 = v5;
  qword_26B29D958 = result;
  unk_26B29D960 = v7;
  byte_26B29D968 = v8 & 1;
  qword_26B29D970 = v9;
  return result;
}

uint64_t static TrailingBadge.explicit.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B29D8A0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_26B29D950;
  uint64_t v3 = qword_26B29D958;
  uint64_t v4 = unk_26B29D960;
  char v5 = byte_26B29D968;
  uint64_t v6 = qword_26B29D970;
  *(void *)a1 = qword_26B29D948;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A94CD4()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C7FD78();
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v3 = sub_255C80648();
  uint64_t v5 = v4;
  uint64_t result = sub_255C7F558();
  qword_269F22AF8 = v3;
  unk_269F22B00 = v5;
  qword_269F22B08 = result;
  unk_269F22B10 = v7;
  byte_269F22B18 = v8 & 1;
  qword_269F22B20 = v9;
  return result;
}

uint64_t static TrailingBadge.koreaAgeRestricted.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FEA8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22B00;
  uint64_t v3 = qword_269F22B08;
  uint64_t v4 = unk_269F22B10;
  char v5 = byte_269F22B18;
  uint64_t v6 = qword_269F22B20;
  *(void *)a1 = qword_269F22AF8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A94F20()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7FDC8();
  sub_255C80588();
  id v3 = v2;
  sub_255C7D6B8();
  uint64_t v4 = sub_255C80648();
  uint64_t v6 = v5;
  uint64_t result = sub_255C7F558();
  qword_269F22B28 = v4;
  unk_269F22B30 = v6;
  qword_269F22B38 = result;
  unk_269F22B40 = v8;
  byte_269F22B48 = v9 & 1;
  qword_269F22B50 = v10;
  return result;
}

uint64_t static TrailingBadge.dolby.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FEB0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22B30;
  uint64_t v3 = qword_269F22B38;
  uint64_t v4 = unk_269F22B40;
  char v5 = byte_269F22B48;
  uint64_t v6 = qword_269F22B50;
  *(void *)a1 = qword_269F22B28;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A9516C()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7FDC8();
  sub_255C80588();
  id v3 = v2;
  sub_255C7D6B8();
  uint64_t v4 = sub_255C80648();
  uint64_t v6 = v5;
  uint64_t result = sub_255C7F558();
  qword_269F22B58 = v4;
  unk_269F22B60 = v6;
  qword_269F22B68 = result;
  unk_269F22B70 = v8;
  byte_269F22B78 = v9 & 1;
  qword_269F22B80 = v10;
  return result;
}

uint64_t static TrailingBadge.lossless.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FEB8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22B60;
  uint64_t v3 = qword_269F22B68;
  uint64_t v4 = unk_269F22B70;
  char v5 = byte_269F22B78;
  uint64_t v6 = qword_269F22B80;
  *(void *)a1 = qword_269F22B58;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A953C4()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C7FD78();
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v3 = sub_255C80648();
  uint64_t v5 = v4;
  uint64_t result = sub_255C7F558();
  qword_269F22B88 = v3;
  unk_269F22B90 = v5;
  qword_269F22B98 = result;
  unk_269F22BA0 = v7;
  byte_269F22BA8 = v8 & 1;
  qword_269F22BB0 = v9;
  return result;
}

uint64_t static TrailingBadge.favorite.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FEC0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22B90;
  uint64_t v3 = qword_269F22B98;
  uint64_t v4 = unk_269F22BA0;
  char v5 = byte_269F22BA8;
  uint64_t v6 = qword_269F22BB0;
  *(void *)a1 = qword_269F22B88;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A955FC()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7FDC8();
  sub_255C80588();
  id v3 = v2;
  sub_255C7D6B8();
  uint64_t v4 = sub_255C80648();
  uint64_t v6 = v5;
  uint64_t result = sub_255C7F558();
  qword_269F22BB8 = v4;
  unk_269F22BC0 = v6;
  qword_269F22BC8 = result;
  unk_269F22BD0 = v8;
  byte_269F22BD8 = v9 & 1;
  qword_269F22BE0 = v10;
  return result;
}

uint64_t static TrailingBadge.immersive.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FEC8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22BC0;
  uint64_t v3 = qword_269F22BC8;
  uint64_t v4 = unk_269F22BD0;
  char v5 = byte_269F22BD8;
  uint64_t v6 = qword_269F22BE0;
  *(void *)a1 = qword_269F22BB8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A95850()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C7FD78();
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v3 = sub_255C80648();
  uint64_t v5 = v4;
  uint64_t result = sub_255C7F558();
  qword_269F22BE8 = v3;
  unk_269F22BF0 = v5;
  qword_269F22BF8 = result;
  unk_269F22C00 = v7;
  byte_269F22C08 = v8 & 1;
  qword_269F22C10 = v9;
  return result;
}

uint64_t static TrailingBadge.navigation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FED0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22BF0;
  uint64_t v3 = qword_269F22BF8;
  uint64_t v4 = unk_269F22C00;
  char v5 = byte_269F22C08;
  uint64_t v6 = qword_269F22C10;
  *(void *)a1 = qword_269F22BE8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255A95A94()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C7FD78();
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v3 = sub_255C80648();
  uint64_t v5 = v4;
  uint64_t result = sub_255C7F558();
  qword_269F22C18 = v3;
  unk_269F22C20 = v5;
  qword_269F22C28 = result;
  unk_269F22C30 = v7;
  byte_269F22C38 = v8 & 1;
  qword_269F22C40 = v9;
  return result;
}

uint64_t static TrailingBadge.shuffle.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F1FED8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269F22C20;
  uint64_t v3 = qword_269F22C28;
  uint64_t v4 = unk_269F22C30;
  char v5 = byte_269F22C38;
  uint64_t v6 = qword_269F22C40;
  *(void *)a1 = qword_269F22C18;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_255A093E4(v3, v4, v5);

  return swift_bridgeObjectRetain();
}

uint64_t static TrailingBadge.== infix(_:_:)(void *a1, void *a2)
{
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_255C81428() & 1) == 0) {
    return 0;
  }

  return sub_255C7F498();
}

uint64_t sub_255A95DA0(void *a1, void *a2)
{
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_255C81428() & 1) == 0) {
    return 0;
  }

  return sub_255C7F498();
}

uint64_t TrailingBadge.customized(_:)@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[1];
  uint64_t v17 = *v2;
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = *((unsigned __int8 *)v2 + 32);
  uint64_t v9 = v2[5];
  swift_bridgeObjectRetain();
  sub_255A093E4(v6, v7, v8);
  swift_bridgeObjectRetain();
  uint64_t v10 = a1(v6, v7, v8, v9);
  uint64_t v12 = v11;
  LOBYTE(a1) = v13;
  uint64_t v15 = v14;
  sub_255A094C0(v6, v7, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = a1 & 1;
  *(void *)(a2 + 40) = v15;
  return result;
}

uint64_t TrailingBadgesView.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_255A95FD8(v4);
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_255A96270(a1);
  uint64_t v14 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = v9 & 1;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 48) = v14;
  return result;
}

uint64_t sub_255A95FD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 64);
  uint64_t v6 = v1 - 1;
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    sub_255A093E4(v3, v4, v5);
  }
  else
  {
    sub_255A093E4(*(void *)(a1 + 48), v4, v5);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_255A093E4(v3, v4, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_255A093E4(v3, v4, v5);
    swift_bridgeObjectRetain();
    uint64_t v25 = v4;
    uint64_t v7 = a1 + 120;
    uint64_t v26 = v3;
    uint64_t v8 = v3;
    char v9 = v5;
    do
    {
      uint64_t v31 = v6;
      uint64_t v29 = v8;
      uint64_t v30 = v4;
      uint64_t v10 = *(void *)(v7 - 24);
      uint64_t v11 = *(void *)(v7 - 16);
      char v12 = *(unsigned char *)(v7 - 8);
      v7 += 48;
      swift_bridgeObjectRetain();
      sub_255A093E4(v10, v11, v12);
      swift_bridgeObjectRetain();
      char v28 = v9 & 1;
      uint64_t v13 = sub_255C7F488();
      uint64_t v15 = v14;
      char v17 = v16 & 1;
      uint64_t v18 = sub_255C7F488();
      uint64_t v27 = v19;
      char v21 = v20 & 1;
      uint64_t v22 = v15;
      uint64_t v8 = v18;
      char v23 = v17;
      char v9 = v21;
      sub_255A094C0(v13, v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v27;
      sub_255A094C0(v10, v11, v12);
      swift_bridgeObjectRelease();
      sub_255A094C0(v29, v30, v28);
      swift_bridgeObjectRelease();
      uint64_t v6 = v31 - 1;
    }
    while (v31 != 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_255A094C0(v26, v25, v5);
    swift_bridgeObjectRelease();
    sub_255A094C0(v26, v25, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  return v3;
}

uint64_t sub_255A96270(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t v7 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = v5;
    uint64_t v14 = v4;
    sub_255A093E4(v4, v5, v6);
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 120;
    do
    {
      uint64_t v9 = *(void *)(v8 - 24);
      uint64_t v10 = *(void *)(v8 - 16);
      char v11 = *(unsigned char *)(v8 - 8);
      v8 += 48;
      swift_bridgeObjectRetain();
      sub_255A093E4(v9, v10, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_255C806E8();
      swift_bridgeObjectRetain();
      sub_255C806E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_255A094C0(v9, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_255A094C0(v14, v13, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t TrailingBadgesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D118);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  char v23 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_255C7FDA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22C48);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22C50);
  MEMORY[0x270FA5388](v27);
  int v24 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1 + 8);
  uint64_t v13 = *(void *)(v1 + 16);
  char v14 = *(unsigned char *)(v1 + 24);
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t v15 = *(void *)(v1 + 40);
  uint64_t v25 = *(void *)(v1 + 48);
  uint64_t v26 = v15;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B538], v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = *(int *)(v3 + 36);
  uint64_t v19 = v23;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v23 + v18, v8, v5);
  *uint64_t v19 = KeyPath;
  sub_255A96DF0((uint64_t)v19, (uint64_t)&v10[*(int *)(v29 + 36)]);
  *(void *)uint64_t v10 = v12;
  *((void *)v10 + 1) = v13;
  v10[16] = v14;
  *((void *)v10 + 3) = v16;
  sub_255A093E4(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_255A093E4(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_255A095A4((uint64_t)v19, &qword_26B29D118);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_255A094C0(v12, v13, v14);
  swift_bridgeObjectRelease();
  sub_255C7E968();
  sub_255A96E58();
  uint64_t v20 = (uint64_t)v24;
  sub_255C7F848();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255A095A4((uint64_t)v10, &qword_269F22C48);
  uint64_t v30 = v26;
  uint64_t v31 = v25;
  sub_255A1D78C();
  sub_255C7E3E8();
  return sub_255A095A4(v20, &qword_269F22C50);
}

uint64_t MCUINamespace<A>.appending(badges:customized:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = a3;
  uint64_t v6 = sub_255C7FDA8();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = v6;
  MEMORY[0x270FA5388](v6);
  char v79 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C7F4E8();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v70 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D128);
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v71 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D0B0);
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63[1] = *(void *)v3;
  uint64_t v68 = *(void *)(v3 + 8);
  int v67 = *(unsigned __int8 *)(v3 + 16);
  uint64_t v66 = *(void *)(v3 + 24);
  uint64_t v72 = a1;
  uint64_t v12 = sub_255A95FD8(a1);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17 & 1;
  sub_255A093E4(v12, v13, v17 & 1);
  swift_bridgeObjectRetain();
  uint64_t v19 = a2(v12, v14, v18, v16);
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_255A094C0(v12, v14, v18);
  swift_bridgeObjectRelease();
  sub_255A094C0(v12, v14, v18);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a1 + 16);
  sub_255A093E4(v19, v21, v23);
  swift_bridgeObjectRetain();
  BOOL v25 = v24 == 0;
  if (v24) {
    unint64_t v26 = 0xA200000000000000;
  }
  else {
    unint64_t v26 = 0xE000000000000000;
  }
  unint64_t v73 = v26;
  if (v24) {
    uint64_t v27 = 9273570;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v25) {
    unint64_t v28 = 0xE000000000000000;
  }
  else {
    unint64_t v28 = 0xA300000000000000;
  }
  uint64_t v29 = sub_255C7F488();
  uint64_t v31 = v30;
  v63[0] = v30;
  uint64_t v84 = v32;
  int v34 = v33 & 1;
  sub_255A094C0(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_255A094C0(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v85 = v27;
  uint64_t v86 = v28;
  sub_255A093E4(v29, v31, v34);
  unint64_t v69 = sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_255C7F548();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  uint64_t v40 = sub_255C7F488();
  uint64_t v42 = v41;
  char v44 = v43;
  uint64_t v46 = v45;
  sub_255A094C0(v35, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t v85 = v40;
  uint64_t v86 = v42;
  char v87 = v44 & 1;
  uint64_t v88 = v46;
  uint64_t v47 = v70;
  uint64_t v65 = v29;
  uint64_t v48 = v63[0];
  int v64 = v34;
  sub_255C7F4D8();
  uint64_t v49 = v29;
  uint64_t v50 = v48;
  sub_255A094C0(v49, v48, v34);
  swift_bridgeObjectRelease();
  uint64_t v51 = v71;
  sub_255C7F5F8();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v47, v77);
  sub_255A094C0(v85, v86, v87);
  swift_bridgeObjectRelease();
  uint64_t v53 = v81;
  uint64_t v52 = v82;
  uint64_t v54 = v79;
  (*(void (**)(char *, void, uint64_t))(v81 + 104))(v79, *MEMORY[0x263F1B538], v82);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v56 = (uint64_t)v74;
  uint64_t v57 = (uint64_t *)&v74[*(int *)(v75 + 36)];
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D118);
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v57 + *(int *)(v58 + 28), v54, v52);
  *uint64_t v57 = KeyPath;
  uint64_t v59 = v78;
  uint64_t v60 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v56, v51, v80);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v60);
  uint64_t v85 = sub_255A96270(v72);
  uint64_t v86 = v61;
  sub_255A96F30();
  sub_255C7F888();
  sub_255A094C0(v65, v50, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_255A095A4(v56, &qword_26B29D0B0);
}

uint64_t sub_255A96DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_255A96E58()
{
  unint64_t result = qword_269F22C58;
  if (!qword_269F22C58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22C48);
    sub_255A96ED4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22C58);
  }
  return result;
}

unint64_t sub_255A96ED4()
{
  unint64_t result = qword_26B29D110;
  if (!qword_26B29D110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D110);
  }
  return result;
}

unint64_t sub_255A96F30()
{
  unint64_t result = qword_26B29D0A8;
  if (!qword_26B29D0A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D0B0);
    swift_getOpaqueTypeConformance2();
    sub_255A96ED4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D0A8);
  }
  return result;
}

uint64_t sub_255A96FDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for TrailingBadge(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_255A094C0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrailingBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_255A093E4(v5, v6, v7);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrailingBadge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_255A093E4(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_255A094C0(v7, v8, v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrailingBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_255A094C0(v6, v7, v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrailingBadge(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrailingBadge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrailingBadge()
{
  return &type metadata for TrailingBadge;
}

uint64_t destroy for TrailingBadgesView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_255A094C0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrailingBadgesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_255A093E4(v4, v5, v6);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrailingBadgesView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A093E4(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_255A094C0(v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrailingBadgesView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_255A094C0(v5, v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrailingBadgesView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrailingBadgesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrailingBadgesView()
{
  return &type metadata for TrailingBadgesView;
}

uint64_t sub_255A974F0()
{
  return sub_255A975C0(qword_269F22C60, &qword_269F22C50, (void (*)(void))sub_255A96E58);
}

unint64_t sub_255A9752C()
{
  unint64_t result = qword_26B29F220;
  if (!qword_26B29F220)
  {
    sub_255C7F0D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29F220);
  }
  return result;
}

uint64_t sub_255A97584()
{
  return sub_255A975C0(&qword_26B29D0B8, &qword_26B29D0C0, (void (*)(void))sub_255A96F30);
}

uint64_t sub_255A975C0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_255A9752C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255A97640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_255C80E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t ContentLookupItem.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ContentLookupItem.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t sub_255A97718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for ContentLookupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t ContentLookup.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v12 = type metadata accessor for ContentLookupItem();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  *((void *)v15 + 5) = a5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32))(&v15[v14], a1, v12);
  *a6 = sub_255A97BE4;
  a6[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v15;
  return result;
}

uint64_t sub_255A978F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v20 = a7;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v10 = type metadata accessor for ContentLookupItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v19 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v16, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  return sub_255A97CA0((uint64_t)v16, (uint64_t)v14, a3, v20);
}

uint64_t type metadata accessor for ContentLookupItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255A97AB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[15]);
  return swift_deallocObject();
}

uint64_t sub_255A97BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_255A978F8(a1, v10, v5, v6, v7, v8, a2);
}

uint64_t sub_255A97CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for ContentLookup1() + 52);
  uint64_t v7 = type metadata accessor for ContentLookupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
}

uint64_t ContentLookup.init<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v12 = type metadata accessor for ContentLookupItem();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = type metadata accessor for ContentLookupItem();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (v15 + v14 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a3;
  *((void *)v19 + 3) = a4;
  *((void *)v19 + 4) = a5;
  *((void *)v19 + 5) = a6;
  *((void *)v19 + 6) = a7;
  *((void *)v19 + 7) = a8;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(&v19[v15], a1, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v19[v18], a2, v16);
  *a9 = sub_255A98388;
  a9[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v19;
  return result;
}

uint64_t sub_255A97F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  v27[1] = a5;
  _OWORD v27[2] = a8;
  uint64_t v31 = a9;
  uint64_t v32 = a6;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v28 = a1;
  uint64_t v33 = a4;
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v36 = a10;
  uint64_t v14 = type metadata accessor for ContentLookupItem();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v18 = type metadata accessor for ContentLookupItem();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v27 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, v28, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v29, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v30, v14);
  return sub_255A984B4((uint64_t)v24, (uint64_t)v22, (uint64_t)v17, a4, v31);
}

uint64_t sub_255A9818C()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  uint64_t v3 = *((void *)v0 + 4);
  uint64_t v4 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v5 = *(void *)(*(void *)v4 + 64);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v7 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  unint64_t v8 = (v6 + v5 + *(unsigned __int8 *)(*(void *)v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v9 = &v0[v6];
  uint64_t v10 = *(void (**)(char *, uint64_t))(*(void *)(v1 - 8) + 8);
  v10(v9, v1);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(&v9[v4[15]], v2);
  v10(&v0[v8], v1);
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(&v0[v8 + v7[15]], v3);
  return swift_deallocObject();
}

uint64_t sub_255A98388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  return sub_255A97F3C(a1, (uint64_t)v2 + v12, (uint64_t)v2+ ((v12 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v4, v5, v6, v7, v8, a2, v9);
}

uint64_t sub_255A984B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v7 = type metadata accessor for ContentLookup2();
  uint64_t v8 = a5 + *(int *)(v7 + 68);
  uint64_t v9 = type metadata accessor for ContentLookupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  uint64_t v10 = a5 + *(int *)(v7 + 72);
  uint64_t v11 = type metadata accessor for ContentLookupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a3, v11);
}

uint64_t ContentLookup.init<A, B, C>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v28 = type metadata accessor for ContentLookupItem();
  uint64_t v14 = *(void *)(v28 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v26 = type metadata accessor for ContentLookupItem();
  uint64_t v16 = *(void *)(v26 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  unint64_t v18 = (v24 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = type metadata accessor for ContentLookupItem();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (v18 + v17 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a4;
  *((void *)v22 + 3) = a5;
  *((void *)v22 + 4) = a6;
  *((void *)v22 + 5) = a7;
  *((void *)v22 + 6) = a8;
  *((void *)v22 + 7) = a10;
  *((void *)v22 + 8) = a11;
  *((void *)v22 + 9) = a12;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v22[v24], a1, v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v22[v18], a2, v26);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v22[v21], a3, v19);
  *a9 = sub_255A98E60;
  a9[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v22;
  return result;
}

uint64_t sub_255A98880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v42 = a9;
  uint64_t v43 = a8;
  uint64_t v35 = a1;
  uint64_t v36 = a7;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v33 = a6;
  uint64_t v34 = a12;
  uint64_t v40 = a13;
  uint64_t v41 = a4;
  uint64_t v31 = a11;
  uint64_t v44 = a5;
  uint64_t v45 = a8;
  uint64_t v46 = a10;
  uint64_t v47 = a13;
  uint64_t v37 = type metadata accessor for ContentLookupItem();
  uint64_t v16 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v18 = (char *)&v31 - v17;
  uint64_t v44 = a5;
  uint64_t v45 = a7;
  uint64_t v46 = a10;
  uint64_t v47 = a12;
  uint64_t v32 = type metadata accessor for ContentLookupItem();
  uint64_t v19 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  unint64_t v21 = (char *)&v31 - v20;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = a10;
  uint64_t v47 = a11;
  uint64_t v22 = type metadata accessor for ContentLookupItem();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v31 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v35, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v38, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v39, v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v41, v37);
  return sub_255A98FF0((uint64_t)v28, (uint64_t)v26, (uint64_t)v21, (uint64_t)v18, a5, v42);
}

uint64_t sub_255A98B90()
{
  uint64_t v1 = v0[2];
  uint64_t v16 = v0[4];
  uint64_t v17 = v0[3];
  uint64_t v15 = v0[5];
  uint64_t v2 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v3 = *(void *)(*(void *)v2 + 64);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v5 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v6 = *(void *)(*(void *)v5 + 64);
  unint64_t v7 = (v4 + v3 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v8 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  unint64_t v9 = (v7 + v6 + *(unsigned __int8 *)(*(void *)v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = (char *)v0 + v4;
  uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v1 - 8) + 8);
  v11(v10, v1);
  (*(void (**)(char *))(*(void *)(v17 - 8) + 8))(&v10[v2[15]]);
  unint64_t v12 = (char *)v0 + v7;
  v11(v12, v1);
  (*(void (**)(char *))(*(void *)(v16 - 8) + 8))(&v12[v5[15]]);
  uint64_t v13 = (char *)v0 + v9;
  v11(v13, v1);
  (*(void (**)(char *))(*(void *)(v15 - 8) + 8))(&v13[v8[15]]);
  return swift_deallocObject();
}

uint64_t sub_255A98E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[5];
  uint64_t v19 = v2[4];
  uint64_t v20 = v2[3];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v7 = v2[9];
  uint64_t v9 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = *(void *)(v12 + 64);
  unint64_t v16 = (v11 + v14) & ~v13;
  uint64_t v17 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  return sub_255A98880(a1, (uint64_t)v2 + v11, (uint64_t)v2 + v16, (uint64_t)v2+ ((v16 + v15 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v3, v20, v19, v4, a2, v5, v6, v8, v7);
}

uint64_t sub_255A98FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v7 = (int *)type metadata accessor for ContentLookup3();
  uint64_t v8 = a6 + v7[21];
  uint64_t v9 = type metadata accessor for ContentLookupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  uint64_t v10 = a6 + v7[22];
  uint64_t v11 = type metadata accessor for ContentLookupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a3, v11);
  uint64_t v12 = a6 + v7[23];
  uint64_t v13 = type metadata accessor for ContentLookupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a4, v13);
}

uint64_t ContentLookup.init<A, B, C, D>(_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v40 = type metadata accessor for ContentLookupItem();
  uint64_t v38 = *(void *)(v40 - 8);
  uint64_t v16 = *(void *)(v38 + 64);
  unint64_t v33 = (*(unsigned __int8 *)(v38 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v37 = type metadata accessor for ContentLookupItem();
  uint64_t v17 = *(void *)(v37 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v16 + v18;
  uint64_t v20 = *(void *)(v17 + 64);
  unint64_t v21 = (v33 + v19) & ~v18;
  unint64_t v31 = v21;
  uint64_t v35 = type metadata accessor for ContentLookupItem();
  uint64_t v22 = *(void *)(v35 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = *(void *)(v22 + 64);
  unint64_t v30 = (v21 + v24) & ~v23;
  uint64_t v34 = type metadata accessor for ContentLookupItem();
  uint64_t v26 = *(void *)(v34 - 8);
  unint64_t v27 = (v30 + v25 + *(unsigned __int8 *)(v26 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = a5;
  *((void *)v28 + 3) = a6;
  *((void *)v28 + 4) = a7;
  *((void *)v28 + 5) = a8;
  *((void *)v28 + 6) = a10;
  *((void *)v28 + 7) = a11;
  *((void *)v28 + 8) = a12;
  *((void *)v28 + 9) = a13;
  *((void *)v28 + 10) = a14;
  *((void *)v28 + 11) = a15;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(&v28[v33], a1, v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v28[v31], a2, v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v28[v30], a3, v35);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v28[v27], a4, v34);
  *a9 = sub_255A99CB0;
  a9[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v28;
  return result;
}

uint64_t sub_255A994EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v40 = a8;
  uint64_t v53 = a9;
  uint64_t v54 = a7;
  uint64_t v52 = a5;
  uint64_t v48 = a3;
  uint64_t v46 = a2;
  uint64_t v38 = a14;
  uint64_t v42 = a15;
  uint64_t v43 = a1;
  uint64_t v49 = a16;
  uint64_t v50 = a4;
  uint64_t v36 = a13;
  uint64_t v45 = a10;
  uint64_t v51 = a11;
  uint64_t v55 = a6;
  uint64_t v56 = a11;
  uint64_t v57 = a12;
  uint64_t v58 = a16;
  uint64_t v47 = type metadata accessor for ContentLookupItem();
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v41 = (char *)&v36 - v18;
  uint64_t v55 = a6;
  uint64_t v56 = a10;
  uint64_t v57 = a12;
  uint64_t v58 = a15;
  uint64_t v39 = type metadata accessor for ContentLookupItem();
  uint64_t v19 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (char *)&v36 - v20;
  uint64_t v55 = a6;
  uint64_t v56 = a8;
  uint64_t v57 = a12;
  uint64_t v58 = a14;
  uint64_t v21 = type metadata accessor for ContentLookupItem();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v36 - v23;
  uint64_t v55 = a6;
  uint64_t v56 = v54;
  uint64_t v57 = a12;
  uint64_t v58 = a13;
  uint64_t v25 = type metadata accessor for ContentLookupItem();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v36 - v28;
  MEMORY[0x270FA5388](v27);
  unint64_t v31 = (char *)&v36 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v43, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v46, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v48, v21);
  uint64_t v33 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v37, v50, v39);
  uint64_t v34 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v41, v52, v47);
  return sub_255A99ED0((uint64_t)v31, (uint64_t)v29, (uint64_t)v24, v33, v34, a6, v53);
}

uint64_t sub_255A998F4()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v18 = *((void *)v0 + 4);
  uint64_t v19 = *((void *)v0 + 3);
  uint64_t v20 = *((void *)v0 + 6);
  uint64_t v17 = *((void *)v0 + 5);
  uint64_t v2 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v3 = *(void *)(*(void *)v2 + 64);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v5 = *(void *)(*(void *)v4 + 64);
  unint64_t v15 = (v16 + v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(*(void *)v6 + 64);
  unint64_t v10 = (v15 + v8) & ~v7;
  uint64_t v11 = (int *)(type metadata accessor for ContentLookupItem() - 8);
  unint64_t v12 = (v10 + v9 + *(unsigned __int8 *)(*(void *)v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v11 + 80);
  uint64_t v13 = *(void (**)(char *, uint64_t))(*(void *)(v1 - 8) + 8);
  v13(&v0[v16], v1);
  (*(void (**)(char *))(*(void *)(v19 - 8) + 8))(&v0[v16 + v2[15]]);
  v13(&v0[v15], v1);
  (*(void (**)(char *))(*(void *)(v18 - 8) + 8))(&v0[v15 + v4[15]]);
  v13(&v0[v10], v1);
  (*(void (**)(char *))(*(void *)(v17 - 8) + 8))(&v0[v10 + v6[15]]);
  v13(&v0[v12], v1);
  (*(void (**)(char *))(*(void *)(v20 - 8) + 8))(&v0[v12 + v11[15]]);
  return swift_deallocObject();
}

uint64_t sub_255A99CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[2];
  uint64_t v5 = v2[6];
  uint64_t v4 = v2[7];
  uint64_t v28 = v2[8];
  uint64_t v29 = v2[3];
  uint64_t v24 = v2[5];
  uint64_t v25 = v2[9];
  uint64_t v6 = v2[10];
  uint64_t v26 = v2[11];
  uint64_t v27 = v2[4];
  uint64_t v7 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64);
  unint64_t v14 = (v9 + v12) & ~v11;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v13 + v17;
  uint64_t v19 = *(void *)(v16 + 64);
  uint64_t v20 = v5;
  unint64_t v21 = (v14 + v18) & ~v17;
  uint64_t v22 = *(void *)(type metadata accessor for ContentLookupItem() - 8);
  return sub_255A994EC(a1, (uint64_t)v2 + v9, (uint64_t)v2 + v14, (uint64_t)v2 + v21, (uint64_t)v2+ ((v21 + v19 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), v3, v29, v27, a2, v24, v20, v4, v28, v25, v15, v26);
}

uint64_t sub_255A99ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  uint64_t v7 = (int *)type metadata accessor for ContentLookup4();
  uint64_t v8 = a7 + v7[25];
  uint64_t v9 = type metadata accessor for ContentLookupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  uint64_t v10 = a7 + v7[26];
  uint64_t v11 = type metadata accessor for ContentLookupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a3, v11);
  uint64_t v12 = a7 + v7[27];
  uint64_t v13 = type metadata accessor for ContentLookupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a4, v13);
  uint64_t v14 = a7 + v7[28];
  uint64_t v15 = type metadata accessor for ContentLookupItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a5, v15);
}

uint64_t sub_255A9A0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v13 - v9;
  (*v2)(v8);
  sub_255A20F54(v7);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  sub_255A20F54(v10);
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v3);
}

uint64_t ContentLookup1.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v22 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C80E88();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v23 = (char *)&v22 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = v2 + *(int *)(a1 + 52);
  uint64_t v15 = *(void *)(a1 + 32);
  if (sub_255C80578())
  {
    uint64_t v16 = *(void *)(a1 + 40);
    uint64_t v25 = v13;
    uint64_t v26 = v4;
    uint64_t v27 = v15;
    uint64_t v28 = v16;
    uint64_t v17 = type metadata accessor for ContentLookupItem();
    uint64_t v18 = v22;
    sub_255A20F54(v14 + *(int *)(v17 + 52));
    sub_255A20F54(v18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v11, v7);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v11, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v11, v7);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v11, v7);
    uint64_t v16 = *(void *)(a1 + 40);
  }
  uint64_t v29 = v16;
  swift_getWitnessTable();
  sub_255A20F54(v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v7);
}

uint64_t ContentLookup2.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v76 = a2;
  uint64_t v62 = *(void *)(*(void *)(a1 + 32) - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v60 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v59 - v8;
  uint64_t v9 = *(void *)(v7 + 24);
  uint64_t v71 = v10;
  uint64_t v11 = sub_255C7EBE8();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v69 = (char *)&v59 - v13;
  uint64_t v68 = v9;
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int v64 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v66 = (char *)&v59 - v17;
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  uint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v59 - v23;
  uint64_t v73 = v25;
  uint64_t v26 = sub_255C7EBE8();
  uint64_t v74 = *(void *)(v26 - 8);
  uint64_t v75 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v72 = (char *)&v59 - v27;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v28(v24, v3, v18);
  uint64_t v29 = *(int *)(a1 + 68);
  uint64_t v65 = v3;
  uint64_t v63 = v3 + v29;
  ((void (*)(char *))v28)(v22);
  uint64_t v77 = a1;
  uint64_t v30 = *(void *)(a1 + 40);
  char v31 = sub_255C80578();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v19 + 8);
  v32(v22, v18);
  if (v31)
  {
    v32(v24, v18);
    uint64_t v33 = v77;
    uint64_t v34 = *(void *)(v77 + 48);
    uint64_t v35 = v68;
    uint64_t v82 = v18;
    uint64_t v83 = v68;
    uint64_t v84 = v30;
    uint64_t v85 = v34;
    uint64_t v36 = type metadata accessor for ContentLookupItem();
    uint64_t v37 = v66;
    sub_255A20F54(v63 + *(int *)(v36 + 52));
    uint64_t v38 = (uint64_t)v64;
    sub_255A20F54(v37);
    uint64_t v39 = *(void *)(v33 + 56);
    uint64_t v40 = (uint64_t)v69;
    sub_255A44030(v38, v35);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v41(v38, v35);
    uint64_t v78 = v34;
    uint64_t v79 = v39;
    uint64_t v42 = v73;
    swift_getWitnessTable();
    uint64_t v43 = v72;
    sub_255A44030(v40, v42);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v40, v42);
    v41((uint64_t)v37, v35);
    uint64_t v44 = v43;
  }
  else
  {
    uint64_t v67 = v30;
    uint64_t v45 = v71;
    uint64_t v46 = v65 + *(int *)(v77 + 72);
    v28(v22, v46, v18);
    char v47 = sub_255C80578();
    v32(v22, v18);
    v32(v24, v18);
    if (v47)
    {
      uint64_t v48 = v77;
      uint64_t v39 = *(void *)(v77 + 56);
      uint64_t v82 = v18;
      uint64_t v83 = v45;
      uint64_t v84 = v67;
      uint64_t v85 = v39;
      uint64_t v49 = type metadata accessor for ContentLookupItem();
      uint64_t v50 = v61;
      sub_255A20F54(v46 + *(int *)(v49 + 52));
      uint64_t v51 = (uint64_t)v60;
      sub_255A20F54(v50);
      uint64_t v34 = *(void *)(v48 + 48);
      uint64_t v52 = (uint64_t)v69;
      sub_255A44128(v51, v68, v45);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
      v53(v51, v45);
      uint64_t v80 = v34;
      uint64_t v81 = v39;
      uint64_t v54 = v73;
      swift_getWitnessTable();
      uint64_t v44 = v72;
      sub_255A44030(v52, v54);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v52, v54);
      v53((uint64_t)v50, v45);
    }
    else
    {
      uint64_t v34 = *(void *)(v77 + 48);
      uint64_t v39 = *(void *)(v77 + 56);
      uint64_t v90 = v34;
      uint64_t v91 = v39;
      uint64_t v55 = v73;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v44 = v72;
      sub_255A44128(WitnessTable, v55, MEMORY[0x263F1BA08]);
    }
  }
  uint64_t v88 = v34;
  uint64_t v89 = v39;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = MEMORY[0x263F1BA00];
  uint64_t v57 = v75;
  swift_getWitnessTable();
  sub_255A20F54(v44);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v44, v57);
}

uint64_t ContentLookup3.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t v106 = a2;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = sub_255C7EBE8();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v90 = (uint64_t)&v83 - v8;
  uint64_t v88 = v5;
  uint64_t v84 = *(void *)(v5 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v83 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v87 = (char *)&v83 - v12;
  uint64_t v86 = *(void *)(*(void *)(v4 + 32) - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v85 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v94 = (char *)&v83 - v15;
  uint64_t v16 = *(void *)(v4 + 24);
  int v97 = v17;
  uint64_t v18 = sub_255C7EBE8();
  uint64_t v98 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v100 = (char *)&v83 - v20;
  uint64_t WitnessTable = v16;
  uint64_t v93 = *(void *)(v16 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v92 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v99 = (char *)&v83 - v24;
  uint64_t v25 = *(void *)(v4 + 16);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v23);
  uint64_t v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  char v31 = (char *)&v83 - v30;
  uint64_t v104 = v32;
  uint64_t v105 = v6;
  uint64_t v103 = sub_255C7EBE8();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v101 = (char *)&v83 - v33;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v34(v31, v3, v25);
  uint64_t v35 = *(int *)(v4 + 84);
  uint64_t v95 = v3;
  uint64_t v36 = v3 + v35;
  v34(v29, v3 + v35, v25);
  uint64_t v107 = v4;
  uint64_t v37 = *(char **)(v4 + 48);
  uint64_t v91 = *((void *)v37 + 1);
  LOBYTE(v4) = sub_255C80578();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v26 + 8);
  v38(v29, v25);
  if (v4)
  {
    v38(v31, v25);
    uint64_t v39 = v107;
    uint64_t v40 = *(void *)(v107 + 56);
    uint64_t v41 = WitnessTable;
    uint64_t v120 = v25;
    uint64_t v121 = WitnessTable;
    long long v122 = v37;
    uint64_t v123 = v40;
    uint64_t v42 = type metadata accessor for ContentLookupItem();
    uint64_t v43 = v99;
    sub_255A20F54(v36 + *(int *)(v42 + 52));
    uint64_t v44 = (uint64_t)v92;
    sub_255A20F54(v43);
    uint64_t v45 = *(void *)(v39 + 64);
    uint64_t v46 = (void (*)(void, void))v100;
    sub_255A44030(v44, v41);
    int v97 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    v97(v44, v41);
    uint64_t v110 = v40;
    uint64_t v111 = v45;
    uint64_t v47 = v104;
    swift_getWitnessTable();
    uint64_t v108 = *(void *)(v39 + 72);
    uint64_t v48 = v108;
    uint64_t v109 = MEMORY[0x263F1BA00];
    swift_getWitnessTable();
    uint64_t v49 = v101;
    sub_255A44030((uint64_t)v46, v47);
    (*(void (**)(void, uint64_t))(v98 + 8))(v46, v47);
    v97((uint64_t)v99, v41);
    uint64_t v50 = v48;
    uint64_t v51 = v45;
    uint64_t v52 = v49;
    uint64_t v53 = MEMORY[0x263F1BA00];
  }
  else
  {
    uint64_t v99 = v37;
    uint64_t v54 = v95 + *(int *)(v107 + 88);
    v34(v29, v54, v25);
    char v55 = sub_255C80578();
    v38(v29, v25);
    if (v55)
    {
      v38(v31, v25);
      uint64_t v56 = v107;
      uint64_t v51 = *(void *)(v107 + 64);
      uint64_t v120 = v25;
      uint64_t v57 = (uint64_t)v97;
      uint64_t v121 = (uint64_t)v97;
      long long v122 = v99;
      uint64_t v123 = v51;
      uint64_t v58 = v54 + *(int *)(type metadata accessor for ContentLookupItem() + 52);
      uint64_t v59 = v94;
      sub_255A20F54(v58);
      uint64_t v60 = (uint64_t)v85;
      sub_255A20F54(v59);
      uint64_t v40 = *(void *)(v56 + 56);
      sub_255A44128(v60, WitnessTable, v57);
      uint64_t v99 = *(char **)(v86 + 8);
      ((void (*)(uint64_t, uint64_t))v99)(v60, v57);
      uint64_t v114 = v40;
      uint64_t v115 = v51;
      uint64_t v61 = v104;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v50 = *(void *)(v56 + 72);
      uint64_t v112 = v50;
      uint64_t v53 = MEMORY[0x263F1BA00];
      uint64_t v113 = MEMORY[0x263F1BA00];
      swift_getWitnessTable();
      uint64_t v52 = v101;
      uint64_t v62 = (void (*)(void, void))v100;
      sub_255A44030((uint64_t)v100, v61);
      (*(void (**)(void, uint64_t))(v98 + 8))(v62, v61);
      uint64_t v63 = v94;
      uint64_t v64 = v57;
      uint64_t v65 = &v131;
    }
    else
    {
      uint64_t v66 = v107;
      uint64_t v100 = (char *)(v95 + *(int *)(v107 + 92));
      ((void (*)(char *))v34)(v29);
      char v67 = sub_255C80578();
      v38(v29, v25);
      uint64_t v68 = ((uint64_t (*)(char *, uint64_t))v38)(v31, v25);
      uint64_t v50 = *(void *)(v66 + 72);
      if ((v67 & 1) == 0)
      {
        uint64_t v76 = v90;
        uint64_t v53 = MEMORY[0x263F1BA00];
        sub_255A44128(v68, v88, MEMORY[0x263F1BA08]);
        uint64_t v40 = *(void *)(v107 + 56);
        uint64_t v51 = *(void *)(v107 + 64);
        v132[0] = v40;
        v132[1] = v51;
        uint64_t v77 = v104;
        swift_getWitnessTable();
        uint64_t v130 = v50;
        uint64_t v131 = v53;
        uint64_t v78 = v105;
        swift_getWitnessTable();
        uint64_t v52 = v101;
        sub_255A44128(v76, v77, v78);
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v76, v78);
        goto LABEL_9;
      }
      uint64_t v120 = v25;
      uint64_t v69 = v88;
      uint64_t v121 = v88;
      long long v122 = v99;
      uint64_t v123 = v50;
      uint64_t v70 = type metadata accessor for ContentLookupItem();
      uint64_t v71 = v87;
      sub_255A20F54(&v100[*(int *)(v70 + 52)]);
      uint64_t v72 = (uint64_t)v83;
      sub_255A20F54(v71);
      uint64_t v53 = MEMORY[0x263F1BA00];
      sub_255A44030(v72, v69);
      uint64_t v100 = *(char **)(v84 + 8);
      ((void (*)(uint64_t, uint64_t))v100)(v72, v69);
      uint64_t v40 = *(void *)(v107 + 56);
      uint64_t v51 = *(void *)(v107 + 64);
      uint64_t v118 = v40;
      uint64_t v119 = v51;
      uint64_t v73 = v104;
      uint64_t v107 = swift_getWitnessTable();
      uint64_t v116 = v50;
      uint64_t v117 = v53;
      uint64_t v74 = v105;
      swift_getWitnessTable();
      uint64_t v52 = v101;
      uint64_t v75 = v90;
      sub_255A44128(v90, v73, v74);
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v75, v74);
      uint64_t v63 = v87;
      uint64_t v64 = v69;
      uint64_t v65 = v132;
    }
    ((void (*)(char *, uint64_t))*(v65 - 32))(v63, v64);
  }
LABEL_9:
  uint64_t v128 = v40;
  uint64_t v129 = v51;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v126 = v50;
  uint64_t v127 = v53;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v124 = v79;
  uint64_t v125 = v80;
  uint64_t v81 = v103;
  swift_getWitnessTable();
  sub_255A20F54(v52);
  return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v52, v81);
}

uint64_t ContentLookup4.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t v154 = a2;
  uint64_t v125 = *(void *)(*(void *)(a1 + 48) - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v124 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v127 = (char *)&v123 - v8;
  uint64_t v9 = *(void *)(v7 + 40);
  uint64_t v131 = v10;
  uint64_t v11 = sub_255C7EBE8();
  uint64_t v130 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v128 = (char *)&v123 - v13;
  uint64_t v129 = v9;
  uint64_t v135 = *(void *)(v9 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v126 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v134 = (char *)&v123 - v17;
  uint64_t v133 = *(void *)(*(void *)(v4 + 32) - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  char v132 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v137 = (char *)&v123 - v20;
  uint64_t v21 = *(void *)(v4 + 24);
  uint64_t v141 = v22;
  uint64_t v23 = sub_255C7EBE8();
  uint64_t v140 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  long long v138 = (char *)&v123 - v24;
  uint64_t v152 = v25;
  uint64_t v153 = v11;
  uint64_t v26 = sub_255C7EBE8();
  uint64_t v146 = *(void *)(v26 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v145 = (char *)&v123 - v28;
  uint64_t v139 = v21;
  *(void *)&long long v155 = *(void *)(v21 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  long long v136 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v147 = (char *)&v123 - v32;
  uint64_t v33 = *(void *)(v4 + 16);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v31);
  uint64_t v37 = (char *)&v123 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v123 - v38;
  uint64_t v151 = v40;
  uint64_t v41 = sub_255C7EBE8();
  uint64_t v149 = *(void *)(v41 - 8);
  uint64_t v150 = v41;
  MEMORY[0x270FA5388](v41);
  long long v148 = (char *)&v123 - v42;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v43(v39, v3, v33);
  uint64_t v44 = *(int *)(v4 + 100);
  uint64_t v143 = (void (*)(char *, uint64_t))v43;
  long long v144 = v3;
  uint64_t v45 = &v3[v44];
  v43(v37, v45, v33);
  *(void *)&long long v156 = v4;
  uint64_t v46 = *(void *)(v4 + 56);
  uint64_t v142 = *(void *)(v46 + 8);
  LOBYTE(v4) = sub_255C80578();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v34 + 8);
  v47(v37, v33);
  if (v4)
  {
    v47(v39, v33);
    uint64_t v48 = v139;
    uint64_t v177 = v33;
    uint64_t v178 = v139;
    uint64_t v49 = v156;
    uint64_t v50 = *(char **)(v156 + 64);
    uint64_t v179 = v46;
    uint64_t v180 = v50;
    uint64_t v51 = type metadata accessor for ContentLookupItem();
    uint64_t v52 = v147;
    sub_255A20F54(&v45[*(int *)(v51 + 52)]);
    uint64_t v53 = (uint64_t)v136;
    sub_255A20F54(v52);
    uint64_t v54 = (uint64_t)v138;
    long long v144 = *(char **)(v49 + 72);
    char v55 = v144;
    sub_255A44030(v53, v48);
    uint64_t v56 = *(void (**)(char *, uint64_t))(v155 + 8);
    *(void *)&long long v155 = v155 + 8;
    uint64_t v143 = v56;
    v56((char *)v53, v48);
    uint64_t v160 = v50;
    uint64_t v161 = v55;
    uint64_t v57 = v152;
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v156 = *(_OWORD *)(v49 + 80);
    long long v159 = v156;
    uint64_t v59 = swift_getWitnessTable();
    uint64_t v60 = (uint64_t)v145;
    sub_255A44030(v54, v57);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v54, v57);
    uint64_t v157 = WitnessTable;
    uint64_t v158 = v59;
    uint64_t v61 = v151;
    swift_getWitnessTable();
    uint64_t v62 = v148;
    sub_255A44030(v60, v61);
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v60, v61);
    v143(v147, v48);
    *(void *)&long long v63 = v50;
    *((void *)&v63 + 1) = v144;
  }
  else
  {
    *(void *)&long long v155 = v46;
    uint64_t v64 = &v144[*(int *)(v156 + 104)];
    ((void (*)(char *, char *, uint64_t))v143)(v37, v64, v33);
    char v65 = sub_255C80578();
    uint64_t v66 = v47;
    v47(v37, v33);
    if (v65)
    {
      v47(v39, v33);
      uint64_t v67 = v141;
      uint64_t v177 = v33;
      uint64_t v178 = v141;
      uint64_t v68 = v156;
      uint64_t v69 = *(char **)(v156 + 72);
      uint64_t v179 = v155;
      uint64_t v180 = v69;
      uint64_t v147 = v69;
      uint64_t v70 = type metadata accessor for ContentLookupItem();
      uint64_t v71 = v137;
      sub_255A20F54(&v64[*(int *)(v70 + 52)]);
      uint64_t v72 = (uint64_t)v132;
      sub_255A20F54(v71);
      uint64_t v73 = (uint64_t)v138;
      *(void *)&long long v155 = *(void *)(v68 + 64);
      uint64_t v74 = v155;
      sub_255A44128(v72, v139, v67);
      long long v144 = *(char **)(v133 + 8);
      ((void (*)(uint64_t, uint64_t))v144)(v72, v67);
      uint64_t v165 = v74;
      uint64_t v166 = v69;
      uint64_t v75 = v152;
      uint64_t v76 = swift_getWitnessTable();
      long long v156 = *(_OWORD *)(v68 + 80);
      long long v164 = v156;
      uint64_t v77 = swift_getWitnessTable();
      uint64_t v78 = (uint64_t)v145;
      sub_255A44030(v73, v75);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v73, v75);
      uint64_t v162 = v76;
      uint64_t v163 = v77;
      uint64_t v79 = v151;
      swift_getWitnessTable();
      uint64_t v62 = v148;
      sub_255A44030(v78, v79);
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v78, v79);
      ((void (*)(char *, uint64_t))v144)(v137, v67);
      *(void *)&long long v63 = v155;
      *((void *)&v63 + 1) = v147;
    }
    else
    {
      uint64_t v80 = &v144[*(int *)(v156 + 108)];
      ((void (*)(char *, char *, uint64_t))v143)(v37, v80, v33);
      char v81 = sub_255C80578();
      v47(v37, v33);
      if (v81)
      {
        v47(v39, v33);
        uint64_t v82 = v129;
        uint64_t v177 = v33;
        uint64_t v178 = v129;
        uint64_t v83 = v156;
        uint64_t v84 = *(char **)(v156 + 80);
        uint64_t v179 = v155;
        uint64_t v180 = v84;
        uint64_t v85 = type metadata accessor for ContentLookupItem();
        uint64_t v86 = v134;
        sub_255A20F54(&v80[*(int *)(v85 + 52)]);
        uint64_t v87 = (uint64_t)v126;
        sub_255A20F54(v86);
        uint64_t v88 = (uint64_t)v128;
        long long v144 = *(char **)(v83 + 88);
        uint64_t v89 = v144;
        sub_255A44030(v87, v82);
        uint64_t v90 = *(char **)(v135 + 8);
        v135 += 8;
        uint64_t v147 = v90;
        ((void (*)(uint64_t, uint64_t))v90)(v87, v82);
        long long v155 = *(_OWORD *)(v83 + 64);
        long long v171 = v155;
        uint64_t v91 = v152;
        uint64_t v92 = swift_getWitnessTable();
        uint64_t v169 = v84;
        uint64_t v170 = v89;
        uint64_t v93 = v153;
        uint64_t v94 = swift_getWitnessTable();
        uint64_t v95 = (uint64_t)v145;
        sub_255A44128(v88, v91, v93);
        (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v88, v93);
        uint64_t v167 = v92;
        uint64_t v168 = v94;
        uint64_t v96 = v151;
        swift_getWitnessTable();
        uint64_t v62 = v148;
        sub_255A44030(v95, v96);
        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v95, v96);
        ((void (*)(char *, uint64_t))v147)(v134, v82);
        long long v63 = v155;
        *(void *)&long long v97 = v84;
      }
      else
      {
        uint64_t v98 = &v144[*(int *)(v156 + 112)];
        ((void (*)(char *, char *, uint64_t))v143)(v37, v98, v33);
        char v99 = sub_255C80578();
        v66(v37, v33);
        v66(v39, v33);
        if ((v99 & 1) == 0)
        {
          uint64_t v114 = v156;
          long long v155 = *(_OWORD *)(v156 + 64);
          long long v190 = v155;
          uint64_t v115 = swift_getWitnessTable();
          long long v156 = *(_OWORD *)(v114 + 80);
          long long v189 = v156;
          uint64_t v116 = swift_getWitnessTable();
          uint64_t v187 = v115;
          uint64_t v188 = v116;
          uint64_t v117 = v151;
          uint64_t v118 = swift_getWitnessTable();
          uint64_t v62 = v148;
          sub_255A44128(v118, v117, MEMORY[0x263F1BA08]);
          long long v63 = v155;
          goto LABEL_11;
        }
        uint64_t v100 = v131;
        uint64_t v177 = v33;
        uint64_t v178 = v131;
        uint64_t v101 = v156;
        uint64_t v102 = *(char **)(v156 + 88);
        uint64_t v179 = v155;
        uint64_t v180 = v102;
        uint64_t v103 = type metadata accessor for ContentLookupItem();
        uint64_t v104 = v127;
        sub_255A20F54(&v98[*(int *)(v103 + 52)]);
        uint64_t v105 = (uint64_t)v124;
        sub_255A20F54(v104);
        uint64_t v106 = (uint64_t)v128;
        uint64_t v143 = *(void (**)(char *, uint64_t))(v101 + 80);
        uint64_t v107 = v143;
        long long v144 = v102;
        sub_255A44128(v105, v129, v100);
        uint64_t v147 = *(char **)(v125 + 8);
        ((void (*)(uint64_t, uint64_t))v147)(v105, v100);
        long long v155 = *(_OWORD *)(v101 + 64);
        long long v176 = v155;
        uint64_t v108 = v152;
        uint64_t v109 = swift_getWitnessTable();
        long long v174 = v107;
        uint64_t v175 = v102;
        uint64_t v110 = v153;
        uint64_t v111 = swift_getWitnessTable();
        uint64_t v112 = (uint64_t)v145;
        sub_255A44128(v106, v108, v110);
        (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v106, v110);
        uint64_t v172 = v109;
        uint64_t v173 = v111;
        uint64_t v113 = v151;
        swift_getWitnessTable();
        uint64_t v62 = v148;
        sub_255A44030(v112, v113);
        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v112, v113);
        ((void (*)(char *, uint64_t))v147)(v127, v100);
        long long v63 = v155;
        *(void *)&long long v97 = v143;
      }
      *((void *)&v97 + 1) = v144;
      long long v156 = v97;
    }
  }
LABEL_11:
  long long v186 = v63;
  uint64_t v119 = swift_getWitnessTable();
  long long v185 = v156;
  uint64_t v120 = swift_getWitnessTable();
  uint64_t v183 = v119;
  uint64_t v184 = v120;
  uint64_t v181 = swift_getWitnessTable();
  uint64_t v182 = MEMORY[0x263F1BA00];
  uint64_t v121 = v150;
  swift_getWitnessTable();
  sub_255A20F54(v62);
  return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v62, v121);
}

uint64_t sub_255A9C88C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_255A9C894()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A9C8D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A9C924()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A9C970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255A9C9C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_255A9CA98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_255A9CBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_255A9CC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_255A9CD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_255A9CDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_255A9CE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_255A9CF38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_255A9D130(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255A9D3FCLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

void *sub_255A9D424(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_255A9D460(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ContentLookup()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255A9D4AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ContentLookupItem();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_255A9D590(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = *(void *)(a3 + 24) - 8;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(_DWORD *)(*(void *)v9 + 80);
  int v12 = *(_DWORD *)(*(void *)v9 + 80) | v8;
  uint64_t v13 = (*(unsigned char *)(*(void *)v9 + 80) | v8);
  uint64_t v14 = ~v13;
  uint64_t v15 = v7 + v13;
  uint64_t v16 = v7 + v11;
  if (v13 > 7
    || (v12 & 0x100000) != 0
    || ((v7 + v11) & ~v11) + *(void *)(*(void *)v9 + 64) + ((v7 + v13) & (unint64_t)~v13) > 0x18)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v13 + 16) & v14));
    swift_retain();
  }
  else
  {
    uint64_t v23 = ~v11;
    uint64_t v24 = *(void *)(a3 + 24);
    unsigned int v20 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v20(a1, a2, v5);
    unint64_t v21 = ((unint64_t)a2 + v15) & v14;
    v20((uint64_t *)(((unint64_t)v4 + v15) & v14), (uint64_t *)v21, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v16 + (((unint64_t)v4 + v15) & v14)) & v23, (v16 + v21) & v23, v24);
  }
  return v4;
}

uint64_t sub_255A9D73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(v8 - 8);
  uint64_t v9 = *(_DWORD *)(v14 + 80);
  uint64_t v10 = *(_DWORD *)(v14 + 80) | *(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = (v7 + a1 + v10) & ~v10;
  v6(v11, v4);
  int v12 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);

  return v12((v7 + v9 + v11) & ~v9, v8);
}

uint64_t sub_255A9D848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (v9 + v13 + a1) & ~v13;
  uint64_t v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_255A9D960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (v9 + v13 + a1) & ~v13;
  uint64_t v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_255A9DA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (v9 + v13 + a1) & ~v13;
  uint64_t v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_255A9DB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (v9 + v13 + a1) & ~v13;
  uint64_t v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_255A9DCA8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v4 + 64);
  if (v8 <= v5) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(v7 + 80);
  uint64_t v12 = *(_DWORD *)(v7 + 80) | *(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v9 + v11;
  unsigned int v15 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v16 = (v14 & ~v11) + *(void *)(*(void *)(v6 - 8) + 64) + (v13 & ~v12);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v5 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v14 + (((unint64_t)a1 + v13) & ~v12)) & ~v11, v8, v6);
        }
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_24;
  }
LABEL_14:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v10 + (v22 | v20) + 1;
}

void sub_255A9DEC8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(v6 + 64);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(_DWORD *)(v9 + 80);
  uint64_t v14 = v13 | *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v11 + v14) & ~v14;
  uint64_t v17 = v11 + v13;
  size_t v18 = (v17 & ~v13) + *(void *)(*(void *)(v8 - 8) + 64) + v16;
  BOOL v19 = a3 >= v12;
  unsigned int v20 = a3 - v12;
  if (v20 != 0 && v19)
  {
    if (v18 <= 3)
    {
      unsigned int v25 = ((v20 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
      if (HIWORD(v25))
      {
        int v21 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v21 = 2;
      }
      else
      {
        int v21 = v25 > 1;
      }
    }
    else
    {
      int v21 = 1;
    }
  }
  else
  {
    int v21 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v22 = ~v12 + a2;
    if (v18 < 4)
    {
      int v23 = (v22 >> (8 * v18)) + 1;
      if (v18)
      {
        int v26 = v22 & ~(-1 << (8 * v18));
        bzero(a1, v18);
        if (v18 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v18 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v18] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v23;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v18] = v23;
        return;
      default:
        return;
    }
  }
  uint64_t v24 = ~v14;
  switch(v21)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255A9E1BCLL);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v28 = *(void (**)(char *))(v6 + 56);
          v28(a1);
        }
        else
        {
          uint64_t v27 = *(void (**)(unint64_t))(v9 + 56);
          v27((v17 + ((unint64_t)&a1[v15] & v24)) & ~v13);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ContentLookup1()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255A9E1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_255A9E204()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = type metadata accessor for ContentLookupItem();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t v0 = type metadata accessor for ContentLookupItem();
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_255A9E35C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8 | v6;
  uint64_t v10 = (v8 | v6) + v5;
  uint64_t v11 = v10 & ~(v8 | v6);
  uint64_t v12 = v5 + v8;
  uint64_t v13 = *(void *)(a3[4] - 8);
  unint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v14 | v6;
  uint64_t v16 = v15 + *(void *)(v7 + 64) + ((v5 + v8) & ~v8);
  uint64_t v17 = v5 + v14;
  unint64_t v18 = ((v5 + v14) & ~v14) + *(void *)(v13 + 64) + ((v16 + v11) & ~v15);
  if ((v9 | v14) > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) != 0
    || v18 > 0x18)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v28 = (uint64_t *)(v21 + (((v9 | v14) + 16) & ~(v9 | v14)));
    swift_retain();
  }
  else
  {
    uint64_t v22 = ~v9;
    uint64_t v31 = a3[3];
    uint64_t v32 = ~v8;
    uint64_t v33 = v17;
    uint64_t v34 = ~v15;
    uint64_t v35 = ~v14;
    uint64_t v36 = a3[4];
    uint64_t v37 = *(void *)(v36 - 8);
    int v23 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    uint64_t v24 = a3[2];
    v23(a1, a2, v24);
    unint64_t v26 = ((unint64_t)a1 + v10) & v22;
    unint64_t v27 = ((unint64_t)a2 + v10) & v22;
    v23((uint64_t *)v26, (uint64_t *)v27, v24);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((v12 + v26) & v32, (v12 + v27) & v32, v31);
    uint64_t v28 = a1;
    unint64_t v29 = (v16 + v27) & v34;
    v23((uint64_t *)((v16 + v26) & v34), (uint64_t *)v29, v24);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v37 + 16))((v33 + ((v16 + v26) & v34)) & v35, (v33 + v29) & v35, v36);
  }
  return v28;
}

uint64_t sub_255A9E5FC(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = v7 + a1;
  uint64_t v20 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = a2[3];
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v8 + (v11 | v20)) & ~(v11 | v20);
  v6(v12, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))((v7 + v11 + v12) & ~v11, v9);
  uint64_t v13 = *(void *)(v10 + 64) + ((v7 + v11) & ~v11) + v12;
  uint64_t v14 = a2[4];
  uint64_t v19 = *(void *)(v14 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v16 = (v13 + (v15 | v20)) & ~(v15 | v20);
  v6(v16, v4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);

  return v17((v7 + v15 + v16) & ~v15, v14);
}

uint64_t sub_255A9E794(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 16);
  v7();
  uint64_t v9 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v26 = v7;
  uint64_t v11 = a3[3];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 | v25) + v10;
  uint64_t v15 = (v14 + a1) & ~(v13 | v25);
  uint64_t v16 = (v14 + a2) & ~(v13 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v15, v16, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))((v10 + v13 + v15) & ~v13, (v10 + v13 + v16) & ~v13, v11);
  uint64_t v17 = a3[4];
  uint64_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (v20 | v25) + v18 + ((v10 + v13) & ~v13);
  uint64_t v22 = (v21 + v15) & ~(v20 | v25);
  uint64_t v23 = (v21 + v16) & ~(v20 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v22, v23, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))((v10 + v20 + v22) & ~v20, (v10 + v20 + v23) & ~v20, v17);
  return a1;
}

uint64_t sub_255A9E958(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 24);
  v7();
  uint64_t v9 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v26 = v7;
  uint64_t v11 = a3[3];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 | v25) + v10;
  uint64_t v15 = (v14 + a1) & ~(v13 | v25);
  uint64_t v16 = (v14 + a2) & ~(v13 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v15, v16, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))((v10 + v13 + v15) & ~v13, (v10 + v13 + v16) & ~v13, v11);
  uint64_t v17 = a3[4];
  uint64_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (v20 | v25) + v18 + ((v10 + v13) & ~v13);
  uint64_t v22 = (v21 + v15) & ~(v20 | v25);
  uint64_t v23 = (v21 + v16) & ~(v20 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v22, v23, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24))((v10 + v20 + v22) & ~v20, (v10 + v20 + v23) & ~v20, v17);
  return a1;
}

uint64_t sub_255A9EB1C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 32);
  v7();
  uint64_t v9 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v26 = v7;
  uint64_t v11 = a3[3];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 | v25) + v10;
  uint64_t v15 = (v14 + a1) & ~(v13 | v25);
  uint64_t v16 = (v14 + a2) & ~(v13 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v15, v16, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))((v10 + v13 + v15) & ~v13, (v10 + v13 + v16) & ~v13, v11);
  uint64_t v17 = a3[4];
  uint64_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (v20 | v25) + v18 + ((v10 + v13) & ~v13);
  uint64_t v22 = (v21 + v15) & ~(v20 | v25);
  uint64_t v23 = (v21 + v16) & ~(v20 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v22, v23, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))((v10 + v20 + v22) & ~v20, (v10 + v20 + v23) & ~v20, v17);
  return a1;
}

uint64_t sub_255A9ECE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 40);
  v7();
  uint64_t v9 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v26 = v7;
  uint64_t v11 = a3[3];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 | v25) + v10;
  uint64_t v15 = (v14 + a1) & ~(v13 | v25);
  uint64_t v16 = (v14 + a2) & ~(v13 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v15, v16, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))((v10 + v13 + v15) & ~v13, (v10 + v13 + v16) & ~v13, v11);
  uint64_t v17 = a3[4];
  uint64_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (v20 | v25) + v18 + ((v10 + v13) & ~v13);
  uint64_t v22 = (v21 + v15) & ~(v20 | v25);
  uint64_t v23 = (v21 + v16) & ~(v20 | v25);
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v22, v23, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))((v10 + v20 + v22) & ~v20, (v10 + v20 + v23) & ~v20, v17);
  return a1;
}

uint64_t sub_255A9EEA4(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[2] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(a3[3] - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v7 - 8);
  if (v9 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v12 = *(unsigned int *)(v10 + 84);
  uint64_t v13 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  if (v12 <= v6) {
    unsigned int v18 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v18 = *(_DWORD *)(v10 + 84);
  }
  if (v18 <= v11) {
    unsigned int v19 = v11;
  }
  else {
    unsigned int v19 = v18;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = v15 | v14;
  uint64_t v21 = (v15 | v14) + v13;
  uint64_t v22 = v13 + v15;
  uint64_t v23 = v16 | v14;
  uint64_t v24 = v23 + *(void *)(*(void *)(a3[3] - 8) + 64) + ((v13 + v15) & ~v15);
  uint64_t v25 = v13 + v16;
  unsigned int v26 = a2 - v19;
  if (a2 <= v19) {
    goto LABEL_30;
  }
  uint64_t v27 = (v25 & ~v16) + v17 + ((v24 + (v21 & ~v20)) & ~v23);
  char v28 = 8 * v27;
  if (v27 > 3) {
    goto LABEL_13;
  }
  unsigned int v30 = ((v26 + ~(-1 << v28)) >> v28) + 1;
  if (HIWORD(v30))
  {
    int v29 = *(_DWORD *)((char *)a1 + v27);
    if (!v29) {
      goto LABEL_30;
    }
    goto LABEL_20;
  }
  if (v30 > 0xFF)
  {
    int v29 = *(unsigned __int16 *)((char *)a1 + v27);
    if (!*(unsigned __int16 *)((char *)a1 + v27)) {
      goto LABEL_30;
    }
    goto LABEL_20;
  }
  if (v30 >= 2)
  {
LABEL_13:
    int v29 = *((unsigned __int8 *)a1 + v27);
    if (!*((unsigned char *)a1 + v27)) {
      goto LABEL_30;
    }
LABEL_20:
    int v31 = (v29 - 1) << v28;
    if (v27 > 3) {
      int v31 = 0;
    }
    if (v27)
    {
      if (v27 <= 3) {
        int v32 = v27;
      }
      else {
        int v32 = 4;
      }
      switch(v32)
      {
        case 2:
          int v33 = *a1;
          break;
        case 3:
          int v33 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v33 = *(_DWORD *)a1;
          break;
        default:
          int v33 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v33 = 0;
    }
    return v19 + (v33 | v31) + 1;
  }
LABEL_30:
  if (!v19) {
    return 0;
  }
  if (v6 != v19)
  {
    a1 = (unsigned __int16 *)(((unint64_t)a1 + v21) & ~v20);
    if (v11 >= v18)
    {
      if (v6 < v9)
      {
        unint64_t v34 = ((unint64_t)a1 + v22) & ~v15;
        uint64_t v35 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
        uint64_t v36 = *(unsigned int *)(v8 + 84);
        uint64_t v37 = a3[3];
        return v35(v34, v36, v37);
      }
    }
    else
    {
      a1 = (unsigned __int16 *)(((unint64_t)a1 + v24) & ~v23);
      if (v6 < v12)
      {
        unint64_t v34 = ((unint64_t)a1 + v25) & ~v16;
        uint64_t v35 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
        uint64_t v36 = v12;
        uint64_t v37 = a3[4];
        return v35(v34, v36, v37);
      }
    }
  }
  uint64_t v39 = *(uint64_t (**)(unsigned __int16 *))(v5 + 48);
  return v39(a1);
}

void sub_255A9F1F0(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  uint64_t v10 = *(void *)(v8 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  uint64_t v15 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  if (v14 <= v7) {
    unsigned int v19 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v13 + 84);
  }
  if (v19 <= v12) {
    unsigned int v20 = v12;
  }
  else {
    unsigned int v20 = v19;
  }
  uint64_t v21 = v17 | v16;
  uint64_t v22 = (v17 | v16) + v15;
  uint64_t v23 = v22 & ~(v17 | v16);
  uint64_t v24 = v15 + v17;
  size_t v25 = ((v15 + v17) & ~v17) + *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v26 = v18 | v16;
  size_t v27 = (v18 | v16) + v25;
  uint64_t v28 = v15 + v18;
  size_t v29 = ((v15 + v18) & ~v18) + *(void *)(*(void *)(v9 - 8) + 64);
  size_t v30 = ((v27 + v23) & ~v26) + v29;
  BOOL v31 = a3 >= v20;
  unsigned int v32 = a3 - v20;
  if (v32 != 0 && v31)
  {
    if (v30 <= 3)
    {
      unsigned int v36 = ((v32 + ~(-1 << (8 * v30))) >> (8 * v30)) + 1;
      if (HIWORD(v36))
      {
        int v33 = 4;
      }
      else
      {
        int v33 = v36 > 1;
        if (v36 >= 0x100) {
          int v33 = 2;
        }
      }
    }
    else
    {
      int v33 = 1;
    }
  }
  else
  {
    int v33 = 0;
  }
  if (v20 < a2)
  {
    unsigned int v34 = ~v20 + a2;
    if (v30 < 4)
    {
      int v35 = (v34 >> (8 * v30)) + 1;
      if (v30)
      {
        int v37 = v34 & ~(-1 << (8 * v30));
        bzero(a1, v30);
        if (v30 == 3)
        {
          *(_WORD *)a1 = v37;
          a1[2] = BYTE2(v37);
        }
        else if (v30 == 2)
        {
          *(_WORD *)a1 = v37;
        }
        else
        {
          *a1 = v37;
        }
      }
    }
    else
    {
      bzero(a1, v30);
      *(_DWORD *)a1 = v34;
      int v35 = 1;
    }
    switch(v33)
    {
      case 1:
        a1[v30] = v35;
        return;
      case 2:
        *(_WORD *)&a1[v30] = v35;
        return;
      case 3:
        goto LABEL_74;
      case 4:
        *(_DWORD *)&a1[v30] = v35;
        return;
      default:
        return;
    }
  }
  switch(v33)
  {
    case 1:
      a1[v30] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v30] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_74:
      __break(1u);
      JUMPOUT(0x255A9F6DCLL);
    case 4:
      *(_DWORD *)&a1[v30] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v7 == v20) {
        goto LABEL_30;
      }
      a1 = (char *)((unint64_t)&a1[v22] & ~v21);
      if (v12 < v19)
      {
        a1 = (char *)((unint64_t)&a1[v27] & ~v26);
        if (v19 < a2)
        {
          if (v29 <= 3) {
            int v39 = ~(-1 << (8 * v29));
          }
          else {
            int v39 = -1;
          }
          if (v29)
          {
            int v40 = v39 & (~v19 + a2);
            if (v29 <= 3) {
              int v41 = v29;
            }
            else {
              int v41 = 4;
            }
            bzero(a1, v29);
            switch(v41)
            {
              case 2:
                goto LABEL_71;
              case 3:
                goto LABEL_72;
              case 4:
                goto LABEL_73;
              default:
                goto LABEL_55;
            }
          }
          return;
        }
        if (v7 < v14)
        {
          unint64_t v44 = (unint64_t)&a1[v28] & ~v18;
          uint64_t v45 = *(void (**)(unint64_t))(v13 + 56);
LABEL_66:
          v45(v44);
          return;
        }
        goto LABEL_30;
      }
      if (v12 >= a2)
      {
        if (v7 < v11)
        {
          unint64_t v44 = (unint64_t)&a1[v24] & ~v17;
          uint64_t v45 = *(void (**)(unint64_t))(v10 + 56);
          goto LABEL_66;
        }
LABEL_30:
        uint64_t v38 = *(void (**)(char *))(v6 + 56);
        v38(a1);
        return;
      }
      if (v25 <= 3) {
        int v42 = ~(-1 << (8 * v25));
      }
      else {
        int v42 = -1;
      }
      if (v25)
      {
        int v40 = v42 & (~v12 + a2);
        if (v25 <= 3) {
          int v43 = v25;
        }
        else {
          int v43 = 4;
        }
        bzero(a1, v25);
        switch(v43)
        {
          case 2:
LABEL_71:
            *(_WORD *)a1 = v40;
            break;
          case 3:
LABEL_72:
            *(_WORD *)a1 = v40;
            a1[2] = BYTE2(v40);
            break;
          case 4:
LABEL_73:
            *(_DWORD *)a1 = v40;
            break;
          default:
LABEL_55:
            *a1 = v40;
            break;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ContentLookup2()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255A9F73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 80);
}

uint64_t sub_255A9F744()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = type metadata accessor for ContentLookupItem();
    if (v3 > 0x3F) {
      return v2;
    }
    uint64_t v2 = type metadata accessor for ContentLookupItem();
    if (v4 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t v0 = type metadata accessor for ContentLookupItem();
      if (v5 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_255A9F8F8(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v50 = a3[3];
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = *(void *)(v50 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9 | v7;
  uint64_t v11 = (v9 | v7) + v6;
  uint64_t v49 = v6 + v9;
  uint64_t v13 = a3[4];
  uint64_t v12 = a3[5];
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = *(_DWORD *)(v51 + 80);
  uint64_t v15 = v14 | v7;
  uint64_t v16 = (v14 | v7) + *(void *)(v8 + 64) + ((v6 + v9) & ~v9);
  uint64_t v17 = (v16 + (v11 & ~(v9 | v7))) & ~(v14 | v7);
  uint64_t v18 = v6 + v14;
  uint64_t v19 = *(void *)(v12 - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = v20 | v7;
  uint64_t v22 = v21 + *(void *)(v51 + 64) + ((v6 + v14) & ~v14);
  uint64_t v23 = v6 + v20;
  unint64_t v24 = ((v6 + v20) & ~v20) + *(void *)(v19 + 64) + ((v22 + v17) & ~v21);
  unint64_t v25 = v10 | v14 | v20;
  if (v25 > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v51 + 80) | *(_DWORD *)(v19 + 80)) & 0x100000) != 0
    || v24 > 0x18)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    unsigned int v34 = (uint64_t *)(v28 + ((v25 + 16) & ~v25));
    swift_retain();
  }
  else
  {
    uint64_t v46 = *(void *)(v12 - 8);
    uint64_t v47 = a3[5];
    uint64_t v29 = ~v10;
    uint64_t v30 = ~v9;
    uint64_t v39 = v18;
    uint64_t v40 = ~v15;
    uint64_t v42 = ~v14;
    uint64_t v43 = ~v21;
    uint64_t v45 = ~v20;
    BOOL v31 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    uint64_t v44 = v23;
    uint64_t v41 = v22;
    v31(a1, a2, v4);
    uint64_t v48 = a1;
    unint64_t v32 = ((unint64_t)a1 + v11) & v29;
    unint64_t v33 = ((unint64_t)a2 + v11) & v29;
    v31((uint64_t *)v32, (uint64_t *)v33, v4);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v49 + v32) & v30, (v49 + v33) & v30, v50);
    unsigned int v34 = v48;
    unint64_t v35 = (v16 + v32) & v40;
    unint64_t v36 = (v16 + v33) & v40;
    v31((uint64_t *)v35, (uint64_t *)v36, v4);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))((v39 + v35) & v42, (v39 + v36) & v42, v13);
    unint64_t v37 = (v41 + v35) & v43;
    v31((uint64_t *)v37, (uint64_t *)((v41 + v36) & v43), v4);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v46 + 16))((v44 + v37) & v45, (v44 + ((v41 + v36) & v43)) & v45, v47);
  }
  return v34;
}

uint64_t sub_255A9FC7C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64) + a1;
  uint64_t v9 = *(void *)(v5 + 64);
  size_t v27 = v6;
  uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = a2[3];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v8 + (v13 | v10)) & ~(v13 | v10);
  v7(v14, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))((v9 + v13 + v14) & ~v13, v11);
  uint64_t v15 = *(void *)(v12 + 64) + ((v9 + v13) & ~v13) + v14;
  uint64_t v16 = a2[4];
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (v15 + (v18 | v10)) & ~(v18 | v10);
  v27(v19, v4);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))((v9 + v18 + v19) & ~v18, v16);
  uint64_t v20 = *(void *)(v17 + 64) + ((v9 + v18) & ~v18);
  uint64_t v21 = a2[5];
  uint64_t v26 = *(void *)(v21 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v23 = (v20 + (v22 | v10) + v19) & ~(v22 | v10);
  v27(v23, v4);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);

  return v24((v9 + v22 + v23) & ~v22, v21);
}

uint64_t sub_255A9FEA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 16);
  uint64_t v8 = v6 + 16;
  uint64_t v36 = v4;
  v7();
  uint64_t v10 = v7;
  uint64_t v11 = *(void *)(v8 + 48);
  uint64_t v12 = a3[3];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 64);
  uint64_t v17 = (v15 + v11 + a1) & ~v15;
  uint64_t v18 = (v15 + v11 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v17, v18, v4);
  uint64_t v19 = v10;
  uint64_t v37 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))((v11 + v14 + v17) & ~v14, (v11 + v14 + v18) & ~v14, v12);
  uint64_t v20 = a3[4];
  uint64_t v21 = *(void *)(v13 + 64);
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 | v16) + v21 + ((v11 + v14) & ~v14);
  uint64_t v25 = (v24 + v17) & ~(v23 | v16);
  uint64_t v26 = (v24 + v18) & ~(v23 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v25, v26, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))((v11 + v23 + v25) & ~v23, (v11 + v23 + v26) & ~v23, v20);
  uint64_t v27 = (v11 + v23) & ~v23;
  uint64_t v28 = a3[5];
  uint64_t v29 = *(void *)(v22 + 64);
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (v31 | v16) + v29 + v27;
  uint64_t v33 = (v32 + v25) & ~(v31 | v16);
  uint64_t v34 = (v32 + v26) & ~(v31 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v33, v34, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))((v37 + v31 + v33) & ~v31, (v37 + v31 + v34) & ~v31, v28);
  return a1;
}

uint64_t sub_255AA0124(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 24);
  uint64_t v8 = v6 + 24;
  uint64_t v36 = v4;
  v7();
  uint64_t v10 = v7;
  uint64_t v11 = *(void *)(v8 + 40);
  uint64_t v12 = a3[3];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v8 + 56);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 56);
  uint64_t v17 = (v15 + v11 + a1) & ~v15;
  uint64_t v18 = (v15 + v11 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v17, v18, v4);
  uint64_t v19 = v10;
  uint64_t v37 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))((v11 + v14 + v17) & ~v14, (v11 + v14 + v18) & ~v14, v12);
  uint64_t v20 = a3[4];
  uint64_t v21 = *(void *)(v13 + 64);
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 | v16) + v21 + ((v11 + v14) & ~v14);
  uint64_t v25 = (v24 + v17) & ~(v23 | v16);
  uint64_t v26 = (v24 + v18) & ~(v23 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v25, v26, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24))((v11 + v23 + v25) & ~v23, (v11 + v23 + v26) & ~v23, v20);
  uint64_t v27 = (v11 + v23) & ~v23;
  uint64_t v28 = a3[5];
  uint64_t v29 = *(void *)(v22 + 64);
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (v31 | v16) + v29 + v27;
  uint64_t v33 = (v32 + v25) & ~(v31 | v16);
  uint64_t v34 = (v32 + v26) & ~(v31 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v33, v34, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 24))((v37 + v31 + v33) & ~v31, (v37 + v31 + v34) & ~v31, v28);
  return a1;
}

uint64_t sub_255AA03A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 32);
  uint64_t v8 = v6 + 32;
  uint64_t v36 = v4;
  v7();
  uint64_t v10 = v7;
  uint64_t v11 = *(void *)(v8 + 32);
  uint64_t v12 = a3[3];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v8 + 48);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 48);
  uint64_t v17 = (v15 + v11 + a1) & ~v15;
  uint64_t v18 = (v15 + v11 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v17, v18, v4);
  uint64_t v19 = v10;
  uint64_t v37 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))((v11 + v14 + v17) & ~v14, (v11 + v14 + v18) & ~v14, v12);
  uint64_t v20 = a3[4];
  uint64_t v21 = *(void *)(v13 + 64);
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 | v16) + v21 + ((v11 + v14) & ~v14);
  uint64_t v25 = (v24 + v17) & ~(v23 | v16);
  uint64_t v26 = (v24 + v18) & ~(v23 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v25, v26, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))((v11 + v23 + v25) & ~v23, (v11 + v23 + v26) & ~v23, v20);
  uint64_t v27 = (v11 + v23) & ~v23;
  uint64_t v28 = a3[5];
  uint64_t v29 = *(void *)(v22 + 64);
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (v31 | v16) + v29 + v27;
  uint64_t v33 = (v32 + v25) & ~(v31 | v16);
  uint64_t v34 = (v32 + v26) & ~(v31 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v33, v34, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))((v37 + v31 + v33) & ~v31, (v37 + v31 + v34) & ~v31, v28);
  return a1;
}

uint64_t sub_255AA061C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 40);
  uint64_t v8 = v6 + 40;
  uint64_t v36 = v4;
  v7();
  uint64_t v10 = v7;
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v12 = a3[3];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v8 + 40);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 40);
  uint64_t v17 = (v15 + v11 + a1) & ~v15;
  uint64_t v18 = (v15 + v11 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v17, v18, v4);
  uint64_t v19 = v10;
  uint64_t v37 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))((v11 + v14 + v17) & ~v14, (v11 + v14 + v18) & ~v14, v12);
  uint64_t v20 = a3[4];
  uint64_t v21 = *(void *)(v13 + 64);
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 | v16) + v21 + ((v11 + v14) & ~v14);
  uint64_t v25 = (v24 + v17) & ~(v23 | v16);
  uint64_t v26 = (v24 + v18) & ~(v23 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v25, v26, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40))((v11 + v23 + v25) & ~v23, (v11 + v23 + v26) & ~v23, v20);
  uint64_t v27 = (v11 + v23) & ~v23;
  uint64_t v28 = a3[5];
  uint64_t v29 = *(void *)(v22 + 64);
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (v31 | v16) + v29 + v27;
  uint64_t v33 = (v32 + v25) & ~(v31 | v16);
  uint64_t v34 = (v32 + v26) & ~(v31 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v33, v34, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40))((v37 + v31 + v33) & ~v31, (v37 + v31 + v34) & ~v31, v28);
  return a1;
}

uint64_t sub_255AA0898(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = a3[3];
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = v5;
  unsigned int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v8 = *(void *)(v4 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v12 = a3[4];
  uint64_t v11 = a3[5];
  uint64_t v13 = *(void *)(v12 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v7) {
    unsigned int v15 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  if (v15 <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(v11 - 8);
  uint64_t v18 = *(unsigned int *)(v17 + 84);
  uint64_t v19 = *(void *)(v5 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v17 + 80);
  if (v18 <= v7) {
    unsigned int v24 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v24 = *(_DWORD *)(v17 + 84);
  }
  if (v24 <= v16) {
    unsigned int v25 = v16;
  }
  else {
    unsigned int v25 = v24;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v26 = v21 | v20;
  uint64_t v27 = (v21 | v20) + v19;
  uint64_t v28 = v19 + v21;
  uint64_t v29 = v22 | v20;
  uint64_t v51 = (v22 | v20) + *(void *)(*(void *)(v4 - 8) + 64) + ((v19 + v21) & ~v21);
  uint64_t v30 = v19 + v22;
  uint64_t v31 = v23 | v20;
  uint64_t v50 = v31 + *(void *)(*(void *)(v12 - 8) + 64) + ((v19 + v22) & ~v22);
  uint64_t v32 = v19 + v23;
  unsigned int v33 = a2 - v25;
  if (a2 <= v25) {
    goto LABEL_36;
  }
  uint64_t v34 = (v32 & ~v23) + *(void *)(*(void *)(v11 - 8) + 64) + ((v50 + ((v51 + (v27 & ~v26)) & ~v29)) & ~v31);
  char v35 = 8 * v34;
  if (v34 > 3) {
    goto LABEL_19;
  }
  unsigned int v37 = ((v33 + ~(-1 << v35)) >> v35) + 1;
  if (HIWORD(v37))
  {
    int v36 = *(_DWORD *)((char *)a1 + v34);
    if (!v36) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  if (v37 > 0xFF)
  {
    int v36 = *(unsigned __int16 *)((char *)a1 + v34);
    if (!*(unsigned __int16 *)((char *)a1 + v34)) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  if (v37 >= 2)
  {
LABEL_19:
    int v36 = *((unsigned __int8 *)a1 + v34);
    if (!*((unsigned char *)a1 + v34)) {
      goto LABEL_36;
    }
LABEL_26:
    int v38 = (v36 - 1) << v35;
    if (v34 > 3) {
      int v38 = 0;
    }
    if (v34)
    {
      if (v34 <= 3) {
        int v39 = (v32 & ~v23)
      }
            + *(_DWORD *)(*(void *)(v11 - 8) + 64)
            + ((v50 + ((v51 + (v27 & ~v26)) & ~v29)) & ~v31);
      else {
        int v39 = 4;
      }
      switch(v39)
      {
        case 2:
          int v40 = *a1;
          break;
        case 3:
          int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)a1;
          break;
        default:
          int v40 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    return v25 + (v40 | v38) + 1;
  }
LABEL_36:
  if (!v25) {
    return 0;
  }
  if (v7 == v25)
  {
LABEL_38:
    uint64_t v41 = *(uint64_t (**)(unsigned __int16 *))(v6 + 48);
LABEL_39:
    return v41(a1);
  }
  unint64_t v43 = ((unint64_t)a1 + v27) & ~v26;
  if (v10 == v25)
  {
    if (v7 >= v9)
    {
      uint64_t v41 = *(uint64_t (**)(unsigned __int16 *))(v6 + 48);
      a1 = (unsigned __int16 *)(((unint64_t)a1 + v27) & ~v26);
      goto LABEL_39;
    }
    unint64_t v44 = (v28 + v43) & ~v21;
    uint64_t v45 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v46 = *(unsigned int *)(v8 + 84);
    uint64_t v47 = v4;
    return v45(v44, v46, v47);
  }
  a1 = (unsigned __int16 *)((v51 + v43) & ~v29);
  if (v15 == v25)
  {
    if (v7 >= v14) {
      goto LABEL_38;
    }
    unint64_t v44 = ((unint64_t)a1 + v30) & ~v22;
    uint64_t v45 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48);
    uint64_t v46 = *(unsigned int *)(v13 + 84);
    uint64_t v47 = v12;
    return v45(v44, v46, v47);
  }
  a1 = (unsigned __int16 *)(((unint64_t)a1 + v50) & ~v31);
  if (v7 >= v18) {
    goto LABEL_38;
  }
  unint64_t v48 = ((unint64_t)a1 + v32) & ~v23;
  uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t))(v17 + 48);
  return v49(v48, v18);
}

void sub_255AA0D54(unsigned char *a1, uint64_t a2, unsigned int a3, void *a4)
{
  uint64_t v64 = a4[2];
  uint64_t v7 = *(void *)(v64 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v63 = a4[3];
  uint64_t v9 = *(void *)(v63 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8) {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = a4[4];
  uint64_t v12 = a4[5];
  uint64_t v61 = v12;
  uint64_t v62 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v8) {
    unsigned int v16 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  if (v16 <= v11) {
    unsigned int v17 = v11;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(void *)(v12 - 8);
  uint64_t v19 = *(unsigned int *)(v18 + 84);
  uint64_t v20 = *(void *)(*(void *)(v64 - 8) + 64);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v25 = v20 + v22;
  uint64_t v26 = v23 | v21;
  uint64_t v27 = (v23 | v21) + *(void *)(*(void *)(v63 - 8) + 64) + ((v20 + v22) & ~v22);
  uint64_t v28 = v20 + v23;
  uint64_t v29 = v24 | v21;
  uint64_t v30 = (v24 | v21) + *(void *)(*(void *)(v13 - 8) + 64) + ((v20 + v23) & ~v23);
  uint64_t v31 = v20 + v24;
  size_t v32 = ((v20 + v24) & ~v24) + *(void *)(v18 + 64);
  if (v19 <= v8) {
    unsigned int v33 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v33 = *(_DWORD *)(v18 + 84);
  }
  if (v33 > v17) {
    unsigned int v17 = v33;
  }
  uint64_t v34 = v22 | v21;
  uint64_t v35 = v34 + v20;
  size_t v36 = ((v30 + ((v27 + ((v34 + v20) & ~v34)) & ~v26)) & ~v29) + v32;
  BOOL v37 = a3 >= v17;
  unsigned int v38 = a3 - v17;
  if (v38 != 0 && v37)
  {
    if (v36 <= 3)
    {
      unsigned int v42 = ((v38 + ~(-1 << (8 * v36))) >> (8 * v36)) + 1;
      if (HIWORD(v42))
      {
        int v39 = 4;
      }
      else if (v42 >= 0x100)
      {
        int v39 = 2;
      }
      else
      {
        int v39 = v42 > 1;
      }
      a2 = a2;
      if (v17 < a2)
      {
LABEL_21:
        unsigned int v40 = ~v17 + a2;
        if (v36 < 4)
        {
          int v41 = (v40 >> (8 * v36)) + 1;
          if (v36)
          {
            int v43 = v40 & ~(-1 << (8 * v36));
            bzero(a1, v36);
            if (v36 == 3)
            {
              *(_WORD *)a1 = v43;
              a1[2] = BYTE2(v43);
            }
            else if (v36 == 2)
            {
              *(_WORD *)a1 = v43;
            }
            else
            {
              *a1 = v43;
            }
          }
        }
        else
        {
          bzero(a1, v36);
          *(_DWORD *)a1 = v40;
          int v41 = 1;
        }
        switch(v39)
        {
          case 1:
            a1[v36] = v41;
            return;
          case 2:
            *(_WORD *)&a1[v36] = v41;
            return;
          case 3:
            goto LABEL_81;
          case 4:
            *(_DWORD *)&a1[v36] = v41;
            return;
          default:
            return;
        }
      }
    }
    else
    {
      int v39 = 1;
      if (v17 < a2) {
        goto LABEL_21;
      }
    }
  }
  else
  {
    int v39 = 0;
    if (v17 < a2) {
      goto LABEL_21;
    }
  }
  uint64_t v44 = ~v34;
  uint64_t v60 = ~v22;
  uint64_t v45 = ~v23;
  uint64_t v46 = ~v29;
  uint64_t v47 = ~v24;
  switch(v39)
  {
    case 1:
      a1[v36] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 2:
      *(_WORD *)&a1[v36] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 3:
LABEL_81:
      __break(1u);
      JUMPOUT(0x255AA133CLL);
    case 4:
      *(_DWORD *)&a1[v36] = 0;
      goto LABEL_37;
    default:
LABEL_37:
      if (!a2) {
        return;
      }
LABEL_38:
      if (v8 == v17)
      {
        unint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
        uint64_t v49 = a1;
LABEL_53:
        v48(v49, a2);
        return;
      }
      uint64_t v50 = v45;
      uint64_t v49 = (unsigned char *)((unint64_t)&a1[v35] & v44);
      if (v11 == v17)
      {
        if (v8 < v10)
        {
          unint64_t v51 = (unint64_t)&v49[v25] & v60;
          uint64_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
          uint64_t v53 = a2;
          uint64_t v54 = v10;
          uint64_t v55 = v63;
          goto LABEL_76;
        }
LABEL_52:
        unint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
        goto LABEL_53;
      }
      uint64_t v49 = (unsigned char *)((unint64_t)&v49[v27] & ~v26);
      if (v16 == v17)
      {
        if (v8 < v15)
        {
          unint64_t v51 = (unint64_t)&v49[v28] & v50;
          uint64_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
          uint64_t v53 = a2;
          uint64_t v54 = v15;
          uint64_t v55 = v62;
          goto LABEL_76;
        }
        goto LABEL_52;
      }
      unint64_t v56 = (unint64_t)&v49[v30] & v46;
      if (v33 >= a2)
      {
        if (v8 >= v19)
        {
          unint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
          uint64_t v49 = (unsigned char *)((unint64_t)&v49[v30] & v46);
          goto LABEL_53;
        }
        unint64_t v51 = (v31 + v56) & v47;
        uint64_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
        uint64_t v53 = a2;
        uint64_t v54 = v19;
        uint64_t v55 = v61;
LABEL_76:
        v52(v51, v53, v54, v55);
        return;
      }
      if (v32 <= 3) {
        int v57 = ~(-1 << (8 * v32));
      }
      else {
        int v57 = -1;
      }
      if (v32)
      {
        int v58 = v57 & (~v33 + a2);
        if (v32 <= 3) {
          int v59 = v32;
        }
        else {
          int v59 = 4;
        }
        bzero((void *)((unint64_t)&v49[v30] & v46), v32);
        switch(v59)
        {
          case 2:
            *(_WORD *)unint64_t v56 = v58;
            break;
          case 3:
            *(_WORD *)unint64_t v56 = v58;
            *(unsigned char *)(v56 + 2) = BYTE2(v58);
            break;
          case 4:
            *(_DWORD *)unint64_t v56 = v58;
            break;
          default:
            *(unsigned char *)unint64_t v56 = v58;
            break;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ContentLookup3()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255AA138C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 104);
}

uint64_t sub_255AA1394()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = type metadata accessor for ContentLookupItem();
    if (v3 > 0x3F) {
      return v2;
    }
    uint64_t v2 = type metadata accessor for ContentLookupItem();
    if (v4 > 0x3F) {
      return v2;
    }
    uint64_t v2 = type metadata accessor for ContentLookupItem();
    if (v5 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t v0 = type metadata accessor for ContentLookupItem();
      if (v6 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_255AA1598(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v43 = a3[2];
  uint64_t v3 = *(void *)(v43 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = *(_DWORD *)(v3 + 80);
  uint64_t v48 = a3[3];
  uint64_t v6 = *(void *)(v48 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v46 = v4 + v7;
  uint64_t v8 = a3[5];
  uint64_t v49 = *(void *)(a3[4] - 8);
  uint64_t v9 = *(_DWORD *)(v49 + 80);
  uint64_t v47 = v4 + v9;
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v50 + 80);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v4 + v10;
  uint64_t v15 = v4 + v13;
  uint64_t v16 = (v7 | v5) + v4;
  uint64_t v44 = (v9 | v5) + *(void *)(v6 + 64) + ((v4 + v7) & ~v7);
  uint64_t v45 = (v10 | v5) + *(void *)(v49 + 64) + ((v4 + v9) & ~v9);
  unint64_t v17 = v7 | v5 | v9 | v10 | v13;
  if (v17 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v3 + 80) | *(_DWORD *)(v49 + 80) | *(_DWORD *)(v50 + 80) | v13) & 0x100000) != 0
    || (v15 & ~(unint64_t)v13)
     + *(void *)(v12 + 64)
     + (((v13 | v5)
       + *(void *)(v50 + 64)
       + ((v4 + v10) & ~v10)
       + ((v45 + ((v44 + (v16 & ~(v7 | v5))) & ~(v9 | v5))) & ~(v10 | v5))) & ~(v13 | v5)) > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v27 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    uint64_t v42 = *(void *)(a3[6] - 8);
    uint64_t v21 = ~(v7 | v5);
    uint64_t v37 = a3[4];
    uint64_t v22 = ~v7;
    uint64_t v34 = ~(v9 | v5);
    uint64_t v35 = ~v9;
    uint64_t v36 = ~(v10 | v5);
    uint64_t v39 = ~v10;
    unint64_t v40 = ~(v13 | v5);
    uint64_t v23 = *(void (**)(uint64_t *, uint64_t *))(v3 + 16);
    uint64_t v41 = v15;
    unint64_t v38 = (v13 | v5) + *(void *)(v50 + 64) + ((v4 + v10) & ~v10);
    v23(a1, a2);
    unint64_t v24 = ((unint64_t)a1 + v16) & v21;
    unint64_t v25 = ((unint64_t)a2 + v16) & v21;
    ((void (*)(unint64_t, unint64_t, uint64_t))v23)(v24, v25, v43);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((v46 + v24) & v22, (v46 + v25) & v22, v48);
    unint64_t v26 = v44 + v24;
    uint64_t v27 = a1;
    uint64_t v28 = v26 & v34;
    unint64_t v29 = (v44 + v25) & v34;
    ((void (*)(unint64_t, unint64_t, uint64_t))v23)(v26 & v34, v29, v43);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v49 + 16))((v47 + v28) & v35, (v47 + v29) & v35, v37);
    uint64_t v30 = (v45 + v28) & v36;
    unint64_t v31 = (v45 + v29) & v36;
    ((void (*)(uint64_t, unint64_t, uint64_t))v23)(v30, v31, v43);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v50 + 16))((v14 + v30) & v39, (v14 + v31) & v39, v8);
    uint64_t v32 = (v38 + v30) & v40;
    ((void (*)(uint64_t, unint64_t, uint64_t))v23)(v32, (v38 + v31) & v40, v43);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 16))((v41 + v32) & ~(unint64_t)v13, (v41 + ((v38 + v31) & v40)) & ~(unint64_t)v13, v11);
  }
  return v27;
}

uint64_t sub_255AA1A20(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8);
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v35 = a2[2];
  v5(a1, v35);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v4 + 64) + a1;
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t v34 = v8;
  uint64_t v30 = v5;
  uint64_t v31 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = a2[3];
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + (v11 | v31)) & ~(v11 | v31);
  v6(v12, v35);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))((v8 + v11 + v12) & ~v11, v9);
  uint64_t v13 = *(void *)(v10 + 64) + ((v8 + v11) & ~v11) + v12;
  uint64_t v14 = a2[4];
  uint64_t v32 = a2;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v31;
  uint64_t v18 = (v13 + (v16 | v31)) & ~(v16 | v31);
  v30(v18, v35);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v34 + v16 + v18) & ~v16, v14);
  uint64_t v19 = *(void *)(v15 + 64) + ((v34 + v16) & ~v16);
  uint64_t v20 = a2[5];
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (v19 + (v22 | v17) + v18) & ~(v22 | v17);
  v30(v23, v35);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))((v34 + v22 + v23) & ~v22, v20);
  uint64_t v24 = *(void *)(v21 + 64) + ((v34 + v22) & ~v22);
  uint64_t v25 = a2[6];
  uint64_t v33 = *(void *)(v32[6] - 8);
  uint64_t v26 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v27 = (v24 + (v26 | v17) + v23) & ~(v26 | v17);
  v30(v27, v35);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);

  return v28((v34 + v26 + v27) & ~v26, v25);
}

uint64_t sub_255AA1CE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 16);
  v7();
  uint64_t v9 = v7;
  uint64_t v45 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v47 = v10;
  uint64_t v11 = a3[3];
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v48 = v16;
  uint64_t v17 = (v15 + v10 + a1) & ~v15;
  uint64_t v18 = (v15 + v10 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v4);
  uint64_t v19 = v10 + v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))((v19 + v17) & ~v14, (v19 + v18) & ~v14, v11);
  uint64_t v20 = v19 & ~v14;
  uint64_t v21 = v12[4];
  uint64_t v22 = *(void *)(v13 + 64);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = (v24 | v16) + v22 + v20;
  uint64_t v26 = (v25 + v17) & ~(v24 | v16);
  uint64_t v27 = (v25 + v18) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v21);
  uint64_t v28 = (v47 + v24) & ~v24;
  uint64_t v29 = v12[5];
  uint64_t v30 = *(void *)(v23 + 64);
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (v32 | v16) + v30 + v28;
  uint64_t v34 = (v33 + v26) & ~(v32 | v16);
  uint64_t v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v29);
  uint64_t v36 = (v47 + v32) & ~v32;
  uint64_t v37 = v12[6];
  uint64_t v38 = *(void *)(v31 + 64);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = (v40 | v48) + v38 + v36;
  uint64_t v42 = (v41 + v34) & ~(v40 | v48);
  uint64_t v43 = (v41 + v35) & ~(v40 | v48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v37);
  return a1;
}

uint64_t sub_255AA2004(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 24);
  v7();
  uint64_t v9 = v7;
  uint64_t v45 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v47 = v10;
  uint64_t v11 = a3[3];
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v48 = v16;
  uint64_t v17 = (v15 + v10 + a1) & ~v15;
  uint64_t v18 = (v15 + v10 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v4);
  uint64_t v19 = v10 + v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))((v19 + v17) & ~v14, (v19 + v18) & ~v14, v11);
  uint64_t v20 = v19 & ~v14;
  uint64_t v21 = v12[4];
  uint64_t v22 = *(void *)(v13 + 64);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = (v24 | v16) + v22 + v20;
  uint64_t v26 = (v25 + v17) & ~(v24 | v16);
  uint64_t v27 = (v25 + v18) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 24))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v21);
  uint64_t v28 = (v47 + v24) & ~v24;
  uint64_t v29 = v12[5];
  uint64_t v30 = *(void *)(v23 + 64);
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (v32 | v16) + v30 + v28;
  uint64_t v34 = (v33 + v26) & ~(v32 | v16);
  uint64_t v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v29);
  uint64_t v36 = (v47 + v32) & ~v32;
  uint64_t v37 = v12[6];
  uint64_t v38 = *(void *)(v31 + 64);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = (v40 | v48) + v38 + v36;
  uint64_t v42 = (v41 + v34) & ~(v40 | v48);
  uint64_t v43 = (v41 + v35) & ~(v40 | v48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 24))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v37);
  return a1;
}

uint64_t sub_255AA2324(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 32);
  v7();
  uint64_t v9 = v7;
  uint64_t v45 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v47 = v10;
  uint64_t v11 = a3[3];
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v48 = v16;
  uint64_t v17 = (v15 + v10 + a1) & ~v15;
  uint64_t v18 = (v15 + v10 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v4);
  uint64_t v19 = v10 + v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))((v19 + v17) & ~v14, (v19 + v18) & ~v14, v11);
  uint64_t v20 = v19 & ~v14;
  uint64_t v21 = v12[4];
  uint64_t v22 = *(void *)(v13 + 64);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = (v24 | v16) + v22 + v20;
  uint64_t v26 = (v25 + v17) & ~(v24 | v16);
  uint64_t v27 = (v25 + v18) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v21);
  uint64_t v28 = (v47 + v24) & ~v24;
  uint64_t v29 = v12[5];
  uint64_t v30 = *(void *)(v23 + 64);
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (v32 | v16) + v30 + v28;
  uint64_t v34 = (v33 + v26) & ~(v32 | v16);
  uint64_t v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v29);
  uint64_t v36 = (v47 + v32) & ~v32;
  uint64_t v37 = v12[6];
  uint64_t v38 = *(void *)(v31 + 64);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = (v40 | v48) + v38 + v36;
  uint64_t v42 = (v41 + v34) & ~(v40 | v48);
  uint64_t v43 = (v41 + v35) & ~(v40 | v48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v37);
  return a1;
}

uint64_t sub_255AA2644(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void (**)(void))(v6 + 40);
  v7();
  uint64_t v9 = v7;
  uint64_t v45 = v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v47 = v10;
  uint64_t v11 = a3[3];
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v14 | *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v48 = v16;
  uint64_t v17 = (v15 + v10 + a1) & ~v15;
  uint64_t v18 = (v15 + v10 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v4);
  uint64_t v19 = v10 + v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))((v19 + v17) & ~v14, (v19 + v18) & ~v14, v11);
  uint64_t v20 = v19 & ~v14;
  uint64_t v21 = v12[4];
  uint64_t v22 = *(void *)(v13 + 64);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = (v24 | v16) + v22 + v20;
  uint64_t v26 = (v25 + v17) & ~(v24 | v16);
  uint64_t v27 = (v25 + v18) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v21);
  uint64_t v28 = (v47 + v24) & ~v24;
  uint64_t v29 = v12[5];
  uint64_t v30 = *(void *)(v23 + 64);
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (v32 | v16) + v30 + v28;
  uint64_t v34 = (v33 + v26) & ~(v32 | v16);
  uint64_t v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v29);
  uint64_t v36 = (v47 + v32) & ~v32;
  uint64_t v37 = v12[6];
  uint64_t v38 = *(void *)(v31 + 64);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = (v40 | v48) + v38 + v36;
  uint64_t v42 = (v41 + v34) & ~(v40 | v48);
  uint64_t v43 = (v41 + v35) & ~(v40 | v48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v37);
  return a1;
}

uint64_t sub_255AA2964(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  uint64_t v7 = v6;
  uint64_t v62 = a3[4];
  uint64_t v8 = *(void *)(v62 - 8);
  if (*(_DWORD *)(v6 + 84) <= v5) {
    unsigned int v9 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v63 = *(_DWORD *)(v8 + 84);
  if (v63 <= v5) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v60 = a3[5];
  uint64_t v11 = *(void *)(v60 - 8);
  if (v10 <= v9) {
    unsigned int v12 = v9;
  }
  else {
    unsigned int v12 = v10;
  }
  unsigned int v61 = *(_DWORD *)(v11 + 84);
  if (v61 <= v5) {
    unsigned int v13 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v59 = a3[6];
  uint64_t v14 = *(void *)(v59 - 8);
  if (v13 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = v13;
  }
  uint64_t v16 = *(unsigned int *)(v14 + 84);
  uint64_t v17 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v65 = v4;
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = *(void *)(v6 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = *(void *)(v8 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = *(void *)(v11 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v26 = *(void *)(v14 + 64);
  if (v16 <= v5) {
    unsigned int v27 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v27 = *(_DWORD *)(v14 + 84);
  }
  if (v27 <= v15) {
    unsigned int v28 = v15;
  }
  else {
    unsigned int v28 = v27;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = v19 | v18;
  uint64_t v64 = (v19 | v18) + v17;
  uint64_t v30 = v17 + v19;
  uint64_t v31 = v21 | v18;
  uint64_t v58 = (v21 | v18) + v20 + ((v17 + v19) & ~v19);
  uint64_t v32 = v17 + v21;
  uint64_t v33 = v23 | v18;
  uint64_t v57 = (v23 | v18) + v22 + ((v17 + v21) & ~v21);
  uint64_t v34 = v17 + v23;
  uint64_t v35 = v25 | v18;
  uint64_t v36 = v35 + v24 + ((v17 + v23) & ~v23);
  uint64_t v37 = v17 + v25;
  unsigned int v38 = a2 - v28;
  if (a2 <= v28) {
    goto LABEL_42;
  }
  uint64_t v39 = (v36 + ((v57 + ((v58 + (v64 & ~v29)) & ~v31)) & ~v33)) & ~v35;
  uint64_t v40 = (v37 & ~v25) + v26;
  uint64_t v41 = v40 + v39;
  char v42 = 8 * (v40 + v39);
  if ((v40 + v39) > 3) {
    goto LABEL_25;
  }
  unsigned int v44 = ((v38 + ~(-1 << v42)) >> v42) + 1;
  if (HIWORD(v44))
  {
    int v43 = *(_DWORD *)((char *)a1 + v41);
    if (!v43) {
      goto LABEL_42;
    }
    goto LABEL_32;
  }
  if (v44 > 0xFF)
  {
    int v43 = *(unsigned __int16 *)((char *)a1 + v41);
    if (!*(unsigned __int16 *)((char *)a1 + v41)) {
      goto LABEL_42;
    }
    goto LABEL_32;
  }
  if (v44 >= 2)
  {
LABEL_25:
    int v43 = *((unsigned __int8 *)a1 + v41);
    if (!*((unsigned char *)a1 + v41)) {
      goto LABEL_42;
    }
LABEL_32:
    int v45 = (v43 - 1) << v42;
    if (v41 > 3) {
      int v45 = 0;
    }
    if (v41)
    {
      if (v41 <= 3) {
        int v46 = v40 + v39;
      }
      else {
        int v46 = 4;
      }
      switch(v46)
      {
        case 2:
          int v47 = *a1;
          break;
        case 3:
          int v47 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v47 = *(_DWORD *)a1;
          break;
        default:
          int v47 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v47 = 0;
    }
    return v28 + (v47 | v45) + 1;
  }
LABEL_42:
  if (!v28) {
    return 0;
  }
  if (v5 == v28)
  {
LABEL_44:
    uint64_t v48 = *(uint64_t (**)(unsigned __int16 *))(v65 + 48);
LABEL_45:
    return v48(a1);
  }
  unint64_t v50 = ((unint64_t)a1 + v64) & ~v29;
  if (v9 != v28)
  {
    unint64_t v51 = (unsigned __int16 *)((v58 + v50) & ~v31);
    if (v10 == v28)
    {
      if (v5 >= v63)
      {
        uint64_t v48 = *(uint64_t (**)(unsigned __int16 *))(v65 + 48);
        a1 = v51;
        goto LABEL_45;
      }
      unint64_t v52 = ((unint64_t)v51 + v32) & ~v21;
      uint64_t v53 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48);
      uint64_t v54 = v63;
      uint64_t v55 = v62;
    }
    else
    {
      a1 = (unsigned __int16 *)(((unint64_t)v51 + v57) & ~v33);
      if (v13 == v28)
      {
        if (v5 >= v61) {
          goto LABEL_44;
        }
        unint64_t v52 = ((unint64_t)a1 + v34) & ~v23;
        uint64_t v53 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
        uint64_t v54 = v61;
        uint64_t v55 = v60;
      }
      else
      {
        a1 = (unsigned __int16 *)(((unint64_t)a1 + v36) & ~v35);
        if (v5 >= v16) {
          goto LABEL_44;
        }
        unint64_t v52 = ((unint64_t)a1 + v37) & ~v25;
        uint64_t v53 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48);
        uint64_t v54 = v16;
        uint64_t v55 = v59;
      }
    }
    return v53(v52, v54, v55);
  }
  if (v5 < *(_DWORD *)(v7 + 84))
  {
    a1 = (unsigned __int16 *)((v30 + v50) & ~v19);
    uint64_t v48 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
    goto LABEL_45;
  }
  unint64_t v56 = *(uint64_t (**)(unint64_t))(v65 + 48);
  return v56(((unint64_t)a1 + v64) & ~v29);
}

void sub_255AA2F40(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[2] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a4[3] - 8);
  unsigned int v64 = *(_DWORD *)(v7 + 84);
  if (v64 <= v6) {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v61 = a4[4];
  uint64_t v9 = *(void *)(v61 - 8);
  unsigned int v62 = *(_DWORD *)(v9 + 84);
  if (v62 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  if (v10 <= v8) {
    unsigned int v11 = v8;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v59 = a4[5];
  uint64_t v12 = *(void *)(v59 - 8);
  unsigned int v60 = *(_DWORD *)(v12 + 84);
  if (v60 <= v6) {
    unsigned int v13 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v12 + 84);
  }
  if (v13 <= v11) {
    unsigned int v14 = v11;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(a4[6] - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  uint64_t v17 = *(void *)(v5 + 64);
  uint64_t v65 = v5;
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v63 = *(void *)(a4[3] - 8);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(void *)(v61 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v58 = v15;
  uint64_t v23 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = v21 | v18;
  uint64_t v25 = v17 + v19;
  uint64_t v26 = (v21 | v18) + *(void *)(v7 + 64) + ((v17 + v19) & ~v19);
  uint64_t v27 = v22 | v18;
  uint64_t v28 = v17 + v21;
  uint64_t v29 = (v22 | v18) + *(void *)(v20 + 64) + ((v17 + v21) & ~v21);
  uint64_t v30 = v23 | v18;
  uint64_t v31 = v17 + v22;
  uint64_t v32 = (v23 | v18) + *(void *)(*(void *)(v59 - 8) + 64) + ((v17 + v22) & ~v22);
  uint64_t v57 = v17 + v23;
  if (v16 <= v6) {
    unsigned int v34 = v6;
  }
  else {
    unsigned int v34 = *(_DWORD *)(v15 + 84);
  }
  if (v34 > v14) {
    unsigned int v14 = v34;
  }
  uint64_t v35 = v19 | v18;
  uint64_t v36 = v35 + v17;
  size_t v33 = ((v17 + v23) & ~v23) + *(void *)(v15 + 64);
  size_t v37 = ((v32 + ((v29 + ((v26 + ((v35 + v17) & ~v35)) & ~v24)) & ~v27)) & ~v30) + v33;
  BOOL v38 = a3 >= v14;
  unsigned int v39 = a3 - v14;
  if (v39 != 0 && v38)
  {
    if (v37 <= 3)
    {
      unsigned int v47 = ((v39 + ~(-1 << (8 * v37))) >> (8 * v37)) + 1;
      if (HIWORD(v47))
      {
        int v40 = 4;
      }
      else if (v47 >= 0x100)
      {
        int v40 = 2;
      }
      else
      {
        int v40 = v47 > 1;
      }
    }
    else
    {
      int v40 = 1;
    }
  }
  else
  {
    int v40 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v41 = ~v14 + a2;
    if (v37 < 4)
    {
      int v42 = (v41 >> (8 * v37)) + 1;
      if (v37)
      {
        int v48 = v41 & ~(-1 << (8 * v37));
        bzero(a1, v37);
        if (v37 == 3)
        {
          *(_WORD *)a1 = v48;
          a1[2] = BYTE2(v48);
        }
        else if (v37 == 2)
        {
          *(_WORD *)a1 = v48;
        }
        else
        {
          *a1 = v48;
        }
      }
    }
    else
    {
      bzero(a1, v37);
      *(_DWORD *)a1 = v41;
      int v42 = 1;
    }
    switch(v40)
    {
      case 1:
        a1[v37] = v42;
        return;
      case 2:
        *(_WORD *)&a1[v37] = v42;
        return;
      case 3:
        goto LABEL_86;
      case 4:
        *(_DWORD *)&a1[v37] = v42;
        return;
      default:
        return;
    }
  }
  uint64_t v43 = ~v35;
  uint64_t v56 = ~v19;
  uint64_t v44 = ~v22;
  uint64_t v45 = ~v30;
  uint64_t v46 = ~v23;
  switch(v40)
  {
    case 1:
      a1[v37] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)&a1[v37] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
LABEL_86:
      __break(1u);
      JUMPOUT(0x255AA35D4);
    case 4:
      *(_DWORD *)&a1[v37] = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (!a2) {
        return;
      }
LABEL_41:
      if (v6 == v14)
      {
        uint64_t v49 = *(void (**)(unsigned char *))(v65 + 56);
        unint64_t v50 = a1;
        goto LABEL_67;
      }
      uint64_t v51 = v44;
      unint64_t v50 = (unsigned char *)((unint64_t)&a1[v36] & v43);
      if (v8 == v14)
      {
        if (v6 < v64)
        {
          unint64_t v50 = (unsigned char *)((unint64_t)&v50[v25] & v56);
          uint64_t v49 = *(void (**)(unsigned char *))(v63 + 56);
          goto LABEL_67;
        }
        goto LABEL_66;
      }
      unint64_t v50 = (unsigned char *)((unint64_t)&v50[v26] & ~v24);
      if (v10 == v14)
      {
        if (v6 < v62)
        {
          unint64_t v50 = (unsigned char *)((unint64_t)&v50[v28] & ~v21);
          uint64_t v49 = *(void (**)(unsigned char *))(v20 + 56);
          goto LABEL_69;
        }
        goto LABEL_66;
      }
      unint64_t v50 = (unsigned char *)((unint64_t)&v50[v29] & ~v27);
      if (v13 == v14)
      {
        if (v6 < v60)
        {
          unint64_t v50 = (unsigned char *)((unint64_t)&v50[v31] & v51);
          uint64_t v49 = *(void (**)(unsigned char *))(v12 + 56);
          goto LABEL_69;
        }
LABEL_66:
        uint64_t v49 = *(void (**)(unsigned char *))(v65 + 56);
        goto LABEL_67;
      }
      unint64_t v52 = (unsigned char *)((unint64_t)&v50[v32] & v45);
      if (v34 >= a2)
      {
        if (v6 >= v16)
        {
          uint64_t v49 = *(void (**)(unsigned char *))(v65 + 56);
          unint64_t v50 = (unsigned char *)((unint64_t)&v50[v32] & v45);
        }
        else
        {
          unint64_t v50 = (unsigned char *)((unint64_t)&v52[v57] & v46);
          uint64_t v49 = *(void (**)(unsigned char *))(v58 + 56);
        }
LABEL_67:
LABEL_69:
        v49(v50);
        return;
      }
      if (v33 <= 3) {
        int v53 = ~(-1 << (8 * v33));
      }
      else {
        int v53 = -1;
      }
      if (v33)
      {
        int v54 = v53 & (~v34 + a2);
        if (v33 <= 3) {
          int v55 = v33;
        }
        else {
          int v55 = 4;
        }
        bzero(v52, v33);
        switch(v55)
        {
          case 2:
            *(_WORD *)unint64_t v52 = v54;
            break;
          case 3:
            *(_WORD *)unint64_t v52 = v54;
            v52[2] = BYTE2(v54);
            break;
          case 4:
            *(_DWORD *)unint64_t v52 = v54;
            break;
          default:
            *unint64_t v52 = v54;
            break;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ContentLookup4()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255AA3624()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AA367C()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AA371C()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AA37F8()
{
  return swift_getWitnessTable();
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.double height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

double CGSize.aspectRatio.getter(double a1, double a2)
{
  double result = 0.0;
  if (a2 != 0.0)
  {
    double v4 = fabs(a2);
    double v5 = fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
    if ((~*(void *)&v4 & 0x7FF0000000000000) == 0 || v4 > v5) {
      return a1 / a2;
    }
  }
  return result;
}

CGSize __swiftcall CGSize.inset(by:)(UIEdgeInsets by)
{
  double v3 = v1 - by.left - by.right;
  double v4 = v2 - by.top - by.bottom;
  double v5 = v3;
  result.double height = v4;
  result.width = v5;
  return result;
}

double sub_255AA39C4(double *a1, CGFloat *a2)
{
  double v3 = *a1;
  double v4 = a1[1];
  v9.origin.x = *a2;
  CGFloat v5 = a2[1];
  CGFloat v6 = a2[2];
  CGFloat v7 = a2[3];
  v9.origin.y = v5;
  v9.size.width = v6;
  v9.size.double height = v7;
  v10.origin.x = v3 - CGRectGetWidth(v9) * 0.5;
  *a2 = v10.origin.x;
  v10.origin.y = v5;
  v10.size.width = v6;
  v10.size.double height = v7;
  double result = v4 - CGRectGetHeight(v10) * 0.5;
  a2[1] = result;
  return result;
}

double CGRect.center.setter(double a1, double a2)
{
  v9.origin.x = *v2;
  CGFloat v5 = v2[1];
  CGFloat v6 = v2[2];
  CGFloat v7 = v2[3];
  v9.origin.y = v5;
  v9.size.width = v6;
  v9.size.double height = v7;
  v10.origin.x = a1 - CGRectGetWidth(v9) * 0.5;
  *double v2 = v10.origin.x;
  v10.origin.y = v5;
  v10.size.width = v6;
  v10.size.double height = v7;
  double result = a2 - CGRectGetHeight(v10) * 0.5;
  v2[1] = result;
  return result;
}

double (*CGRect.center.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  CGFloat v3 = *v1;
  CGFloat v4 = v1[1];
  CGFloat v5 = v1[2];
  CGFloat v6 = v1[3];
  v10.origin.x = *v1;
  v10.origin.y = v4;
  v10.size.width = v5;
  v10.size.double height = v6;
  CGFloat MidX = CGRectGetMidX(v10);
  v11.origin.x = v3;
  v11.origin.y = v4;
  v11.size.width = v5;
  v11.size.double height = v6;
  CGFloat MidY = CGRectGetMidY(v11);
  *(CGFloat *)a1 = MidX;
  *(CGFloat *)(a1 + 8) = MidY;
  return sub_255AA3B4C;
}

double sub_255AA3B4C(uint64_t a1)
{
  double v1 = *(CGFloat **)(a1 + 16);
  double v2 = *(double *)a1;
  double v3 = *(double *)(a1 + 8);
  v8.origin.x = *v1;
  CGFloat v4 = v1[1];
  CGFloat v5 = v1[2];
  CGFloat v6 = v1[3];
  v8.origin.y = v4;
  v8.size.width = v5;
  v8.size.double height = v6;
  v9.origin.x = v2 - CGRectGetWidth(v8) * 0.5;
  *double v1 = v9.origin.x;
  v9.origin.y = v4;
  v9.size.width = v5;
  v9.size.double height = v6;
  double result = v3 - CGRectGetHeight(v9) * 0.5;
  v1[1] = result;
  return result;
}

double CGRect.area.getter(double a1, double a2, double a3, double a4)
{
  return a3 * a4;
}

double CGSize.area.getter(double a1, double a2)
{
  return a1 * a2;
}

BOOL CGRect.isContained(in:percentage:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  v24.size.double height = a4;
  v24.origin.x = a1;
  v22.origin.x = a6;
  v22.origin.y = a7;
  v22.size.width = a8;
  v22.size.double height = a9;
  v24.origin.y = a2;
  v24.size.width = a3;
  CGRect v23 = CGRectIntersection(v22, v24);
  return a8 * a9 * a5 <= v23.size.width * v23.size.height;
}

__C::CGRect __swiftcall CGRect.offset(by:)(UIOffset by)
{
  CGFloat vertical = by.vertical;
  CGFloat horizontal = by.horizontal;
  v7.origin.x = v1;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.double height = v4;
  return (__C::CGRect)CGRectOffset(v7, horizontal, vertical);
}

__C::CGRect __swiftcall CGRect.inset(by:for:)(NSDirectionalEdgeInsets by, UIUserInterfaceLayoutDirection a2)
{
  double v6 = v3;
  if (a2 == UIUserInterfaceLayoutDirectionRightToLeft) {
    double trailing = by.trailing;
  }
  else {
    double trailing = by.leading;
  }
  double v8 = UIEdgeInsetsInsetRect(v2, v6, v4, v5, by.top, trailing);
  result.size.double height = v11;
  result.size.width = v10;
  result.origin.y = v9;
  result.origin.x = v8;
  return result;
}

UIEdgeInsets __swiftcall CGRect.insets(from:)(__C::CGRect from)
{
  CGFloat v5 = v4;
  CGFloat v6 = v3;
  CGFloat v7 = v2;
  CGFloat v8 = v1;
  CGFloat height = from.size.height;
  CGFloat x = from.origin.x;
  CGFloat y = from.origin.y;
  CGFloat width = from.size.width;
  CGFloat v22 = from.size.width;
  double MinY = CGRectGetMinY((CGRect)from);
  v25.origin.CGFloat x = v8;
  v25.origin.CGFloat y = v7;
  v25.size.CGFloat width = v6;
  v25.size.CGFloat height = v5;
  double v24 = MinY - CGRectGetMinY(v25);
  v26.origin.CGFloat x = x;
  v26.origin.CGFloat y = y;
  v26.size.CGFloat width = width;
  v26.size.CGFloat height = height;
  double MinX = CGRectGetMinX(v26);
  v27.origin.CGFloat x = v8;
  v27.origin.CGFloat y = v7;
  v27.size.CGFloat width = v6;
  v27.size.CGFloat height = v5;
  double v23 = MinX - CGRectGetMinX(v27);
  v28.origin.CGFloat x = v8;
  v28.origin.CGFloat y = v7;
  v28.size.CGFloat width = v6;
  v28.size.CGFloat height = v5;
  double MaxY = CGRectGetMaxY(v28);
  v29.origin.CGFloat x = x;
  v29.origin.CGFloat y = y;
  v29.size.CGFloat width = v22;
  v29.size.CGFloat height = height;
  double v15 = MaxY - CGRectGetMaxY(v29);
  v30.origin.CGFloat x = v8;
  v30.origin.CGFloat y = v7;
  v30.size.CGFloat width = v6;
  v30.size.CGFloat height = v5;
  double MaxX = CGRectGetMaxX(v30);
  v31.origin.CGFloat x = x;
  v31.origin.CGFloat y = y;
  v31.size.CGFloat width = v22;
  v31.size.CGFloat height = height;
  double v17 = MaxX - CGRectGetMaxX(v31);
  double v19 = v23;
  double v18 = v24;
  double v20 = v15;
  result.right = v17;
  result.bottom = v20;
  result.left = v19;
  result.top = v18;
  return result;
}

__C::CGRect __swiftcall CGRect.centeringAlong(axes:in:)(UIAxis axes, UIView *in)
{
  CGFloat v6 = v5;
  CGFloat v26 = v4;
  CGFloat v7 = v3;
  CGFloat v8 = v2;
  char v10 = axes;
  [(UIView *)in bounds];
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  id v19 = [(UIView *)in traitCollection];
  objc_msgSend(v19, sel_displayScale);
  double v21 = v20;

  double v22 = CGRect.centeringAlong(axes:bounds:scale:)(v10, v12, v14, v16, v18, v21, v8, v7, v26, v6);
  result.size.CGFloat height = v25;
  result.size.CGFloat width = v24;
  result.origin.CGFloat y = v23;
  result.origin.CGFloat x = v22;
  return result;
}

double CGRect.centeringAlong(axes:bounds:scale:)(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  double v17 = a7;
  if (a1)
  {
    double rect_8 = CGRectGetMinX(*(CGRect *)&a2);
    v37.origin.CGFloat x = a2;
    v37.origin.CGFloat y = a3;
    v37.size.CGFloat width = a4;
    v37.size.CGFloat height = a5;
    double Width = CGRectGetWidth(v37);
    v38.origin.CGFloat x = a7;
    v38.origin.CGFloat y = a8;
    v38.size.CGFloat width = a9;
    v38.size.CGFloat height = a10;
    double v27 = round((rect_8 + (Width - CGRectGetWidth(v38)) * 0.5) * a6);
    double v17 = v27 / sub_255C146A8(a6);
  }
  if ((a1 & 2) != 0)
  {
    v39.origin.CGFloat x = a2;
    v39.origin.CGFloat y = a3;
    v39.size.CGFloat width = a4;
    v39.size.CGFloat height = a5;
    double MinY = CGRectGetMinY(v39);
    v40.origin.CGFloat x = a2;
    v40.origin.CGFloat y = a3;
    v40.size.CGFloat width = a4;
    v40.size.CGFloat height = a5;
    double Height = CGRectGetHeight(v40);
    v41.origin.CGFloat x = v17;
    v41.origin.CGFloat y = a8;
    v41.size.CGFloat width = a9;
    v41.size.CGFloat height = a10;
    round((MinY + (Height - CGRectGetHeight(v41)) * 0.5) * a6);
    sub_255C146A8(a6);
  }
  return v17;
}

__C::CGRect __swiftcall CGRect.applyingLayoutDirection(in:bounds:)(UIView *in, __C::CGRect_optional *bounds)
{
  CGFloat v6 = v5;
  CGFloat v7 = v4;
  CGFloat MinY = v3;
  CGFloat v9 = v2;
  sub_255AA4870((uint64_t)bounds, (uint64_t)v28);
  CGFloat v12 = *(double *)v28;
  CGFloat v13 = *(double *)&v28[1];
  CGFloat v14 = *(double *)&v28[2];
  CGFloat v15 = *(double *)&v28[3];
  UIUserInterfaceLayoutDirection v16 = [(UIView *)in effectiveUserInterfaceLayoutDirection];
  sub_255AA4870((uint64_t)bounds, (uint64_t)v29);
  if (v29[32] == 1)
  {
    [(UIView *)in bounds];
    CGFloat v12 = v17;
    CGFloat v13 = v18;
    CGFloat v14 = v19;
    CGFloat v15 = v20;
  }
  if (v16 == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    v30.origin.CGFloat x = v12;
    v30.origin.CGFloat y = v13;
    v30.size.CGFloat width = v14;
    v30.size.CGFloat height = v15;
    double MaxX = CGRectGetMaxX(v30);
    v31.origin.CGFloat x = v9;
    v31.origin.CGFloat y = MinY;
    v31.size.CGFloat width = v7;
    v31.size.CGFloat height = v6;
    double v22 = MaxX - CGRectGetMinX(v31);
    v32.origin.CGFloat x = v9;
    v32.origin.CGFloat y = MinY;
    v32.size.CGFloat width = v7;
    v32.size.CGFloat height = v6;
    CGFloat v23 = v22 - CGRectGetWidth(v32);
    v33.origin.CGFloat x = v9;
    v33.origin.CGFloat y = MinY;
    v33.size.CGFloat width = v7;
    v33.size.CGFloat height = v6;
    CGFloat MinY = CGRectGetMinY(v33);
    CGFloat v9 = v23;
  }
  double v24 = v9;
  double v25 = MinY;
  double v26 = v7;
  double v27 = v6;
  result.size.CGFloat height = v27;
  result.size.CGFloat width = v26;
  result.origin.CGFloat y = v25;
  result.origin.CGFloat x = v24;
  return result;
}

__C::CGRect __swiftcall CGRect.applyingLayoutDirection(_:inBounds:)(UIUserInterfaceLayoutDirection _, __C::CGRect inBounds)
{
  CGFloat v6 = v5;
  CGFloat v7 = v4;
  CGFloat MinY = v3;
  CGFloat v9 = v2;
  if (_ == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    double MaxX = CGRectGetMaxX((CGRect)inBounds);
    v17.origin.CGFloat x = v9;
    v17.origin.CGFloat y = MinY;
    v17.size.CGFloat width = v7;
    v17.size.CGFloat height = v6;
    double v11 = MaxX - CGRectGetMinX(v17);
    v18.origin.CGFloat x = v9;
    v18.origin.CGFloat y = MinY;
    v18.size.CGFloat width = v7;
    v18.size.CGFloat height = v6;
    CGFloat v12 = v11 - CGRectGetWidth(v18);
    v19.origin.CGFloat x = v9;
    v19.origin.CGFloat y = MinY;
    v19.size.CGFloat width = v7;
    v19.size.CGFloat height = v6;
    CGFloat MinY = CGRectGetMinY(v19);
    CGFloat v9 = v12;
  }
  double v13 = v9;
  double v14 = MinY;
  double v15 = v7;
  double v16 = v6;
  result.size.CGFloat height = v16;
  result.size.CGFloat width = v15;
  result.origin.CGFloat y = v14;
  result.origin.CGFloat x = v13;
  return result;
}

__C::CGRect __swiftcall CGRect.removingLayoutDirection(in:bounds:)(UIView *in, __C::CGRect_optional *bounds)
{
  CGFloat v6 = v5;
  CGFloat v7 = v4;
  CGFloat v8 = v3;
  double v9 = v2;
  sub_255AA4870((uint64_t)bounds, (uint64_t)v26);
  CGFloat v12 = *(double *)v26;
  CGFloat v13 = *(double *)&v26[1];
  CGFloat v14 = *(double *)&v26[2];
  CGFloat v15 = *(double *)&v26[3];
  UIUserInterfaceLayoutDirection v16 = [(UIView *)in effectiveUserInterfaceLayoutDirection];
  sub_255AA4870((uint64_t)bounds, (uint64_t)v27);
  if (v27[32] == 1)
  {
    [(UIView *)in bounds];
    CGFloat v12 = v17;
    CGFloat v13 = v18;
    CGFloat v14 = v19;
    CGFloat v15 = v20;
  }
  if (v16 == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    v28.origin.CGFloat x = v12;
    v28.origin.CGFloat y = v13;
    v28.size.CGFloat width = v14;
    v28.size.CGFloat height = v15;
    double MaxX = CGRectGetMaxX(v28);
    v29.origin.CGFloat x = v9;
    v29.origin.CGFloat y = v8;
    v29.size.CGFloat width = v7;
    v29.size.CGFloat height = v6;
    double v9 = MaxX - CGRectGetMaxX(v29);
  }
  double v22 = v9;
  double v23 = v8;
  double v24 = v7;
  double v25 = v6;
  result.size.CGFloat height = v25;
  result.size.CGFloat width = v24;
  result.origin.CGFloat y = v23;
  result.origin.CGFloat x = v22;
  return result;
}

__C::CGRect __swiftcall CGRect.removingLayoutDirection(_:inBounds:)(UIUserInterfaceLayoutDirection _, __C::CGRect inBounds)
{
  CGFloat v6 = v5;
  CGFloat v7 = v4;
  CGFloat v8 = v3;
  double v9 = v2;
  if (_ == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    double MaxX = CGRectGetMaxX((CGRect)inBounds);
    v15.origin.CGFloat x = v9;
    v15.origin.CGFloat y = v8;
    v15.size.CGFloat width = v7;
    v15.size.CGFloat height = v6;
    double v9 = MaxX - CGRectGetMaxX(v15);
  }
  double v11 = v9;
  double v12 = v8;
  double v13 = v7;
  double v14 = v6;
  result.size.CGFloat height = v14;
  result.size.CGFloat width = v13;
  result.origin.CGFloat y = v12;
  result.origin.CGFloat x = v11;
  return result;
}

CGFloat CGRect.aspectFit(in:scale:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  if (Width == 0.0) {
    return a6;
  }
  double v48 = a5;
  double v25 = fabs(Width);
  double v26 = fmax(v25 * 2.22044605e-16, COERCE_DOUBLE(1));
  if ((~*(void *)&v25 & 0x7FF0000000000000) != 0 && v25 <= v26) {
    return a6;
  }
  v50.origin.CGFloat x = a1;
  v50.origin.CGFloat y = a2;
  v50.size.CGFloat width = a3;
  v50.size.CGFloat height = a4;
  double Height = CGRectGetHeight(v50);
  if (Height == 0.0) {
    return a6;
  }
  double v31 = fabs(Height);
  if ((~*(void *)&v31 & 0x7FF0000000000000) != 0 && v31 <= fmax(v31 * 2.22044605e-16, COERCE_DOUBLE(1))) {
    return a6;
  }
  CGFloat v32 = a1;
  v51.origin.CGFloat x = a1;
  v51.origin.CGFloat y = a2;
  CGFloat v33 = a2;
  v51.size.CGFloat width = a3;
  CGFloat v34 = a4;
  v51.size.CGFloat height = a4;
  double v43 = CGRectGetWidth(v51);
  v52.origin.CGFloat x = a6;
  v52.origin.CGFloat y = a7;
  v52.size.CGFloat width = a8;
  v52.size.CGFloat height = a9;
  double v44 = v43 / CGRectGetWidth(v52);
  CGFloat v47 = v33;
  v53.origin.CGFloat x = v32;
  v53.origin.CGFloat y = v33;
  v53.size.CGFloat width = a3;
  v53.size.CGFloat height = a4;
  double v42 = CGRectGetHeight(v53);
  v54.origin.CGFloat x = a6;
  v54.origin.CGFloat y = a7;
  v54.size.CGFloat width = a8;
  v54.size.CGFloat height = a9;
  double v35 = v42 / CGRectGetHeight(v54);
  if (v35 >= v44) {
    double v35 = v44;
  }
  CGFloat v36 = v35 * a8;
  CGFloat v37 = v35 * a9;
  v55.origin.CGFloat x = v32;
  v55.origin.CGFloat y = v33;
  v55.size.CGFloat width = a3;
  v55.size.CGFloat height = a4;
  double MinX = CGRectGetMinX(v55);
  v56.origin.CGFloat x = v32;
  CGFloat v38 = v32;
  v56.origin.CGFloat y = v33;
  v56.size.CGFloat width = a3;
  v56.size.CGFloat height = v34;
  double v39 = CGRectGetWidth(v56);
  v57.origin.CGFloat x = a6;
  v57.origin.CGFloat y = a7;
  v57.size.CGFloat width = v36;
  v57.size.CGFloat height = v37;
  double v40 = MinX + (v39 - CGRectGetWidth(v57)) * 0.5;
  double v29 = round(v40 * v48) / sub_255C146A8(v48);
  v58.origin.CGFloat x = v38;
  v58.origin.CGFloat y = v47;
  v58.size.CGFloat width = a3;
  v58.size.CGFloat height = v34;
  double MinY = CGRectGetMinY(v58);
  v59.origin.CGFloat x = v38;
  v59.origin.CGFloat y = v47;
  v59.size.CGFloat width = a3;
  v59.size.CGFloat height = v34;
  double v41 = CGRectGetHeight(v59);
  v60.origin.CGFloat x = v29;
  v60.origin.CGFloat y = a7;
  v60.size.CGFloat width = v36;
  v60.size.CGFloat height = v37;
  round((MinY + (v41 - CGRectGetHeight(v60)) * 0.5) * v48);
  sub_255C146A8(v48);
  return v29;
}

BOOL sub_255AA4608(double a1, double a2, double a3, double a4)
{
  if (a1 == a3) {
    goto LABEL_6;
  }
  double v4 = vabdd_f64(a1, a3);
  double v5 = fabs(a1);
  double v6 = fabs(a3);
  if (v5 <= v6) {
    double v5 = v6;
  }
  BOOL result = 1;
  if ((~*(void *)&v4 & 0x7FF0000000000000) != 0 && v4 <= fmax(v5 * 2.22044605e-16, COERCE_DOUBLE(1)))
  {
LABEL_6:
    if (a2 == a4)
    {
      return 0;
    }
    else
    {
      double v8 = vabdd_f64(a2, a4);
      if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
      {
        double v9 = fabs(a2);
        double v10 = fabs(a4);
        if (v9 <= v10) {
          double v9 = v10;
        }
        return v8 > fmax(v9 * 2.22044605e-16, COERCE_DOUBLE(1));
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

BOOL sub_255AA46B8(double a1, double a2)
{
  if (a1 == a2) {
    return 0;
  }
  double v3 = vabdd_f64(a1, a2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v4 = fabs(a1);
  double v5 = fabs(a2);
  if (v4 <= v5) {
    double v4 = v5;
  }
  return v3 > fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
}

double static CGSize.greatestFiniteSize.getter()
{
  return 1.79769313e308;
}

double CGSize.with(minWidth:)(double result, double a2)
{
  if (result <= a2) {
    return a2;
  }
  return result;
}

double CGSize.with(minHeight:)(double a1, double a2)
{
  return a2;
}

double CGSize.scaledToHeight(_:)(double a1, double a2, double a3)
{
  return a1 / a3 * a2;
}

double CGSize.scaledToWidth(_:)(double a1, double a2)
{
  return a1 / a2 * a2;
}

double CGPoint.distance(to:)(double a1, double a2, double a3, double a4)
{
  return sqrt((a3 - a1) * (a3 - a1) + (a4 - a2) * (a4 - a2));
}

double _sSo7CGPointV11MediaCoreUIE23applyingLayoutDirection_8inBoundsABSo015UIUserInterfacefG0V_So6CGRectVtF_0(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  if (a1 == 1)
  {
    double MaxX = CGRectGetMaxX(*(CGRect *)&a2);
    v13.origin.CGFloat x = a2;
    v13.origin.CGFloat y = a3;
    v13.size.CGFloat width = a4;
    v13.size.CGFloat height = a5;
    return MaxX - (a6 - CGRectGetMinX(v13));
  }
  return a6;
}

BOOL sub_255AA4810(double a1, double a2)
{
  if (a1 == a2) {
    return 1;
  }
  double v3 = vabdd_f64(a1, a2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0) {
    return 0;
  }
  double v4 = fabs(a1);
  double v5 = fabs(a2);
  if (v4 <= v5) {
    double v4 = v5;
  }
  return v3 <= fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
}

uint64_t sub_255AA4870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_255AA48D8(CGFloat *a1@<X0>, CGFloat *a2@<X8>)
{
  CGFloat v3 = *a1;
  CGFloat v4 = a1[1];
  CGFloat v5 = a1[2];
  CGFloat v6 = a1[3];
  v9.origin.CGFloat x = *a1;
  v9.origin.CGFloat y = v4;
  v9.size.CGFloat width = v5;
  v9.size.CGFloat height = v6;
  CGFloat MidX = CGRectGetMidX(v9);
  v10.origin.CGFloat x = v3;
  v10.origin.CGFloat y = v4;
  v10.size.CGFloat width = v5;
  v10.size.CGFloat height = v6;
  CGFloat MidY = CGRectGetMidY(v10);
  *a2 = MidX;
  a2[1] = MidY;
}

double UIEdgeInsets.init(edges:inset:)(char a1, double a2)
{
  if (a1) {
    return a2;
  }
  else {
    return 0.0;
  }
}

UIEdgeInsets __swiftcall UIEdgeInsets.init(directionalEdgeInsets:layoutDirection:)(UIEdgeInsets directionalEdgeInsets, UIUserInterfaceLayoutDirection layoutDirection)
{
  if (layoutDirection == UIUserInterfaceLayoutDirectionRightToLeft) {
    double left = directionalEdgeInsets.left;
  }
  else {
    double left = directionalEdgeInsets.right;
  }
  if (layoutDirection == UIUserInterfaceLayoutDirectionRightToLeft) {
    directionalEdgeInsets.double left = directionalEdgeInsets.right;
  }
  double v3 = left;
  directionalEdgeInsets.right = v3;
  return directionalEdgeInsets;
}

void sub_255AA498C(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_layer);
  id v4 = objc_msgSend(*(id *)a1, sel_CGColor);
  objc_msgSend(v3, sel_setShadowColor_, v4);

  id v5 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v5, sel_setShadowOffset_, *(double *)(a1 + 24), *(double *)(a1 + 32));

  id v6 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v6, sel_setShadowRadius_, *(double *)(a1 + 16));

  id v8 = objc_msgSend(v1, sel_layer);
  double v7 = *(double *)(a1 + 8);
  *(float *)&double v7 = v7;
  objc_msgSend(v8, sel_setShadowOpacity_, v7);
  sub_255AA6160((id *)a1);
}

void UIView.corner.getter(double *a1@<X8>)
{
  id v3 = v1;

  UIView.Corner.init(view:insetBy:)(v3, a1, 0.0);
}

void UIView.corner.setter(uint64_t a1)
{
  double v2 = *(double *)a1;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 == 3)
  {
    id v49 = (id)*MEMORY[0x263F15A10];
    id v4 = objc_msgSend(v1, sel_layer);
    id v5 = objc_msgSend(v4, sel_maskedCorners);

    double v6 = 0.0;
    goto LABEL_15;
  }
  id v5 = *(id *)(a1 + 16);
  objc_msgSend(v1, sel_bounds);
  if (v8 >= v7) {
    double v9 = v7;
  }
  else {
    double v9 = v8;
  }
  double v6 = v9 * 0.5;
  objc_msgSend(v1, sel_bounds);
  if (v3 == 2)
  {
    CGFloat v14 = v10;
    CGFloat v15 = v11;
    CGFloat v16 = v12;
    CGFloat v17 = v13;
    double Width = CGRectGetWidth(*(CGRect *)&v10);
    v51.origin.CGFloat x = v14;
    v51.origin.CGFloat y = v15;
    v51.size.CGFloat width = v16;
    v51.size.CGFloat height = v17;
    double Height = CGRectGetHeight(v51);
    BOOL v20 = sub_255AA4810(Width, Height);
    double v21 = (id *)MEMORY[0x263F15A20];
    if (v20) {
      double v21 = (id *)MEMORY[0x263F15A10];
    }
  }
  else
  {
    double v6 = v2;
    if ((v3 & 1) == 0)
    {
      id v49 = (id)*MEMORY[0x263F15A10];
      double v6 = v2;
      goto LABEL_15;
    }
    double v21 = (id *)MEMORY[0x263F15A20];
  }
  id v49 = *v21;
LABEL_15:
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    double v23 = (void *)v22;
    uint64_t v24 = sub_255C80628();
    uint64_t v26 = v25;
    if (v24 == sub_255C80628() && v26 == v27) {
      char v29 = 1;
    }
    else {
      char v29 = sub_255C81428();
    }
    id v42 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel__setCornerRadius_continuous_maskedCorners_, v29 & 1, v5, v6);
  }
  else
  {
    id v30 = objc_msgSend(v1, sel_layer);
    double v31 = (id *)MEMORY[0x263F15A10];
    if (v3 != 3)
    {
      objc_msgSend(v1, sel_bounds);
      if (v3 == 2)
      {
        CGFloat v36 = v32;
        CGFloat v37 = v33;
        CGFloat v38 = v34;
        CGFloat v39 = v35;
        double v40 = CGRectGetWidth(*(CGRect *)&v32);
        v52.origin.CGFloat x = v36;
        v52.origin.CGFloat y = v37;
        v52.size.CGFloat width = v38;
        v52.size.CGFloat height = v39;
        double v41 = CGRectGetHeight(v52);
        if (!sub_255AA4810(v40, v41)) {
          double v31 = (id *)MEMORY[0x263F15A20];
        }
      }
      else if (v3)
      {
        double v31 = (id *)MEMORY[0x263F15A20];
      }
    }
    id v43 = *v31;
    objc_msgSend(v30, sel_setCornerCurve_, v43);

    id v44 = objc_msgSend(v1, sel_layer);
    double v45 = 0.0;
    if (v3 != 3)
    {
      objc_msgSend(v1, sel_bounds, 0.0);
      if (v3 == 2)
      {
        if (v47 >= v46) {
          double v48 = v46;
        }
        else {
          double v48 = v47;
        }
        double v45 = v48 * 0.5;
      }
      else
      {
        double v45 = v2;
      }
    }
    objc_msgSend(v44, sel_setCornerRadius_, v45);

    id v42 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v42, sel_setMaskedCorners_, v5);
  }
}

void UIView.Corner.init(view:insetBy:)(void *a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  id v6 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v6, sel_cornerRadius);
  double v8 = v7;

  double v9 = v8 - a3;
  if (v9 <= 0.0)
  {

    double v22 = 0.0;
    id v23 = 0;
    uint64_t v24 = 3;
  }
  else
  {
    objc_msgSend(a1, sel_bounds);
    double v11 = v10;
    double v13 = v12;
    id v14 = objc_msgSend(a1, sel_layer);
    id v15 = objc_msgSend(v14, sel_cornerCurve);

    uint64_t v16 = sub_255C80628();
    uint64_t v18 = v17;
    if (v16 == sub_255C80628() && v18 == v19) {
      uint64_t v21 = 1;
    }
    else {
      uint64_t v21 = sub_255C81428() & 1;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13 >= v11) {
      double v25 = v11;
    }
    else {
      double v25 = v13;
    }
    BOOL v26 = sub_255AA4810(v25 * 0.5, v9);
    id v27 = objc_msgSend(a1, sel_layer);
    id v23 = objc_msgSend(v27, sel_maskedCorners);

    if (v26) {
      double v22 = 0.0;
    }
    else {
      double v22 = v9;
    }
    uint64_t v24 = 2;
    if (!v26) {
      uint64_t v24 = v21;
    }
  }
  *a2 = v22;
  *((void *)a2 + 1) = v24;
  *((void *)a2 + 2) = v23;
}

double UIView.Corner.Radius.value(in:)(double a1, double a2)
{
  if (v2[8] != 2) {
    return *(double *)v2;
  }
  if (a2 < a1) {
    a1 = a2;
  }
  return a1 * 0.5;
}

CALayerCornerCurve __swiftcall UIView.Corner.curve(in:)(__C::CGRect in)
{
  int v2 = *(unsigned __int8 *)(v1 + 8);
  if (v2 == 2)
  {
    CGFloat height = in.size.height;
    CGFloat width = in.size.width;
    CGFloat y = in.origin.y;
    CGFloat x = in.origin.x;
    double v7 = CGRectGetWidth((CGRect)in);
    v14.origin.CGFloat x = x;
    v14.origin.CGFloat y = y;
    v14.size.CGFloat width = width;
    v14.size.CGFloat height = height;
    double v8 = CGRectGetHeight(v14);
    BOOL v9 = sub_255AA4810(v7, v8);
  }
  else
  {
    BOOL v9 = (v2 & 1) == 0;
  }
  double v10 = (void **)MEMORY[0x263F15A10];
  if (!v9) {
    double v10 = (void **)MEMORY[0x263F15A20];
  }
  double v11 = *v10;

  return (CALayerCornerCurve)v11;
}

void (*UIView.corner.modify(uint64_t a1))(void *a1)
{
  *(void *)(a1 + 24) = v1;
  UIView.Corner.init(view:insetBy:)(v1, (double *)a1, 0.0);
  return sub_255AA5168;
}

void sub_255AA5168(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  v3[0] = *a1;
  v3[1] = v1;
  v3[2] = v2;
  UIView.corner.setter((uint64_t)v3);
}

uint64_t UIView.Corner.init(radius:mask:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(result + 8);
  *(void *)a3 = *(void *)result;
  *(unsigned char *)(a3 + 8) = v3;
  *(void *)(a3 + 16) = a2;
  return result;
}

void static UIView.Corner.rounded.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 2;
  *(void *)(a1 + 16) = 15;
}

uint64_t static UIView.Corner.value(_:continuous:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(unsigned char *)(a2 + 8) = result;
  *(void *)(a2 + 16) = 15;
  return result;
}

void UIView.Corner.radius.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t UIView.Corner.radius.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = v2;
  return result;
}

uint64_t (*UIView.Corner.radius.modify())()
{
  return CGSizeMake;
}

uint64_t UIView.Corner.mask.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t UIView.Corner.mask.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*UIView.Corner.mask.modify())()
{
  return CGSizeMake;
}

uint64_t UIView.Corner.init(radiusValue:continuous:mask:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  BOOL v5 = (a2 & 1) == 0;
  BOOL v6 = *(double *)&result > 0.0;
  BOOL v7 = !v5 || !v6;
  if (v5 && v6) {
    uint64_t v8 = result;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = 3;
  if (v7) {
    a4 = 0;
  }
  else {
    uint64_t v9 = a3 & 1;
  }
  *a5 = v8;
  a5[1] = v9;
  a5[2] = a4;
  return result;
}

uint64_t UIView.Corner.masked(to:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = result;
  return result;
}

uint64_t UIView.Corner.with(corners:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(v2 + 8);
  if (result)
  {
    if ((result & 2) != 0)
    {
      uint64_t v4 = 3;
      if ((result & 4) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v4 = 1;
      if ((result & 4) == 0) {
        goto LABEL_8;
      }
    }
    goto LABEL_7;
  }
  if ((result & 2) == 0)
  {
    uint64_t v4 = 0;
    if ((result & 4) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    v4 |= 4uLL;
    goto LABEL_8;
  }
  uint64_t v4 = 2;
  if ((result & 4) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((result & 8) != 0) {
    v4 |= 8uLL;
  }
  *(void *)a2 = *(void *)v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  return result;
}

uint64_t UIView.Corner.Radius.init(_:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v3 = (a2 & 1) == 0;
  BOOL v4 = *(double *)&result > 0.0;
  BOOL v5 = !v3 || !v4;
  if (v3 && v4) {
    uint64_t v6 = result;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v5) {
    char v7 = 3;
  }
  else {
    char v7 = 1;
  }
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = v7;
  return result;
}

void UIView.Corner.Radius.init(view:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v4, sel_cornerRadius);
  double v6 = v5;

  if (v6 <= 0.0)
  {

    *(void *)a2 = 0;
    char v10 = 3;
  }
  else
  {
    objc_msgSend(a1, sel_bounds);
    if (v8 >= v7) {
      double v9 = v7;
    }
    else {
      double v9 = v8;
    }
    if (sub_255AA4810(v9 * 0.5, v6))
    {

      *(void *)a2 = 0;
      char v10 = 2;
    }
    else
    {
      id v11 = objc_msgSend(a1, sel_layer);
      id v12 = objc_msgSend(v11, sel_cornerCurve);

      uint64_t v13 = sub_255C80628();
      uint64_t v15 = v14;
      if (v13 == sub_255C80628() && v15 == v16) {
        char v18 = 1;
      }
      else {
        char v18 = sub_255C81428();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v10 = v18 & 1;
      *(double *)a2 = v6;
    }
  }
  *(unsigned char *)(a2 + 8) = v10;
}

BOOL static UIView.Corner.Radius.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v3 == 2 || *(double *)a1 != *(double *)a2) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL sub_255AA5500(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v3 == 2 || *(double *)a1 != *(double *)a2) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL static UIView.Corner.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2)
  {
    if (v4 == 2) {
      return v3 == *(void *)(a2 + 16);
    }
    return 0;
  }
  if (v4 == 2) {
    return 0;
  }
  BOOL result = 0;
  BOOL v7 = (v2 & 1) == 0;
  if (*(double *)a1 == *(double *)a2 && ((v7 ^ v4) & 1) != 0) {
    return v3 == *(void *)(a2 + 16);
  }
  return result;
}

BOOL sub_255AA55BC(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2)
  {
    if (v4 == 2) {
      return v3 == *(void *)(a2 + 16);
    }
    return 0;
  }
  if (v4 == 2) {
    return 0;
  }
  BOOL result = 0;
  BOOL v7 = (v2 & 1) == 0;
  if (*(double *)a1 == *(double *)a2 && ((v7 ^ v4) & 1) != 0) {
    return v3 == *(void *)(a2 + 16);
  }
  return result;
}

void sub_255AA5624()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_superview);
  if (v2)
  {
    id v18 = v2;
    objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v3 = self;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_255C897F0;
    id v5 = objc_msgSend(v1, sel_leadingAnchor);
    id v6 = objc_msgSend(v18, sel_leadingAnchor);
    id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

    *(void *)(v4 + 32) = v7;
    id v8 = objc_msgSend(v1, sel_trailingAnchor);
    id v9 = objc_msgSend(v18, sel_trailingAnchor);
    id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

    *(void *)(v4 + 40) = v10;
    id v11 = objc_msgSend(v1, sel_topAnchor);
    id v12 = objc_msgSend(v18, sel_topAnchor);
    id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    *(void *)(v4 + 48) = v13;
    id v14 = objc_msgSend(v1, sel_bottomAnchor);
    id v15 = objc_msgSend(v18, sel_bottomAnchor);
    id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    *(void *)(v4 + 56) = v16;
    sub_255C80818();
    sub_255AA618C();
    uint64_t v17 = (void *)sub_255C807E8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_activateConstraints_, v17);

    objc_msgSend(v1, sel_setNeedsUpdateConstraints);
  }
}

double sub_255AA58CC()
{
  *(void *)&xmmword_269F33020 = objc_msgSend(self, sel_blackColor);
  *(long long *)((char *)&xmmword_269F33020 + 8) = xmmword_255C89800;
  double result = 0.0;
  *(_OWORD *)&algn_269F33030[8] = xmmword_255C89810;
  return result;
}

uint64_t sub_255AA5928(char a1)
{
  if (a1)
  {
    if ((a1 & 2) != 0)
    {
      uint64_t v1 = 3;
      if ((a1 & 4) == 0) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v1 = 1;
      if ((a1 & 4) == 0) {
        goto LABEL_5;
      }
    }
LABEL_4:
    v1 |= 4uLL;
    goto LABEL_5;
  }
  if ((a1 & 2) == 0)
  {
    uint64_t v1 = 0;
    if ((a1 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v1 = 2;
  if ((a1 & 4) != 0) {
    goto LABEL_4;
  }
LABEL_5:
  if ((a1 & 8) != 0) {
    return v1 | 8;
  }
  return v1;
}

UIEdgeInsets __swiftcall UIEdgeInsets.applyingLayoutDirection(_:)(UIUserInterfaceLayoutDirection a1)
{
  if (a1 == UIUserInterfaceLayoutDirectionRightToLeft) {
    double v3 = v1;
  }
  else {
    double v3 = v2;
  }
  if (a1 == UIUserInterfaceLayoutDirectionRightToLeft) {
    double v1 = v2;
  }
  double v4 = v3;
  result.right = v4;
  result.double left = v1;
  return result;
}

double UIEdgeInsets.horizontal.getter(double a1, double a2, double a3, double a4)
{
  return a2 + a4;
}

double UIEdgeInsets.vertical.getter(double a1, double a2, double a3)
{
  return a1 + a3;
}

UIEdgeInsets __swiftcall UIEdgeInsets.negated()()
{
  double v4 = -v0;
  double v5 = -v1;
  double v6 = -v2;
  double v7 = -v3;
  result.right = v7;
  result.bottom = v6;
  result.double left = v5;
  result.top = v4;
  return result;
}

double static UIEdgeInsets.+ infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

double static UIEdgeInsets.- infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 - a5;
}

uint64_t UIEdgeInsets.hash(into:)()
{
  return sub_255C815A8();
}

uint64_t UIEdgeInsets.hashValue.getter()
{
  return sub_255C815B8();
}

BOOL sub_255AA5AC4(double *a1, double *a2)
{
  return _sSo12UIEdgeInsetsV11MediaCoreUIE3eetoiySbAB_ABtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

__n128 sub_255AA5AD8@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)MEMORY[0x263F834E8];
  long long v2 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
  *a1 = *MEMORY[0x263F834E8];
  a1[1] = v2;
  return result;
}

float64x2_t sub_255AA5AEC@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result = vaddq_f64(*a1, *a2);
  float64x2_t v4 = vaddq_f64(a1[1], a2[1]);
  *a3 = result;
  a3[1] = v4;
  return result;
}

float64x2_t sub_255AA5B04(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result = vaddq_f64(*a2, *a1);
  float64x2_t v3 = vaddq_f64(a2[1], a1[1]);
  *a1 = result;
  a1[1] = v3;
  return result;
}

float64x2_t sub_255AA5B1C@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result = vsubq_f64(*a1, *a2);
  float64x2_t v4 = vsubq_f64(a1[1], a2[1]);
  *a3 = result;
  a3[1] = v4;
  return result;
}

float64x2_t sub_255AA5B34(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result = vsubq_f64(*a1, *a2);
  float64x2_t v3 = vsubq_f64(a1[1], a2[1]);
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_255AA5B4C()
{
  return sub_255C815B8();
}

uint64_t sub_255AA5BB4()
{
  return UIEdgeInsets.hash(into:)();
}

uint64_t sub_255AA5BC0()
{
  return sub_255C815B8();
}

uint64_t UIOffset.hash(into:)()
{
  return sub_255C815A8();
}

uint64_t UIOffset.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255AA5CE0()
{
  return sub_255C815B8();
}

uint64_t sub_255AA5D34()
{
  return UIOffset.hash(into:)();
}

uint64_t sub_255AA5D3C()
{
  return sub_255C815B8();
}

BOOL _sSo12UIEdgeInsetsV11MediaCoreUIE3eetoiySbAB_ABtFZ_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if (a1 != a5)
  {
    double v12 = vabdd_f64(a1, a5);
    double v13 = fabs(a1);
    double v14 = fabs(a5);
    if (v13 <= v14) {
      double v13 = v14;
    }
    if ((~*(void *)&v12 & 0x7FF0000000000000) == 0 || v12 > fmax(v13 * 2.22044605e-16, COERCE_DOUBLE(1))) {
      return 0;
    }
  }
  if (!sub_255AA4810(a2, a6) || !sub_255AA4810(a3, a7)) {
    return 0;
  }

  return sub_255AA4810(a4, a8);
}