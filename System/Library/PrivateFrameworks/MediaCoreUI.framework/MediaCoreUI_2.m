uint64_t sub_255B4CF18(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t result;

  v4 = *(void *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    v7 = sub_255C80778();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(void **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_255C15628(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_255C15628((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_255C81238();
  __break(1u);
  return result;
}

uint64_t sub_255B4D074(void *a1)
{
  v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_255C81428() & 1;
  }
}

uint64_t sub_255B4D0CC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255B4D104()
{
  return swift_deallocObject();
}

unint64_t sub_255B4D114()
{
  unint64_t result = qword_26B29BE88;
  if (!qword_26B29BE88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BE80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BE88);
  }
  return result;
}

unint64_t sub_255B4D170()
{
  unint64_t result = qword_26B29BF80;
  if (!qword_26B29BF80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BF88);
    sub_255B4D114();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BF80);
  }
  return result;
}

uint64_t sub_255B4D1E4(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 128) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  *(void *)(v3 + 56) = swift_task_alloc();
  *(void *)(v3 + 64) = sub_255C80958();
  *(void *)(v3 + 72) = sub_255C80948();
  uint64_t v5 = sub_255C80908();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = v4;
  return MEMORY[0x270FA2498](sub_255B4D2C0, v5, v4);
}

uint64_t sub_255B4D2C0()
{
  char v1 = *(unsigned char *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture) = 0;
  uint64_t v4 = (uint64_t (**)(uint64_t, void *, void *))(v3
                                                        + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureFallbackCopyAllocator);
  *uint64_t v4 = sub_255B5005C;
  v4[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer____lazy_storage___isBlurDisabled) = 2;
  *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_context) = v2;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_contentMode) = v1;
  uint64_t v5 = type metadata accessor for MaterialRenderer();
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v5;
  swift_retain();
  id v6 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  uint64_t v7 = v6;
  *(void *)(v0 + 96) = v6;
  if (qword_269F24B28)
  {
    id v8 = v6;
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 32);
    uint64_t v12 = sub_255C80988();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v10;
    v13[5] = v11;
    swift_retain();
    id v14 = v7;
    uint64_t v15 = sub_255A812C8(v9, (uint64_t)&unk_269F24BF8, (uint64_t)v13);
    sub_255A910C0(v9);
    qword_269F24B28 = v15;
    swift_release();
  }
  if (!qword_269F24B38)
  {
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 32);
    uint64_t v19 = sub_255C80988();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 1, 1, v19);
    v20 = (void *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v17;
    v20[5] = v18;
    swift_retain();
    uint64_t v21 = sub_255A812C8(v16, (uint64_t)&unk_269F24BE8, (uint64_t)v20);
    sub_255A910C0(v16);
    qword_269F24B38 = v21;
    swift_release();
  }
  uint64_t v22 = *(void *)(v0 + 48);
  uint64_t v23 = swift_unknownObjectRetain();
  sub_255B4D7F0(v23);
  swift_unknownObjectRelease();
  *(void *)(v0 + 104) = sub_255C80948();
  uint64_t v24 = swift_task_alloc();
  *(void *)(v0 + 112) = v24;
  *(void *)(v24 + 16) = v22;
  v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v25;
  void *v25 = v0;
  v25[1] = sub_255B4D604;
  return MEMORY[0x270FA2158]();
}

uint64_t sub_255B4D604()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return MEMORY[0x270FA2498](sub_255B4D764, v3, v2);
}

uint64_t sub_255B4D764()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 96);
  return v2(v3);
}

uint64_t sub_255B4D7F0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!qword_269F24B50)
  {
    uint64_t v7 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    id v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = a1;
    v8[5] = v1;
    swift_unknownObjectRetain();
    qword_269F24B50 = sub_255B5DB70((uint64_t)v6, (uint64_t)&unk_269F24C68, (uint64_t)v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_255B4D910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  v3[4] = swift_task_alloc();
  sub_255C80958();
  v3[5] = sub_255C80948();
  uint64_t v5 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255B4D9D8, v5, v4);
}

uint64_t sub_255B4D9D8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[3];
  swift_release();
  uint64_t v3 = sub_255C80988();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v1, 1, 1, v3);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  sub_255B4DDBC(v1, (uint64_t)&unk_269F24C28, (uint64_t)v5);
  sub_255A910C0(v1);
  v4(v1, 1, 1, v3);
  id v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v2;
  sub_255B4DDBC(v1, (uint64_t)&unk_269F24C38, (uint64_t)v6);
  sub_255A910C0(v1);
  v4(v1, 1, 1, v3);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v2;
  sub_255B4DDBC(v1, (uint64_t)&unk_269F24C48, (uint64_t)v7);
  sub_255A910C0(v1);
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_255B4DB9C()
{
  return MEMORY[0x270FA2498](sub_255B4DBB8, 0, 0);
}

uint64_t sub_255B4DBB8()
{
  uint64_t v1 = qword_269F24B28;
  v0[2] = qword_269F24B28;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[3] = v2;
    void *v2 = v0;
    v2[1] = sub_255B4DCA4;
    uint64_t v3 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA1FD0](v2, v1, v3);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_255B4DCA4()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_255B5148C, 0, 0);
}

uint64_t sub_255B4DDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A864A8(a1, (uint64_t)v10);
  uint64_t v11 = sub_255C80988();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_255A910C0((uint64_t)v10);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_255C80908();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_255C80978();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  uint64_t v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    uint64_t v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_255B4DFB4()
{
  return MEMORY[0x270FA2498](sub_255B4DFD0, 0, 0);
}

uint64_t sub_255B4DFD0()
{
  uint64_t v1 = qword_269F24B38;
  v0[2] = qword_269F24B38;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[3] = v2;
    void *v2 = v0;
    v2[1] = sub_255B4E0BC;
    uint64_t v3 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA1FD0](v2, v1, v3);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_255B4E0BC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_255B4E1D4, 0, 0);
}

uint64_t sub_255B4E1D4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_255B4E1E8()
{
  return MEMORY[0x270FA2498](sub_255B4E204, 0, 0);
}

uint64_t sub_255B4E204()
{
  uint64_t v1 = qword_269F24B50;
  v0[2] = qword_269F24B50;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[3] = v2;
    void *v2 = v0;
    v2[1] = sub_255B4DCA4;
    uint64_t v3 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA1FD0](v2, v1, v3);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_255B4E2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a5;
  return MEMORY[0x270FA2498](sub_255B4E310, 0, 0);
}

uint64_t sub_255B4E310()
{
  uint64_t v1 = v0[2];
  sub_255B5041C(0x5020657A69736552, 0xEF656E696C657069, v1);
  uint64_t v3 = v2;
  v0[3] = v2;
  uint64_t v4 = *(void *)(v1 + 16);
  v0[4] = v4;
  swift_unknownObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_255B4E43C;
  v5[17] = v3;
  v5[18] = v4;
  return MEMORY[0x270FA2498](sub_255B505E4, 0, 0);
}

uint64_t sub_255B4E43C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA2498](sub_255B4E55C, 0, 0);
}

uint64_t sub_255B4E55C()
{
  uint64_t v1 = (void *)v0[3];
  qword_269F24B20 = v0[6];

  swift_unknownObjectRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_255B4E5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a5;
  return MEMORY[0x270FA2498](sub_255B4E5F4, 0, 0);
}

uint64_t sub_255B4E5F4()
{
  uint64_t v1 = v0[2];
  sub_255B5041C(0xD000000000000012, 0x8000000255C9F360, v1);
  uint64_t v3 = v2;
  v0[3] = v2;
  uint64_t v4 = *(void *)(v1 + 16);
  v0[4] = v4;
  swift_unknownObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_255B4E718;
  v5[17] = v3;
  v5[18] = v4;
  return MEMORY[0x270FA2498](sub_255B505E4, 0, 0);
}

uint64_t sub_255B4E718(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA2498](sub_255B4E838, 0, 0);
}

uint64_t sub_255B4E838()
{
  uint64_t v1 = (void *)v0[3];
  qword_269F24B30 = v0[6];

  swift_unknownObjectRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_255B4E8B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = v5;
    return MEMORY[0x270FA2410](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x270FA2410](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  swift_unknownObjectRetain();

  return swift_continuation_throwingResume();
}

void sub_255B4E9DC(void *a1)
{
  uint64_t v2 = v1;
  v122[1] = *MEMORY[0x263EF8340];
  objc_msgSend(a1, sel_bounds);
  if (v5 <= 0.0 || v4 <= 0.0) {
    return;
  }
  v113 = objc_msgSend(a1, sel_layer);
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (v6)
  {
    unsigned int v7 = objc_msgSend(v6, sel_isDrawableAvailable);

    if (!v7) {
      return;
    }
    uint64_t v8 = v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider;
    if (MEMORY[0x25A297D40](v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider))
    {
      uint64_t v9 = *(void *)(v8 + 8);
      id v10 = objc_msgSend(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_context) + 24), sel_commandBuffer);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = qword_269F24B20;
        if (qword_269F24B20 && (uint64_t v13 = qword_269F24B30) != 0)
        {
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
          swift_unknownObjectRetain();
          id v114 = (id)v13;
          swift_unknownObjectRetain();
          uint64_t v16 = v15(ObjectType, v9);
          if (v16)
          {
            uint64_t v17 = (void *)v16;
            uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture);
            if (v18)
            {
              swift_unknownObjectRetain();
              id v19 = objc_msgSend(a1, sel_currentRenderPassDescriptor);
              if (v19)
              {
                v20 = v19;
                id v111 = v17;
                id v21 = objc_msgSend(v19, sel_colorAttachments);
                id v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 0);

                if (v22)
                {
                  objc_msgSend(v22, sel_setTexture_, v18);

                  id v23 = objc_msgSend(v20, sel_colorAttachments);
                  id v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

                  if (v24)
                  {
                    objc_msgSend(v24, sel_setLoadAction_, 2);

                    id v25 = objc_msgSend(v20, sel_colorAttachments);
                    id v26 = objc_msgSend(v25, sel_objectAtIndexedSubscript_, 0);

                    if (v26)
                    {
                      objc_msgSend(v26, sel_setStoreAction_, 1);

                      id v27 = objc_msgSend(v20, sel_depthAttachment);
                      v28 = v18;
                      if (v27)
                      {
                        v29 = v27;
                        objc_msgSend(v27, sel_setLoadAction_, 0);

                        id v30 = objc_msgSend(v20, sel_depthAttachment);
                        if (v30)
                        {
                          v31 = v30;
                          objc_msgSend(v30, sel_setStoreAction_, 0);

                          id v32 = objc_msgSend(v20, sel_stencilAttachment);
                          if (v32)
                          {
                            v33 = v32;
                            objc_msgSend(v32, sel_setLoadAction_, 0);

                            id v34 = objc_msgSend(v20, sel_stencilAttachment);
                            if (v34)
                            {
                              v35 = v34;
                              objc_msgSend(v34, sel_setStoreAction_, 0);

                              v122[0] = 0xBF8000003F800000;
                              int v36 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_contentMode);
                              if (v36 == 2) {
                                goto LABEL_54;
                              }
                              float v37 = (float)(uint64_t)objc_msgSend(v18, sel_width);
                              float v38 = v37 / (float)(uint64_t)objc_msgSend(v111, sel_width);
                              float v39 = (float)(uint64_t)objc_msgSend(v18, sel_height);
                              float v40 = v39 / (float)(uint64_t)objc_msgSend(v111, sel_height);
                              if (v36)
                              {
                                if (v38 < v40) {
                                  goto LABEL_22;
                                }
                              }
                              else if (v38 >= v40)
                              {
LABEL_22:
                                float v41 = v40 * (float)(uint64_t)objc_msgSend(v111, sel_width);
                                v28 = v18;
                                *(float *)v122 = 1.0 / (float)(v41 / (float)(uint64_t)objc_msgSend(v18, sel_width));
                                goto LABEL_54;
                              }
                              float v65 = v38 * (float)(uint64_t)objc_msgSend(v111, sel_height);
                              v28 = v18;
                              *((float *)v122 + 1) = 1.0 / (float)(v65 / (float)(uint64_t)objc_msgSend(v18, sel_height));
LABEL_54:
                              id v66 = objc_msgSend(v11, sel_renderCommandEncoderWithDescriptor_, v20);
                              if (v66)
                              {
                                v67 = v66;
                                v68 = (void *)sub_255C805F8();
                                objc_msgSend(v67, sel_setLabel_, v68);

                                objc_msgSend(v67, sel_setRenderPipelineState_, v12);
                                if (qword_269F200B8 != -1) {
                                  swift_once();
                                }
                                unint64_t v69 = *((void *)off_269F24B40 + 2);
                                if (!(v69 >> 61))
                                {
                                  objc_msgSend(v67, sel_setVertexBytes_length_atIndex_, (char *)off_269F24B40 + 32, 4 * v69, 0);
                                  objc_msgSend(v67, sel_setVertexBytes_length_atIndex_, v122, 8, 1);
                                  objc_msgSend(v67, sel_setFragmentTexture_atIndex_, v111, 0);
                                  objc_msgSend(v67, sel_drawPrimitives_vertexStart_vertexCount_, 4, 0, 4);
                                  objc_msgSend(v67, sel_endEncoding);
                                  v70 = (void *)swift_slowAlloc();
                                  uint64_t v71 = swift_allocObject();
                                  *(void *)(v71 + 16) = v70;
                                  v120 = sub_255B50414;
                                  uint64_t v121 = v71;
                                  uint64_t aBlock = MEMORY[0x263EF8330];
                                  uint64_t v117 = 1107296256;
                                  v118 = sub_255B4FEFC;
                                  v119 = &block_descriptor_15;
                                  v72 = _Block_copy(&aBlock);
                                  swift_release();
                                  objc_msgSend(v11, sel_addCompletedHandler_, v72);
                                  _Block_release(v72);
                                  void *v70 = v28;
                                  if (sub_255B50220())
                                  {
                                    swift_unknownObjectRetain();
                                    goto LABEL_65;
                                  }
                                  v77 = (void *)qword_269F24B48;
                                  if (qword_269F24B48)
                                  {
                                    uint64_t v78 = *(void *)(v2
                                                    + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureFallbackCopyAllocator
                                                    + 8);
                                    v120 = *(void (**)())(v2
                                                        + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureFallbackCopyAllocator);
                                    uint64_t v121 = v78;
                                    uint64_t aBlock = MEMORY[0x263EF8330];
                                    uint64_t v117 = 1107296256;
                                    v118 = sub_255B4FF5C;
                                    v119 = &block_descriptor_16;
                                    v79 = _Block_copy(&aBlock);
                                    swift_unknownObjectRetain();
                                    id v80 = v77;
                                    swift_retain();
                                    swift_release();
                                    objc_msgSend(v80, sel_encodeToCommandBuffer_inPlaceTexture_fallbackCopyAllocator_, v11, v70, v79);
                                    _Block_release(v79);

                                    v28 = v18;
LABEL_65:
                                    id v81 = objc_msgSend(a1, sel_currentRenderPassDescriptor);
                                    if (!v81)
                                    {
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      goto LABEL_89;
                                    }
                                    v82 = v81;
                                    id v83 = objc_msgSend(v81, sel_depthAttachment);
                                    if (v83)
                                    {
                                      v84 = v83;
                                      objc_msgSend(v83, sel_setLoadAction_, 0);

                                      id v85 = objc_msgSend(v82, sel_depthAttachment);
                                      if (v85)
                                      {
                                        v86 = v85;
                                        objc_msgSend(v85, sel_setStoreAction_, 0);

                                        id v87 = objc_msgSend(v82, sel_stencilAttachment);
                                        if (v87)
                                        {
                                          v88 = v87;
                                          objc_msgSend(v87, sel_setLoadAction_, 0);

                                          id v89 = objc_msgSend(v82, sel_stencilAttachment);
                                          if (v89)
                                          {
                                            v90 = v89;
                                            objc_msgSend(v89, sel_setStoreAction_, 0);

                                            id v112 = v82;
                                            id v91 = objc_msgSend(v11, sel_renderCommandEncoderWithDescriptor_, v82);
                                            if (v91)
                                            {
                                              v92 = v91;
                                              v93 = (void *)sub_255C805F8();
                                              objc_msgSend(v92, sel_setLabel_, v93);

                                              objc_msgSend(v92, sel_setRenderPipelineState_, v114);
                                              unint64_t v94 = *((void *)off_269F24B40 + 2);
                                              if (!(v94 >> 61))
                                              {
                                                objc_msgSend(v92, sel_setVertexBytes_length_atIndex_, (char *)off_269F24B40 + 32, 4 * v94, 0);
                                                sub_255B50CE0((uint64_t)objc_msgSend(a1, sel_colorPixelFormat));
                                                uint64_t aBlock = __PAIR64__(v96, v95);
                                                uint64_t v117 = v97;
                                                objc_msgSend(v92, sel_setFragmentBytes_length_atIndex_, &aBlock, 16, 0);
                                                objc_msgSend(v92, sel_setFragmentTexture_atIndex_, v28, 0);
                                                objc_msgSend(v92, sel_drawPrimitives_vertexStart_vertexCount_, 4, 0, 4);
                                                objc_msgSend(v92, sel_endEncoding);
                                                id v98 = objc_msgSend(a1, sel_currentDrawable);
                                                if (v98)
                                                {
                                                  objc_msgSend(v11, sel_presentDrawable_, v98);
                                                  objc_msgSend(v11, sel_commit);
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
LABEL_88:

                                                  goto LABEL_89;
                                                }
                                                if (qword_269F200C0 != -1) {
                                                  swift_once();
                                                }
                                                uint64_t v107 = sub_255C7D898();
                                                __swift_project_value_buffer(v107, (uint64_t)qword_269F24B58);
                                                v108 = sub_255C7D878();
                                                os_log_type_t v109 = sub_255C80BE8();
                                                if (os_log_type_enabled(v108, v109))
                                                {
                                                  v110 = (uint8_t *)swift_slowAlloc();
                                                  *(_WORD *)v110 = 0;
                                                  _os_log_impl(&dword_255A00000, v108, v109, "Nil current drawable", v110, 2u);
                                                  MEMORY[0x25A297C00](v110, -1, -1);
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();

                                                  goto LABEL_88;
                                                }

                                                swift_unknownObjectRelease();
                                                goto LABEL_93;
                                              }
                                              __break(1u);
                                            }
                                            else if (qword_269F200C0 == -1)
                                            {
LABEL_77:
                                              uint64_t v99 = sub_255C7D898();
                                              __swift_project_value_buffer(v99, (uint64_t)qword_269F24B58);
                                              v100 = sub_255C7D878();
                                              os_log_type_t v101 = sub_255C80BE8();
                                              if (!os_log_type_enabled(v100, v101))
                                              {

LABEL_93:
                                                swift_unknownObjectRelease();
                                                swift_unknownObjectRelease();
                                                goto LABEL_94;
                                              }
                                              v102 = (uint8_t *)swift_slowAlloc();
                                              *(_WORD *)v102 = 0;
                                              _os_log_impl(&dword_255A00000, v100, v101, "Couldn't make treatment render encoder", v102, 2u);
                                              MEMORY[0x25A297C00](v102, -1, -1);
                                              swift_unknownObjectRelease();
                                              swift_unknownObjectRelease();
                                              swift_unknownObjectRelease();
                                              swift_unknownObjectRelease();
                                              swift_unknownObjectRelease();

LABEL_89:
                                              swift_unknownObjectRelease();

                                              goto LABEL_96;
                                            }
                                            swift_once();
                                            goto LABEL_77;
                                          }
LABEL_112:
                                          __break(1u);
                                          return;
                                        }
LABEL_111:
                                        __break(1u);
                                        goto LABEL_112;
                                      }
LABEL_110:
                                      __break(1u);
                                      goto LABEL_111;
                                    }
LABEL_109:
                                    __break(1u);
                                    goto LABEL_110;
                                  }
                                  uint64_t v103 = qword_269F200C0;
                                  swift_unknownObjectRetain();
                                  if (v103 != -1) {
                                    swift_once();
                                  }
                                  uint64_t v104 = sub_255C7D898();
                                  __swift_project_value_buffer(v104, (uint64_t)qword_269F24B58);
                                  v74 = sub_255C7D878();
                                  os_log_type_t v105 = sub_255C80BE8();
                                  if (!os_log_type_enabled(v74, v105))
                                  {

                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();

LABEL_95:
                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();
                                    goto LABEL_96;
                                  }
                                  v106 = (uint8_t *)swift_slowAlloc();
                                  *(_WORD *)v106 = 0;
                                  _os_log_impl(&dword_255A00000, v74, v105, "Skipped frame because gaussian blur wasn't ready", v106, 2u);
                                  MEMORY[0x25A297C00](v106, -1, -1);
                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();
LABEL_83:
                                  swift_unknownObjectRelease();

                                  goto LABEL_89;
                                }
                                __break(1u);
                              }
                              else if (qword_269F200C0 == -1)
                              {
LABEL_61:
                                uint64_t v73 = sub_255C7D898();
                                __swift_project_value_buffer(v73, (uint64_t)qword_269F24B58);
                                v74 = sub_255C7D878();
                                os_log_type_t v75 = sub_255C80BE8();
                                if (!os_log_type_enabled(v74, v75))
                                {

                                  swift_unknownObjectRelease();
LABEL_94:
                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();

                                  goto LABEL_95;
                                }
                                v76 = (uint8_t *)swift_slowAlloc();
                                *(_WORD *)v76 = 0;
                                _os_log_impl(&dword_255A00000, v74, v75, "Couldn't make resize render encoder", v76, 2u);
                                MEMORY[0x25A297C00](v76, -1, -1);
                                swift_unknownObjectRelease();
                                swift_unknownObjectRelease();
                                swift_unknownObjectRelease();
                                goto LABEL_83;
                              }
                              swift_once();
                              goto LABEL_61;
                            }
LABEL_108:
                            __break(1u);
                            goto LABEL_109;
                          }
LABEL_107:
                          __break(1u);
                          goto LABEL_108;
                        }
LABEL_106:
                        __break(1u);
                        goto LABEL_107;
                      }
LABEL_105:
                      __break(1u);
                      goto LABEL_106;
                    }
LABEL_104:
                    __break(1u);
                    goto LABEL_105;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
                goto LABEL_104;
              }
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_49;
            }
            swift_unknownObjectRelease();
          }
          if (qword_269F200C0 != -1) {
            swift_once();
          }
          uint64_t v58 = sub_255C7D898();
          __swift_project_value_buffer(v58, (uint64_t)qword_269F24B58);
          swift_unknownObjectRetain_n();
          v59 = sub_255C7D878();
          os_log_type_t v60 = sub_255C80BE8();
          if (os_log_type_enabled(v59, v60))
          {
            v61 = (uint8_t *)swift_slowAlloc();
            uint64_t v62 = swift_slowAlloc();
            v122[0] = v62;
            *(_DWORD *)v61 = 136446210;
            uint64_t v117 = v9;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_269F24BB0);
            uint64_t v63 = sub_255C80658();
            uint64_t aBlock = sub_255A7BEC4(v63, v64, v122);
            sub_255C80F18();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_255A00000, v59, v60, "Skipping frame, draw was called without necessary textures, textureProvider=%{public}s", v61, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25A297C00](v62, -1, -1);
            MEMORY[0x25A297C00](v61, -1, -1);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
LABEL_96:
            swift_unknownObjectRelease();
            return;
          }

          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          if (qword_269F200C0 != -1) {
            swift_once();
          }
          uint64_t v46 = sub_255C7D898();
          __swift_project_value_buffer(v46, (uint64_t)qword_269F24B58);
          v47 = sub_255C7D878();
          os_log_type_t v48 = sub_255C80BE8();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            uint64_t v50 = swift_slowAlloc();
            uint64_t aBlock = v50;
            *(_DWORD *)uint64_t v49 = 136446466;
            v122[0] = qword_269F24B20;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_269F24BA8);
            uint64_t v51 = sub_255C80658();
            v122[0] = sub_255A7BEC4(v51, v52, &aBlock);
            sub_255C80F18();
            swift_bridgeObjectRelease();
            *(_WORD *)(v49 + 12) = 2082;
            v122[0] = qword_269F24B30;
            swift_unknownObjectRetain();
            uint64_t v53 = sub_255C80658();
            v122[0] = sub_255A7BEC4(v53, v54, &aBlock);
            sub_255C80F18();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_255A00000, v47, v48, "Pipeline states weren't ready - resize: %{public}s, treatment: %{public}s", (uint8_t *)v49, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x25A297C00](v50, -1, -1);
            MEMORY[0x25A297C00](v49, -1, -1);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            return;
          }

          swift_unknownObjectRelease();
        }
LABEL_49:
        swift_unknownObjectRelease();
        return;
      }
      if (qword_269F200C0 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_255C7D898();
      __swift_project_value_buffer(v55, (uint64_t)qword_269F24B58);
      v115 = sub_255C7D878();
      os_log_type_t v56 = sub_255C80BE8();
      if (!os_log_type_enabled(v115, v56))
      {

        goto LABEL_49;
      }
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_255A00000, v115, v56, "Couldn't make command buffer", v57, 2u);
      MEMORY[0x25A297C00](v57, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_269F200C0 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_255C7D898();
      __swift_project_value_buffer(v43, (uint64_t)qword_269F24B58);
      v115 = sub_255C7D878();
      os_log_type_t v44 = sub_255C80BE8();
      if (os_log_type_enabled(v115, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_255A00000, v115, v44, "No texture provider", v45, 2u);
        MEMORY[0x25A297C00](v45, -1, -1);
      }
    }
    v42 = v115;
  }
  else
  {
    v42 = v113;
  }
}

void sub_255B4FEA4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24BB8);
  swift_arrayDestroy();

  JUMPOUT(0x25A297C00);
}

uint64_t sub_255B4FEFC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_255B4FF5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = *(uint64_t (**)(id, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  id v8 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v9 = v7(v8, a3, a4);
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_255B5005C(uint64_t a1, void *a2, void *a3)
{
  id v4 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, objc_msgSend(a3, sel_pixelFormat), objc_msgSend(a3, sel_width), objc_msgSend(a3, sel_height), 0);
  id v5 = objc_msgSend(objc_msgSend(a2, sel_device), sel_newTextureWithDescriptor_, v4);
  uint64_t result = swift_unknownObjectRelease();
  if (v5)
  {

    return (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_255B5014C()
{
  off_269F24B40 = &unk_27047D4E8;
}

uint64_t sub_255B50160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_255B50180, 0, 0);
}

uint64_t sub_255B50180()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = objc_allocWithZone(MEMORY[0x263F13288]);
  LODWORD(v3) = 30.0;
  id v4 = objc_msgSend(v2, sel_initWithDevice_sigma_, v1, v3);
  objc_msgSend(v4, sel_setEdgeMode_, 0);
  id v5 = (void *)qword_269F24B48;
  qword_269F24B48 = (uint64_t)v4;

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_255B50220()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer____lazy_storage___isBlurDisabled);
  if (v1 != 2) {
    return v1 & 1;
  }
  uint64_t result = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer____lazy_storage___isBlurDisabled) = 0;
  return result;
}

id sub_255B50278()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MaterialRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MaterialRenderer()
{
  return self;
}

uint64_t sub_255B50340@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MaterialRenderer();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255B5037C()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F24B58);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F24B58);
  return sub_255C7D888();
}

uint64_t sub_255B50404()
{
  return swift_deallocObject();
}

void sub_255B50414()
{
}

void sub_255B5041C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F129C0]), sel_init);
  id v5 = (void *)sub_255C805F8();
  objc_msgSend(v4, sel_setLabel_, v5);

  id v6 = objc_msgSend(v4, sel_colorAttachments);
  id v7 = objc_msgSend(v6, sel_objectAtIndexedSubscript_, 0);

  if (v7)
  {
    objc_msgSend(v7, sel_setPixelFormat_, *(void *)(a3 + 48));

    uint64_t v8 = *(void **)(a3 + 32);
    swift_unknownObjectRetain();
    uint64_t v9 = (void *)sub_255C805F8();
    id v10 = objc_msgSend(v8, sel_newFunctionWithName_, v9);

    swift_unknownObjectRelease();
    objc_msgSend(v4, sel_setVertexFunction_, v10);
    swift_unknownObjectRelease();
    uint64_t v11 = *(void **)(a3 + 32);
    swift_unknownObjectRetain();
    uint64_t v12 = (void *)sub_255C805F8();
    id v13 = objc_msgSend(v11, sel_newFunctionWithName_, v12);

    swift_unknownObjectRelease();
    objc_msgSend(v4, sel_setFragmentFunction_, v13);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_255B505C4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return MEMORY[0x270FA2498](sub_255B505E4, 0, 0);
}

uint64_t sub_255B505E4()
{
  uint64_t v2 = v0[17];
  int v1 = (void *)v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_255B506E4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_255B4E8B0;
  v0[13] = &block_descriptor_28;
  v0[14] = v3;
  objc_msgSend(v1, sel_newRenderPipelineStateWithDescriptor_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_255B506E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_255B5080C;
  }
  else {
    uint64_t v2 = sub_255B507F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_255B507F4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 120));
}

uint64_t sub_255B5080C()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  swift_willThrow();
  *(void *)(v0 + 80) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
  sub_255B51048();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v3 = *(void **)(v0 + 120);
    if (qword_269F200C0 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void **)(v0 + 136);
    uint64_t v5 = sub_255C7D898();
    __swift_project_value_buffer(v5, (uint64_t)qword_269F24B58);
    id v6 = v4;
    id v7 = v3;
    id v8 = v6;
    id v9 = v7;
    id v10 = sub_255C7D878();
    os_log_type_t v11 = sub_255C80BE8();
    BOOL v12 = os_log_type_enabled(v10, v11);
    id v13 = *(void **)(v0 + 136);
    if (v12)
    {
      uint64_t v14 = (uint64_t *)(v0 + 128);
      uint64_t v15 = swift_slowAlloc();
      id v24 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v27 = v25;
      *(_DWORD *)uint64_t v15 = 136315394;
      id v16 = objc_msgSend(v13, sel_label);
      log = v10;
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = sub_255C80628();
        unint64_t v20 = v19;
      }
      else
      {
        unint64_t v20 = 0xE300000000000000;
        uint64_t v18 = 7104878;
      }
      id v21 = *(void **)(v0 + 136);
      *uint64_t v14 = sub_255A7BEC4(v18, v20, &v27);
      sub_255C80F18();
      swift_bridgeObjectRelease();

      *(_WORD *)(v15 + 12) = 2114;
      *uint64_t v14 = (uint64_t)v9;
      id v22 = v9;
      sub_255C80F18();
      *id v24 = v9;

      _os_log_impl(&dword_255A00000, log, v11, "Failed to create render pipeline state (%s, privacy: .public). error=%{public}@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F27D60);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v25, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }
    else
    {
    }
    id v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23(0);
  }
  return result;
}

id sub_255B50B4C(void *a1)
{
  objc_msgSend(a1, sel_bounds);
  if (v2 <= 0.0 || (double v4 = v3, v3 <= 0.0))
  {
    *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture) = 0;
    goto LABEL_14;
  }
  double v5 = v2;
  id result = self;
  if (v5 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((*(void *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_19;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_context);
  id v9 = objc_msgSend(result, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(void *)(v8 + 48), (uint64_t)v5 / 4, (uint64_t)v4 / 4, 0);
  objc_msgSend(v9, sel_setUsage_, 7);
  id result = objc_msgSend(*(id *)(v8 + 16), sel_newTextureWithDescriptor_, v9);
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture) = result;

LABEL_14:

  return (id)swift_unknownObjectRelease();
}

uint64_t sub_255B50CE0(uint64_t result)
{
  if (result != 552 && result != 80)
  {
    sub_255C810E8();
    swift_bridgeObjectRelease();
    sub_255C813E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    id result = sub_255C81248();
    __break(1u);
  }
  return result;
}

uint64_t sub_255B50DD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B50E00(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_255A16A8C;
  return sub_255B4D910(a1, a2, v6);
}

uint64_t sub_255B50EB4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A16A8C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_255B4E5F4, 0, 0);
}

uint64_t objectdestroy_20Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B50FA0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A16A8C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_255B4E310, 0, 0);
}

unint64_t sub_255B51048()
{
  unint64_t result = qword_269F24C10;
  if (!qword_269F24C10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F24C10);
  }
  return result;
}

uint64_t sub_255B51088()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255B510C0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A16A8C;
  return MEMORY[0x270FA2498](sub_255B4DBB8, 0, 0);
}

uint64_t sub_255B51164()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A16A8C;
  return MEMORY[0x270FA2498](sub_255B4DFD0, 0, 0);
}

uint64_t sub_255B51208()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A16A8C;
  return MEMORY[0x270FA2498](sub_255B4E204, 0, 0);
}

uint64_t sub_255B512AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B512E4(uint64_t a1)
{
  double v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_255A160B0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F24C50 + dword_269F24C50);
  return v6(a1, v4);
}

uint64_t sub_255B5139C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255B513DC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_255A160B0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_255B50180, 0, 0);
}

void sub_255B51490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  vDSP_Length v3 = *(void *)(a3 + 8);
  if (*(void *)(a1 + 16) != v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a2 + 16) != v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)a3)
  {
    vDSP_vmul((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, *(float **)a3, 1, v3);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_255B514D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char **a6)
{
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = a6;
  id v7 = *a6;
  vDSP_Length v8 = *((void *)*a6 + 2);
  if ((a4 >> 1) - a3 != v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v9 = a5;
  if (*(void *)(a5 + 16) != v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = a3;
  uint64_t v11 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_9:
  }
    id v7 = sub_255C57BB0((uint64_t)v7);
  vDSP_vmul((const float *)(v11 + 4 * v10), 1, (const float *)(v9 + 32), 1, (float *)v7 + 8, 1, v8);
  *uint64_t v6 = v7;
}

void sub_255B51588(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v6 = *a3;
  vDSP_Length v7 = *((void *)*a3 + 2);
  if (*(void *)(a1 + 16) != v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = a2;
  if (*(void *)(a2 + 16) != v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  vDSP_Length v3 = a3;
  uint64_t v5 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_7:
  }
    uint64_t v6 = sub_255C57BB0((uint64_t)v6);
  vDSP_vmul((const float *)(v5 + 32), 1, (const float *)(v4 + 32), 1, (float *)v6 + 8, 1, v7);
  *vDSP_Length v3 = v6;
}

uint64_t sub_255B51628@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  __C[1] = *MEMORY[0x263EF8340];
  float v5 = *a1;
  __C[0] = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_255B16CEC(0, 0, 0);
  uint64_t v6 = __C[0];
  uint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    int v8 = *(_DWORD *)(a2 + 32);
    unint64_t v10 = *(void *)(__C[0] + 16);
    unint64_t v9 = *(void *)(__C[0] + 24);
    if (v10 >= v9 >> 1)
    {
      sub_255B16CEC(v9 > 1, v10 + 1, 1);
      uint64_t v6 = __C[0];
    }
    *(void *)(v6 + 16) = v10 + 1;
    *(_DWORD *)(v6 + 4 * v10 + 32) = v8;
    uint64_t v11 = v7 - 1;
    if (v11)
    {
      uint64_t v14 = 0;
      unint64_t v15 = v10 + 9;
      do
      {
        uint64_t v16 = v14 + 1;
        float v17 = *(float *)(a2 + 36 + 4 * v14);
        float v18 = powf(v5, (float)(v14 + 1));
        __C[0] = v6;
        unint64_t v19 = *(void *)(v6 + 24);
        if (v15 - 8 >= v19 >> 1)
        {
          sub_255B16CEC(v19 > 1, v15 - 7, 1);
          uint64_t v6 = __C[0];
        }
        *(void *)(v6 + 16) = v15 - 7;
        *(float *)(v6 + 4 * v15++) = v17 * v18;
        uint64_t v14 = v16;
      }
      while (v11 != v16);
    }
  }
  swift_bridgeObjectRelease_n();
  vDSP_Length v12 = *(void *)(v6 + 16);
  LODWORD(__C[0]) = 2143289344;
  vDSP_sve((const float *)(v6 + 32), 1, (float *)__C, v12);
  uint64_t result = swift_release();
  *a3 = __C[0];
  return result;
}

uint64_t sub_255B517F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  float v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  return sub_255B518BC((uint64_t)v5, *(void *)(a1 + 16), a2);
}

uint64_t sub_255B518BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WaveformBinnedFFT();
  uint64_t v10 = *(void *)(a1 + *(int *)(v9 + 40));
  uint64_t v11 = (int *)type metadata accessor for WaveformBinnedFFT.Iterator();
  vDSP_Length v12 = (void *)(a3 + v11[9]);
  *vDSP_Length v12 = v10;
  v12[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  swift_bridgeObjectRetain();
  sub_255C80788();
  float v13 = *(float *)(a1 + *(int *)(v9 + 36));
  uint64_t v14 = sub_255C80B18();
  *(float *)(a3 + v11[10]) = v13 / (float)((float)v14 + (float)v14);
  v17[1] = v10;
  type metadata accessor for WaveformBinnedFFT.Band();
  sub_255C808C8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_255C80B68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  uint64_t result = swift_bridgeObjectRelease();
  float v16 = v18;
  if (v19) {
    float v16 = 0.0;
  }
  *(float *)(a3 + v11[11]) = v16;
  return result;
}

unint64_t sub_255B51ACC(int *a1)
{
  vDSP_Length v3 = (uint64_t *)(v1 + a1[9]);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = type metadata accessor for WaveformBinnedFFT.Band();
  uint64_t v7 = MEMORY[0x25A296130](v5, v6);
  unint64_t result = 0;
  if (v4 == v7) {
    return result;
  }
  char v9 = sub_255C80868();
  unint64_t result = sub_255C80828();
  if ((v9 & 1) == 0)
  {
    uint64_t v5 = sub_255C81138();
    unint64_t result = swift_unknownObjectRelease();
    float v11 = *((float *)&v5 + 1);
    uint64_t v12 = v4 + 1;
    if (!__OFADD__(v4, 1)) {
      goto LABEL_4;
    }
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v10 = v5 + 8 * v4;
  LODWORD(v5) = *(_DWORD *)(v10 + 32);
  float v11 = *(float *)(v10 + 36);
  uint64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1)) {
    goto LABEL_12;
  }
LABEL_4:
  v3[1] = v12;
  uint64_t v13 = a1[11];
  float v14 = *(float *)(v1 + v13);
  float v15 = 0.0;
  if (v14 < v11)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    do
    {
      sub_255C80F08();
      if (v17) {
        break;
      }
      float v15 = v15 + v16;
      float v14 = v14 + *(float *)(v1 + a1[10]);
      *(float *)(v1 + v13) = v14;
    }
    while (v14 < v11);
  }
  return v5 | ((unint64_t)LODWORD(v11) << 32);
}

unint64_t sub_255B51C90@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_255B51ACC(a1);
  *(void *)a2 = result;
  *(_DWORD *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 12) = v5 & 1;
  return result;
}

uint64_t sub_255B51CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_255B517F4(a1, a2);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t sub_255B51D24()
{
  return 0;
}

uint64_t sub_255B51D2C()
{
  return 2;
}

uint64_t sub_255B51D3C()
{
  return sub_255C807C8();
}

uint64_t sub_255B51D60(uint64_t result, uint64_t (*a2)(void *, uint64_t *))
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  if (result)
  {
    uint64_t v5 = sub_255C80858();
    *(void *)(v5 + 16) = v4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5 + 32;
  v7[1] = v4;
  uint64_t v8 = 0;
  v7[0] = v5 + 32;
  unint64_t result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(void *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(void *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_255B51E60(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  vDSP_Length v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 16) != v4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  float v5 = a4;
  float __B = a3;
  if (!*(void *)a2) {
    goto LABEL_5;
  }
  vDSP_vclip((const float *)(a1 + 32), 1, &__B, &v5, *(float **)a2, 1, v4);
}

uint64_t sub_255B51EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_255B16CEC(0, v4, 0);
    uint64_t v5 = v15;
    for (i = (int *)(a1 + 32); ; ++i)
    {
      int v13 = *i;
      sub_255B51628((float *)&v13, a2, &v14);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      int v9 = v14;
      uint64_t v15 = v5;
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_255B16CEC(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v15;
      }
      *(void *)(v5 + 16) = v11 + 1;
      *(_DWORD *)(v5 + 4 * v11 + 32) = v9;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
  }
  return v5;
}

uint64_t sub_255B51FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  int v5 = *(_DWORD *)(a2 + 32);
  int64_t v6 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v7 = 2 * v6;
  BOOL v8 = __OFADD__(v6, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8) {
    goto LABEL_42;
  }
  int v9 = (void *)MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native)
  {
    unint64_t v11 = v9;
    if (v7 <= v9[3] >> 1)
    {
      if (v9[2]) {
        goto LABEL_9;
      }
LABEL_23:
      if (!v6) {
        goto LABEL_24;
      }
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  if (v6 <= v7) {
    int64_t v18 = 2 * v6;
  }
  else {
    int64_t v18 = v6;
  }
  unint64_t v11 = sub_255C15C94(isUniquelyReferenced_nonNull_native, v18, 1, MEMORY[0x263F8EE78]);
  if (!v9[2]) {
    goto LABEL_23;
  }
LABEL_9:
  uint64_t v12 = v11[2];
  if ((v11[3] >> 1) - v12 < v6)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int v13 = &v11[v12 + 4];
  if (&v13[v6] > v9 + 4 && v13 < &v9[v6 + 4]) {
    goto LABEL_44;
  }
  memcpy(v13, v9 + 4, 8 * v6);
  if (!v6) {
    goto LABEL_24;
  }
  uint64_t v15 = v11[2];
  BOOL v16 = __OFADD__(v15, v6);
  uint64_t v17 = v15 + v6;
  if (!v16)
  {
    v11[2] = v17;
LABEL_24:
    swift_bridgeObjectRelease_n();
    if (v3 != 1)
    {
      char v19 = (int *)(a2 + 36);
      for (uint64_t i = v3 - 2; ; --i)
      {
        int v21 = v5;
        int v5 = *v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D1D8);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_255C83400;
        *(_DWORD *)(v22 + 32) = v21;
        *(_DWORD *)(v22 + 36) = v5;
        unint64_t v23 = v11[2];
        swift_bridgeObjectRetain();
        id v24 = (void *)swift_isUniquelyReferenced_nonNull_native();
        if (!v24 || (uint64_t v25 = v11, v23 >= v11[3] >> 1)) {
          uint64_t v25 = sub_255C15C94(v24, v23 + 1, 1, v11);
        }
        if (!*(void *)(v22 + 16)) {
          break;
        }
        unint64_t v26 = v25[2];
        if (v26 >= v25[3] >> 1) {
          goto LABEL_40;
        }
        uint64_t v27 = &v25[v26 + 4];
        if (v22 + 32 < (unint64_t)(v27 + 1) && (unint64_t)v27 < v22 + 40) {
          goto LABEL_44;
        }
        *uint64_t v27 = *(void *)(v22 + 32);
        ++v25[2];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!i) {
          goto LABEL_38;
        }
        ++v19;
        unint64_t v11 = v25;
      }
      goto LABEL_41;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return a1;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

void sub_255B522B8(uint64_t a1, uint64_t a2, float (*a3)(uint64_t, __n128), float a4)
{
  uint64_t v25 = MEMORY[0x263F8EE78];
  sub_255B16CEC(0, 0, 0);
  uint64_t v24 = *(void *)(a2 + 16);
  if (v24) {
    float v7 = *(float *)(a2 + 32);
  }
  else {
    float v7 = 0.0;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v24)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v10 = 0;
  unint64_t v11 = 0;
  float v12 = a4 / (float)((float)v8 + (float)v8);
  uint64_t v22 = a2 + 32;
  while (1)
  {
    uint64_t v13 = v22 + 8 * v10;
    v9.n128_u32[0] = *(_DWORD *)v13;
    float v14 = *(float *)(v13 + 4);
    if (v7 >= v14 || v11 == v8) {
      goto LABEL_25;
    }
    if (v11 >= v8) {
      break;
    }
    unint64_t v16 = v11 + 1;
    float v7 = v12 + v7;
    if (v7 >= v14 || v16 == v8)
    {
      ++v11;
    }
    else
    {
      if (v16 >= v8) {
        goto LABEL_30;
      }
      float v18 = (float)(*(float *)(a1 + 32 + 4 * v11) + 0.0) + *(float *)(a1 + 32 + 4 * v16);
      float v7 = v12 + v7;
      if (v7 >= v14)
      {
LABEL_23:
        v11 += 2;
      }
      else
      {
        while (v8 - 2 != v11)
        {
          float v18 = v18 + *(float *)(a1 + 40 + 4 * v11);
          float v7 = v12 + v7;
          ++v11;
          if (v7 >= v14) {
            goto LABEL_23;
          }
        }
        unint64_t v11 = v8;
      }
    }
LABEL_25:
    float v19 = a3(v10, v9);
    unint64_t v21 = *(void *)(v25 + 16);
    unint64_t v20 = *(void *)(v25 + 24);
    if (v21 >= v20 >> 1) {
      sub_255B16CEC(v20 > 1, v21 + 1, 1);
    }
    ++v10;
    *(void *)(v25 + 16) = v21 + 1;
    *(float *)(v25 + 4 * v21 + 32) = v19;
    if (v10 == v24) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_255B524CC(uint64_t a1, char a2)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x263F8EE78];
  }
  if (a2) {
    uint64_t v2 = &unk_270478308;
  }
  else {
    uint64_t v2 = &unk_2704782D0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_255B51FF0(v3, (uint64_t)v2);
  float v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v9);
  sub_255B522B8(v4, v8, (float (*)(uint64_t, __n128))sub_255B526CC, v6);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255B51EE4(v11, (uint64_t)&unk_2704784D8);
  MEMORY[0x270FA5388](*(void *)(v11 + 16));
  uint64_t v13 = sub_255B51D60(v12, (uint64_t (*)(void *, uint64_t *))sub_255B5273C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](*(void *)(v13 + 16));
  uint64_t v15 = sub_255B51D60(v14, (uint64_t (*)(void *, uint64_t *))sub_255B5278C);
  swift_bridgeObjectRelease();
  return v15;
}

float sub_255B526CC(uint64_t a1, double a2, double a3, float a4)
{
  int v6 = *(unsigned __int8 *)(v4 + 16);
  float v7 = powf(a4 * 0.6, 0.4);
  float v8 = 0.15;
  if (v6) {
    float v8 = 0.125;
  }
  return v7 * (float)(1.0 - (float)(v8 * (float)a1));
}

void sub_255B5273C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(uint64_t **)(v2 + 24);
  uint64_t v5 = **(void **)(v2 + 16);
  sub_255B51490(v5, *v4, a1);
  *a2 = *(void *)(v5 + 16);
}

void sub_255B5278C(uint64_t a1, void *a2)
{
  float v4 = *(float *)(v2 + 24);
  float v5 = *(float *)(v2 + 28);
  uint64_t v6 = **(void **)(v2 + 16);
  sub_255B51E60(v6, a1, v4, v5);
  *a2 = *(void *)(v6 + 16);
}

uint64_t sub_255B527DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255B52888(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  float v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *float v4 = *a2;
    float v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v11 = (_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    *uint64_t v10 = *v11;
    *(void *)(((unint64_t)v10 + 11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 11) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_255B5299C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255B52A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  float v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_255B52AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  float v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255B52B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  float v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255B52BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  float v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255B52C60(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B52DBCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_255B52DD0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              float v19 = (void *)((((unint64_t)&a1[v9 + 3] & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *float v19 = v20;
            }
            else
            {
              float v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 3) & 0xFFFFFFFC) + 11) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 3) & 0xFFFFFFFC) + 11) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 3) & 0xFFFFFFFC) + 11) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x255B52FC8);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WaveformBinnedFFT()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WaveformBinnedFFT.Band()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B53020()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for WaveformBinnedFFT.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B53054()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255B53110(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v10 = *v11;
    v10[1] = v11[1];
    unsigned int v12 = (_DWORD *)(((unint64_t)v10 + 19) & 0xFFFFFFFFFFFFFFF8);
    int v13 = (_DWORD *)(((unint64_t)v11 + 19) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_255B5325C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);

  return swift_bridgeObjectRelease();
}

uint64_t sub_255B532F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_255B533C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  uint64_t v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  return a1;
}

uint64_t sub_255B5349C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  return a1;
}

uint64_t sub_255B53558(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  uint64_t v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  return a1;
}

uint64_t sub_255B5362C(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B537D8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    int v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_255B537EC(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v19 = a2 ^ 0x80000000;
                v18[1] = 0;
              }
              else
              {
                uint64_t v19 = (a2 - 1);
              }
              *unint64_t v18 = v19;
            }
            else
            {
              int v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
              v17(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v11 = a3 - v9 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((((v8 + 7) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((((v8 + 7) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x255B53A08);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WaveformBinnedFFT.Bin()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t (*sub_255B53A48())()
{
  return j__swift_endAccess;
}

double sub_255B53A9C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  swift_beginAccess();
  double result = *(double *)(v3 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_255B53B28()
{
  return swift_release();
}

double sub_255B53BD0()
{
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  swift_beginAccess();
  return *(double *)(v0 + 16);
}

unint64_t sub_255B53C5C()
{
  unint64_t result = qword_269F22F30;
  if (!qword_269F22F30)
  {
    type metadata accessor for ParallaxContext();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F30);
  }
  return result;
}

uint64_t type metadata accessor for ParallaxContext()
{
  uint64_t result = qword_26B29C3E0;
  if (!qword_26B29C3E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255B53D00()
{
  return swift_release();
}

uint64_t sub_255B53DA8(uint64_t a1, double a2)
{
  uint64_t result = swift_beginAccess();
  *(double *)(a1 + 16) = a2;
  return result;
}

uint64_t sub_255B53DFC()
{
  return sub_255B5488C();
}

void (*sub_255B53E14(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  v3[7] = sub_255B53A48();
  return sub_255B53F00;
}

void sub_255B53F00(void *a1)
{
}

uint64_t (*sub_255B53F0C())()
{
  return j_j__swift_endAccess;
}

double sub_255B53F60@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  swift_beginAccess();
  double result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_255B53FEC()
{
  return swift_release();
}

double sub_255B54094()
{
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  swift_beginAccess();
  return *(double *)(v0 + 24);
}

uint64_t sub_255B54120()
{
  return swift_release();
}

uint64_t sub_255B541C8(uint64_t a1, double a2)
{
  uint64_t result = swift_beginAccess();
  *(double *)(a1 + 24) = a2;
  return result;
}

uint64_t sub_255B5421C()
{
  return sub_255B54838();
}

void (*sub_255B54234(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  v3[7] = sub_255B53F0C();
  return sub_255B54320;
}

void sub_255B54320(void *a1)
{
}

void sub_255B5432C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_255C7D728();
  swift_release();

  free(v1);
}

uint64_t sub_255B543B8()
{
  return swift_retain();
}

uint64_t sub_255B5442C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_255B54468()
{
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_255B544D8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2;
  return result;
}

double sub_255B544E0()
{
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  return *(double *)(v0 + 48);
}

uint64_t sub_255B54550(uint64_t result, double a2)
{
  *(double *)(result + 48) = a2;
  return result;
}

uint64_t ParallaxContext.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ParallaxContext.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255B5466C()
{
  return type metadata accessor for ParallaxContext();
}

uint64_t sub_255B54674()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ParallaxContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ParallaxContext);
}

uint64_t dispatch thunk of ParallaxContext.animationProgress.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ParallaxContext.animationProgress.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ParallaxContext.animationProgress.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ParallaxContext.headerScrollOffset.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ParallaxContext.headerScrollOffset.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ParallaxContext.headerScrollOffset.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t sub_255B54838()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t sub_255B5488C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t sub_255B548E0(uint64_t a1, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, uint64_t a4, unsigned int a5, const AudioStreamPacketDescription *a6)
{
  return sub_255B54A68(a1, a2, a3, a5, a6);
}

uint64_t sub_255B548EC()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioTapCallbackWrapper()
{
  return self;
}

uint64_t sub_255B54948(OpaqueAudioQueue *a1, AudioQueueBuffer *a2, unsigned int a3, const AudioStreamPacketDescription *a4)
{
  uint64_t v8 = a3;
  if (a3)
  {
    mAudioData = (char *)a2->mAudioData;
    uint64_t v10 = sub_255C80858();
    *(void *)(v10 + 16) = v8;
    unsigned int v11 = (char *)(v10 + 32);
    if ((unint64_t)mAudioData < v10 + 32 + 4 * v8 && v11 < &mAudioData[4 * v8])
    {
      uint64_t result = sub_255C81308();
      __break(1u);
      return result;
    }
    memcpy(v11, mAudioData, 4 * v8);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  *(void *)(v10 + 16) = v8;
  (*(void (**)(uint64_t))(v4 + 16))(v10);
  swift_bridgeObjectRelease();

  return AudioQueueEnqueueBuffer(a1, a2, 0, a4);
}

uint64_t sub_255B54A68(uint64_t a1, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, unsigned int a4, const AudioStreamPacketDescription *a5)
{
  uint64_t v10 = sub_255C7D898();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    sub_255B54948(a2, a3, a4, a5);
    return swift_release();
  }
  else
  {
    if (qword_26B29D050 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_26B2AA560);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
    int v16 = sub_255C7D878();
    os_log_type_t v17 = sub_255C80BE8();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl(&dword_255A00000, v16, v17, "AudioTapCallbackWrapper's wrappedCallback object is nil. Did not forward the call to callback wrapper", v18, 2u);
      MEMORY[0x25A297C00](v18, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

unsigned char *storeEnumTagSinglePayload for WaveformData.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255B54D30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformData.Kind()
{
  return &type metadata for WaveformData.Kind;
}

uint64_t getEnumTagSinglePayload for WaveformData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255B54E04(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_255B54E0C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WaveformData()
{
  return &type metadata for WaveformData;
}

unint64_t sub_255B54E2C()
{
  unint64_t result = qword_269F24DF0;
  if (!qword_269F24DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24DF0);
  }
  return result;
}

uint64_t sub_255B54E88()
{
  sub_255A90D90(v0, (uint64_t)&v8);
  uint64_t v1 = v8;
  if (v12)
  {
    long long v5 = v10;
    long long v6 = v9;
    uint64_t v2 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29D1E0);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_255C90270;
    *(void *)(result + 32) = v1;
    *(_OWORD *)(result + 40) = v6;
    *(_OWORD *)(result + 56) = v5;
    *(void *)(result + 72) = v2;
  }
  else
  {
    long long v7 = v9;
    long long v4 = v10;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29D1E0);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_255C8B5F0;
    *(void *)(result + 32) = v1;
    *(_OWORD *)(result + 40) = v7;
    *(_OWORD *)(result + 56) = v4;
  }
  return result;
}

void sub_255B54F5C(void *a1@<X8>)
{
  *a1 = &unk_27047D528;
}

unint64_t sub_255B54F70()
{
  unint64_t result = qword_26B29D6A8;
  if (!qword_26B29D6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D6A8);
  }
  return result;
}

void sub_255B54FC4(os_log_type_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  log = sub_255C7D878();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    if (v7)
    {
      swift_bridgeObjectRetain();
      sub_255C806E8();
      sub_255C806E8();
      swift_bridgeObjectRelease();
      uint64_t v10 = 60;
      unint64_t v11 = 0xE100000000000000;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
    }
    sub_255A7BEC4(v10, v11, &v13);
    sub_255C80F18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_255A7BEC4(a2, a3, &v13);
    sub_255C80F18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_255A00000, log, a1, "%{public}s%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v9, -1, -1);
    MEMORY[0x25A297C00](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_255B5520C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B7C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E00);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = v5;
  swift_getAssociatedTypeWitness();
  sub_255C80108();
  sub_255C80E88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E08);
  swift_getTupleTypeMetadata3();
  uint64_t v33 = v4;
  uint64_t v34 = sub_255C80318();
  unint64_t v35 = sub_255AE3790();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EEB8);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E10);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCD0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29F240);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  v27[2] = swift_getWitnessTable();
  uint64_t v6 = sub_255C7FED8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)v27 - v11;
  uint64_t v13 = sub_255C80E88();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  os_log_type_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v30 = (uint64_t)v27 - v18;
  uint64_t v19 = v2;
  uint64_t v20 = *(void *)(v2 + 32);
  uint64_t v21 = swift_beginAccess();
  if (*(unsigned char *)(v20 + 16) == 1)
  {
    v27[1] = v27;
    MEMORY[0x270FA5388](v21);
    uint64_t v22 = v29;
    v27[-4] = v28;
    v27[-3] = v22;
    v27[-2] = v19;
    sub_255C7E928();
    sub_255C7FEC8();
    swift_getWitnessTable();
    sub_255A20F54(v10);
    unint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v10, v6);
    sub_255A20F54(v12);
    v23(v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v17, 1, 1, v6);
    swift_getWitnessTable();
  }
  uint64_t v24 = v30;
  sub_255A97640((uint64_t)v17, v30);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  uint64_t v32 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v24);
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v24, v13);
}

uint64_t sub_255B55768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v87 = a1;
  uint64_t v96 = a4;
  uint64_t v95 = sub_255C7E988();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  v93 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_255C7E518();
  MEMORY[0x270FA5388](v92);
  id v91 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_255C7DCC8();
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  id v89 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_255C801A8();
  uint64_t v84 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  v67 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E18);
  MEMORY[0x270FA5388](v82);
  id v66 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B7C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E00);
  swift_getAssociatedTypeWitness();
  sub_255C80108();
  sub_255C80E88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E08);
  swift_getTupleTypeMetadata3();
  uint64_t v10 = sub_255C80318();
  unint64_t v11 = sub_255AE3790();
  uint64_t WitnessTable = swift_getWitnessTable();
  v115 = (uint64_t *)v9;
  uint64_t v116 = v10;
  unint64_t v117 = v11;
  uint64_t v118 = WitnessTable;
  uint64_t v13 = sub_255C7F388();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v65 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EEB8);
  uint64_t v17 = sub_255C7E458();
  uint64_t v75 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v65 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E10);
  uint64_t v73 = sub_255C7E458();
  uint64_t v78 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  v68 = (char *)&v65 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCD0);
  uint64_t v77 = sub_255C7E458();
  uint64_t v81 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  v70 = (char *)&v65 - v21;
  uint64_t v80 = sub_255C7E458();
  uint64_t v85 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  v74 = (char *)&v65 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29F240);
  uint64_t v76 = sub_255C7E458();
  uint64_t v86 = *(void *)(v76 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v76);
  v79 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  id v83 = (char *)&v65 - v25;
  uint64_t v97 = v71;
  uint64_t v98 = v72;
  uint64_t v99 = v87;
  sub_255C7F378();
  sub_255C7FD18();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v19;
  sub_255C7F618();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v28 = v67;
  sub_255C80198();
  uint64_t v29 = v84;
  uint64_t v30 = (uint64_t)v66;
  uint64_t v31 = v69;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v66, v28, v69);
  *(_DWORD *)(v30 + *(int *)(v82 + 36)) = 1061997773;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v31);
  sub_255C7F198();
  uint64_t v32 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
  uint64_t v113 = v26;
  uint64_t v114 = v32;
  uint64_t v33 = swift_getWitnessTable();
  sub_255A09998(&qword_269F24E20, &qword_269F24E18);
  uint64_t v34 = v68;
  sub_255C7F598();
  sub_255A095A4(v30, &qword_269F24E18);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v27, v17);
  uint64_t v35 = v90;
  int v36 = v89;
  uint64_t v37 = v88;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, *MEMORY[0x263F184F8], v88);
  uint64_t v38 = sub_255A09998(&qword_269F24E28, &qword_269F24E10);
  uint64_t v111 = v33;
  uint64_t v112 = v38;
  uint64_t v39 = v73;
  uint64_t v40 = swift_getWitnessTable();
  float v41 = v70;
  sub_255C7F658();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v34, v39);
  sub_255C801F8();
  uint64_t v42 = sub_255A09998(&qword_26B29BCC8, &qword_26B29BCD0);
  uint64_t v109 = v40;
  uint64_t v110 = v42;
  uint64_t v43 = v77;
  uint64_t v44 = swift_getWitnessTable();
  v45 = v74;
  sub_255C7FA38();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v41, v43);
  uint64_t v46 = v94;
  v47 = v93;
  uint64_t v48 = v95;
  (*(void (**)(char *, void, uint64_t))(v94 + 104))(v93, *MEMORY[0x263F19860], v95);
  uint64_t v49 = v91;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v91[*(int *)(v92 + 20)], v47, v48);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v49 = _Q0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v107 = v44;
  uint64_t v108 = MEMORY[0x263F18860];
  uint64_t v55 = v80;
  uint64_t v56 = swift_getWitnessTable();
  sub_255B587B8((unint64_t *)&unk_26B29F278, MEMORY[0x263F19048]);
  v57 = v79;
  sub_255C7FB88();
  sub_255A093F4((uint64_t)v49);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v45, v55);
  uint64_t v58 = sub_255A09998(&qword_26B29F238, (uint64_t *)&unk_26B29F240);
  uint64_t v105 = v56;
  uint64_t v106 = v58;
  uint64_t v59 = v76;
  uint64_t v60 = swift_getWitnessTable();
  v61 = v83;
  sub_255A20F54(v57);
  uint64_t v62 = v86;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v86 + 8);
  v63(v57, v59);
  uint64_t v103 = 0;
  char v104 = 1;
  v115 = &v103;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v57, v61, v59);
  uint64_t v116 = (uint64_t)v57;
  v102[0] = MEMORY[0x263F1B6B0];
  v102[1] = v59;
  uint64_t v100 = MEMORY[0x263F1B698];
  uint64_t v101 = v60;
  sub_255AF64A0((uint64_t)&v115, 2uLL, (uint64_t)v102);
  v63(v61, v59);
  return ((uint64_t (*)(char *, uint64_t))v63)(v57, v59);
}

uint64_t sub_255B56490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v90 = a4;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E08);
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v93);
  id v91 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v89 = (char *)&v75 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_255C80108();
  uint64_t v81 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v78 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v79 = (char *)&v75 - v14;
  uint64_t v77 = sub_255C80E88();
  uint64_t v76 = *(void *)(v77 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v77);
  uint64_t v87 = (char *)&v75 - v16;
  uint64_t v94 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v75 - v17;
  uint64_t v86 = v11;
  uint64_t v88 = sub_255C80E88();
  uint64_t v82 = *(void *)(v88 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v88);
  uint64_t v98 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v85 = (uint64_t)&v75 - v20;
  uint64_t v21 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v22 = sub_255C805E8();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E00);
  uint64_t v83 = *(void *)(v84 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v84);
  uint64_t v97 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v75 - v25;
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v27 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v110 = sub_255C80648();
  unint64_t v111 = v28;
  MEMORY[0x270FA5388](v110);
  *(&v75 - 4) = a2;
  *(&v75 - 3) = a3;
  *(&v75 - 2) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E30);
  sub_255A09998(&qword_269F24E38, &qword_269F24E30);
  sub_255A1D78C();
  uint64_t v96 = v26;
  uint64_t v29 = a2;
  sub_255C800D8();
  uint64_t v30 = *(void *)a1;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(a3 + 352);
  uint64_t v32 = v87;
  uint64_t v95 = v29;
  v31(v29, a3);
  uint64_t v33 = v94;
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48))(v32, 1, AssociatedTypeWitness);
  uint64_t v35 = MEMORY[0x263F1BA00];
  uint64_t v36 = AssociatedTypeWitness;
  if (v34 == 1)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v32, v77);
    uint64_t v37 = (uint64_t)v98;
    v81[7](v98, 1, 1, v86);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v113 = MEMORY[0x263F1A820];
    uint64_t v114 = AssociatedConformanceWitness;
    uint64_t v87 = (char *)AssociatedConformanceWitness;
    uint64_t v115 = v35;
    swift_getWitnessTable();
    uint64_t v39 = v85;
    sub_255A97640(v37, v85);
    uint64_t v40 = v82;
    float v41 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v82 + 8);
    v79 = (char *)((v82 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    uint64_t v42 = v88;
    uint64_t v81 = v41;
    ((void (*)(uint64_t, uint64_t))v41)(v37, v88);
  }
  else
  {
    uint64_t v43 = v80;
    (*(void (**)(void))(v33 + 32))();
    id v44 = objc_msgSend(self, sel_mainBundle);
    uint64_t v45 = sub_255B57B38();
    uint64_t v77 = v30;
    unint64_t v47 = v46;

    uint64_t v49 = 0x41206D6F74737543;
    if (v47) {
      uint64_t v49 = v45;
    }
    unint64_t v50 = 0xEE00736E6F697463;
    if (v47) {
      unint64_t v50 = v47;
    }
    uint64_t v110 = v49;
    unint64_t v111 = v50;
    MEMORY[0x270FA5388](v48);
    *(&v75 - 4) = v95;
    *(&v75 - 3) = a3;
    *(&v75 - 2) = (uint64_t)v43;
    uint64_t v51 = swift_getAssociatedConformanceWitness();
    unint64_t v52 = v78;
    sub_255C800D8();
    uint64_t v99 = MEMORY[0x263F1A820];
    uint64_t v87 = (char *)v51;
    uint64_t v100 = v51;
    uint64_t v101 = v35;
    uint64_t v53 = v86;
    swift_getWitnessTable();
    unint64_t v54 = v79;
    sub_255A20F54(v52);
    uint64_t v55 = v81;
    uint64_t v56 = v81[1];
    ((void (*)(char *, uint64_t))v56)(v52, v53);
    uint64_t v37 = (uint64_t)v98;
    sub_255A20F54(v54);
    ((void (*)(char *, uint64_t))v56)(v54, v53);
    v55[7]((char *)v37, 0, 1, v53);
    uint64_t v39 = v85;
    sub_255A97640(v37, v85);
    uint64_t v40 = v82;
    v57 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v82 + 8);
    v79 = (char *)((v82 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    uint64_t v42 = v88;
    uint64_t v81 = v57;
    ((void (*)(uint64_t, uint64_t))v57)(v37, v88);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v80, v36);
  }
  long long v58 = *(_OWORD *)(a1 + 8);
  long long v116 = *(_OWORD *)(a1 + 24);
  long long v117 = v58;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v95;
  *(void *)(v59 + 24) = a3;
  long long v60 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v59 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v59 + 48) = v60;
  *(void *)(v59 + 64) = *(void *)(a1 + 32);
  swift_unknownObjectRetain();
  sub_255AE1260((uint64_t)&v117);
  sub_255AE1260((uint64_t)&v116);
  v61 = v89;
  uint64_t v62 = MEMORY[0x263F1A820];
  sub_255C7FEA8();
  uint64_t v63 = v83;
  unint64_t v64 = v97;
  uint64_t v65 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v97, v96, v84);
  uint64_t v110 = (uint64_t)v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v37, v39, v42);
  unint64_t v111 = v37;
  uint64_t v66 = v39;
  uint64_t v67 = v92;
  v68 = v91;
  uint64_t v69 = v42;
  uint64_t v70 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v91, v61, v93);
  uint64_t v112 = v68;
  v109[0] = v65;
  v109[1] = v69;
  v109[2] = v70;
  unint64_t v106 = sub_255B5881C();
  uint64_t v103 = v62;
  char v104 = v87;
  uint64_t v105 = MEMORY[0x263F1BA00];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = sub_255A09998(&qword_269F24E48, &qword_269F24E08);
  sub_255AF64A0((uint64_t)&v110, 3uLL, (uint64_t)v109);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v61, v70);
  uint64_t v72 = v81;
  ((void (*)(uint64_t, uint64_t))v81)(v66, v69);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v63 + 8);
  v73(v96, v65);
  v71(v68, v70);
  ((void (*)(char *, uint64_t))v72)(v98, v69);
  return ((uint64_t (*)(char *, uint64_t))v73)(v97, v65);
}

uint64_t sub_255B57194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  unint64_t v50 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E08);
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v49 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v44 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v47 = (char *)&v44 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v46 = (char *)&v44 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v52 = (char *)&v44 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v45 = (char *)&v44 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v53 = (char *)&v44 - v23;
  long long v24 = *(_OWORD *)(a1 + 8);
  long long v66 = *(_OWORD *)(a1 + 24);
  long long v67 = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = a3;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 48) = v26;
  *(void *)(v25 + 64) = *(void *)(a1 + 32);
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = a1;
  swift_unknownObjectRetain();
  sub_255AE1260((uint64_t)&v67);
  sub_255AE1260((uint64_t)&v66);
  sub_255C7FEA8();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a2;
  *(void *)(v27 + 24) = a3;
  long long v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 48) = v28;
  *(void *)(v27 + 64) = *(void *)(a1 + 32);
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v62 = a1;
  swift_unknownObjectRetain();
  sub_255AE1260((uint64_t)&v67);
  sub_255AE1260((uint64_t)&v66);
  sub_255C7FEA8();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a2;
  *(void *)(v29 + 24) = a3;
  long long v30 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v29 + 48) = v30;
  *(void *)(v29 + 64) = *(void *)(a1 + 32);
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v59 = a1;
  swift_unknownObjectRetain();
  sub_255AE1260((uint64_t)&v67);
  sub_255AE1260((uint64_t)&v66);
  id v44 = v20;
  sub_255C7FEA8();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a2;
  *(void *)(v31 + 24) = a3;
  long long v32 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v31 + 48) = v32;
  *(void *)(v31 + 64) = *(void *)(a1 + 32);
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v56 = a1;
  swift_unknownObjectRetain();
  sub_255AE1260((uint64_t)&v67);
  sub_255AE1260((uint64_t)&v66);
  uint64_t v33 = v52;
  sub_255C7FEA8();
  int v34 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  uint64_t v35 = v46;
  v34(v46, v53, v7);
  uint64_t v36 = v47;
  uint64_t v37 = v45;
  v34(v47, v45, v7);
  uint64_t v38 = v48;
  v34(v48, v20, v7);
  uint64_t v39 = v49;
  v34(v49, v33, v7);
  uint64_t v40 = v50;
  v34(v50, v35, v7);
  float v41 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269F24E50);
  v34(&v40[v41[12]], v36, v7);
  v34(&v40[v41[16]], v38, v7);
  v34(&v40[v41[20]], v39, v7);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v51 + 8);
  v42(v52, v7);
  v42(v44, v7);
  v42(v37, v7);
  v42(v53, v7);
  v42(v39, v7);
  v42(v38, v7);
  v42(v36, v7);
  return ((uint64_t (*)(char *, uint64_t))v42)(v35, v7);
}

uint64_t sub_255B577C8()
{
  return swift_release();
}

uint64_t sub_255B57838(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_beginAccess();
  char v4 = *(unsigned char *)(v1 + 16);
  swift_retain();
  return sub_255BD0F90((v4 & 1) == 0, v1, KeyPath, v3);
}

uint64_t sub_255B578C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_beginAccess();
  char v4 = *(unsigned char *)(v1 + 17);
  swift_retain();
  return sub_255BD0FD8((v4 & 1) == 0, v1, KeyPath, v3);
}

uint64_t sub_255B57950()
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v0 = (void (*)(uint64_t *, void))sub_255C7DAB8();
  *uint64_t v1 = !*v1;
  v0(&v3, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_255B579F0@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    unint64_t v3 = 0x8000000255C9F5F0;
  }
  else {
    unint64_t v3 = 0x8000000255C9F5D0;
  }
  *(void *)a1 = 0xD000000000000011;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_255B57AB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_beginAccess();
  char v4 = *(unsigned char *)(v1 + 18);
  swift_retain();
  return sub_255BD0FD8((v4 & 1) == 0, v1, KeyPath, v3);
}

uint64_t sub_255B57B38()
{
  uint64_t v1 = (void *)sub_255C805F8();
  id v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v1);

  if (v2)
  {
    sub_255C80F58();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_255A15EF0((uint64_t)&v6, (uint64_t)v8);
  if (v9)
  {
    if (swift_dynamicCast()) {
      return v10;
    }
  }
  else
  {
    sub_255A095A4((uint64_t)v8, &qword_26B297D00);
  }
  char v4 = (void *)sub_255C805F8();
  id v5 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v4);

  if (v5)
  {
    sub_255C80F58();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_255A15EF0((uint64_t)&v6, (uint64_t)v8);
  if (v9)
  {
    if (swift_dynamicCast()) {
      return v10;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_255A095A4((uint64_t)v8, &qword_26B297D00);
    return 0;
  }
}

uint64_t sub_255B57CEC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v5 = (char *)&v7 - v4;
  swift_getAssociatedConformanceWitness();
  sub_255A20F54(a1);
  sub_255A20F54(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
}

uint64_t sub_255B57E24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_retain();

  return sub_255BD0FD8(0, v1, KeyPath, v3);
}

double sub_255B57E94@<D0>(uint64_t a1@<X8>)
{
  double result = 9.79706241e165;
  *(_OWORD *)a1 = xmmword_255C90340;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_255B57EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7FD88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7FD78();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B4B8], v2);
  uint64_t v6 = sub_255C7FDB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LOBYTE(v2) = sub_255C7F198();
  uint64_t result = sub_255C7DC08();
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_255B58010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B5520C(a1, a2);
}

uint64_t sub_255B5804C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_255B58080()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_255B580B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255B58128()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel5Debug__showRedBackdrop;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F098);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255B581CC()
{
  return _s5DebugCMa();
}

uint64_t _s5DebugCMa()
{
  uint64_t result = qword_26B299A88;
  if (!qword_26B299A88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255B58220()
{
  sub_255AF5D28();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_255B582C0@<X0>(uint64_t *a1@<X8>)
{
  _s5DebugCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255B58300(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  swift_retain();

  return sub_255BD0FD8(v2, v3, KeyPath, v5);
}

uint64_t sub_255B58370@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_255B583F0()
{
  return sub_255C7DAD8();
}

uint64_t sub_255B58464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  v8(a2, a3);
  swift_retain();
  swift_release();
  _s6BannerCMa();
  sub_255B587B8((unint64_t *)&qword_26B29E940, (void (*)(uint64_t))_s6BannerCMa);
  uint64_t v9 = sub_255C7E2B8();
  uint64_t v11 = v10;
  v8(a2, a3);
  swift_retain();
  swift_release();
  _s5DebugCMa();
  sub_255B587B8((unint64_t *)&qword_26B299A80, (void (*)(uint64_t))_s5DebugCMa);
  uint64_t result = sub_255C7E2B8();
  *a4 = a1;
  a4[1] = v9;
  a4[2] = v11;
  a4[3] = result;
  a4[4] = v13;
  return result;
}

uint64_t sub_255B585C8()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_255B5860C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255B58664(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_255B586EC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_release();
  return a1;
}

uint64_t _s9DebugViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B5875C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B587A0@<X0>(uint64_t a1@<X8>)
{
  return sub_255B55768(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255B587AC@<X0>(uint64_t a1@<X8>)
{
  return sub_255B56490(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255B587B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B58800@<X0>(char *a1@<X8>)
{
  return sub_255B57194(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255B58810()
{
  return sub_255B57E24(v0 + 32);
}

unint64_t sub_255B5881C()
{
  unint64_t result = qword_269F24E40;
  if (!qword_269F24E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E00);
    sub_255A09998(&qword_269F24E38, &qword_269F24E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24E40);
  }
  return result;
}

uint64_t sub_255B588C8()
{
  return sub_255B57CEC(*(void *)(v0 + 32));
}

uint64_t sub_255B588E0()
{
  return sub_255B577C8();
}

uint64_t sub_255B588EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = 0x6E614220776F6853;
  if (*(unsigned char *)(v3 + 16)) {
    uint64_t v5 = 0x6E61422065646948;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = 0xEB0000000072656ELL;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_255B58980()
{
  return sub_255B578C8(v0 + 32);
}

uint64_t sub_255B5898C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 32);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v3 + 17)) {
    unint64_t v5 = 0x8000000255C9F630;
  }
  else {
    unint64_t v5 = 0x8000000255C9F610;
  }
  *(void *)a1 = 0xD000000000000013;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_255B58A1C()
{
  return sub_255B57950();
}

uint64_t sub_255B58A28@<X0>(uint64_t a1@<X8>)
{
  return sub_255B579F0(a1);
}

uint64_t sub_255B58A38()
{
  return sub_255B57AB0(v0 + 32);
}

uint64_t sub_255B58A44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 32);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v3 + 18)) {
    unint64_t v5 = 0x8000000255C9F5B0;
  }
  else {
    unint64_t v5 = 0x8000000255C9F590;
  }
  *(void *)a1 = 0xD000000000000014;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_255B58AD0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 18);
  return result;
}

uint64_t sub_255B58B18(char *a1, uint64_t *a2)
{
  return sub_255B58300(a1, a2);
}

uint64_t sub_255B58B40@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_255B58B88(char *a1, uint64_t *a2)
{
  return sub_255B58300(a1, a2);
}

uint64_t sub_255B58BB0()
{
  return sub_255B57838(*(void *)(v0 + 32));
}

uint64_t sub_255B58BD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B58E18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  _s18PlayerControlsViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  _s17VolumeControlViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v4 = sub_255C7FF98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v16[-v9];
  long long v11 = *(_OWORD *)(v1 + 80);
  void v20[4] = *(_OWORD *)(v1 + 64);
  v20[5] = v11;
  v20[6] = *(_OWORD *)(v1 + 96);
  char v21 = *(unsigned char *)(v1 + 112);
  long long v12 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v12;
  long long v13 = *(_OWORD *)(v1 + 48);
  v20[2] = *(_OWORD *)(v1 + 32);
  v20[3] = v13;
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  uint64_t v19 = v20;
  sub_255C7EA58();
  sub_255C7FF88();
  swift_getWitnessTable();
  sub_255A20F54(v8);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  sub_255A20F54(v10);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v10, v4);
}

uint64_t sub_255B5909C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a4;
  uint64_t v47 = _s17VolumeControlViewVMa();
  uint64_t v51 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v44 = (uint64_t)&v39 - v7;
  uint64_t v49 = sub_255C7E458();
  *(void *)&long long v53 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  unint64_t v46 = (char *)&v39 - v8;
  uint64_t v50 = sub_255C7E458();
  uint64_t v52 = *(void *)(v50 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v45 = (char *)&v39 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v48 = (char *)&v39 - v13;
  sub_255C23448(*(void *)(a1 + 80));
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  v14(a2, a3);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  uint64_t v40 = a2;
  *(void *)&long long v59 = sub_255A7FCB0();
  *((void *)&v59 + 1) = v15;
  *(void *)&long long v60 = v16;
  *((void *)&v60 + 1) = v17;
  sub_255C7F1B8();
  long long v18 = *(_OWORD *)(a1 + 48);
  v82[2] = *(_OWORD *)(a1 + 32);
  v83[0] = v18;
  *(_OWORD *)((char *)v83 + 10) = *(_OWORD *)(a1 + 58);
  long long v19 = *(_OWORD *)(a1 + 16);
  v82[0] = *(_OWORD *)a1;
  v82[1] = v19;
  uint64_t v43 = sub_255A1CFDC;
  sub_255B5A588((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v68);
  uint64_t v42 = sub_255A1D054;
  sub_255B5A588((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v75 = v68;
  LOBYTE(v76) = v69;
  *(_WORD *)((char *)&v76 + 1) = *(_WORD *)((char *)&v69 + 1);
  *((void *)&v76 + 1) = *((void *)&v69 + 1);
  char v77 = v70;
  long long v78 = v71;
  long long v79 = v72;
  char v80 = v73;
  sub_255B59890();
  _s18PlayerControlsViewVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  swift_release();
  swift_unknownObjectRelease();
  long long v59 = v75;
  long long v41 = v76;
  long long v60 = v76;
  char v61 = v77;
  long long v62 = v78;
  long long v63 = v79;
  char v64 = v80;
  sub_255A1D474((uint64_t)v82, (uint64_t)v84);
  sub_255C7E458();
  uint64_t v66 = WitnessTable;
  uint64_t v67 = MEMORY[0x263F18C10];
  uint64_t v21 = swift_getWitnessTable();
  sub_255C7FA68();
  swift_release();
  swift_unknownObjectRelease();
  long long v59 = v68;
  long long v39 = v69;
  long long v60 = v69;
  char v61 = v70;
  long long v62 = v71;
  long long v63 = v72;
  char v64 = v73;
  long long v65 = v74;
  uint64_t v22 = sub_255C7E458();
  uint64_t v23 = MEMORY[0x263F189A8];
  v58[6] = v21;
  v58[7] = MEMORY[0x263F189A8];
  *(void *)&long long v41 = swift_getWitnessTable();
  sub_255A20F54(&v59);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v24 = v44;
  sub_255A91BF8(v44);
  sub_255C7F1B8();
  sub_255B5A588((uint64_t)v84, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))v43);
  sub_255AB99F4((uint64_t)&v68);
  sub_255B5A588((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))v42);
  long long v59 = v68;
  LOBYTE(v60) = v69;
  *(_WORD *)((char *)&v60 + 1) = *(_WORD *)((char *)&v69 + 1);
  *((void *)&v60 + 1) = *((void *)&v69 + 1);
  char v61 = v70;
  long long v62 = v71;
  long long v63 = v72;
  char v64 = v73;
  sub_255B59CB0();
  uint64_t v25 = v47;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v46;
  sub_255C7FAF8();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v24, v25);
  v58[4] = v26;
  v58[5] = MEMORY[0x263F18C10];
  uint64_t v28 = v49;
  uint64_t v29 = swift_getWitnessTable();
  long long v30 = v45;
  sub_255C7FA68();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v28);
  v58[2] = v29;
  v58[3] = v23;
  uint64_t v31 = v50;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v48;
  int v34 = v30;
  sub_255A20F54(v30);
  uint64_t v35 = v52;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v52 + 8);
  v36(v34, v31);
  long long v68 = v75;
  long long v53 = v76;
  long long v69 = v76;
  char v70 = v77;
  long long v71 = v78;
  long long v72 = v79;
  char v73 = v80;
  long long v74 = v81;
  *(void *)&long long v59 = &v68;
  uint64_t v37 = v54;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v54, v33, v31);
  *((void *)&v59 + 1) = v37;
  swift_unknownObjectRetain();
  swift_retain();
  v58[0] = v22;
  v58[1] = v31;
  uint64_t v56 = v41;
  uint64_t v57 = v32;
  sub_255AF64A0((uint64_t)&v59, 2uLL, (uint64_t)v58);
  v36(v33, v31);
  swift_release();
  swift_unknownObjectRelease();
  v36(v37, v31);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_255B59890()
{
  int v1 = *(unsigned __int8 *)(v0 + 17);
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
      switch(*(unsigned char *)(v0 + 17))
      {
        case 1:
        case 3:
        case 4:
        case 5:
          goto LABEL_9;
        default:
          return;
      }
    case 2:
      if (*(unsigned char *)(v0 + 17)) {
        BOOL v2 = v1 == 5;
      }
      else {
        BOOL v2 = 1;
      }
      if (!v2 && v1 == 6)
      {
LABEL_9:
        id v3 = objc_msgSend(self, sel_currentTraitCollection);
        objc_msgSend(v3, sel_displayScale);
      }
      break;
    case 3:
      return;
    default:
      switch(*(unsigned char *)(v0 + 17))
      {
        case 1:
          goto LABEL_9;
        default:
          return;
      }
  }
}

void sub_255B59CB0()
{
  int v1 = *(unsigned __int8 *)(v0 + 17);
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
      if (*(unsigned char *)(v0 + 17)) {
        goto LABEL_13;
      }
      break;
    case 2:
      if (v1 != 2 && v1 != 6 && v1 != 4) {
        goto LABEL_13;
      }
      break;
    case 3:
      return;
    default:
      if (v1 != 3)
      {
LABEL_13:
        id v2 = objc_msgSend(self, sel_currentTraitCollection);
        objc_msgSend(v2, sel_displayScale);
      }
      break;
  }
}

double sub_255B59F30@<D0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_255C7E628();
  uint64_t v5 = v4;
  _s17TransportControlsCMa();
  sub_255B5A074();
  uint64_t v6 = sub_255C7E628();
  *(void *)a1 = KeyPath;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_WORD *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v3;
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 112) = 1;
  return result;
}

uint64_t sub_255B59FD4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_WORD *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = sub_255C7E628();
  *(void *)(a2 + 88) = v4;
  _s17TransportControlsCMa();
  sub_255B5A074();
  uint64_t result = sub_255C7E628();
  *(void *)(a2 + 96) = result;
  *(void *)(a2 + 104) = v6;
  *(unsigned char *)(a2 + 112) = a1;
  return result;
}

unint64_t sub_255B5A074()
{
  unint64_t result = qword_26B299800;
  if (!qword_26B299800)
  {
    _s17TransportControlsCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299800);
  }
  return result;
}

uint64_t sub_255B5A0CC(uint64_t a1)
{
  sub_255A1D054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72), *(unsigned char *)(a1 + 73));
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_255B5A13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 64);
  char v16 = *(unsigned char *)(a2 + 72);
  char v17 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16, v17);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v15;
  *(unsigned char *)(a1 + 72) = v16;
  *(unsigned char *)(a1 + 73) = v17;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_255B5A22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 72);
  char v26 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 73);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  *(unsigned char *)(a1 + 72) = v25;
  *(unsigned char *)(a1 + 73) = v26;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_255B5A398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  char v6 = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 73);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 73) = v6;
  sub_255A1D054(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  uint64_t v20 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v20;
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t sub_255B5A44C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255B5A4A8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 113) = 0;
    }
    if (a2) {
      *(void *)(result + 80) = a2;
    }
  }
  return result;
}

uint64_t _s12ControlsViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B5A534()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B5A57C@<X0>(uint64_t a1@<X8>)
{
  return sub_255B5909C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255B5A588(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, _WORD))
{
  return a1;
}

uint64_t sub_255B5A5E8()
{
  _s18PlayerControlsViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  _s17VolumeControlViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();

  return swift_getWitnessTable();
}

uint64_t destroy for GradientBottomMask(uint64_t a1)
{
  sub_255A1D054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72), *(unsigned char *)(a1 + 73));

  return swift_release();
}

uint64_t initializeWithCopy for GradientBottomMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  char v15 = *(unsigned char *)(a2 + 72);
  char v16 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = v15;
  *(unsigned char *)(a1 + 73) = v16;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GradientBottomMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 72);
  char v26 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 73);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  *(unsigned char *)(a1 + 72) = v25;
  *(unsigned char *)(a1 + 73) = v26;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for GradientBottomMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  char v6 = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 73);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 73) = v6;
  sub_255A1D054(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientBottomMask(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientBottomMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2) {
      *(void *)(result + 80) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientBottomMask()
{
  return &type metadata for GradientBottomMask;
}

uint64_t *sub_255B5AAD4(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_255C7EA18();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B5ABE0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_255C7EA18();
    unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255B5AC84(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B5AD40(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_255B5AE14(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_255B5AED8(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, (uint64_t *)&unk_26B298500);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B5AFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B5AFC8);
}

uint64_t sub_255B5AFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_255B5B038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B5B04C);
}

uint64_t sub_255B5B04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NowPlayingContrastSensitiveBackdrop()
{
  uint64_t result = qword_269F24E58;
  if (!qword_269F24E58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255B5B10C()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255B5B198()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B5B1B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v3 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v81 - v7;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E68);
  MEMORY[0x270FA5388](v81);
  uint64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F10);
  MEMORY[0x270FA5388](v82);
  uint64_t v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F18);
  MEMORY[0x270FA5388](v83);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F20);
  MEMORY[0x270FA5388](v84);
  uint64_t v87 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F28);
  MEMORY[0x270FA5388](v85);
  uint64_t v88 = (uint64_t)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F30);
  MEMORY[0x270FA5388](v86);
  uint64_t v93 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F38);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24F40);
  MEMORY[0x270FA5388](v89);
  uint64_t v90 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F20028 != -1) {
    swift_once();
  }
  double v20 = *(double *)&qword_269F331B8;
  sub_255C7E0C8();
  double v22 = v21;
  long long v23 = *(_OWORD *)(a1 + 48);
  v115[2] = *(_OWORD *)(a1 + 32);
  v116[0] = v23;
  *(_OWORD *)((char *)v116 + 10) = *(_OWORD *)(a1 + 58);
  long long v24 = *(_OWORD *)(a1 + 16);
  v115[0] = *(_OWORD *)a1;
  v115[1] = v24;
  sub_255A10514((uint64_t)v115, (uint64_t)v117, &qword_26B29B558);
  sub_255A1D4DC((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v104);
  sub_255A1D4DC((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v96 = v104;
  char v97 = v105;
  __int16 v98 = v106;
  uint64_t v99 = v107;
  char v100 = v108;
  long long v101 = v109;
  long long v102 = v110;
  char v103 = v111;
  double v25 = sub_255BE6070((uint64_t)&v96);
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  sub_255B30FAC((uint64_t)v6, (uint64_t)v8);
  uint64_t v26 = sub_255C801F8();
  uint64_t v28 = *(void *)(a1 + 80);
  if (!v28)
  {
    _s5DebugCMa();
    long long v79 = (unint64_t *)&qword_26B299A80;
    char v80 = _s5DebugCMa;
LABEL_18:
    sub_255B5D5F0(v79, (void (*)(uint64_t))v80);
    uint64_t result = sub_255C7E618();
    __break(1u);
    return result;
  }
  uint64_t v29 = v26;
  uint64_t v30 = v27;
  double v31 = v20 + v22 + v25 + 4.0 - v20;
  swift_beginAccess();
  uint64_t v32 = 0;
  if (*(unsigned char *)(v28 + 17)) {
    uint64_t v32 = sub_255C7FC58();
  }
  sub_255B5CAE8((uint64_t)v8, (uint64_t)v10);
  uint64_t v33 = (uint64_t *)&v10[*(int *)(v81 + 36)];
  uint64_t *v33 = v32;
  v33[1] = v29;
  v33[2] = v30;
  sub_255B5CB4C((uint64_t)v8);
  sub_255C801D8();
  sub_255C7DFE8();
  sub_255A09540((uint64_t)v10, (uint64_t)v12, &qword_269F24E68);
  int v34 = &v12[*(int *)(v82 + 36)];
  long long v35 = v113;
  *(_OWORD *)int v34 = v112;
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v114;
  sub_255A095A4((uint64_t)v10, &qword_269F24E68);
  uint64_t v36 = sub_255C801D8();
  uint64_t v38 = v37;
  sub_255C80358();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_255C80368();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_255A09540((uint64_t)v12, (uint64_t)v14, &qword_269F24F10);
  uint64_t v47 = &v14[*(int *)(v83 + 36)];
  *(void *)uint64_t v47 = v36;
  *((void *)v47 + 1) = v38;
  *((double *)v47 + 2) = v31;
  *((double *)v47 + 3) = v20;
  *((void *)v47 + 4) = v40;
  *((void *)v47 + 5) = v42;
  *((void *)v47 + 6) = v44;
  *((void *)v47 + 7) = v46;
  sub_255A095A4((uint64_t)v12, &qword_269F24F10);
  LOBYTE(v38) = sub_255C7F1C8();
  sub_255A1D4DC((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v104);
  sub_255A1D4DC((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v96 = v104;
  char v97 = v105;
  __int16 v98 = v106;
  uint64_t v99 = v107;
  char v100 = v108;
  long long v101 = v109;
  long long v102 = v110;
  char v103 = v111;
  sub_255B5BB84();
  sub_255C7DC08();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v56 = v87;
  sub_255A09540((uint64_t)v14, v87, &qword_269F24F18);
  uint64_t v57 = v56 + *(int *)(v84 + 36);
  *(unsigned char *)uint64_t v57 = v38;
  *(void *)(v57 + 8) = v49;
  *(void *)(v57 + 16) = v51;
  *(void *)(v57 + 24) = v53;
  *(void *)(v57 + 32) = v55;
  *(unsigned char *)(v57 + 40) = 0;
  sub_255A095A4((uint64_t)v14, &qword_269F24F18);
  char v58 = sub_255C7F1E8();
  sub_255A1D4DC((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v104);
  sub_255A1D4DC((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v96 = v104;
  char v97 = v105;
  if (HIBYTE(v106))
  {
    __int16 v98 = v106;
    uint64_t v99 = v107;
    char v100 = v108;
    long long v101 = v109;
    long long v102 = v110;
    char v103 = v111;
    sub_255BE5ABC((uint64_t)v95);
  }
  else
  {
    __int16 v98 = v106;
    uint64_t v99 = v107;
    char v100 = v108;
    long long v101 = v109;
    long long v102 = v110;
    char v103 = v111;
    sub_255BE59C0((uint64_t)v95);
  }
  uint64_t v59 = (uint64_t)v93;
  if (qword_269F20310 != -1) {
    swift_once();
  }
  sub_255C7DC08();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v68 = v88;
  sub_255A09540(v56, v88, &qword_269F24F20);
  uint64_t v69 = v68 + *(int *)(v85 + 36);
  *(unsigned char *)uint64_t v69 = v58;
  *(void *)(v69 + 8) = v61;
  *(void *)(v69 + 16) = v63;
  *(void *)(v69 + 24) = v65;
  *(void *)(v69 + 32) = v67;
  *(unsigned char *)(v69 + 40) = 0;
  sub_255A095A4(v56, &qword_269F24F20);
  uint64_t v70 = sub_255C7E468();
  char v71 = sub_255C7F198();
  sub_255A09540(v68, v59, &qword_269F24F28);
  uint64_t v72 = v59 + *(int *)(v86 + 36);
  *(void *)uint64_t v72 = v70;
  *(unsigned char *)(v72 + 8) = v71;
  sub_255A095A4(v68, &qword_269F24F28);
  uint64_t v73 = *(void *)(a1 + 96);
  if (!v73)
  {
    _s5QueueCMa();
    long long v79 = &qword_26B299BC8;
    char v80 = _s5QueueCMa;
    goto LABEL_18;
  }
  swift_beginAccess();
  if (*(unsigned char *)(v73 + 16)) {
    double v74 = 1.0;
  }
  else {
    double v74 = 0.0;
  }
  uint64_t v75 = v92;
  sub_255A09540(v59, v92, &qword_269F24F30);
  *(double *)(v75 + *(int *)(v91 + 36)) = v74;
  sub_255A095A4(v59, &qword_269F24F30);
  uint64_t v76 = v90;
  sub_255A09540(v75, v90, &qword_269F24F38);
  char v77 = (uint64_t (**)())(v76 + *(int *)(v89 + 36));
  void *v77 = sub_255B5BD5C;
  v77[1] = 0;
  sub_255A095A4(v75, &qword_269F24F38);
  return sub_255A10514(v76, v94, &qword_269F24F40);
}

void sub_255B5BB84()
{
  if (!*(unsigned char *)(v0 + 18))
  {
    sub_255BE59C0((uint64_t)v1);
    goto LABEL_7;
  }
  if (*(unsigned char *)(v0 + 18) != 2)
  {
    sub_255BE5ABC((uint64_t)v1);
LABEL_7:
    if (qword_269F20310 == -1) {
      return;
    }
    goto LABEL_8;
  }
  sub_255BE5ABC((uint64_t)v1);
  sub_255B9F314();
  if (qword_269F20038 != -1) {
LABEL_8:
  }
    swift_once();
}

uint64_t sub_255B5BD5C()
{
  return sub_255C7DE28();
}

uint64_t sub_255B5BD84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E958();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v19 - v8;
  long long v10 = v1[5];
  v19[4] = v1[4];
  v19[5] = v10;
  v19[6] = v1[6];
  long long v11 = v1[1];
  v19[0] = *v1;
  v19[1] = v11;
  long long v12 = v1[3];
  v19[2] = v1[2];
  v19[3] = v12;
  uint64_t v13 = (_OWORD *)swift_allocObject();
  long long v14 = v1[5];
  v13[5] = v1[4];
  v13[6] = v14;
  v13[7] = v1[6];
  long long v15 = v1[1];
  v13[1] = *v1;
  v13[2] = v15;
  long long v16 = v1[3];
  v13[3] = v1[2];
  v13[4] = v16;
  sub_255B5D578((uint64_t)v19);
  sub_255C7E948();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_255B5D5F0(&qword_269F24AE8, MEMORY[0x263F197F0]);
  uint64_t v17 = sub_255C7E088();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  *(void *)a1 = sub_255B5D570;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = 0x408F400000000000;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_255B5BF68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v68 - v7;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E68);
  MEMORY[0x270FA5388](v69);
  long long v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E70);
  MEMORY[0x270FA5388](v70);
  long long v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E78);
  MEMORY[0x270FA5388](v71);
  long long v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E80);
  MEMORY[0x270FA5388](v72);
  uint64_t v77 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E88);
  MEMORY[0x270FA5388](v74);
  uint64_t v76 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24E90);
  MEMORY[0x270FA5388](v75);
  uint64_t v73 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *(_OWORD *)(v1 + 48);
  v99[2] = *(_OWORD *)(v1 + 32);
  v100[0] = v18;
  *(_OWORD *)((char *)v100 + 10) = *(_OWORD *)(v1 + 58);
  long long v19 = *(_OWORD *)(v1 + 16);
  v99[0] = *(_OWORD *)v1;
  v99[1] = v19;
  uint64_t v20 = *(void *)(v1 + 80);
  uint64_t v68 = *(void *)(v1 + 88);
  if (qword_269F20030 != -1) {
    swift_once();
  }
  uint64_t v78 = a1;
  uint64_t v21 = qword_269F331C0;
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  sub_255B30FAC((uint64_t)v6, (uint64_t)v8);
  uint64_t v22 = sub_255C801F8();
  if (v20)
  {
    uint64_t v24 = v22;
    uint64_t v25 = v23;
    swift_beginAccess();
    uint64_t v26 = 0;
    if (*(unsigned char *)(v20 + 17)) {
      uint64_t v26 = sub_255C7FC58();
    }
    sub_255B5CAE8((uint64_t)v8, (uint64_t)v10);
    uint64_t v27 = (uint64_t *)&v10[*(int *)(v69 + 36)];
    *uint64_t v27 = v26;
    v27[1] = v24;
    v27[2] = v25;
    sub_255B5CB4C((uint64_t)v8);
    uint64_t v28 = sub_255C801D8();
    uint64_t v30 = v29;
    sub_255C80368();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    sub_255C80358();
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    sub_255A09540((uint64_t)v10, (uint64_t)v12, &qword_269F24E68);
    uint64_t v39 = (uint64_t *)&v12[*(int *)(v70 + 36)];
    *uint64_t v39 = v28;
    v39[1] = v30;
    v39[2] = 0;
    v39[3] = v21;
    v39[4] = v32;
    v39[5] = v34;
    v39[6] = v36;
    v39[7] = v38;
    sub_255A095A4((uint64_t)v10, &qword_269F24E68);
    sub_255C801F8();
    sub_255C7DFE8();
    sub_255A09540((uint64_t)v12, (uint64_t)v14, &qword_269F24E70);
    uint64_t v40 = &v14[*(int *)(v71 + 36)];
    long long v41 = v97;
    *(_OWORD *)uint64_t v40 = v96;
    *((_OWORD *)v40 + 1) = v41;
    *((_OWORD *)v40 + 2) = v98;
    sub_255A095A4((uint64_t)v12, &qword_269F24E70);
    LOBYTE(v30) = sub_255C7F1C8();
    sub_255A10514((uint64_t)v99, (uint64_t)v101, &qword_26B29B558);
    sub_255A1D4DC((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v88);
    sub_255A1D4DC((uint64_t)v99, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    long long v80 = v88;
    char v81 = v89;
    __int16 v82 = v90;
    uint64_t v83 = v91;
    char v84 = v92;
    long long v85 = v93;
    long long v86 = v94;
    char v87 = v95;
    sub_255B5C6F4();
    sub_255C7DC08();
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v50 = v77;
    sub_255A09540((uint64_t)v14, v77, &qword_269F24E78);
    uint64_t v51 = v50 + *(int *)(v72 + 36);
    *(unsigned char *)uint64_t v51 = v30;
    *(void *)(v51 + 8) = v43;
    *(void *)(v51 + 16) = v45;
    *(void *)(v51 + 24) = v47;
    *(void *)(v51 + 32) = v49;
    *(unsigned char *)(v51 + 40) = 0;
    sub_255A095A4((uint64_t)v14, &qword_269F24E78);
    char v52 = sub_255C7F1E8();
    sub_255A1D4DC((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v88);
    sub_255A1D4DC((uint64_t)v99, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    if (HIBYTE(v90) == 2)
    {
      uint64_t v53 = v78;
      uint64_t v55 = v75;
      uint64_t v54 = (uint64_t)v76;
      uint64_t v57 = (uint64_t)v73;
      uint64_t v56 = v74;
    }
    else
    {
      uint64_t v53 = v78;
      uint64_t v55 = v75;
      uint64_t v54 = (uint64_t)v76;
      uint64_t v57 = (uint64_t)v73;
      uint64_t v56 = v74;
      long long v80 = v88;
      char v81 = v89;
      LOBYTE(v82) = v90;
      if (HIBYTE(v90))
      {
        HIBYTE(v82) = HIBYTE(v90);
        uint64_t v83 = v91;
        char v84 = v92;
        long long v85 = v93;
        long long v86 = v94;
        char v87 = v95;
        sub_255BE5ABC((uint64_t)v79);
      }
      else
      {
        HIBYTE(v82) = 0;
        uint64_t v83 = v91;
        char v84 = v92;
        long long v85 = v93;
        long long v86 = v94;
        char v87 = v95;
        sub_255BE59C0((uint64_t)v79);
      }
      if (qword_269F20310 != -1) {
        swift_once();
      }
    }
    sub_255C7DC08();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    sub_255A09540(v50, v54, &qword_269F24E80);
    uint64_t v66 = v54 + *(int *)(v56 + 36);
    *(unsigned char *)uint64_t v66 = v52;
    *(void *)(v66 + 8) = v59;
    *(void *)(v66 + 16) = v61;
    *(void *)(v66 + 24) = v63;
    *(void *)(v66 + 32) = v65;
    *(unsigned char *)(v66 + 40) = 0;
    sub_255A095A4(v50, &qword_269F24E80);
    sub_255A09540(v54, v57, &qword_269F24E88);
    *(unsigned char *)(v57 + *(int *)(v55 + 36)) = 0;
    sub_255A095A4(v54, &qword_269F24E88);
    return sub_255A10514(v57, v53, &qword_269F24E90);
  }
  else
  {
    _s5DebugCMa();
    sub_255B5D5F0((unint64_t *)&qword_26B299A80, (void (*)(uint64_t))_s5DebugCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

double sub_255B5C6F4()
{
  double v1 = 0.0;
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
      sub_255BE5ABC((uint64_t)v3);
      double v1 = v4;
      sub_255BE5ABC((uint64_t)v3);
      break;
    case 2:
      double v1 = 16.0;
      break;
    case 3:
      break;
    default:
      sub_255BE59C0((uint64_t)v3);
      double v1 = v4;
      break;
  }
  if (qword_269F20310 != -1) {
    swift_once();
  }
  return v1 - *(double *)&qword_269F33460;
}

uint64_t sub_255B5C894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7EA18();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  sub_255ABA66C((uint64_t)&v22 - v7);
  uint64_t v9 = *MEMORY[0x263F19968];
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v25(v6, v9, v2);
  char v10 = sub_255C7DCB8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v6, v2);
  v11(v8, v2);
  long long v12 = self;
  uint64_t v13 = &selRef_clearColor;
  if ((v10 & 1) == 0) {
    uint64_t v13 = &selRef_systemBackgroundColor;
  }
  uint64_t v14 = MEMORY[0x25A295490]([v12 *v13]);
  uint64_t v15 = sub_255C801F8();
  uint64_t v23 = v16;
  uint64_t v24 = v15;
  sub_255ABA66C((uint64_t)v8);
  v25(v6, v9, v2);
  char v17 = sub_255C7DCB8();
  v11(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
  unint64_t v19 = 0xD00000000000001ELL;
  if ((v17 & 1) == 0) {
    unint64_t v19 = 0;
  }
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v19;
  unint64_t v20 = 0x8000000255C9F650;
  if ((v17 & 1) == 0) {
    unint64_t v20 = 0;
  }
  *(void *)(a1 + 16) = v20;
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v21 = v23;
  *(void *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v21;
  return result;
}

uint64_t sub_255B5CAC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B5CAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B5CB4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_255B5CBA8@<D0>(uint64_t a1@<X8>)
{
  sub_255C7E0D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21690);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_255C855F0;
  sub_255C7FC68();
  *(void *)(v2 + 32) = sub_255C80148();
  *(void *)(v2 + 40) = v3;
  sub_255C7FC78();
  *(void *)(v2 + 48) = sub_255C80148();
  *(void *)(v2 + 56) = v4;
  MEMORY[0x25A2959D0](v2);
  sub_255C7E2A8();
  double result = *(double *)&v6;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = v8;
  return result;
}

__n128 sub_255B5CC90@<Q0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(v3 + 48) = result;
  *a1 = sub_255B5D648;
  a1[1] = (double (*)@<D0>(uint64_t@<X8>))v3;
  return result;
}

uint64_t destroy for GradientTopMask(uint64_t a1)
{
  sub_255A1D054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72), *(unsigned char *)(a1 + 73));
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GradientTopMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 64);
  char v16 = *(unsigned char *)(a2 + 72);
  char v17 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16, v17);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v15;
  *(unsigned char *)(a1 + 72) = v16;
  *(unsigned char *)(a1 + 73) = v17;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GradientTopMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 72);
  char v26 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 73);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  *(unsigned char *)(a1 + 72) = v25;
  *(unsigned char *)(a1 + 73) = v26;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for GradientTopMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  char v6 = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 73);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 73) = v6;
  sub_255A1D054(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  uint64_t v20 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v20;
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientTopMask(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientTopMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 80) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientTopMask()
{
  return &type metadata for GradientTopMask;
}

uint64_t getEnumTagSinglePayload for GradientView(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GradientView(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GradientView()
{
  return &type metadata for GradientView;
}

uint64_t sub_255B5D168()
{
  return sub_255B5D68C(&qword_269F24E98, &qword_269F24E90, (void (*)(void))sub_255B5D1A4);
}

uint64_t sub_255B5D1A4()
{
  return sub_255B5D234(&qword_269F24EA0, &qword_269F24E88, (void (*)(void))sub_255B5D1D4);
}

uint64_t sub_255B5D1D4()
{
  return sub_255B5D234(&qword_269F24EA8, &qword_269F24E80, (void (*)(void))sub_255B5D204);
}

uint64_t sub_255B5D204()
{
  return sub_255B5D234(&qword_269F24EB0, &qword_269F24E78, (void (*)(void))sub_255B5D2B0);
}

uint64_t sub_255B5D234(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B5D2B0()
{
  unint64_t result = qword_269F24EB8;
  if (!qword_269F24EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E70);
    sub_255B5D350();
    sub_255A09998(&qword_269F24EE0, &qword_269F24EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24EB8);
  }
  return result;
}

unint64_t sub_255B5D350()
{
  unint64_t result = qword_269F24EC0;
  if (!qword_269F24EC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24E68);
    sub_255B5D5F0(&qword_269F24EC8, (void (*)(uint64_t))type metadata accessor for NowPlayingContrastSensitiveBackdrop);
    sub_255A09998(&qword_269F24ED0, &qword_269F24ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24EC0);
  }
  return result;
}

unint64_t sub_255B5D424()
{
  unint64_t result = qword_269F24EF0;
  if (!qword_269F24EF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24EF8);
    sub_255A09998(&qword_269F24F00, &qword_269F24F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24EF0);
  }
  return result;
}

uint64_t sub_255B5D4C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B5D4E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B5D4FC()
{
  sub_255A1D054(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88), *(unsigned char *)(v0 + 89));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B5D570@<X0>(uint64_t a1@<X8>)
{
  return sub_255B5B1B4(v1 + 16, a1);
}

uint64_t sub_255B5D578(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B5D5F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B5D638()
{
  return swift_deallocObject();
}

double sub_255B5D648@<D0>(uint64_t a1@<X8>)
{
  return sub_255B5CBA8(a1);
}

uint64_t sub_255B5D650()
{
  return sub_255B5D68C(&qword_269F24F48, &qword_269F24F50, (void (*)(void))sub_255B5D70C);
}

uint64_t sub_255B5D68C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_255A101A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B5D70C()
{
  unint64_t result = qword_269F24F58;
  if (!qword_269F24F58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24F60);
    sub_255B5D7AC();
    sub_255A09998(&qword_26B29BA80, &qword_26B29BA88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24F58);
  }
  return result;
}

unint64_t sub_255B5D7AC()
{
  unint64_t result = qword_269F24F68;
  if (!qword_269F24F68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24F70);
    sub_255A09998(&qword_269F24F78, &qword_269F24F80);
    sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24F68);
  }
  return result;
}

uint64_t sub_255B5D870()
{
  return sub_255A09998(&qword_269F24F88, &qword_269F24F90);
}

void sub_255B5D8AC()
{
  uint64_t v0 = (void *)sub_255C805F8();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleWithIdentifier_, v0);

  if (!v2) {
    id v2 = objc_msgSend(v1, sel_mainBundle);
  }
  qword_26B2AA660 = (uint64_t)v2;
}

MediaCoreUI::NowPlayingButtonID __swiftcall NowPlayingButtonID.init(_:)(MediaCoreUI::NowPlayingButtonID result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t static NowPlayingButtonID.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_255C81428();
  }
}

uint64_t NowPlayingButtonID.geometryID.getter@<X0>(void *a1@<X8>)
{
  sub_255C810E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_255C806E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000255C9EC10;
  return result;
}

void static NowPlayingButtonID.spacer.getter(void *a1@<X8>)
{
  *a1 = 0x726563617073;
  a1[1] = 0xE600000000000000;
}

uint64_t NowPlayingButtonID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t NowPlayingButtonID.hashValue.getter()
{
  return sub_255C815B8();
}

unint64_t sub_255B5DAE4()
{
  unint64_t result = qword_269F24F98;
  if (!qword_269F24F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F24F98);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingButtonID()
{
  return &type metadata for NowPlayingButtonID;
}

uint64_t dispatch thunk of NowPlayingButton.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NowPlayingButton.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_255B5DB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255B5DD78(a1, a2, a3);
}

uint64_t sub_255B5DB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C80988();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_255C80978();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_255A095A4(a1, (uint64_t *)&unk_26B29F0C0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_255C80908();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F229E8);
  return swift_task_create();
}

uint64_t sub_255B5DD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255B5DD78(a1, a2, a3);
}

uint64_t sub_255B5DD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C80988();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_255C80978();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_255A095A4(a1, (uint64_t *)&unk_26B29F0C0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_255C80908();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_255B5DF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for NowPlayingViewModel(0);
  sub_255B61AFC(&qword_26B2981B0, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel);
  *(void *)a3 = sub_255C7E628();
  *(void *)(a3 + 8) = v6;
  uint64_t result = swift_getKeyPath();
  *(void *)(a3 + 16) = result;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = a1;
  *(void *)(a3 + 64) = a2;
  return result;
}

uint64_t sub_255B5DFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(_OWORD *)(a3 + 8) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_WORD *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = swift_getKeyPath();
  *(unsigned char *)(a3 + 88) = 0;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for NowPlayingHostedViewControllerStack() + 40);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v7(v6, a1, a2);
}

uint64_t sub_255B5E07C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298478);
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 24) = MEMORY[0x263F8EE88];
  *(void *)(v1 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 48) = 0;
  uint64_t v10 = (_OWORD *)(v1 + 48);
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0x40000;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(unsigned char *)(v1 + 120) = 0;
  *(void *)(v1 + 16) = a1;
  uint64_t v11 = *(void *)(a1 + 136);
  swift_getKeyPath();
  uint64_t v27 = v11;
  swift_unownedRetain();
  sub_255B61AFC((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  long long v12 = *(_OWORD *)(v11 + 16);
  long long v22 = *(_OWORD *)(v11 + 32);
  long long v23 = v12;
  long long v13 = *(_OWORD *)(v11 + 48);
  long long v20 = *(_OWORD *)(v11 + 64);
  long long v21 = v13;
  uint64_t v14 = *(void *)(v11 + 80);
  char v15 = *(unsigned char *)(v11 + 88);
  swift_beginAccess();
  *uint64_t v10 = v23;
  long long v16 = v21;
  *(_OWORD *)(v2 + 64) = v22;
  *(_OWORD *)(v2 + 80) = v16;
  *(_OWORD *)(v2 + 96) = v20;
  *(void *)(v2 + 112) = v14;
  *(unsigned char *)(v2 + 120) = v15;
  uint64_t v25 = *(void *)(*(void *)(a1 + 136) + 96);
  sub_255A6C3AC();
  swift_retain();
  id v26 = (id)sub_255C80C88();
  uint64_t v17 = sub_255C80C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984D8);
  sub_255A09998(&qword_26B2984D0, &qword_26B2984D8);
  sub_255B61AFC((unint64_t *)&qword_26B29F110, (void (*)(uint64_t))sub_255A6C3AC);
  sub_255C7DB68();
  sub_255A095A4((uint64_t)v6, (uint64_t *)&unk_26B29F010);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_26B298470, (uint64_t *)&unk_26B298478);
  uint64_t v18 = v24;
  sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  swift_release();
  return v2;
}

void sub_255B5E498(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v17 = *a1;
  uint64_t v3 = a1[2];
  uint64_t v2 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v8 = a1[8];
  char v9 = *((unsigned char *)a1 + 72);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    swift_beginAccess();
    *(void *)(v11 + 48) = v17;
    *(void *)(v11 + 56) = v1;
    *(void *)(v11 + 64) = v3;
    *(void *)(v11 + 72) = v2;
    *(void *)(v11 + 80) = v5;
    *(void *)(v11 + 88) = v4;
    *(void *)(v11 + 96) = v6;
    *(void *)(v11 + 104) = v7;
    *(void *)(v11 + 112) = v8;
    *(unsigned char *)(v11 + 120) = v9;
    if ((v3 & 0xFF0000) == 0x40000 || (v16 = v2, (uint64_t v12 = MEMORY[0x25A297D40](v11 + 32)) == 0))
    {
      swift_release();
    }
    else
    {
      uint64_t v15 = *(void *)(v11 + 40);
      long long v13 = (void *)v12;
      uint64_t ObjectType = swift_getObjectType();
      v18[0] = v17;
      v18[1] = v1;
      __int16 v19 = v3 & 0xFF01;
      char v20 = BYTE2(v3);
      uint64_t v21 = v16;
      char v22 = v5 & 1;
      uint64_t v23 = v4;
      uint64_t v24 = v6;
      uint64_t v25 = v7;
      uint64_t v26 = v8;
      char v27 = v9 & 1;
      (*(void (**)(void *, uint64_t))(v15 + 40))(v18, ObjectType);
      swift_release();
    }
  }
}

__n128 sub_255B5E60C@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 112);
  char v5 = *(unsigned char *)(v3 + 120);
  long long v6 = *(_OWORD *)(v3 + 64);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a2 + 16) = v6;
  __n128 result = *(__n128 *)(v3 + 80);
  long long v8 = *(_OWORD *)(v3 + 96);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  *(void *)(a2 + 64) = v4;
  *(unsigned char *)(a2 + 72) = v5;
  return result;
}

void sub_255B5E66C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64);
  char v2 = *(unsigned char *)(a1 + 72);
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v4;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_255B5E718((uint64_t *)v5);
}

__n128 sub_255B5E6BC@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  char v4 = *(unsigned char *)(v1 + 120);
  long long v5 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 80);
  long long v7 = *(_OWORD *)(v1 + 96);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 72) = v4;
  return result;
}

void sub_255B5E718(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  char v10 = *((unsigned char *)a1 + 72);
  swift_beginAccess();
  uint64_t v15 = v4;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v17;
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 72) = v4;
  *(void *)(v1 + 80) = v6;
  uint64_t v16 = v5;
  *(void *)(v1 + 88) = v5;
  *(void *)(v1 + 96) = v7;
  *(void *)(v1 + 104) = v8;
  *(void *)(v1 + 112) = v9;
  *(unsigned char *)(v1 + 120) = v10;
  if ((v3 & 0xFF0000) != 0x40000)
  {
    uint64_t v11 = MEMORY[0x25A297D40](v1 + 32);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v13 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      v18[0] = v2;
      v18[1] = v17;
      __int16 v19 = v3 & 0xFF01;
      char v20 = BYTE2(v3);
      uint64_t v21 = v15;
      char v22 = v6 & 1;
      uint64_t v23 = v16;
      uint64_t v24 = v7;
      uint64_t v25 = v8;
      uint64_t v26 = v9;
      char v27 = v10 & 1;
      (*(void (**)(void *, uint64_t, uint64_t))(v13 + 40))(v18, ObjectType, v13);
    }
  }
}

uint64_t sub_255B5E854@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  swift_unownedRetainStrong();
  uint64_t v4 = *(void *)(v3 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LOBYTE(v3) = *(unsigned char *)(v4 + 58);
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_255B5E8CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_unownedRetainStrong();
  uint64_t v2 = *(void *)(v1 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 58);
  swift_release();
  return v3;
}

uint64_t sub_255B5E934(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985E0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  uint64_t v9 = *(void *)(v8 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LODWORD(v8) = *(unsigned __int8 *)(v9 + 58);
  uint64_t result = swift_release();
  if (v8 != v4)
  {
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_255C7D898();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B2AA4E8);
    swift_retain_n();
    uint64_t v12 = sub_255C7D878();
    os_log_type_t v13 = sub_255C80C08();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 67109120;
      uint64_t v15 = *(void *)(v2 + 16);
      swift_unownedRetainStrong();
      uint64_t v16 = *(void *)(v15 + 96);
      swift_retain();
      swift_release();
      swift_beginAccess();
      LODWORD(v15) = *(unsigned __int8 *)(v16 + 58);
      swift_release();
      swift_release();
      v20[1] = v15;
      sub_255C80F18();
      swift_release();
      _os_log_impl(&dword_255A00000, v12, v13, "HostedContentSession client set controls hidden to %{BOOL}d", v14, 8u);
      MEMORY[0x25A297C00](v14, -1, -1);
    }
    else
    {

      uint64_t v17 = swift_release_n();
    }
    MEMORY[0x270FA5388](v17);
    *(void *)&v20[-4] = v2;
    LOBYTE(v20[-2]) = a1 & 1;
    uint64_t v18 = sub_255C802A8();
    uint64_t v19 = sub_255C7F018();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
    sub_255A7D9C0(v18, 1, (uint64_t)v7, 0);
    sub_255A095A4((uint64_t)v7, &qword_26B2985E0);
    sub_255C7E4A8();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_255B5EC4C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_unownedRetainStrong();
  uint64_t v4 = *(void *)(v3 + 96);
  swift_retain();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  return sub_255BD03B0(a2, v4, KeyPath, v6);
}

void (*sub_255B5ECCC(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  uint64_t v5 = *(void *)(v4 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LOBYTE(v4) = *(unsigned char *)(v5 + 58);
  swift_release();
  *((unsigned char *)v3 + 32) = v4;
  return sub_255B5ED68;
}

void sub_255B5ED68(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  sub_255B5E934(*(unsigned char *)(*(void *)a1 + 32));

  free(v1);
}

uint64_t NowPlayingHostedContentSession.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (void *)MEMORY[0x25A297D40](v0 + 32);
  *(void *)(v6 + 24) = *(void *)(v0 + 40);
  swift_unknownObjectWeakInit();

  sub_255C80958();
  swift_retain();
  uint64_t v8 = sub_255C80948();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8F500];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v6;
  swift_release();
  sub_255B5DD78((uint64_t)v4, (uint64_t)&unk_269F24FA8, (uint64_t)v9);
  swift_release();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  sub_255B50DD8(v1 + 32);
  return v1;
}

uint64_t NowPlayingHostedContentSession.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (void *)MEMORY[0x25A297D40](v0 + 32);
  *(void *)(v6 + 24) = *(void *)(v0 + 40);
  swift_unknownObjectWeakInit();

  sub_255C80958();
  swift_retain();
  uint64_t v8 = sub_255C80948();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8F500];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v6;
  swift_release();
  sub_255B5DD78((uint64_t)v4, (uint64_t)&unk_269F24FB0, (uint64_t)v9);
  swift_release();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  sub_255B50DD8(v1 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_255B5F130@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v5[0] = *(_OWORD *)(v1 + 16);
  v5[1] = v3;
  char v6 = *(unsigned char *)(v1 + 48);
  sub_255B36F3C((uint64_t)v5, (void (*)(void, void, void, void, void))sub_255AB8EBC);
  sub_255ABB854(a1);
  return sub_255B36F3C((uint64_t)v5, (void (*)(void, void, void, void, void))sub_255AB8EB0);
}

uint64_t NowPlayingHostedViewControllerRepresentable.makeUIViewController(context:)(uint64_t a1, uint64_t a2)
{
  return sub_255B60344(a2);
}

void NowPlayingHostedViewControllerRepresentable.updateUIViewController(_:context:)(void *a1)
{
}

uint64_t static NowPlayingHostedViewControllerRepresentable.dismantleUIViewController(_:coordinator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  qword_269F332D0 = 0;

  return swift_release();
}

uint64_t sub_255B5F214@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[3];
  v6[2] = v1[2];
  v7[0] = v3;
  *(_OWORD *)((char *)v7 + 10) = *(_OWORD *)((char *)v1 + 58);
  long long v4 = v1[1];
  v6[0] = *v1;
  v6[1] = v4;
  sub_255A1D4DC((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4(a1);
  return sub_255A1D4DC((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
}

uint64_t sub_255B5F298()
{
  uint64_t v1 = *(void *)(v0 + 80);
  char v2 = *(unsigned char *)(v0 + 88);
  sub_255A0877C(v1, v2);
  uint64_t v3 = sub_255ABBAE0(v1, v2);
  sub_255A087D0(v1, v2);
  return v3;
}

uint64_t sub_255B5F2F0(uint64_t a1, uint64_t a2)
{
  return sub_255B60344(a2);
}

void sub_255B5F2F8(void *a1)
{
}

uint64_t sub_255B5F300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static NowPlayingHostedViewControllerRepresentable.dismantleUIViewController(_:coordinator:)(a1, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_255B5F308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F02710](a1, a2, a3, WitnessTable);
}

uint64_t sub_255B5F384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F026D8](a1, a2, a3, WitnessTable);
}

void sub_255B5F400()
{
}

uint64_t NowPlayingHostedViewControllerStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24FB8);
  uint64_t v3 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB40);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v4 = sub_255C7FF98();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)v18 - v5;
  uint64_t v7 = sub_255C7E458();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = (char *)v18 - v12;
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v21 = v3;
  uint64_t v22 = v14;
  uint64_t v23 = v18[1];
  sub_255C7EA58();
  sub_255C7FF88();
  sub_255C7F1A8();
  sub_255B5F214((uint64_t)&v34);
  long long v26 = v34;
  char v27 = v35;
  __int16 v28 = v36;
  uint64_t v29 = v37;
  char v30 = v38;
  long long v31 = v39;
  long long v32 = v40;
  char v33 = v41;
  sub_255BE6070((uint64_t)&v26);
  if (qword_269F20028 != -1) {
    swift_once();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
  uint64_t v24 = WitnessTable;
  uint64_t v25 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_255A20F54(v11);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  sub_255A20F54(v13);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_255B5F83C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB40);
  uint64_t v3 = sub_255C7E458();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  type metadata accessor for NowPlayingHostedViewControllerStack();
  sub_255B5F214((uint64_t)&v70);
  if (v73 == 2)
  {
    sub_255B61A94((uint64_t)&v51);
    sub_255B617F8((uint64_t)&v51, (uint64_t)&v70);
  }
  else
  {
    uint64_t v34 = sub_255B5F298();
    int v33 = sub_255C7EF68();
    sub_255C80378();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    int v32 = sub_255C7F1C8();
    sub_255B5F214((uint64_t)&v70);
    uint64_t v35 = a1;
    uint64_t v51 = v70;
    unint64_t v52 = v71;
    LOWORD(v53) = v72;
    if (v73)
    {
      BYTE2(v53) = v73;
      uint64_t v54 = v74;
      LOBYTE(v55) = v75;
      uint64_t v56 = v76;
      uint64_t v57 = v77;
      uint64_t v58 = v78;
      uint64_t v59 = v79;
      LOBYTE(v60) = v80;
      sub_255BE5ABC((uint64_t)v40);
    }
    else
    {
      BYTE2(v53) = 0;
      uint64_t v54 = v74;
      LOBYTE(v55) = v75;
      uint64_t v56 = v76;
      uint64_t v57 = v77;
      uint64_t v58 = v78;
      uint64_t v59 = v79;
      LOBYTE(v60) = v80;
      sub_255BE59C0((uint64_t)v40);
    }
    sub_255C7DC08();
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    char v22 = sub_255C7F1E8();
    sub_255B5F214((uint64_t)v40);
    uint64_t v70 = v40[0];
    unint64_t v71 = v40[1];
    __int16 v72 = v41;
    if (v42)
    {
      char v73 = v42;
      uint64_t v74 = v43;
      char v75 = v44;
      uint64_t v76 = v45;
      uint64_t v77 = v46;
      uint64_t v78 = v47;
      uint64_t v79 = v48;
      char v80 = v49;
      sub_255BE5ABC((uint64_t)&v51);
    }
    else
    {
      char v73 = 0;
      uint64_t v74 = v43;
      char v75 = v44;
      uint64_t v76 = v45;
      uint64_t v77 = v46;
      uint64_t v78 = v47;
      uint64_t v79 = v48;
      char v80 = v49;
      sub_255BE59C0((uint64_t)&v51);
    }
    sub_255C7DC08();
    LOBYTE(v50[0]) = 0;
    LOBYTE(v39[0]) = 0;
    uint64_t v51 = 0x49676E6979616C70;
    unint64_t v52 = 0xEB000000006D6574;
    uint64_t v53 = v34;
    LODWORD(v54) = v33;
    uint64_t v55 = v11;
    uint64_t v56 = v13;
    LOBYTE(v57) = 1;
    LOBYTE(v58) = v32;
    uint64_t v59 = v15;
    uint64_t v60 = v17;
    uint64_t v61 = v19;
    uint64_t v62 = v21;
    char v63 = 0;
    char v64 = v22;
    uint64_t v65 = v23;
    uint64_t v66 = v24;
    uint64_t v67 = v25;
    uint64_t v68 = v26;
    char v69 = 0;
    CGSizeMake(&v51, v27);
    sub_255B617F8((uint64_t)&v51, (uint64_t)&v70);
    a1 = v35;
  }
  sub_255C7FAA8();
  uint64_t v28 = sub_255A09998(&qword_26B29EB38, &qword_26B29EB40);
  v50[2] = a1;
  v50[3] = v28;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A20F54(v7);
  char v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v7, v3);
  sub_255B617F8((uint64_t)&v70, (uint64_t)v40);
  v50[0] = v40;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v50[1] = v7;
  v39[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24FB8);
  v39[1] = v3;
  unint64_t v37 = sub_255B61860();
  uint64_t v38 = WitnessTable;
  sub_255AF64A0((uint64_t)v50, 2uLL, (uint64_t)v39);
  v30(v9, v3);
  v30(v7, v3);
  sub_255B617F8((uint64_t)v40, (uint64_t)&v51);
  return sub_255AE0200((uint64_t)&v51);
}

uint64_t sub_255B5FCFC()
{
  return sub_255B5EC4C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_255B5FD1C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255B5FD58()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A16A8C;
  return sub_255AAC58C();
}

uint64_t sub_255B5FE10()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A160B0;
  return sub_255AAC58C();
}

uint64_t sub_255B5FEC4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_255B5FFA4;
  return v5(v2 + 32);
}

uint64_t sub_255B5FFA4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_255B600B8(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_255B60198;
  return v5(v2 + 16);
}

uint64_t sub_255B60198()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  void *v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_255B602C8()
{
  uint64_t result = *v0;
  if (!*v0)
  {
    type metadata accessor for NowPlayingViewModel(0);
    sub_255B61AFC(&qword_26B2981B0, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255B60344(uint64_t a1)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v15 = v1[5];
  uint64_t v16 = v1[4];
  char v14 = *((unsigned char *)v1 + 48);
  uint64_t v6 = (uint64_t (*)(void))v1[7];
  uint64_t v5 = v1[8];
  uint64_t v21 = *v1;
  uint64_t v18 = v21;
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v17;
  uint64_t v25 = v16;
  uint64_t v26 = v15;
  char v27 = v14;
  uint64_t v28 = v6;
  uint64_t v29 = v5;
  sub_255B602C8();
  type metadata accessor for NowPlayingHostedContentSession();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_retain();
  sub_255B5E07C(v8);
  qword_269F332D0 = v7;
  swift_retain();
  swift_release();
  uint64_t v9 = v6(v7);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(v7 + 40) = v10;
  swift_unknownObjectWeakAssign();
  uint64_t v11 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v10);
  uint64_t v21 = v18;
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v17;
  uint64_t v25 = v16;
  uint64_t v26 = v15;
  char v27 = v14;
  uint64_t v28 = v6;
  uint64_t v29 = v5;
  sub_255B5F130((uint64_t)&v19);
  uint64_t v12 = v20;
  sub_255A8AFD4(v19, v20);
  if (v12 == 1) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
  }
  swift_release();
  return v9;
}

void sub_255B604D4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_255B60568@<X0>(uint64_t a1@<X8>)
{
  return sub_255B5F83C(*(void *)(v1 + 24), a1);
}

uint64_t sub_255B60574()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B60590()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B605E0(char *a1)
{
  return sub_255B5E934(*a1);
}

uint64_t type metadata accessor for NowPlayingHostedContentSession()
{
  return self;
}

uint64_t method lookup function for NowPlayingHostedContentSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NowPlayingHostedContentSession);
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.controlsHidden.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.controlsHidden.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.controlsHidden.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.willPresentHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.didPresentHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.willDismissHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.didDismissHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.didUpdateDeviceMetrics(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_255B60738(uint64_t a1)
{
  swift_release();
  sub_255AB8EB0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));

  return swift_release();
}

uint64_t sub_255B60784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_retain();
  sub_255AB8EBC(v5, v6, v7, v8, v9);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_retain();
  return a1;
}

uint64_t sub_255B6080C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_255AB8EBC(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  sub_255AB8EB0(v9, v10, v11, v12, v13);
  uint64_t v14 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v14;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_255B608E8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v5;
  sub_255AB8EB0(v6, v7, v8, v9, v10);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_255B60960(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255B609A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingHostedViewControllerRepresentable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B60A10()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_255B60AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 89) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v26 = *(void *)(a3 + 16);
    uint64_t v21 = *(void *)a2;
    uint64_t v22 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 40);
    uint64_t v15 = *(void *)(a2 + 48);
    uint64_t v14 = *(void *)(a2 + 56);
    uint64_t v23 = *(void *)(a2 + 64);
    char v24 = *(unsigned char *)(a2 + 72);
    char v25 = *(unsigned char *)(a2 + 73);
    sub_255A1CFDC(*(void *)a2, v22, v10, v11, v12, v13, v15, v14, v23, v24, v25);
    *(void *)a1 = v21;
    *(void *)(a1 + 8) = v22;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v15;
    *(void *)(a1 + 56) = v14;
    *(void *)(a1 + 64) = v23;
    *(unsigned char *)(a1 + 72) = v24;
    *(unsigned char *)(a1 + 73) = v25;
    unint64_t v16 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = (a2 + 81) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    sub_255A0877C(*(void *)v17, v19);
    *(void *)unint64_t v16 = v18;
    *(unsigned char *)(v16 + 8) = v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))((v16 + v6 + 9) & ~v6, (v17 + v6 + 9) & ~v6, v26);
  }
  return a1;
}

uint64_t sub_255B60C78(uint64_t a1, uint64_t a2)
{
  sub_255A1D054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72), *(unsigned char *)(a1 + 73));
  unint64_t v4 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  sub_255A087D0(*(void *)v4, *(unsigned char *)(v4 + 8));
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v5 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_255B60D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v18 = *(void *)(a2 + 64);
  char v19 = *(unsigned char *)(a2 + 72);
  char v20 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v18, v19, v20);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 72) = v19;
  *(unsigned char *)(a1 + 73) = v20;
  unint64_t v13 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v3 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)v14;
  LOBYTE(v3) = *(unsigned char *)(v14 + 8);
  sub_255A0877C(*(void *)v14, v3);
  *(void *)unint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = v3;
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 16))((*(unsigned __int8 *)(v16 + 80) + 9 + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (*(unsigned __int8 *)(v16 + 80) + 9 + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_255B60E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v31 = *(void *)(a2 + 64);
  char v32 = *(unsigned char *)(a2 + 72);
  char v33 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v31, v32, v33);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 72);
  char v23 = *(unsigned char *)(a1 + 73);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v31;
  *(unsigned char *)(a1 + 72) = v32;
  *(unsigned char *)(a1 + 73) = v33;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  unint64_t v24 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v3 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v3) = *(unsigned char *)(v25 + 8);
  sub_255A0877C(*(void *)v25, v3);
  uint64_t v27 = *(void *)v24;
  char v28 = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v3;
  sub_255A087D0(v27, v28);
  uint64_t v29 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v29 + 24))((*(unsigned __int8 *)(v29 + 80) + 9 + v24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), (*(unsigned __int8 *)(v29 + 80) + 9 + v25) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  return a1;
}

_OWORD *sub_255B60FEC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  *(_OWORD *)((char *)a1 + 58) = *(_OWORD *)((char *)a2 + 58);
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  unint64_t v6 = ((unint64_t)a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)a2 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  *(unsigned char *)(v6 + 8) = *(unsigned char *)(v7 + 8);
  *(void *)unint64_t v6 = v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))((*(unsigned __int8 *)(v9 + 80) + 9 + v6) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 9 + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_255B6108C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  char v8 = *(unsigned char *)(a2 + 73);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  char v18 = *(unsigned char *)(a1 + 72);
  char v19 = *(unsigned char *)(a1 + 73);
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 73) = v8;
  sub_255A1D054(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  unint64_t v22 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (a2 + 81) & 0xFFFFFFFFFFFFFFF8;
  char v24 = *(unsigned char *)(v23 + 8);
  uint64_t v25 = *(void *)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v24;
  sub_255A087D0(v25, v26);
  uint64_t v27 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(unsigned __int8 *)(v27 + 80) + 9 + v22) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(unsigned __int8 *)(v27 + 80) + 9 + v23) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_255B6118C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 89) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 81) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 9) & ~v6);
      unsigned int v15 = *((unsigned __int8 *)a1 + 73);
      if (v15 > 1) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_255B61334(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 89) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255B615BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (((unint64_t)(a1 + 81) & 0xFFFFFFFFFFFFFFF8) + v9 + 9) & ~v9;
          char v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 0xFE)
        {
          *(_OWORD *)(a1 + 56) = 0u;
          *(_OWORD *)(a1 + 40) = 0u;
          *(_OWORD *)(a1 + 24) = 0u;
          *(_OWORD *)(a1 + 8) = 0u;
          *((_WORD *)a1 + 36) = 0;
          *(void *)a1 = a2 - 255;
        }
        else
        {
          a1[73] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for NowPlayingHostedViewControllerStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B615FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B61708()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B61740(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unsigned int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unsigned int v5 = v2;
  v5[1] = sub_255A160B0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F24FC0 + dword_269F24FC0);
  return v6(a1, v4);
}

uint64_t sub_255B617F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_255B61860()
{
  unint64_t result = qword_269F24FD8;
  if (!qword_269F24FD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24FB8);
    sub_255B61920(&qword_269F24FE0, &qword_269F24FE8, (void (*)(void))sub_255B618F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24FD8);
  }
  return result;
}

uint64_t sub_255B618F8()
{
  return sub_255B61920(&qword_269F24FF0, &qword_269F24FF8, (void (*)(void))sub_255B619A0);
}

uint64_t sub_255B61920(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B619A0()
{
  unint64_t result = qword_269F25000;
  if (!qword_269F25000)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25008);
    sub_255B61A40();
    sub_255A09998(&qword_269F25018, &qword_269F25020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25000);
  }
  return result;
}

unint64_t sub_255B61A40()
{
  unint64_t result = qword_269F25010;
  if (!qword_269F25010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25010);
  }
  return result;
}

double sub_255B61A94(uint64_t a1)
{
  *(unsigned char *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_255B61ABC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_255B61AF4(uint64_t *a1)
{
}

uint64_t sub_255B61AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MCUINamespace<A>.fittedToMaxLines(_:)()
{
  return sub_255C7F698();
}

unint64_t sub_255B61C00()
{
  unint64_t result = qword_26B29D038;
  if (!qword_26B29D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D038);
  }
  return result;
}

uint64_t MCUINamespace<A>.fittedToMaxLines(_:)(uint64_t (*a1)(void))
{
  return sub_255C7F698();
}

uint64_t View.fittedToMaxLines(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v9 - v6;
  View.mcui.getter(a3, (uint64_t)&v9 - v6);
  MCUINamespace<A>.fittedToMaxLines(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t View.fittedToMaxLines(_:)(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for MCUINamespace();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - v7;
  View.mcui.getter(a3, (uint64_t)&v10 - v7);
  MCUINamespace<A>.fittedToMaxLines(_:)(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_255B61F04()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B61F74()
{
  unint64_t result = qword_269F25030;
  if (!qword_269F25030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25030);
  }
  return result;
}

uint64_t static Backdrop.PerformanceConcessions.getter()
{
  return 15;
}

uint64_t sub_255B61FE0()
{
  char v0 = 0;
  uint64_t result = MGGetProductType();
  if (result > 2270970152)
  {
    if (result > 3242623366)
    {
      if (result != 3645319985 && result != 3242623367) {
        goto LABEL_15;
      }
    }
    else if (result != 2270970153 && result != 2311900306)
    {
      goto LABEL_15;
    }
  }
  else if (result > 1429914405)
  {
    if (result != 1429914406 && result != 1721691077) {
      goto LABEL_15;
    }
  }
  else if (result != 228444038 && result != 502329937)
  {
LABEL_15:
    char v0 = 1;
  }
  byte_269F25040 = v0;
  return result;
}

uint64_t static Backdrop.supportsHighFrameRate.getter()
{
  if (qword_269F200D0 != -1) {
    swift_once();
  }
  return byte_269F25040;
}

BOOL static Backdrop.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Backdrop.State.hash(into:)()
{
  return sub_255C81588();
}

uint64_t Backdrop.State.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255B621A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  return MEMORY[0x25A297D40](v1);
}

uint64_t sub_255B621F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_255B62260(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x25A297D40](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_255B622E8;
}

void sub_255B622E8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_255B62370@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_255B623C0(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
  uint64_t result = swift_beginAccess();
  int v5 = *v3;
  *uint64_t v3 = v2;
  if (v2 != v5)
  {
    uint64_t v6 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
    swift_beginAccess();
    uint64_t result = MEMORY[0x25A297D40](v6);
    if (result)
    {
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v1, ObjectType, v7);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_255B62484()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_255B624CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  *uint64_t v3 = a1;
  if (v5 != a1)
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16);
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 160) = sub_255B6772C();
    return swift_unknownObjectRelease();
  }
  return result;
}

void (*sub_255B62554(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return sub_255B625D4;
}

void sub_255B625D4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(v4 + v3);
  *(void *)(v4 + v3) = v2;
  if (v5 != v2)
  {
    uint64_t v6 = *(void *)(v1[4] + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16);
    *(void *)(v6 + 16) = v2;
    *(void *)(v6 + 160) = sub_255B6772C();
    swift_unknownObjectRelease();
  }

  free(v1);
}

uint64_t sub_255B62650()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat;
  swift_beginAccess();
  return *(void *)v1;
}

void sub_255B62698(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  if (v4 != a1)
  {
    uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 136) = sub_255B69018();
    swift_unknownObjectRelease();
    uint64_t v7 = *v5;
    *(void *)(*v5 + 16) = *v3;
    uint64_t v8 = sub_255B67D0C();
    uint64_t v9 = *(void **)(v7 + 152);
    *(void *)(v7 + 152) = v8;

    *(void *)(v7 + 160) = sub_255B67F6C();
    swift_unknownObjectRelease();
    sub_255B682F4(*(void **)(v7 + 48));
  }
}

void (*sub_255B62758(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat);
  swift_beginAccess();
  v3[3] = *v4;
  return sub_255B627D8;
}

void sub_255B627D8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  sub_255B62698(*(void *)(*(void *)a1 + 24));

  free(v1);
}

BOOL sub_255B62814()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  return *(float *)(*(void *)v1 + 64) == 1.0;
}

double sub_255B6286C(char a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  float v4 = 0.2;
  if (a1) {
    float v4 = 1.0;
  }
  *(float *)(*(void *)v3 + 64) = v4;
  *(void *)&double result = sub_255B63A50().n128_u64[0];
  return result;
}

void (*sub_255B628E0(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *(float *)(*(void *)v5 + 64) == 1.0;
  return sub_255B62970;
}

void sub_255B62970(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  float v2 = 0.2;
  if (*(unsigned char *)(*(void *)a1 + 40)) {
    float v2 = 1.0;
  }
  *(float *)(*(void *)(*(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32)) + 64) = v2;
  sub_255B63A50();

  free(v1);
}

uint64_t sub_255B629D0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_255B62A18(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_255B62A64())()
{
  return j__swift_endAccess;
}

uint64_t sub_255B62AC0(void *a1)
{
  if (objc_msgSend(a1, sel_supportsFamily_, 1005))
  {
    id v2 = objc_msgSend(self, sel_mainScreen);
    id v3 = objc_msgSend(v2, sel_maximumFramesPerSecond);

    return (uint64_t)v3;
  }
  else
  {
    uint64_t v5 = (unsigned char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
    swift_beginAccess();
    if (*v5) {
      return 30;
    }
    else {
      return 15;
    }
  }
}

void sub_255B62B6C(id *a1, void *a2)
{
  id v2 = *a1;
  char v3 = *(void *)(*(void *)(*a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers) + 96) != 0;
  id v4 = *a1;
  sub_255B62D48(v2, v3);
}

void sub_255B62BE0(void *a1)
{
  sub_255B62D48(a1, *(void *)(*(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers) + 96) != 0);
}

void *sub_255B62C30()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  id v2 = v1;
  return v1;
}

void (*sub_255B62C60(void *a1))(uint64_t a1, char a2)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_255B62CB4;
}

void sub_255B62CB4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 8) + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers)
                 + 96);
  id v6 = *(id *)a1;
  if (a2)
  {
    char v3 = v2 != 0;
    id v4 = v6;
    sub_255B62D48(v6, v3);

    uint64_t v5 = v4;
  }
  else
  {
    sub_255B62D48(v6, v2 != 0);
    uint64_t v5 = v6;
  }
}

void sub_255B62D48(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage;
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  if (!a1)
  {
    *(void *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage) = 0;
    id v11 = 0;

    goto LABEL_18;
  }
  if (v7)
  {
    sub_255A43740(0, (unint64_t *)&qword_26B29FCA0);
    id v8 = a1;
    id v9 = v7;
    char v10 = sub_255C80DD8();

    if (v10) {
      return;
    }
    uint64_t v6 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage;
  }
  unsigned int v12 = *(void **)(v3 + v6);
  *(void *)(v3 + v6) = a1;
  id v13 = a1;

  id v14 = objc_msgSend(v13, sel_CGImage);
  if (!v14) {
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
  double v16 = *(double *)(v15 + 24);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  double v17 = *(double *)(v15 + 32);
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return;
  }
  unint64_t v18 = v14;
  CGImageRef v19 = sub_255B62FDC((uint64_t)v16, 0, (uint64_t)v17, 0);

  if (v19)
  {
    char v24 = v19;
    sub_255B63F28(v19, 0, a2 & 1);

    return;
  }
LABEL_18:
  id v20 = *(id *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor);
  id v21 = sub_255B64810(v20);
  float v22 = 1.0;
  if (a2) {
    float v22 = 0.0;
  }
  *(float *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v22;
  uint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
  *(void *)(v23 + 96) = v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(v23 + 104) = 1;

  swift_unknownObjectRelease();
}

CGImageRef sub_255B62FDC(int64_t Width, char a2, int64_t Height, char a4)
{
  if (a2) {
    Width = CGImageGetWidth(v4);
  }
  int64_t v8 = CGImageGetWidth(v4);
  if (v8 < Width) {
    Width = v8;
  }
  if (a4) {
    Height = CGImageGetHeight(v4);
  }
  int64_t v9 = CGImageGetHeight(v4);
  if (v9 < Height) {
    Height = v9;
  }
  char v10 = CGImageGetColorSpace(v4);
  if (!v10 || (id v11 = v10, Model = CGColorSpaceGetModel(v10), v11, Model))
  {
    if (CGImageGetAlphaInfo(v4) != kCGImageAlphaNoneSkipFirst
      && CGImageGetAlphaInfo(v4) != kCGImageAlphaPremultipliedFirst)
    {
      return v4;
    }
  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  id v14 = CGBitmapContextCreate(0, Width, Height, 8uLL, 0, DeviceRGB, 5u);

  if (!v14) {
    return v4;
  }
  os_log_type_t v15 = sub_255C80BC8();
  sub_255A43740(0, (unint64_t *)&qword_26B29F380);
  double v16 = v4;
  double v17 = sub_255C80E78();
  os_log_type_t v18 = v15;
  if (os_log_type_enabled(v17, v15))
  {
    CGImageRef v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v20;
    *(_DWORD *)CGImageRef v19 = 136315138;
    type metadata accessor for CGImage(0);
    id v21 = v16;
    uint64_t v22 = sub_255C80658();
    sub_255A7BEC4(v22, v23, &v26);
    sub_255C80F18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v17, v18, "Backdrop: Redrawing incompatible image: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v20, -1, -1);
    MEMORY[0x25A297C00](v19, -1, -1);
  }
  else
  {
  }
  sub_255C80BA8();
  CGImageRef Image = CGBitmapContextCreateImage(v14);

  return Image;
}

void sub_255B63284(void *a1, char a2)
{
  uint64_t v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor;
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor);
  *(void *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor) = a1;
  id v6 = a1;

  if (!*(void *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage))
  {
    id v7 = *(id *)(v2 + v4);
    id v8 = sub_255B64810(v7);
    float v9 = 1.0;
    if (a2) {
      float v9 = 0.0;
    }
    *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v9;
    uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
    *(void *)(v10 + 96) = v8;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(unsigned char *)(v10 + 104) = 1;

    swift_unknownObjectRelease();
  }
}

void sub_255B6335C(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  id v2 = v1;
  swift_retain();
  sub_255C57D00(v1);
  swift_release();
}

void *sub_255B633D8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  id v2 = *(void **)(*(void *)v1 + 16);
  id v3 = v2;
  return v2;
}

void sub_255B6342C(void *a1)
{
}

void (*sub_255B63494(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  id v6 = *(void **)(*(void *)v5 + 16);
  v3[3] = v6;
  id v7 = v6;
  return sub_255B63520;
}

void sub_255B63520(void **a1, char a2)
{
  id v2 = *a1;
  uint64_t v4 = (void **)((char *)*a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    swift_retain();
    sub_255C57D00(v3);

    swift_release();
    id v3 = *v4;
  }
  else
  {
    swift_retain();
    sub_255C57D00(v3);
    swift_release();
  }

  free(v2);
}

id Backdrop.CompositeRenderer.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 8);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 16);
  id v8 = *(id *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  return v8;
}

id Backdrop.CompositeRenderer.__allocating_init(context:configuration:)(uint64_t *a1, char *a2)
{
  id v5 = objc_allocWithZone(v2);
  return Backdrop.CompositeRenderer.init(context:configuration:)(a1, a2);
}

id Backdrop.CompositeRenderer.init(context:configuration:)(uint64_t *a1, char *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = (void *)a1[3];
  uint64_t v7 = a1[4];
  char v44 = *((unsigned char *)a1 + 40);
  char v8 = *a2;
  *(void *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer + 8] = 0;
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state] = 0;
  *(void *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat] = 80;
  *(void *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat] = 115;
  v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeDuration] = 1061997773;
  *(void *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage] = 0;
  uint64_t v9 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor;
  uint64_t v10 = self;
  id v11 = v2;
  *(void *)&v2[v9] = objc_msgSend(v10, sel_systemRedColor);
  unsigned int v12 = &v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment];
  *unsigned int v12 = 0;
  *(void *)(v12 + 4) = 0x432000004019999ALL;
  uint64_t v13 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeTimingFunction;
  id v14 = objc_allocWithZone(MEMORY[0x263F15808]);
  LODWORD(v15) = 1050253722;
  LODWORD(v16) = 1.0;
  *(void *)&v11[v13] = objc_msgSend(v14, sel_initWithControlPoints__::, 0.0, 0.0, v15, v16);
  uint64_t v17 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_modeTimingFunction;
  id v18 = objc_allocWithZone(MEMORY[0x263F15808]);
  LODWORD(v19) = 1.0;
  LODWORD(v20) = 1054280253;
  LODWORD(v21) = 1058306785;
  *(void *)&v11[v17] = objc_msgSend(v18, sel_initWithControlPoints__::, v20, 0.0, v21, v19);
  uint64_t v22 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_warpTimingFunction;
  id v23 = objc_allocWithZone(MEMORY[0x263F15808]);
  LODWORD(v24) = 1.0;
  LODWORD(v25) = 1054280253;
  LODWORD(v26) = 1058306785;
  *(void *)&v11[v22] = objc_msgSend(v23, sel_initWithControlPoints__::, v25, 0.0, v26, v24);
  *(void *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_warpTimingSpeed] = 0x400C000000000000;
  *(_DWORD *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix] = 0;
  *(_DWORD *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix] = 0;
  uint64_t v27 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
  if (qword_26B29F2D0 != -1) {
    swift_once();
  }
  memmove(&v11[v27], &dword_26B2AA7E0, 0x170uLL);
  uint64_t v28 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  type metadata accessor for SpectrumAnalysis();
  swift_allocObject();
  *(void *)&v11[v28] = sub_255C56E78();
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_aspectRatio] = _D0;
  char v43 = v8 & 1;
  uint64_t v34 = &v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context];
  *(void *)uint64_t v34 = v3;
  *((void *)v34 + 1) = v4;
  *((void *)v34 + 2) = v5;
  *((void *)v34 + 3) = v6;
  *((void *)v34 + 4) = v7;
  v34[40] = v44;
  *(void *)&long long v46 = v3;
  *((void *)&v46 + 1) = v4;
  uint64_t v47 = v5;
  id v48 = v6;
  uint64_t v49 = v7;
  char v50 = v44;
  type metadata accessor for Backdrop.TextureBlender();
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v36 = v6;
  sub_255B67B08(&v46);
  *(void *)&long long v46 = v3;
  *((void *)&v46 + 1) = v4;
  uint64_t v47 = v5;
  id v48 = v36;
  uint64_t v49 = v7;
  char v50 = v44;
  type metadata accessor for Backdrop.RotatingArtworkRenderer();
  uint64_t v37 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v38 = v36;
  sub_255B68920((uint64_t)&v46);
  *(void *)&long long v46 = v3;
  *((void *)&v46 + 1) = v4;
  uint64_t v47 = v5;
  id v48 = v38;
  uint64_t v49 = v7;
  char v50 = v44;
  type metadata accessor for Backdrop.PinchRenderer();
  uint64_t v39 = swift_allocObject();
  sub_255B67228((uint64_t)&v46, v43);
  long long v40 = (uint64_t *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers];
  *long long v40 = v35;
  v40[1] = v37;
  void v40[2] = v39;

  v45.receiver = v11;
  v45.super_class = (Class)type metadata accessor for Backdrop.CompositeRenderer();
  id v41 = objc_msgSendSuper2(&v45, sel_init);
  sub_255B63D24();

  return v41;
}

__n128 sub_255B63A50()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers;
  unsigned int v2 = *(double *)(*(void *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8) + 40) < *(double *)(*(void *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8) + 32);
  uint64_t v3 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  unsigned int v4 = *(float *)(*(void *)v3 + 64) == 1.0;
  uint64_t v5 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment;
  *(unsigned char *)uint64_t v5 = v2;
  int8x8_t v6 = (int8x8_t)vcltz_s32(vshl_n_s32(vdup_n_s32(v4), 0x1FuLL));
  v7.n128_u64[0] = (unint64_t)vbsl_s8((int8x8_t)vcltz_s32(vshl_n_s32(vdup_n_s32(v2), 0x1FuLL)), vbsl_s8(v6, (int8x8_t)0x42F000004019999ALL, (int8x8_t)0x434800004039999ALL), vbsl_s8(v6, (int8x8_t)0x42AA000040000000, (int8x8_t)0x432000004019999ALL));
  __n128 v10 = v7;
  *(void *)(v5 + 4) = v7.n128_u64[0];
  *(unsigned char *)(*(void *)(v1 + 16) + 104) = v2;
  uint64_t v8 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
  swift_beginAccess();
  __n128 result = v10;
  *(_DWORD *)(v8 + 340) = v10.n128_u32[0];
  return result;
}

void sub_255B63B58(float a1)
{
  float v2 = *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix);
  if (v2 != a1)
  {
    uint64_t v3 = (char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
    if (v2 >= 1.0 || v2 <= 0.0)
    {
      swift_beginAccess();
      int v5 = *v3;
      *uint64_t v3 = 0;
      if (v5 != 1) {
        return;
      }
    }
    else
    {
      swift_beginAccess();
      char v4 = *v3;
      *uint64_t v3 = 1;
      if (v4) {
        return;
      }
    }
    uint64_t v6 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
    swift_beginAccess();
    if (MEMORY[0x25A297D40](v6))
    {
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v1, ObjectType, v7);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_255B63C6C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_255B63CD8()
{
  return swift_retain();
}

void sub_255B63D24()
{
  sub_255B6AB28();
  unint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 >= 3)
  {
    long long v14 = *(_OWORD *)(v1 + 48);
    long long v15 = *(_OWORD *)(v1 + 32);
    long long v12 = *(_OWORD *)(v1 + 80);
    long long v13 = *(_OWORD *)(v1 + 64);
    float32x4_t v11 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, COERCE_FLOAT(*(_OWORD *)(v1 + 96))), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)(v1 + 96), 1), (float32x4_t)xmmword_255C89FD0, *(float32x4_t *)(v1 + 96), 2), (float32x4_t)xmmword_255C90CA0, *(float32x4_t *)(v1 + 96), 3);
    float32x4_t v10 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, COERCE_FLOAT(*(_OWORD *)(v1 + 112))), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)(v1 + 112), 1), (float32x4_t)xmmword_255C89FD0, *(float32x4_t *)(v1 + 112), 2), (float32x4_t)xmmword_255C90CA0, *(float32x4_t *)(v1 + 112), 3);
    float32x4_t v9 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, COERCE_FLOAT(*(_OWORD *)(v1 + 128))), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)(v1 + 128), 1), (float32x4_t)xmmword_255C89FD0, *(float32x4_t *)(v1 + 128), 2), (float32x4_t)xmmword_255C90CA0, *(float32x4_t *)(v1 + 128), 3);
    float32x4_t v8 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, COERCE_FLOAT(*(_OWORD *)(v1 + 144))), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)(v1 + 144), 1), (float32x4_t)xmmword_255C89FD0, *(float32x4_t *)(v1 + 144), 2), (float32x4_t)xmmword_255C90CA0, *(float32x4_t *)(v1 + 144), 3);
    float32x4_t v6 = *(float32x4_t *)(v1 + 176);
    float32x4_t v7 = *(float32x4_t *)(v1 + 160);
    float32x4_t v4 = *(float32x4_t *)(v1 + 208);
    float32x4_t v5 = *(float32x4_t *)(v1 + 192);
    swift_bridgeObjectRelease();
    uint64_t v3 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
    swift_beginAccess();
    *(_OWORD *)(v3 + 80) = v15;
    *(_OWORD *)(v3 + 96) = v14;
    *(_OWORD *)(v3 + 112) = v13;
    *(_OWORD *)(v3 + 128) = v12;
    *(_WORD *)(v3 + 144) = -1;
    *(_DWORD *)(v3 + 148) = 1123024896;
    *(float32x4_t *)(v3 + 160) = v11;
    *(float32x4_t *)(v3 + 176) = v10;
    *(float32x4_t *)(v3 + 192) = v9;
    *(float32x4_t *)(v3 + 208) = v8;
    *(_WORD *)(v3 + 224) = -1;
    *(_DWORD *)(v3 + 228) = 1116471296;
    *(float32x4_t *)(v3 + 240) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, v7.f32[0]), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)v7.f32, 1), (float32x4_t)xmmword_255C89FD0, v7, 2), (float32x4_t)xmmword_255C90CB0, v7, 3);
    *(float32x4_t *)(v3 + 256) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, v6.f32[0]), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)v6.f32, 1), (float32x4_t)xmmword_255C89FD0, v6, 2), (float32x4_t)xmmword_255C90CB0, v6, 3);
    *(float32x4_t *)(v3 + 272) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, v5.f32[0]), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)v5.f32, 1), (float32x4_t)xmmword_255C89FD0, v5, 2), (float32x4_t)xmmword_255C90CB0, v5, 3);
    *(float32x4_t *)(v3 + 288) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_255C89FB0, v4.f32[0]), (float32x4_t)xmmword_255C89FC0, *(float32x2_t *)v4.f32, 1), (float32x4_t)xmmword_255C89FD0, v4, 2), (float32x4_t)xmmword_255C90CB0, v4, 3);
    *(_WORD *)(v3 + 304) = 0;
    *(_DWORD *)(v3 + 308) = 1119092736;
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_255B63F28(void *a1, char a2, char a3)
{
  v28[13] = *(id *)MEMORY[0x263EF8340];
  if (a2)
  {
    id v19 = a1;
    id v20 = sub_255B64810(v19);
    float v21 = 1.0;
    if (a3) {
      float v21 = 0.0;
    }
    *(float *)&v3[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix] = v21;
    uint64_t v22 = *(void *)&v3[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers];
    *(void *)(v22 + 96) = v20;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(unsigned char *)(v22 + 104) = 1;

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(unsigned char *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = v3;
    *(unsigned char *)(v6 + 40) = a3 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCD8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_255C83400;
    float32x4_t v8 = (void *)*MEMORY[0x263F12D50];
    *(void *)(inited + 32) = *MEMORY[0x263F12D50];
    *(unsigned char *)(inited + 40) = 0;
    id v9 = a1;
    float32x4_t v10 = v3;
    id v11 = v9;
    long long v12 = v10;
    id v13 = v8;
    unint64_t v14 = sub_255A18CE8(inited);
    long long v15 = *(void **)&v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 24];
    sub_255BB2A70(v14);
    swift_bridgeObjectRelease();
    type metadata accessor for Option(0);
    sub_255B6ACAC((unint64_t *)&qword_26B29FC90, type metadata accessor for Option);
    double v16 = (void *)sub_255C80448();
    swift_bridgeObjectRelease();
    if (a3)
    {
      uint64_t v17 = (void *)swift_allocObject();
      void v17[2] = sub_255B6ABE8;
      v17[3] = v6;
      v28[4] = sub_255B6AC34;
      v28[5] = v17;
      v28[0] = (id)MEMORY[0x263EF8330];
      v28[1] = (id)1107296256;
      v28[2] = sub_255BE919C;
      v28[3] = &block_descriptor_187;
      id v18 = _Block_copy(v28);
      swift_retain();
      swift_release();
      objc_msgSend(v15, sel_newTextureWithCGImage_options_completionHandler_, v11, v16, v18);
      _Block_release(v18);

      swift_release();
    }
    else
    {
      v28[0] = 0;
      id v23 = objc_msgSend(v15, sel_newTextureWithCGImage_options_error_, v11, v16, v28);

      id v24 = v28[0];
      if (v23)
      {
        uint64_t v25 = (uint64_t)v23;
      }
      else
      {
        double v26 = v24;
        uint64_t v27 = (void *)sub_255C7D4D8();

        swift_willThrow();
        uint64_t v25 = 0;
      }
      sub_255B642D0(v25, (uint64_t)a1, 0, (uint64_t)v12, 0);

      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

void sub_255B642D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if ((a3 & 1) != 0
    || (float32x4_t v8 = *(void **)(a4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage)) == 0
    || (sub_255A43740(0, (unint64_t *)&qword_26B29FCA0),
        id v9 = v8,
        char v10 = sub_255C80DD8(),
        v9,
        (v10 & 1) != 0))
  {
    float v11 = 1.0;
    if (a5) {
      float v11 = 0.0;
    }
    *(float *)(a4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v11;
    uint64_t v12 = *(void *)(a4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
    *(void *)(v12 + 96) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(unsigned char *)(v12 + 104) = 1;
  }
}

uint64_t sub_255B6439C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a1;
  uint64_t v7 = sub_255C803B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_255C803E8();
  uint64_t v11 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v35 = v11;
    id v14 = a2;
    os_log_type_t v15 = sub_255C80BE8();
    sub_255A43740(0, (unint64_t *)&qword_26B29F380);
    id v16 = a2;
    id v17 = a2;
    id v18 = sub_255C80E78();
    if (os_log_type_enabled(v18, v15))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v34 = v8;
      id v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v33 = a4;
      uint64_t v22 = v21;
      aBlock[0] = v21;
      uint64_t v32 = a3;
      *(_DWORD *)id v20 = 136315138;
      uint64_t v31 = v20 + 4;
      swift_getErrorValue();
      uint64_t v23 = sub_255C81508();
      uint64_t v38 = sub_255A7BEC4(v23, v24, aBlock);
      a3 = v32;
      sub_255C80F18();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255A00000, v18, v15, "Error loading texture: %s", v20, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v22;
      a4 = v33;
      MEMORY[0x25A297C00](v25, -1, -1);
      double v26 = v20;
      uint64_t v8 = v34;
      MEMORY[0x25A297C00](v26, -1, -1);
    }
    else
    {
    }
    uint64_t v11 = v35;
  }
  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  uint64_t v27 = (void *)sub_255C80C88();
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = a3;
  v28[3] = a4;
  v28[4] = v36;
  aBlock[4] = (uint64_t)sub_255B6AC7C;
  aBlock[5] = (uint64_t)v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_255AE4914;
  aBlock[3] = (uint64_t)&block_descriptor_193;
  uint64_t v29 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  sub_255C803D8();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_255B6ACAC((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
  sub_255AB4994();
  sub_255C80F78();
  MEMORY[0x25A296510](0, v13, v10, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v37);
}

id sub_255B64810(void *a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v3 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 80, 1, 1, 0);
  id v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context), sel_newTextureWithDescriptor_, v3);
  if (v4)
  {
    double v13 = 0.0;
    double v14 = 0.0;
    double v12 = 0.0;
    objc_msgSend(a1, sel_getRed_green_blue_alpha_, &v14, &v13, &v12, 0);
    double v5 = v12 * 255.0;
    if ((~COERCE__INT64(v12 * 255.0) & 0x7FF0000000000000) != 0)
    {
      if (v5 > -1.0)
      {
        if (v5 < 256.0)
        {
          v15[0] = (int)v5;
          double v6 = v13 * 255.0;
          if ((~COERCE__INT64(v13 * 255.0) & 0x7FF0000000000000) != 0)
          {
            if (v6 > -1.0)
            {
              if (v6 < 256.0)
              {
                v15[1] = (int)v6;
                double v7 = v14 * 255.0;
                if ((~COERCE__INT64(v14 * 255.0) & 0x7FF0000000000000) != 0)
                {
                  if (v7 > -1.0)
                  {
                    if (v7 < 256.0)
                    {
                      v15[2] = (int)v7;
                      v15[3] = -1;
                      memset(v9, 0, sizeof(v9));
                      int64x2_t v10 = vdupq_n_s64(1uLL);
                      uint64_t v11 = 1;
                      objc_msgSend(v4, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, v9, 0, v15, 4);
                      goto LABEL_12;
                    }
LABEL_21:
                    __break(1u);
                  }
LABEL_20:
                  __break(1u);
                  goto LABEL_21;
                }
LABEL_19:
                __break(1u);
                goto LABEL_20;
              }
LABEL_18:
              __break(1u);
              goto LABEL_19;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_12:

  return v4;
}

id Backdrop.CompositeRenderer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void Backdrop.CompositeRenderer.init()()
{
}

id Backdrop.CompositeRenderer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Backdrop.CompositeRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_255B64BF0(void *a1, float a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
  swift_beginAccess();
  *(float *)uint64_t v5 = *(float *)v5 + a2;
  swift_beginAccess();
  sub_255C57534();
  *(double *)&long long v6 = sub_255C56EF8();
  *(_OWORD *)(v5 + 352) = v6;
  sub_255B64E08(a2 + a2);
  float v7 = *(double *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_warpTimingSpeed);
  float v8 = 0.5;
  *(float *)(v5 + 324) = (float)(sinf(*(float *)v5 / v7) + 1.0) * 0.5;
  if (a1)
  {
    if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)1) {
      float v8 = 0.35;
    }
  }
  *(float *)(v5 + 348) = v8;
  *(_DWORD *)(v5 + 344) = 1036831949;
  LODWORD(v9) = *(_DWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_modeTimingFunction), sel__solveForInput_, v9);
  *(_DWORD *)(v5 + 328) = v10;
  LODWORD(v11) = *(_DWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix);
  id result = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeTimingFunction), sel__solveForInput_, v11);
  *(_DWORD *)(v5 + 320) = v13;
  *(_DWORD *)(v5 + 332) = 1082130432;
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
  double v15 = *(double *)(v14 + 32);
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v15 <= -32769.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v15 >= 32768.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(_WORD *)(v5 + 336) = (int)v15;
  double v16 = *(double *)(v14 + 40);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v16 <= -32769.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v16 < 32768.0)
  {
    *(_WORD *)(v5 + 338) = (int)v16;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_255B64E08(float a1)
{
  uint64_t v2 = v1;
  float v3 = a1 / *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeDuration);
  float v4 = v3 + *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix);
  if (v4 > 1.0) {
    float v4 = 1.0;
  }
  *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v4;
  uint64_t v5 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  float v6 = *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix);
  float v7 = v6 - v3;
  if ((float)(v6 - v3) <= 0.0) {
    float v7 = 0.0;
  }
  float v8 = v3 + v6;
  if ((float)(v3 + v6) > 1.0) {
    float v8 = 1.0;
  }
  if (*(float *)(*(void *)v5 + 64) == 1.0) {
    float v9 = v8;
  }
  else {
    float v9 = v7;
  }
  *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix) = v9;
  sub_255B63B58(v6);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
  float v11 = *(float *)(v10 + 24);
  float v12 = *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment + 8);
  float v13 = -1.0;
  if (v12 < v11 || (float v13 = 1.0, v11 < v12))
  {
    *(float *)(v10 + 24) = v11 + v13;
    sub_255B69564();
  }
}

void sub_255B64F14(double a1, double a2, double a3)
{
  uint64_t v4 = v3;
  float v8 = a1 / a2;
  float v9 = 1.0 / v8;
  if (v8 < 1.0) {
    float v8 = 1.0;
  }
  else {
    float v9 = 1.0;
  }
  uint64_t v10 = (float *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_aspectRatio);
  *uint64_t v10 = v9;
  v10[1] = v8;
  long long v18 = LODWORD(v9);
  LODWORD(v11) = 0;
  *((float *)&v11 + 1) = v8;
  long long v17 = v11;
  float v12 = (_OWORD *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms);
  swift_beginAccess();
  v12[1] = v18;
  v12[2] = v17;
  v12[3] = xmmword_255C89FD0;
  v12[4] = xmmword_255C89FE0;
  uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
  double v14 = *(double *)(v13 + 32);
  double v15 = *(double *)(v13 + 40);
  *(double *)(v13 + 32) = a1;
  *(double *)(v13 + 40) = a2;
  *(double *)(v13 + 48) = a3;
  if (v14 != a1 || v15 != a2)
  {
    sub_255B6938C(*(void **)(v13 + 56));
    sub_255B69564();
  }
  sub_255B63A50();
}

uint64_t static Backdrop.CompositeRenderer.snapshot(configuration:)(uint64_t *a1)
{
  uint64_t v3 = sub_255C7D828();
  *(void *)(v1 + 160) = v3;
  *(void *)(v1 + 168) = *(void *)(v3 - 8);
  *(void *)(v1 + 176) = swift_task_alloc();
  *(void *)(v1 + 184) = swift_task_alloc();
  *(void *)(v1 + 192) = swift_task_alloc();
  *(void *)(v1 + 200) = swift_task_alloc();
  *(void *)(v1 + 208) = swift_task_alloc();
  uint64_t v4 = sub_255C7D7D8();
  *(void *)(v1 + 216) = v4;
  *(void *)(v1 + 224) = *(void *)(v4 - 8);
  *(void *)(v1 + 232) = swift_task_alloc();
  *(void *)(v1 + 240) = swift_task_alloc();
  *(void *)(v1 + 248) = swift_task_alloc();
  *(void *)(v1 + 256) = swift_task_alloc();
  *(void *)(v1 + 264) = swift_task_alloc();
  *(void *)(v1 + 272) = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  *(void *)(v1 + 280) = v5;
  *(void *)(v1 + 288) = v6;
  long long v7 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v1 + 312) = v7;
  *(void *)(v1 + 328) = a1[5];
  return MEMORY[0x270FA2498](sub_255B651D8, 0, 0);
}

uint64_t sub_255B651D8()
{
  uint64_t v89 = v0;
  if (qword_26B29EF78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_255C7D818();
  *(void *)(v0 + 336) = __swift_project_value_buffer(v1, (uint64_t)qword_26B2AA618);
  sub_255C7D7C8();
  uint64_t v2 = sub_255C7D7F8();
  os_signpost_type_t v3 = sub_255C80CC8();
  if (sub_255C80E68())
  {
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 224);
    long long v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    unint64_t v8 = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, *(void *)(v0 + 280), v5);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_255C7D7B8();
    _os_signpost_emit_with_name_impl(&dword_255A00000, v2, v3, v10, "Backdrop Snapshot Generation", "", v9, 2u);
    MEMORY[0x25A297C00](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 224);

    long long v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 280);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v15 = *(void *)(v0 + 224);
  *(void *)(v0 + 344) = v7;
  *(void *)(v0 + 352) = v8;
  char v84 = v7;
  v7(v13, v12, v14);
  sub_255C7D858();
  swift_allocObject();
  *(void *)(v0 + 360) = sub_255C7D848();
  double v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(void *)(v0 + 368) = v16;
  *(void *)(v0 + 376) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  long long v85 = v16;
  v16(v12, v14);
  if (qword_26B29F2B0 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_26B29F310;
  uint64_t v18 = qword_26B29F318;
  *(void *)(v0 + 384) = qword_26B29F310;
  *(void *)(v0 + 392) = v18;
  uint64_t v19 = qword_26B29F320;
  id v20 = (void *)qword_26B29F328;
  *(void *)(v0 + 400) = qword_26B29F320;
  *(void *)(v0 + 408) = v20;
  uint64_t v21 = qword_26B29F330;
  *(void *)(v0 + 416) = qword_26B29F330;
  char v22 = byte_26B29F338;
  *(unsigned char *)(v0 + 480) = byte_26B29F338;
  if (!v17)
  {
    sub_255B69768();
    swift_allocError();
    *uint64_t v54 = 2;
    swift_willThrow();
    uint64_t v55 = sub_255C7D7F8();
    sub_255C7D838();
    os_signpost_type_t v56 = sub_255C80CB8();
    if (sub_255C80E68())
    {
      uint64_t v57 = *(void *)(v0 + 184);
      uint64_t v58 = *(void *)(v0 + 160);
      uint64_t v59 = *(void *)(v0 + 168);
      swift_retain();
      sub_255C7D868();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v59 + 88))(v57, v58) == *MEMORY[0x263F90238])
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 160));
        uint64_t v60 = "";
      }
      uint64_t v73 = *(void *)(v0 + 272);
      uint64_t v74 = *(void *)(v0 + 240);
      uint64_t v75 = *(void *)(v0 + 216);
      v84(v73, v74, v75);
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v76 = 0;
      os_signpost_id_t v77 = sub_255C7D7B8();
      _os_signpost_emit_with_name_impl(&dword_255A00000, v55, v56, v77, "Backdrop Snapshot Generation", v60, v76, 2u);
      MEMORY[0x25A297C00](v76, -1, -1);

      v85(v74, v75);
      v85(v73, v75);
    }
    else
    {
      uint64_t v68 = *(void *)(v0 + 240);
      uint64_t v69 = *(void *)(v0 + 216);

      v85(v68, v69);
    }
    goto LABEL_33;
  }
  double v24 = *(double *)(v0 + 304);
  double v23 = *(double *)(v0 + 312);
  double v25 = *(double *)(v0 + 296);
  double v26 = *(void **)(v0 + 288);
  v86[0] = v17;
  v86[1] = v18;
  v86[2] = v19;
  v86[3] = (uint64_t)v20;
  v86[4] = v21;
  char v87 = v22 & 1;
  v88[0] = 2;
  id v27 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer());
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v28 = v20;
  uint64_t v29 = (char *)Backdrop.CompositeRenderer.init(context:configuration:)(v86, v88);
  *(void *)(v0 + 424) = v29;
  float v30 = *(float *)&v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix];
  *(_DWORD *)&v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix] = 1065353216;
  sub_255B63B58(v30);
  uint64_t v31 = &v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment];
  char *v31 = 0;
  *(void *)(v31 + 4) = 0x42AA000040000000;
  uint64_t v32 = &v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers];
  *(unsigned char *)(*(void *)&v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16] + 104) = 0;
  uint64_t v33 = &v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms];
  swift_beginAccess();
  *((_DWORD *)v33 + 85) = 0x40000000;
  uint64_t v34 = &v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis];
  swift_beginAccess();
  *(_DWORD *)(*(void *)v34 + 64) = 1065353216;
  sub_255B63A50();
  LOBYTE(v34) = *(void *)(*(void *)v32 + 96) != 0;
  id v35 = v26;
  sub_255B62D48(v26, (char)v34);

  sub_255B64F14(v25, v24, v23);
  uint64_t v36 = self;
  uint64_t v37 = &v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat];
  uint64_t v38 = swift_beginAccess();
  double v41 = v23 * v25;
  if (v23 * v25 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v41 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((*(void *)&v41 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_38;
  }
  double v42 = *(double *)(v0 + 312) * *(double *)(v0 + 304);
  if ((*(void *)&v42 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_38;
  }
  if (v42 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v42 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    return MEMORY[0x270FA2498](v38, v39, v40);
  }
  id v43 = objc_msgSend(v36, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(void *)v37, (uint64_t)v41, (uint64_t)v42, 0);
  *(void *)(v0 + 432) = v43;
  objc_msgSend(v43, sel_setStorageMode_, 0);
  objc_msgSend(v43, sel_setUsage_, 7);
  id v44 = objc_msgSend(*(id *)&v29[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context], sel_newTextureWithDescriptor_, v43);
  *(void *)(v0 + 440) = v44;
  if (v44)
  {
    id v45 = v44;
    id v46 = objc_allocWithZone(MEMORY[0x263F129A0]);
    swift_unknownObjectRetain();
    id v47 = objc_msgSend(v46, sel_init);
    *(void *)(v0 + 448) = v47;
    id v48 = objc_msgSend(v47, sel_colorAttachments);
    id v49 = objc_msgSend(v48, sel_objectAtIndexedSubscript_, 0);
    *(void *)(v0 + 456) = v49;

    if (!v49) {
      return sub_255C81248();
    }
    char v50 = *(void **)(v0 + 328);
    double v51 = *(double *)(v0 + 320);
    objc_msgSend(v49, sel_setTexture_, v45);
    objc_msgSend(v49, sel_setLoadAction_, 2);
    objc_msgSend(v49, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);
    float v52 = v51;
    sub_255B64BF0(v50, v52);
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v53;
    *uint64_t v53 = v0;
    v53[1] = sub_255B65CE0;
    v53[17] = v47;
    v53[18] = v29;
    uint64_t v38 = (uint64_t)sub_255B667CC;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    return MEMORY[0x270FA2498](v38, v39, v40);
  }
  sub_255B69768();
  swift_allocError();
  void *v61 = 5;
  swift_willThrow();

  sub_255B697BC(v17, v18, v19, v20);
  uint64_t v62 = sub_255C7D7F8();
  sub_255C7D838();
  os_signpost_type_t v63 = sub_255C80CB8();
  if (sub_255C80E68())
  {
    uint64_t v64 = *(void *)(v0 + 192);
    uint64_t v65 = *(void *)(v0 + 160);
    uint64_t v66 = *(void *)(v0 + 168);
    swift_retain();
    sub_255C7D868();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v66 + 88))(v64, v65) == *MEMORY[0x263F90238])
    {
      uint64_t v67 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 160));
      uint64_t v67 = "";
    }
    uint64_t v78 = *(void *)(v0 + 272);
    uint64_t v79 = *(void *)(v0 + 248);
    uint64_t v80 = *(void *)(v0 + 216);
    v84(v78, v79, v80);
    char v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v81 = 0;
    os_signpost_id_t v82 = sub_255C7D7B8();
    _os_signpost_emit_with_name_impl(&dword_255A00000, v62, v63, v82, "Backdrop Snapshot Generation", v67, v81, 2u);
    MEMORY[0x25A297C00](v81, -1, -1);

    v85(v79, v80);
    v85(v78, v80);
  }
  else
  {
    uint64_t v71 = *(void *)(v0 + 248);
    uint64_t v72 = *(void *)(v0 + 216);

    v85(v71, v72);
  }
LABEL_33:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
  return v83();
}

uint64_t sub_255B65CE0()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_255B664D8;
  }
  else {
    uint64_t v2 = sub_255B65DF4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_255B65DF4()
{
  uint64_t v1 = *(void *)(v0 + 440);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F178);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_255C83400;
  os_signpost_type_t v3 = (void *)*MEMORY[0x263F008F0];
  *(void *)(inited + 32) = *MEMORY[0x263F008F0];
  id v4 = v3;
  CGColorSpaceRef DeviceRGB = CGColorSpaceCreateDeviceRGB();
  type metadata accessor for CGColorSpace(0);
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 40) = DeviceRGB;
  sub_255A18DE8(inited);
  id v7 = objc_allocWithZone(MEMORY[0x263F00650]);
  type metadata accessor for CIImageOption(0);
  sub_255B6ACAC((unint64_t *)&unk_26B29F0E0, type metadata accessor for CIImageOption);
  swift_unknownObjectRetain();
  unint64_t v8 = (void *)sub_255C80448();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithMTLTexture_options_, v1, v8);
  swift_unknownObjectRelease();

  os_signpost_id_t v10 = *(void **)(v0 + 432);
  uint64_t v11 = *(void *)(v0 + 400);
  uint64_t v12 = *(void **)(v0 + 408);
  uint64_t v13 = *(void *)(v0 + 392);
  if (v9)
  {
    uint64_t v52 = *(void *)(v0 + 384);
    uint64_t v14 = *(void **)(v0 + 424);
    uint64_t v15 = *(void **)(v0 + 448);
    double v16 = *(void **)(v0 + 456);
    id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_initWithCIImage_scale_orientation_, v9, 4, *(double *)(v0 + 312));

    swift_unknownObjectRelease_n();
    sub_255B697BC(v52, v13, v11, v12);
    uint64_t v17 = sub_255C7D7F8();
    sub_255C7D838();
    os_signpost_type_t v18 = sub_255C80CB8();
    if (sub_255C80E68())
    {
      uint64_t v19 = *(void *)(v0 + 208);
      uint64_t v20 = *(void *)(v0 + 160);
      uint64_t v21 = *(void *)(v0 + 168);
      swift_retain();
      sub_255C7D868();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v21 + 88))(v19, v20) == *MEMORY[0x263F90238])
      {
        char v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 160));
        char v22 = "";
      }
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
      uint64_t v34 = (void *)(v0 + 272);
      uint64_t v39 = *(void *)(v0 + 264);
      uint64_t v40 = *(void *)(v0 + 216);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 344))(*(void *)(v0 + 272), v39, v40);
      double v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v41 = 0;
      os_signpost_id_t v42 = sub_255C7D7B8();
      _os_signpost_emit_with_name_impl(&dword_255A00000, v17, v18, v42, "Backdrop Snapshot Generation", v22, v41, 2u);
      MEMORY[0x25A297C00](v41, -1, -1);

      v38(v39, v40);
    }
    else
    {
      uint64_t v34 = (void *)(v0 + 264);
    }
    (*(void (**)(void, void))(v0 + 368))(*v34, *(void *)(v0 + 216));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v43 = *(uint64_t (**)(id))(v0 + 8);
    return v43(v54);
  }
  else
  {
    uint64_t v53 = *(void **)(v0 + 408);
    double v23 = *(void **)(v0 + 424);
    uint64_t v24 = *(void *)(v0 + 384);
    double v25 = *(void **)(v0 + 448);
    double v26 = *(void **)(v0 + 456);
    sub_255B69768();
    swift_allocError();
    *id v27 = 6;
    swift_willThrow();

    swift_unknownObjectRelease_n();
    sub_255B697BC(v24, v13, v11, v53);
    id v28 = sub_255C7D7F8();
    sub_255C7D838();
    os_signpost_type_t v29 = sub_255C80CB8();
    if (sub_255C80E68())
    {
      os_signpost_type_t v55 = v29;
      uint64_t v30 = *(void *)(v0 + 200);
      uint64_t v32 = *(void *)(v0 + 160);
      uint64_t v31 = *(void *)(v0 + 168);
      swift_retain();
      sub_255C7D868();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v31 + 88))(v30, v32) == *MEMORY[0x263F90238])
      {
        uint64_t v33 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 160));
        uint64_t v33 = "";
      }
      id v45 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
      uint64_t v46 = *(void *)(v0 + 272);
      uint64_t v47 = *(void *)(v0 + 256);
      uint64_t v48 = *(void *)(v0 + 216);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 344))(v46, v47, v48);
      id v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v49 = 0;
      os_signpost_id_t v50 = sub_255C7D7B8();
      _os_signpost_emit_with_name_impl(&dword_255A00000, v28, v55, v50, "Backdrop Snapshot Generation", v33, v49, 2u);
      MEMORY[0x25A297C00](v49, -1, -1);

      v45(v47, v48);
      v45(v46, v48);
    }
    else
    {
      id v35 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
      uint64_t v36 = *(void *)(v0 + 256);
      uint64_t v37 = *(void *)(v0 + 216);

      v35(v36, v37);
    }
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v51 = *(uint64_t (**)(void))(v0 + 8);
    return v51();
  }
}

uint64_t sub_255B664D8()
{
  uint64_t v1 = *(void **)(v0 + 448);
  uint64_t v2 = *(void **)(v0 + 432);
  os_signpost_type_t v3 = *(void **)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 400);
  id v4 = *(void **)(v0 + 408);
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 392);

  swift_unknownObjectRelease_n();
  sub_255B697BC(v7, v6, v5, v4);
  unint64_t v8 = sub_255C7D7F8();
  sub_255C7D838();
  os_signpost_type_t v9 = sub_255C80CB8();
  if (sub_255C80E68())
  {
    os_signpost_type_t v25 = v9;
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 160);
    swift_retain();
    sub_255C7D868();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v11, v12) == *MEMORY[0x263F90238])
    {
      uint64_t v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
      uint64_t v13 = "";
    }
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v18 = *(void *)(v0 + 272);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v20 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 344))(v18, v19, v20);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_signpost_id_t v22 = sub_255C7D7B8();
    _os_signpost_emit_with_name_impl(&dword_255A00000, v8, v25, v22, "Backdrop Snapshot Generation", v13, v21, 2u);
    MEMORY[0x25A297C00](v21, -1, -1);

    v17(v19, v20);
    v17(v18, v20);
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 216);

    v14(v15, v16);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_255B667AC(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return MEMORY[0x270FA2498](sub_255B667CC, 0, 0);
}

uint64_t sub_255B667CC()
{
  uint64_t v1 = *(void *)(v0[18] + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 8);
  v0[16] = &unk_2704BE878;
  v0[19] = v1;
  uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
  if (v2)
  {
    os_signpost_type_t v3 = (void *)v2;
    swift_unknownObjectRetain();
    objc_msgSend(v3, sel_setBackgroundGPUPriority_, 2);
    id v4 = objc_msgSend(v3, sel_commandBuffer);
    v0[20] = v4;
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v7 = (void *)v0[17];
      uint64_t v6 = v0[18];
      uint64_t v8 = v6 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers;
      uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
      uint64_t v10 = v6 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
      swift_beginAccess();
      sub_255B68488(v5, v10);
      swift_endAccess();
      uint64_t v11 = *(void *)(v8 + 8);
      *(void *)(v11 + 152) = *(void *)(v9 + 40);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_255B68AC0(v5, v10);
      swift_endAccess();
      *(void *)(*(void *)(v8 + 16) + 32) = *(void *)(v11 + 168);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_255B67338(v5, v10, v7);
      swift_endAccess();
      return MEMORY[0x270FA2498](sub_255B66A48, 0, 0);
    }
    sub_255B69768();
    swift_allocError();
    void *v13 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_255B69768();
    swift_allocError();
    *uint64_t v12 = 3;
    swift_willThrow();
  }
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_255B66A48()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  os_signpost_type_t v3 = v0 + 2;
  id v4 = v0 + 10;
  uint64_t v5 = (void *)v0[20];
  v1[2] = v2;
  v1[3] = sub_255B66B98;
  uint64_t v6 = swift_continuation_init();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  v1[14] = sub_255B6A894;
  v1[15] = v7;
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 1107296256;
  v1[12] = sub_255B4FEFC;
  v1[13] = &block_descriptor_16;
  uint64_t v8 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v5, sel_addCompletedHandler_, v8);
  _Block_release(v8);
  objc_msgSend(v5, sel_commit);
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_255B66B98()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_255B66D20;
  }
  else
  {
    uint64_t v2 = sub_255B66CB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_255B66CB4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255B66D20()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255B66D8C()
{
  uint64_t v0 = sub_255C7D818();
  __swift_allocate_value_buffer(v0, qword_26B2AA618);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA618);
  return sub_255C7D808();
}

Swift::Void __swiftcall Backdrop.CompositeRenderer.mtkView(_:drawableSizeWillChange:)(MTKView *_, CGSize drawableSizeWillChange)
{
  double height = drawableSizeWillChange.height;
  double width = drawableSizeWillChange.width;
  id v4 = [(MTKView *)_ traitCollection];
  objc_msgSend(v4, sel_displayScale);
  double v6 = v5;

  sub_255B64F14(width, height, v6);
}

Swift::Void __swiftcall Backdrop.CompositeRenderer.draw(in:)(MTKView *in)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  swift_beginAccess();
  if ((*v3 & 1) == 0)
  {
    id v4 = [(MTKView *)in layer];
    self;
    double v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      unsigned int v6 = objc_msgSend(v5, sel_isDrawableAvailable);

      if (v6)
      {
        float v7 = UIAccessibilityIsReduceMotionEnabled() ? 0.0016667 : 0.016667;
        id v8 = [(MTKView *)in traitCollection];
        sub_255B64BF0(v8, v7);

        id v9 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 8), sel_commandBuffer);
        if (v9)
        {
          uint64_t v10 = v9;
          uint64_t v11 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers;
          uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
          uint64_t v13 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
          swift_beginAccess();
          sub_255B68488(v10, v13);
          swift_endAccess();
          uint64_t v14 = *(void *)(v11 + 8);
          *(void *)(v14 + 152) = *(void *)(v12 + 40);
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          swift_beginAccess();
          sub_255B68AC0(v10, v13);
          swift_endAccess();
          *(void *)(*(void *)(v11 + 16) + 32) = *(void *)(v14 + 168);
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          uint64_t v15 = [(MTKView *)in currentRenderPassDescriptor];
          swift_beginAccess();
          sub_255B67338(v10, v13, v15);
          swift_endAccess();

          id v16 = [(MTKView *)in currentDrawable];
          if (v16)
          {
            objc_msgSend(v10, sel_presentDrawable_, v16);
            swift_unknownObjectRelease();
          }
          objc_msgSend(v10, sel_commit);
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
    }
  }
}

uint64_t sub_255B67228(uint64_t a1, char a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  float v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(void *)(v2 + 16) = 80;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 104) = 0;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = 0;
  *(void *)(v2 + 112) = v4;
  *(void *)(v2 + 120) = v5;
  *(void *)(v2 + 128) = v6;
  *(void *)(v2 + 136) = v7;
  *(void *)(v2 + 144) = v8;
  *(unsigned char *)(v2 + 152) = v9;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v10 = v7;
  *(void *)(v2 + 40) = sub_255B6A89C(1, v4);
  *(void *)(v2 + 48) = v11;
  *(void *)(v2 + 56) = v12;
  *(void *)(v2 + 64) = v13;
  swift_unknownObjectRetain();
  uint64_t v14 = sub_255B6A89C(0, v4);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v2 + 72) = v14;
  *(void *)(v2 + 80) = v16;
  *(void *)(v2 + 88) = v18;
  *(void *)(v2 + 96) = v20;
  *(unsigned char *)(v2 + 24) = a2;
  *(void *)(v2 + 160) = sub_255B6772C();
  swift_unknownObjectRelease();
  return v2;
}

void sub_255B67338(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(v3 + 160);
  if (v4)
  {
    uint64_t v5 = 88;
    if (*(unsigned char *)(v3 + 104)) {
      uint64_t v5 = 56;
    }
    uint64_t v6 = *(void *)(v3 + v5);
    if (v6)
    {
      uint64_t v7 = 96;
      if (*(unsigned char *)(v3 + 104)) {
        uint64_t v7 = 64;
      }
      uint64_t v8 = *(void *)(v3 + v7);
      if (v8)
      {
        uint64_t v9 = *(void *)(v3 + 32);
        if (v9)
        {
          if (a3)
          {
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            id v17 = a3;
            id v13 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_);
            if (v13)
            {
              uint64_t v14 = v13;
              uint64_t v15 = (void *)sub_255C805F8();
              objc_msgSend(v14, sel_setLabel_, v15);

              objc_msgSend(v14, sel_setRenderPipelineState_, v4);
              objc_msgSend(v14, sel_setVertexBuffer_offset_atIndex_, v6, 0, 0);
              objc_msgSend(v14, sel_setVertexBytes_length_atIndex_, a2, 368, 1);
              objc_msgSend(v14, sel_setFragmentBytes_length_atIndex_, a2, 368, 1);
              objc_msgSend(v14, sel_setFragmentTexture_atIndex_, v9, 0);
              uint64_t v16 = 80;
              if (*(unsigned char *)(v3 + 104)) {
                uint64_t v16 = 48;
              }
              objc_msgSend(v14, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, *(void *)(*(void *)(v3 + v16) + 16), 0, v8, 0, 1);
              objc_msgSend(v14, sel_endEncoding);
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

              swift_unknownObjectRelease();
            }
            else
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
            }
          }
        }
      }
    }
  }
}

id sub_255B675C4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {
    id v2 = *(id *)(v0 + 168);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v9 = *(void **)(v0 + 136);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v4 = v9;
    id v5 = sub_255C19970();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void **)(v3 + 168);
    *(void *)(v3 + 168) = v5;
    id v2 = v5;

    uint64_t v1 = 0;
  }
  id v7 = v1;
  return v2;
}

id sub_255B6772C()
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v1 = sub_255B675C4();
  if (qword_26B29F5B8 != -1) {
    swift_once();
  }
  objc_msgSend(v1, sel_setVertexDescriptor_, qword_26B2AA740);
  id v2 = objc_msgSend(v1, sel_colorAttachments);
  id v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (!v3)
  {
    sub_255C80BE8();
    sub_255A43740(0, (unint64_t *)&qword_26B29F380);
    id v7 = (void *)sub_255C80E78();
    sub_255C7D788();

    return 0;
  }
  objc_msgSend(v3, sel_setPixelFormat_, *(void *)(v0 + 16));
  id v4 = *(void **)(v0 + 112);
  id v16 = 0;
  id v5 = objc_msgSend(v4, sel_newRenderPipelineStateWithDescriptor_error_, v1, &v16);
  id v6 = v16;
  if (!v5)
  {
    uint64_t v8 = v6;
    uint64_t v9 = (void *)sub_255C7D4D8();

    swift_willThrow();
    id v19 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
    sub_255A43740(0, (unint64_t *)&qword_269F24C10);
    swift_dynamicCast();
    id v10 = v18;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_255C83400;
    id v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    id v16 = (id)0xD00000000000001FLL;
    unint64_t v17 = 0x8000000255C9FE00;
    id v12 = objc_msgSend(v10, sel_description);
    sub_255C80628();

    sub_255C806E8();
    swift_bridgeObjectRelease();
    id v13 = v16;
    unint64_t v14 = v17;
    *(void *)(v11 + 56) = MEMORY[0x263F8D310];
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v14;
    sub_255C81558();

    swift_bridgeObjectRelease();
    return 0;
  }

  return v5;
}

uint64_t sub_255B67A28()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_255B67AD4()
{
  sub_255B67A28();

  return swift_deallocClassInstance();
}

void *sub_255B67B08(long long *a1)
{
  long long v12 = a1[1];
  long long v13 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  *(void *)(v1 + 16) = 115;
  *(int64x2_t *)(v1 + 24) = vdupq_n_s64(0x4060000000000000uLL);
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  *(void *)(v1 + 112) = 0;
  if (qword_26B29F5C0 != -1) {
    swift_once();
  }
  *(void *)(v1 + 120) = qword_26B2AA750;
  uint64_t v4 = qword_26B29F5A8;
  id result = (void *)swift_bridgeObjectRetain();
  if (v4 != -1)
  {
    swift_once();
    id result = *(void **)(v1 + 120);
  }
  uint64_t v6 = qword_26B2AA738;
  *(void *)(v1 + 128) = qword_26B2AA738;
  *(void *)(v1 + 160) = 0;
  *(void *)(v1 + 168) = 0;
  *(void *)(v1 + 152) = 0;
  *(_OWORD *)(v1 + 48) = v13;
  *(_OWORD *)(v1 + 64) = v12;
  *(void *)(v1 + 80) = v2;
  *(unsigned char *)(v1 + 88) = v3;
  unint64_t v7 = result[2];
  if (v7 >> 57)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v7 << 6;
    uint64_t v9 = (char *)(result + 4);
    swift_bridgeObjectRetain();
    id result = objc_msgSend((id)v13, sel_newBufferWithBytes_length_options_, v9, v8, 0);
    *(void *)(v1 + 136) = result;
    uint64_t v10 = *(void *)(v6 + 16);
    if (v10 + 0x4000000000000000 >= 0)
    {
      *(void *)(v1 + 144) = objc_msgSend((id)v13, sel_newBufferWithBytes_length_options_, v6 + 32, 2 * v10, 0);
      *(void *)(v1 + 160) = sub_255B67F6C();
      swift_unknownObjectRelease();
      uint64_t v11 = (void *)swift_unknownObjectRetain();
      sub_255B682F4(v11);
      swift_unknownObjectRelease();
      return (void *)v1;
    }
  }
  __break(1u);
  return result;
}

id sub_255B67CB4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  if (v1)
  {
    id v2 = *(id *)(v0 + 152);
  }
  else
  {
    char v3 = (void *)sub_255B67D0C();
    uint64_t v4 = *(void **)(v0 + 152);
    *(void *)(v0 + 152) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_255B67D0C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v3 = v2;
  id v4 = sub_255C19970();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v5 = objc_msgSend(v4, sel_colorAttachments);
  id v6 = objc_msgSend(v5, sel_objectAtIndexedSubscript_, 0);

  if (v6)
  {
    objc_msgSend(v6, sel_setPixelFormat_, *(void *)(v1 + 16));
    if (qword_26B29F5B8 != -1) {
      swift_once();
    }
    objc_msgSend(v4, sel_setVertexDescriptor_, qword_26B2AA740);

    return (uint64_t)v4;
  }
  else
  {
    sub_255C810E8();
    sub_255C806E8();
    id v8 = objc_msgSend(v4, sel_description);
    sub_255C80628();

    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_255C81248();
    __break(1u);
  }
  return result;
}

id sub_255B67F6C()
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = sub_255B67CB4();
  id v13 = 0;
  id v3 = objc_msgSend(v1, sel_newRenderPipelineStateWithDescriptor_error_, v2, &v13);

  id v4 = v13;
  if (!v3)
  {
    id v5 = v4;
    id v6 = (void *)sub_255C7D4D8();

    swift_willThrow();
    id v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
    sub_255A43740(0, (unint64_t *)&qword_269F24C10);
    swift_dynamicCast();
    unint64_t v7 = v15;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_255C83400;
    id v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    id v13 = (id)0xD00000000000001FLL;
    unint64_t v14 = 0x8000000255C9FE00;
    id v9 = objc_msgSend(v7, sel_description);
    sub_255C80628();

    sub_255C806E8();
    swift_bridgeObjectRelease();
    id v10 = v13;
    unint64_t v11 = v14;
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v11;
    sub_255C81558();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_255B68154()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F129A0]), sel_init);
  id v2 = objc_msgSend(v1, sel_colorAttachments);
  id v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (v3)
  {
    objc_msgSend(v3, sel_setTexture_, *(void *)(v0 + 40));
    objc_msgSend(v3, sel_setLoadAction_, 2);
    objc_msgSend(v3, sel_setStoreAction_, 1);
    objc_msgSend(v3, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v1;
  }
  else
  {
    sub_255C810E8();
    sub_255C806E8();
    id v5 = objc_msgSend(v1, sel_description);
    sub_255C80628();

    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_255C81248();
    __break(1u);
  }
  return result;
}

void sub_255B682F4(void *a1)
{
  double v2 = *(double *)(v1 + 24);
  if (v2 <= 0.0) {
    return;
  }
  double v3 = *(double *)(v1 + 32);
  if (v3 <= 0.0) {
    return;
  }
  if (v2 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((*(void *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_17;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v6 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(void *)(v1 + 16), (uint64_t)v2, (uint64_t)v3, 0);
  objc_msgSend(v6, sel_setStorageMode_, 0);
  objc_msgSend(v6, sel_setUsage_, 7);
  *(void *)(v1 + 40) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
  swift_unknownObjectRelease();
  *(void *)(v1 + 112) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
  swift_unknownObjectRelease();
  uint64_t v7 = sub_255B68154();

  uint64_t v8 = *(void **)(v1 + 168);
  *(void *)(v1 + 168) = v7;
}

void sub_255B68488(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 160);
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 136);
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + 144);
      if (v5)
      {
        uint64_t v6 = *(void *)(v2 + 96);
        if (v6)
        {
          if (*(unsigned char *)(v2 + 104) == 1 && (uint64_t v9 = *(void *)(v2 + 40)) != 0 && (v10 = *(void *)(v2 + 112)) != 0)
          {
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            id v11 = objc_msgSend(a1, sel_blitCommandEncoder);
            if (v11)
            {
              long long v12 = v11;
              objc_msgSend(v11, sel_copyFromTexture_toTexture_, v9, v10);
              *(unsigned char *)(v2 + 104) = 0;
              objc_msgSend(v12, sel_endEncoding);
              swift_unknownObjectRelease();
            }
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            if (*(void *)(v2 + 168))
            {
LABEL_17:
              id v13 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_);
              if (v13)
              {
                unint64_t v14 = v13;
                uint64_t v15 = (void *)sub_255C805F8();
                objc_msgSend(v14, sel_setLabel_, v15);

                objc_msgSend(v14, sel_setRenderPipelineState_, v3);
                objc_msgSend(v14, sel_setVertexBuffer_offset_atIndex_, v4, 0, 0);
                objc_msgSend(v14, sel_setVertexBytes_length_atIndex_, a2, 368, 1);
                objc_msgSend(v14, sel_setFragmentTexture_atIndex_, v6, 0);
                objc_msgSend(v14, sel_setFragmentTexture_atIndex_, *(void *)(v2 + 112), 1);
                objc_msgSend(v14, sel_setFragmentBytes_length_atIndex_, a2, 368, 1);
                objc_msgSend(v14, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, *(void *)(*(void *)(v2 + 128) + 16), 0, v5, 0, 1);
                objc_msgSend(v14, sel_endEncoding);
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                return;
              }
            }
          }
          else
          {
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (*(void *)(v2 + 168)) {
              goto LABEL_17;
            }
          }
          sub_255C80BE8();
          sub_255A43740(0, (unint64_t *)&qword_26B29F380);
          id v16 = (id)sub_255C80E78();
          sub_255C7D788();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_11;
        }
      }
    }
  }
  sub_255C80BC8();
  sub_255A43740(0, (unint64_t *)&qword_26B29F380);
  id v16 = (id)sub_255C80E78();
  sub_255C7D788();
LABEL_11:
}

id *sub_255B68850()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_255B688EC()
{
  sub_255B68850();

  return swift_deallocClassInstance();
}

uint64_t sub_255B68920(uint64_t a1)
{
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  *(void *)(v1 + 16) = 115;
  *(_DWORD *)(v1 + 24) = 1117782016;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0x3FF0000000000000;
  *(_OWORD *)(v1 + 72) = v2;
  *(void *)(v1 + 88) = v3;
  *(unsigned char *)(v1 + 96) = v4;
  if (qword_26B29F5C0 != -1) {
    swift_once();
  }
  *(void *)(v1 + 104) = qword_26B2AA750;
  uint64_t v5 = qword_26B29F5A8;
  uint64_t result = swift_bridgeObjectRetain();
  if (v5 != -1)
  {
    swift_once();
    uint64_t result = *(void *)(v1 + 104);
  }
  *(void *)(v1 + 112) = qword_26B2AA738;
  unint64_t v7 = *(void *)(result + 16);
  if (v7 >> 57)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v7 << 6;
    uint64_t v9 = *(void **)(v1 + 56);
    uint64_t v10 = result + 32;
    swift_bridgeObjectRetain();
    *(void *)(v1 + 120) = objc_msgSend(v9, sel_newBufferWithBytes_length_options_, v10, v8, 0);
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v11 = *(void *)(v1 + 112);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12 + 0x4000000000000000 >= 0)
    {
      *(void *)(v1 + 128) = objc_msgSend(*(id *)(v1 + 56), sel_newBufferWithBytes_length_options_, v11 + 32, 2 * v12, 0);
      swift_unknownObjectRelease();
      *(void *)(v1 + 136) = sub_255B69018();
      swift_unknownObjectRelease();
      return v1;
    }
  }
  __break(1u);
  return result;
}

void sub_255B68AC0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2[17];
  if (v3 && (uint64_t v4 = v2[15]) != 0 && (v5 = v2[16]) != 0 && (v6 = v2[20]) != 0 && (v7 = v2[21]) != 0)
  {
    uint64_t v8 = v2[18];
    if (v8)
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v11 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_, v8);
      if (v11)
      {
        uint64_t v12 = v11;
        id v13 = (void *)sub_255C805F8();
        objc_msgSend(v12, sel_setLabel_, v13);

        objc_msgSend(v12, sel_setRenderPipelineState_, v3);
        objc_msgSend(v12, sel_setVertexBuffer_offset_atIndex_, v4, 0, 0);
        objc_msgSend(v12, sel_setVertexBytes_length_atIndex_, a2, 368, 1);
        objc_msgSend(v12, sel_setFragmentBytes_length_atIndex_, a2, 368, 1);
        objc_msgSend(v12, sel_setFragmentTexture_atIndex_, v2[19], 0);
        objc_msgSend(v12, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, *(void *)(v2[14] + 16), 0, v5, 0, 3);
        objc_msgSend(v12, sel_endEncoding);
        unint64_t v14 = (void *)v2[22];
        if (v14)
        {
          id v15 = v14;
          objc_msgSend(v15, sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, a1, v6, v7);
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_255C80BE8();
    sub_255A43740(0, (unint64_t *)&qword_26B29F380);
    id v16 = (id)sub_255C80E78();
    sub_255C7D788();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_255C80BC8();
    sub_255A43740(0, (unint64_t *)&qword_26B29F380);
    id v16 = (id)sub_255C80E78();
    sub_255C7D788();
  }
}

uint64_t sub_255B68E1C()
{
  uint64_t v1 = v0;
  uint64_t v7 = *(void **)(v0 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v2 = v7;
  id v3 = sub_255C19970();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v4 = objc_msgSend(v3, sel_colorAttachments);
  id v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, 0);

  if (v5)
  {
    objc_msgSend(v5, sel_setPixelFormat_, *(void *)(v1 + 16));
    objc_msgSend(v5, sel_setBlendingEnabled_, 0);
    if (qword_26B29F5B8 != -1) {
      swift_once();
    }
    objc_msgSend(v3, sel_setVertexDescriptor_, qword_26B2AA740);

    return (uint64_t)v3;
  }
  else
  {
    uint64_t result = sub_255C81248();
    __break(1u);
  }
  return result;
}

id sub_255B69018()
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = (void *)sub_255B68E1C();
  id v13 = 0;
  id v3 = objc_msgSend(v1, sel_newRenderPipelineStateWithDescriptor_error_, v2, &v13);

  id v4 = v13;
  if (!v3)
  {
    id v5 = v4;
    uint64_t v6 = (void *)sub_255C7D4D8();

    swift_willThrow();
    id v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
    sub_255A43740(0, (unint64_t *)&qword_269F24C10);
    swift_dynamicCast();
    uint64_t v7 = v15;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_255C83400;
    id v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    id v13 = (id)0xD00000000000001FLL;
    unint64_t v14 = 0x8000000255C9FE00;
    id v9 = objc_msgSend(v7, sel_description);
    sub_255C80628();

    sub_255C806E8();
    swift_bridgeObjectRelease();
    id v10 = v13;
    unint64_t v11 = v14;
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v11;
    sub_255C81558();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_255B69200()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F129A0]), sel_init);
  id v2 = objc_msgSend(v1, sel_colorAttachments);
  id v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (v3)
  {
    objc_msgSend(v3, sel_setTexture_, *(void *)(v0 + 160));
    objc_msgSend(v3, sel_setLoadAction_, 2);
    objc_msgSend(v3, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v1;
  }
  else
  {
    sub_255C810E8();
    sub_255C806E8();
    id v5 = objc_msgSend(v1, sel_description);
    sub_255C80628();

    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_255C81248();
    __break(1u);
  }
  return result;
}

void sub_255B6938C(void *a1)
{
  double v2 = *(double *)(v1 + 32);
  if (v2 > 0.0)
  {
    double v3 = *(double *)(v1 + 40);
    if (v3 > 0.0)
    {
      if (v2 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v2 < 9.22337204e18)
      {
        if ((*(void *)&v2 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(void *)&v3 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v3 > -9.22337204e18)
          {
            if (v3 < 9.22337204e18)
            {
              id v6 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(void *)(v1 + 16), (uint64_t)v2 / 4, (uint64_t)v3 / 4, 0);
              objc_msgSend(v6, sel_setStorageMode_, 0);
              objc_msgSend(v6, sel_setUsage_, 7);
              *(void *)(v1 + 160) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
              swift_unknownObjectRelease();
              *(void *)(v1 + 168) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
              swift_unknownObjectRelease();
              uint64_t v7 = sub_255B69200();

              uint64_t v8 = *(void **)(v1 + 144);
              *(void *)(v1 + 144) = v7;

              return;
            }
LABEL_21:
            __break(1u);
            return;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      __break(1u);
      goto LABEL_19;
    }
  }
  *(void *)(v1 + 160) = 0;
  swift_unknownObjectRelease();
  *(void *)(v1 + 168) = 0;

  swift_unknownObjectRelease();
}

id sub_255B69564()
{
  float v1 = *(double *)(v0 + 48);
  float v2 = *(float *)(v0 + 24) / (float)(4.0 / v1);
  double v3 = *(void **)(v0 + 176);
  if (!v3 || (id result = objc_msgSend(v3, sel_sigma), v2 != v5))
  {
    uint64_t v6 = *(void *)(v0 + 56);
    id v7 = objc_allocWithZone(MEMORY[0x263F13288]);
    *(float *)&double v8 = v2;
    *(void *)(v0 + 176) = objc_msgSend(v7, sel_initWithDevice_sigma_, v6, v8);
    return (id)MEMORY[0x270F9A758]();
  }
  return result;
}

id *sub_255B69608()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_255B696A4()
{
  sub_255B69608();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Backdrop.TextureBlender()
{
  return self;
}

uint64_t type metadata accessor for Backdrop.RotatingArtworkRenderer()
{
  return self;
}

uint64_t type metadata accessor for Backdrop.PinchRenderer()
{
  return self;
}

uint64_t type metadata accessor for Backdrop.CompositeRenderer()
{
  return self;
}

unint64_t sub_255B69768()
{
  unint64_t result = qword_269F250F8;
  if (!qword_269F250F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F250F8);
  }
  return result;
}

void sub_255B697BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
}

unint64_t sub_255B69820()
{
  unint64_t result = qword_269F25108;
  if (!qword_269F25108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25108);
  }
  return result;
}

uint64_t sub_255B69874@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  uint64_t result = MEMORY[0x25A297D40](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_255B698D0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_255B69934@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state, a2);
}

uint64_t sub_255B69940(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return sub_255B623C0(&v2);
}

uint64_t sub_255B69978@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat, a2);
}

uint64_t sub_255B69984(uint64_t *a1)
{
  return sub_255B624CC(*a1);
}

uint64_t sub_255B699AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat, a2);
}

uint64_t keypath_get_7Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  id v4 = (void *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

void sub_255B69A08(uint64_t *a1)
{
}

uint64_t sub_255B69A30@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  uint64_t result = swift_beginAccess();
  *a2 = *(float *)(*(void *)v3 + 64) == 1.0;
  return result;
}

double sub_255B69A94(unsigned __int8 *a1, void *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  float v4 = 0.2;
  if (v2) {
    float v4 = 1.0;
  }
  *(float *)(*(void *)v3 + 64) = v4;
  *(void *)&double result = sub_255B63A50().n128_u64[0];
  return result;
}

uint64_t sub_255B69B0C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused, a2);
}

uint64_t sub_255B69B18(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

id sub_255B69B68@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v2 = *(void **)(*a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  *a2 = v2;
  return v2;
}

id sub_255B69B84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  float v4 = *(void **)(*(void *)v3 + 16);
  *a2 = v4;

  return v4;
}

uint64_t sub_255B69BF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

ValueMetadata *type metadata accessor for Backdrop()
{
  return &type metadata for Backdrop;
}

uint64_t dispatch thunk of BackdropObserver.didChangeState(renderer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unsigned char *storeEnumTagSinglePayload for Backdrop.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255B69D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.State()
{
  return &type metadata for Backdrop.State;
}

uint64_t method lookup function for Backdrop.CompositeRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Backdrop.CompositeRenderer);
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.observer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.observer.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.observer.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.state.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.colorPixelFormat.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.colorPixelFormat.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.colorPixelFormat.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isPaused.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isPaused.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isPaused.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.preferredFramesPerSecond(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.image.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.image.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.image.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.setImage(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.setPlaceholderColor(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.analyzer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x200))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.analyzer.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x208))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.analyzer.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x210))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.__allocating_init(context:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 536))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.spectrumAnalysis.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x2F0))();
}

uint64_t destroy for Backdrop.PinchRenderer.MeshModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void *initializeWithCopy for Backdrop.PinchRenderer.MeshModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for Backdrop.PinchRenderer.MeshModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for Backdrop.PinchRenderer.MeshModel(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Backdrop.PinchRenderer.MeshModel()
{
  return &type metadata for Backdrop.PinchRenderer.MeshModel;
}

ValueMetadata *type metadata accessor for Backdrop.Specs()
{
  return &type metadata for Backdrop.Specs;
}

uint64_t getEnumTagSinglePayload for Backdrop.Specs.Environment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[12]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Backdrop.Specs.Environment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.Specs.Environment()
{
  return &type metadata for Backdrop.Specs.Environment;
}

void *initializeBufferWithCopyOfBuffer for Backdrop.Error(void *a1, void **a2)
{
  unsigned int v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    BOOL v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for Backdrop.Error(void **a1)
{
  float v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void **assignWithCopy for Backdrop.Error(void **a1, void **a2)
{
  unsigned int v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    BOOL v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = v7;
      id v10 = v7;
      return a1;
    }
LABEL_12:
    *a1 = v7;
    return a1;
  }
  if (v8 > 1)
  {

    id v7 = *a2;
    goto LABEL_12;
  }
  *a1 = v7;
  id v9 = v7;

  return a1;
}

void **assignWithTake for Backdrop.Error(void **a1, void **a2)
{
  unsigned int v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    BOOL v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for Backdrop.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483641);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 7) {
    return (v3 - 6);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Backdrop.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 6;
    }
  }
  return result;
}

uint64_t sub_255B6A824(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_255B6A844(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.Error()
{
  return &type metadata for Backdrop.Error;
}

uint64_t sub_255B6A884()
{
  return swift_deallocObject();
}

uint64_t sub_255B6A894()
{
  return swift_continuation_throwingResume();
}

void *sub_255B6A89C(char a1, void *a2)
{
  sub_255B31220(a1, &v28);
  uint64_t v2 = v30;
  uint64_t v3 = v31;
  uint64_t v4 = *(void *)(v28 + 16);
  uint64_t v5 = v28;
  uint64_t v6 = *(void *)(v29 + 16);
  uint64_t v7 = v29;
  sub_255C80628();
  id v8 = objc_allocWithZone(MEMORY[0x263F15810]);
  id v9 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithVertexCount_vertices_faceCount_faces_depthNormalization_, v4, v5 + 32, v6, v7 + 32, v9);

  id v11 = objc_msgSend(v10, sel_subdividedMesh_, 2);
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v13 = *(void *)(v3 + 16);
  sub_255C80628();
  id v14 = objc_allocWithZone(MEMORY[0x263F15810]);
  id v15 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithVertexCount_vertices_faceCount_faces_depthNormalization_, v12, v2 + 32, v13, v3 + 32, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v17 = objc_msgSend(v16, sel_subdividedMesh_, 2);
  uint64_t result = (void *)sub_255AAF4A0(v17);
  unint64_t v20 = result[2];
  if (v20 >> 57)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = result;
    uint64_t v22 = v19;
    uint64_t v23 = v20 << 6;
    uint64_t v24 = (char *)(result + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = objc_msgSend(a2, sel_newBufferWithBytes_length_options_, v24, v23, 0);
    uint64_t v25 = *(void *)(v22 + 16);
    if (v25 + 0x4000000000000000 >= 0)
    {
      uint64_t v26 = 2 * v25;
      swift_unknownObjectRetain();
      objc_msgSend(a2, sel_newBufferWithBytes_length_options_, v22 + 32, v26, 0);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  __break(1u);
  return result;
}

double sub_255B6AB28()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCD0);
  uint64_t v0 = (_OWORD *)swift_allocObject();
  v0[1] = xmmword_255C84C00;
  v0[2] = xmmword_255C90CC0;
  v0[3] = xmmword_255C90CD0;
  v0[4] = xmmword_255C89FD0;
  double result = 0.0;
  v0[5] = xmmword_255C89FE0;
  v0[6] = xmmword_255C90CE0;
  v0[7] = xmmword_255C90CF0;
  v0[8] = xmmword_255C89FD0;
  v0[9] = xmmword_255C89FE0;
  v0[10] = xmmword_255C90CE0;
  v0[11] = xmmword_255C90CF0;
  v0[12] = xmmword_255C89FD0;
  v0[13] = xmmword_255C89FE0;
  return result;
}

uint64_t sub_255B6ABA8()
{
  return swift_deallocObject();
}

void sub_255B6ABE8(uint64_t a1)
{
  sub_255B642D0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_255B6ABFC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B6AC34(uint64_t a1, void *a2)
{
  return sub_255B6439C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_255B6AC3C()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255B6AC7C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_255B6ACAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B6AD08(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_255C81238();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_255C80858();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  id v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *id v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_255B6ADFC(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_255C81238();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_255C80858();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

id static WaveformTheme.color(palette:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  id v9 = *(id *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = 0;
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;

  return v9;
}

id static WaveformTheme.artwork(image:)@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  return a1;
}

double static WaveformTheme.automatic.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 2;
  return result;
}

uint64_t MCUINamespace<A>.waveformTheme(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[0] = a3;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  id v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(void **)v5;
  id v9 = *(void **)(v5 + 8);
  unint64_t v10 = *(void **)(v5 + 16);
  id v11 = *(void **)(v5 + 24);
  char v12 = *(unsigned char *)(v5 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
  swift_getKeyPath();
  v15[1] = v8;
  v15[2] = v9;
  v15[3] = v10;
  v15[4] = v11;
  char v16 = v12;
  sub_255ABFF80(v8, v9, v10, v11, v12);
  sub_255C7F678();
  swift_release();
  sub_255AC0034(v8, v9, v10, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_255B6B0AC()
{
  sub_255B6D5AC();

  return sub_255C7E8C8();
}

double sub_255B6B0F4@<D0>(uint64_t a1@<X8>)
{
  sub_255B6D5AC();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_255B6B150(uint64_t a1)
{
  return sub_255C7E8D8();
}

ValueMetadata *type metadata accessor for WaveformTheme()
{
  return &type metadata for WaveformTheme;
}

uint64_t sub_255B6B1E0()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B6B250()
{
  unint64_t result = qword_269F251A0;
  if (!qword_269F251A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F251A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformTheme.ArtworkTreatment()
{
  return &type metadata for WaveformTheme.ArtworkTreatment;
}

void _s11MediaCoreUI13WaveformThemeV5ThemeOwxx_0(uint64_t a1)
{
}

uint64_t _s11MediaCoreUI13WaveformThemeV5ThemeOwcp_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  long long v4 = *(void **)(a2 + 8);
  char v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_255ABFF80(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s11MediaCoreUI13WaveformThemeV5ThemeOwca_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  long long v4 = *(void **)(a2 + 8);
  char v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_255ABFF80(*(id *)a2, v4, v5, v6, v7);
  id v8 = *(void **)a1;
  id v9 = *(void **)(a1 + 8);
  unint64_t v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_255AC0034(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s11MediaCoreUI13WaveformThemeV5ThemeOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  long long v4 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  char v5 = *(void **)(a1 + 16);
  char v7 = *(void **)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_255AC0034(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s11MediaCoreUI13WaveformThemeV5ThemeOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s11MediaCoreUI13WaveformThemeV5ThemeOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255B6B484(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_255B6B49C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WaveformTheme.Theme()
{
  return &type metadata for WaveformTheme.Theme;
}

double sub_255B6B4C8@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 2;
  return result;
}

uint64_t sub_255B6B4DC()
{
  return 0;
}

uint64_t sub_255B6B608()
{
  return sub_255B6B4DC();
}

CGColorSpaceRef sub_255B6B614()
{
  CGColorSpaceRef result = CGColorSpaceCreateDeviceRGB();
  qword_269F25170 = (uint64_t)result;
  return result;
}

id sub_255B6B634()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00628]), sel_init);
  qword_269F25178 = (uint64_t)result;
  return result;
}

uint64_t sub_255B6B668(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v26 = a2;
  uint64_t v5 = sub_255C7D828();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_255C7D7D8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  id v14 = &v23[-v13];
  id v15 = sub_255C7D7F8();
  sub_255C7D838();
  int v24 = sub_255C80CB8();
  uint64_t result = sub_255C80E68();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    id v17 = v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v26 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v17 = &v27;
LABEL_10:
  swift_retain();
  sub_255C7D868();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == *MEMORY[0x263F90238])
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v20 = 0;
  os_signpost_id_t v21 = sub_255C7D7B8();
  _os_signpost_emit_with_name_impl(&dword_255A00000, v15, (os_signpost_type_t)v24, v21, v17, v19, v20, 2u);
  MEMORY[0x25A297C00](v20, -1, -1);

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

uint64_t sub_255B6B978()
{
  uint64_t v0 = sub_255C7D818();
  __swift_allocate_value_buffer(v0, qword_269F25180);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F25180);
  return sub_255C7D808();
}

char *sub_255B6B9F0()
{
  return &v1;
}

void sub_255B6BA00(CGImage *a1, uint64_t a2)
{
  BytesPerRow = a1;
  int64_t Width = CGImageGetWidth(a1);
  Height = (unsigned char *)CGImageGetHeight(BytesPerRow);
  int64_t v6 = CGImageGetHeight(BytesPerRow);
  int64_t v7 = CGImageGetWidth(BytesPerRow);
  uint64_t v8 = v6 * v7;
  if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63) {
    goto LABEL_47;
  }
  if ((unint64_t)(v8 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_48;
  }
  uint64_t v141 = a2;
  a2 = sub_255B6ADFC(0, 4 * v8);
  int64_t v6 = (int64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, BytesPerRow);
  if (qword_269F200E8 != -1) {
    goto LABEL_49;
  }
  while (1)
  {
    uint64_t v9 = (void *)qword_269F25178;
    BytesPerRow = (CGImage *)CGImageGetBytesPerRow(BytesPerRow);
    uint64_t v10 = *MEMORY[0x263F008B0];
    if (qword_269F200E0 != -1) {
      swift_once();
    }
    double v11 = (double)Width;
    double v12 = (double)(uint64_t)Height;
    int64_t Width = qword_269F25170;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a2 = (uint64_t)sub_255C16340(0, *(void *)(a2 + 16), 0, (char *)a2);
    }
    Height = (unsigned char *)(a2 + 32);
    double v13 = 0.0;
    objc_msgSend(v9, sel_render_toBitmap_rowBytes_bounds_format_colorSpace_, v6, a2 + 32, BytesPerRow, v10, Width, 0.0, 0.0, v11, v12);
    if (v8 < 0)
    {
      __break(1u);
      return;
    }
    if (!v8) {
      break;
    }
    unint64_t v16 = *(void *)(a2 + 16);
    if (!v16) {
      goto LABEL_44;
    }
    if (v16 == 1) {
      goto LABEL_45;
    }
    if (v16 >= 3)
    {
      LOBYTE(v14) = *Height;
      *(double *)&unint64_t v17 = (double)v14;
      double v18 = *(double *)&v17 / 255.0;
      LOBYTE(v17) = *(unsigned char *)(a2 + 33);
      *(double *)&unint64_t v19 = (double)v17;
      double v20 = *(double *)&v19 / 255.0;
      LOBYTE(v19) = *(unsigned char *)(a2 + 34);
      double v21 = (double)v19 / 255.0;
      v22.f64[0] = v21 * 0.114;
      double v23 = sqrt(v18 * (v18 * 0.299) + v20 * (v20 * 0.587) + v21 * (v21 * 0.114));
      double v13 = v23 + 0.0;
      if (v8 == 1) {
        break;
      }
      unint64_t v24 = (v16 - 1) >> 2;
      if (v24 >= (v16 - 2) >> 2) {
        unint64_t v24 = (v16 - 2) >> 2;
      }
      unint64_t v25 = (v16 - 3) >> 2;
      if (v24 < v25) {
        unint64_t v25 = v24;
      }
      if (v8 - 2 < v25) {
        unint64_t v25 = v8 - 2;
      }
      if (v25 >= 0x10)
      {
        unint64_t v27 = v25 + 1;
        uint64_t v28 = v27 & 0xF;
        if ((v27 & 0xF) == 0) {
          uint64_t v28 = 16;
        }
        unint64_t v29 = v27 - v28;
        uint64_t v26 = v29 + 1;
        uint64_t v30 = (const char *)(a2 + 36);
        *(void *)&double v23 = 0xFF000000FFLL;
        float64x2_t v31 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
        float64x2_t v22 = (float64x2_t)vdupq_n_s64(0x3FD322D0E5604189uLL);
        float64x2_t v15 = (float64x2_t)vdupq_n_s64(0x3FE2C8B439581062uLL);
        float64x2_t v32 = (float64x2_t)vdupq_n_s64(0x3FBD2F1A9FBE76C9uLL);
        do
        {
          int8x16x4_t v142 = vld4q_s8(v30);
          v30 += 64;
          unint64_t v33 = vextq_s8(v142.val[0], v142.val[0], 8uLL).u64[0];
          v34.i32[0] = BYTE6(v33);
          v35.i32[0] = BYTE4(v33);
          v34.i32[1] = HIBYTE(v33);
          v35.i32[1] = BYTE5(v33);
          v36.i32[0] = BYTE2(v33);
          v36.i32[1] = BYTE3(v33);
          int8x8_t v37 = vand_s8(v34, (int8x8_t)0xFF000000FFLL);
          unsigned int v38 = v33;
          unsigned int v39 = BYTE1(v33);
          int8x8_t v40 = vand_s8(v35, (int8x8_t)0xFF000000FFLL);
          int8x8_t v41 = vand_s8(v36, (int8x8_t)0xFF000000FFLL);
          v42.i32[0] = v142.val[0].u8[6];
          v42.i32[1] = v142.val[0].u8[7];
          int8x8_t v43 = vand_s8((int8x8_t)__PAIR64__(v39, v38), (int8x8_t)0xFF000000FFLL);
          int8x8_t v44 = vand_s8(v42, (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = v44.u32[0];
          v45.i64[1] = v44.u32[1];
          uint64x2_t v46 = v45;
          v47.i32[0] = v142.val[0].u8[4];
          v45.i64[0] = v37.u32[0];
          v45.i64[1] = v37.u32[1];
          uint64x2_t v48 = v45;
          v47.i32[1] = v142.val[0].u8[5];
          int8x8_t v49 = vand_s8(v47, (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = v40.u32[0];
          v45.i64[1] = v40.u32[1];
          uint64x2_t v50 = v45;
          v45.i64[0] = v49.u32[0];
          v45.i64[1] = v49.u32[1];
          uint64x2_t v51 = v45;
          v45.i64[0] = v41.u32[0];
          v45.i64[1] = v41.u32[1];
          uint64x2_t v52 = v45;
          v41.i32[0] = v142.val[0].u8[2];
          v41.i32[1] = v142.val[0].u8[3];
          int8x8_t v53 = vand_s8(v41, (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = v53.u32[0];
          v45.i64[1] = v53.u32[1];
          uint64x2_t v54 = v45;
          v45.i64[0] = v43.u32[0];
          v45.i64[1] = v43.u32[1];
          uint64x2_t v55 = v45;
          v56.i32[0] = v142.val[0].u8[0];
          float64x2_t v57 = vcvtq_f64_u64(v46);
          v56.i32[1] = v142.val[0].u8[1];
          *(int8x8_t *)v46.i8 = vand_s8(v56, (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = v46.u32[0];
          v45.i64[1] = v46.u32[1];
          int8x8_t v58 = (int8x8_t)vextq_s8(v142.val[1], v142.val[1], 8uLL).u64[0];
          float64x2_t v59 = vcvtq_f64_u64(v51);
          v51.i32[0] = v58.u8[6];
          float64x2_t v60 = vcvtq_f64_u64(v54);
          v51.i32[1] = v58.u8[7];
          *(int8x8_t *)v54.i8 = vand_s8(*(int8x8_t *)v51.i8, (int8x8_t)0xFF000000FFLL);
          float64x2_t v61 = vcvtq_f64_u64(v45);
          v56.i32[0] = v58.u8[4];
          v56.i32[1] = v58.u8[5];
          float64x2_t v62 = vcvtq_f64_u64(v48);
          v45.i64[0] = v54.u32[0];
          v45.i64[1] = v54.u32[1];
          uint64x2_t v63 = v45;
          *(int8x8_t *)v48.i8 = vand_s8(v56, (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = v48.u32[0];
          v45.i64[1] = v48.u32[1];
          uint64x2_t v64 = v45;
          float64x2_t v65 = vcvtq_f64_u64(v50);
          v48.i32[0] = v58.u8[2];
          v48.i32[1] = v58.u8[3];
          int8x8_t v66 = vand_s8(*(int8x8_t *)v48.i8, (int8x8_t)0xFF000000FFLL);
          __int32 v67 = v58.u8[1];
          float64x2_t v68 = vcvtq_f64_u64(v55);
          v58.i32[0] = v58.u8[0];
          v58.i32[1] = v67;
          float64x2_t v69 = vdivq_f64(v61, v31);
          v70.i32[0] = v142.val[1].u8[6];
          v70.i32[1] = v142.val[1].u8[7];
          float64x2_t v71 = vdivq_f64(v60, v31);
          v45.i64[0] = v66.u32[0];
          v45.i64[1] = v66.u32[1];
          uint64x2_t v72 = v45;
          unsigned int v73 = v142.val[1].u8[4];
          unsigned int v74 = v142.val[1].u8[5];
          float64x2_t v75 = vdivq_f64(v59, v31);
          int8x8_t v76 = vand_s8(v58, (int8x8_t)0xFF000000FFLL);
          unsigned int v77 = v142.val[1].u8[2];
          unsigned int v78 = v142.val[1].u8[3];
          float64x2_t v79 = vdivq_f64(v57, v31);
          v45.i64[0] = v76.u32[0];
          v45.i64[1] = v76.u32[1];
          uint64x2_t v80 = v45;
          unsigned int v81 = v142.val[1].u8[0];
          unsigned int v82 = v142.val[1].u8[1];
          float64x2_t v83 = vcvtq_f64_u64(v63);
          *(int8x8_t *)v63.i8 = vand_s8(v70, (int8x8_t)0xFF000000FFLL);
          unsigned int v84 = v142.val[2].u8[0];
          unsigned int v85 = v142.val[2].u8[1];
          v45.i64[0] = v63.u32[0];
          v45.i64[1] = v63.u32[1];
          unsigned int v86 = v142.val[2].u8[2];
          unsigned int v87 = v142.val[2].u8[3];
          float64x2_t v88 = vcvtq_f64_u64(v45);
          unsigned int v89 = v142.val[2].u8[4];
          unsigned int v90 = v142.val[2].u8[5];
          unsigned int v91 = v142.val[2].u8[6];
          unsigned int v92 = v142.val[2].u8[7];
          v142.val[0].i64[0] = vextq_s8(v142.val[2], v142.val[2], 8uLL).u64[0];
          v142.val[1] = (int8x16_t)vdivq_f64(v68, v31);
          *(int8x8_t *)v142.val[2].i8 = vand_s8((int8x8_t)__PAIR64__(v74, v73), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = v142.val[2].u32[0];
          v45.i64[1] = v142.val[2].u32[1];
          v142.val[3] = (int8x16_t)vdivq_f64(vcvtq_f64_u64(v52), v31);
          v142.val[2] = (int8x16_t)vcvtq_f64_u64(v45);
          *(int8x8_t *)v52.i8 = vand_s8((int8x8_t)__PAIR64__(v78, v77), (int8x8_t)0xFF000000FFLL);
          float64x2_t v93 = vdivq_f64(v65, v31);
          v45.i64[0] = v52.u32[0];
          v45.i64[1] = v52.u32[1];
          float64x2_t v94 = vcvtq_f64_u64(v45);
          float64x2_t v95 = vdivq_f64(v62, v31);
          *(int8x8_t *)&v68.f64[0] = vand_s8((int8x8_t)__PAIR64__(v82, v81), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v68.f64[0]);
          v45.i64[1] = HIDWORD(v68.f64[0]);
          unsigned int v96 = v142.val[0].u8[0];
          float64x2_t v97 = vdivq_f64(vcvtq_f64_u64(v80), v31);
          float64x2_t v98 = vdivq_f64(vcvtq_f64_u64(v45), v31);
          unsigned int v99 = v142.val[0].u8[1];
          unsigned int v100 = v142.val[0].u8[2];
          float64x2_t v101 = vdivq_f64(vcvtq_f64_u64(v72), v31);
          float64x2_t v102 = vdivq_f64(v94, v31);
          unsigned int v103 = v142.val[0].u8[3];
          unsigned int v104 = v142.val[0].u8[4];
          float64x2_t v105 = vdivq_f64(vcvtq_f64_u64(v64), v31);
          v142.val[2] = (int8x16_t)vdivq_f64((float64x2_t)v142.val[2], v31);
          unsigned int v106 = v142.val[0].u8[5];
          unsigned int v107 = v142.val[0].u8[6];
          float64x2_t v108 = vdivq_f64(v83, v31);
          float64x2_t v109 = vdivq_f64(v88, v31);
          int64_t Width = v142.val[0].u8[7];
          v142.val[0] = (int8x16_t)vmulq_f64((float64x2_t)v142.val[1], vmulq_f64((float64x2_t)v142.val[1], v22));
          v142.val[1] = (int8x16_t)vmulq_f64((float64x2_t)v142.val[3], vmulq_f64((float64x2_t)v142.val[3], v22));
          v142.val[3] = (int8x16_t)vmulq_f64(v93, vmulq_f64(v93, v22));
          float64x2_t v110 = vmulq_f64(v75, vmulq_f64(v75, v22));
          float64x2_t v111 = vaddq_f64(vmulq_f64(v95, vmulq_f64(v95, v22)), vmulq_f64(v108, vmulq_f64(v108, v15)));
          v142.val[3] = (int8x16_t)vaddq_f64((float64x2_t)v142.val[3], vmulq_f64(v105, vmulq_f64(v105, v15)));
          v142.val[1] = (int8x16_t)vaddq_f64((float64x2_t)v142.val[1], vmulq_f64(v101, vmulq_f64(v101, v15)));
          v142.val[0] = (int8x16_t)vaddq_f64((float64x2_t)v142.val[0], vmulq_f64(v97, vmulq_f64(v97, v15)));
          float64x2_t v112 = vaddq_f64(vmulq_f64(v79, vmulq_f64(v79, v22)), vmulq_f64(v109, vmulq_f64(v109, v15)));
          v142.val[2] = (int8x16_t)vaddq_f64(v110, vmulq_f64((float64x2_t)v142.val[2], vmulq_f64((float64x2_t)v142.val[2], v15)));
          float64x2_t v113 = vaddq_f64(vmulq_f64(v71, vmulq_f64(v71, v22)), vmulq_f64(v102, vmulq_f64(v102, v15)));
          *(int8x8_t *)&v109.f64[0] = vand_s8((int8x8_t)__PAIR64__(v99, v96), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v109.f64[0]);
          v45.i64[1] = HIDWORD(v109.f64[0]);
          uint64x2_t v114 = v45;
          *(int8x8_t *)&v108.f64[0] = vand_s8((int8x8_t)__PAIR64__(v103, v100), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v108.f64[0]);
          v45.i64[1] = HIDWORD(v108.f64[0]);
          uint64x2_t v115 = v45;
          *(int8x8_t *)&v105.f64[0] = vand_s8((int8x8_t)__PAIR64__(v106, v104), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v105.f64[0]);
          v45.i64[1] = HIDWORD(v105.f64[0]);
          uint64x2_t v116 = v45;
          *(int8x8_t *)&v101.f64[0] = vand_s8((int8x8_t)__PAIR64__(Width, v107), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v101.f64[0]);
          v45.i64[1] = HIDWORD(v101.f64[0]);
          uint64x2_t v117 = v45;
          *(int8x8_t *)&v79.f64[0] = vand_s8((int8x8_t)__PAIR64__(v85, v84), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v79.f64[0]);
          v45.i64[1] = HIDWORD(v79.f64[0]);
          float64x2_t v118 = vcvtq_f64_u64(v45);
          *(int8x8_t *)&v97.f64[0] = vand_s8((int8x8_t)__PAIR64__(v87, v86), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v97.f64[0]);
          v45.i64[1] = HIDWORD(v97.f64[0]);
          float64x2_t v119 = vcvtq_f64_u64(v45);
          *(int8x8_t *)&v110.f64[0] = vand_s8((int8x8_t)__PAIR64__(v90, v89), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v110.f64[0]);
          v45.i64[1] = HIDWORD(v110.f64[0]);
          float64x2_t v120 = vcvtq_f64_u64(v45);
          *(int8x8_t *)&v102.f64[0] = vand_s8((int8x8_t)__PAIR64__(v92, v91), (int8x8_t)0xFF000000FFLL);
          v45.i64[0] = LODWORD(v102.f64[0]);
          v45.i64[1] = HIDWORD(v102.f64[0]);
          float64x2_t v121 = vdivq_f64(vcvtq_f64_u64(v117), v31);
          float64x2_t v122 = vdivq_f64(vcvtq_f64_u64(v116), v31);
          float64x2_t v123 = vdivq_f64(vcvtq_f64_u64(v115), v31);
          float64x2_t v124 = vdivq_f64(vcvtq_f64_u64(v45), v31);
          float64x2_t v125 = vdivq_f64(v120, v31);
          float64x2_t v126 = vdivq_f64(vcvtq_f64_u64(v114), v31);
          float64x2_t v127 = vdivq_f64(v119, v31);
          float64x2_t v128 = vdivq_f64(v118, v31);
          float64x2_t v129 = vsqrtq_f64(vaddq_f64(vaddq_f64(vmulq_f64(v69, vmulq_f64(v69, v22)), vmulq_f64(v98, vmulq_f64(v98, v15))), vmulq_f64(v128, vmulq_f64(v128, v32))));
          float64x2_t v130 = vsqrtq_f64(vaddq_f64(v113, vmulq_f64(v127, vmulq_f64(v127, v32))));
          v142.val[2] = (int8x16_t)vsqrtq_f64(vaddq_f64((float64x2_t)v142.val[2], vmulq_f64(v125, vmulq_f64(v125, v32))));
          *(double *)v142.val[2].i64 = v13
                                     + v129.f64[0]
                                     + v129.f64[1]
                                     + v130.f64[0]
                                     + v130.f64[1]
                                     + *(double *)v142.val[2].i64
                                     + *(double *)&v142.val[2].i64[1];
          float64x2_t v131 = vsqrtq_f64(vaddq_f64(v112, vmulq_f64(v124, vmulq_f64(v124, v32))));
          float64x2_t v132 = vsqrtq_f64(vaddq_f64(v111, vmulq_f64(v121, vmulq_f64(v121, v32))));
          v142.val[3] = (int8x16_t)vsqrtq_f64(vaddq_f64((float64x2_t)v142.val[3], vmulq_f64(v122, vmulq_f64(v122, v32))));
          v142.val[0] = (int8x16_t)vsqrtq_f64(vaddq_f64((float64x2_t)v142.val[0], vmulq_f64(v126, vmulq_f64(v126, v32))));
          v142.val[1] = (int8x16_t)vsqrtq_f64(vaddq_f64((float64x2_t)v142.val[1], vmulq_f64(v123, vmulq_f64(v123, v32))));
          double v13 = *(double *)v142.val[2].i64
              + v131.f64[0]
              + v131.f64[1]
              + *(double *)v142.val[0].i64
              + *(double *)&v142.val[0].i64[1]
              + *(double *)v142.val[1].i64
              + *(double *)&v142.val[1].i64[1]
              + *(double *)v142.val[3].i64
              + *(double *)&v142.val[3].i64[1]
              + v132.f64[0]
              + v132.f64[1];
          v29 -= 16;
        }
        while (v29);
      }
      else
      {
        uint64_t v26 = 1;
      }
      unint64_t v133 = 4 * v26;
      uint64_t v134 = v8 - v26;
      while (v133 < v16)
      {
        if (v133 + 1 >= v16) {
          goto LABEL_45;
        }
        if (v133 + 2 >= v16) {
          goto LABEL_46;
        }
        LOBYTE(v23) = *(unsigned char *)(a2 + v133 + 32);
        LOBYTE(v22.f64[0]) = *(unsigned char *)(a2 + v133 + 33);
        double v135 = (double)*(unint64_t *)&v22.f64[0] / 255.0;
        LOBYTE(v15.f64[0]) = *(unsigned char *)(a2 + v133 + 34);
        double v136 = (double)*(unint64_t *)&v15.f64[0] / 255.0;
        v15.f64[0] = v135 * 0.587;
        double v137 = (double)*(unint64_t *)&v23 / 255.0 * ((double)*(unint64_t *)&v23 / 255.0 * 0.299)
             + v135 * (v135 * 0.587);
        v22.f64[0] = v136 * 0.114;
        double v23 = sqrt(v137 + v136 * (v136 * 0.114));
        double v13 = v13 + v23;
        v133 += 4;
        if (!--v134) {
          goto LABEL_31;
        }
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
  }
LABEL_31:
  double v138 = v13 / (double)v8;
  if ((v138 < 0.0 || v138 >= 0.4)
    && (v138 >= 0.4 ? (BOOL v139 = v138 > 0.5) : (BOOL v139 = 1), v139 && (v138 >= 0.5 ? (v140 = v138 > 1.0) : (v140 = 1), v140)))
  {
    sub_255B6D558();
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();

    *(double *)uint64_t v141 = v138;
    *(unsigned char *)(v141 + 8) = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_255B6C344(uint64_t a1)
{
  v1[27] = a1;
  uint64_t v2 = sub_255C80938();
  v1[28] = v2;
  v1[29] = *(void *)(v2 - 8);
  v1[30] = swift_task_alloc();
  uint64_t v3 = sub_255C7D7D8();
  v1[31] = v3;
  v1[32] = *(void *)(v3 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  uint64_t v4 = sub_255C7D818();
  v1[35] = v4;
  v1[36] = *(void *)(v4 - 8);
  v1[37] = swift_task_alloc();
  uint64_t v5 = sub_255C7D898();
  v1[38] = v5;
  v1[39] = *(void *)(v5 - 8);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255B6C568, 0, 0);
}

uint64_t sub_255B6C568()
{
  uint64_t v159 = v0;
  if (qword_269F1FD60 != -1) {
    swift_once();
  }
  char v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v141 = __swift_project_value_buffer(*(void *)(v0 + 304), (uint64_t)qword_269F32F40);
  v144 = *(void (**)(uint64_t))(v3 + 16);
  v144(v2);
  id v4 = v1;
  uint64_t v5 = sub_255C7D878();
  os_log_type_t v6 = sub_255C80C08();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 360);
  uint64_t v10 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 312);
  double v11 = *(void **)(v0 + 216);
  if (v7)
  {
    uint64_t v153 = *(void *)(v0 + 304);
    double v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v158[0] = v13;
    *(_DWORD *)double v12 = 136446210;
    *(void *)(v0 + 200) = v11;
    uint64_t v14 = sub_255C80658();
    *(void *)(v0 + 208) = sub_255A7BEC4(v14, v15, v158);
    sub_255C80F18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255A00000, v5, v6, "Deriving ArtworkTreatment from image %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v13, -1, -1);
    MEMORY[0x25A297C00](v12, -1, -1);

    unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v17 = v8;
    uint64_t v18 = v153;
  }
  else
  {

    unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v17 = v8;
    uint64_t v18 = v10;
  }
  v147 = v16;
  v16(v17, v18);
  unint64_t v19 = (void **)(v0 + 184);
  double v20 = (CGImage *)objc_msgSend(*(id *)(v0 + 216), sel_CGImage);
  if (!v20)
  {
    sub_255B6D558();
    int8x8_t v35 = (void *)swift_allocError();
    *(void *)uint64_t v36 = 0;
    *(unsigned char *)(v36 + 8) = 1;
    swift_willThrow();
    *unint64_t v19 = v35;
    id v49 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
    if (swift_dynamicCast())
    {

      uint64_t v51 = *(void *)(v0 + 304);
      uint64x2_t v52 = *(void **)(v0 + 216);
      if (*(unsigned char *)(v0 + 48))
      {
        ((void (*)(void, uint64_t, uint64_t))v144)(*(void *)(v0 + 344), v141, v51);
        id v53 = v52;
        uint64x2_t v54 = sub_255C7D878();
        os_log_type_t v55 = sub_255C80BE8();
        BOOL v56 = os_log_type_enabled(v54, v55);
        uint64_t v57 = *(void *)(v0 + 344);
        uint64_t v58 = *(void *)(v0 + 304);
        float64x2_t v59 = *(void **)(v0 + 216);
        if (v56)
        {
          uint64_t v156 = *(void *)(v0 + 344);
          uint64_t v149 = *(void *)(v0 + 304);
          float64x2_t v60 = (uint8_t *)swift_slowAlloc();
          uint64_t v61 = swift_slowAlloc();
          v158[0] = v61;
          *(_DWORD *)float64x2_t v60 = 136446210;
          *(void *)(v0 + 144) = v59;
          uint64_t v62 = sub_255C80658();
          *(void *)(v0 + 152) = sub_255A7BEC4(v62, v63, v158);
          sub_255C80F18();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_255A00000, v54, v55, "ArtworkTreatment [%{public}s] failed to update treatment: no CGImage available", v60, 0xCu);
          swift_arrayDestroy();
          uint64_t v64 = v61;
          unint64_t v19 = (void **)(v0 + 184);
          MEMORY[0x25A297C00](v64, -1, -1);
          MEMORY[0x25A297C00](v60, -1, -1);

          uint64_t v66 = v149;
          uint64_t v65 = v156;
        }
        else
        {

          uint64_t v65 = v57;
          uint64_t v66 = v58;
        }
      }
      else
      {
        ((void (*)(void, uint64_t, uint64_t))v144)(*(void *)(v0 + 336), v141, v51);
        id v85 = v52;
        unsigned int v86 = sub_255C7D878();
        os_log_type_t v87 = sub_255C80BE8();
        BOOL v88 = os_log_type_enabled(v86, v87);
        uint64_t v89 = *(void *)(v0 + 336);
        uint64_t v90 = *(void *)(v0 + 304);
        unsigned int v91 = *(void **)(v0 + 216);
        if (v88)
        {
          uint64_t v157 = *(void *)(v0 + 336);
          uint64_t v92 = swift_slowAlloc();
          uint64_t v93 = swift_slowAlloc();
          v158[0] = v93;
          *(_DWORD *)uint64_t v92 = 136446466;
          *(void *)(v0 + 120) = v91;
          uint64_t v94 = sub_255C80658();
          *(void *)(v0 + 128) = sub_255A7BEC4(v94, v95, v158);
          sub_255C80F18();
          swift_bridgeObjectRelease();

          *(_WORD *)(v92 + 12) = 2080;
          uint64_t v96 = sub_255C80A78();
          *(void *)(v0 + 136) = sub_255A7BEC4(v96, v97, v158);
          sub_255C80F18();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_255A00000, v86, v87, "ArtworkTreatment [%{public}s] failed to update treatment: calculated impossible luminance of %s", (uint8_t *)v92, 0x16u);
          swift_arrayDestroy();
          uint64_t v98 = v93;
          unint64_t v19 = (void **)(v0 + 184);
          MEMORY[0x25A297C00](v98, -1, -1);
          MEMORY[0x25A297C00](v92, -1, -1);

          uint64_t v65 = v157;
        }
        else
        {

          uint64_t v65 = v89;
        }
        uint64_t v66 = v90;
      }
      v147(v65, v66);
      float64x2_t v118 = *v19;
    }
    else
    {

      *(void *)(v0 + 160) = v35;
      id v67 = v35;
      int v68 = swift_dynamicCast();
      uint64_t v69 = *(void *)(v0 + 304);
      int8x8_t v70 = *(void **)(v0 + 216);
      if (!v68)
      {
        uint64_t v99 = *(void *)(v0 + 320);

        ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v99, v141, v69);
        id v100 = v70;
        id v101 = v35;
        id v102 = v100;
        id v103 = v35;
        unsigned int v104 = sub_255C7D878();
        os_log_type_t v105 = sub_255C80BE8();
        BOOL v106 = os_log_type_enabled(v104, v105);
        uint64_t v107 = *(void *)(v0 + 320);
        uint64_t v108 = *(void *)(v0 + 304);
        float64x2_t v109 = *(void **)(v0 + 216);
        if (v106)
        {
          uint64_t v151 = *(void *)(v0 + 304);
          uint64_t v110 = swift_slowAlloc();
          uint64_t v142 = swift_slowAlloc();
          v158[0] = v142;
          *(_DWORD *)uint64_t v110 = 136446466;
          *(void *)(v0 + 72) = v109;
          uint64_t v111 = sub_255C80658();
          *(void *)(v0 + 80) = sub_255A7BEC4(v111, v112, v158);
          sub_255C80F18();
          swift_bridgeObjectRelease();

          *(_WORD *)(v110 + 12) = 2082;
          *(void *)(v0 + 88) = v35;
          id v113 = v35;
          uint64_t v114 = sub_255C80658();
          *(void *)(v0 + 96) = sub_255A7BEC4(v114, v115, v158);
          sub_255C80F18();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_255A00000, v104, v105, "ArtworkTreatment [%{public}s] encountered unhandled error: %{public}s", (uint8_t *)v110, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25A297C00](v142, -1, -1);
          MEMORY[0x25A297C00](v110, -1, -1);

          uint64_t v117 = v151;
          uint64_t v116 = v107;
        }
        else
        {

          uint64_t v116 = v107;
          uint64_t v117 = v108;
        }
        v147(v116, v117);
        goto LABEL_34;
      }
      uint64_t v71 = *(void *)(v0 + 328);

      ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v71, v141, v69);
      id v72 = v70;
      unsigned int v73 = sub_255C7D878();
      os_log_type_t v74 = sub_255C80BE8();
      BOOL v75 = os_log_type_enabled(v73, v74);
      uint64_t v76 = *(void *)(v0 + 328);
      uint64_t v77 = *(void *)(v0 + 304);
      unsigned int v78 = *(void **)(v0 + 216);
      if (v75)
      {
        uint64_t v150 = *(void *)(v0 + 304);
        uint64_t v145 = *(void *)(v0 + 328);
        float64x2_t v79 = (uint8_t *)swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        v158[0] = v80;
        *(_DWORD *)float64x2_t v79 = 136446210;
        *(void *)(v0 + 104) = v78;
        uint64_t v81 = sub_255C80658();
        *(void *)(v0 + 112) = sub_255A7BEC4(v81, v82, v158);
        sub_255C80F18();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_255A00000, v73, v74, "ArtworkTreatment [%{public}s] cancelled", v79, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v80, -1, -1);
        MEMORY[0x25A297C00](v79, -1, -1);

        uint64_t v83 = v145;
        uint64_t v84 = v150;
      }
      else
      {

        uint64_t v83 = v76;
        uint64_t v84 = v77;
      }
      v147(v83, v84);
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
      float64x2_t v118 = *(void **)(v0 + 160);
    }

LABEL_34:
    uint64_t v152 = 0;
    uint64_t v155 = 0;
    double v148 = 0.0;
    unsigned int v146 = 1;
    goto LABEL_35;
  }
  double v21 = v20;
  uint64_t v22 = v0 + 56;
  if (qword_269F200F0 != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 288);
  uint64_t v23 = *(void *)(v0 + 296);
  uint64_t v25 = *(void *)(v0 + 280);
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_269F25180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v26, v25);
  sub_255C7D7C8();
  unint64_t v27 = sub_255C7D7F8();
  os_signpost_type_t v28 = sub_255C80CC8();
  if (sub_255C80E68())
  {
    uint64_t v29 = *(void *)(v0 + 264);
    uint64_t v30 = *(void *)(v0 + 256);
    uint64_t v154 = *(void *)(v0 + 248);
    float64x2_t v31 = *(void (**)(uint64_t, void))(v30 + 16);
    v31(v29, *(void *)(v0 + 272));
    float64x2_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float64x2_t v32 = 0;
    os_signpost_id_t v33 = sub_255C7D7B8();
    _os_signpost_emit_with_name_impl(&dword_255A00000, v27, v28, v33, "Artwork Luminance Analysis", "", v32, 2u);
    int8x8_t v34 = v32;
    uint64_t v22 = v0 + 56;
    MEMORY[0x25A297C00](v34, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v154);
  }
  else
  {
    uint64_t v37 = *(void *)(v0 + 256);

    float64x2_t v31 = *(void (**)(uint64_t, void))(v37 + 16);
  }
  uint64_t v38 = *(void *)(v0 + 272);
  uint64_t v39 = *(void *)(v0 + 248);
  uint64_t v40 = *(void *)(v0 + 256);
  ((void (*)(void, uint64_t, uint64_t))v31)(*(void *)(v0 + 264), v38, v39);
  sub_255C7D858();
  swift_allocObject();
  sub_255C7D848();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
  sub_255B6BA00(v21, v22);
  uint64_t v42 = *(void *)(v0 + 288);
  uint64_t v41 = *(void *)(v0 + 296);
  uint64_t v43 = *(void *)(v0 + 280);
  double v45 = v44;
  char v47 = v46;
  uint64_t v155 = v48;
  sub_255B6B668(v41, "Artwork Luminance Analysis", 26, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  sub_255C80A58();
  if (v47)
  {
    double v121 = 1.25;
    uint64_t v122 = v141;
    float64x2_t v123 = v144;
    if (v47 == 1) {
      uint64_t v124 = v155;
    }
    else {
      uint64_t v124 = 0;
    }
    uint64_t v155 = 0;
  }
  else
  {
    uint64_t v124 = 0;
    double v121 = v45 + 1.25;
    uint64_t v122 = v141;
    float64x2_t v123 = v144;
  }
  float64x2_t v125 = *(void **)(v0 + 216);
  ((void (*)(void, uint64_t, void))v123)(*(void *)(v0 + 352), v122, *(void *)(v0 + 304));
  id v126 = v125;
  float64x2_t v127 = sub_255C7D878();
  os_log_type_t v128 = sub_255C80C08();
  BOOL v129 = os_log_type_enabled(v127, v128);
  uint64_t v130 = *(void *)(v0 + 352);
  uint64_t v131 = *(void *)(v0 + 304);
  float64x2_t v132 = *(void **)(v0 + 216);
  uint64_t v152 = v124;
  if (v129)
  {
    uint64_t v143 = *(void *)(v0 + 304);
    uint64_t v133 = swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    v158[0] = v134;
    *(_DWORD *)uint64_t v133 = 136446466;
    *(void *)(v0 + 168) = v132;
    uint64_t v135 = sub_255C80658();
    *(void *)(v0 + 176) = sub_255A7BEC4(v135, v136, v158);
    sub_255C80F18();
    swift_bridgeObjectRelease();

    *(_WORD *)(v133 + 12) = 2082;
    *(void *)(v0 + 16) = v155;
    *(void *)(v0 + 24) = v124;
    *(double *)(v0 + 32) = v121;
    uint64_t v137 = sub_255C80658();
    *(void *)(v0 + 192) = sub_255A7BEC4(v137, v138, v158);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v127, v128, "ArtworkTreatment [%{public}s] derived treatment %{public}s", (uint8_t *)v133, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v134, -1, -1);
    MEMORY[0x25A297C00](v133, -1, -1);

    uint64_t v140 = v143;
    uint64_t v139 = v130;
  }
  else
  {

    uint64_t v139 = v130;
    uint64_t v140 = v131;
  }
  v147(v139, v140);
  unsigned int v146 = 0;
  double v148 = v121;
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  float64x2_t v119 = *(uint64_t (**)(uint64_t, uint64_t, void, void))(v0 + 8);
  return v119(v155, v152, *(void *)&v148, v146);
}

unint64_t sub_255B6D558()
{
  unint64_t result = qword_269F251B0;
  if (!qword_269F251B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F251B0);
  }
  return result;
}

unint64_t sub_255B6D5AC()
{
  unint64_t result = qword_26B29D448;
  if (!qword_26B29D448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D448);
  }
  return result;
}

ValueMetadata *_s19__Key_waveformThemeVMa()
{
  return &_s19__Key_waveformThemeVN;
}

ValueMetadata *type metadata accessor for WaveformTheme.ArtworkTreatment.CalculationError()
{
  return &type metadata for WaveformTheme.ArtworkTreatment.CalculationError;
}

uint64_t sub_255B6D620()
{
  sub_255A79EA8();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255B6D65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255B6DAC4();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t MCUINamespace<A>.motionCacheBucket(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  swift_getKeyPath();
  v11[0] = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void v11[2];

  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  swift_getKeyPath();
  v11[0] = a1;
  v11[1] = a2;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double sub_255B6D804@<D0>(_OWORD *a1@<X8>)
{
  sub_255A79EA8();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255B6D854()
{
  return sub_255C7E8D8();
}

uint64_t sub_255B6D9E8()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B6DA58()
{
  unint64_t result = qword_26B29D120;
  if (!qword_26B29D120)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29C0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D120);
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheBucketKey()
{
  return &type metadata for MotionCacheBucketKey;
}

unint64_t sub_255B6DAC4()
{
  unint64_t result = qword_26B29F260;
  if (!qword_26B29F260)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29F258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29F260);
  }
  return result;
}

uint64_t sub_255B6DB30()
{
  return sub_255C7E648();
}

uint64_t sub_255B6DB54(uint64_t a1)
{
  uint64_t v2 = sub_255C7DC38();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_255C7E658();
}

uint64_t ContentBelowSliderStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = type metadata accessor for SpringyViewModifier(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25288);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (double *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25290);
  MEMORY[0x270FA5388](v10 - 8);
  double v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25298);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)v2;
  char v17 = *(unsigned char *)(v2 + 8);
  id v18 = objc_msgSend(self, sel_currentTraitCollection);
  objc_msgSend(v18, sel_displayScale);
  double v20 = v19;

  double v21 = 1.0;
  if ((*(void *)&v20 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v22 = 1.0;
  }
  else {
    double v22 = v20;
  }
  if ((~*(void *)&v20 & 0x7FF0000000000000) != 0) {
    double v22 = v20;
  }
  if (v20 >= 1.0) {
    double v21 = v22;
  }
  double v23 = 2.0 / v21 + 8.0;
  *(void *)uint64_t v9 = sub_255C7EA58();
  v9[1] = v23;
  *((unsigned char *)v9 + 16) = 0;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F252A0);
  sub_255B6DFF4(a1, v16, v17, (uint64_t)v9 + *(int *)(v24 + 44));
  uint64_t v25 = sub_255C7EED8();
  sub_255B6ECCC(v25, v26, &qword_269F25288, &qword_269F25290, (uint64_t)v12, v27);
  swift_release();
  swift_release();
  sub_255A095A4((uint64_t)v9, &qword_269F25288);
  if (qword_26B29E9A8 != -1) {
    swift_once();
  }
  long long v38 = xmmword_26B29E948;
  long long v39 = unk_26B29E958;
  long long v40 = xmmword_26B29E968;
  long long v41 = unk_26B29E978;
  long long v42 = xmmword_26B29E988;
  uint64_t v43 = qword_26B29E998;
  uint64_t v44 = unk_26B29E9A0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_255C7FE58();
  uint64_t v28 = v51;
  long long v29 = v49;
  long long v30 = v50;
  long long v31 = v46;
  long long v32 = v47;
  long long v33 = v48;
  *(_OWORD *)uint64_t v6 = v45;
  *((_OWORD *)v6 + 1) = v31;
  *((_OWORD *)v6 + 2) = v32;
  *((_OWORD *)v6 + 3) = v33;
  *((_OWORD *)v6 + 4) = v29;
  *((_OWORD *)v6 + 5) = v30;
  *((void *)v6 + 12) = v28;
  int8x8_t v34 = (uint64_t *)&v6[*(int *)(v4 + 20)];
  *int8x8_t v34 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  swift_storeEnumTagMultiPayload();
  sub_255B75B98((uint64_t)v6, (uint64_t)&v15[*(int *)(v13 + 36)], type metadata accessor for SpringyViewModifier);
  sub_255A10514((uint64_t)v12, (uint64_t)v15, &qword_269F25290);
  return sub_255A10514((uint64_t)v15, v37, &qword_269F25298);
}

uint64_t type metadata accessor for SpringyViewModifier(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F25310);
}

uint64_t sub_255B6DFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v38 = a4;
  int v39 = a3 & 1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25370);
  MEMORY[0x270FA5388](v35);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25378);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (char *)&v35 - v14;
  uint64_t v15 = type metadata accessor for CapsuleProgress(0);
  uint64_t v16 = (int *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  double v19 = (uint64_t *)((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  double v21 = (char *)&v35 - v20;
  sub_255C7EEC8();
  uint64_t v23 = v22;
  *double v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v19 + v16[7]) = v23;
  uint64_t v24 = (char *)v19 + v16[8];
  *(void *)uint64_t v24 = swift_getKeyPath();
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 56) = 0u;
  *(_OWORD *)(v24 + 65) = 0u;
  uint64_t v25 = (char *)v19 + v16[9];
  *(void *)uint64_t v25 = swift_getKeyPath();
  v25[8] = 0;
  sub_255B75B98((uint64_t)v19, (uint64_t)v21, type metadata accessor for CapsuleProgress);
  *(void *)uint64_t v8 = sub_255C7E928();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB80);
  sub_255B6E504(v40, v39, a1, (uint64_t)&v8[*(int *)(v26 + 44)]);
  uint64_t v27 = *MEMORY[0x263F18D60];
  uint64_t v28 = sub_255C7E378();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v6, v27, v28);
  sub_255B71390(qword_269F21878, MEMORY[0x263F18D80]);
  uint64_t result = sub_255C80578();
  if (result)
  {
    sub_255A09998(&qword_269F25380, &qword_269F25370);
    sub_255A09998(&qword_269F21850, &qword_269F21848);
    sub_255C7F7B8();
    sub_255A095A4((uint64_t)v6, &qword_269F21848);
    sub_255A095A4((uint64_t)v8, &qword_269F25370);
    long long v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v37, v13, v9);
    sub_255B76434((uint64_t)v21, (uint64_t)v19, type metadata accessor for CapsuleProgress);
    long long v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v31(v13, v30, v9);
    uint64_t v32 = v38;
    sub_255B76434((uint64_t)v19, v38, type metadata accessor for CapsuleProgress);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25388);
    v31((char *)(v32 + *(int *)(v33 + 48)), v13, v9);
    int8x8_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
    v34(v30, v9);
    sub_255B7701C((uint64_t)v21, type metadata accessor for CapsuleProgress);
    v34(v13, v9);
    return sub_255B7701C((uint64_t)v19, type metadata accessor for CapsuleProgress);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255B6E504@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_255C7EE88();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EDE0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v27 - v19;
  uint64_t v29 = a1;
  char v30 = a2 & 1;
  sub_255B6E750(a3, (uint64_t)&v27 - v19);
  sub_255C7EEA8();
  sub_255A09540((uint64_t)v20, (uint64_t)v18, &qword_26B29EDE0);
  char v28 = 1;
  double v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v21(v12, v14, v8);
  sub_255A09540((uint64_t)v18, a4, &qword_26B29EDE0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EDE8);
  uint64_t v23 = a4 + *(int *)(v22 + 48);
  char v24 = v28;
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = v24;
  v21((char *)(a4 + *(int *)(v22 + 64)), v12, v8);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v14, v8);
  sub_255A095A4((uint64_t)v20, &qword_26B29EDE0);
  v25(v12, v8);
  return sub_255A095A4((uint64_t)v18, &qword_26B29EDE0);
}

uint64_t sub_255B6E750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v45 = a2;
  uint64_t v46 = sub_255C7EE98();
  uint64_t v41 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EDD8);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_255C7DCE8();
  uint64_t v5 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29EB58);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBE0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECB8);
  uint64_t v14 = MEMORY[0x270FA5388](v42);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = *(void *)v2;
  char v20 = *(unsigned char *)(v2 + 8);
  sub_255A0877C(v19, v20);
  char v21 = sub_255ABA6A4(v19, v20);
  sub_255A087D0(v19, v20);
  if (v21)
  {
    sub_255C7DEC8();
    uint64_t v22 = v39;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F18550], v39);
    uint64_t KeyPath = swift_getKeyPath();
    char v24 = (uint64_t *)&v13[*(int *)(v11 + 36)];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEA8);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v24 + *(int *)(v25 + 28), v7, v22);
    *char v24 = KeyPath;
    uint64_t v27 = v36;
    uint64_t v26 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v10, v37);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
    uint64_t v28 = sub_255C7FC88();
    uint64_t v29 = swift_getKeyPath();
    sub_255A09540((uint64_t)v13, (uint64_t)v16, &qword_26B29EBE0);
    char v30 = (uint64_t *)&v16[*(int *)(v42 + 36)];
    *char v30 = v29;
    v30[1] = v28;
    sub_255A095A4((uint64_t)v13, &qword_26B29EBE0);
    sub_255A10514((uint64_t)v16, (uint64_t)v18, &qword_26B29ECB8);
    sub_255A09540((uint64_t)v18, v44, &qword_26B29ECB8);
    swift_storeEnumTagMultiPayload();
    sub_255B770EC();
    sub_255B71390(&qword_269F25390, MEMORY[0x263F1A118]);
    sub_255C7EBD8();
    return sub_255A095A4((uint64_t)v18, &qword_26B29ECB8);
  }
  else
  {
    uint64_t v32 = v40;
    sub_255C7EEB8();
    uint64_t v33 = v41;
    uint64_t v34 = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v44, v32, v46);
    swift_storeEnumTagMultiPayload();
    sub_255B770EC();
    sub_255B71390(&qword_269F25390, MEMORY[0x263F1A118]);
    sub_255C7EBD8();
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  }
}

uint64_t sub_255B6ECCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v9 = v6;
  uint64_t v14 = type metadata accessor for DraggableViewModifier(0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  *((double *)v17 + 2) = a6;
  uint64_t v25 = 0;
  swift_retain();
  swift_retain();
  sub_255C7FE58();
  uint64_t v18 = v28;
  *((void *)v17 + 3) = v27;
  *((void *)v17 + 4) = v18;
  uint64_t v25 = 0;
  char v26 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF58);
  sub_255C7FE58();
  char v19 = v28;
  uint64_t v20 = v29;
  *((void *)v17 + 5) = v27;
  v17[48] = v19;
  *((void *)v17 + 7) = v20;
  *((void *)v17 + 8) = swift_getKeyPath();
  *((void *)v17 + 9) = 0;
  *((void *)v17 + 10) = 0;
  *((void *)v17 + 11) = 0;
  v17[96] = 0;
  char v21 = (uint64_t *)&v17[*(int *)(v15 + 40)];
  *char v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  swift_storeEnumTagMultiPayload();
  sub_255A09540(v9, a5, a3);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_255B75B98((uint64_t)v17, a5 + *(int *)(v22 + 36), type metadata accessor for DraggableViewModifier);
}

uint64_t ContentInlineSliderStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SpringyViewModifier(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F252A8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F252B0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_255C7E928();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F252B8);
  sub_255B6F144(&v7[*(int *)(v11 + 44)]);
  uint64_t v12 = sub_255C7EED8();
  sub_255B6ECCC(v12, v13, &qword_269F252A8, &qword_269F252B0, (uint64_t)v10, v14);
  swift_release();
  swift_release();
  sub_255A095A4((uint64_t)v7, &qword_269F252A8);
  if (qword_26B29E9A8 != -1) {
    swift_once();
  }
  v24[0] = xmmword_26B29E948;
  v24[1] = unk_26B29E958;
  v24[2] = xmmword_26B29E968;
  v24[3] = unk_26B29E978;
  v24[4] = xmmword_26B29E988;
  uint64_t v25 = qword_26B29E998;
  uint64_t v26 = unk_26B29E9A0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_255C7FE58();
  uint64_t v15 = v33;
  long long v16 = v31;
  long long v17 = v32;
  long long v18 = v28;
  long long v19 = v29;
  long long v20 = v30;
  *(_OWORD *)uint64_t v4 = v27;
  *((_OWORD *)v4 + 1) = v18;
  *((_OWORD *)v4 + 2) = v19;
  *((_OWORD *)v4 + 3) = v20;
  *((_OWORD *)v4 + 4) = v16;
  *((_OWORD *)v4 + 5) = v17;
  *((void *)v4 + 12) = v15;
  char v21 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  *char v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F252C0);
  sub_255B75B98((uint64_t)v4, a1 + *(int *)(v22 + 36), type metadata accessor for SpringyViewModifier);
  return sub_255A10514((uint64_t)v10, a1, &qword_269F252B0);
}

uint64_t sub_255B6F144@<X0>(char *a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v44 = sub_255C7EE88();
  uint64_t v46 = *(void *)(v44 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v35 - v3;
  uint64_t v5 = type metadata accessor for CapsuleProgress(0);
  uint64_t v6 = (int *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v38 = sub_255C7EE98();
  uint64_t v42 = *(void *)(v38 - 8);
  uint64_t v12 = v42;
  uint64_t v13 = MEMORY[0x270FA5388](v38);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v35 - v16;
  uint64_t v41 = (char *)&v35 - v16;
  sub_255C7EEB8();
  sub_255C7EEC8();
  uint64_t v19 = v18;
  *uint64_t v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v9 + v6[7]) = v19;
  long long v20 = (char *)v9 + v6[8];
  *(void *)long long v20 = swift_getKeyPath();
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 56) = 0u;
  *(_OWORD *)(v20 + 65) = 0u;
  char v21 = (char *)v9 + v6[9];
  *(void *)char v21 = swift_getKeyPath();
  v21[8] = 0;
  uint64_t v36 = v9;
  uint64_t v39 = v11;
  sub_255B75B98((uint64_t)v9, (uint64_t)v11, type metadata accessor for CapsuleProgress);
  uint64_t v37 = v4;
  sub_255C7EEA8();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v40 = v15;
  uint64_t v23 = v38;
  v22(v15, v17, v38);
  sub_255B76434((uint64_t)v11, (uint64_t)v9, type metadata accessor for CapsuleProgress);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v26 = v43;
  uint64_t v25 = v44;
  v24(v43, v4, v44);
  long long v27 = v45;
  long long v28 = v15;
  uint64_t v29 = v23;
  v22(v45, v28, v23);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25368);
  uint64_t v31 = (uint64_t)v36;
  sub_255B76434((uint64_t)v36, (uint64_t)&v27[*(int *)(v30 + 48)], type metadata accessor for CapsuleProgress);
  v24(&v27[*(int *)(v30 + 64)], v26, v25);
  long long v32 = *(void (**)(char *, uint64_t))(v46 + 8);
  v32(v37, v25);
  sub_255B7701C((uint64_t)v39, type metadata accessor for CapsuleProgress);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v42 + 8);
  v33(v41, v29);
  v32(v26, v25);
  sub_255B7701C(v31, type metadata accessor for CapsuleProgress);
  return ((uint64_t (*)(char *, uint64_t))v33)(v40, v29);
}

uint64_t sub_255B6F568@<X0>(uint64_t a1@<X8>)
{
  return ContentInlineSliderStyle.makeBody(configuration:)(a1);
}

uint64_t sub_255B6F580()
{
  return swift_release();
}

uint64_t sub_255B6F5F4()
{
  sub_255B778A0();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255B6F630()
{
  return swift_release();
}

double sub_255B6F6C4()
{
  sub_255B77090();
  sub_255C7E8C8();
  return v1;
}

double sub_255B6F704@<D0>(_OWORD *a1@<X8>)
{
  sub_255B77090();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_255B6F754()
{
  return sub_255C7E8D8();
}

uint64_t sub_255B6F7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t)v2;
  *(void *)&long long v67 = a1;
  uint64_t v82 = a2;
  uint64_t v4 = type metadata accessor for SpringyViewModifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v76 = v4 - 8;
  uint64_t v79 = v5;
  uint64_t v78 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v77 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_255C7DC38();
  uint64_t v81 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v75 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB78);
  *(void *)&long long v74 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  *(void *)&long long v68 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBB0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC88);
  MEMORY[0x270FA5388](v65);
  uint64_t v64 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEE8);
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v66 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC18);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v2[1];
  *(void *)&long long v63 = *v2;
  *(void *)&long long v62 = v16;
  uint64_t v17 = v2[2];
  uint64_t v18 = v2[3];
  uint64_t v19 = v2[4];
  uint64_t v20 = v2[5];
  uint64_t v21 = v2[7];
  *(void *)&long long v61 = v2[6];
  *(void *)&long long v60 = v21;
  uint64_t v22 = v2[8];
  uint64_t v23 = v2[9];
  uint64_t v24 = v2[10];
  uint64_t v25 = v2[11];
  uint64_t v59 = v2[12];
  *(void *)&long long v83 = v63;
  *((void *)&v83 + 1) = v16;
  *(void *)&long long v84 = v17;
  *((void *)&v84 + 1) = v18;
  *(void *)&long long v85 = v19;
  *((void *)&v85 + 1) = v20;
  *(void *)&long long v86 = v61;
  *((void *)&v86 + 1) = v21;
  *(void *)&long long v87 = v22;
  *((void *)&v87 + 1) = v23;
  *(void *)&long long v88 = v24;
  *((void *)&v88 + 1) = v25;
  uint64_t v89 = v59;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEF8);
  sub_255C7FE68();
  long long v26 = v90;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_255C80378();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE18);
  (*(void (**)(char *, void, uint64_t))(*(void *)(v31 - 8) + 16))(v12, v67, v31);
  long long v32 = &v12[*(int *)(v10 + 44)];
  *(_OWORD *)long long v32 = v26;
  *((void *)v32 + 2) = v28;
  *((void *)v32 + 3) = v30;
  uint64_t v33 = sub_255C80298();
  *(void *)&long long v83 = v63;
  *((void *)&v83 + 1) = v62;
  *(void *)&long long v84 = v17;
  *((void *)&v84 + 1) = v18;
  *(void *)&long long v85 = v19;
  *((void *)&v85 + 1) = v20;
  *(void *)&long long v86 = v61;
  *((void *)&v86 + 1) = v60;
  *(void *)&long long v87 = v22;
  *((void *)&v87 + 1) = v23;
  *(void *)&long long v88 = v24;
  *((void *)&v88 + 1) = v25;
  uint64_t v89 = v59;
  sub_255C7FE68();
  long long v67 = v90;
  long long v63 = v91;
  long long v62 = v92;
  uint64_t v34 = v93;
  uint64_t v35 = v94;
  long long v61 = v95;
  long long v60 = v96;
  uint64_t v36 = v64;
  sub_255A09540((uint64_t)v12, v64, &qword_26B29EBB0);
  uint64_t v37 = v36 + *(int *)(v65 + 36);
  *(void *)uint64_t v37 = v33;
  *(_OWORD *)(v37 + 8) = v67;
  *(_OWORD *)(v37 + 24) = v63;
  *(_OWORD *)(v37 + 40) = v62;
  *(void *)(v37 + 56) = v34;
  *(void *)(v37 + 64) = v35;
  *(_OWORD *)(v37 + 72) = v61;
  *(_OWORD *)(v37 + 88) = v60;
  sub_255A095A4((uint64_t)v12, &qword_26B29EBB0);
  uint64_t v38 = v68;
  sub_255B7014C(v68);
  sub_255C7DD68();
  sub_255B762EC();
  sub_255A09998(&qword_26B29EB70, &qword_26B29EB78);
  uint64_t v39 = v66;
  uint64_t v40 = v73;
  sub_255C7F8E8();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v38, v40);
  sub_255A095A4(v36, &qword_26B29EC88);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v2[12];
  long long v43 = *((_OWORD *)v2 + 1);
  long long v83 = *(_OWORD *)v2;
  long long v84 = v43;
  long long v44 = *((_OWORD *)v2 + 3);
  long long v85 = *((_OWORD *)v2 + 2);
  long long v86 = v44;
  long long v45 = *((_OWORD *)v2 + 5);
  long long v87 = *((_OWORD *)v2 + 4);
  long long v88 = v45;
  uint64_t v89 = v42;
  sub_255C7FE68();
  long long v74 = v91;
  long long v73 = v92;
  uint64_t v46 = v93;
  uint64_t v47 = v94;
  long long v68 = v95;
  long long v67 = v96;
  uint64_t v48 = v71;
  uint64_t v49 = (uint64_t)v69;
  uint64_t v50 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v39, v72);
  uint64_t v51 = v49 + *(int *)(v70 + 36);
  *(void *)uint64_t v51 = KeyPath;
  *(_OWORD *)(v51 + 8) = v74;
  *(_OWORD *)(v51 + 24) = v73;
  *(void *)(v51 + 40) = v46;
  *(void *)(v51 + 48) = v47;
  *(_OWORD *)(v51 + 56) = v68;
  *(_OWORD *)(v51 + 72) = v67;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v50);
  uint64_t v52 = v75;
  sub_255ABCB00(v75);
  uint64_t v53 = v77;
  sub_255B76434(v3, v77, type metadata accessor for SpringyViewModifier);
  unint64_t v54 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  uint64_t v55 = swift_allocObject();
  sub_255B75B98(v53, v55 + v54, type metadata accessor for SpringyViewModifier);
  sub_255B76500();
  sub_255B71390(&qword_26B29B540, MEMORY[0x263F18460]);
  uint64_t v56 = v80;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v52, v56);
  return sub_255A095A4(v49, &qword_26B29EC18);
}

uint64_t sub_255B7014C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = type metadata accessor for SpringyViewModifier(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7EC18();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_255C7DD28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECF0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED78();
  sub_255C7DCF8();
  uint64_t v23 = type metadata accessor for SpringyViewModifier;
  sub_255B76434(v2, (uint64_t)v6, type metadata accessor for SpringyViewModifier);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_255B75B98((uint64_t)v6, v17 + v16, type metadata accessor for SpringyViewModifier);
  sub_255B71390((unint64_t *)&unk_26B29D368, MEMORY[0x263F185B8]);
  sub_255B71390(&qword_26B29EB10, MEMORY[0x263F18588]);
  uint64_t v18 = v25;
  sub_255C800A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v18);
  sub_255B76434(v24, (uint64_t)v6, v23);
  uint64_t v19 = swift_allocObject();
  sub_255B75B98((uint64_t)v6, v19 + v16, type metadata accessor for SpringyViewModifier);
  sub_255A09998(&qword_26B29ECE8, &qword_26B29ECF0);
  uint64_t v20 = v27;
  sub_255C80098();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v20);
}

__n128 sub_255B7054C@<Q0>(_OWORD *a1@<X8>)
{
  sub_255B76A1C();
  sub_255C7E8C8();
  __n128 result = v7;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

__n128 sub_255B705A8@<Q0>(_OWORD *a1@<X8>)
{
  sub_255B76A1C();
  sub_255C7E8C8();
  __n128 result = v7;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

uint64_t sub_255B70608()
{
  return sub_255C7E8D8();
}

uint64_t sub_255B706A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SpringyViewModifier(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  __n128 v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_255C7DC38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v30 - v13;
  sub_255ABCB00((uint64_t)&v30 - v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v14, v8);
  if (result == *MEMORY[0x263F18448] || result == *MEMORY[0x263F18458])
  {
    if (qword_26B29E9A8 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(a1 + 96);
    long long v18 = *(_OWORD *)(a1 + 16);
    v42[0] = *(_OWORD *)a1;
    v42[1] = v18;
    long long v19 = *(_OWORD *)(a1 + 48);
    v42[2] = *(_OWORD *)(a1 + 32);
    v42[3] = v19;
    long long v20 = *(_OWORD *)(a1 + 80);
    v42[4] = *(_OWORD *)(a1 + 64);
    v42[5] = v20;
    uint64_t v43 = v17;
    long long v36 = xmmword_26B29E948;
    long long v37 = unk_26B29E958;
    long long v38 = xmmword_26B29E968;
    long long v39 = unk_26B29E978;
    long long v40 = xmmword_26B29E988;
    long long v41 = xmmword_26B29E998;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEF8);
    return sub_255C7FE78();
  }
  else if (result != *MEMORY[0x263F18450])
  {
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_255C7D898();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B2AA4E8);
    sub_255B76434(a1, (uint64_t)v7, type metadata accessor for SpringyViewModifier);
    sub_255B76434(a1, (uint64_t)v5, type metadata accessor for SpringyViewModifier);
    uint64_t v22 = sub_255C7D878();
    os_log_type_t v23 = sub_255C80BF8();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(void *)&v42[0] = v35;
      *(_DWORD *)uint64_t v25 = 136315394;
      os_log_t v31 = (os_log_t)(v25 + 4);
      int v33 = v24;
      sub_255ABCB00((uint64_t)v12);
      uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v32 = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v34(v12, v8);
      *(void *)&long long v36 = sub_255A7BEC4(0x616850656E656353, 0xEA00000000006573, (uint64_t *)v42);
      sub_255C80F18();
      os_log_t v31 = v22;
      sub_255B7701C((uint64_t)v7, type metadata accessor for SpringyViewModifier);
      *(_WORD *)(v25 + 12) = 2080;
      sub_255ABCB00((uint64_t)v12);
      uint64_t v26 = sub_255C80658();
      *(void *)&long long v36 = sub_255A7BEC4(v26, v27, (uint64_t *)v42);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255B7701C((uint64_t)v5, type metadata accessor for SpringyViewModifier);
      os_log_t v28 = v31;
      _os_log_impl(&dword_255A00000, v31, (os_log_type_t)v33, "Unhandled case for %s: %s", (uint8_t *)v25, 0x16u);
      uint64_t v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v29, -1, -1);
      MEMORY[0x25A297C00](v25, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v34)(v14, v8);
    }
    else
    {
      sub_255B7701C((uint64_t)v7, type metadata accessor for SpringyViewModifier);
      sub_255B7701C((uint64_t)v5, type metadata accessor for SpringyViewModifier);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  return result;
}

uint64_t sub_255B70BD4(uint64_t a1, long long *a2)
{
  uint64_t v3 = sub_255C7DC38();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  __n128 v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v32 - v8;
  type metadata accessor for SpringyViewModifier(0);
  sub_255ABCB00((uint64_t)v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F18450], v3);
  char v10 = sub_255C7DC28();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  v11(v9, v3);
  if ((v10 & 1) == 0)
  {
    if (qword_26B29E9A8 != -1) {
      swift_once();
    }
    uint64_t v28 = *((void *)a2 + 12);
    long long v29 = a2[1];
    long long v40 = *a2;
    long long v41 = v29;
    long long v30 = a2[3];
    long long v42 = a2[2];
    long long v43 = v30;
    long long v31 = a2[5];
    long long v44 = a2[4];
    long long v45 = v31;
    uint64_t v46 = v28;
    long long v48 = xmmword_26B29E948;
    long long v49 = unk_26B29E958;
    long long v50 = xmmword_26B29E968;
    long long v51 = unk_26B29E978;
    long long v52 = xmmword_26B29E988;
    long long v53 = xmmword_26B29E998;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEF8);
    return sub_255C7FE78();
  }
  uint64_t v12 = *(void *)a2;
  uint64_t v13 = *((void *)a2 + 1);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *((void *)a2 + 3);
  uint64_t v16 = *((void *)a2 + 4);
  uint64_t v17 = *((void *)a2 + 5);
  uint64_t v18 = *((void *)a2 + 6);
  uint64_t v19 = *((void *)a2 + 7);
  uint64_t v20 = *((void *)a2 + 8);
  uint64_t v21 = *((void *)a2 + 9);
  uint64_t v22 = *((void *)a2 + 10);
  uint64_t v23 = *((void *)a2 + 11);
  uint64_t v24 = *((void *)a2 + 12);
  *(void *)&long long v40 = *(void *)a2;
  *((void *)&v40 + 1) = v13;
  *(void *)&long long v41 = v14;
  *((void *)&v41 + 1) = v15;
  *(void *)&long long v42 = v16;
  *((void *)&v42 + 1) = v17;
  *(void *)&long long v43 = v18;
  *((void *)&v43 + 1) = v19;
  *(void *)&long long v44 = v20;
  *((void *)&v44 + 1) = v21;
  *(void *)&long long v45 = v22;
  *((void *)&v45 + 1) = v23;
  uint64_t v46 = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEF8);
  sub_255C7FE68();
  if (qword_269F20100 != -1) {
    swift_once();
  }
  long long v50 = xmmword_269F251D8;
  long long v51 = unk_269F251E8;
  long long v52 = xmmword_269F251F8;
  long long v53 = *(_OWORD *)&qword_269F25208;
  long long v48 = xmmword_269F251B8;
  long long v49 = unk_269F251C8;
  BOOL v26 = sub_255B76CBC(v47, (double *)&v48);
  uint64_t result = sub_255B76DAC((uint64_t)v47);
  if (!v26)
  {
    v32[1] = v25;
    *(void *)&long long v40 = v12;
    *((void *)&v40 + 1) = v13;
    *(void *)&long long v41 = v14;
    *((void *)&v41 + 1) = v15;
    *(void *)&long long v42 = v16;
    *((void *)&v42 + 1) = v17;
    *(void *)&long long v43 = v18;
    *((void *)&v43 + 1) = v19;
    *(void *)&long long v44 = v20;
    *((void *)&v44 + 1) = v21;
    *(void *)&long long v45 = v22;
    *((void *)&v45 + 1) = v23;
    uint64_t v46 = v24;
    long long v33 = xmmword_269F251B8;
    long long v34 = unk_269F251C8;
    long long v35 = xmmword_269F251D8;
    long long v36 = unk_269F251E8;
    long long v37 = xmmword_269F251F8;
    uint64_t v38 = qword_269F25208;
    uint64_t v39 = unk_269F25210;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_255C7FE78();
  }
  return result;
}

uint64_t sub_255B70F34()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEF8);
  sub_255C7FE68();
  if (qword_26B29E9A8 != -1) {
    swift_once();
  }
  v3[2] = xmmword_26B29E968;
  v3[3] = unk_26B29E978;
  v3[4] = xmmword_26B29E988;
  v3[5] = xmmword_26B29E998;
  v3[0] = xmmword_26B29E948;
  v3[1] = unk_26B29E958;
  BOOL v0 = sub_255B76CBC(v2, (double *)v3);
  uint64_t result = sub_255B76DAC((uint64_t)v2);
  if (!v0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_255C7FE78();
  }
  return result;
}

uint64_t sub_255B710C0()
{
  if (qword_26B29E888 != -1) {
    swift_once();
  }
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_26B29E948 = _Q0;
  unk_26B29E958 = xmmword_26B29E838;
  xmmword_26B29E968 = unk_26B29E848;
  unk_26B29E978 = xmmword_26B29E858;
  xmmword_26B29E988 = xmmword_26B29E868;
  qword_26B29E998 = qword_26B29E878;
  unk_26B29E9A0 = unk_26B29E880;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_255B71170()
{
  return sub_255C7E648();
}

uint64_t sub_255B71198()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B711B4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ContentBelowSliderStyle()
{
  return &type metadata for ContentBelowSliderStyle;
}

ValueMetadata *type metadata accessor for ContentInlineSliderStyle()
{
  return &type metadata for ContentInlineSliderStyle;
}

unint64_t sub_255B711F4()
{
  unint64_t result = qword_269F252C8;
  if (!qword_269F252C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25298);
    sub_255B712A0();
    sub_255B71390(&qword_26B29E9B0, (void (*)(uint64_t))type metadata accessor for SpringyViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F252C8);
  }
  return result;
}

unint64_t sub_255B712A0()
{
  unint64_t result = qword_269F252D0;
  if (!qword_269F252D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25290);
    sub_255A09998(&qword_269F252D8, &qword_269F25288);
    sub_255B71390(&qword_26B29E9E0, (void (*)(uint64_t))type metadata accessor for DraggableViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F252D0);
  }
  return result;
}

uint64_t type metadata accessor for DraggableViewModifier(uint64_t a1)
{
  return sub_255A151B4(a1, qword_26B29E9E8);
}

uint64_t sub_255B71390(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B713DC()
{
  unint64_t result = qword_269F252E0;
  if (!qword_269F252E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F252C0);
    sub_255B71488();
    sub_255B71390(&qword_26B29E9B0, (void (*)(uint64_t))type metadata accessor for SpringyViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F252E0);
  }
  return result;
}

unint64_t sub_255B71488()
{
  unint64_t result = qword_269F252E8;
  if (!qword_269F252E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F252B0);
    sub_255A09998(&qword_269F252F0, &qword_269F252A8);
    sub_255B71390(&qword_26B29E9E0, (void (*)(uint64_t))type metadata accessor for DraggableViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F252E8);
  }
  return result;
}

uint64_t destroy for SpringyViewModifier.Specs()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SpringyViewModifier.Specs(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SpringyViewModifier.Specs(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SpringyViewModifier.Specs(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpringyViewModifier.Specs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpringyViewModifier.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpringyViewModifier.Specs()
{
  return &type metadata for SpringyViewModifier.Specs;
}

uint64_t sub_255B7180C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    uint64_t v10 = a2[9];
    uint64_t v11 = a2[10];
    uint64_t v12 = a2[11];
    char v18 = *((unsigned char *)a2 + 96);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_255B719C4(v9, v10, v11, v12, v18);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    *(unsigned char *)(a1 + 96) = v18;
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_255C7E398();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B719C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_255B719D0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_255ABFD64(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7E398();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255B71AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  char v11 = *(unsigned char *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_255B719C4(v7, v8, v9, v10, v11);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v11;
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_255C7E398();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    void *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255B71C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  char v11 = *(unsigned char *)(a2 + 96);
  sub_255B719C4(v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  char v16 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v11;
  sub_255ABFD64(v12, v13, v14, v15, v16);
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(a3 + 32);
    char v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_255A095A4(a1 + v17, &qword_26B29B5A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_255C7E398();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *char v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B71DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_255C7E398();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255B71EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  char v6 = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  char v11 = *(unsigned char *)(a1 + 96);
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  *(unsigned char *)(a1 + 96) = v6;
  sub_255ABFD64(v7, v8, v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_255A095A4(a1 + v13, &qword_26B29B5A8);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7E398();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B72020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B72034);
}

uint64_t sub_255B72034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21668);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B720E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B720FC);
}

uint64_t sub_255B720FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21668);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B721A8()
{
  sub_255B73760(319, (unint64_t *)&qword_26B29B5B0, MEMORY[0x263F18DD8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_255B72278(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = a2;
    uint64_t v29 = a3;
    long long v30 = a2;
    uint64_t v11 = (char *)a1 + v9;
    long long v12 = (char *)v10 + v9;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *((void *)v12 + 1);
    uint64_t v15 = *((void *)v12 + 2);
    uint64_t v16 = *((void *)v12 + 3);
    uint64_t v17 = *((void *)v12 + 4);
    uint64_t v18 = *((void *)v12 + 5);
    uint64_t v20 = *((void *)v12 + 6);
    uint64_t v19 = *((void *)v12 + 7);
    uint64_t v26 = *((void *)v12 + 8);
    uint64_t v27 = *((void *)v12 + 9);
    char v28 = v12[80];
    sub_255ABFE50(*(void *)v12, v14, v15, v16, v17, v18, v20, v19, v26, v27, v28);
    *(void *)uint64_t v11 = v13;
    *((void *)v11 + 1) = v14;
    *((void *)v11 + 2) = v15;
    *((void *)v11 + 3) = v16;
    *((void *)v11 + 4) = v17;
    *((void *)v11 + 5) = v18;
    *((void *)v11 + 6) = v20;
    *((void *)v11 + 7) = v19;
    *((void *)v11 + 8) = v26;
    *((void *)v11 + 9) = v27;
    v11[80] = v28;
    uint64_t v21 = *(int *)(v29 + 28);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)v30 + v21;
    uint64_t v24 = *(void *)v23;
    LOBYTE(v19) = v23[8];
    sub_255A0877C(*(void *)v23, v19);
    *(void *)uint64_t v22 = v24;
    v22[8] = v19;
  }
  return a1;
}

uint64_t sub_255B72460(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  sub_255ABFF10(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(unsigned char *)(v5 + 80));
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_255A087D0(v7, v8);
}

void *sub_255B7253C(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  char v8 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a2;
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)v8 + v7;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  uint64_t v13 = *((void *)v10 + 2);
  uint64_t v14 = *((void *)v10 + 3);
  uint64_t v15 = *((void *)v10 + 4);
  uint64_t v16 = *((void *)v10 + 5);
  uint64_t v18 = *((void *)v10 + 6);
  uint64_t v17 = *((void *)v10 + 7);
  uint64_t v27 = a1;
  uint64_t v19 = *((void *)v10 + 8);
  uint64_t v25 = *((void *)v10 + 9);
  char v26 = v10[80];
  sub_255ABFE50(*(void *)v10, v12, v13, v14, v15, v16, v18, v17, v19, v25, v26);
  *(void *)uint64_t v9 = v11;
  *((void *)v9 + 1) = v12;
  *((void *)v9 + 2) = v13;
  *((void *)v9 + 3) = v14;
  *((void *)v9 + 4) = v15;
  *((void *)v9 + 5) = v16;
  *((void *)v9 + 6) = v18;
  *((void *)v9 + 7) = v17;
  *((void *)v9 + 8) = v19;
  *((void *)v9 + 9) = v25;
  v9[80] = v26;
  uint64_t v20 = *(int *)(v28 + 28);
  uint64_t v21 = (char *)v27 + v20;
  uint64_t v22 = (char *)v29 + v20;
  uint64_t v23 = *(void *)v22;
  LOBYTE(v17) = v22[8];
  sub_255A0877C(*(void *)v22, v17);
  *(void *)uint64_t v21 = v23;
  v21[8] = v17;
  return v27;
}

void *sub_255B726D8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  char v8 = a2;
  uint64_t v41 = a3;
  long long v42 = a2;
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)v8 + v7;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  uint64_t v13 = *((void *)v10 + 2);
  uint64_t v14 = *((void *)v10 + 3);
  uint64_t v15 = *((void *)v10 + 4);
  uint64_t v16 = *((void *)v10 + 5);
  uint64_t v18 = *((void *)v10 + 6);
  uint64_t v17 = *((void *)v10 + 7);
  long long v40 = a1;
  uint64_t v19 = *((void *)v10 + 8);
  uint64_t v38 = *((void *)v10 + 9);
  char v39 = v10[80];
  sub_255ABFE50(*(void *)v10, v12, v13, v14, v15, v16, v18, v17, v19, v38, v39);
  uint64_t v20 = *(void *)v9;
  uint64_t v21 = *((void *)v9 + 1);
  uint64_t v22 = *((void *)v9 + 2);
  uint64_t v23 = *((void *)v9 + 3);
  uint64_t v24 = *((void *)v9 + 4);
  uint64_t v25 = *((void *)v9 + 5);
  uint64_t v26 = *((void *)v9 + 6);
  uint64_t v27 = *((void *)v9 + 7);
  uint64_t v28 = *((void *)v9 + 8);
  uint64_t v29 = *((void *)v9 + 9);
  char v30 = v9[80];
  *(void *)uint64_t v9 = v11;
  *((void *)v9 + 1) = v12;
  *((void *)v9 + 2) = v13;
  *((void *)v9 + 3) = v14;
  *((void *)v9 + 4) = v15;
  *((void *)v9 + 5) = v16;
  *((void *)v9 + 6) = v18;
  *((void *)v9 + 7) = v17;
  *((void *)v9 + 8) = v19;
  *((void *)v9 + 9) = v38;
  v9[80] = v39;
  sub_255ABFF10(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v31 = *(int *)(v41 + 28);
  uint64_t v32 = (char *)v40 + v31;
  long long v33 = (char *)v42 + v31;
  uint64_t v34 = *(void *)v33;
  LOBYTE(v17) = v33[8];
  sub_255A0877C(*(void *)v33, v17);
  uint64_t v35 = *(void *)v32;
  char v36 = v32[8];
  *(void *)uint64_t v32 = v34;
  v32[8] = v17;
  sub_255A087D0(v35, v36);
  return v40;
}

char *sub_255B728C0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  v9[80] = v10[80];
  long long v12 = *((_OWORD *)v10 + 4);
  long long v13 = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 4) = v12;
  *((_OWORD *)v9 + 2) = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  return a1;
}

char *sub_255B729D8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, (uint64_t *)&unk_26B298500);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7EA18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[80];
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *((void *)v9 + 1);
  uint64_t v14 = *((void *)v9 + 2);
  uint64_t v15 = *((void *)v9 + 3);
  uint64_t v16 = *((void *)v9 + 4);
  uint64_t v17 = *((void *)v9 + 5);
  uint64_t v18 = *((void *)v9 + 6);
  uint64_t v19 = *((void *)v9 + 7);
  uint64_t v20 = *((void *)v9 + 8);
  uint64_t v21 = *((void *)v9 + 9);
  char v22 = v9[80];
  long long v23 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v23;
  long long v24 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v24;
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  v9[80] = v11;
  sub_255ABFF10(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v25 = a3[7];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  LOBYTE(v27) = v27[8];
  uint64_t v29 = *(void *)v26;
  char v30 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  sub_255A087D0(v29, v30);
  return a1;
}

uint64_t sub_255B72B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B72B54);
}

uint64_t sub_255B72B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 80);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_255B72C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B72C2C);
}

uint64_t sub_255B72C2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 80) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for CapsuleProgress(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F252F8);
}

void sub_255B72D10()
{
  sub_255B73760(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_255B72DD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v5 = a2[8];
    _OWORD v3[7] = a2[7];
    unsigned char v3[8] = v5;
    uint64_t v6 = a2[10];
    v3[9] = a2[9];
    v3[10] = v6;
    uint64_t v7 = a2[12];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)v3 + v8);
    unsigned int v10 = (uint64_t *)((char *)a2 + v8);
    v3[11] = a2[11];
    v3[12] = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_255B72F58(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DC38();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255B73030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7DC38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B73158(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B732EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7DC38();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255B733D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_255A095A4(a1 + v8, &qword_26B29B588);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7DC38();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B73524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B73538);
}

uint64_t sub_255B73538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B735EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B73600);
}

uint64_t sub_255B73600(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 64) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B736AC()
{
  sub_255B73760(319, &qword_26B29B590, MEMORY[0x263F18460]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_255B73760(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_255C7DD38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255B737B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B737D0()
{
  if (qword_269F20110 != -1) {
    swift_once();
  }
  xmmword_269F251B8 = (__int128)vdupq_n_s64(0x3FF0CCCCCCCCCCCDuLL);
  unk_269F251C8 = xmmword_269F25238;
  xmmword_269F251D8 = unk_269F25248;
  unk_269F251E8 = xmmword_269F25258;
  xmmword_269F251F8 = xmmword_269F25268;
  qword_269F25208 = qword_269F25278;
  unk_269F25210 = qword_269F25280;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

BOOL sub_255B7388C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v9[2] = a1[2];
  void v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_255B76CBC((double *)v9, (double *)v10);
}

uint64_t sub_255B738EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = (uint64_t *)v2;
  uint64_t v64 = a2;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB78);
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v59 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DraggableViewModifier(0);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v58 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBC0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC98);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECD8);
  MEMORY[0x270FA5388](v57);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEF0);
  uint64_t v63 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v65 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *(_OWORD *)(v2 + 80);
  v71[0] = *(_OWORD *)(v2 + 64);
  v71[1] = v20;
  char v72 = *(unsigned char *)(v2 + 96);
  sub_255A10514((uint64_t)v71, (uint64_t)v73, &qword_26B29EB18);
  sub_255B75B54((uint64_t)v73, (void (*)(void, void, void, void, void))sub_255B719C4);
  double v21 = sub_255ABCB38();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_255B75B54((uint64_t)v71, (void (*)(void, void, void, void, void))sub_255ABFD64);
  char v28 = sub_255C7F198();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v12, a1, v29);
  char v30 = &v12[*(int *)(v10 + 44)];
  *char v30 = v28;
  *((double *)v30 + 1) = v21;
  *((void *)v30 + 2) = v23;
  *((void *)v30 + 3) = v25;
  *((void *)v30 + 4) = v27;
  v30[40] = 0;
  sub_255A09540((uint64_t)v12, (uint64_t)v16, &qword_26B29EBC0);
  v16[*(int *)(v14 + 44)] = 0;
  sub_255A095A4((uint64_t)v12, &qword_26B29EBC0);
  uint64_t v31 = sub_255C801F8();
  long long v33 = v32;
  uint64_t v56 = type metadata accessor for DraggableViewModifier;
  unint64_t v54 = v8;
  sub_255B76434((uint64_t)v3, (uint64_t)v8, type metadata accessor for DraggableViewModifier);
  uint64_t v34 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v35 = (v34 + 16) & ~v34;
  uint64_t v58 = v35 + v7;
  uint64_t v55 = v34 | 7;
  uint64_t v36 = swift_allocObject();
  sub_255B75B98((uint64_t)v8, v36 + v35, type metadata accessor for DraggableViewModifier);
  sub_255A09540((uint64_t)v16, (uint64_t)v18, &qword_26B29EC98);
  uint64_t v37 = v57;
  uint64_t v38 = (uint64_t (**)(uint64_t))&v18[*(int *)(v57 + 36)];
  *uint64_t v38 = sub_255B75C00;
  v38[1] = (uint64_t (*)(uint64_t))v36;
  v38[2] = (uint64_t (*)(uint64_t))v31;
  v38[3] = v33;
  sub_255A095A4((uint64_t)v16, &qword_26B29EC98);
  uint64_t v39 = v59;
  sub_255B74350(v59);
  sub_255C7DD68();
  unint64_t v40 = sub_255B75C2C();
  uint64_t v41 = sub_255A09998(&qword_26B29EB70, &qword_26B29EB78);
  uint64_t v42 = v37;
  uint64_t v43 = v61;
  sub_255C7F8E8();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v39, v43);
  sub_255A095A4((uint64_t)v18, &qword_26B29ECD8);
  uint64_t v44 = v3[1];
  unint64_t v45 = v3[2];
  uint64_t v66 = *v3;
  uint64_t v67 = v44;
  unint64_t v68 = v45;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE38);
  MEMORY[0x25A295850](&v70, v46);
  uint64_t v47 = (uint64_t)v54;
  sub_255B76434((uint64_t)v3, (uint64_t)v54, v56);
  uint64_t v48 = swift_allocObject();
  sub_255B75B98(v47, v48 + v35, type metadata accessor for DraggableViewModifier);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_255B75E10;
  *(void *)(v49 + 24) = v48;
  uint64_t v66 = v42;
  uint64_t v67 = v43;
  unint64_t v68 = v40;
  uint64_t v69 = v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v60;
  long long v51 = v65;
  sub_255C7FB38();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v51, v50);
}

uint64_t sub_255B73F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v26 = a1;
  uint64_t v5 = sub_255C7E0F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DraggableViewModifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_255C7FC78();
  uint64_t v31 = type metadata accessor for DraggableViewModifier;
  sub_255B76434(a2, (uint64_t)v12, type metadata accessor for DraggableViewModifier);
  char v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v30(v8, a1, v5);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = (v11 + v15 + v14) & ~v15;
  uint64_t v27 = v13 | v15 | 7;
  uint64_t v28 = v16 + v7;
  uint64_t v17 = swift_allocObject();
  sub_255B75B98((uint64_t)v12, v17 + v14, type metadata accessor for DraggableViewModifier);
  uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v25(v17 + v16, v8, v5);
  uint64_t v36 = v29;
  uint64_t v37 = sub_255B75FDC;
  uint64_t v38 = v17;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v18 = v26;
  sub_255C7E0D8();
  uint64_t v34 = v19;
  uint64_t v35 = v20;
  sub_255B76434(v32, (uint64_t)v12, v31);
  uint64_t v21 = v18;
  uint64_t v22 = v5;
  v30(v8, v21, v5);
  uint64_t v23 = swift_allocObject();
  sub_255B75B98((uint64_t)v12, v23 + v14, type metadata accessor for DraggableViewModifier);
  v25(v23 + v16, v8, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC40);
  type metadata accessor for CGSize(0);
  sub_255B76278();
  sub_255B71390(&qword_26B29BF08, type metadata accessor for CGSize);
  sub_255C7FB48();
  swift_release();
  swift_release();
  sub_255A0DE20((uint64_t)v37);
  return sub_255A0DE20(v39);
}

uint64_t sub_255B742F4()
{
  return sub_255C7FE78();
}

uint64_t sub_255B74350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = type metadata accessor for DraggableViewModifier(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7EC18();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_255C7DD28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECF0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED78();
  sub_255C7DCF8();
  uint64_t v23 = type metadata accessor for DraggableViewModifier;
  sub_255B76434(v2, (uint64_t)v6, type metadata accessor for DraggableViewModifier);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_255B75B98((uint64_t)v6, v17 + v16, type metadata accessor for DraggableViewModifier);
  sub_255B71390((unint64_t *)&unk_26B29D368, MEMORY[0x263F185B8]);
  sub_255B71390(&qword_26B29EB10, MEMORY[0x263F18588]);
  uint64_t v18 = v25;
  sub_255C800A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v18);
  sub_255B76434(v24, (uint64_t)v6, v23);
  uint64_t v19 = swift_allocObject();
  sub_255B75B98((uint64_t)v6, v19 + v16, type metadata accessor for DraggableViewModifier);
  sub_255A09998(&qword_26B29ECE8, &qword_26B29ECF0);
  uint64_t v20 = v27;
  sub_255C80098();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v20);
}

uint64_t sub_255B74750(uint64_t a1, uint64_t *a2)
{
  uint64_t v26 = a1;
  uint64_t v3 = sub_255C7E398();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = a2[5];
  char v11 = *((unsigned char *)a2 + 48);
  uint64_t v12 = a2[7];
  uint64_t v27 = v10;
  LOBYTE(v28) = v11;
  uint64_t v29 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF18);
  sub_255C7FE68();
  if (v31)
  {
    uint64_t v13 = a2[1];
    uint64_t v14 = a2[2];
    uint64_t v27 = *a2;
    uint64_t v28 = v13;
    uint64_t v29 = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE38);
    MEMORY[0x25A295850](&v30, v15);
    uint64_t v27 = v10;
    LOBYTE(v28) = v11;
    uint64_t v29 = v12;
    char v31 = 0;
    return sub_255C7FE78();
  }
  else
  {
    double v17 = v30;
    type metadata accessor for DraggableViewModifier(0);
    sub_255ABA128((uint64_t)v9);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F18DC8], v3);
    char v18 = sub_255C7E388();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v7, v3);
    v19(v9, v3);
    sub_255C7DD08();
    uint64_t v21 = a2[4];
    if (v18) {
      double v22 = v20;
    }
    else {
      double v22 = -v20;
    }
    uint64_t v27 = a2[3];
    uint64_t v28 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF10);
    sub_255C7FE68();
    double v23 = v17 + v22 / v30;
    if (v23 > 1.0) {
      double v23 = 1.0;
    }
    uint64_t v24 = a2[1];
    uint64_t v25 = a2[2];
    uint64_t v27 = *a2;
    uint64_t v28 = v24;
    if (v23 <= 0.0) {
      double v23 = 0.0;
    }
    uint64_t v29 = v25;
    double v30 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE38);
    return sub_255C7FFE8();
  }
}

uint64_t sub_255B749C4()
{
  return sub_255C7FE78();
}

void sub_255B74A28(double a1, double a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF18);
  sub_255C7FE68();
  BOOL v4 = a2 == 1.0 || a2 == 0.0;
  if (v4 && (v6 & 1) == 0 && a1 != a2)
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82830]), sel_initWithStyle_, 0);
    objc_msgSend(v5, sel_impactOccurred);
  }
}

double sub_255B74AE4()
{
  double result = 0.0;
  xmmword_269F25218 = 0u;
  unk_269F25228 = 0u;
  return result;
}

double sub_255B74AF8@<D0>(_OWORD *a1@<X8>)
{
  if (qword_26B29ED28 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_269F25218;
  long long v3 = unk_269F25228;
  *a1 = xmmword_269F25218;
  a1[1] = v3;
  return result;
}

double sub_255B74B58@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CapsuleProgress(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v3);
  sub_255B76434(v1, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapsuleProgress);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  sub_255B75B98((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v7, type metadata accessor for CapsuleProgress);
  uint64_t v8 = v1 + *(int *)(v4 + 32);
  long long v9 = *(_OWORD *)(v8 + 48);
  v34[2] = *(_OWORD *)(v8 + 32);
  v34[3] = v9;
  v34[4] = *(_OWORD *)(v8 + 64);
  char v35 = *(unsigned char *)(v8 + 80);
  long long v10 = *(_OWORD *)(v8 + 16);
  v34[0] = *(_OWORD *)v8;
  v34[1] = v10;
  sub_255ABFEB4((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v24);
  sub_255ABFEB4((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v22 = v28;
  LOBYTE(v7) = v29;
  uint64_t v11 = v30;
  char v12 = v31;
  uint64_t v13 = v32;
  uint64_t v21 = v33;
  sub_255ABFEB4((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v24);
  sub_255ABFEB4((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  long long v20 = v25;
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  char v16 = sub_255C7F198();
  uint64_t v17 = v23;
  *(void *)a1 = sub_255B76F58;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v22;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = v12;
  uint64_t v18 = v21;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v18;
  *(unsigned char *)(a1 + 64) = v16;
  double result = *(double *)&v20;
  *(_OWORD *)(a1 + 72) = v20;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_255B74E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v60 = sub_255C7E518() - 8;
  MEMORY[0x270FA5388](v60);
  uint64_t v59 = (double *)((char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_255C7EA18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  long long v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v52 - v11;
  uint64_t v56 = sub_255C802C8();
  uint64_t v13 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25320);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25328);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  unint64_t v54 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25330) - 8;
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25338);
  MEMORY[0x270FA5388](v63);
  uint64_t v64 = (uint64_t)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25340);
  MEMORY[0x270FA5388](v61);
  uint64_t v62 = (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v17 = sub_255C7E928();
  *((void *)v17 + 1) = 0;
  v17[16] = 0;
  uint64_t v24 = (uint64_t)&v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F25348) + 44)];
  uint64_t v53 = a2;
  sub_255B755A0(a2, a1, v24);
  sub_255ABA66C((uint64_t)v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F19968], v6);
  LOBYTE(a1) = sub_255C7DCB8();
  long long v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  v25(v10, v6);
  v25(v12, v6);
  uint64_t v26 = (unsigned int *)MEMORY[0x263F1B968];
  if ((a1 & 1) == 0) {
    uint64_t v26 = (unsigned int *)MEMORY[0x263F1B998];
  }
  uint64_t v28 = v55;
  uint64_t v27 = v56;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v55, *v26, v56);
  uint64_t v29 = (uint64_t)v54;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(&v54[*(int *)(v19 + 44)], v28, v27);
  sub_255A09540((uint64_t)v17, v29, &qword_269F25320);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v27);
  sub_255A095A4((uint64_t)v17, &qword_269F25320);
  uint64_t v30 = type metadata accessor for CapsuleProgress(0);
  uint64_t v31 = v53;
  uint64_t v32 = v53 + *(int *)(v30 + 24);
  long long v33 = *(_OWORD *)(v32 + 48);
  v69[2] = *(_OWORD *)(v32 + 32);
  v69[3] = v33;
  v69[4] = *(_OWORD *)(v32 + 64);
  char v70 = *(unsigned char *)(v32 + 80);
  long long v34 = *(_OWORD *)(v32 + 16);
  v69[0] = *(_OWORD *)v32;
  v69[1] = v34;
  sub_255ABFEB4((uint64_t)v69, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v67);
  sub_255ABFEB4((uint64_t)v69, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  double v35 = *(double *)v67;
  swift_release();
  uint64_t v36 = (uint64_t)v57;
  swift_release();
  swift_release();
  swift_release();
  double v37 = v35 * 0.5;
  uint64_t v38 = v59;
  uint64_t v39 = (char *)v59 + *(int *)(v60 + 28);
  uint64_t v40 = *MEMORY[0x263F19860];
  uint64_t v41 = sub_255C7E988();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  *uint64_t v38 = v37;
  v38[1] = v37;
  uint64_t v42 = v36 + *(int *)(v58 + 44);
  sub_255B76434((uint64_t)v38, v42, MEMORY[0x263F19048]);
  *(_WORD *)(v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F240) + 36)) = 256;
  sub_255A09540(v29, v36, &qword_269F25328);
  sub_255B7701C((uint64_t)v38, MEMORY[0x263F19048]);
  sub_255A095A4(v29, &qword_269F25328);
  uint64_t v43 = v31 + *(int *)(v30 + 28);
  uint64_t v44 = *(void *)v43;
  LOBYTE(v30) = *(unsigned char *)(v43 + 8);
  sub_255A0877C(*(void *)v43, v30);
  LOBYTE(v40) = sub_255ABA6A4(v44, v30);
  sub_255A087D0(v44, v30);
  double v45 = 1.0;
  if ((v40 & 1) == 0)
  {
    long long v46 = *(_OWORD *)(v32 + 48);
    v67[2] = *(_OWORD *)(v32 + 32);
    v67[3] = v46;
    v67[4] = *(_OWORD *)(v32 + 64);
    char v68 = *(unsigned char *)(v32 + 80);
    long long v47 = *(_OWORD *)(v32 + 16);
    v67[0] = *(_OWORD *)v32;
    v67[1] = v47;
    sub_255ABFEB4((uint64_t)v67, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
    sub_255ABCD6C((uint64_t)v66);
    sub_255ABFEB4((uint64_t)v67, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
    double v45 = *(double *)&v66[5];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v48 = v64;
  sub_255A09540(v36, v64, &qword_269F25330);
  *(double *)(v48 + *(int *)(v63 + 36)) = v45;
  sub_255A095A4(v36, &qword_269F25330);
  uint64_t v49 = v62;
  sub_255A09540(v48, v62, &qword_269F25338);
  uint64_t v50 = (uint64_t (**)())(v49 + *(int *)(v61 + 36));
  *uint64_t v50 = sub_255B75AF0;
  v50[1] = 0;
  sub_255A095A4(v48, &qword_269F25338);
  return sub_255A10514(v49, v65, &qword_269F25340);
}

uint64_t sub_255B755A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v41 = a1;
  uint64_t v46 = a3;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246F0) - 8;
  uint64_t v4 = MEMORY[0x270FA5388](v49);
  uint64_t v6 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25350);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v45 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v47 = (uint64_t)&v38 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25358);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v43 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (uint64_t)&v38 - v17;
  uint64_t v40 = type metadata accessor for CapsuleProgress(0);
  uint64_t v18 = a1 + *(int *)(v40 + 24);
  long long v19 = *(_OWORD *)(v18 + 48);
  v58[2] = *(_OWORD *)(v18 + 32);
  v58[3] = v19;
  v58[4] = *(_OWORD *)(v18 + 64);
  char v59 = *(unsigned char *)(v18 + 80);
  long long v20 = *(_OWORD *)(v18 + 16);
  v58[0] = *(_OWORD *)v18;
  v58[1] = v20;
  sub_255ABFEB4((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v54);
  sub_255ABFEB4((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  uint64_t v39 = *((void *)&v55 + 1);
  swift_release();
  swift_release();
  swift_release();
  sub_255ABFEB4((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v54);
  sub_255ABFEB4((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  uint64_t v21 = *((void *)&v56 + 1);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v22 = (void *)((char *)v6 + *(int *)(v49 + 64));
  *uint64_t v22 = swift_getKeyPath();
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  *uint64_t v6 = v39;
  v6[1] = v21;
  sub_255A10514((uint64_t)v6, (uint64_t)v8, &qword_269F246F0);
  uint64_t v23 = v47;
  sub_255A09540((uint64_t)v8, v47, &qword_269F246F0);
  sub_255A095A4((uint64_t)v8, &qword_269F246F0);
  sub_255C7E0D8();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v24 = v43;
  sub_255A09540(v23, v43, &qword_269F25350);
  long long v25 = (_OWORD *)(v24 + *(int *)(v14 + 44));
  long long v26 = v52;
  _OWORD *v25 = v51;
  v25[1] = v26;
  v25[2] = v53;
  sub_255A095A4(v23, &qword_269F25350);
  sub_255A10514(v24, v48, &qword_269F25358);
  long long v27 = *(_OWORD *)(v18 + 48);
  v54[2] = *(_OWORD *)(v18 + 32);
  long long v55 = v27;
  long long v56 = *(_OWORD *)(v18 + 64);
  char v57 = *(unsigned char *)(v18 + 80);
  long long v28 = *(_OWORD *)(v18 + 16);
  v54[0] = *(_OWORD *)v18;
  v54[1] = v28;
  sub_255ABFEB4((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v50);
  sub_255ABFEB4((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  uint64_t v29 = v50[6];
  swift_release();
  swift_release();
  swift_release();
  sub_255ABFEB4((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  sub_255ABCD6C((uint64_t)v50);
  sub_255ABFEB4((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
  uint64_t v30 = v50[8];
  swift_release();
  swift_release();
  swift_release();
  uint64_t v31 = (void *)((char *)v6 + *(int *)(v49 + 64));
  uint64_t *v31 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *uint64_t v6 = v29;
  v6[1] = v30;
  sub_255A10514((uint64_t)v6, (uint64_t)v8, &qword_269F246F0);
  uint64_t v32 = v45;
  sub_255A09540((uint64_t)v8, v45, &qword_269F246F0);
  sub_255A095A4((uint64_t)v8, &qword_269F246F0);
  uint64_t v33 = v47;
  sub_255A10514(v32, v47, &qword_269F25350);
  uint64_t v34 = v48;
  sub_255A09540(v48, v24, &qword_269F25358);
  sub_255A09540(v33, v32, &qword_269F25350);
  uint64_t v35 = v46;
  sub_255A09540(v24, v46, &qword_269F25358);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25360);
  sub_255A09540(v32, v35 + *(int *)(v36 + 48), &qword_269F25350);
  sub_255A095A4(v33, &qword_269F25350);
  sub_255A095A4(v34, &qword_269F25358);
  sub_255A095A4(v32, &qword_269F25350);
  return sub_255A095A4(v24, &qword_269F25358);
}

uint64_t sub_255B75AF0()
{
  return sub_255C7DDE8();
}

uint64_t sub_255B75B1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B75B38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B75B54(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_255B75B98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255B75C00(uint64_t a1)
{
  return sub_255B76F84(a1, type metadata accessor for DraggableViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_255B73F9C);
}

unint64_t sub_255B75C2C()
{
  unint64_t result = qword_26B29ECD0;
  if (!qword_26B29ECD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ECD8);
    sub_255B75CCC();
    sub_255A09998(&qword_26B29EDC8, &qword_26B29EDD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29ECD0);
  }
  return result;
}

unint64_t sub_255B75CCC()
{
  unint64_t result = qword_26B29EC90;
  if (!qword_26B29EC90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC98);
    sub_255B75D6C();
    sub_255A09998(&qword_26B29BA70, &qword_26B29BA78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EC90);
  }
  return result;
}

unint64_t sub_255B75D6C()
{
  unint64_t result = qword_26B29EBB8;
  if (!qword_26B29EBB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EBC0);
    sub_255A09998(&qword_26B29EE20, &qword_26B29EE28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EBB8);
  }
  return result;
}

void sub_255B75E10(double a1, double a2)
{
  type metadata accessor for DraggableViewModifier(0);

  sub_255B74A28(a1, a2);
}

uint64_t sub_255B75E88()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B75EC0(double *a1, double *a2)
{
  return (*(uint64_t (**)(double, double))(v2 + 16))(*a1, *a2);
}

uint64_t sub_255B75EF4(uint64_t a1)
{
  return sub_255B75F50(a1, type metadata accessor for DraggableViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_255B74750);
}

uint64_t sub_255B75F24(uint64_t a1)
{
  return sub_255B75F50(a1, type metadata accessor for DraggableViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_255B749C4);
}

uint64_t sub_255B75F50(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t objectdestroy_24Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for DraggableViewModifier(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_255C7E0F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_255ABFD64(*(void *)(v0 + v2 + 64), *(void *)(v0 + v2 + 72), *(void *)(v0 + v2 + 80), *(void *)(v0 + v2 + 88), *(unsigned char *)(v0 + v2 + 96));
  unint64_t v7 = v0 + v2 + v1[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7E398();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_255B761B8()
{
  return sub_255B742F4();
}

unint64_t sub_255B76278()
{
  unint64_t result = qword_26B29EC38;
  if (!qword_26B29EC38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EC38);
  }
  return result;
}

unint64_t sub_255B762EC()
{
  unint64_t result = qword_26B29EC80;
  if (!qword_26B29EC80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC88);
    sub_255B7638C();
    sub_255A09998(&qword_26B29EDA0, &qword_26B29EDA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EC80);
  }
  return result;
}

unint64_t sub_255B7638C()
{
  unint64_t result = qword_26B29EBA8;
  if (!qword_26B29EBA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EBB0);
    sub_255A09998(&qword_26B29EE10, &qword_26B29EE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EBA8);
  }
  return result;
}

uint64_t sub_255B76434(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255B764A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SpringyViewModifier(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_255B706A0(v2);
}

unint64_t sub_255B76500()
{
  unint64_t result = qword_26B29EC10;
  if (!qword_26B29EC10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC18);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC88);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB78);
    sub_255B762EC();
    sub_255A09998(&qword_26B29EB70, &qword_26B29EB78);
    swift_getOpaqueTypeConformance2();
    sub_255A09998(&qword_26B29EE90, &qword_26B29EE98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EC10);
  }
  return result;
}

uint64_t sub_255B76624()
{
  if (qword_26B29E888 != -1) {
    swift_once();
  }
  xmmword_26B29ED38 = xmmword_26B29E838;
  unk_26B29ED48 = unk_26B29E848;
  xmmword_26B29ED58 = xmmword_26B29E858;
  xmmword_26B29ED68 = xmmword_26B29E868;
  qword_26B29ED78 = qword_26B29E878;
  unk_26B29ED80 = unk_26B29E880;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_255B766D0@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B29ED90 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26B29ED68;
  uint64_t v3 = qword_26B29ED78;
  uint64_t v4 = unk_26B29ED80;
  long long v5 = unk_26B29ED48;
  *(_OWORD *)a1 = xmmword_26B29ED38;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = xmmword_26B29ED58;
  *(_OWORD *)(a1 + 48) = v2;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_255B76778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255B77844();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

double sub_255B767DC()
{
  if (qword_269F1FF08 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_269F33058;
  uint64_t v1 = qword_269F1FF00;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269F33050;
  uint64_t v3 = self;
  swift_retain();
  uint64_t v4 = MEMORY[0x25A295490](objc_msgSend(v3, sel_systemFillColor));
  uint64_t v5 = MEMORY[0x25A295490](objc_msgSend(v3, sel_systemGrayColor));
  xmmword_26B29E838 = xmmword_255C91190;
  unk_26B29E848 = xmmword_255C911A0;
  double result = 0.0;
  xmmword_26B29E858 = xmmword_255C911B0;
  qword_26B29E868 = v0;
  unk_26B29E870 = v2;
  qword_26B29E878 = v4;
  unk_26B29E880 = v5;
  return result;
}

double sub_255B768FC()
{
  if (qword_269F1FF08 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_269F33058;
  swift_retain();
  uint64_t v1 = sub_255C7FC88();
  id v2 = objc_msgSend(self, sel_systemFillColor);
  uint64_t v3 = MEMORY[0x25A295490](v2);
  uint64_t v4 = sub_255C7FCB8();
  *(void *)&xmmword_269F25238 = 0x4030000000000000;
  double result = 0.0;
  *(long long *)((char *)&xmmword_269F25238 + 8) = 0u;
  unk_269F25250 = 0u;
  *((void *)&xmmword_269F25258 + 1) = 0x3FD0000000000000;
  qword_269F25268 = v0;
  qword_269F25270 = v1;
  qword_269F25278 = v3;
  qword_269F25280 = v4;
  return result;
}

uint64_t sub_255B769C0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  v9[2] = a2[2];
  void v9[3] = v5;
  v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_255B76C08((double *)v8, (double *)v9) & 1;
}

unint64_t sub_255B76A1C()
{
  unint64_t result = qword_26B29ED98;
  if (!qword_26B29ED98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29ED98);
  }
  return result;
}

uint64_t objectdestroy_34Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for SpringyViewModifier(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7DC38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255B76BAC(uint64_t a1)
{
  return sub_255B75F50(a1, type metadata accessor for SpringyViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_255B70BD4);
}

uint64_t sub_255B76BDC(uint64_t a1)
{
  return sub_255B75F50(a1, type metadata accessor for SpringyViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_255B70F34);
}

uint64_t sub_255B76C08(double *a1, double *a2)
{
  if (*a1 != *a2
    || (sub_255C7DBF8() & 1) == 0
    || a1[5] != a2[5]
    || (sub_255C7FC48() & 1) == 0
    || (sub_255C7FC48() & 1) == 0
    || (sub_255C7FC48() & 1) == 0)
  {
    return 0;
  }

  return sub_255C7FC48();
}

BOOL sub_255B76CBC(double *a1, double *a2)
{
  BOOL result = 0;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
  {
    double v2 = a2[7];
    double v3 = a1[7];
    if ((sub_255C7DBF8() & 1) != 0
      && v3 == v2
      && (sub_255C7FC48() & 1) != 0
      && (sub_255C7FC48() & 1) != 0
      && (sub_255C7FC48() & 1) != 0
      && (sub_255C7FC48() & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_255B76DAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B76DFC()
{
  uint64_t v1 = type metadata accessor for CapsuleProgress(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7EA18();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + *(int *)(v1 + 24);
  sub_255ABFF10(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(unsigned char *)(v5 + 80));
  sub_255A087D0(*(void *)(v3 + *(int *)(v1 + 28)), *(unsigned char *)(v3 + *(int *)(v1 + 28) + 8));

  return swift_deallocObject();
}

uint64_t sub_255B76F58(uint64_t a1)
{
  return sub_255B76F84(a1, type metadata accessor for CapsuleProgress, (uint64_t (*)(uint64_t, uint64_t))sub_255B74E28);
}

uint64_t sub_255B76F84(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_255B7701C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_255B77090()
{
  unint64_t result = qword_26B29ED30;
  if (!qword_26B29ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29ED30);
  }
  return result;
}

unint64_t sub_255B770EC()
{
  unint64_t result = qword_26B29ECB0;
  if (!qword_26B29ECB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ECB8);
    sub_255B7718C();
    sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29ECB0);
  }
  return result;
}

unint64_t sub_255B7718C()
{
  unint64_t result = qword_26B29EBD8;
  if (!qword_26B29EBD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EBE0);
    sub_255A09998((unint64_t *)&unk_26B29EB48, (uint64_t *)&unk_26B29EB58);
    sub_255A09998(&qword_26B29EEA0, &qword_26B29EEA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EBD8);
  }
  return result;
}

uint64_t sub_255B77258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C7E888();
  *a1 = result;
  return result;
}

uint64_t sub_255B77284()
{
  return sub_255C7E898();
}

ValueMetadata *_s17DragAreaInsetsKeyVMa()
{
  return &_s17DragAreaInsetsKeyVN;
}

ValueMetadata *_s23CapsuleProgressSpecsKeyVMa()
{
  return &_s23CapsuleProgressSpecsKeyVN;
}

uint64_t destroy for CapsuleProgress.Specs()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CapsuleProgress.Specs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CapsuleProgress.Specs(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for CapsuleProgress.Specs(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CapsuleProgress.Specs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CapsuleProgress.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleProgress.Specs()
{
  return &type metadata for CapsuleProgress.Specs;
}

uint64_t sub_255B77584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B77678()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B77728()
{
  unint64_t result = qword_269F25398;
  if (!qword_269F25398)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F253A0);
    sub_255B777A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25398);
  }
  return result;
}

unint64_t sub_255B777A4()
{
  unint64_t result = qword_269F253A8;
  if (!qword_269F253A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F253B0);
    sub_255A09998(&qword_269F253B8, &qword_269F253C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F253A8);
  }
  return result;
}

unint64_t sub_255B77844()
{
  unint64_t result = qword_269F253C8;
  if (!qword_269F253C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F253C8);
  }
  return result;
}

unint64_t sub_255B778A0()
{
  unint64_t result = qword_26B29DE30[0];
  if (!qword_26B29DE30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B29DE30);
  }
  return result;
}

ValueMetadata *type metadata accessor for IsLoadingKey()
{
  return &type metadata for IsLoadingKey;
}

void sub_255B77904(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  unint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    while (__OFSUB__(v6--, 1))
    {
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      unint64_t v6 = sub_255C812B8();
      if (!v6) {
        goto LABEL_11;
      }
    }
    if ((a3 & 0xC000000000000001) != 0)
    {
      id v8 = (id)MEMORY[0x25A2969C0](v6, a3);
      goto LABEL_9;
    }
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_14;
    }
    if (v6 >= *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_15;
    }
    id v8 = *(id *)(a3 + 32 + 8 * v6);
LABEL_9:
    uint64_t v9 = v8;
    id v10 = v8;
    a1(&v10);
    if (v3) {
      break;
    }

    if (!v6) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
}

id ScopeBar.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void *ScopeBar.init()()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (void *)MEMORY[0x263F8EED0];
  uint64_t v4 = *MEMORY[0x263F8EED0] & *(void *)v0;
  uint64_t v5 = &v0[*(void *)(v4 + 0x60)];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  unint64_t v6 = &v0[*(void *)((*v3 & *(void *)v0) + 0x68)];
  *(_OWORD *)unint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v6[32] = 1;
  uint64_t v7 = *(void *)((*v3 & *(void *)v0) + 0x70);
  uint64_t v8 = *(void *)(v4 + 80);
  uint64_t v9 = v1;
  *(void *)&v1[v7] = sub_255C80848();
  id v10 = &v9[*(void *)((*v3 & *(void *)v9) + 0x78)];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v9[*(void *)((*v3 & *(void *)v9) + 0x80)];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(&v9[*(void *)((*v3 & *(void *)v9) + 0x88)], 1, 1, v8);
  *(void *)&v9[*(void *)((*v3 & *(void *)v9) + 0x90)] = 0;
  uint64_t v12 = *(void *)((*v3 & *(void *)v9) + 0x98);
  *(void *)&v9[v12] = sub_255B7C838();
  *(void *)&v9[*(void *)((*v3 & *(void *)v9) + 0xA0)] = MEMORY[0x263F8EE78];
  *(void *)&v9[*(void *)((*v3 & *(void *)v9) + 0xA8)] = 0;
  *(void *)&v9[*(void *)((*v3 & *(void *)v9) + 0xB0)] = 0;
  v9[*(void *)((*v3 & *(void *)v9) + 0xB8)] = 0;

  v26.receiver = v9;
  v26.super_class = (Class)type metadata accessor for ScopeBar();
  uint64_t v13 = objc_msgSendSuper2(&v26, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v13, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v13, sel_setAlwaysBounceHorizontal_, 1);
  sub_255B853BC(v27);
  double v14 = v27[10];
  swift_retain();
  sub_255B85588((uint64_t)v27);
  id v15 = objc_msgSend(v13, sel_traitCollection);
  id v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  double v17 = (*(double (**)(id))&v14)(v16);
  swift_release();
  *(double *)((char *)v13 + *(void *)((*v3 & *v13) + 0x90)) = v17;
  id v18 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v18, sel_setMask_, *(void *)((char *)v13 + *(void *)((*v3 & *v13) + 0x98)));

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F168);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_255C855F0;
  uint64_t v20 = sub_255C7D948();
  uint64_t v21 = MEMORY[0x263F82018];
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v21;
  uint64_t v22 = sub_255C7D928();
  uint64_t v23 = MEMORY[0x263F81F30];
  *(void *)(v19 + 48) = v22;
  *(void *)(v19 + 56) = v23;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  uint64_t v24 = v13;
  sub_255C80D68();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v24;
}

void *sub_255B77ED8()
{
  return ScopeBar.init()();
}

void *ScopeBar.__allocating_init(scopes:)(uint64_t a1)
{
  uint64_t v3 = objc_msgSend(objc_allocWithZone(v1), sel_init);
  uint64_t v4 = (void *)((char *)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x70));
  swift_beginAccess();
  *uint64_t v4 = a1;
  uint64_t v5 = v3;
  swift_bridgeObjectRelease();
  sub_255B7DBF4();

  return v5;
}

id ScopeBar.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_255B77FEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _s11MediaCoreUI8ScopeBarC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

id sub_255B78014(uint64_t a1, double a2, double a3)
{
  unsigned __int8 v7 = objc_msgSend(v3, sel_isHidden);
  uint64_t v8 = (objc_class *)type metadata accessor for ScopeBar();
  if (v7)
  {
    v11.receiver = v3;
    v11.super_class = v8;
    return objc_msgSendSuper2(&v11, sel_hitTest_withEvent_, a1, a2, a3);
  }
  else
  {
    v12.receiver = v3;
    v12.super_class = v8;
    id result = objc_msgSendSuper2(&v12, sel_hitTest_withEvent_, a1, a2, a3);
    if (result)
    {
      id v10 = result;
      self;
      id result = (id)swift_dynamicCastObjCClass();
      if (!result)
      {

        return 0;
      }
    }
  }
  return result;
}

id sub_255B78130(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  id v10 = a1;
  id v11 = sub_255B78014((uint64_t)a5, a2, a3);

  return v11;
}

double sub_255B781AC()
{
  return *(double *)((char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x60));
}

void sub_255B781E0(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = (double *)((char *)v4 + *(void *)((*MEMORY[0x263F8EED0] & *v4) + 0x60));
  *uint64_t v5 = a1;
  v5[1] = a2;
  _OWORD v5[2] = a3;
  v5[3] = a4;
}

id sub_255B78214()
{
  id v1 = (void *)MEMORY[0x263F8EED0];
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  id v10 = (double *)((char *)v0 + *(void *)((*v1 & *v0) + 0x60));
  if (sub_255AA4608(v10[2], v10[3], v6, v8))
  {
    sub_255B7CD98();
    sub_255B7D11C();
    sub_255B7C9E4();
  }
  id v11 = (double *)((char *)v0 + *(void *)((*v1 & *v0) + 0x60));
  *id v11 = v3;
  v11[1] = v5;
  void v11[2] = v7;
  v11[3] = v9;
  objc_super v12 = self;
  objc_msgSend(v12, sel_begin);
  objc_msgSend(v12, sel_setDisableActions_, 1);
  objc_msgSend(*(id *)((char *)v0 + *(void *)((*v1 & *v0) + 0x98)), sel_setFrame_, v3, v5, v7, v9);
  return objc_msgSend(v12, sel_commit);
}

void sub_255B783A4(void *a1)
{
  id v1 = a1;
  sub_255B78214();
}

double sub_255B783EC(void *a1)
{
  id v1 = a1;
  sub_255B78448();
  double v3 = v2;

  return v3;
}

id sub_255B78448()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScopeBar();
  return objc_msgSendSuper2(&v2, sel_frame);
}

void sub_255B784BC(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  sub_255B78534(a2, a3, a4, a5);
}

void sub_255B78534(double a1, double a2, double a3, double a4)
{
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v9, sel_setFrame_, a1, a2, a3, a4);
  sub_255B7C9E4();
}

double sub_255B785DC(void *a1)
{
  id v1 = a1;
  sub_255B78638();
  double v3 = v2;

  return v3;
}

id sub_255B78638()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScopeBar();
  return objc_msgSendSuper2(&v2, sel_contentInset);
}

void sub_255B786AC(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  sub_255B78724(a2, a3, a4, a5);
}

void sub_255B78724(double a1, double a2, double a3, double a4)
{
  id v9 = (objc_class *)type metadata accessor for ScopeBar();
  v19.receiver = v4;
  v19.super_class = v9;
  objc_msgSendSuper2(&v19, sel_contentInset);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  v18.receiver = v4;
  v18.super_class = v9;
  objc_msgSendSuper2(&v18, sel_setContentInset_, a1, a2, a3, a4);
  sub_255B7881C(v11, v13, v15, v17);
}

void sub_255B7881C(double a1, double a2, double a3, double a4)
{
  id v9 = (void *)MEMORY[0x263F8EED0];
  uint64_t v10 = *(void *)((*MEMORY[0x263F8EED0] & *v4) + 0x50);
  uint64_t v11 = sub_255C80E88();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  double v14 = (char *)v28 - v13;
  uint64_t v15 = *(void *)(v10 - 8);
  double v17 = MEMORY[0x270FA5388](v16);
  objc_super v19 = (char *)v28 - v18;
  objc_msgSend(v4, sel_contentInset, v17);
  if (v23 != a1 || v20 != a2 || v21 != a3 || v22 != a4)
  {
    sub_255B79CCC((uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, v10);
      long long v27 = (void *)((char *)v4 + *(void *)((*v9 & *v4) + 0x70));
      swift_beginAccess();
      v28[0] = *v27;
      sub_255C808C8();
      swift_getWitnessTable();
      sub_255C80B88();
      if (v29 != 1) {
        sub_255B7EF24(v28[1], 0, 0);
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v10);
    }
    sub_255B7C9E4();
  }
}

double sub_255B78B14(void *a1)
{
  id v1 = a1;
  sub_255B78B58();
  double v3 = v2;

  return v3;
}

uint64_t sub_255B78B58()
{
  id v1 = (void *)MEMORY[0x263F8EED0];
  unint64_t v2 = *(void *)((char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0xA0));
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_255C812B8();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  if (v3 < 1)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  double v6 = 0.0;
  double v7 = 0.0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x25A2969C0](v5, v2);
    }
    else {
      id v8 = *(id *)(v2 + 8 * v5 + 32);
    }
    id v9 = v8;
    ++v5;
    objc_msgSend(v8, sel_intrinsicContentSize);
    double v11 = v10;
    double v13 = v12;
    sub_255B853BC(v17);
    sub_255B85588((uint64_t)v17);
    double v7 = v7 + v11 - (v17[7] + v17[9]);
    sub_255B853BC(v18);
    sub_255B85588((uint64_t)v18);

    if (v6 > v13) {
      double v14 = v6;
    }
    else {
      double v14 = v13;
    }
    if (v14 > v19) {
      double v6 = v14;
    }
    else {
      double v6 = v19;
    }
  }
  while (v3 != v5);
  uint64_t result = swift_bridgeObjectRelease();
  id v1 = (void *)MEMORY[0x263F8EED0];
LABEL_18:
  unint64_t v15 = *(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0xA0));
  if (!(v15 >> 62))
  {
    if (!__OFSUB__(*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10), 1)) {
      return result;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_255C812B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(v16, 1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  return result;
}

double sub_255B78DC0(double a1, double a2)
{
  objc_msgSend(v2, sel_intrinsicContentSize);
  double v6 = v5;
  if (sub_255AA4810(a1, 0.0) || a1 == 1.79769313e308) {
    a1 = v6;
  }
  sub_255AA4810(a2, 0.0);
  return a1;
}

double sub_255B78E64(void *a1, double a2, double a3)
{
  id v5 = a1;
  double v6 = sub_255B78DC0(a2, a3);

  return v6;
}

void sub_255B78EB8()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v3, sel_tintColorDidChange);
  id v1 = sub_255B7CBB0();
  sub_255B853BC(v4);
  id v2 = *(id *)&v4[3];
  sub_255B85588((uint64_t)v4);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);
}

void sub_255B78F8C(void *a1)
{
  id v1 = a1;
  sub_255B78EB8();
}

id sub_255B78FD4()
{
  id v1 = (void *)MEMORY[0x263F8EED0];
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v9, sel_layoutMarginsDidChange);
  id v2 = (double *)((char *)v0 + *(void *)((*v1 & *v0) + 0x68));
  swift_beginAccess();
  if ((_BYTE)v2[4])
  {
    objc_msgSend(v0, sel_layoutMargins);
    double v4 = v3;
    objc_msgSend(v0, sel_layoutMargins);
    double v6 = 0.0;
    double v7 = 0.0;
  }
  else
  {
    double v7 = v2[2];
    double v5 = v2[3];
    double v6 = *v2;
    double v4 = v2[1];
  }
  return objc_msgSend(v0, sel_setContentInset_, v6, v4, v7, v5);
}

void sub_255B790DC(void *a1)
{
  id v1 = a1;
  sub_255B78FD4();
}

uint64_t sub_255B79124(uint64_t a1)
{
  self;
  if (swift_dynamicCastObjCClass()) {
    return 1;
  }
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ScopeBar();
  return (uint64_t)objc_msgSendSuper2(&v4, sel_touchesShouldCancelInContentView_, a1);
}

uint64_t sub_255B791D0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  LOBYTE(a1) = sub_255B79124((uint64_t)v4);

  return a1 & 1;
}

uint64_t ScopeBar.ContentInsetMode.hash(into:)()
{
  if (*(unsigned char *)(v0 + 32)) {
    return sub_255C81588();
  }
  sub_255C81588();

  return UIEdgeInsets.hash(into:)();
}

uint64_t static ScopeBar.ContentInsetMode.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32) & *(unsigned char *)(a2 + 32);
  if ((*(unsigned char *)(a1 + 32) & 1) == 0 && (*(unsigned char *)(a2 + 32) & 1) == 0) {
    char v2 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL)));
  }
  return v2 & 1;
}

uint64_t ScopeBar.ContentInsetMode.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255B79350()
{
  return sub_255C815B8();
}

id sub_255B79390()
{
  id v1 = (double *)((char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x68));
  swift_beginAccess();
  if ((_BYTE)v1[4])
  {
    objc_msgSend(v0, sel_layoutMargins);
    double v3 = v2;
    objc_msgSend(v0, sel_layoutMargins);
    double v5 = 0.0;
    double v6 = 0.0;
  }
  else
  {
    double v6 = v1[2];
    double v4 = v1[3];
    double v5 = *v1;
    double v3 = v1[1];
  }
  return objc_msgSend(v0, sel_setContentInset_, v5, v3, v6, v4);
}

__n128 sub_255B79448@<Q0>(uint64_t a1@<X8>)
{
  double v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x68);
  swift_beginAccess();
  char v4 = v3[32];
  __n128 result = *(__n128 *)v3;
  long long v6 = *((_OWORD *)v3 + 1);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = v4;
  return result;
}

id sub_255B794BC(long long *a1)
{
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 32);
  double v5 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x68);
  swift_beginAccess();
  *(_OWORD *)double v5 = v7;
  *((void *)v5 + 2) = v2;
  *((void *)v5 + 3) = v3;
  v5[32] = v4;
  return sub_255B79390();
}

id (*sub_255B79550(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_255B795CC;
}

id sub_255B795CC(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_255B79390();
  }
  return result;
}

uint64_t sub_255B79600()
{
  sub_255B85618();

  return swift_bridgeObjectRetain();
}

uint64_t sub_255B79628(uint64_t a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70));
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_bridgeObjectRelease();
  return sub_255B7DBF4();
}

uint64_t (*sub_255B796A4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_255B79720;
}

uint64_t sub_255B79720(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_255B7DBF4();
  }
  return result;
}

uint64_t sub_255B79754@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  long long v10 = *(_OWORD *)(a2 + a1 - 16);
  uint64_t v4 = sub_255B85C58();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  if (v4)
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    id v8 = sub_255B865E4;
  }
  else
  {
    id v8 = 0;
  }
  *a3 = v8;
  a3[1] = v4;

  return sub_255A0DE10(v5);
}

uint64_t sub_255B797F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1)
  {
    uint64_t v6 = a4 + a3;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v5;
    id v8 = sub_255B865AC;
  }
  else
  {
    id v8 = 0;
    uint64_t v7 = 0;
  }
  sub_255A0DE10(v4);
  return sub_255B798C8((uint64_t)v8, v7);
}

uint64_t sub_255B79894()
{
  uint64_t v0 = sub_255B85C58();
  sub_255A0DE10(v0);
  return v0;
}

uint64_t sub_255B798C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x78));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_255A0DE20(v6);
}

uint64_t (*sub_255B79944())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_255B799BC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_255B85CBC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  if (v2)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v3;
    *(void *)(v2 + 24) = v5;
    uint64_t v6 = sub_255B86544;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = v2;

  return sub_255A0DE10(v3);
}

uint64_t sub_255B79A44(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_255B86508;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_255A0DE10(v1);
  return sub_255B79B08((uint64_t)v4, v3);
}

uint64_t sub_255B79AD4()
{
  uint64_t v0 = sub_255B85CBC();
  sub_255A0DE10(v0);
  return v0;
}

uint64_t sub_255B79B08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x80));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_255A0DE20(v6);
}

uint64_t (*sub_255B79B84())()
{
  return j__swift_endAccess;
}

uint64_t sub_255B79BFC(uint64_t a1)
{
  uint64_t v2 = sub_255C80E88();
  double v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return sub_255B79D8C((uint64_t)v5);
}

uint64_t sub_255B79CCC@<X0>(uint64_t a1@<X8>)
{
  double v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x88);
  swift_beginAccess();
  uint64_t v4 = sub_255C80E88();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_255B79D8C(uint64_t a1)
{
  double v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x88);
  swift_beginAccess();
  uint64_t v4 = sub_255C80E88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_255B79E54(uint64_t a1, int a2)
{
  int v20 = a2;
  uint64_t v4 = (void *)MEMORY[0x263F8EED0];
  uint64_t v5 = *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x50);
  uint64_t v6 = sub_255C80E88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  objc_super v9 = &v19[-v8];
  uint64_t v10 = *(void *)(v5 - 8);
  double v12 = MEMORY[0x270FA5388](v11);
  double v14 = &v19[-v13];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v7 + 16))(v9, a1, v6, v12);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    unint64_t v15 = 0;
    int v16 = 1;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v14, v9, v5);
    double v17 = (void *)((char *)v2 + *(void *)((*v4 & *v2) + 0x70));
    swift_beginAccess();
    uint64_t v21 = *v17;
    sub_255C808C8();
    swift_getWitnessTable();
    sub_255C80B88();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v14, v5);
    unint64_t v15 = v22;
    int v16 = v23;
  }
  return sub_255B7A11C(v15, v16, v20 & 1);
}

uint64_t sub_255B7A11C(unint64_t a1, int a2, int a3)
{
  uint64_t v4 = v3;
  int v148 = a3;
  unint64_t v163 = a1;
  uint64_t v147 = *MEMORY[0x263F8EED0] & *v3;
  uint64_t v6 = *(void *)(v147 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v135 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v139 = (char *)&v134 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v137 = (char *)&v134 - v12;
  uint64_t v13 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v141 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  v162 = (char *)&v134 - v15;
  uint64_t v154 = *(void *)(v13 - 8);
  uint64_t v16 = v154;
  MEMORY[0x270FA5388](v17);
  unint64_t v138 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v143 = (char *)&v134 - v20;
  MEMORY[0x270FA5388](v21);
  v144 = (char *)&v134 - v22;
  MEMORY[0x270FA5388](v23);
  v161 = (char *)&v134 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v140 = (char *)&v134 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v157 = (uint64_t *)((char *)&v134 - v28);
  MEMORY[0x270FA5388](v29);
  v158 = (char *)&v134 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v134 - v32;
  uint64_t v160 = swift_allocBox();
  uint64_t v35 = v34;
  uint64_t v164 = v7;
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v36(v34, 1, 1, v6);
  uint64_t v155 = v35;
  int v146 = a2;
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_255C808E8();
    uint64_t v35 = v155;
    swift_bridgeObjectRelease();
    v36((uint64_t)v33, 0, 1, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 40))(v35, v33, v13);
  }
  uint64_t v145 = v33;
  uint64_t v38 = v16 + 16;
  double v37 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v39 = v158;
  v37(v158, v35, v13);
  uint64_t v40 = v16;
  uint64_t v41 = (uint64_t)v157;
  uint64_t v159 = v4;
  sub_255B79CCC((uint64_t)v157);
  uint64_t v142 = TupleTypeMetadata2;
  uint64_t v42 = v40;
  uint64_t v43 = v6;
  uint64_t v44 = v162;
  uint64_t v45 = &v162[*(int *)(TupleTypeMetadata2 + 48)];
  v37(v162, (uint64_t)v39, v13);
  uint64_t v151 = v45;
  v37(v45, v41, v13);
  uint64_t v46 = v13;
  uint64_t v48 = v164 + 48;
  uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48);
  unsigned int v49 = v47(v44, 1, v43);
  uint64_t v50 = v43;
  uint64_t v156 = v43;
  uint64_t v152 = v37;
  uint64_t v153 = v38;
  if (v49 == 1)
  {
    long long v51 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v51(v41, v46);
    v51((uint64_t)v39, v46);
    unsigned int v52 = v47(v151, 1, v43);
    long long v53 = (void *)MEMORY[0x263F8EED0];
    if (v52 == 1)
    {
      v51((uint64_t)v162, v46);
      return swift_release();
    }
    uint64_t v149 = v47;
    uint64_t v150 = v48;
    v158 = (char *)v51;
    char v59 = v162;
  }
  else
  {
    unint64_t v54 = v140;
    long long v55 = v162;
    v37(v140, (uint64_t)v162, v46);
    long long v56 = v151;
    uint64_t v150 = v48;
    uint64_t v149 = v47;
    if (v47(v151, 1, v50) != 1)
    {
      uint64_t v84 = v164;
      long long v85 = v137;
      (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v137, v56, v50);
      LODWORD(v151) = sub_255C80578();
      long long v86 = *(void (**)(char *, uint64_t))(v84 + 8);
      v86(v85, v50);
      long long v87 = *(char **)(v42 + 8);
      ((void (*)(void *, uint64_t))v87)(v157, v46);
      ((void (*)(char *, uint64_t))v87)(v158, v46);
      v86(v54, v50);
      v158 = v87;
      ((void (*)(char *, uint64_t))v87)(v55, v46);
      uint64_t v60 = (uint64_t)v161;
      unint64_t v61 = (unint64_t)v159;
      long long v53 = (void *)MEMORY[0x263F8EED0];
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v152;
      if (v151) {
        return swift_release();
      }
      goto LABEL_10;
    }
    char v57 = *(char **)(v42 + 8);
    ((void (*)(void *, uint64_t))v57)(v157, v46);
    uint64_t v58 = v158;
    v158 = v57;
    ((void (*)(char *, uint64_t))v57)(v58, v46);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v54, v50);
    long long v53 = (void *)MEMORY[0x263F8EED0];
    char v59 = v55;
  }
  (*(void (**)(char *, uint64_t))(v141 + 8))(v59, v142);
  uint64_t v60 = (uint64_t)v161;
  unint64_t v61 = (unint64_t)v159;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v152;
LABEL_10:
  LODWORD(v63) = v146 & 1;
  sub_255B79CCC(v60);
  uint64_t v64 = *(void **)(v61 + *(void *)((*v53 & *(void *)v61) + 0xA8));
  uint64_t v65 = (uint64_t)v145;
  ((void (*)(char *, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native)(v145, v155, v46);
  uint64_t v157 = v64;
  v162 = v64;
  sub_255B79D8C(v65);
  uint64_t v136 = v46;
  if (v63)
  {
    uint64_t v66 = *v53 & *(void *)v61;
    uint64_t v67 = *(void **)(v61 + *(void *)(v66 + 0xA8));
    if (v67)
    {
      objc_msgSend(v67, sel_removeFromSuperview);
      uint64_t v66 = *v53 & *(void *)v61;
    }
    uint64_t v68 = *(void *)(v66 + 168);
    p_unint64_t aBlock = *(unint64_t **)(v61 + v68);
    *(void *)(v61 + v68) = 0;
    goto LABEL_20;
  }
  unint64_t v70 = v163;
  sub_255B7B5A0(v163, (void *)v61, v148 & 1);
  uint64_t v71 = *(void *)((*v53 & *(void *)v61) + 0xA8);
  unint64_t v72 = *(void *)(v61 + v71);
  *(void *)(v61 + v71) = v73;
  p_unint64_t aBlock = v73;

  uint64_t v74 = *(void *)(v61 + *(void *)((*v53 & *(void *)v61) + 0xA0));
  if ((v74 & 0xC000000000000001) != 0) {
    goto LABEL_75;
  }
  if ((v70 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) > v70)
  {
    id v75 = *(id *)(v74 + 8 * v70 + 32);
    goto LABEL_18;
  }
  __break(1u);
LABEL_78:
  __break(1u);
  while (2)
  {
    swift_bridgeObjectRetain();
    id v89 = (id)MEMORY[0x25A2969C0](p_aBlock, v72);
    swift_bridgeObjectRelease();
    int v79 = v63;
    long long v88 = v139;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v152;
LABEL_30:
    id v90 = objc_msgSend(v89, sel_hoverStyle);

    if (v90)
    {
      objc_msgSend(v90, sel_setEnabled_, 1);
    }
    (*(void (**)(char *, uint64_t))(v164 + 8))(v88, v156);
    uint64_t v80 = v143;
    while (2)
    {
      long long v53 = (void *)v70;
      uint64_t v46 = v136;
      while (2)
      {
        unint64_t v72 = sub_255A19BCC(MEMORY[0x263F8EE78]);
        if ((v148 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_255B7B9FC((void *)v61, v160, v163, v79, 0);
          id v92 = sub_255B7CBB0();
          uint64_t v93 = v155;
          swift_beginAccess();
          uint64_t v94 = v138;
          ((void (*)(char *, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native)(v138, v93, v46);
          BOOL v95 = v149(v94, 1, v156) == 1;
          long long v96 = v94;
          unint64_t v97 = (void (*)(char *, uint64_t))v158;
          ((void (*)(char *, uint64_t))v158)(v96, v46);
          objc_msgSend(v92, sel_setHidden_, v95);

          if (v157)
          {
            uint64_t v98 = v162;
            objc_msgSend(v162, sel_removeFromSuperview);
          }
          v97(v161, v46);
          return swift_release();
        }
        ((void (*)(char *, char *, uint64_t))isUniquelyReferenced_nonNull_native)(v80, v161, v46);
        uint64_t isUniquelyReferenced_nonNull_native = v46;
        uint64_t v91 = v156;
        if (v149(v80, 1, v156) == 1)
        {
          ((void (*)(char *, uint64_t))v158)(v80, isUniquelyReferenced_nonNull_native);
LABEL_72:
          float64x2_t v123 = v159;
          id v124 = sub_255B7CBB0();
          objc_msgSend(v124, sel_setHidden_, 0);

          float64x2_t v125 = self;
          uint64_t v126 = swift_allocObject();
          uint64_t v127 = v160;
          *(void *)(v126 + 16) = v123;
          *(void *)(v126 + 24) = v127;
          *(void *)(v126 + 32) = v163;
          *(unsigned char *)(v126 + 40) = v79 != 0;
          *(unsigned char *)(v126 + 41) = 1;
          *(void *)(v126 + 48) = v72;
          v172 = sub_255B85D68;
          v173 = (void *)v126;
          unint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v169 = 1107296256;
          v170 = sub_255AE4914;
          v171 = &block_descriptor_17;
          os_log_type_t v128 = _Block_copy(&aBlock);
          id v129 = v123;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_release();
          uint64_t v130 = (void *)swift_allocObject();
          v130[2] = v72;
          v130[3] = v127;
          v130[4] = v129;
          v172 = sub_255B85DC8;
          v173 = v130;
          unint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v169 = 1107296256;
          v170 = sub_255B7C594;
          v171 = &block_descriptor_9;
          uint64_t v131 = _Block_copy(&aBlock);
          id v132 = v129;
          swift_retain();
          swift_release();
          objc_msgSend(v125, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 2, v128, v131, 0.35, 0.0, 0.8, 1.0);
          _Block_release(v131);
          _Block_release(v128);

          ((void (*)(char *, uint64_t))v158)(v161, isUniquelyReferenced_nonNull_native);
          return swift_release();
        }
        uint64_t v99 = v80;
        uint64_t v100 = v164;
        id v101 = v135;
        (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v135, v99, v91);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v91);
          goto LABEL_72;
        }
        id v102 = (int64_t *)(v61 + *(void *)((*v53 & *(void *)v61) + 0x70));
        swift_beginAccess();
        int64_t v167 = *v102;
        sub_255C808C8();
        swift_getWitnessTable();
        sub_255C80B88();
        if (v169 == 1)
        {
          (*(void (**)(char *, uint64_t))(v164 + 8))(v101, v91);
          goto LABEL_72;
        }
        LODWORD(v155) = 0;
        unint64_t v103 = aBlock;
        unint64_t v104 = v163;
        unint64_t v166 = v163;
        int64_t v167 = aBlock;
        p_unint64_t aBlock = (unint64_t *)MEMORY[0x263F8D6C8];
        sub_255C81488();
        int64_t v63 = aBlock;
        uint64_t v60 = v103;
        unint64_t v165 = v104;
        unint64_t v166 = v103;
        sub_255C81478();
        unint64_t v70 = v167;
        uint64_t v74 = v164;
        if (v167 < v63) {
          goto LABEL_82;
        }
        unint64_t v105 = v163;
        do
        {
          if (v105 == v63) {
            goto LABEL_62;
          }
          if (v60 != v63)
          {
            uint64_t v74 = isUniquelyReferenced_nonNull_native;
            sub_255B7B5A0(v63, (void *)v61, 1);
            long long v53 = v106;
            goto LABEL_51;
          }
          long long v53 = v157;
          if (v157)
          {
            uint64_t v74 = isUniquelyReferenced_nonNull_native;
            BOOL v106 = v162;
LABEL_51:
            uint64_t v107 = v106;
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t aBlock = v72;
            p_unint64_t aBlock = (unint64_t *)v72;
            unint64_t v61 = sub_255B3A284(v63);
            uint64_t v109 = *(void *)(v72 + 16);
            BOOL v110 = (v108 & 1) == 0;
            uint64_t v111 = v109 + v110;
            if (__OFADD__(v109, v110)) {
              goto LABEL_74;
            }
            char v112 = v108;
            if (*(void *)(v72 + 24) >= v111)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                p_unint64_t aBlock = &aBlock;
                sub_255B84AA4();
              }
            }
            else
            {
              sub_255B81F90(v111, isUniquelyReferenced_nonNull_native);
              p_unint64_t aBlock = (unint64_t *)aBlock;
              unint64_t v113 = sub_255B3A284(v63);
              if ((v112 & 1) != (v114 & 1)) {
                goto LABEL_83;
              }
              unint64_t v61 = v113;
            }
            uint64_t isUniquelyReferenced_nonNull_native = v74;
            unint64_t v72 = aBlock;
            if (v112)
            {
              p_unint64_t aBlock = *(unint64_t **)(aBlock + 56);

              p_aBlock[v61] = (unint64_t)v53;
            }
            else
            {
              *(void *)(aBlock + 8 * (v61 >> 6) + 64) |= 1 << v61;
              uint64_t v115 = 8 * v61;
              *(void *)(*(void *)(v72 + 48) + v115) = v63;
              *(void *)(*(void *)(v72 + 56) + v115) = v53;
              uint64_t v116 = *(void *)(v72 + 16);
              BOOL v117 = __OFADD__(v116, 1);
              uint64_t v118 = v116 + 1;
              if (v117) {
                goto LABEL_78;
              }
              *(void *)(v72 + 16) = v118;
            }

            swift_bridgeObjectRelease();
            unint64_t v105 = v163;
            unint64_t v61 = (unint64_t)v159;
            uint64_t v74 = v164;
LABEL_62:
            if (v70 == v63) {
              goto LABEL_71;
            }
            goto LABEL_63;
          }
          p_unint64_t aBlock = (unint64_t *)v72;
          unint64_t v119 = sub_255B3A284(v60);
          if (v120)
          {
            unint64_t v121 = v119;
            char v122 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t aBlock = v72;
            if ((v122 & 1) == 0)
            {
              sub_255B84AA4();
              unint64_t v72 = aBlock;
            }
            p_unint64_t aBlock = *(unint64_t **)(*(void *)(v72 + 56) + 8 * v121);
            sub_255B83574(v121, v72);

            swift_bridgeObjectRelease();
          }
          unint64_t v105 = v163;
          if (v70 == v63)
          {
LABEL_71:
            (*(void (**)(char *, uint64_t))(v74 + 8))(v135, v156);
            int v79 = v155;
            goto LABEL_72;
          }
LABEL_63:
          BOOL v117 = __OFADD__(v63++, 1);
        }
        while (!v117);
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        swift_bridgeObjectRetain();
        id v75 = (id)MEMORY[0x25A2969C0](v70, v74);
        swift_bridgeObjectRelease();
LABEL_18:
        id v76 = objc_msgSend(v75, sel_hoverStyle);

        uint64_t v46 = v136;
        if (v76)
        {
          objc_msgSend(v76, sel_setEnabled_, 0);
        }
LABEL_20:

        uint64_t v77 = v144;
        ((void (*)(char *, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native)(v144, v60, v46);
        uint64_t v78 = v156;
        if (v149(v77, 1, v156) == 1)
        {
          ((void (*)(char *, uint64_t))v158)(v77, v46);
          int v79 = v63;
          uint64_t v80 = v143;
          continue;
        }
        break;
      }
      unint64_t v70 = (unint64_t)v53;
      uint64_t v81 = v164;
      uint64_t v82 = v139;
      (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v139, v77, v78);
      long long v83 = (uint64_t *)(v61 + *(void *)((*(void *)v70 & *(void *)v61) + 0x70));
      swift_beginAccess();
      uint64_t v174 = *v83;
      sub_255C808C8();
      swift_getWitnessTable();
      sub_255C80B88();
      if (v169 == 1)
      {
        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v78);
        int v79 = v63;
        uint64_t v80 = v143;
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v152;
        continue;
      }
      break;
    }
    p_unint64_t aBlock = (unint64_t *)aBlock;
    unint64_t v72 = *(void *)(v61 + *(void *)((*(void *)v70 & *(void *)v61) + 0xA0));
    if ((v72 & 0xC000000000000001) != 0) {
      continue;
    }
    break;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v152;
  if ((aBlock & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    long long v88 = v139;
    if (aBlock < *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      int v79 = v63;
      id v89 = *(id *)(v72 + 8 * aBlock + 32);
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  uint64_t result = sub_255C814B8();
  __break(1u);
  return result;
}

void sub_255B7B5A0(unint64_t a1, void *a2, char a3)
{
  uint64_t v6 = *MEMORY[0x263F8EED0] & *a2;
  uint64_t v7 = *(void *)(v6 + 0x50);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)aBlock - v9;
  uint64_t v13 = *(void *)(v12 + *(void *)(v11 + 160));
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v14 = (id)MEMORY[0x25A2969C0](a1, v13);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  id v14 = *(id *)(v13 + 8 * a1 + 32);
LABEL_5:
  objc_msgSend(v14, sel_frame);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_255C808E8();
  swift_bridgeObjectRelease();
  id v23 = sub_255B8567C((uint64_t)v10, v7, *(void *)(v6 + 88));
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_255B853BC(v42);
  id v24 = *(id *)&v42[4];
  sub_255B85588((uint64_t)v42);
  objc_msgSend(v23, sel_setTitleColor_forState_, v24, 2);

  objc_msgSend(v23, sel_setEnabled_, 0);
  id v25 = v23;
  id v26 = sub_255B7CBB0();
  objc_msgSend(a2, sel_convertRect_toCoordinateSpace_, v26, v16, v18, v20, v22);
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;

  objc_msgSend(v25, sel_setFrame_, v28, v30, v32, v34);
  id v35 = sub_255B7CBB0();
  objc_msgSend(v35, sel_addSubview_, v25);

  if (a3)
  {
    uint64_t v36 = self;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v25;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_255B86648;
    *(void *)(v38 + 24) = v37;
    aBlock[4] = sub_255A1050C;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_255A3D764;
    aBlock[3] = &block_descriptor_49;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v25;
    swift_retain();
    swift_release();
    objc_msgSend((id)v36, sel_performWithoutAnimation_, v39);
    _Block_release(v39);
    LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v36) {
      goto LABEL_11;
    }
  }
}

void sub_255B7B9FC(void *a1, uint64_t a2, unint64_t a3, char a4, char a5)
{
  char v7 = a4 & 1;
  uint64_t v8 = *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x50);
  uint64_t v9 = sub_255C80E88();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = swift_projectBox();
  id v14 = sub_255B7CBB0();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v12, 1, v8) == 1) {
    double v15 = 0.0;
  }
  else {
    double v15 = 1.0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v14, sel_setAlpha_, v15);

  sub_255B7D770();
  sub_255B7EF24(a3, v7, a5);
}

void sub_255B7BBC8(void *a1, uint64_t a2, unint64_t a3, char a4, char a5, uint64_t a6)
{
  sub_255B7B9FC(a1, a2, a3, a4 & 1, a5);
  uint64_t v8 = a6 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a6 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = 8 * i;
    unint64_t v20 = *(void *)(*(void *)(a6 + 48) + v19);
    double v21 = *(void **)(*(void *)(a6 + 56) + v19);
    uint64_t v22 = *(void *)((char *)a1 + *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0xA0));
    if ((v22 & 0xC000000000000001) != 0)
    {
      id v43 = v21;
      swift_bridgeObjectRetain();
      id v25 = (id)MEMORY[0x25A2969C0](v20, v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v20 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      if (v20 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_30;
      }
      id v23 = *(void **)(v22 + 8 * v20 + 32);
      id v24 = v21;
      id v25 = v23;
    }
    objc_msgSend(v25, sel_frame);
    double v27 = v26;
    double v29 = v28;
    double v31 = v30;
    double v33 = v32;

    id v34 = sub_255B7CBB0();
    objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, v34, v27, v29, v31, v33);
    double v36 = v35;
    double v38 = v37;
    double v40 = v39;
    double v42 = v41;

    objc_msgSend(v21, sel_setFrame_, v36, v38, v40, v42);
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_31;
    }
    if (v16 >= v12) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v12) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v13);
        if (!v17) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 < v12)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v13 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_32;
        }
        if (v13 >= v12) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v13);
        ++v18;
        if (v17) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v18;
    goto LABEL_18;
  }
LABEL_26:

  swift_release();
}

void sub_255B7BE5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v64 = *MEMORY[0x263F8EED0] & *a4;
  uint64_t v71 = a4;
  uint64_t v74 = *(void *)(*(void *)(v64 + 80) - 8);
  MEMORY[0x270FA5388](a1);
  int64_t v63 = (char *)&v60 - v5;
  uint64_t v72 = v6;
  uint64_t v7 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v66 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  id v76 = (char *)&v60 - v8;
  uint64_t v68 = v7;
  uint64_t v69 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v13 = (char *)&v60 - v12;
  MEMORY[0x270FA5388](v14);
  int64_t v16 = (char *)&v60 - v15;
  MEMORY[0x270FA5388](v17);
  id v75 = (char *)&v60 - v18;
  uint64_t v70 = swift_projectBox();
  uint64_t v19 = a2 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(a2 + 64);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v24 = 0;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v26 = v25 | (v24 << 6);
      goto LABEL_5;
    }
    int64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    double v28 = v13;
    if (v27 >= v23) {
      goto LABEL_25;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v27);
    ++v24;
    if (!v29)
    {
      int64_t v24 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_25;
      }
      unint64_t v29 = *(void *)(v19 + 8 * v24);
      if (!v29)
      {
        int64_t v24 = v27 + 2;
        if (v27 + 2 >= v23) {
          goto LABEL_25;
        }
        unint64_t v29 = *(void *)(v19 + 8 * v24);
        if (!v29)
        {
          int64_t v24 = v27 + 3;
          if (v27 + 3 >= v23) {
            goto LABEL_25;
          }
          unint64_t v29 = *(void *)(v19 + 8 * v24);
          if (!v29)
          {
            int64_t v24 = v27 + 4;
            if (v27 + 4 >= v23) {
              goto LABEL_25;
            }
            unint64_t v29 = *(void *)(v19 + 8 * v24);
            if (!v29) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v24 << 6);
LABEL_5:
    objc_msgSend(*(id *)(*(void *)(a2 + 56) + 8 * v26), sel_removeFromSuperview);
  }
  int64_t v30 = v27 + 5;
  if (v30 >= v23)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v31 = v70;
    swift_beginAccess();
    uint64_t v32 = v69;
    uint64_t v33 = v69 + 16;
    id v34 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
    double v35 = v75;
    uint64_t v36 = v31;
    uint64_t v37 = v68;
    v34(v75, v36, v68);
    sub_255B79CCC((uint64_t)v16);
    double v38 = v76;
    double v39 = &v76[*(int *)(TupleTypeMetadata2 + 48)];
    v34(v76, (uint64_t)v35, v37);
    uint64_t v67 = v39;
    v34(v39, (uint64_t)v16, v37);
    double v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
    double v41 = v38;
    uint64_t v42 = v72;
    if (v40(v41, 1, v72) == 1)
    {
      uint64_t v74 = v33;
      id v43 = *(void (**)(char *, uint64_t))(v32 + 8);
      v43(v16, v37);
      v43(v75, v37);
      if (v40(v67, 1, v42) == 1)
      {
        uint64_t v44 = v40;
        v43(v76, v37);
        uint64_t v45 = v34;
LABEL_33:
        id v54 = sub_255B7CBB0();
        uint64_t v55 = v70;
        swift_beginAccess();
        long long v56 = v65;
        v45(v65, v55, v37);
        int v57 = v44(v56, 1, v72);
        uint64_t v58 = v37;
        BOOL v59 = v57 == 1;
        v43(v56, v58);
        objc_msgSend(v54, sel_setHidden_, v59);

        return;
      }
    }
    else
    {
      uint64_t v46 = v32;
      v34(v28, (uint64_t)v76, v37);
      uint64_t v47 = v67;
      uint64_t v62 = v40;
      unsigned int v48 = v40(v67, 1, v42);
      unint64_t v61 = v34;
      if (v48 != 1)
      {
        uint64_t v50 = v74;
        long long v51 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
        uint64_t v60 = v28;
        unsigned int v52 = v63;
        v51(v63, v47, v42);
        LODWORD(TupleTypeMetadata2) = sub_255C80578();
        long long v53 = *(void (**)(char *, uint64_t))(v50 + 8);
        v53(v52, v42);
        id v43 = *(void (**)(char *, uint64_t))(v46 + 8);
        v43(v16, v37);
        v43(v75, v37);
        v53(v60, v42);
        v43(v76, v37);
        if ((TupleTypeMetadata2 & 1) == 0) {
          return;
        }
        uint64_t v44 = v62;
        uint64_t v45 = v61;
        goto LABEL_33;
      }
      unsigned int v49 = *(void (**)(char *, uint64_t))(v46 + 8);
      v49(v16, v37);
      v49(v75, v37);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v28, v42);
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v76, TupleTypeMetadata2);
    return;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v30);
  if (v29)
  {
    int64_t v24 = v30;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v24 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v24 >= v23) {
      goto LABEL_25;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v24);
    ++v30;
    if (v29) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_255B7C594(uint64_t a1, uint64_t a2)
{
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_255B7C5E8(void *a1)
{
  sub_255B853BC(v15);
  double v3 = v15[10];
  swift_retain();
  sub_255B85588((uint64_t)v15);
  id v4 = objc_msgSend(v1, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_horizontalSizeClass);

  double v6 = (*(double (**)(id))&v3)(v5);
  swift_release();
  sub_255B7C7DC(v6);
  id v7 = objc_msgSend(v1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  id v9 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  uint64_t v10 = sub_255C80628();
  uint64_t v12 = v11;
  if (v10 == sub_255C80628() && v12 == v13)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_255C81428();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      sub_255B7CD98();
    }
  }
}

double sub_255B7C7B0()
{
  return *(double *)((char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x90));
}

void sub_255B7C7DC(double a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EED0];
  uint64_t v3 = *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x90);
  double v4 = *(double *)((char *)v1 + v3);
  *(double *)((char *)v1 + v3) = a1;
  if (*(double *)((char *)v1 + *(void *)((*v2 & *v1) + 0x90)) != v4) {
    sub_255B7CD98();
  }
}

id sub_255B7C838()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  objc_msgSend(v0, sel_setStartPoint_, 0.0, 0.5);
  objc_msgSend(v0, sel_setEndPoint_, 1.0, 0.5);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_255C84C00;
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_blackColor);
  id v4 = objc_msgSend(v3, sel_CGColor);

  type metadata accessor for CGColor(0);
  uint64_t v6 = v5;
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 32) = v4;
  id v7 = objc_msgSend(v2, sel_blackColor);
  id v8 = objc_msgSend(v7, sel_CGColor);

  *(void *)(v1 + 88) = v6;
  *(void *)(v1 + 64) = v8;
  id v9 = objc_msgSend(v2, sel_clearColor);
  id v10 = objc_msgSend(v9, sel_CGColor);

  *(void *)(v1 + 120) = v6;
  *(void *)(v1 + 96) = v10;
  uint64_t v11 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setColors_, v11);

  return v0;
}

void sub_255B7C9E4()
{
  objc_msgSend(v0, sel_bounds);
  double v1 = 1.0 / CGRectGetWidth(v8);
  objc_msgSend(v0, sel_contentInset);
  double v3 = v1 * v2;
  id v4 = *(void **)((char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x98));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_255C8A4D0;
  sub_255A43740(0, &qword_26B29F148);
  *(void *)(v5 + 32) = sub_255C80DB8();
  *(void *)(v5 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, 1.0 - v3);
  *(void *)(v5 + 48) = sub_255C80DB8();
  sub_255C80818();
  id v6 = (id)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setLocations_, v6);
}

uint64_t sub_255B7CB4C(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0xA0)) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_255B7CB80(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0xA8)) = a1;
  return MEMORY[0x270F9A758]();
}

id sub_255B7CBB0()
{
  uint64_t v1 = *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0xB0);
  double v2 = *(void **)((char *)v0 + v1);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + v1);
  }
  else
  {
    id v4 = sub_255B7CC30(v0);
    uint64_t v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    double v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_255B7CC30(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  sub_255B853BC(v5);
  id v3 = *(id *)&v5[3];
  sub_255B85588((uint64_t)v5);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  objc_msgSend(v2, sel_setHidden_, 1);
  objc_msgSend(v2, sel_setClipsToBounds_, 1);
  objc_msgSend(v2, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(a1, sel_addSubview_, v2);
  return v2;
}

uint64_t sub_255B7CD40()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0xB8));
}

uint64_t sub_255B7CD6C(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0xB8)) = result;
  return result;
}

void sub_255B7CD98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C803B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C803E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (void *)MEMORY[0x263F8EED0];
  if ((*((unsigned char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0xB8)) & 1) == 0)
  {
    unint64_t v11 = *(void *)((char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0xA0));
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_255C812B8();
      swift_bridgeObjectRelease();
      if (!v16) {
        return;
      }
    }
    else if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    *((unsigned char *)v1 + *(void *)((*v10 & *v1) + 0xB8)) = 1;
    sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
    uint64_t v12 = (void *)sub_255C80C88();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v1;
    aBlock[4] = sub_255B8668C;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_255AE4914;
    aBlock[3] = &block_descriptor_55;
    char v14 = _Block_copy(aBlock);
    uint64_t v15 = v1;
    swift_release();
    sub_255C803D8();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_255B866B0((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
    sub_255AB4994();
    sub_255C80F78();
    MEMORY[0x25A296510](0, v9, v5, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_255B7D11C()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  if (*((unsigned char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0xB8)) != 1) {
    return;
  }
  id v2 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  double v18 = 0.0;
  double v19 = 0.0;
  unint64_t v3 = *(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0xA0));
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_255C812B8();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v5 = 0;
      do
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x25A2969C0](v5, v3);
        }
        else {
          id v6 = *(id *)(v3 + 8 * v5 + 32);
        }
        uint64_t v7 = v6;
        ++v5;
        id v17 = v6;
        sub_255B7D3D8(&v17, v0, &v18);
      }
      while (v4 != v5);
      swift_bridgeObjectRelease_n();
      double v8 = v18;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  double v8 = 0.0;
LABEL_13:
  double v9 = v8 - *(double *)((char *)v0 + *(void *)((*v1 & *v0) + 0x90));
  if (v2 == (id)1)
  {
    objc_msgSend(v0, sel_bounds);
    double Width = CGRectGetWidth(v20);
    objc_msgSend(v0, sel_adjustedContentInset);
    if (Width - (v11 + v12) > v9) {
      double v13 = Width - (v11 + v12);
    }
    else {
      double v13 = v9;
    }
    objc_msgSend(v0, sel_bounds);
    CGRectGetHeight(v21);
    unint64_t v14 = *(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0xA0));
    v16[3] = 0;
    v16[4] = 0;
    v16[2] = v0;
    *(double *)&v16[5] = v13;
    v16[6] = MEMORY[0x270FA5388](v15);
    swift_bridgeObjectRetain();
    sub_255B77904((void (*)(id *))sub_255B86668, (uint64_t)v16, v14);
    swift_bridgeObjectRelease();
  }
  sub_255B7D770();
  objc_msgSend(v0, sel_setContentSize_, v9, v19);
  *((unsigned char *)v0 + *(void *)((*v1 & *v0) + 0xB8)) = 0;
}

double sub_255B7D3D8(id *a1, void *a2, double *a3)
{
  uint64_t v5 = (void *)MEMORY[0x263F8EED0];
  id v6 = *a1;
  objc_msgSend(*a1, sel_frame);
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  objc_msgSend(v6, sel_intrinsicContentSize);
  double v12 = v11;
  double v14 = v13;
  sub_255B853BC(v36);
  sub_255B85588((uint64_t)v36);
  double v15 = v12 - v36[7] - v36[9];
  CGFloat v16 = v14 - v36[6] - v36[8];
  sub_255B853BC(v37);
  sub_255B85588((uint64_t)v37);
  double v17 = v37[2];
  v38.origin.x = v8;
  v38.origin.y = v10;
  v38.size.double width = v15;
  v38.size.double height = v16;
  double Height = CGRectGetHeight(v38);
  if (v17 > Height) {
    double Height = v17;
  }
  double v35 = Height;
  double v19 = *a3;
  objc_msgSend(a2, sel_bounds);
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  id v28 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v28, sel_displayScale);
  double v30 = v29;

  v39.origin.x = v21;
  v39.origin.y = v23;
  v39.size.double width = v25;
  v39.size.double height = v27;
  double MinY = CGRectGetMinY(v39);
  v40.origin.x = v21;
  v40.origin.y = v23;
  v40.size.double width = v25;
  v40.size.double height = v27;
  double v32 = CGRectGetHeight(v40);
  v41.origin.y = 0.0;
  v41.origin.x = v19;
  v41.size.double width = v15;
  v41.size.double height = v35;
  double v33 = round(v30 * (MinY + (v32 - CGRectGetHeight(v41)) * 0.5));
  objc_msgSend(v6, sel_setFrame_, v19, v33 / sub_255C146A8(v30), v15, v35);
  objc_msgSend(v6, sel_layoutIfNeeded);
  v42.origin.y = 0.0;
  v42.origin.x = v19;
  v42.size.double width = v15;
  v42.size.double height = v35;
  double result = *a3 + CGRectGetWidth(v42) + *(double *)((char *)a2 + *(void *)((*v5 & *a2) + 0x90));
  *a3 = result;
  return result;
}

id sub_255B7D650(id *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11 = *a1;
  objc_msgSend(*a1, sel_frame);
  double v13 = v12;
  double MinY = v14;
  double v17 = v16;
  double v19 = v18;
  if (objc_msgSend(a2, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    v24.origin.x = a3;
    v24.origin.y = a4;
    v24.size.double width = a5;
    v24.size.double height = a6;
    double MaxX = CGRectGetMaxX(v24);
    v25.origin.x = v13;
    v25.origin.y = MinY;
    v25.size.double width = v17;
    v25.size.double height = v19;
    double v21 = MaxX - CGRectGetMinX(v25);
    v26.origin.x = v13;
    v26.origin.y = MinY;
    v26.size.double width = v17;
    v26.size.double height = v19;
    double v22 = v21 - CGRectGetWidth(v26);
    v27.origin.x = v13;
    v27.origin.y = MinY;
    v27.size.double width = v17;
    v27.size.double height = v19;
    double MinY = CGRectGetMinY(v27);
    double v13 = v22;
  }
  return objc_msgSend(v11, sel_setFrame_, v13, MinY, v17, v19);
}

uint64_t sub_255B7D770()
{
  uint64_t v1 = v0;
  id v2 = (void *)MEMORY[0x263F8EED0];
  uint64_t v3 = *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x50);
  uint64_t v4 = sub_255C80E88();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  CGFloat v8 = (char *)&v41 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v6);
  id v11 = (char *)&v41 - v10;
  sub_255B79CCC((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  double v13 = (void *)((char *)v0 + *(void *)((*v2 & *v0) + 0x70));
  swift_beginAccess();
  uint64_t v43 = *v13;
  sub_255C808C8();
  swift_getWitnessTable();
  uint64_t result = sub_255C80B88();
  if (BYTE8(v41)) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  }
  uint64_t v14 = v41;
  uint64_t v15 = *(void *)((char *)v1 + *(void *)((*v2 & *v1) + 0xA0));
  if ((v15 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v16 = (id)MEMORY[0x25A2969C0](v14, v15);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if ((v41 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v41 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v15 + 8 * v41 + 32);
LABEL_8:
    objc_msgSend(v16, sel_frame);
    double v18 = v17;
    double v20 = v19;
    double v22 = v21;
    double v24 = v23;

    id v25 = sub_255B7CBB0();
    objc_msgSend(v25, sel_setFrame_, v18, v20, v22, v24);

    id v26 = sub_255B7CBB0();
    long long v41 = xmmword_255C91730;
    uint64_t v42 = 15;
    UIView.corner.setter((uint64_t)&v41);

    uint64_t v27 = *v2 & *v1;
    id v28 = *(void **)((char *)v1 + *(void *)(v27 + 0xA8));
    if (v28)
    {
      id v29 = v28;
      id v30 = sub_255B7CBB0();
      objc_msgSend(v1, sel_convertRect_toCoordinateSpace_, v30, v18, v20, v22, v24);
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;
      double v38 = v37;

      objc_msgSend(v29, sel_setFrame_, v32, v34, v36, v38);
      uint64_t v27 = *v2 & *v1;
    }
    CGRect v39 = *(void **)((char *)v1 + *(void *)(v27 + 168));
    if (v39) {
      objc_msgSend(v39, sel_layoutIfNeeded);
    }
    id v40 = sub_255B7CBB0();
    objc_msgSend(v1, sel_bringSubviewToFront_, v40);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_255B7DBF4()
{
  uint64_t v95 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v1 = v95;
  uint64_t v2 = *(void *)(v95 + 80);
  uint64_t v3 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v98 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v5 = (char *)&v78 - v4;
  uint64_t v89 = v3;
  uint64_t v6 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v80 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v103 = (uint64_t)&v78 - v10;
  MEMORY[0x270FA5388](v11);
  id v101 = (char *)&v78 - v12;
  uint64_t v13 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v78 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  double v18 = (char *)&v78 - v17;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v94 = sub_255C80E88();
  uint64_t v100 = *(void (***)(char *, uint64_t))(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v93 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  double v23 = (char **)((char *)&v78 - v22);
  unint64_t v109 = *(void *)((char *)v0 + *(void *)(v1 + 160));
  uint64_t v108 = MEMORY[0x263F8EE78];
  uint64_t v106 = 0;
  char v107 = 1;
  uint64_t v24 = *(void *)(v1 + 112);
  uint64_t v99 = v0;
  id v25 = (void *)((char *)v0 + v24);
  swift_beginAccess();
  aBlock[0] = *v25;
  uint64_t v26 = sub_255C808C8();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A296010](&v105, v26, WitnessTable);
  void aBlock[6] = v105;
  sub_255C812A8();
  sub_255C81278();
  uint64_t v92 = sub_255C81298();
  uint64_t v91 = (void (**)(void *, char *, uint64_t))(v100 + 4);
  uint64_t v90 = v19 - 8;
  unint64_t v97 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  long long v88 = (void (**)(char *, char *, uint64_t))(v13 + 16);
  long long v87 = (void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  id v28 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  long long v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v100 = (void (**)(char *, uint64_t))(v13 + 8);
  long long v96 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  int v79 = (void (**)(char *, uint64_t))(v98 + 8);
  long long v83 = v5;
  uint64_t v81 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v84 = v18;
  uint64_t v82 = v23;
  uint64_t v86 = v19;
  while (1)
  {
    id v29 = v93;
    sub_255C81288();
    (*v91)(v23, v29, v94);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v23, 1, v19) == 1) {
      break;
    }
    uint64_t v98 = *v23;
    id v30 = (char *)v23 + *(int *)(v19 + 48);
    double v31 = *v97;
    (*v97)(v18, v30, v2);
    double v32 = v101;
    (*v88)(v101, v18, v2);
    (*v87)(v32, 0, 1, v2);
    uint64_t v33 = v103;
    sub_255B79CCC(v103);
    unint64_t v34 = (unint64_t)v5;
    double v35 = &v5[*(int *)(TupleTypeMetadata2 + 48)];
    double v36 = *v28;
    uint64_t v37 = v89;
    (*v28)((char *)v34, v32, v89);
    v36(v35, (char *)v33, v37);
    double v38 = *v85;
    if ((*v85)((char *)v34, 1, v2) == 1)
    {
      CGRect v39 = *v96;
      (*v96)(v103, v37);
      v39((uint64_t)v32, v37);
      if (v38(v35, 1, v2) != 1) {
        goto LABEL_8;
      }
      v39(v34, v37);
      uint64_t v19 = v86;
LABEL_10:
      uint64_t v106 = v98;
      char v107 = 0;
      goto LABEL_11;
    }
    id v40 = v80;
    v36(v80, (char *)v34, v37);
    if (v38(v35, 1, v2) == 1)
    {
      long long v41 = *v96;
      (*v96)(v103, v37);
      v41((uint64_t)v101, v37);
      (*v100)(v40, v2);
LABEL_8:
      (*v79)((char *)v34, TupleTypeMetadata2);
      uint64_t v19 = v86;
      goto LABEL_11;
    }
    uint64_t v42 = v78;
    v31(v78, v35, v2);
    char v43 = sub_255C80578();
    uint64_t v44 = *v100;
    (*v100)(v42, v2);
    uint64_t v45 = *v96;
    (*v96)(v103, v37);
    v45((uint64_t)v101, v37);
    v44(v40, v2);
    v45(v34, v37);
    uint64_t v19 = v86;
    if (v43) {
      goto LABEL_10;
    }
LABEL_11:
    unint64_t v46 = v109;
    unint64_t v47 = v109 >> 62;
    if (v109 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_255C812B8();
    }
    else
    {
      uint64_t v48 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    double v18 = v84;
    if (!v48)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v95 + 88);
      id v53 = sub_255B8567C((uint64_t)v18, v2, v52);
      sub_255A43740(0, &qword_26B29F150);
      uint64_t v54 = swift_allocObject();
      uint64_t v55 = v99;
      swift_unknownObjectWeakInit();
      long long v56 = (void *)swift_allocObject();
      v56[2] = v2;
      v56[3] = v52;
      v56[4] = v54;
      id v50 = v53;
      int v57 = (void *)sub_255C80DF8();
      objc_msgSend(v50, sel_addAction_forControlEvents_, v57, 64);

      objc_msgSend(v55, sel_addSubview_, v50);
      uint64_t v5 = v83;
      goto LABEL_31;
    }
    if ((v46 & 0xC000000000000001) != 0)
    {
      id v49 = (id)MEMORY[0x25A2969C0](0, v46);
    }
    else
    {
      if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      id v49 = *(id *)(v46 + 32);
    }
    id v50 = v49;
    swift_bridgeObjectRelease();
    if (v47)
    {
      swift_bridgeObjectRetain();
      id v58 = v50;
      uint64_t v59 = sub_255C812B8();
      swift_bridgeObjectRelease();
      if (!v59) {
        goto LABEL_47;
      }
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_255C812B8();
      swift_bridgeObjectRelease();
      if (!v60) {
        goto LABEL_45;
      }
    }
    else
    {
      if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_46;
      }
      id v51 = v50;
    }
    if ((v46 & 0xC000000000000001) != 0)
    {
      id v61 = (id)MEMORY[0x25A2969C0](0, v46);
      if (v47) {
        goto LABEL_28;
      }
    }
    else
    {
      if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_49;
      }
      id v61 = *(id *)(v46 + 32);
      if (v47)
      {
LABEL_28:
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_255C812B8();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    uint64_t v62 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_29:
    uint64_t v5 = v83;
    if (!v62) {
      goto LABEL_48;
    }
    sub_255A433E8(0, 1);

    uint64_t v52 = *(void *)(v95 + 88);
LABEL_31:
    (*(void (**)(uint64_t, uint64_t))(v52 + 16))(v2, v52);
    int64_t v63 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v50, sel_setTitle_forState_, v63, 0);

    id v64 = v50;
    MEMORY[0x25A296050]();
    if (*(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_255C80838();
    }
    sub_255C80878();
    sub_255C80818();

    (*v100)(v18, v2);
    double v23 = v82;
    id v28 = v81;
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v34 = v109;
  if (!(v109 >> 62))
  {
    uint64_t v66 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v66) {
      goto LABEL_51;
    }
    goto LABEL_38;
  }
LABEL_50:
  swift_bridgeObjectRetain();
  uint64_t v66 = sub_255C812B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v66) {
    goto LABEL_51;
  }
LABEL_38:
  if (v66 < 1) {
    goto LABEL_53;
  }
  for (uint64_t i = 0; i != v66; ++i)
  {
    if ((v34 & 0xC000000000000001) != 0) {
      id v68 = (id)MEMORY[0x25A2969C0](i, v34);
    }
    else {
      id v68 = *(id *)(v34 + 8 * i + 32);
    }
    uint64_t v69 = v68;
    objc_msgSend(v68, sel_removeFromSuperview);
  }
LABEL_51:
  swift_bridgeObjectRelease();
  uint64_t v70 = v99;
  uint64_t v71 = *(void *)((*MEMORY[0x263F8EED0] & *v99) + 0xA0);
  uint64_t v72 = *(void *)((char *)v99 + v71);
  *(void *)((char *)v99 + v71) = v108;
  uint64_t v73 = self;
  uint64_t v74 = (void *)swift_allocObject();
  v74[2] = v70;
  v74[3] = v72;
  v74[4] = &v106;
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = sub_255B86738;
  *(void *)(v75 + 24) = v74;
  aBlock[4] = sub_255A43840;
  aBlock[5] = v75;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255A3D764;
  aBlock[3] = &block_descriptor_65;
  id v76 = _Block_copy(aBlock);
  id v77 = v70;
  swift_retain();
  swift_release();
  objc_msgSend((id)v73, sel_performWithoutAnimation_, v76);
  _Block_release(v76);
  LOBYTE(v73) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v73 & 1) == 0) {
    return result;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

void sub_255B7EA2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v8 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x25A297D40](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    if (objc_msgSend(a1, sel_sender))
    {
      sub_255C80F58();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v22, 0, sizeof(v22));
    }
    sub_255A15EF0((uint64_t)v22, (uint64_t)v23);
    if (v24)
    {
      sub_255A43740(0, qword_26B2978F8);
      if (swift_dynamicCast())
      {
        uint64_t v12 = (void *)v21[1];
        uint64_t v13 = (void *)MEMORY[0x263F8EED0];
        unint64_t v14 = *(void *)((char *)v11 + *(void *)((*MEMORY[0x263F8EED0] & *v11) + 0xA0));
        swift_bridgeObjectRetain();
        sub_255B8CBF8((uint64_t)v12, v14);
        unint64_t v16 = v15;
        char v18 = v17;
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0 && !UIAccessibilityIsVoiceOverRunning())
        {
          uint64_t v19 = (void (**)(unint64_t, char *))((char *)v11 + *(void *)((*v13 & *v11) + 0x78));
          swift_beginAccess();
          uint64_t v20 = *v19;
          if (*v19)
          {
            swift_beginAccess();
            sub_255A0DE10((uint64_t)v20);
            swift_bridgeObjectRetain();
            sub_255C808E8();
            swift_bridgeObjectRelease();
            v20(v16, v7);
            sub_255A0DE20((uint64_t)v20);
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
          }
          sub_255B7A11C(v16, 0, 1);
        }
      }
      else
      {
      }
    }
    else
    {

      sub_255A7D6B8((uint64_t)v23);
    }
  }
}

void sub_255B7ED04(void *a1, unint64_t a2, uint64_t a3)
{
  sub_255B7CD98();
  sub_255B7D11C();
  uint64_t v6 = (void *)MEMORY[0x263F8EED0];
  uint64_t v7 = (void (**)(unint64_t, uint64_t))((char *)a1 + *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x80));
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*v7)
  {
    sub_255A0DE10((uint64_t)v8);
    if (a2 >> 62)
    {
      sub_255A43740(0, (unint64_t *)&qword_26B29F140);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_255C81258();
      swift_bridgeObjectRelease();
      a2 = v11;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_255C81448();
      sub_255A43740(0, (unint64_t *)&qword_26B29F140);
    }
    unint64_t v9 = *(void *)((char *)a1 + *(void *)((*v6 & *a1) + 0xA0));
    if (v9 >> 62)
    {
      sub_255A43740(0, (unint64_t *)&qword_26B29F140);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_255C81258();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_255C81448();
      sub_255A43740(0, (unint64_t *)&qword_26B29F140);
      uint64_t v10 = v9;
    }
    swift_bridgeObjectRelease();
    v8(a2, v10);
    sub_255A0DE20((uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_255B7EF24(*(void *)a3, *(unsigned char *)(a3 + 8), 1);
}

void sub_255B7EF24(unint64_t a1, char a2, char a3)
{
  if (a2) {
    return;
  }
  uint64_t v6 = *(void *)((char *)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0xA0));
  if ((v6 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v7 = (id)MEMORY[0x25A2969C0](a1, v6);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_20:
    __break(1u);
    return;
  }
  id v7 = *(id *)(v6 + 8 * a1 + 32);
LABEL_6:
  objc_msgSend(v7, sel_frame);
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;

  objc_msgSend(v3, sel_contentInset);
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  objc_msgSend(v3, sel_visibleBounds);
  double v47 = v21;
  double v48 = v19;
  double v26 = UIEdgeInsetsInsetRect(v22, v23, v24, v25, v17, v19);
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat rect = v9;
  v51.origin.x = v9;
  CGFloat v33 = v11;
  v51.origin.y = v11;
  CGFloat v34 = v13;
  v51.size.double width = v13;
  CGFloat v35 = v15;
  v51.size.double height = v15;
  double MinX = CGRectGetMinX(v51);
  v52.origin.x = v26;
  v52.origin.y = v28;
  v52.size.double width = v30;
  v52.size.double height = v32;
  if (MinX >= CGRectGetMinX(v52))
  {
    v54.origin.x = rect;
    CGFloat v39 = v33;
    v54.origin.y = v33;
    v54.size.double width = v34;
    v54.size.double height = v35;
    double MaxX = CGRectGetMaxX(v54);
    v55.origin.x = v26;
    v55.origin.y = v28;
    v55.size.double width = v30;
    v55.size.double height = v32;
    if (CGRectGetMaxX(v55) >= MaxX) {
      return;
    }
    v56.origin.x = rect;
    v56.origin.y = v39;
    v56.size.double width = v34;
    v56.size.double height = v35;
    double v41 = CGRectGetMaxX(v56);
    v57.origin.x = v26;
    v57.origin.y = v28;
    v57.size.double width = v30;
    v57.size.double height = v32;
    double v37 = v41 - CGRectGetWidth(v57);
    double v38 = v47;
  }
  else
  {
    v53.origin.x = rect;
    v53.origin.y = v33;
    v53.size.double width = v34;
    v53.size.double height = v35;
    double v37 = CGRectGetMinX(v53);
    double v38 = v48;
  }
  double v42 = v37 - v38;
  v58.origin.x = v26;
  v58.origin.y = v28;
  v58.size.double width = v30;
  v58.size.double height = v32;
  double MinY = CGRectGetMinY(v58);
  objc_msgSend(v3, sel_contentOffset);
  if (v42 != v45 || MinY != v44)
  {
    objc_msgSend(v3, sel_setContentOffset_animated_, a3 & 1, v42, MinY);
  }
}

BOOL sub_255B7F1C8()
{
  return AXDoesRequestingClientDeserveAutomation() == 0;
}

void sub_255B7F1E8(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_255B7F23C(a3);
}

id sub_255B7F23C(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ScopeBar();
  return objc_msgSendSuper2(&v4, sel_setIsAccessibilityElement_, a1 & 1);
}

uint64_t sub_255B7F2C0()
{
  return *MEMORY[0x263F83248];
}

void sub_255B7F2D0(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = a1;
  sub_255B7F324(a3);
}

id sub_255B7F324(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ScopeBar();
  return objc_msgSendSuper2(&v4, sel_setAccessibilityTraits_, a1);
}

id sub_255B7F3A8(void *a1, uint64_t a2)
{
  return sub_255B7F600(a1, a2, (void (*)(void))sub_255B7F3C0);
}

uint64_t sub_255B7F3C0()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ScopeBar();
  id v1 = objc_msgSendSuper2(&v5, sel_accessibilityLabel);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_255C80628();

  return v3;
}

void sub_255B7F478(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_255B7F490(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v4, sel_setAccessibilityLabel_, v3);

  sub_255B7F540();
}

void sub_255B7F540()
{
  id v1 = objc_msgSend(v0, sel_accessibilityLabel);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v2, sel_setAccessibilityValue_, v1);
}

id sub_255B7F5E8(void *a1, uint64_t a2)
{
  return sub_255B7F600(a1, a2, (void (*)(void))sub_255B7F680);
}

id sub_255B7F600(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    id v7 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

uint64_t sub_255B7F680()
{
  id v1 = (void *)MEMORY[0x263F8EED0];
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for ScopeBar();
  id v2 = objc_msgSendSuper2(&v10, sel_accessibilityValue);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_255C80628();
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void **)((char *)v0 + *(void *)((*v1 & *v0) + 0xA8));
  if (v5)
  {
    id v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v6, sel_accessibilityLabel);
    if (v7)
    {
      double v8 = v7;
      uint64_t v4 = sub_255C80628();
    }
    else
    {

      return 0;
    }
  }
  return v4;
}

void sub_255B7F7B8(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_255B7F7D0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_255C80628();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

void sub_255B7F858(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ScopeBar();
  objc_msgSendSuper2(&v4, sel_setAccessibilityValue_, v3);
}

uint64_t sub_255B7F904()
{
  return sub_255B7F9A4(1);
}

void sub_255B7F90C(void *a1)
{
  id v1 = a1;
  sub_255B7F904();
}

uint64_t sub_255B7F954()
{
  return sub_255B7F9A4(0);
}

void sub_255B7F95C(void *a1)
{
  id v1 = a1;
  sub_255B7F954();
}

uint64_t sub_255B7F9A4(int a1)
{
  id v2 = v1;
  int v27 = a1;
  uint64_t v3 = (void *)MEMORY[0x263F8EED0];
  uint64_t v4 = *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x50);
  uint64_t v5 = sub_255C80E88();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v10);
  double v26 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v14 = (char *)&v26 - v13;
  sub_255B79CCC((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, v4);
  double v16 = (void *)((char *)v1 + *(void *)((*v3 & *v1) + 0x70));
  swift_beginAccess();
  uint64_t v28 = *v16;
  sub_255C808C8();
  swift_getWitnessTable();
  sub_255C80B88();
  if (v30 == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v4);
  }
  uint64_t v17 = v29;
  if (v27)
  {
    swift_beginAccess();
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x25A296100](v19, v4);
    uint64_t result = swift_bridgeObjectRelease();
    if (__OFSUB__(v20, 1))
    {
      __break(1u);
      return result;
    }
    if (v17 < v20 - 1)
    {
      uint64_t v18 = 1;
LABEL_12:
      uint64_t v21 = v17 + v18;
      sub_255B7A11C(v17 + v18, 0, 1);
      double v22 = (void (**)(uint64_t, char *))((char *)v2 + *(void *)((*v3 & *v2) + 0x78));
      swift_beginAccess();
      double v23 = *v22;
      if (*v22)
      {
        swift_beginAccess();
        sub_255A0DE10((uint64_t)v23);
        swift_bridgeObjectRetain();
        double v24 = v26;
        sub_255C808E8();
        swift_bridgeObjectRelease();
        v23(v21, v24);
        sub_255A0DE20((uint64_t)v23);
        double v25 = *(void (**)(char *, uint64_t))(v9 + 8);
        v25(v24, v4);
        return ((uint64_t (*)(char *, uint64_t))v25)(v14, v4);
      }
    }
  }
  else if (v29 > 0)
  {
    uint64_t v18 = -1;
    goto LABEL_12;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v4);
}

uint64_t sub_255B7FDFC()
{
  return 0;
}

id ScopeBar.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void ScopeBar.init(frame:)()
{
}

void sub_255B7FEA8()
{
}

id ScopeBar.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScopeBar();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_255B7FF60(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x263F8EED0];
  swift_bridgeObjectRelease();
  sub_255A0DE20(*(void *)((char *)a1 + *(void *)((*v2 & *a1) + 0x78)));
  sub_255A0DE20(*(void *)((char *)a1 + *(void *)((*v2 & *a1) + 0x80)));
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x88);
  uint64_t v4 = sub_255C80E88();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)((char *)a1 + *(void *)((*v2 & *a1) + 0xB0));
}

double sub_255B80110(uint64_t a1)
{
  double result = 0.0;
  if (a1 == 2) {
    return 20.0;
  }
  return result;
}

uint64_t type metadata accessor for ScopeBar()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B8013C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210E8);
  uint64_t result = sub_255C812E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    CGFloat v34 = v3;
    int64_t v8 = 0;
    id v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *id v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_255C81568();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B803EC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_255C7D6A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21138);
  int v46 = a2;
  uint64_t v10 = sub_255C812E8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  double v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  id v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  char v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_255B866B0(&qword_269F24898, MEMORY[0x263F07508]);
    uint64_t result = sub_255C804E8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_255B80810(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FittedText();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F253D8);
  int v40 = a2;
  uint64_t v9 = sub_255C812E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  BOOL v36 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40) {
      sub_255B867D0(v26, (uint64_t)v7);
    }
    else {
      sub_255B3CC24(v26, (uint64_t)v7);
    }
    uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    sub_255C81578();
    sub_255C7D6A8();
    sub_255B866B0(&qword_269F24898, MEMORY[0x263F07508]);
    sub_255C804F8();
    uint64_t result = sub_255C815B8();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_255B867D0((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_255B80BF4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210C0);
  char v37 = a2;
  uint64_t v6 = sub_255C812E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_255C81578();
    sub_255C806B8();
    uint64_t result = sub_255C815B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B80F00(uint64_t a1, char a2)
{
  return sub_255B81528(a1, a2, &qword_269F210D0);
}

uint64_t sub_255B80F0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D780);
  uint64_t result = sub_255C812E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_255C81578();
      sub_255C81588();
      uint64_t result = sub_255C815B8();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B811E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_269F253E0);
  char v35 = a2;
  uint64_t v6 = sub_255C812E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    char v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_255A199E0(v22, v36);
    }
    else
    {
      sub_255A42E30((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_255C80628();
    sub_255C81578();
    sub_255C806B8();
    uint64_t v24 = sub_255C815B8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_255A199E0(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B8151C(uint64_t a1, char a2)
{
  return sub_255B81528(a1, a2, &qword_269F210C8);
}

uint64_t sub_255B81528(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_255C812E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    id v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_255C81578();
    sub_255C806B8();
    uint64_t result = sub_255C815B8();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  id v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_255B8183C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_255C7D5C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210B8);
  int v46 = a2;
  uint64_t v10 = sub_255C812E8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  double v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  char v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_255B866B0(&qword_269F24888, MEMORY[0x263F06EA8]);
    uint64_t result = sub_255C804E8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_255B81C60(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F253D0);
  char v40 = a2;
  uint64_t v6 = sub_255C812E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v39 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    long long v41 = *(_OWORD *)v33;
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v35 = *(void *)(v33 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_255C81578();
    sub_255C806B8();
    uint64_t result = sub_255C815B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(_OWORD *)uint64_t v19 = v41;
    *(void *)(v19 + 16) = v34;
    *(void *)(v19 + 24) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B81F90(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210F0);
  uint64_t result = sub_255C812E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_255C81568();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B82244(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298688);
  uint64_t result = sub_255C812E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      long long v29 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_255C81578();
      sub_255C81588();
      uint64_t result = sub_255C815B8();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B82510(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298690);
  char v36 = a2;
  uint64_t v6 = sub_255C812E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    long long v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_255C81578();
    swift_bridgeObjectRetain();
    sub_255C806B8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_255C815B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B82838(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF90);
  uint64_t v6 = sub_255C812E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v15];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_31:
              swift_release();
              uint64_t v3 = v2;
              if (v32)
              {
                uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
                if (v31 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v9 = -1 << v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_38;
                }
                if (v15 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v15];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      sub_255C81578();
      sub_255C7E278();
      sub_255C81598();
      uint64_t result = sub_255C815B8();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_255B82B08(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = sub_255C7D5C8();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210A8);
  int v40 = a2;
  uint64_t result = sub_255C812E8();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    char v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = sub_255C81568();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_255B82EB0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_255C80F88();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_255C81578();
        swift_bridgeObjectRetain();
        sub_255C806B8();
        uint64_t v9 = sub_255C815B8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_255B83088(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_255C80F88();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        unint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_255C80628();
        sub_255C81578();
        id v11 = v10;
        sub_255C806B8();
        uint64_t v12 = sub_255C815B8();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *unint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (_OWORD *)(v17 + 32 * v3);
          uint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_255B8327C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7D5C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_255C80F88();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      char v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      unint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_255B866B0(&qword_269F24888, MEMORY[0x263F06EA8]);
        uint64_t v17 = sub_255C804E8();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *uint64_t v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    BOOL v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *BOOL v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_255B83574(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_255C80F88();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_255C81568();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_255B8370C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_255C80F88();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_255C81568();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_255C7D5C8() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_255B838DC()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B83A6C()
{
  uint64_t v1 = sub_255C7D6A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21138);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_255C812D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_255B83D04()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FittedText();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F253D8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_255C812D8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v26 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_255B3CC24(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v6 + 56) + v20);
    uint64_t result = (void *)sub_255B867D0((uint64_t)v5, *(void *)(v8 + 48) + v19);
    *(void *)(*(void *)(v8 + 56) + v20) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_255B83F60()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B84110()
{
  return sub_255B84494(&qword_269F210D0);
}

void *sub_255B8411C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D780);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_255B842C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_269F253E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_255A42E30(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_255A199E0(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B84488()
{
  return sub_255B84494(&qword_269F210C8);
}

void *sub_255B84494(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_255C812D8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B84644()
{
  uint64_t v1 = sub_255C7D5C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210B8);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_255C812D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_255B848DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F253D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)(v21 + 16);
    uint64_t v23 = *(void *)(v21 + 24);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)v21;
    *uint64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v26 = v25;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_255B84AA4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B84C48()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298688);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B84DE4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298690);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B84F9C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C812D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_255B8512C()
{
  uint64_t v1 = sub_255C7D5C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F210A8);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_255C812D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_255B853BC@<X0>(double *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_currentDevice);
  id v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3 == (id)6)
  {
    id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
    uint64_t v5 = sub_255A313DC;
    double v6 = -16.0;
    uint64_t v7 = &selRef_blackColor;
    double v8 = 16.0;
    unint64_t v9 = &selRef_whiteColor;
    uint64_t v10 = 0x4046000000000000;
LABEL_5:
    uint64_t v12 = v10;
    unint64_t v13 = self;
    id v14 = [v13 *v9];
    id v15 = [v13 *v7];
    id result = objc_msgSend(v13, sel_labelColor);
    *(void *)a1 = v4;
    a1[1] = v8;
    *((void *)a1 + 2) = v12;
    *((void *)a1 + 3) = v14;
    *((void *)a1 + 4) = v15;
    *((void *)a1 + 5) = result;
    a1[6] = 0.0;
    a1[7] = v6;
    a1[8] = 0.0;
    a1[9] = v6;
    *((void *)a1 + 10) = v5;
    a1[11] = 0.0;
    return result;
  }
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F835B8], 1024);
  if (result)
  {
    id v4 = result;
    uint64_t v5 = sub_255B80110;
    double v6 = -12.0;
    double v8 = 12.0;
    uint64_t v7 = &selRef_whiteColor;
    unint64_t v9 = &selRef_tintColor;
    uint64_t v10 = 0x4040000000000000;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_255B85588(uint64_t a1)
{
  id v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 24);
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  swift_release();

  return a1;
}

uint64_t sub_255B855E0()
{
  return swift_deallocObject();
}

void sub_255B855F0(uint64_t a1, void *a2)
{
}

uint64_t sub_255B85618()
{
  uint64_t v1 = (char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  return *(void *)v1;
}

id sub_255B8567C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29EF68);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C7D8E8();
  MEMORY[0x270FA5388](v8);
  id v9 = objc_msgSend(self, sel_buttonWithType_, 0);
  id v10 = objc_msgSend(v9, sel_titleLabel);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_255B853BC((double *)v23);
    id v12 = v23[0];
    sub_255B85588((uint64_t)v23);
    objc_msgSend(v11, sel_setFont_, v12);
  }
  id v13 = objc_msgSend(v9, sel_titleLabel);
  if (v13)
  {
    id v14 = v13;
    objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  objc_msgSend(v9, sel_setMaximumContentSizeCategory_, *MEMORY[0x263F83430]);
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  id v15 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setTitle_forState_, v15, 0);

  sub_255B853BC(v24);
  id v16 = *(id *)&v24[5];
  sub_255B85588((uint64_t)v24);
  objc_msgSend(v9, sel_setTitleColor_forState_, v16, 0);

  sub_255B853BC(v25);
  id v17 = *(id *)&v25[4];
  sub_255B85588((uint64_t)v25);
  objc_msgSend(v9, sel_setTitleColor_forState_, v17, 4);

  sub_255A43740(0, (unint64_t *)&unk_26B29F298);
  id v18 = v9;
  sub_255C7D8A8();
  sub_255C7D958();
  uint64_t v19 = sub_255C7D968();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
  unint64_t v20 = (void *)sub_255C80BB8();
  objc_msgSend(v18, sel_setHoverStyle_, v20);

  return v18;
}

void _s11MediaCoreUI8ScopeBarC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  uint64_t v2 = *MEMORY[0x263F8EED0] & *(void *)v0;
  id v3 = &v0[*(void *)(v2 + 0x60)];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  id v4 = &v0[*(void *)((*v1 & *(void *)v0) + 0x68)];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  uint64_t v5 = *(void *)((*v1 & *(void *)v0) + 0x70);
  uint64_t v6 = *(void *)(v2 + 80);
  *(void *)&v0[v5] = sub_255C80848();
  uint64_t v7 = &v0[*(void *)((*v1 & *(void *)v0) + 0x78)];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = &v0[*(void *)((*v1 & *(void *)v0) + 0x80)];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(&v0[*(void *)((*v1 & *(void *)v0) + 0x88)], 1, 1, v6);
  *(void *)&v0[*(void *)((*v1 & *(void *)v0) + 0x90)] = 0;
  uint64_t v9 = *(void *)((*v1 & *(void *)v0) + 0x98);
  *(void *)&v0[v9] = sub_255B7C838();
  *(void *)&v0[*(void *)((*v1 & *(void *)v0) + 0xA0)] = MEMORY[0x263F8EE78];
  *(void *)&v0[*(void *)((*v1 & *(void *)v0) + 0xA8)] = 0;
  *(void *)&v0[*(void *)((*v1 & *(void *)v0) + 0xB0)] = 0;
  v0[*(void *)((*v1 & *(void *)v0) + 0xB8)] = 0;

  sub_255C81248();
  __break(1u);
}

uint64_t type metadata accessor for ScopeBar.ContentInsetMode()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B85C58()
{
  uint64_t v1 = (char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x78);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_255B85CBC()
{
  uint64_t v1 = (char *)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x80);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_255B85D20()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_255B85D68()
{
  sub_255B7BBC8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(unsigned char *)(v0 + 41), *(void *)(v0 + 48));
}

uint64_t sub_255B85D80()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_255B85DC8(uint64_t a1)
{
  sub_255B7BE5C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_255B85DD4()
{
}

uint64_t sub_255B85E04()
{
  return swift_getWitnessTable();
}

double sub_255B85E20@<D0>(uint64_t a1@<X8>)
{
  sub_255B79448((uint64_t)v5);
  char v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

id sub_255B85E64(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 32);
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  char v5 = v1;
  return sub_255B794BC(v4);
}

uint64_t sub_255B85EA4()
{
  return 16;
}

__n128 sub_255B85EB0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255B85EBC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_255B85618();

  return swift_bridgeObjectRetain();
}

uint64_t sub_255B85EF8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_255B79628(v0);
}

uint64_t sub_255B85F24()
{
  return 16;
}

__n128 sub_255B85F30(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255B85F44()
{
  return 16;
}

__n128 sub_255B85F50(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255B85F64()
{
  return 16;
}

__n128 sub_255B85F70(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255B85F7C@<X0>(uint64_t a1@<X8>)
{
  return sub_255B79CCC(a1);
}

uint64_t sub_255B85FA4()
{
  return 16;
}

__n128 sub_255B85FB0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of ScopeBarItemRepresentable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_255B85FD0()
{
  uint64_t result = sub_255C80E88();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ScopeBar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScopeBar);
}

uint64_t dispatch thunk of ScopeBar.contentInsetMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ScopeBar.contentInsetMode.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ScopeBar.contentInsetMode.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ScopeBar.scopes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ScopeBar.scopes.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ScopeBar.scopes.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ScopeBar.selectionHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ScopeBar.selectionHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ScopeBar.selectionHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ScopeBar.onScopeViewsDidChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ScopeBar.onScopeViewsDidChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ScopeBar.onScopeViewsDidChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ScopeBar.selectedScope.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ScopeBar.selectScope(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ScopeBar.selectScope(at:animated:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))((*MEMORY[0x263F8EED0] & *v2) + 0x158))(a1, a2 & 1);
}

uint64_t getEnumTagSinglePayload for MotionCacheEntryLookupError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MotionCacheEntryLookupError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t sub_255B86490(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255B864AC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 1;
  }
  else
  {
    *(unsigned char *)(result + 32) = 0;
  }
  return result;
}

uint64_t sub_255B864D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B86508(uint64_t a1, uint64_t a2)
{
  char v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  return v3(&v6, &v5);
}

uint64_t sub_255B86544(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_255B86574()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B865AC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_255B865E4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1);
}

uint64_t sub_255B86610()
{
  return swift_deallocObject();
}

id sub_255B86648()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_layoutIfNeeded);
}

uint64_t sub_255B86658()
{
  return swift_deallocObject();
}

id sub_255B86668(id *a1)
{
  return sub_255B7D650(a1, *(void **)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

void sub_255B8668C()
{
}

uint64_t sub_255B866B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B866F8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_255B86738()
{
  sub_255B7ED04(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_255B86744()
{
  return swift_deallocObject();
}

uint64_t sub_255B86754()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255B8678C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_255B867C4(void *a1)
{
  sub_255B7EA2C(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_255B867D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FittedText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B86860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC30);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  _s24HeaderArtworkPlaceholderVMa();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  _s32HeaderMetadataAndContextMenuViewVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v6 = sub_255C7FED8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v52 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25020);
  uint64_t v10 = sub_255C7E458();
  uint64_t v56 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  CGRect v53 = (char *)v52 - v11;
  uint64_t v55 = v12;
  uint64_t v13 = sub_255C7E458();
  uint64_t v59 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  CGRect v54 = (char *)v52 - v14;
  uint64_t v58 = v15;
  uint64_t v16 = sub_255C7E458();
  uint64_t v61 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  CGRect v57 = (char *)v52 - v17;
  uint64_t v63 = v18;
  uint64_t v19 = sub_255C7E458();
  uint64_t v65 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v60 = (char *)v52 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  uint64_t v66 = v19;
  uint64_t v21 = sub_255C7E458();
  uint64_t v67 = *(void *)(v21 - 8);
  uint64_t v68 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v62 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  id v64 = (char *)v52 - v24;
  long long v25 = v2[5];
  v104[0] = v2[4];
  v104[1] = v25;
  *(_OWORD *)((char *)&v104[1] + 10) = *(long long *)((char *)v2 + 90);
  long long v26 = v2[1];
  long long v100 = *v2;
  long long v101 = v26;
  long long v27 = v2[3];
  long long v102 = v2[2];
  long long v103 = v27;
  uint64_t v28 = sub_255C7E928();
  if (qword_269F20300 != -1) {
    uint64_t v28 = swift_once();
  }
  MEMORY[0x270FA5388](v28);
  *(void *)&v52[-8] = v4;
  *(void *)&v52[-6] = v5;
  *(void *)&v52[-4] = &v100;
  sub_255C7FEC8();
  v107[0] = 0x49676E6979616C70;
  v107[1] = 0xEB000000006D6574;
  uint64_t v29 = *(void *)&v104[2];
  char v30 = BYTE8(v104[2]);
  sub_255A0877C(*(uint64_t *)&v104[2], SBYTE8(v104[2]));
  sub_255ABBAE0(v29, v30);
  sub_255A087D0(v29, v30);
  sub_255C7EF68();
  sub_255C80378();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255B88054();
  uint64_t v32 = v53;
  sub_255C7F938();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v52[1] = sub_255C7F1C8();
  v105[2] = v103;
  v106[0] = v104[0];
  *(_OWORD *)((char *)v106 + 10) = *(_OWORD *)((char *)v104 + 10);
  v105[0] = v101;
  v105[1] = v102;
  long long v98 = v103;
  v99[0] = v104[0];
  *(_OWORD *)((char *)v99 + 10) = *(_OWORD *)((char *)v104 + 10);
  long long v96 = v101;
  long long v97 = v102;
  sub_255A1D474((uint64_t)v105, (uint64_t)v107);
  sub_255B5A588((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v88);
  sub_255B5A588((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v80 = v88;
  char v81 = v89;
  __int16 v82 = v90;
  uint64_t v83 = v91;
  char v84 = v92;
  long long v85 = v93;
  long long v86 = v94;
  char v87 = v95;
  sub_255B3174C();
  uint64_t v33 = sub_255A09998(&qword_269F25018, &qword_269F25020);
  uint64_t v78 = WitnessTable;
  uint64_t v79 = v33;
  uint64_t v34 = v55;
  uint64_t v35 = swift_getWitnessTable();
  char v36 = v54;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v34);
  sub_255C7F1E8();
  sub_255B5A588((uint64_t)v107, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v88);
  sub_255B5A588((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v80 = v88;
  char v81 = v89;
  __int16 v82 = v90;
  uint64_t v83 = v91;
  char v84 = v92;
  long long v85 = v93;
  long long v86 = v94;
  char v87 = v95;
  sub_255B318CC();
  uint64_t v37 = MEMORY[0x263F18C10];
  uint64_t v76 = v35;
  uint64_t v77 = MEMORY[0x263F18C10];
  uint64_t v38 = v58;
  uint64_t v39 = swift_getWitnessTable();
  int v40 = v57;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v38);
  sub_255C7F1A8();
  if (qword_269F20028 != -1) {
    swift_once();
  }
  sub_255B5A588((uint64_t)v107, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v88);
  sub_255B5A588((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v80 = v88;
  char v81 = v89;
  __int16 v82 = v90;
  uint64_t v83 = v91;
  char v84 = v92;
  long long v85 = v93;
  long long v86 = v94;
  char v87 = v95;
  sub_255BE6070((uint64_t)&v80);
  uint64_t v74 = v39;
  uint64_t v75 = v37;
  uint64_t v41 = v63;
  uint64_t v42 = swift_getWitnessTable();
  char v43 = v60;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v41);
  sub_255B8797C();
  uint64_t v72 = v42;
  uint64_t v73 = v37;
  uint64_t v44 = v66;
  uint64_t v45 = swift_getWitnessTable();
  int v46 = v62;
  sub_255C7F608();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v44);
  uint64_t v47 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
  uint64_t v70 = v45;
  uint64_t v71 = v47;
  uint64_t v48 = v68;
  swift_getWitnessTable();
  id v49 = v64;
  sub_255A20F54(v46);
  id v50 = *(void (**)(char *, uint64_t))(v67 + 8);
  v50(v46, v48);
  sub_255A20F54(v49);
  return ((uint64_t (*)(char *, uint64_t))v50)(v49, v48);
}

uint64_t sub_255B87328@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC30);
  _s24HeaderArtworkPlaceholderVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v34 = v7;
  uint64_t v35 = sub_255C7E598();
  uint64_t v8 = sub_255C7E458();
  sub_255C7F0D8();
  char v36 = (void (*)(char *, uint64_t))v8;
  uint64_t v40 = sub_255C7E458();
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v30 - v11;
  uint64_t v12 = sub_255C7FC78();
  if (qword_269F20308 != -1) {
    swift_once();
  }
  sub_255C801F8();
  uint64_t v13 = sub_255C7DFE8();
  uint64_t v51 = v12;
  *(void *)&long long v52 = v67;
  BYTE8(v52) = v68;
  uint64_t v53 = v69;
  char v54 = v70;
  long long v55 = v71;
  MEMORY[0x270FA5388](v13);
  *(&v30 - 4) = a2;
  *(&v30 - 3) = a3;
  *(&v30 - 2) = (uint64_t)a1;
  sub_255C801F8();
  char v31 = a1;
  uint64_t v32 = a3;
  unint64_t v14 = sub_255B367AC();
  sub_255C7FAC8();
  swift_release();
  uint64_t v15 = v64;
  char v16 = v65;
  uint64_t v51 = v59;
  *(void *)&long long v52 = v60;
  BYTE8(v52) = BYTE8(v60);
  uint64_t v53 = v61;
  char v54 = v62;
  long long v55 = v63;
  uint64_t v56 = v64;
  char v57 = v65;
  long long v58 = v66;
  uint64_t v17 = swift_getWitnessTable();
  unint64_t v49 = v14;
  uint64_t v50 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = v39;
  sub_255C7F8D8();
  swift_release();
  sub_255A087D0(v15, v16);
  unint64_t v20 = sub_255A9752C();
  uint64_t v47 = v18;
  unint64_t v48 = v20;
  uint64_t v21 = v40;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v22 = v38;
  sub_255A20F54(v19);
  uint64_t v23 = v37;
  char v36 = *(void (**)(char *, uint64_t))(v37 + 8);
  v36(v19, v21);
  sub_255C23448(*v31);
  NowPlayingController.sharedViews.getter(v44);
  uint64_t v59 = v44[0];
  uint64_t v24 = type metadata accessor for NowPlayingViews();
  NowPlayingViews.metadata.getter(v24, &v51);
  swift_unknownObjectRelease();
  uint64_t v45 = v51;
  long long v34 = v52;
  long long v46 = v52;
  uint64_t v25 = _s32HeaderMetadataAndContextMenuViewVMa();
  uint64_t v26 = swift_getWitnessTable();
  sub_255A20F54(&v45);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v19, v22, v21);
  uint64_t v51 = v59;
  long long v52 = v60;
  uint64_t v45 = (uint64_t)v19;
  *(void *)&long long v46 = &v51;
  swift_unknownObjectRetain();
  swift_retain();
  v44[0] = v21;
  v44[1] = v25;
  uint64_t v42 = v35;
  uint64_t v43 = v26;
  sub_255AF64A0((uint64_t)&v45, 2uLL, (uint64_t)v44);
  swift_release();
  swift_unknownObjectRelease();
  long long v27 = v22;
  uint64_t v28 = (uint64_t (*)(char *, uint64_t))v36;
  v36(v27, v21);
  swift_release();
  swift_unknownObjectRelease();
  return v28(v19, v21);
}

uint64_t sub_255B87858(uint64_t *a1)
{
  sub_255C23448(*a1);
  NowPlayingController.sharedViews.getter(&v10);
  type metadata accessor for NowPlayingViews();
  NowPlayingViews.artwork.getter();
  swift_unknownObjectRelease();
  uint64_t v1 = v8;
  char v2 = v9;
  uint64_t v6 = v8;
  char v7 = v9;
  _s24HeaderArtworkPlaceholderVMa();
  swift_getWitnessTable();
  sub_255A20F54(&v6);
  sub_255A087D0(v1, v2);
  uint64_t v3 = v11;
  char v4 = v12;
  uint64_t v8 = v11;
  char v9 = v12;
  sub_255A20F54(&v8);
  return sub_255A087D0(v3, v4);
}

uint64_t sub_255B8797C()
{
  sub_255C7E038();
  if (qword_269F1FE60 != -1) {
    swift_once();
  }
  swift_retain();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E048();
  sub_255C80228();
  sub_255C80258();
  swift_release();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E058();
  swift_release();
  swift_release();
  sub_255C7E038();
  if (qword_269F1FE68 != -1) {
    swift_once();
  }
  swift_retain();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E048();
  sub_255C80228();
  sub_255C80258();
  swift_release();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E058();
  swift_release();
  swift_release();
  uint64_t v0 = sub_255C7E008();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_255B87BC4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_255C7E628();
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = swift_getKeyPath();
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_WORD *)(a2 + 88) = 0;
  uint64_t result = swift_getKeyPath();
  *(void *)(a2 + 96) = result;
  *(unsigned char *)(a2 + 104) = 0;
  *(unsigned char *)(a2 + 105) = a1;
  return result;
}

uint64_t sub_255B87C5C(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_255A1D054(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88), *(unsigned char *)(a1 + 89));
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);

  return sub_255A087D0(v2, v3);
}

uint64_t sub_255B87CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 72);
  char v11 = *(unsigned char *)(a2 + 88);
  char v12 = *(unsigned char *)(a2 + 89);
  swift_unknownObjectRetain();
  sub_255A1CFDC(v18, v17, v5, v6, v7, v8, v9, v16, v10, v11, v12);
  *(void *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 89) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  char v14 = *(unsigned char *)(a2 + 104);
  sub_255A0877C(v13, v14);
  *(void *)(a1 + 96) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  return a1;
}

uint64_t sub_255B87DD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  char v28 = *(unsigned char *)(a2 + 88);
  char v29 = *(unsigned char *)(a2 + 89);
  sub_255A1CFDC(v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  char v21 = *(unsigned char *)(a1 + 88);
  char v22 = *(unsigned char *)(a1 + 89);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v27;
  *(unsigned char *)(a1 + 88) = v28;
  *(unsigned char *)(a1 + 89) = v29;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(a2 + 96);
  LOBYTE(v5) = *(unsigned char *)(a2 + 104);
  sub_255A0877C(v23, v5);
  uint64_t v24 = *(void *)(a1 + 96);
  char v25 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = v23;
  *(unsigned char *)(a1 + 104) = v5;
  sub_255A087D0(v24, v25);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  return a1;
}

uint64_t sub_255B87F20(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 88);
  char v5 = *(unsigned char *)(a2 + 89);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  char v15 = *(unsigned char *)(a1 + 88);
  char v16 = *(unsigned char *)(a1 + 89);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v4;
  *(unsigned char *)(a1 + 89) = v5;
  sub_255A1D054(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  char v17 = *(unsigned char *)(a2 + 104);
  uint64_t v18 = *(void *)(a1 + 96);
  char v19 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = v17;
  sub_255A087D0(v18, v19);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  return a1;
}

uint64_t _s10HeaderViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B88000()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B88048@<X0>(uint64_t a1@<X8>)
{
  return sub_255B87328(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255B88054()
{
  unint64_t result = qword_269F25468;
  if (!qword_269F25468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25468);
  }
  return result;
}

uint64_t sub_255B880A8()
{
  return sub_255B87858(*(uint64_t **)(v0 + 32));
}

uint64_t sub_255B880B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B88358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(unsigned __int8 *)(v1 + 8);
  sub_255AC0394(v3, v4);
  sub_255ABCFE4(v3, v4, a1);

  return sub_255AC0398(v3, v4);
}

uint64_t NowPlayingQueueChapterList.init(_:isExpanded:title:chapterBuilder:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  *(void *)a6 = swift_getKeyPath();
  *(unsigned char *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = a1;
  *(unsigned char *)(a6 + 24) = a2;
  uint64_t v11 = type metadata accessor for NowPlayingQueueChapterList();
  uint64_t result = a3();
  uint64_t v13 = (void *)(a6 + *(int *)(v11 + 80));
  void *v13 = a4;
  v13[1] = a5;
  return result;
}

uint64_t type metadata accessor for NowPlayingQueueChapterList()
{
  return swift_getGenericMetadata();
}

uint64_t NowPlayingQueueChapterList.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v98 = sub_255C7EBF8();
  uint64_t v86 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  long long v85 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_255C7E988();
  uint64_t v81 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v78 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_255C7E518();
  MEMORY[0x270FA5388](v75);
  uint64_t v77 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_255C7E508();
  MEMORY[0x270FA5388](v83);
  uint64_t v80 = (uint64_t)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_255C7E5B8();
  uint64_t v79 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v76 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v97);
  char v95 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = a1[3];
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245A0);
  sub_255C7E458();
  uint64_t v9 = sub_255C7E458();
  uint64_t v93 = a1[6];
  uint64_t v120 = v93;
  uint64_t v121 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_255A09998(&qword_269F245A8, &qword_269F245A0);
  uint64_t v118 = WitnessTable;
  uint64_t v119 = v11;
  uint64_t v12 = swift_getWitnessTable();
  unint64_t v13 = sub_255B89208();
  uint64_t v116 = v12;
  unint64_t v117 = v13;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v111 = v9;
  uint64_t v112 = MEMORY[0x263F8D4F8];
  uint64_t v113 = v14;
  uint64_t v114 = MEMORY[0x263F8D508];
  sub_255C7FEE8();
  uint64_t v90 = a1[2];
  uint64_t v15 = v90;
  swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_255C808C8();
  uint64_t v92 = a1[4];
  uint64_t v91 = a1;
  sub_255C7E458();
  uint64_t v17 = sub_255C7E458();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v89 = a1[5];
  uint64_t v111 = v16;
  uint64_t v112 = v15;
  uint64_t v113 = v17;
  uint64_t v114 = v18;
  uint64_t v115 = v89;
  sub_255C80088();
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  uint64_t v19 = sub_255C80108();
  uint64_t v69 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)v66 - v20;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v108 = MEMORY[0x263F1BA00];
  uint64_t v109 = v88;
  uint64_t v110 = MEMORY[0x263F1BA00];
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_255A09998(&qword_269F21850, &qword_269F21848);
  uint64_t v24 = v97;
  uint64_t v111 = v19;
  uint64_t v112 = v97;
  uint64_t v113 = v22;
  uint64_t v114 = v23;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v72 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  char v70 = (char *)v66 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25478);
  uint64_t v74 = OpaqueTypeMetadata2;
  uint64_t v27 = sub_255C7E458();
  uint64_t v73 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  long long v71 = (char *)v66 - v28;
  uint64_t v29 = v24;
  uint64_t v30 = v21;
  uint64_t v111 = v19;
  uint64_t v112 = v29;
  v66[0] = v22;
  uint64_t v113 = v22;
  uint64_t v114 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = sub_255A09998(&qword_269F25480, &qword_269F25478);
  v66[1] = OpaqueTypeConformance2;
  uint64_t v106 = OpaqueTypeConformance2;
  uint64_t v107 = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = sub_255B8B65C(&qword_26B29D388, MEMORY[0x263F19B68]);
  uint64_t v35 = v27;
  uint64_t v111 = v27;
  uint64_t v112 = v98;
  uint64_t v113 = v33;
  uint64_t v114 = v34;
  uint64_t v36 = swift_getOpaqueTypeMetadata2();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v67 = (char *)v66 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  char v68 = (char *)v66 - v40;
  uint64_t v99 = v90;
  uint64_t v100 = v94;
  uint64_t v101 = v92;
  uint64_t v102 = v89;
  uint64_t v41 = v91[7];
  uint64_t v103 = v93;
  uint64_t v104 = v41;
  uint64_t v105 = v96;
  sub_255C800F8();
  uint64_t v42 = sub_255C7E378();
  uint64_t v43 = (uint64_t)v95;
  (*(void (**)(void))(*(void *)(v42 - 8) + 104))();
  sub_255B8B65C(qword_269F21878, MEMORY[0x263F18D80]);
  uint64_t result = sub_255C80578();
  if (result)
  {
    uint64_t v96 = v37;
    uint64_t v94 = v33;
    uint64_t v45 = v70;
    sub_255C7F7B8();
    sub_255A095A4(v43, &qword_269F21848);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v19);
    long long v46 = v76;
    sub_255C7E5A8();
    uint64_t v47 = v81;
    unint64_t v48 = v78;
    uint64_t v49 = v84;
    (*(void (**)(char *, void, uint64_t))(v81 + 104))(v78, *MEMORY[0x263F19860], v84);
    uint64_t v50 = v77;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v77[*(int *)(v75 + 20)], v48, v49);
    __asm { FMOV            V0.2D, #4.0 }
    *uint64_t v50 = _Q0;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    uint64_t v56 = v80;
    sub_255A09310((uint64_t)v50, v80);
    *(void *)(v56 + *(int *)(v83 + 20)) = 0xC000000000000000;
    sub_255B8A1D0((uint64_t)v50, MEMORY[0x263F19048]);
    sub_255B8B65C(qword_269F25488, MEMORY[0x263F19028]);
    uint64_t v57 = v34;
    long long v58 = v71;
    uint64_t v59 = v74;
    sub_255C7F718();
    sub_255B8A1D0(v56, MEMORY[0x263F19028]);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v46, v82);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v59);
    long long v60 = v85;
    sub_255C7E5F8();
    uint64_t v61 = v67;
    uint64_t v62 = v98;
    uint64_t v63 = v94;
    sub_255C7F688();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v60, v62);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v58, v35);
    uint64_t v111 = v35;
    uint64_t v112 = v62;
    uint64_t v113 = v63;
    uint64_t v114 = v57;
    swift_getOpaqueTypeConformance2();
    uint64_t v64 = v68;
    sub_255A20F54(v61);
    char v65 = *(void (**)(char *, uint64_t))(v96 + 8);
    v65(v61, v36);
    sub_255A20F54(v64);
    return ((uint64_t (*)(char *, uint64_t))v65)(v64, v36);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_255B89208()
{
  unint64_t result = qword_269F25470;
  if (!qword_269F25470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25470);
  }
  return result;
}

uint64_t sub_255B8925C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v128 = a8;
  uint64_t v129 = a1;
  *(void *)&long long v165 = a2;
  *((void *)&v165 + 1) = a3;
  uint64_t v134 = a3;
  uint64_t v135 = a6;
  uint64_t v166 = a4;
  uint64_t v167 = a5;
  uint64_t v168 = a6;
  uint64_t v169 = a7;
  uint64_t v141 = a7;
  uint64_t v130 = type metadata accessor for NowPlayingQueueChapterList();
  uint64_t v105 = *(void *)(v130 - 8);
  v101[2] = *(void *)(v105 + 64);
  MEMORY[0x270FA5388](v130);
  uint64_t v102 = (char *)v101 - v12;
  v101[1] = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_255C808C8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245A0);
  uint64_t v124 = a4;
  uint64_t v140 = sub_255C7E458();
  uint64_t v14 = sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v107 = v13;
  uint64_t v108 = a5;
  *(void *)&long long v165 = v13;
  *((void *)&v165 + 1) = a2;
  uint64_t v123 = a2;
  uint64_t v139 = v14;
  uint64_t v166 = v14;
  uint64_t v167 = WitnessTable;
  uint64_t v104 = WitnessTable;
  uint64_t v168 = a5;
  uint64_t v16 = sub_255C80088();
  uint64_t v125 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v103 = (char *)v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v106 = (char *)v101 - v19;
  uint64_t v138 = v20;
  uint64_t v21 = sub_255C80E88();
  uint64_t v126 = *(void *)(v21 - 8);
  uint64_t v127 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v137 = (char *)v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v136 = (uint64_t)v101 - v24;
  uint64_t v117 = type metadata accessor for QueueHeaderBackground();
  uint64_t v119 = *(uint64_t (**)(char *, uint64_t))(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v26 = (char *)v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25510);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v115 = (uint64_t)v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_255C7E458();
  uint64_t v118 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v31 = (char *)v101 - v30;
  uint64_t v32 = sub_255C7E458();
  uint64_t v122 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v112 = (char *)v101 - v33;
  uint64_t v111 = v32;
  uint64_t v34 = sub_255C7E458();
  uint64_t v120 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v116 = (char *)v101 - v35;
  uint64_t v175 = a6;
  uint64_t v176 = MEMORY[0x263F18C10];
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v109 = v36;
  uint64_t v37 = sub_255A09998(&qword_269F245A8, &qword_269F245A0);
  uint64_t v173 = v36;
  uint64_t v174 = v37;
  uint64_t v133 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v110 = v38;
  unint64_t v39 = sub_255B89208();
  uint64_t v171 = v38;
  unint64_t v172 = v39;
  uint64_t v114 = v34;
  uint64_t v113 = swift_getWitnessTable();
  *(void *)&long long v165 = v34;
  *((void *)&v165 + 1) = MEMORY[0x263F8D4F8];
  uint64_t v166 = v113;
  uint64_t v167 = MEMORY[0x263F8D508];
  uint64_t v40 = sub_255C7FEE8();
  uint64_t v131 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v121 = (char *)v101 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)v101 - v43;
  MEMORY[0x270FA5388](v45);
  id v132 = (char *)v101 - v46;
  sub_255C7F1E8();
  uint64_t v47 = v129;
  sub_255B88358(&v165);
  sub_255C7FAF8();
  sub_255B88358(&v165);
  uint64_t v48 = 3;
  if (!*(unsigned char *)(v47 + 24)) {
    uint64_t v48 = -1;
  }
  uint64_t v49 = 12;
  if (*(unsigned char *)(v47 + 24)) {
    uint64_t v49 = 0;
  }
  if (v165 == 2) {
    uint64_t v50 = v48;
  }
  else {
    uint64_t v50 = v49;
  }
  *((void *)v26 + 2) = swift_getKeyPath();
  v26[24] = 0;
  uint64_t v51 = v117;
  long long v52 = (uint64_t *)&v26[*(int *)(v117 + 28)];
  *long long v52 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v26 = v50;
  v26[8] = 0;
  uint64_t v53 = (uint64_t)v26;
  uint64_t v54 = v115;
  sub_255B8B5F8(v53, v115);
  (*((void (**)(uint64_t, void, uint64_t, uint64_t))v119 + 7))(v54, 0, 1, v51);
  sub_255B8B65C(&qword_269F25518, (void (*)(uint64_t))type metadata accessor for QueueHeaderBackground);
  long long v55 = v112;
  sub_255C7F838();
  sub_255A095A4(v54, &qword_269F25510);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v31, v29);
  LOBYTE(v152) = 0;
  sub_255C7FE58();
  LOBYTE(v52) = v165;
  uint64_t v56 = *((void *)&v165 + 1);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v165) = (_BYTE)v52;
  *((void *)&v165 + 1) = v56;
  uint64_t v166 = KeyPath;
  uint64_t v168 = 0;
  uint64_t v169 = 0;
  uint64_t v167 = 0;
  char v170 = 0;
  long long v58 = v116;
  uint64_t v59 = v111;
  MEMORY[0x25A295390](&v165, v111, &type metadata for PlayingItemBackgroundAppearanceModifier, v110);
  swift_release();
  sub_255AB8EB0(KeyPath, 0, 0, 0, 0);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v55, v59);
  LOBYTE(v165) = *(unsigned char *)(v47 + 24);
  uint64_t v60 = v114;
  sub_255C7F9D8();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v58, v60);
  uint64_t v118 = swift_getWitnessTable();
  sub_255A20F54(v44);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t))(v131 + 8);
  uint64_t v122 = v40;
  uint64_t v119 = v61;
  uint64_t v120 = v131 + 8;
  v61(v44, v40);
  if (*(unsigned char *)(v47 + 24) == 1)
  {
    *(void *)&long long v152 = *(void *)(v47 + 16);
    uint64_t v62 = v152;
    uint64_t v63 = v123;
    uint64_t v64 = sub_255C808C8();
    swift_getWitnessTable();
    uint64_t v65 = MEMORY[0x263F8D708];
    sub_255C80AF8();
    long long v147 = v165;
    uint64_t v151 = v62;
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25520);
    unint64_t v67 = sub_255B8B6AC();
    uint64_t v149 = v65;
    unint64_t v150 = v67;
    uint64_t v68 = swift_getWitnessTable();
    uint64_t v69 = swift_getWitnessTable();
    sub_255C81498();
    long long v147 = v152;
    uint64_t v148 = v153;
    *(void *)&long long v165 = v66;
    *((void *)&v165 + 1) = v64;
    uint64_t v166 = v68;
    uint64_t v167 = v69;
    sub_255C81118();
    swift_getWitnessTable();
    *(void *)&long long v165 = sub_255C808D8();
    MEMORY[0x270FA5388](v165);
    uint64_t v70 = v134;
    v101[-6] = v63;
    v101[-5] = v70;
    uint64_t v71 = v124;
    uint64_t v72 = v108;
    v101[-4] = v124;
    v101[-3] = v72;
    uint64_t v73 = v141;
    uint64_t v99 = v135;
    uint64_t v100 = v141;
    uint64_t v117 = swift_getKeyPath();
    uint64_t v74 = v105;
    uint64_t v75 = v102;
    uint64_t v76 = v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v102, v129, v130);
    unint64_t v77 = (*(unsigned __int8 *)(v74 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    uint64_t v78 = (char *)swift_allocObject();
    *((void *)v78 + 2) = v63;
    uint64_t v79 = v134;
    *((void *)v78 + 3) = v134;
    *((void *)v78 + 4) = v71;
    uint64_t v80 = v135;
    *((void *)v78 + 5) = v72;
    *((void *)v78 + 6) = v80;
    *((void *)v78 + 7) = v73;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v78[v77], v75, v76);
    uint64_t v81 = (void *)swift_allocObject();
    v81[2] = v123;
    v81[3] = v79;
    v81[4] = v124;
    v81[5] = v72;
    v81[6] = v80;
    v81[7] = v73;
    v81[8] = sub_255B8B82C;
    v81[9] = v78;
    uint64_t v145 = v73;
    uint64_t v146 = v133;
    uint64_t v143 = swift_getWitnessTable();
    uint64_t v144 = MEMORY[0x263F18C10];
    uint64_t v82 = swift_getWitnessTable();
    uint64_t v99 = v82;
    uint64_t v83 = v103;
    sub_255C80068();
    uint64_t v142 = v82;
    uint64_t v84 = v138;
    swift_getWitnessTable();
    long long v85 = v106;
    sub_255A20F54(v83);
    uint64_t v86 = v125;
    uint64_t v87 = *(void (**)(char *, uint64_t))(v125 + 8);
    v87(v83, v84);
    uint64_t v88 = (uint64_t)v137;
    sub_255A20F54(v85);
    v87(v85, v84);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v88, 0, 1, v84);
  }
  else
  {
    uint64_t v88 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v125 + 56))(v137, 1, 1, v138);
    uint64_t v163 = v141;
    uint64_t v164 = v133;
    uint64_t v161 = swift_getWitnessTable();
    uint64_t v162 = MEMORY[0x263F18C10];
    uint64_t v160 = swift_getWitnessTable();
    swift_getWitnessTable();
  }
  sub_255A97640(v88, v136);
  uint64_t v89 = v126;
  uint64_t v90 = v127;
  uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
  v91(v88, v127);
  uint64_t v92 = v132;
  uint64_t v93 = v121;
  uint64_t v94 = v122;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v121, v132, v122);
  *(void *)&long long v165 = v93;
  uint64_t v95 = v136;
  uint64_t v96 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v137, v136, v90);
  *((void *)&v165 + 1) = v96;
  *(void *)&long long v152 = v94;
  *((void *)&v152 + 1) = v90;
  *(void *)&long long v147 = v118;
  uint64_t v158 = v141;
  uint64_t v159 = v133;
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v157 = MEMORY[0x263F18C10];
  uint64_t v155 = swift_getWitnessTable();
  uint64_t v154 = swift_getWitnessTable();
  *((void *)&v147 + 1) = swift_getWitnessTable();
  sub_255AF64A0((uint64_t)&v165, 2uLL, (uint64_t)&v152);
  v91(v95, v90);
  uint64_t v97 = v119;
  v119(v92, v94);
  v91((uint64_t)v96, v90);
  return v97(v93, v94);
}

uint64_t sub_255B8A1BC@<X0>(uint64_t a1@<X8>)
{
  return sub_255B8925C(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_255B8A1D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255B8A230()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B8A27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v46 = a8;
  uint64_t v45 = a7;
  uint64_t v44 = a5;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v49 = a9;
  uint64_t v50 = type metadata accessor for QueueHeaderBackground();
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25510);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245A0);
  uint64_t v21 = sub_255C7E458();
  uint64_t v55 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v42 - v22;
  uint64_t v24 = sub_255C7E458();
  uint64_t v56 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v53 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v27 = MEMORY[0x270FA5388](v26);
  uint64_t v54 = (char *)&v42 - v28;
  uint64_t result = MEMORY[0x25A296130](*(void *)(a3 + 16), a4, v27);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v43 = a10;
    uint64_t v42 = result - 1;
    uint64_t v61 = a4;
    uint64_t v62 = v44;
    uint64_t v63 = a6;
    uint64_t v64 = v45;
    uint64_t v65 = v46;
    uint64_t v66 = a10;
    uint64_t v30 = type metadata accessor for NowPlayingQueueChapterList();
    uint64_t v31 = v47;
    (*(void (**)(uint64_t, uint64_t))(a3 + *(int *)(v30 + 80)))(v47, v48);
    *((void *)v14 + 2) = swift_getKeyPath();
    v14[24] = 0;
    uint64_t v32 = a6;
    uint64_t v33 = v50;
    uint64_t v34 = (uint64_t *)&v14[*(int *)(v50 + 28)];
    *uint64_t v34 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = 12;
    if (v42 != v31) {
      uint64_t v35 = 0;
    }
    *(void *)uint64_t v14 = v35;
    v14[8] = 0;
    sub_255B8B5F8((uint64_t)v14, (uint64_t)v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v17, 0, 1, v33);
    sub_255B8B65C(&qword_269F25518, (void (*)(uint64_t))type metadata accessor for QueueHeaderBackground);
    uint64_t v36 = v43;
    sub_255C7F838();
    sub_255A095A4((uint64_t)v17, &qword_269F25510);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v32);
    sub_255C7F1B8();
    uint64_t v37 = sub_255A09998(&qword_269F245A8, &qword_269F245A0);
    uint64_t v59 = v36;
    uint64_t v60 = v37;
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v39 = v53;
    sub_255C7FAF8();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v21);
    uint64_t v57 = WitnessTable;
    uint64_t v58 = MEMORY[0x263F18C10];
    swift_getWitnessTable();
    uint64_t v40 = v54;
    sub_255A20F54(v39);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v56 + 8);
    v41(v39, v24);
    sub_255A20F54(v40);
    return ((uint64_t (*)(char *, uint64_t))v41)(v40, v24);
  }
  return result;
}

uint64_t sub_255B8A80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_255B8A814()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_255B8A8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 25) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
  }
  else
  {
    uint64_t v12 = *(void *)a2;
    unsigned __int8 v13 = *(unsigned char *)(a2 + 8);
    sub_255AC0394(*(void *)a2, v13);
    *(void *)a1 = v12;
    *(unsigned char *)(a1 + 8) = v13;
    unint64_t v14 = a1 & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v14 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    *(unsigned char *)(v14 + 24) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    unint64_t v15 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v7 + 25) & ~v7;
    uint64_t v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v16(((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 25) & ~v7, v15, v5);
    uint64_t v17 = (void *)((v8 + v15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)((v8 + (((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 25) & ~v7)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v17;
    v19[1] = v18;
  }
  swift_retain();
  return a1;
}

uint64_t sub_255B8AA44(uint64_t a1, uint64_t a2)
{
  sub_255AC0398(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 25) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

uint64_t sub_255B8AAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a2 + 8);
  sub_255AC0394(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  unint64_t v8 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v8 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
  uint64_t v13 = v11 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v14 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v14;
  uint64_t v16 = (v14 + 25 + v9) & ~v14;
  swift_bridgeObjectRetain();
  v12(v15, v16, v10);
  uint64_t v17 = *(void *)(v13 + 48) + 7;
  uint64_t v18 = (void *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  return a1;
}

uint64_t sub_255B8ABD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a2 + 8);
  sub_255AC0394(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255AC0398(v8, v9);
  unint64_t v10 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 24;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v13 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  unint64_t v15 = (v13 + 25 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))(v14, (v13 + 25 + v10) & ~v13);
  uint64_t v16 = *(void *)(v12 + 40) + 7;
  uint64_t v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255B8ACDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v4 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v4 + 24) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v8 = (v7 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  unint64_t v9 = (v7 + 25 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(v8, v9);
  *(_OWORD *)((*(void *)(v6 + 32) + 7 + v8) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v6 + 32) + 7 + v9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255B8AD9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a2;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255AC0398(v8, v9);
  unint64_t v4 = (uint64_t *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = v4[2];
  swift_bridgeObjectRelease();
  *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *((unsigned char *)v4 + 24);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (v12 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  uint64_t v14 = ((unint64_t)v4 + v12 + 25) & ~v12;
  (*(void (**)(unint64_t, uint64_t))(v10 + 40))(v13, v14);
  *(_OWORD *)((*(void *)(v11 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v11 + 24)
                                                                                       + 7
                                                                                       + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_255B8AE88(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + ((v6 + 25) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B8AFE4);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  unint64_t v17 = a1 & 0xFFFFFFFFFFFFFFF8;
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((v17 + v6 + 25) & ~v6);
  }
  unint64_t v18 = *(void *)(v17 + 16);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_255B8AFF8(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 25) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          *(unsigned char *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)(a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            unint64_t v18 = a1 & 0xFFFFFFFFFFFFFFF8;
            if ((v7 & 0x80000000) != 0)
            {
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20((v18 + v9 + 25) & ~v9);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)(v18 + 16) = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 25) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 25) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 25) & ~v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero((void *)a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      *(unsigned char *)(a1 + v10) = v16;
      break;
    case 2:
      *(_WORD *)(a1 + v10) = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x255B8B1ECLL);
    case 4:
      *(_DWORD *)(a1 + v10) = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_255B8B214()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B8B5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QueueHeaderBackground();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B8B65C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B8B6AC()
{
  unint64_t result = qword_269F25528[0];
  if (!qword_269F25528[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F25528);
  }
  return result;
}

uint64_t sub_255B8B700()
{
  long long v4 = *(_OWORD *)(v0 + 24);
  unint64_t v1 = (int *)(type metadata accessor for NowPlayingQueueChapterList() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_255AC0398(*(void *)v2, *(unsigned __int8 *)(v2 + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v2 + v1[21]);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_255B8B82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  uint64_t v10 = v3[5];
  uint64_t v11 = v3[6];
  uint64_t v12 = v3[7];
  uint64_t v13 = *(void *)(type metadata accessor for NowPlayingQueueChapterList() - 8);
  return sub_255B8A27C(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v7, v8, v9, v10, v11, a3, v12);
}

uint64_t sub_255B8B8FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B8B934(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 64);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_255B8B9A4()
{
  return swift_release();
}

uint64_t sub_255B8B9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

uint64_t sub_255B8B9EC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255B8BA40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for WithNamespace()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B8BA9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B8BAE0@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = a2 & 1;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_255B8BAF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - v7;
  if (*(unsigned char *)(v1 + 16) == 1) {
    uint64_t v9 = sub_255C80308();
  }
  else {
    uint64_t v9 = *(void *)(v1 + 8);
  }
  (*(void (**)(uint64_t))(v1 + 24))(v9);
  sub_255A20F54(v5);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  sub_255A20F54(v8);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

uint64_t sub_255B8BC4C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t getEnumTagSinglePayload for MotionPlayerError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MotionPlayerError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_255B8BCA4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255B8BCC0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionPlayerError()
{
  return &type metadata for MotionPlayerError;
}

void sub_255B8BCF8()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_tintColor);
  id v2 = objc_msgSend(v0, sel_labelColor);
  id v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.35);

  id v4 = objc_msgSend(v0, sel_labelColor);
  id v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.2);

  id v6 = objc_msgSend(v0, sel_labelColor);
  id v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.6);

  qword_26B29C8C8 = (uint64_t)v1;
  unk_26B29C8D0 = v3;
  qword_26B29C8D8 = (uint64_t)v5;
  unk_26B29C8E0 = v7;
}

id static WaveformColorPalette.accent.getter@<X0>(void *a1@<X8>)
{
  if (qword_26B29C8E8 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_26B29C8C8;
  id v3 = (void *)unk_26B29C8D0;
  id v5 = (void *)qword_26B29C8D8;
  uint64_t v4 = unk_26B29C8E0;
  id v10 = (id)unk_26B29C8E0;
  *a1 = qword_26B29C8C8;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

void sub_255B8BEB8()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_whiteColor);
  id v2 = objc_msgSend(v0, sel_whiteColor);
  id v3 = objc_msgSend(v0, sel_whiteColor);
  id v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);

  id v5 = objc_msgSend(v0, sel_whiteColor);
  id v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, 0.6);

  qword_26B29C8A0 = (uint64_t)v1;
  *(void *)algn_26B29C8A8 = v2;
  qword_26B29C8B0 = (uint64_t)v4;
  unk_26B29C8B8 = v6;
}

id static WaveformColorPalette.white.getter@<X0>(void *a1@<X8>)
{
  if (qword_26B29C8C0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_26B29C8A0;
  id v3 = *(void **)algn_26B29C8A8;
  id v5 = (void *)qword_26B29C8B0;
  uint64_t v4 = unk_26B29C8B8;
  id v10 = (id)unk_26B29C8B8;
  *a1 = qword_26B29C8A0;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

uint64_t WaveformColorPalette.init(playingColor:pausedColor:bufferingColorMin:bufferingColorMax:)@<X0>(uint64_t *a1@<X8>)
{
  sub_255A43740(0, (unint64_t *)&qword_269F22AA8);
  swift_retain();
  uint64_t v2 = sub_255C80D98();
  swift_retain();
  uint64_t v3 = sub_255C80D98();
  swift_retain();
  uint64_t v4 = sub_255C80D98();
  uint64_t v5 = sub_255C80D98();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

id sub_255B8C118()
{
  if (qword_26B29C8E8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)unk_26B29C8D0;
  id v1 = (void *)qword_26B29C8D8;
  id v6 = (id)unk_26B29C8E0;
  qword_26B29CB00 = qword_26B29C8C8;
  *(void *)algn_26B29CB08 = unk_26B29C8D0;
  qword_26B29CB10 = qword_26B29C8D8;
  unk_26B29CB18 = unk_26B29C8E0;
  id v2 = (id)qword_26B29C8C8;
  id v3 = v0;
  id v4 = v1;

  return v6;
}

id sub_255B8C1B0@<X0>(void *a1@<X8>)
{
  if (qword_26B29CB28 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_26B29CB00;
  id v3 = *(void **)algn_26B29CB08;
  uint64_t v5 = (void *)qword_26B29CB10;
  uint64_t v4 = unk_26B29CB18;
  id v10 = (id)unk_26B29CB18;
  *a1 = qword_26B29CB00;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;

  return v10;
}

uint64_t sub_255B8C24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255B8C868();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255B8C2B0()
{
  sub_255B8C73C();

  return sub_255C7E8C8();
}

id sub_255B8C2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void **)v2;
  id v6 = *(void **)(v2 + 8);
  id v7 = *(void **)(v2 + 16);
  id v15 = *(id *)(v2 + 24);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D0D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  id v10 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29D0A0) + 36));
  *id v10 = KeyPath;
  v10[1] = (uint64_t)v5;
  v10[2] = (uint64_t)v6;
  v10[3] = (uint64_t)v7;
  v10[4] = (uint64_t)v15;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;

  return v15;
}

uint64_t View.waveformColorPalette(_:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  return MEMORY[0x25A295390](v5, a2, &type metadata for WaveformColorPaletteModifier, a3);
}

uint64_t _s11MediaCoreUI20WaveformColorPaletteV2eeoiySbAC_ACtFZ_0()
{
  if (sub_255C80DD8() & 1) != 0 && (sub_255C80DD8() & 1) != 0 && (sub_255C80DD8()) {
    return sub_255C80DD8() & 1;
  }
  else {
    return 0;
  }
}

void destroy for WaveformColorPalette(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

ValueMetadata *type metadata accessor for WaveformColorPalette()
{
  return &type metadata for WaveformColorPalette;
}

uint64_t sub_255B8C52C()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B8C590()
{
  unint64_t result = qword_26B29CD80;
  if (!qword_26B29CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29CD80);
  }
  return result;
}

void *_s11MediaCoreUI20WaveformColorPaletteVwcp_0(void *a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t _s11MediaCoreUI20WaveformColorPaletteVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  int v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  return a1;
}

uint64_t _s11MediaCoreUI20WaveformColorPaletteVwta_0(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for WaveformColorPaletteModifier()
{
  return &type metadata for WaveformColorPaletteModifier;
}

uint64_t sub_255B8C718()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B8C73C()
{
  unint64_t result = qword_26B29CB30;
  if (!qword_26B29CB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29CB30);
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformColorPaletteKey()
{
  return &type metadata for WaveformColorPaletteKey;
}

unint64_t sub_255B8C7A4()
{
  unint64_t result = qword_26B29D098;
  if (!qword_26B29D098)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D0A0);
    sub_255A09998(&qword_26B29D0D0, &qword_26B29D0D8);
    sub_255A09998(&qword_26B29D100, &qword_26B29D108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D098);
  }
  return result;
}

unint64_t sub_255B8C868()
{
  unint64_t result = qword_26B29C8F0;
  if (!qword_26B29C8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29C8F0);
  }
  return result;
}

void sub_255B8C99C()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for NowPlayingArtworkMotionReplicatorLayer();
  objc_msgSendSuper2(&v7, sel_layoutSublayers);
  id v1 = self;
  objc_msgSend(v1, sel_begin);
  objc_msgSend(v1, sel_setDisableActions_, 1);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent];
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v3, sel_setFrame_);
    objc_msgSend(v0, sel_bounds);
    CGFloat Height = CGRectGetHeight(v8);
    CATransform3DMakeTranslation(&v6, 0.0, Height * 3.0, 0.0);
    CATransform3DScale(&v5, &v6, 1.0, -2.0, 1.0);
    CATransform3D v6 = v5;
    objc_msgSend(v0, sel_setInstanceTransform_, &v6);
    objc_msgSend(v1, sel_commit);
  }
}

id sub_255B8CB90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingArtworkMotionReplicatorLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NowPlayingArtworkMotionReplicatorLayer()
{
  return self;
}

void sub_255B8CBF8(uint64_t a1, unint64_t a2)
{
}

void sub_255B8CC0C(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x25A2969C0](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      objc_super v7 = v6;
      sub_255A43740(0, a3);
      char v8 = sub_255C80DD8();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1)) {
            break;
          }
          if (a3 == (unint64_t *)v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)MEMORY[0x25A2969C0](i + 1, a2);
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if ((unint64_t)a3 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * (void)a3);
          }
          id v11 = v10;
          char v12 = sub_255C80DD8();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_255C812B8();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_255B8CDA8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ViewState();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_255B8CE14@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id v10 = (int *)type metadata accessor for _CAPackageView();
  id v11 = (void *)((char *)a5 + v10[6]);
  *id v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  char v12 = (char *)a5 + v10[7];
  *(void *)char v12 = swift_getKeyPath();
  v12[8] = 0;
  id v13 = (void *)((char *)a5 + v10[8]);
  uint64_t *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  swift_storeEnumTagMultiPayload();
  *a5 = a3;
  a5[1] = a4;
  type metadata accessor for ViewState();
  sub_255B92728(&qword_26B29B270, (void (*)(uint64_t))type metadata accessor for ViewState);
  swift_retain();
  a5[2] = sub_255C7E2B8();
  a5[3] = v14;
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B2AA660;
  sub_255B8D0A4(a1, a2);

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_255B8CFC0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  type metadata accessor for ViewState();
  sub_255B92728(&qword_26B29B270, (void (*)(uint64_t))type metadata accessor for ViewState);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255C7DDC8();

  return sub_255B8CE14(v3, v4, v5, v6, a1);
}

void sub_255B8D0A4(uint64_t a1, unint64_t a2)
{
  if (!v2[7])
  {
    uint64_t v3 = v2;
    id v6 = sub_255B8D310();
    objc_super v7 = (void *)v2[7];
    _OWORD v3[7] = v6;
    id v8 = v6;

    sub_255B8DCF4();
    v3[2] = a1;
    v3[3] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v9 = v3[5];
    if (v9)
    {
      uint64_t v10 = v3[4];
      uint64_t v11 = qword_26B298458;
      swift_bridgeObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_255C7D898();
      __swift_project_value_buffer(v12, (uint64_t)qword_26B2AA4A0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      id v13 = sub_255C7D878();
      os_log_type_t v14 = sub_255C80C08();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v17 = v16;
        *(_DWORD *)uint64_t v15 = 136446466;
        swift_bridgeObjectRetain();
        sub_255A7BEC4(v10, v9, &v17);
        sub_255C80F18();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_255A7BEC4(a1, a2, &v17);
        sub_255C80F18();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_255A00000, v13, v14, "%{public}s: %{public}s ViewState loaded package ", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v16, -1, -1);
        MEMORY[0x25A297C00](v15, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

id sub_255B8D310()
{
  id v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_255C7D5C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v23[-v10];
  MEMORY[0x270FA5388](v12);
  os_log_type_t v14 = &v23[-v13];
  uint64_t v15 = (void *)sub_255C805F8();
  uint64_t v16 = (void *)sub_255C805F8();
  id v17 = objc_msgSend(v1, sel_URLForResource_withExtension_, v15, v16);

  if (!v17)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_255C7D598();

  unint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
  v18(v4, v11, v5);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_255A095A4((uint64_t)v4, &qword_26B29F230);
    return 0;
  }
  v18(v14, v4, v5);
  sub_255A43740(0, &qword_26B29BF38);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, v14, v5);
  uint64_t v19 = sub_255C80628();
  id v22 = sub_255B90A90((uint64_t)v8, v19, v20, 0);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v14, v5);
  return v22;
}

void sub_255B8D630(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = (void *)v2[6];
  if (!v3) {
    return;
  }
  unint64_t v4 = v2;
  uint64_t v7 = (void *)v2[7];
  id v43 = v3;
  id v8 = objc_msgSend(v7, sel_rootLayer);
  if (!v8)
  {
LABEL_22:
    uint64_t v34 = v43;
    goto LABEL_23;
  }
  id v42 = v8;
  uint64_t v9 = (void *)sub_255C805F8();
  id v10 = objc_msgSend(v42, sel_stateWithName_, v9);

  if (!v10)
  {

    uint64_t v34 = v42;
LABEL_23:

    return;
  }
  id v11 = objc_msgSend(v43, sel_stateOfLayer_, v42);
  if (v11)
  {
    uint64_t v12 = v11;
    sub_255A43740(0, &qword_26B29BF10);
    id v13 = v10;
    id v14 = v12;
    LOBYTE(v12) = sub_255C80DD8();

    if (v12)
    {
      unint64_t v15 = v4[5];
      if (v15)
      {
        uint64_t v16 = v4[4];
        uint64_t v17 = qword_26B298458;
        swift_bridgeObjectRetain();
        if (v17 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_255C7D898();
        __swift_project_value_buffer(v18, (uint64_t)qword_26B2AA4A0);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_255C7D878();
        os_log_type_t v20 = sub_255C80C08();
        if (os_log_type_enabled(v19, v20))
        {
          os_log_type_t v40 = v20;
          uint64_t v21 = swift_slowAlloc();
          uint64_t v22 = swift_slowAlloc();
          uint64_t v44 = v22;
          *(_DWORD *)uint64_t v21 = 136446722;
          swift_bridgeObjectRetain();
          sub_255A7BEC4(v16, v15, &v44);
          sub_255C80F18();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2082;
          if (v4[3])
          {
            uint64_t v23 = v4[2];
            unint64_t v24 = v4[3];
          }
          else
          {
            uint64_t v23 = 7104878;
            unint64_t v24 = 0xE300000000000000;
          }
          swift_bridgeObjectRetain();
          sub_255A7BEC4(v23, v24, &v44);
          sub_255C80F18();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 22) = 2082;
          swift_bridgeObjectRetain();
          sub_255A7BEC4(a1, a2, &v44);
          sub_255C80F18();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_255A00000, v19, v40, "%{public}s: %{public}s ViewState ignoring update to %{public}s: state already set", (uint8_t *)v21, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x25A297C00](v22, -1, -1);
          MEMORY[0x25A297C00](v21, -1, -1);

          return;
        }

        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_bridgeObjectRelease_n();
      }

      goto LABEL_22;
    }
  }
  unint64_t v25 = v4[5];
  if (v25)
  {
    uint64_t v26 = v4[4];
    uint64_t v27 = qword_26B298458;
    swift_bridgeObjectRetain();
    if (v27 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_255C7D898();
    __swift_project_value_buffer(v28, (uint64_t)qword_26B2AA4A0);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_255C7D878();
    os_log_type_t v30 = sub_255C80C08();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v44 = v41;
      *(_DWORD *)uint64_t v31 = 136446722;
      swift_bridgeObjectRetain();
      sub_255A7BEC4(v26, v25, &v44);
      sub_255C80F18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      if (v4[3])
      {
        uint64_t v32 = v4[2];
        unint64_t v33 = v4[3];
      }
      else
      {
        uint64_t v32 = 7104878;
        unint64_t v33 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      sub_255A7BEC4(v32, v33, &v44);
      sub_255C80F18();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_255A7BEC4(a1, a2, &v44);
      sub_255C80F18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_255A00000, v29, v30, "%{public}s: %{public}s ViewState updating stateController to %{public}s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v41, -1, -1);
      MEMORY[0x25A297C00](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v35 = self;
  id v36 = v10;
  id v37 = v42;
  unsigned int v38 = objc_msgSend(v35, sel_areAnimationsEnabled);
  double v39 = 0.0;
  if (v38) {
    *(float *)&double v39 = 1.0;
  }
  objc_msgSend(v43, sel_setState_ofLayer_transitionSpeed_, v36, v37, v39);
}

void sub_255B8DCF4()
{
  id v1 = (void *)v0[7];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_rootLayer);
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F158B0]), sel_initWithLayer_, v2);
      uint64_t v5 = (void *)v0[6];
      v0[6] = v4;

      uint64_t v6 = (void *)v0[7];
      if (!v6) {
        goto LABEL_7;
      }
      id v7 = objc_msgSend(v6, sel_rootLayer);
      if (!v7
        || (id v8 = v7, v9 = objc_msgSend(v7, sel_states), v8, !v9)
        || (uint64_t v10 = sub_255C807F8(), v9, v11 = sub_255B8DEC4(v10), swift_bridgeObjectRelease(), !v11))
      {
LABEL_7:
        swift_bridgeObjectRelease();
        unint64_t v11 = MEMORY[0x263F8EE78];
      }
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_255C812B8();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_10;
        }
      }
      else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_10:
        if ((v11 & 0xC000000000000001) != 0)
        {
          id v12 = (id)MEMORY[0x25A2969C0](0, v11);
        }
        else
        {
          if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v12 = *(id *)(v11 + 32);
        }
        id v13 = v12;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      id v13 = 0;
LABEL_17:
      uint64_t v16 = (void *)v0[8];
      v0[8] = v13;
      id v17 = v13;
      sub_255B8DFE0(v16);

      id v14 = v17;
      goto LABEL_18;
    }
  }
  id v14 = (void *)v0[6];
  v0[6] = 0;
LABEL_18:
}

uint64_t sub_255B8DEC4(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_255C811B8();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_255A42E30(i, (uint64_t)v5);
    sub_255A43740(0, &qword_26B29BF10);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_255C81198();
    sub_255C811C8();
    sub_255C811D8();
    sub_255C811A8();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void sub_255B8DFE0(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)v2[8];
  if (v4)
  {
    if (a1)
    {
      sub_255A43740(0, &qword_26B29BF10);
      id v5 = a1;
      id v6 = v4;
      char v7 = sub_255C80DD8();

      if (v7) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  id v8 = (void *)v2[6];
  if (v8)
  {
    id v9 = (void *)v2[8];
    if (v9)
    {
      uint64_t v10 = (void *)v2[7];
      id v11 = v8;
      id v18 = v9;
      id v12 = objc_msgSend(v10, sel_rootLayer);
      if (v12)
      {
        id v13 = v12;
        id v14 = self;
        id v15 = v18;
        id v18 = v13;
        unsigned int v16 = objc_msgSend(v14, sel_areAnimationsEnabled);
        double v17 = 0.0;
        if (v16) {
          *(float *)&double v17 = 1.0;
        }
        objc_msgSend(v11, sel_setState_ofLayer_transitionSpeed_, v15, v18, v17);

        id v11 = v18;
      }
    }
  }
}

uint64_t sub_255B8E158()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewState()
{
  return self;
}

uint64_t sub_255B8E1D4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ViewState();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255B8E214()
{
  type metadata accessor for AnimatedViewState();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(void *)(v0 + 80) = 0;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_255B8E264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for _CAPackageView();
  uint64_t v3 = (int *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F255C8);
  MEMORY[0x270FA5388](v21);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *(void *)(v1 + 8);
  uint64_t v20 = *(void *)v1;
  sub_255B921A4(v1 + 24, (uint64_t)v24);
  swift_bridgeObjectRetain();
  sub_255AE128C((uint64_t)v24);
  type metadata accessor for AnimatedViewState();
  sub_255B92728(&qword_269F255D0, (void (*)(uint64_t))type metadata accessor for AnimatedViewState);
  sub_255C7DDC8();
  id v9 = (uint64_t *)&v5[v3[8]];
  *id v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = &v5[v3[9]];
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  id v11 = (uint64_t *)&v5[v3[10]];
  *id v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  swift_storeEnumTagMultiPayload();
  sub_255B921A4((uint64_t)v24, (uint64_t)v5);
  type metadata accessor for ViewState();
  sub_255B92728(&qword_26B29B270, (void (*)(uint64_t))type metadata accessor for ViewState);
  swift_retain();
  *((void *)v5 + 2) = sub_255C7E2B8();
  *((void *)v5 + 3) = v12;
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26B2AA660;
  sub_255B8D0A4(v20, v8);

  swift_bridgeObjectRelease();
  swift_release();
  id v14 = (_OWORD *)swift_allocObject();
  long long v15 = *(_OWORD *)(v1 + 16);
  v14[1] = *(_OWORD *)v1;
  v14[2] = v15;
  v14[3] = *(_OWORD *)(v1 + 32);
  *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)(v1 + 41);
  sub_255B92210((uint64_t)v5, (uint64_t)v7);
  unsigned int v16 = (void (**)())&v7[*(int *)(v21 + 36)];
  *unsigned int v16 = sub_255B928E4;
  v16[1] = (void (*)())v14;
  v16[2] = 0;
  v16[3] = 0;
  sub_255B92274(v1);
  sub_255B922D4((uint64_t)v5);
  char v23 = *(unsigned char *)(v1 + 16);
  double v17 = (_OWORD *)swift_allocObject();
  long long v18 = *(_OWORD *)(v1 + 16);
  v17[1] = *(_OWORD *)v1;
  void v17[2] = v18;
  v17[3] = *(_OWORD *)(v1 + 32);
  *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)(v1 + 41);
  sub_255B92274(v1);
  sub_255B9239C();
  sub_255C7FB48();
  swift_release();
  return sub_255A095A4((uint64_t)v7, &qword_269F255C8);
}

void sub_255B8E628(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 16);
  type metadata accessor for AnimatedViewState();
  sub_255B92728(&qword_269F255D0, (void (*)(uint64_t))type metadata accessor for AnimatedViewState);
  uint64_t v2 = sub_255C7DDC8();
  uint64_t v3 = v2;
  if (v1)
  {
    sub_255B8EAA8();
    swift_release();
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 72);
    id v5 = *(id *)(v3 + 72);
    *(void *)(v3 + 72) = 0;
    objc_msgSend(v4, sel_invalidate);
    swift_release();
  }
}

uint64_t sub_255B8E72C@<X0>(uint64_t a1@<X8>)
{
  return sub_255B8E264(a1);
}

void sub_255B8E770()
{
  char v1 = *(void **)(v0 + 64);
  if (!v1) {
    return;
  }
  uint64_t v2 = *(void **)(v0 + 56);
  id v31 = *(id *)(v0 + 64);
  if (!v2)
  {
    id v9 = v1;
LABEL_9:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_rootLayer);
  if (!v4) {
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_states);

  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = sub_255C807F8();

  unint64_t v8 = sub_255B8DEC4(v7);
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_9;
  }
LABEL_10:
  sub_255B8CC0C((uint64_t)v31, v8, &qword_26B29BF10);
  uint64_t v11 = v10;
  char v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = v31;
  if ((v13 & 1) == 0)
  {
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
    }
    else
    {
      unsigned int v16 = *(void **)(v0 + 56);
      if (!v16) {
        goto LABEL_16;
      }
      id v17 = objc_msgSend(v16, sel_rootLayer);
      if (!v17
        || (long long v18 = v17, v19 = objc_msgSend(v17, sel_states), v18, !v19)
        || (v20 = sub_255C807F8(), v19, unint64_t v8 = sub_255B8DEC4(v20), swift_bridgeObjectRelease(), !v8))
      {
LABEL_16:
        swift_bridgeObjectRelease();
        unint64_t v8 = MEMORY[0x263F8EE78];
      }
      if (!(v8 >> 62))
      {
        uint64_t v21 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_255C812B8();
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    if (v21)
    {
      if (v15 == 0x8000000000000000 && v21 == -1) {
        goto LABEL_41;
      }
      unint64_t v8 = v15 % v21;
      uint64_t v22 = *(void **)(v0 + 56);
      if (!v22) {
        goto LABEL_26;
      }
      id v23 = objc_msgSend(v22, sel_rootLayer);
      if (!v23
        || (unint64_t v24 = v23, v25 = objc_msgSend(v23, sel_states), v24, !v25)
        || (v26 = sub_255C807F8(), v25, uint64_t v21 = sub_255B8DEC4(v26), swift_bridgeObjectRelease(), !v21))
      {
LABEL_26:
        swift_bridgeObjectRelease();
        uint64_t v21 = MEMORY[0x263F8EE78];
      }
      if ((v21 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v8 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v27 = *(id *)(v21 + 8 * v8 + 32);
LABEL_31:
          uint64_t v28 = v27;
          swift_bridgeObjectRelease();
          uint64_t v29 = *(void **)(v0 + 64);
          *(void *)(v0 + 64) = v28;
          id v30 = v28;
          sub_255B8DFE0(v29);

          id v14 = v30;
          goto LABEL_32;
        }
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    id v27 = (id)MEMORY[0x25A2969C0](v8, v21);
    goto LABEL_31;
  }
LABEL_32:
}

void sub_255B8EAA8()
{
  char v1 = self;
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  v7[4] = sub_255B90A88;
  v7[5] = v2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_255A7BAD0;
  v7[3] = &block_descriptor_18;
  id v3 = _Block_copy(v7);
  swift_release();
  id v4 = objc_msgSend(v1, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v3, 0.5);
  _Block_release(v3);
  id v5 = *(void **)(v0 + 72);
  *(void *)(v0 + 72) = v4;
  id v6 = v4;
  objc_msgSend(v5, sel_invalidate);
}

uint64_t sub_255B8EBD0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_255B8E770();
    return swift_release();
  }
  return result;
}

void sub_255B8EC28()
{
}

uint64_t sub_255B8EC30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnimatedViewState()
{
  return self;
}

uint64_t sub_255B8ECB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v41 = sub_255C7DC38();
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v39 = (uint64_t)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for _CAPackageView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3 - 8;
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  id v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B5E8);
  uint64_t v7 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  id v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B710);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298638);
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v44 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CAPackageViewLayer();
  sub_255B92210(v1, (uint64_t)v6);
  uint64_t v12 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = (v12 + 16) & ~v12;
  uint64_t v14 = v12 | 7;
  v33[1] = v13 + v5;
  uint64_t v15 = swift_allocObject();
  sub_255B9244C((uint64_t)v6, v15 + v13);
  sub_255C7DFD8();
  unsigned int v16 = (uint64_t *)v1;
  sub_255B92210(v1, (uint64_t)v6);
  v33[2] = v14;
  uint64_t v17 = swift_allocObject();
  sub_255B9244C((uint64_t)v6, v17 + v13);
  uint64_t v18 = (uint64_t)v34;
  uint64_t v19 = v36;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v34, v9, v36);
  uint64_t v20 = v35;
  uint64_t v21 = (uint64_t (**)())(v18 + *(int *)(v35 + 36));
  *uint64_t v21 = sub_255B92524;
  v21[1] = (uint64_t (*)())v17;
  void v21[2] = 0;
  v21[3] = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  uint64_t v22 = v16[1];
  uint64_t v45 = *v16;
  uint64_t v46 = v22;
  sub_255B92210((uint64_t)v16, (uint64_t)v6);
  uint64_t v23 = swift_allocObject();
  sub_255B9244C((uint64_t)v6, v23 + v13);
  swift_bridgeObjectRetain();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F258);
  unint64_t v25 = sub_255B925C0();
  unint64_t v26 = sub_255B6DAC4();
  sub_255C7FB38();
  swift_release();
  swift_bridgeObjectRelease();
  sub_255A095A4(v18, &qword_26B29B710);
  uint64_t v27 = v39;
  sub_255ABCB00(v39);
  sub_255B92210((uint64_t)v16, (uint64_t)v6);
  uint64_t v28 = swift_allocObject();
  sub_255B9244C((uint64_t)v6, v28 + v13);
  uint64_t v45 = v20;
  uint64_t v46 = v24;
  unint64_t v47 = v25;
  unint64_t v48 = v26;
  swift_getOpaqueTypeConformance2();
  sub_255B92728(&qword_26B29B540, MEMORY[0x263F18460]);
  uint64_t v29 = v41;
  uint64_t v30 = v38;
  id v31 = v44;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v27, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v31, v30);
}

id sub_255B8F23C(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7DCC8();
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7E8B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for _CAPackageView();
  double v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a2 + 24);
  id result = objc_msgSend(*(id *)(v15 + 56), sel_rootLayer, v12);
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v55 = v6;
    uint64_t v56 = v8;
    unint64_t v18 = *(void *)(v15 + 40);
    if (v18)
    {
      uint64_t v52 = *(void *)(v15 + 32);
      uint64_t v19 = *(void **)(v15 + 48);
      swift_bridgeObjectRetain();
      if (v19) {
        id v20 = objc_msgSend(v19, sel_stateOfLayer_, v17);
      }
      else {
        id v20 = 0;
      }
      if (qword_26B298458 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_255C7D898();
      __swift_project_value_buffer(v21, (uint64_t)qword_26B2AA4A0);
      sub_255B92210(a2, (uint64_t)v14);
      id v53 = v20;
      id v22 = v20;
      swift_bridgeObjectRetain();
      id v23 = v22;
      uint64_t v24 = sub_255C7D878();
      int v54 = sub_255C80C08();
      if (os_log_type_enabled(v24, (os_log_type_t)v54))
      {
        os_log_t v49 = v24;
        id v51 = v23;
        uint64_t v25 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        uint64_t v58 = v48;
        *(_DWORD *)uint64_t v25 = 136446722;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_255A7BEC4(v52, v18, &v58);
        sub_255C80F18();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v25 + 12) = 2082;
        uint64_t v26 = *((void *)v14 + 3);
        unint64_t v27 = *(void *)(v26 + 24);
        uint64_t v50 = v7;
        if (v27)
        {
          uint64_t v28 = *(void *)(v26 + 16);
          unint64_t v29 = v27;
        }
        else
        {
          unint64_t v29 = 0xE300000000000000;
          uint64_t v28 = 7104878;
        }
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_255A7BEC4(v28, v29, &v58);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        sub_255B922D4((uint64_t)v14);
        *(_WORD *)(v25 + 22) = 2082;
        if (v53 && (id v30 = objc_msgSend(v51, sel_name)) != 0)
        {
          id v31 = v30;
          uint64_t v32 = sub_255C80628();
          unint64_t v34 = v33;
        }
        else
        {
          unint64_t v34 = 0xE300000000000000;
          uint64_t v32 = 7104878;
        }
        uint64_t v57 = sub_255A7BEC4(v32, v34, &v58);
        sub_255C80F18();
        id v35 = v51;

        swift_bridgeObjectRelease();
        os_log_t v36 = v49;
        _os_log_impl(&dword_255A00000, v49, (os_log_type_t)v54, "%{public}s: %{public}s CAPackageView _CALayerView update closure called with state %{public}s", (uint8_t *)v25, 0x20u);
        uint64_t v37 = v48;
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v37, -1, -1);
        MEMORY[0x25A297C00](v25, -1, -1);

        uint64_t v7 = v50;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        sub_255B922D4((uint64_t)v14);
      }
    }
    sub_255C7E8A8();
    sub_255ABC184((uint64_t)v55);
    sub_255C7E678();
    char v38 = *(unsigned char *)(a2 + *(int *)(v11 + 28) + 8);
    uint64_t v39 = swift_retain();
    sub_255AB9568(v39, v38);
    swift_release();
    sub_255C7FCC8();
    swift_release();
    uint64_t v40 = (void *)sub_255C7FCD8();
    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithCGColor_, v40);

    uint64_t v42 = *(void **)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_foregroundColor];
    *(void *)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_foregroundColor] = v41;
    id v43 = v41;

    sub_255B905B4();
    uint64_t v44 = OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer;
    uint64_t v45 = *(void **)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer];
    *(void *)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer] = v17;
    id v46 = v17;
    objc_msgSend(v45, sel_removeFromSuperlayer);
    if (*(void *)&a1[v44]) {
      objc_msgSend(a1, sel_addSublayer_);
    }
    sub_255B905B4();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v10, v7);
  }
  return result;
}

void sub_255B8F81C(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for _CAPackageView();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = a1[3];
  unint64_t v9 = *(void *)(v8 + 40);
  if (v9)
  {
    uint64_t v10 = *(void *)(v8 + 32);
    uint64_t v11 = qword_26B298458;
    swift_bridgeObjectRetain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_255C7D898();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B2AA4A0);
    sub_255B92210((uint64_t)a1, (uint64_t)v7);
    sub_255B92210((uint64_t)a1, (uint64_t)v4);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_255C7D878();
    os_log_type_t v14 = sub_255C80C08();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v16;
      *(_DWORD *)uint64_t v15 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_255A7BEC4(v10, v9, &v24);
      sub_255C80F18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v17 = *((void *)v7 + 3);
      if (*(void *)(v17 + 24))
      {
        uint64_t v18 = *(void *)(v17 + 16);
        unint64_t v19 = *(void *)(v17 + 24);
      }
      else
      {
        uint64_t v18 = 7104878;
        unint64_t v19 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_255A7BEC4(v18, v19, &v24);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255B922D4((uint64_t)v7);
      *(_WORD *)(v15 + 22) = 2082;
      if (v4[1])
      {
        uint64_t v20 = *v4;
        unint64_t v21 = v4[1];
      }
      else
      {
        uint64_t v20 = 7104878;
        unint64_t v21 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_255A7BEC4(v20, v21, &v24);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255B922D4((uint64_t)v4);
      _os_log_impl(&dword_255A00000, v13, v14, "%{public}s: %{public}s CAPackageView appeared, updating state to %{public}s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v16, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_255B922D4((uint64_t)v7);
      sub_255B922D4((uint64_t)v4);
    }
  }
  unint64_t v22 = a1[1];
  if (v22) {
    sub_255B8D630(*a1, v22);
  }
}

void sub_255B8FB4C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for _CAPackageView();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a3[3];
  unint64_t v10 = *(void *)(v9 + 40);
  if (!v10)
  {
LABEL_8:
    unint64_t v25 = a3[1];
    if (!v25) {
      return;
    }
    goto LABEL_9;
  }
  uint64_t v12 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v14 = *a2;
  unint64_t v13 = a2[1];
  uint64_t v15 = *(void *)(v9 + 32);
  uint64_t v16 = qword_26B298458;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_255C7D898();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B2AA4A0);
  sub_255B92210((uint64_t)a3, (uint64_t)v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_255C7D878();
  int v19 = sub_255C80C08();
  if (!os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    swift_bridgeObjectRelease_n();
    sub_255B922D4((uint64_t)v8);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  int v32 = v19;
  uint64_t v33 = v12;
  uint64_t v20 = swift_slowAlloc();
  uint64_t v31 = swift_slowAlloc();
  uint64_t v36 = v31;
  *(_DWORD *)uint64_t v20 = 136446978;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_255A7BEC4(v15, v10, &v36);
  sub_255C80F18();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v20 + 12) = 2082;
  uint64_t v21 = *((void *)v8 + 3);
  unint64_t v22 = *(void *)(v21 + 24);
  uint64_t v34 = v14;
  if (v22)
  {
    uint64_t v23 = *(void *)(v21 + 16);
    unint64_t v24 = v22;
  }
  else
  {
    unint64_t v24 = 0xE300000000000000;
    uint64_t v23 = 7104878;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_255A7BEC4(v23, v24, &v36);
  sub_255C80F18();
  swift_bridgeObjectRelease();
  sub_255B922D4((uint64_t)v8);
  *(_WORD *)(v20 + 22) = 2082;
  if (v11) {
    uint64_t v26 = v33;
  }
  else {
    uint64_t v26 = 7104878;
  }
  if (v11) {
    unint64_t v27 = v11;
  }
  else {
    unint64_t v27 = 0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_255A7BEC4(v26, v27, &v36);
  sub_255C80F18();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 32) = 2082;
  if (v13) {
    uint64_t v28 = v34;
  }
  else {
    uint64_t v28 = 7104878;
  }
  if (v13) {
    unint64_t v29 = v13;
  }
  else {
    unint64_t v29 = 0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_255A7BEC4(v28, v29, &v36);
  sub_255C80F18();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_255A00000, v18, (os_log_type_t)v32, "%{public}s: %{public}s CAPackageView selected state changed from %{public}s to %{public}s", (uint8_t *)v20, 0x2Au);
  uint64_t v30 = v31;
  swift_arrayDestroy();
  MEMORY[0x25A297C00](v30, -1, -1);
  MEMORY[0x25A297C00](v20, -1, -1);

  unint64_t v25 = a3[1];
  if (v25) {
LABEL_9:
  }
    sub_255B8D630(*a3, v25);
}

void sub_255B8FF14(uint64_t *a1)
{
  uint64_t v2 = sub_255C7DC38();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _CAPackageView();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = a1[3];
  unint64_t v15 = *(void *)(v14 + 40);
  if (v15)
  {
    uint64_t v36 = *(void *)(v14 + 32);
    uint64_t v16 = qword_26B298458;
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_255C7D898();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B2AA4A0);
    sub_255B92210((uint64_t)a1, (uint64_t)v13);
    sub_255B92210((uint64_t)a1, (uint64_t)v10);
    sub_255B92210((uint64_t)a1, (uint64_t)v7);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_255C7D878();
    int v19 = sub_255C80C08();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      int v34 = v19;
      uint64_t v35 = v2;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v38 = v32;
      *(_DWORD *)uint64_t v20 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_255A7BEC4(v36, v15, &v38);
      sub_255C80F18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2082;
      uint64_t v21 = *((void *)v13 + 3);
      unint64_t v22 = *(void *)(v21 + 24);
      uint64_t v33 = v18;
      if (v22)
      {
        uint64_t v23 = *(void *)(v21 + 16);
        unint64_t v24 = v22;
      }
      else
      {
        uint64_t v23 = 7104878;
        unint64_t v24 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_255A7BEC4(v23, v24, &v38);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255B922D4((uint64_t)v13);
      *(_WORD *)(v20 + 22) = 2082;
      sub_255ABCB00((uint64_t)v4);
      uint64_t v25 = sub_255C80658();
      uint64_t v37 = sub_255A7BEC4(v25, v26, &v38);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255B922D4((uint64_t)v10);
      *(_WORD *)(v20 + 32) = 2082;
      if (v7[1])
      {
        uint64_t v27 = *v7;
        unint64_t v28 = v7[1];
      }
      else
      {
        uint64_t v27 = 7104878;
        unint64_t v28 = 0xE300000000000000;
      }
      uint64_t v29 = v32;
      uint64_t v18 = v33;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_255A7BEC4(v27, v28, &v38);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      sub_255B922D4((uint64_t)v7);
      _os_log_impl(&dword_255A00000, v18, (os_log_type_t)v34, "%{public}s: %{public}s CAPackageView scene phase changed to %{public}s, updating state to %{public}s", (uint8_t *)v20, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v29, -1, -1);
      MEMORY[0x25A297C00](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_255B922D4((uint64_t)v13);
      sub_255B922D4((uint64_t)v10);
      sub_255B922D4((uint64_t)v7);
    }
  }
  unint64_t v30 = a1[1];
  if (v30) {
    sub_255B8D630(*a1, v30);
  }
}

void sub_255B90344()
{
  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for CAPackageViewLayer();
  objc_msgSendSuper2(&v33, sel_layoutSublayers);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer];
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v0, sel_bounds);
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    objc_msgSend(v2, sel_bounds);
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    v34.origin.CGFloat x = v4;
    v34.origin.CGFloat y = v6;
    v34.size.double width = v8;
    v34.size.double height = v10;
    double Width = CGRectGetWidth(v34);
    CGFloat v28 = v4;
    v35.origin.CGFloat x = v4;
    v35.origin.CGFloat y = v6;
    CGFloat v29 = v10;
    v35.size.double width = v8;
    v35.size.double height = v10;
    double v19 = Width / CGRectGetHeight(v35);
    v36.origin.CGFloat x = v12;
    v36.origin.CGFloat y = v14;
    v36.size.double width = v16;
    v36.size.double height = v18;
    double v20 = CGRectGetWidth(v36);
    v37.origin.CGFloat x = v12;
    v37.origin.CGFloat y = v14;
    v37.size.double width = v16;
    v37.size.double height = v18;
    if (v19 >= v20 / CGRectGetHeight(v37))
    {
      v40.origin.CGFloat x = v28;
      v40.origin.CGFloat y = v6;
      v40.size.double width = v8;
      v40.size.double height = v29;
      double Height = CGRectGetHeight(v40);
      v41.origin.CGFloat x = v12;
      v41.origin.CGFloat y = v14;
      v41.size.double width = v16;
      v41.size.double height = v18;
      double v22 = CGRectGetHeight(v41);
    }
    else
    {
      v38.origin.CGFloat x = v28;
      v38.origin.CGFloat y = v6;
      v38.size.double width = v8;
      v38.size.double height = v29;
      double Height = CGRectGetWidth(v38);
      v39.origin.CGFloat x = v12;
      v39.origin.CGFloat y = v14;
      v39.size.double width = v16;
      v39.size.double height = v18;
      double v22 = CGRectGetWidth(v39);
    }
    CGAffineTransformMakeScale((CGAffineTransform *)&v31, Height / v22, Height / v22);
    *(_OWORD *)&m.a = *(_OWORD *)&v31.m11;
    *(_OWORD *)&m.c = *(_OWORD *)&v31.m13;
    *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v31.m21;
    CATransform3DMakeAffineTransform(&v31, &m);
    objc_msgSend(v2, sel_setTransform_, &v31);
    objc_msgSend(v0, sel_bounds);
    CGFloat x = v42.origin.x;
    CGFloat y = v42.origin.y;
    CGFloat v25 = v42.size.width;
    CGFloat v26 = v42.size.height;
    double MidX = CGRectGetMidX(v42);
    v43.origin.CGFloat x = x;
    v43.origin.CGFloat y = y;
    v43.size.double width = v25;
    v43.size.double height = v26;
    objc_msgSend(v2, sel_setPosition_, MidX, CGRectGetMidY(v43));
  }
}

id sub_255B905B4()
{
  uint64_t v1 = self;
  objc_msgSend(v1, sel_begin);
  objc_msgSend(v1, sel_setDisableActions_, 1);
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_foregroundColor);
  if (v2)
  {
    sub_255C80628();
    id v3 = objc_allocWithZone(MEMORY[0x263F157C8]);
    id v4 = v2;
    double v5 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v3, sel_initWithType_, v5);

    double v7 = (void *)sub_255C80AC8();
    objc_msgSend(v6, sel_setValue_forKey_, v7, *MEMORY[0x263F15C08]);

    CGFloat v8 = (void *)sub_255C80AC8();
    objc_msgSend(v6, sel_setValue_forKey_, v8, *MEMORY[0x263F15BF8]);

    id v9 = objc_msgSend(v4, sel_CGColor);
    objc_msgSend(v6, sel_setValue_forKey_, v9, *MEMORY[0x263F15C20]);

    CGFloat v10 = *(void **)(v0
                   + OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer);
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_255C83400;
      *(void *)(v11 + 56) = sub_255A43740(0, &qword_26B29BF30);
      *(void *)(v11 + 32) = v6;
      id v12 = v10;
      id v13 = v6;
      CGFloat v14 = (void *)sub_255C807E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setFilters_, v14);
    }
  }
  else
  {
    double v15 = *(void **)(v0
                   + OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer);
    if (!v15) {
      goto LABEL_7;
    }
    id v6 = v15;
    id v4 = (id)sub_255C807E8();
    objc_msgSend(v6, sel_setFilters_, v4);
  }

LABEL_7:

  return objc_msgSend(v1, sel_commit);
}

id sub_255B909A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CAPackageViewLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CAPackageViewLayer()
{
  return self;
}

uint64_t sub_255B90A50()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255B90A88()
{
  return sub_255B8EBD0();
}

id sub_255B90A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v17[1] = *(id *)MEMORY[0x263EF8340];
  id v6 = (void *)sub_255C7D548();
  double v7 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    CGFloat v8 = (void *)sub_255C80448();
    swift_bridgeObjectRelease();
  }
  else
  {
    CGFloat v8 = 0;
  }
  v17[0] = 0;
  id v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_packageWithContentsOfURL_type_options_error_, v6, v7, v8, v17);

  id v10 = v17[0];
  if (v9)
  {
    uint64_t v11 = sub_255C7D5C8();
    id v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    id v13 = v10;
    v12(a1, v11);
  }
  else
  {
    id v14 = v17[0];
    sub_255C7D4D8();

    swift_willThrow();
    uint64_t v15 = sub_255C7D5C8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  }
  return v9;
}

uint64_t sub_255B90C58()
{
  uint64_t result = sub_255C7FCB8();
  qword_26B29AF30 = result;
  return result;
}

uint64_t sub_255B90C78@<X0>(void *a1@<X8>)
{
  if (qword_26B29AF40 != -1) {
    swift_once();
  }
  *a1 = qword_26B29AF30;

  return swift_retain();
}

uint64_t sub_255B90CE4()
{
  sub_255B91098();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255B90D20()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_26B2AA4A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA4A0);
  return sub_255C7D888();
}

uint64_t sub_255B90DA4()
{
  return sub_255C7E8D8();
}

uint64_t destroy for CAPackageView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_255B400E0();
}

uint64_t initializeWithCopy for CAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  char v7 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255B400C8();
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithCopy for CAPackageView(uint64_t a1, void *a2)
{
  objc_super v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_255B400C8();
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_255B400E0();
  return a1;
}

uint64_t assignWithTake for CAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v6;
  sub_255B400E0();
  return a1;
}

ValueMetadata *type metadata accessor for CAPackageView()
{
  return &type metadata for CAPackageView;
}

uint64_t sub_255B90FCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for _CAPackageView()
{
  uint64_t result = qword_26B298D08;
  if (!qword_26B298D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255B9103C@<X0>(void *a1@<X8>)
{
  sub_255B91098();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

unint64_t sub_255B91098()
{
  unint64_t result = qword_26B29AF48;
  if (!qword_26B29AF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29AF48);
  }
  return result;
}

ValueMetadata *type metadata accessor for CAPackageViewForegroundColorKey()
{
  return &type metadata for CAPackageViewForegroundColorKey;
}

uint64_t *sub_255B910FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    id v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    CGFloat v16 = (char *)a1 + v14;
    double v17 = (char *)a2 + v14;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = v17[8];
    *(void *)CGFloat v16 = v18;
    v16[8] = (char)v17;
    double v19 = (uint64_t *)((char *)a1 + v15);
    double v20 = (uint64_t *)((char *)a2 + v15);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *double v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B912E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7DC38();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255B9142C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  id v10 = (void *)((char *)a2 + v8);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7DCC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  double v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_255C7DC38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *double v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B915C0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_255A095A4((uint64_t)a1 + v14, &qword_26B29B588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_255B917B8(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7DCC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_255C7DC38();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

void *sub_255B91954(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_255A095A4((uint64_t)a1 + v8, &qword_26B29B598);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7DCC8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    sub_255A095A4((uint64_t)a1 + v17, &qword_26B29B588);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_255C7DC38();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B91B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B91B58);
}

uint64_t sub_255B91B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255B91C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B91CA0);
}

uint64_t sub_255B91CA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_255B91DD4()
{
  sub_255B91EF0(319, (unint64_t *)&qword_26B29B5A0, MEMORY[0x263F18520]);
  if (v0 <= 0x3F)
  {
    sub_255B91EF0(319, &qword_26B29B590, MEMORY[0x263F18460]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_255B91EF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_255C7DD38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for AnimatedCAPackageView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_255B400E0();
}

uint64_t initializeWithCopy for AnimatedCAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255B400C8();
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for AnimatedCAPackageView(uint64_t a1, void *a2)
{
  objc_super v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_255B400C8();
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_255B400E0();
  return a1;
}

uint64_t assignWithTake for AnimatedCAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v6;
  sub_255B400E0();
  return a1;
}

ValueMetadata *type metadata accessor for AnimatedCAPackageView()
{
  return &type metadata for AnimatedCAPackageView;
}

uint64_t sub_255B92124()
{
  return sub_255B92728(qword_26B298CC8, (void (*)(uint64_t))type metadata accessor for _CAPackageView);
}

uint64_t sub_255B9216C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B92188()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B921A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B92210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _CAPackageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B92274(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B922D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _CAPackageView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_66Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255B400E0();

  return swift_deallocObject();
}

void sub_255B92380()
{
  sub_255B8E628(v0 + 16);
}

unint64_t sub_255B9239C()
{
  unint64_t result = qword_269F255D8;
  if (!qword_269F255D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F255C8);
    sub_255B92728(qword_26B298CC8, (void (*)(uint64_t))type metadata accessor for _CAPackageView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F255D8);
  }
  return result;
}

uint64_t sub_255B9244C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _CAPackageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_255B924B0(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for _CAPackageView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255B8F23C(a1, v4);
}

uint64_t sub_255B92524()
{
  return sub_255B926B4((uint64_t (*)(uint64_t))sub_255B8F81C);
}

void sub_255B92540(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for _CAPackageView() - 8);
  char v6 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  sub_255B8FB4C(a1, a2, v6);
}

unint64_t sub_255B925C0()
{
  unint64_t result = qword_26B29B708;
  if (!qword_26B29B708)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B710);
    sub_255B9263C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B708);
  }
  return result;
}

unint64_t sub_255B9263C()
{
  unint64_t result = qword_26B29B5E0;
  if (!qword_26B29B5E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B5E0);
  }
  return result;
}

uint64_t sub_255B9269C()
{
  return sub_255B926B4((uint64_t (*)(uint64_t))sub_255B8FF14);
}

uint64_t sub_255B926B4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for _CAPackageView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_255B92728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B92770()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B927E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ToastView.init(action:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for ToastView();
  uint64_t v9 = a4 + v8[10];
  type metadata accessor for CGRect(0);
  sub_255C7FE58();
  *(_OWORD *)uint64_t v9 = v14;
  *(_OWORD *)(v9 + 16) = v15;
  *(void *)(v9 + 32) = v16;
  uint64_t v10 = a4 + v8[11];
  sub_255C7DE98();
  *(unsigned char *)uint64_t v10 = v14;
  *(void *)(v10 + 8) = *((void *)&v14 + 1);
  *(_OWORD *)(v10 + 16) = v15;
  uint64_t v11 = (uint64_t *)(a4 + v8[9]);
  *uint64_t v11 = a1;
  v11[1] = a2;
  uint64_t v12 = sub_255A0DE10(a1);
  a3(v12);
  return sub_255A0DE20(a1);
}

uint64_t type metadata accessor for ToastView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ToastView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v193 = a2;
  uint64_t v190 = sub_255C7E9F8();
  uint64_t v192 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388](v190);
  v191 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_255C7EC18();
  MEMORY[0x270FA5388](v185);
  v183 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_255C7DD28();
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  v182 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F255E0);
  MEMORY[0x270FA5388](v203);
  v184 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F255E8);
  uint64_t v189 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  v188 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = *(void *)(a1 - 8);
  uint64_t v181 = *(void *)(v208 + 64);
  MEMORY[0x270FA5388](v8);
  v180 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v169 = (uint64_t)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = a1;
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v204 = *(void *)(a1 + 16);
  uint64_t v13 = v204;
  uint64_t v14 = v12;
  uint64_t v206 = v12;
  uint64_t v194 = type metadata accessor for ToastView.Specs();
  uint64_t v205 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  uint64_t v135 = (uint64_t)&v134 - v15;
  uint64_t v16 = type metadata accessor for ToastViewLabelStyle(0);
  uint64_t v198 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v166 = (uint64_t)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v149 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_255C7E458();
  uint64_t v195 = v20;
  uint64_t v163 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v148 = (char *)&v134 - v21;
  uint64_t v229 = v14;
  uint64_t v230 = MEMORY[0x263F18BF0];
  uint64_t WitnessTable = swift_getWitnessTable();
  v197 = (void (*)(void, void, void))WitnessTable;
  v196 = (void (*)(void, void, void))sub_255B94CB4(&qword_269F255F0, (void (*)(uint64_t))type metadata accessor for ToastViewLabelStyle);
  uint64_t v225 = v20;
  uint64_t v226 = v16;
  v227 = (void (*)(void, void, void))WitnessTable;
  v228 = v196;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v159 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v147 = (char *)&v134 - v23;
  uint64_t v24 = sub_255C7E458();
  uint64_t v162 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v151 = (char *)&v134 - v25;
  uint64_t v138 = v24;
  uint64_t v26 = sub_255C7E458();
  uint64_t v165 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v155 = (char *)&v134 - v27;
  uint64_t v140 = v26;
  uint64_t v28 = sub_255C7E458();
  uint64_t v168 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v156 = (char *)&v134 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F221D8);
  uint64_t v142 = v28;
  uint64_t v30 = sub_255C7E458();
  uint64_t v167 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v157 = (char *)&v134 - v31;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29F240);
  uint64_t v144 = v30;
  uint64_t v32 = sub_255C7E458();
  uint64_t v170 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v158 = (char *)&v134 - v33;
  uint64_t v146 = v32;
  uint64_t v34 = sub_255C7E458();
  uint64_t v172 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v164 = (char *)&v134 - v35;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F255F8);
  uint64_t v153 = v34;
  uint64_t v36 = sub_255C7E458();
  uint64_t v179 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  v202 = (char *)&v134 - v37;
  uint64_t v225 = v195;
  uint64_t v226 = v198;
  v227 = v197;
  v228 = v196;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v223 = OpaqueTypeConformance2;
  uint64_t v224 = MEMORY[0x263F19100];
  uint64_t v137 = swift_getWitnessTable();
  uint64_t v38 = MEMORY[0x263F18C10];
  uint64_t v221 = v137;
  uint64_t v222 = MEMORY[0x263F18C10];
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v219 = v139;
  uint64_t v220 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v141 = v39;
  uint64_t v40 = sub_255A09998(&qword_269F221D0, &qword_269F221D8);
  uint64_t v217 = v39;
  uint64_t v218 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v143 = v41;
  uint64_t v42 = sub_255A09998(&qword_26B29F238, (uint64_t *)&unk_26B29F240);
  uint64_t v215 = v41;
  uint64_t v216 = v42;
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v213 = v145;
  uint64_t v214 = MEMORY[0x263F189B8];
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v150 = v43;
  uint64_t v44 = sub_255A09998(&qword_269F25600, &qword_269F255F8);
  uint64_t v211 = v43;
  uint64_t v212 = v44;
  uint64_t v171 = v36;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v200 = v45;
  uint64_t v160 = sub_255A09998(&qword_269F25608, &qword_269F255E8);
  uint64_t v225 = v36;
  uint64_t v226 = v201;
  v227 = (void (*)(void, void, void))v45;
  v228 = (void (*)(void, void, void))v160;
  uint64_t v46 = swift_getOpaqueTypeMetadata2();
  uint64_t v175 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v161 = (char *)&v134 - v47;
  sub_255C7F0D8();
  uint64_t v176 = v46;
  uint64_t v178 = sub_255C7E458();
  uint64_t v177 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v173 = (char *)&v134 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v50 = MEMORY[0x270FA5388](v49);
  uint64_t v174 = (char *)&v134 - v51;
  uint64_t v52 = v152;
  id v53 = v149;
  uint64_t v54 = v204;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v152 + 16))(v149, v207, v204, v50);
  sub_255B944C4();
  uint64_t v55 = v148;
  sub_255C7FAB8();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  uint64_t v56 = v135;
  sub_255B94524(v135);
  uint64_t v57 = v194;
  uint64_t v58 = v169;
  sub_255B94860(v56 + *(int *)(v194 + 40), v169);
  uint64_t v59 = v205 + 8;
  uint64_t v152 = *(void *)(v205 + 8);
  ((void (*)(uint64_t, uint64_t))v152)(v56, v57);
  uint64_t v60 = v58;
  uint64_t v61 = v166;
  sub_255B948C4(v60, v166);
  uint64_t v62 = v147;
  uint64_t v63 = v195;
  sub_255C7F5C8();
  sub_255B94928(v61);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v55, v63);
  uint64_t v64 = v56;
  uint64_t v65 = v56;
  uint64_t v66 = v199;
  sub_255B94524(v65);
  uint64_t v67 = v57;
  uint64_t v68 = (void (*)(uint64_t, uint64_t))v152;
  ((void (*)(uint64_t, uint64_t))v152)(v64, v67);
  uint64_t v205 = v59;
  sub_255C801F8();
  uint64_t v69 = OpaqueTypeMetadata2;
  uint64_t v70 = v151;
  sub_255C7FA48();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v62, v69);
  sub_255C7F1C8();
  sub_255B94524(v64);
  uint64_t v71 = v194;
  v68(v64, v194);
  uint64_t v72 = v155;
  uint64_t v73 = v138;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v162 + 8))(v70, v73);
  sub_255C7F1E8();
  uint64_t v74 = v66;
  sub_255B94524(v64);
  v68(v64, v71);
  uint64_t v75 = v156;
  uint64_t v76 = v140;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v72, v76);
  sub_255B94524(v64);
  uint64_t v77 = *(void *)(v64 + *(int *)(v71 + 44));
  swift_retain();
  uint64_t v78 = v71;
  v68(v64, v71);
  uint64_t v225 = v77;
  sub_255C7F198();
  uint64_t v79 = v157;
  uint64_t v80 = v142;
  sub_255C7F598();
  swift_release();
  (*(void (**)(char *, uint64_t))(v168 + 8))(v75, v80);
  uint64_t v81 = v207;
  sub_255B94524(v64);
  v68(v64, v78);
  uint64_t v82 = v158;
  uint64_t v83 = v144;
  sub_255C7F728();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v79, v83);
  sub_255C7FC68();
  sub_255C7FCA8();
  swift_release();
  uint64_t v84 = v164;
  uint64_t v85 = v146;
  sub_255C7FA88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v82, v85);
  type metadata accessor for CGRect(0);
  uint64_t v87 = v86;
  uint64_t v88 = v208;
  v196 = *(void (**)(void, void, void))(v208 + 16);
  uint64_t v205 = v208 + 16;
  uint64_t v89 = v180;
  uint64_t v90 = v74;
  v196(v180, v81, v74);
  uint64_t v91 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v92 = v88;
  uint64_t v93 = (v91 + 32) & ~v91;
  uint64_t v195 = v93;
  uint64_t v198 = v91 | 7;
  uint64_t v194 = v93 + v181;
  uint64_t v94 = swift_allocObject();
  uint64_t v95 = v206;
  *(void *)(v94 + 16) = v204;
  *(void *)(v94 + 24) = v95;
  uint64_t v96 = *(void (**)(void, void, void))(v92 + 32);
  uint64_t v208 = v92 + 32;
  v197 = v96;
  v96(v94 + v93, v89, v90);
  sub_255B94CB4(&qword_26B29BF00, type metadata accessor for CGRect);
  uint64_t v97 = v153;
  sub_255B94BDC(v87, (uint64_t)sub_255B94984, 0, (uint64_t)sub_255B94AF0, v94, v153, v87, v150);
  swift_release();
  (*(void (**)(char *, uint64_t))(v172 + 8))(v84, v97);
  sub_255C7ED78();
  uint64_t v98 = v182;
  sub_255C7DCF8();
  LODWORD(v172) = sub_255B94CFC();
  uint64_t v185 = v99;
  v183 = v100;
  uint64_t v181 = v101;
  uint64_t v102 = v89;
  uint64_t v103 = (void (*)(char *, uint64_t, uint64_t))v196;
  v196(v89, v81, v90);
  uint64_t v104 = swift_allocObject();
  uint64_t v105 = v204;
  *(void *)(v104 + 16) = v204;
  *(void *)(v104 + 24) = v95;
  uint64_t v106 = v195;
  v197(v104 + v195, v89, v90);
  uint64_t v107 = v186;
  uint64_t v108 = (uint64_t)v184;
  uint64_t v109 = v98;
  uint64_t v110 = v98;
  uint64_t v111 = v187;
  (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v184, v109, v187);
  uint64_t v112 = v203;
  uint64_t v113 = v108 + *(int *)(v203 + 44);
  *(unsigned char *)uint64_t v113 = v172 & 1;
  uint64_t v114 = v183;
  *(void *)(v113 + 8) = v185;
  *(void *)(v113 + 16) = v114;
  *(void *)(v113 + 24) = v181;
  uint64_t v115 = (void *)(v108 + *(int *)(v112 + 48));
  void *v115 = sub_255B94E00;
  v115[1] = v104;
  uint64_t v116 = v160;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v110, v111);
  v103(v102, v207, v90);
  uint64_t v117 = v201;
  uint64_t v118 = swift_allocObject();
  uint64_t v119 = v206;
  *(void *)(v118 + 16) = v105;
  *(void *)(v118 + 24) = v119;
  v197(v118 + v106, v102, v90);
  uint64_t v120 = v161;
  sub_255A09998(&qword_269F25610, &qword_269F255E0);
  uint64_t v121 = v188;
  sub_255C80098();
  swift_release();
  sub_255A095A4(v108, &qword_269F255E0);
  sub_255C7DD68();
  uint64_t v122 = v171;
  uint64_t v123 = v202;
  sub_255C7F8E8();
  (*(void (**)(char *, uint64_t))(v189 + 8))(v121, v117);
  (*(void (**)(char *, uint64_t))(v179 + 8))(v123, v122);
  if (*(void *)(v207 + *(int *)(v90 + 36)))
  {
    uint64_t v124 = v191;
    sub_255C7E9D8();
    uint64_t v125 = v190;
  }
  else
  {
    uint64_t v225 = MEMORY[0x263F8EE78];
    sub_255B94CB4(&qword_26B29EDB0, MEMORY[0x263F19938]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF40);
    sub_255A09998((unint64_t *)&unk_26B29EF48, &qword_26B29EF40);
    uint64_t v124 = v191;
    uint64_t v125 = v190;
    sub_255C80F78();
  }
  uint64_t v225 = v122;
  uint64_t v226 = v117;
  v227 = (void (*)(void, void, void))v200;
  v228 = (void (*)(void, void, void))v116;
  uint64_t v126 = swift_getOpaqueTypeConformance2();
  uint64_t v127 = v173;
  uint64_t v128 = v176;
  sub_255C7F958();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v124, v125);
  (*(void (**)(char *, uint64_t))(v175 + 8))(v120, v128);
  uint64_t v129 = sub_255B94CB4((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v209 = v126;
  uint64_t v210 = v129;
  uint64_t v130 = v178;
  swift_getWitnessTable();
  uint64_t v131 = v174;
  sub_255A20F54(v127);
  id v132 = *(void (**)(char *, uint64_t))(v177 + 8);
  v132(v127, v130);
  sub_255A20F54(v131);
  return ((uint64_t (*)(char *, uint64_t))v132)(v131, v130);
}

uint64_t type metadata accessor for ToastViewLabelStyle.Specs(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F257C8);
}

uint64_t type metadata accessor for ToastView.Specs()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ToastViewLabelStyle(uint64_t a1)
{
  return sub_255A151B4(a1, qword_269F25738);
}

uint64_t sub_255B944C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25870);
  sub_255C7DEA8();
  return v1;
}

uint64_t sub_255B94524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = objc_msgSend(self, sel_currentDevice);
  id v6 = objc_msgSend(v5, sel_userInterfaceIdiom);

  if ((unint64_t)v6 >= 2)
  {
    if (v6 == (id)6)
    {
      sub_255C7F248();
      sub_255C7F278();
      uint64_t v8 = sub_255C7F2C8();
      swift_release();
      uint64_t v9 = sub_255C7F318();
      *uint64_t v4 = v8;
      v4[1] = v9;
      uint64_t v20 = 0x402C000000000000;
      sub_255ABFBC8();
      sub_255C7DED8();
      *(uint64_t *)((char *)v4 + *(int *)(v2 + 28)) = 0x4020000000000000;
      uint64_t v20 = sub_255C7FC78();
      uint64_t v10 = sub_255C7DFF8();
      *(_OWORD *)a1 = xmmword_255C920F0;
      *(void *)(a1 + 16) = 0x4038000000000000;
      uint64_t v11 = (int *)type metadata accessor for ToastView.Specs();
      uint64_t result = sub_255B948C4((uint64_t)v4, a1 + v11[10]);
      *(void *)(a1 + v11[11]) = v10;
      *(void *)(a1 + v11[12]) = 0x403E000000000000;
    }
    else
    {
      if (qword_269F1FE50 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_255C7D898();
      __swift_project_value_buffer(v12, (uint64_t)qword_269F32FB0);
      uint64_t v13 = sub_255C7D878();
      os_log_type_t v14 = sub_255C80BE8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v19 = (uint64_t)v6;
        uint64_t v20 = v16;
        *(_DWORD *)uint64_t v15 = 136315138;
        type metadata accessor for UIUserInterfaceIdiom(0);
        uint64_t v17 = sub_255C80658();
        uint64_t v19 = sub_255A7BEC4(v17, v18, &v20);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255A00000, v13, v14, "Unsupported userInterfaceIdiom=%s. Defaulting to iOS specs", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v16, -1, -1);
        MEMORY[0x25A297C00](v15, -1, -1);
      }

      return sub_255B99B98(a1);
    }
  }
  else
  {
    return sub_255B99B98(a1);
  }
  return result;
}

uint64_t sub_255B94860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B948C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B94928(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToastViewLabelStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255B94984@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_255C7EC18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED78();
  sub_255C7E0E8();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v13;
  return result;
}

uint64_t sub_255B94A90()
{
  return sub_255B94B7C();
}

uint64_t sub_255B94AF0()
{
  type metadata accessor for ToastView();

  return sub_255B94A90();
}

uint64_t sub_255B94B7C()
{
  return sub_255C7FE78();
}

uint64_t sub_255B94BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v15[0] = sub_255C7EE28();
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  uint64_t v13 = sub_255C7EE38();
  swift_retain();
  swift_retain();
  MEMORY[0x25A295390](v15, a6, v13, a8);
  swift_release();
  return swift_release();
}

uint64_t sub_255B94CB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B94CFC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25870);
  sub_255C7DEB8();
  return v1;
}

uint64_t sub_255B94D64(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ToastView();
  if (*(void *)(a4 + *(int *)(result + 36)))
  {
    double v7 = sub_255B94EA4();
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    sub_255C7DD18();
    v16.CGFloat x = v14;
    v16.CGFloat y = v15;
    v17.origin.CGFloat x = v7;
    v17.origin.CGFloat y = v9;
    v17.size.double width = v11;
    v17.size.double height = v13;
    uint64_t result = CGRectContainsPoint(v17, v16);
    *a2 = result;
  }
  return result;
}

uint64_t sub_255B94E00(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for ToastView() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_255B94D64(a1, a2, a3, v8);
}

double sub_255B94EA4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25868);
  sub_255C7FE68();
  return v1;
}

uint64_t sub_255B94F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ToastView();
  double v4 = sub_255B94EA4();
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  sub_255C7DD18();
  v15.CGFloat x = v11;
  v15.CGFloat y = v12;
  v16.origin.CGFloat x = v4;
  v16.origin.CGFloat y = v6;
  v16.size.double width = v8;
  v16.size.double height = v10;
  uint64_t result = CGRectContainsPoint(v16, v15);
  if (result)
  {
    CGFloat v14 = (uint64_t (**)(void))(a2 + *(int *)(v3 + 36));
    if (*v14) {
      return (*v14)();
    }
  }
  return result;
}

uint64_t sub_255B94FB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ToastView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255B94F00(a1, v4);
}

__n128 ToastView.init<>(_:headnote:systemImage:action:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_255A0DE10(a12);
  type metadata accessor for CGRect(0);
  sub_255C7FE58();
  sub_255C7DE98();
  if (a12)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a12;
    *(void *)(v17 + 24) = a13;
    unint64_t v18 = sub_255A430D4;
  }
  else
  {
    unint64_t v18 = 0;
  }
  sub_255A0DE10(a12);
  sub_255A0DE10(a12);
  sub_255A0DE20((uint64_t)v18);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_255C7FD98();
  sub_255B952A4(a5, a6, a7, a8);
  sub_255A093E4(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  sub_255A0DE20(a12);
  sub_255A0DE20(a12);
  sub_255B952E8(a5, a6, a7, a8);
  sub_255A094C0(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3 & 1;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a12 != 0;
  *(void *)(a9 + 72) = v20;
  *(void *)(a9 + 80) = a12;
  *(void *)(a9 + 88) = a13;
  *(void *)(a9 + 96) = v26;
  *(void *)(a9 + 104) = v27;
  *(__n128 *)(a9 + 112) = v28;
  *(void *)(a9 + 128) = v29;
  *(unsigned char *)(a9 + 136) = v26;
  *(void *)(a9 + 144) = v27;
  __n128 result = v28;
  *(__n128 *)(a9 + 152) = v28;
  return result;
}

uint64_t sub_255B952A4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_255A093E4(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_255B952E8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_255A094C0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ToastView.init<A>(_:headnote:action:icon:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  char v15 = a3 & 1;
  sub_255A0DE10(a9);
  type metadata accessor for ToastViewLabelContent();
  swift_getWitnessTable();
  ToastView.init(action:content:)(a9, a10, (void (*)(uint64_t))sub_255B95750, a8);
  sub_255A0DE20(a9);
  sub_255B952E8(a4, a5, a6, a7);
  sub_255A094C0(a1, a2, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255B95460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t a14)
{
  uint64_t v44 = a8;
  uint64_t v45 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a7;
  uint64_t v46 = a9;
  uint64_t v47 = a6;
  uint64_t v43 = a2;
  uint64_t v35 = a12;
  uint64_t v36 = a13;
  uint64_t v37 = *(void *)(a14 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v18;
  uint64_t v19 = type metadata accessor for ToastViewLabelContent();
  uint64_t v40 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v38 = (char *)&v35 - v23;
  if (a10)
  {
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a10;
    *(void *)(v24 + 24) = a11;
    uint64_t v25 = sub_255B9A05C;
  }
  else
  {
    uint64_t v25 = 0;
  }
  sub_255A0DE10(a10);
  uint64_t v26 = sub_255A0DE20((uint64_t)v25);
  v35(v26);
  uint64_t v28 = v43;
  uint64_t v27 = v44;
  *(void *)uint64_t v21 = a1;
  *((void *)v21 + 1) = v28;
  char v29 = a3 & 1;
  v21[16] = a3 & 1;
  uint64_t v30 = v41;
  *((void *)v21 + 3) = v45;
  *((void *)v21 + 4) = v30;
  uint64_t v36 = a1;
  uint64_t v31 = v42;
  *((void *)v21 + 5) = v47;
  *((void *)v21 + 6) = v31;
  *((void *)v21 + 7) = v27;
  v21[64] = a10 != 0;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v21[*(int *)(v19 + 44)], v17, v39);
  swift_getWitnessTable();
  uint64_t v32 = v38;
  sub_255A20F54(v21);
  sub_255B952A4(v30, v47, v31, v27);
  sub_255A093E4(v36, v28, v29);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v40 + 8);
  swift_bridgeObjectRetain();
  v33(v21, v19);
  sub_255A20F54(v32);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, v19);
}

uint64_t sub_255B95750@<X0>(uint64_t a1@<X8>)
{
  return sub_255B95460(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), a1, *(void *)(v1 + 96), *(void *)(v1 + 104), *(void (**)(uint64_t))(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 16));
}

uint64_t type metadata accessor for ToastViewLabelContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ToastViewLabelContent.body.getter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25618);
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = sub_255B95988();
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  unint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = sub_255C7FDE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  CGFloat v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  CGFloat v13 = &v16[-v12];
  uint64_t v20 = v4;
  uint64_t v21 = v6;
  uint64_t v22 = v1;
  uint64_t v17 = v4;
  uint64_t v18 = v6;
  uint64_t v19 = v1;
  sub_255C7FDD8();
  swift_getWitnessTable();
  sub_255A20F54(v10);
  CGFloat v14 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  sub_255A20F54(v13);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v13, v7);
}

unint64_t sub_255B95988()
{
  unint64_t result = qword_269F25620;
  if (!qword_269F25620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25618);
    sub_255A09998(&qword_269F25628, qword_269F25630);
    sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25620);
  }
  return result;
}

uint64_t sub_255B95A4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25630);
  MEMORY[0x270FA5388](v8 - 8);
  CGFloat v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25618);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  CGFloat v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)CGFloat v10 = sub_255C7EA68();
  *((void *)v10 + 1) = 0xBFF0000000000000;
  v10[16] = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25810);
  sub_255B95BD4(a1, a2, a3, (uint64_t *)&v10[*(int *)(v15 + 44)]);
  if (a1[7]) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = 2;
  }
  uint64_t KeyPath = swift_getKeyPath();
  sub_255A09540((uint64_t)v10, (uint64_t)v14, qword_269F25630);
  uint64_t v18 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v18 = KeyPath;
  *((void *)v18 + 1) = v16;
  v18[16] = 0;
  sub_255A095A4((uint64_t)v10, qword_269F25630);
  return sub_255A10514((uint64_t)v14, a4, &qword_269F25618);
}

uint64_t sub_255B95BC8@<X0>(uint64_t a1@<X8>)
{
  return sub_255B95A4C(*(void **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_255B95BD4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25818);
  MEMORY[0x270FA5388](v8 - 8);
  CGFloat v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = a1[4];
  uint64_t v15 = a1[5];
  uint64_t v17 = a1[6];
  uint64_t v16 = a1[7];
  if (v16)
  {
    uint64_t v18 = a1[4];
    uint64_t v19 = a1[5];
    uint64_t v20 = a1[6] & 1;
    uint64_t v44 = v20;
    sub_255A093E4(v18, v19, v20);
    swift_bridgeObjectRetain();
    sub_255C7F308();
    uint64_t v43 = v16;
    char v51 = v20;
    uint64_t v21 = sub_255C7F4A8();
    uint64_t v46 = a3;
    uint64_t v47 = v13;
    uint64_t v23 = v22;
    char v25 = v24;
    uint64_t v48 = a4;
    swift_release();
    sub_255C7F288();
    uint64_t v40 = sub_255C7F408();
    uint64_t v45 = a2;
    uint64_t v27 = v26;
    uint64_t v49 = v10;
    char v29 = v28 & 1;
    uint64_t v30 = v23;
    uint64_t v13 = v47;
    sub_255A094C0(v21, v30, v25 & 1);
    swift_bridgeObjectRelease();
    int v50 = sub_255C7ECE8();
    uint64_t v31 = v40;
    uint64_t v32 = sub_255C7F468();
    uint64_t v41 = v33;
    uint64_t v42 = v32;
    uint64_t v16 = v34;
    uint64_t v17 = v35 & 1;
    char v36 = v29;
    CGFloat v10 = v49;
    sub_255A094C0(v31, v27, v36);
    swift_bridgeObjectRelease();
    sub_255A094C0(v14, v15, v44);
    swift_bridgeObjectRelease();
    uint64_t v15 = v41;
    uint64_t v14 = v42;
    a4 = v48;
  }
  type metadata accessor for ToastViewLabelContent();
  sub_255B95E78((uint64_t)v13);
  sub_255A09540((uint64_t)v13, (uint64_t)v10, &qword_269F25818);
  *a4 = v14;
  a4[1] = v15;
  a4[2] = v17;
  a4[3] = v16;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25820);
  sub_255A09540((uint64_t)v10, (uint64_t)a4 + *(int *)(v37 + 48), &qword_269F25818);
  sub_255B952A4(v14, v15, v17, v16);
  sub_255A095A4((uint64_t)v13, &qword_269F25818);
  sub_255A095A4((uint64_t)v10, &qword_269F25818);
  return sub_255B952E8(v14, v15, v17, v16);
}

uint64_t sub_255B95E78@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_255C7E928();
  *(void *)(a1 + 8) = 0x4010000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25828);
  return sub_255B96060(v1, (void *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_255B95ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ToastViewLabelContent();
  sub_255A20F54(a1 + *(int *)(v7 + 44));
  sub_255A20F54(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a2);
}

uint64_t sub_255B95FCC()
{
  return sub_255B95ED4(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_255B95FD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B9601C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B96060@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D118);
  MEMORY[0x270FA5388](v35);
  uint64_t v4 = (uint64_t *)&v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_255C7FDA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25830);
  MEMORY[0x270FA5388](v36);
  CGFloat v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25838);
  uint64_t v38 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v34 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25840);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v37 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v31[-v16];
  uint64_t v19 = *(void *)(a1 + 8);
  char v20 = *(unsigned char *)(a1 + 16);
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v40 = *(void *)a1;
  uint64_t v41 = v21;
  if (*(unsigned char *)(a1 + 64) == 1)
  {
    sub_255A093E4(v40, v19, v20);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_255C7FD78();
    int v32 = sub_255C7ECE8();
    (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B538], v5);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = v11;
    uint64_t v24 = KeyPath;
    (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v35 + 28), v8, v5);
    *uint64_t v4 = v24;
    sub_255A09540((uint64_t)v4, (uint64_t)&v10[*(int *)(v36 + 36)], &qword_26B29D118);
    *(void *)CGFloat v10 = v22;
    *((_DWORD *)v10 + 2) = v32;
    swift_retain();
    sub_255A095A4((uint64_t)v4, &qword_26B29D118);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    sub_255B99E3C();
    uint64_t v25 = (uint64_t)v34;
    sub_255C7F8D8();
    sub_255A095A4((uint64_t)v10, &qword_269F25830);
    sub_255A10514(v25, (uint64_t)v18, &qword_269F25838);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v38 + 56))(v18, 0, 1, v33);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, double))(v38 + 56))(&v31[-v16], 1, 1, v11, v17);
    sub_255A093E4(v40, v19, v20);
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = v37;
  sub_255A09540((uint64_t)v18, (uint64_t)v37, &qword_269F25840);
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  *uint64_t v39 = v40;
  v27[1] = v19;
  *((unsigned char *)v27 + 16) = v20;
  void v27[3] = v41;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25848);
  sub_255A09540((uint64_t)v26, (uint64_t)v27 + *(int *)(v29 + 48), &qword_269F25840);
  sub_255A093E4(v28, v19, v20);
  swift_bridgeObjectRetain();
  sub_255A095A4((uint64_t)v18, &qword_269F25840);
  sub_255A095A4((uint64_t)v26, &qword_269F25840);
  sub_255A094C0(v28, v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255B96524()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255B965D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v11 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 8);
      *(void *)unint64_t v10 = *(void *)v11;
      *(void *)(v10 + 8) = v12;
      swift_retain();
    }
    unint64_t v13 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
    long long v15 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v15;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
    unint64_t v16 = (v13 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v16 = *(unsigned char *)v17;
    *(void *)(v16 + 8) = *(void *)(v17 + 8);
    uint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(void *)(v16 + 24) = v18;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_255B96750(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  if (*(void *)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_255B967F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v8 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v9 = *(void *)(v8 + 8);
    *(void *)unint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = v9;
    swift_retain();
  }
  unint64_t v10 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  unint64_t v13 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v13 = *(unsigned char *)v14;
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255B968F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (unint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = *v8;
  if (*v7 < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      unint64_t v11 = v8[1];
      *unint64_t v7 = v9;
      v7[1] = v11;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    goto LABEL_8;
  }
  if (v9 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v10 = v8[1];
  *unint64_t v7 = v9;
  v7[1] = v10;
  swift_retain();
  swift_release();
LABEL_8:
  long long v12 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  v12[4] = v13[4];
  swift_retain();
  swift_release();
  unint64_t v14 = ((unint64_t)v12 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = ((unint64_t)v13 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(v15 + 24);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255B96A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v8 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v9 = *(void *)(v8 + 8);
    *(void *)unint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = v9;
  }
  unint64_t v10 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v12 = *(_OWORD *)v11;
  long long v13 = *(_OWORD *)(v11 + 16);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(_OWORD *)unint64_t v10 = v12;
  *(_OWORD *)(v10 + 16) = v13;
  unint64_t v14 = (_OWORD *)((v10 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (_OWORD *)((v11 + 47) & 0xFFFFFFFFFFFFFFF8);
  long long v16 = v15[1];
  *unint64_t v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_255B96B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (unint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = *v8;
  if (*v7 < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      unint64_t v11 = v8[1];
      *unint64_t v7 = v9;
      v7[1] = v11;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    goto LABEL_8;
  }
  if (v9 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v10 = v8[1];
  *unint64_t v7 = v9;
  v7[1] = v10;
  swift_release();
LABEL_8:
  long long v12 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v13 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  v12[4] = v13[4];
  swift_release();
  unint64_t v14 = ((unint64_t)v12 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = ((unint64_t)v13 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_release();
  *(_OWORD *)(v14 + 16) = *(_OWORD *)(v15 + 16);
  swift_release();
  return a1;
}

uint64_t sub_255B96C74(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 32;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B96DE0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                  + 16);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_255B96DF4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                              + 47) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                v19[2] = 0;
                v19[3] = 0;
                *uint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[2] = a2 - 1;
              }
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFE0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) != 0xFFFFFFE0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 32);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x255B97004);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_255B9702C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_255B970DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 65) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 8);
    char v13 = *(unsigned char *)(a2 + 16);
    sub_255A093E4(*(void *)a2, v12, v13);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    unint64_t v14 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v16 < 0xFFFFFFFF)
    {
      long long v20 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v20;
    }
    else
    {
      uint64_t v17 = *(void *)v15;
      uint64_t v18 = *(void *)(v15 + 8);
      char v19 = *(unsigned char *)(v15 + 16);
      sub_255A093E4(*(void *)v15, v18, v19);
      *(void *)unint64_t v14 = v17;
      *(void *)(v14 + 8) = v18;
      *(unsigned char *)(v14 + 16) = v19;
      *(void *)(v14 + 24) = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(v14 + 32) = *(unsigned char *)(v15 + 32);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((v14 + v7 + 33) & ~v7, (v15 + v7 + 33) & ~v7, v5);
  }
  return a1;
}

uint64_t sub_255B97274(uint64_t a1, uint64_t a2)
{
  sub_255A094C0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  unint64_t v4 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v4 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_255A094C0(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_255B97324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_255A093E4(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unint64_t v9 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = *(void *)(v10 + 24);
  swift_bridgeObjectRetain();
  if (v11 < 0xFFFFFFFF)
  {
    long long v15 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v15;
  }
  else
  {
    uint64_t v12 = *(void *)v10;
    uint64_t v13 = *(void *)(v10 + 8);
    char v14 = *(unsigned char *)(v10 + 16);
    sub_255A093E4(*(void *)v10, v13, v14);
    *(void *)unint64_t v9 = v12;
    *(void *)(v9 + 8) = v13;
    *(unsigned char *)(v9 + 16) = v14;
    *(void *)(v9 + 24) = *(void *)(v10 + 24);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 16))((v9 + *(unsigned __int8 *)(v16 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v10 + *(unsigned __int8 *)(v16 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_255B9743C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_255A093E4(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_255A094C0(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v12 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = *(void *)(v13 + 24);
  if (*(void *)(v12 + 24) < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      uint64_t v21 = *(void *)v13;
      uint64_t v22 = *(void *)(v13 + 8);
      char v23 = *(unsigned char *)(v13 + 16);
      sub_255A093E4(*(void *)v13, v22, v23);
      *(void *)unint64_t v12 = v21;
      *(void *)(v12 + 8) = v22;
      *(unsigned char *)(v12 + 16) = v23;
      *(void *)(v12 + 24) = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    long long v24 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v24;
    goto LABEL_8;
  }
  if (v14 < 0xFFFFFFFF)
  {
    sub_255A094C0(*(void *)v12, *(void *)(v12 + 8), *(unsigned char *)(v12 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v15 = *(void *)v13;
  uint64_t v16 = *(void *)(v13 + 8);
  char v17 = *(unsigned char *)(v13 + 16);
  sub_255A093E4(*(void *)v13, v16, v17);
  uint64_t v18 = *(void *)v12;
  uint64_t v19 = *(void *)(v12 + 8);
  char v20 = *(unsigned char *)(v12 + 16);
  *(void *)unint64_t v12 = v15;
  *(void *)(v12 + 8) = v16;
  *(unsigned char *)(v12 + 16) = v17;
  sub_255A094C0(v18, v19, v20);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 24))((v12 + *(unsigned __int8 *)(v25 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v13 + *(unsigned __int8 *)(v25 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return a1;
}

_OWORD *sub_255B975E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  unint64_t v5 = ((unint64_t)a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  long long v7 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)unint64_t v5 = *(_OWORD *)v6;
  *(_OWORD *)(v5 + 16) = v7;
  *(unsigned char *)(v5 + 32) = *(unsigned char *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((v5 + *(unsigned __int8 *)(v8 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_255B97678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255A094C0(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  unint64_t v10 = (a1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (a2 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v10 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)(v11 + 24) < 0xFFFFFFFFuLL)
  {
    sub_255A094C0(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    swift_bridgeObjectRelease();
LABEL_5:
    long long v16 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v16;
    goto LABEL_6;
  }
  char v12 = *(unsigned char *)(v11 + 16);
  uint64_t v13 = *(void *)v10;
  uint64_t v14 = *(void *)(v10 + 8);
  char v15 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  *(unsigned char *)(v10 + 16) = v12;
  sub_255A094C0(v13, v14, v15);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(v10 + 32) = *(unsigned char *)(v11 + 32);
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 40))((v10 + *(unsigned __int8 *)(v17 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v11 + *(unsigned __int8 *)(v17 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

uint64_t sub_255B977A8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 65) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 39) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 33) & ~v6);
      unint64_t v15 = *((void *)a1 + 3);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_255B97950(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 65) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255B97BBCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 39) & 0xFFFFFFFFFFFFFFF8) + v9 + 33) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 2) = 0;
          *((void *)a1 + 3) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 3) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_255B97BE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B97FF0()
{
  return swift_getWitnessTable();
}

uint64_t *sub_255B98064(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(v4 + 24);
    unsigned int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    swift_retain();
    swift_retain();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)a1 + *(int *)(v4 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v4 + 28));
  }
  return a1;
}

uint64_t sub_255B98164(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ToastViewLabelStyle.Specs(0) + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_255B981EC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  unsigned int v8 = (char *)a2 + v6;
  swift_retain();
  swift_retain();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 28)) = *(void *)((char *)a2 + *(int *)(v5 + 28));
  return a1;
}

void *sub_255B982A8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
  return a1;
}

_OWORD *sub_255B98374(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
  return a1;
}

void *sub_255B98418(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
  return a1;
}

uint64_t sub_255B984D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B984E8);
}

uint64_t sub_255B984E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_255B98554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B98568);
}

uint64_t sub_255B98568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_255B985D8()
{
  uint64_t result = type metadata accessor for ToastViewLabelStyle.Specs(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_255B98664()
{
  uint64_t result = type metadata accessor for ToastViewLabelStyle.Specs(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_255B98718(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(void *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v7 = a3[10];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *uint64_t v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    uint64_t v11 = type metadata accessor for ToastViewLabelStyle.Specs(0);
    uint64_t v12 = *(int *)(v11 + 24);
    int v13 = (char *)v8 + v12;
    uint64_t v14 = v9 + v12;
    swift_retain();
    swift_retain();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
    uint64_t v16 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(void *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
  }
  swift_retain();
  return v4;
}

uint64_t sub_255B98860(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(type metadata accessor for ToastViewLabelStyle.Specs(0) + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_release();
}

uint64_t sub_255B98908(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = v8 + v11;
  swift_retain();
  swift_retain();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(void *)((char *)v7 + *(int *)(v10 + 28)) = *(void *)(v8 + *(int *)(v10 + 28));
  uint64_t v15 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_retain();
  return a1;
}

void *sub_255B98A04(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  uint64_t v9 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)&v7[*(int *)(v9 + 28)] = *(void *)&v8[*(int *)(v9 + 28)];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  return a1;
}

uint64_t sub_255B98B28(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(v7 + *(int *)(v9 + 28)) = *(void *)(v8 + *(int *)(v9 + 28));
  uint64_t v14 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t sub_255B98C08(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_release();
  uint64_t v9 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)(v7 + *(int *)(v9 + 28)) = *(void *)(v8 + *(int *)(v9 + 28));
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_255B98D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B98D20);
}

uint64_t sub_255B98D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_255B98DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B98DF8);
}

uint64_t sub_255B98DF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 40);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t *sub_255B98EB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    swift_retain();
    swift_retain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t sub_255B98FB0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_255B99034(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_retain();
  swift_retain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_255B990DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_255B991A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_255B9923C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_255B992F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B99304);
}

uint64_t sub_255B99304(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B993B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B993CC);
}

void *sub_255B993CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B99478()
{
  sub_255ABFB6C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255B99520()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B9953C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v56 = a2;
  uint64_t v3 = sub_255C7EDC8();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  char v51 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F257F0) - 8;
  MEMORY[0x270FA5388](v52);
  int v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v46 - v7;
  uint64_t v8 = sub_255C7EDA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F257F8);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25800);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v49 = (uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v46 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v47 = (uint64_t)&v46 - v23;
  sub_255C7EDB8();
  uint64_t v24 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
  uint64_t v26 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  *uint64_t v26 = KeyPath;
  v26[1] = v24;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v27(v11, v8);
  sub_255C801F8();
  sub_255C7E588();
  sub_255A09540((uint64_t)v15, (uint64_t)v21, &qword_269F257F8);
  uint64_t v28 = &v21[*(int *)(v17 + 44)];
  long long v29 = v62;
  *((_OWORD *)v28 + 4) = v61;
  *((_OWORD *)v28 + 5) = v29;
  *((_OWORD *)v28 + 6) = v63;
  long long v30 = v58;
  *(_OWORD *)uint64_t v28 = v57;
  *((_OWORD *)v28 + 1) = v30;
  long long v31 = v60;
  *((_OWORD *)v28 + 2) = v59;
  *((_OWORD *)v28 + 3) = v31;
  sub_255A095A4((uint64_t)v15, &qword_269F257F8);
  uint64_t v32 = v47;
  sub_255A10514((uint64_t)v21, v47, &qword_269F25800);
  uint64_t v33 = v51;
  sub_255C7EDD8();
  uint64_t v34 = v48[1];
  uint64_t v35 = swift_getKeyPath();
  uint64_t v37 = v54;
  uint64_t v36 = v55;
  uint64_t v38 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v50, v33, v55);
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v52 + 44));
  *uint64_t v39 = v35;
  v39[1] = v34;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_retain();
  v40(v33, v36);
  uint64_t v41 = v53;
  sub_255A10514(v38, v53, &qword_269F257F0);
  uint64_t v42 = v49;
  sub_255A09540(v32, v49, &qword_269F25800);
  sub_255A09540(v41, v38, &qword_269F257F0);
  uint64_t v43 = v56;
  sub_255A09540(v42, v56, &qword_269F25800);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25808);
  sub_255A09540(v38, v43 + *(int *)(v44 + 48), &qword_269F257F0);
  sub_255A095A4(v41, &qword_269F257F0);
  sub_255A095A4(v32, &qword_269F25800);
  sub_255A095A4(v38, &qword_269F257F0);
  return sub_255A095A4(v42, &qword_269F25800);
}

uint64_t sub_255B99A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F257D8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ToastViewLabelStyle.Specs(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  sub_255C7DEE8();
  uint64_t v7 = v19[1];
  *(void *)uint64_t v6 = sub_255C7E928();
  *((void *)v6 + 1) = v7;
  v6[16] = 0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F257E0);
  sub_255B9953C(v2, (uint64_t)&v6[*(int *)(v8 + 44)]);
  LOBYTE(v7) = sub_255C7F1F8();
  sub_255C7DC08();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_255A09540((uint64_t)v6, a1, &qword_269F257D8);
  uint64_t v17 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F257E8) + 36);
  *(unsigned char *)uint64_t v17 = v7;
  *(void *)(v17 + 8) = v10;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v14;
  *(void *)(v17 + 32) = v16;
  *(unsigned char *)(v17 + 40) = 0;
  return sub_255A095A4((uint64_t)v6, &qword_269F257D8);
}

uint64_t sub_255B99B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C801A8();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = type metadata accessor for ToastViewLabelStyle.Specs(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (void *)((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255C7F228();
  sub_255C7F298();
  uint64_t v7 = sub_255C7F2C8();
  swift_release();
  sub_255C7F208();
  sub_255C7F298();
  uint64_t v8 = sub_255C7F2C8();
  swift_release();
  *uint64_t v6 = v7;
  v6[1] = v8;
  v12[1] = 0x4010000000000000;
  sub_255ABFBC8();
  sub_255C7DED8();
  *(uint64_t *)((char *)v6 + *(int *)(v4 + 36)) = 0x4020000000000000;
  sub_255C80188();
  uint64_t v9 = sub_255C7DFF8();
  *(_OWORD *)a1 = xmmword_255C92100;
  *(void *)(a1 + 16) = 0x4034000000000000;
  uint64_t v10 = (int *)type metadata accessor for ToastView.Specs();
  uint64_t result = sub_255B948C4((uint64_t)v6, a1 + v10[10]);
  *(void *)(a1 + v10[11]) = v9;
  *(void *)(a1 + v10[12]) = 0x402C000000000000;
  return result;
}

uint64_t sub_255B99D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_255C7E868();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_255B99D98()
{
  return sub_255C7E878();
}

uint64_t sub_255B99DD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_255C7E868();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_255B99E04()
{
  return sub_255C7E878();
}

unint64_t sub_255B99E3C()
{
  unint64_t result = qword_269F25850;
  if (!qword_269F25850)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25830);
    sub_255B99EDC();
    sub_255A09998((unint64_t *)&qword_26B29D110, &qword_26B29D118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25850);
  }
  return result;
}

unint64_t sub_255B99EDC()
{
  unint64_t result = qword_269F25858;
  if (!qword_269F25858)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25860);
    sub_255A09998(&qword_26B29BB48, &qword_26B29BB50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25858);
  }
  return result;
}

uint64_t sub_255B99F7C()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_255B99FB8()
{
  unint64_t result = qword_269F25878;
  if (!qword_269F25878)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F257E8);
    sub_255A09998(qword_269F25880, &qword_269F257D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25878);
  }
  return result;
}

uint64_t sub_255B9A060@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_255B9A18C();
  if (v4)
  {
    uint64_t v15 = sub_255C803A8();
    uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    uint64_t v12 = v15;
    uint64_t v13 = a1;
    uint64_t v14 = v1;
    return v11(v13, v14, v12);
  }
  float v5 = (float)v3;
  uint64_t result = UIAnimationDragCoefficient();
  float v8 = v7 * v5;
  if ((~LODWORD(v8) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v8 <= -9.2234e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 < 9.2234e18)
  {
    *a1 = (uint64_t)v8;
    uint64_t v9 = *MEMORY[0x263F8EFE0];
    uint64_t v10 = sub_255C803A8();
    uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
    uint64_t v12 = v10;
    uint64_t v13 = a1;
    uint64_t v14 = v9;
    return v11(v13, v14, v12);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_255B9A18C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v32 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C803A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v28 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (void *)((char *)v28 - v13);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15((char *)v28 - v13, v1, v5);
  LODWORD(result) = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v14, v5);
  if (result == *MEMORY[0x263F8F018])
  {
    uint64_t v17 = *(void (**)(uint64_t *, uint64_t))(v6 + 96);
    v6 += 96;
    v17(v14, v5);
    uint64_t result = 1000000000 * *v14;
    if ((unsigned __int128)(*v14 * (__int128)1000000000) >> 64 == result >> 63) {
      return result;
    }
    __break(1u);
  }
  if (result == *MEMORY[0x263F8F000])
  {
    uint64_t v18 = *(void (**)(uint64_t *, uint64_t))(v6 + 96);
    v6 += 96;
    v18(v14, v5);
    uint64_t result = 1000000 * *v14;
    if ((unsigned __int128)(*v14 * (__int128)1000000) >> 64 == result >> 63) {
      return result;
    }
    __break(1u);
  }
  if (result == *MEMORY[0x263F8EFE8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v14, v5);
    uint64_t result = 1000 * *v14;
    if ((unsigned __int128)(*v14 * (__int128)1000) >> 64 != result >> 63) {
      __break(1u);
    }
  }
  else if (result == *MEMORY[0x263F8EFE0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v14, v5);
    return *v14;
  }
  else
  {
    if (result != *MEMORY[0x263F8F010])
    {
      sub_255C7D888();
      v15(v12, v1, v5);
      uint64_t v19 = sub_255C7D878();
      os_log_type_t v20 = sub_255C80BF8();
      int v31 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        os_log_t v29 = v19;
        uint64_t v22 = v21;
        uint64_t v30 = swift_slowAlloc();
        uint64_t v34 = v30;
        *(_DWORD *)uint64_t v22 = 136315394;
        v28[0] = v22 + 4;
        uint64_t v33 = sub_255A7BEC4(0xD000000000000014, 0x8000000255CA0590, &v34);
        v28[1] = &v34;
        sub_255C80F18();
        *(_WORD *)(v22 + 12) = 2080;
        v28[0] = v22 + 14;
        v15(v9, (uint64_t)v12, v5);
        uint64_t v23 = sub_255C80658();
        uint64_t v33 = sub_255A7BEC4(v23, v24, &v34);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
        v25(v12, v5);
        os_log_t v26 = v29;
        _os_log_impl(&dword_255A00000, v29, (os_log_type_t)v31, "Unhandled case for %s: %s", (uint8_t *)v22, 0x16u);
        uint64_t v27 = v30;
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v27, -1, -1);
        MEMORY[0x25A297C00](v22, -1, -1);
      }
      else
      {
        uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
        v25(v12, v5);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v2);
      v25((char *)v14, v5);
    }
    return 0;
  }
  return result;
}

id sub_255B9A6A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D718();
  swift_release();
  char v4 = *(void **)(v3 + 16);
  *a2 = v4;

  return v4;
}

void sub_255B9A758(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  id v2 = v1;
  sub_255C7D708();
  swift_release();
}

id sub_255B9A834@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D718();
  swift_release();
  char v4 = *(void **)(v3 + 24);
  *a2 = v4;

  return v4;
}

void sub_255B9A8EC(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  id v2 = v1;
  sub_255C7D708();
  swift_release();
}

uint64_t MCUINamespace<A>.materialChin<A, B>(image:height:placeholder:content:)@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void (*a8)(uint64_t)@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_255B9AAE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t type metadata accessor for MaterialChinModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255B9A9F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = a1;
  uint64_t v7 = type metadata accessor for MaterialChinModifier();
  uint64_t v11 = a2(v7, v8, v9, v10);
  a3(v11);
  return sub_255B9AC4C((uint64_t)sub_255B9ACD0, 0);
}

uint64_t MCUINamespace<A>.motionMaterialChin<A, B>(keyframe:height:placeholder:content:)@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void (*a8)(uint64_t)@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_255B9AAE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_255B9AAE8@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void (*a8)(uint64_t)@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v23 = a5;
  v21[0] = a3;
  v21[1] = a4;
  void v21[2] = a8;
  uint64_t v22 = a10;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v26 = a11;
  uint64_t v27 = a12;
  uint64_t v15 = type metadata accessor for MaterialChinModifier();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v21 - v17;
  id v19 = a1;
  sub_255B9A9F4((uint64_t)a1, a2, v21[0], (uint64_t)v18, a9);
  MEMORY[0x25A295390](v18, *(void *)(v23 + 16), v15, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_255B9AC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  type metadata accessor for MaterialMotionContentObserver(0);

  return sub_255C802D8();
}

uint64_t sub_255B9ACD0()
{
  type metadata accessor for MaterialMotionContentObserver(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  sub_255C7D748();
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D708();
  swift_release();
  swift_getKeyPath();
  sub_255C7D708();
  swift_release();
  return v0;
}

uint64_t sub_255B9AE18@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v76 = a3;
  uint64_t v66 = a2;
  uint64_t v74 = *(a2 - 1);
  uint64_t v75 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v73 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25908);
  swift_getWitnessTable();
  sub_255C7EC98();
  uint64_t v5 = a2[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25910);
  sub_255C7E458();
  uint64_t v70 = a2[3];
  sub_255C7E458();
  uint64_t v94 = a2[5];
  uint64_t v6 = v94;
  uint64_t v95 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  sub_255A09998(&qword_269F25918, &qword_269F25908);
  uint64_t v7 = sub_255C7E1B8();
  uint64_t v69 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v67 = (uint64_t)v52 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB40);
  uint64_t v9 = (void *)sub_255C7E458();
  uint64_t v71 = *(v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v78 = (char *)v52 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BF18);
  uint64_t v12 = sub_255A09998(&qword_269F25920, &qword_269F25908);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v92 = v12;
  uint64_t v93 = WitnessTable;
  uint64_t v14 = swift_getWitnessTable();
  v52[1] = v14;
  uint64_t v15 = sub_255A09998(&qword_26B29EB38, &qword_26B29EB40);
  uint64_t v90 = v14;
  uint64_t v91 = v15;
  uint64_t v16 = swift_getWitnessTable();
  unint64_t v17 = sub_255B9E924();
  id v86 = v9;
  uint64_t v87 = v11;
  uint64_t v53 = v9;
  uint64_t v56 = v11;
  uint64_t v88 = v16;
  unint64_t v89 = v17;
  uint64_t v55 = v16;
  unint64_t v18 = v17;
  unint64_t v54 = v17;
  OpaqueTypeMetadata2 = (void *)swift_getOpaqueTypeMetadata2();
  long long v62 = OpaqueTypeMetadata2;
  uint64_t v68 = *(OpaqueTypeMetadata2 - 1);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v57 = (char *)v52 - v20;
  uint64_t v21 = type metadata accessor for MaterialMotionContentObserver(255);
  uint64_t v61 = v21;
  id v86 = v9;
  uint64_t v87 = v11;
  uint64_t v88 = v16;
  unint64_t v89 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = OpaqueTypeConformance2;
  uint64_t v59 = sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  id v86 = OpaqueTypeMetadata2;
  uint64_t v87 = v21;
  uint64_t v88 = OpaqueTypeConformance2;
  unint64_t v89 = v59;
  uint64_t v63 = MEMORY[0x263F1A970];
  uint64_t v64 = swift_getOpaqueTypeMetadata2();
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  v52[0] = (char *)v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  long long v58 = (char *)v52 - v25;
  uint64_t v26 = v77;
  uint64_t v27 = *v77;
  uint64_t v28 = v66;
  uint64_t v29 = v66[4];
  uint64_t v30 = (void *)swift_allocObject();
  uint64_t v31 = v5;
  uint64_t v32 = v70;
  v30[2] = v5;
  v30[3] = v32;
  v30[4] = v29;
  v30[5] = v6;
  v30[6] = v27;
  uint64_t v80 = v5;
  uint64_t v81 = v32;
  uint64_t v82 = v29;
  uint64_t v83 = v6;
  uint64_t v84 = v72;
  uint64_t v85 = v26;
  uint64_t v33 = v67;
  sub_255B9B760((uint64_t)sub_255B9EA08, (uint64_t)v79, v67);
  swift_release();
  sub_255C7FAA8();
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v33, v7);
  id v86 = (id)v26[1];
  id v34 = v86;
  uint64_t v35 = v74;
  uint64_t v36 = v73;
  (*(void (**)(char *, void *, void *))(v74 + 16))(v73, v26, v28);
  unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (char *)swift_allocObject();
  *((void *)v38 + 2) = v31;
  *((void *)v38 + 3) = v32;
  *((void *)v38 + 4) = v29;
  *((void *)v38 + 5) = v6;
  (*(void (**)(char *, char *, void *))(v35 + 32))(&v38[v37], v36, v28);
  id v39 = v34;
  uint64_t v40 = v57;
  uint64_t v41 = v53;
  uint64_t v42 = v78;
  sub_255C7FB48();
  swift_release();

  (*(void (**)(char *, void *))(v71 + 8))(v42, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  sub_255C802E8();
  uint64_t v43 = v52[0];
  uint64_t v44 = v62;
  uint64_t v45 = v61;
  uint64_t v46 = v60;
  uint64_t v47 = v59;
  sub_255C7F668();
  swift_release();
  (*(void (**)(char *, void *))(v68 + 8))(v40, v44);
  id v86 = v44;
  uint64_t v87 = v45;
  uint64_t v88 = v46;
  unint64_t v89 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = v58;
  uint64_t v49 = v64;
  sub_255A20F54(v43);
  int v50 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v50(v43, v49);
  sub_255A20F54(v48);
  return ((uint64_t (*)(char *, uint64_t))v50)(v48, v49);
}

uint64_t sub_255B9B760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for MaterialChinModifier();
  swift_getWitnessTable();
  sub_255C7EC98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25910);
  sub_255C7E458();
  sub_255C7E458();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_255C80318();
  unint64_t v7 = sub_255B9EDDC();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_255AF6EAC(a1, a2, (uint64_t)&type metadata for MaterialChinLayout, v6, v7, WitnessTable, a3);
}

uint64_t sub_255B9B8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v58 = a7;
  uint64_t v12 = *((void *)a3 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v46 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25910);
  uint64_t v50 = sub_255C7E458();
  uint64_t v57 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (char *)&v41 - v14;
  uint64_t v54 = sub_255C7E458();
  uint64_t v78 = a6;
  uint64_t v79 = MEMORY[0x263F18860];
  uint64_t v51 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v55 = sub_255C7E598();
  uint64_t v15 = sub_255C7E458();
  uint64_t v56 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v47 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v52 = (char *)&v41 - v18;
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v41 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v19 = type metadata accessor for MaterialChinModifier();
  swift_getWitnessTable();
  uint64_t v43 = sub_255C7EC98();
  uint64_t v60 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v59 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v44 = (char *)&v41 - v22;
  uint64_t v45 = swift_getWitnessTable();
  sub_255A20F54(v49);
  uint64_t v23 = *(int *)(v19 + 56);
  uint64_t v42 = a2;
  uint64_t v24 = v46;
  (*(void (**)(char *, uint64_t, char *))(v12 + 16))(v46, a2 + v23, a3);
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v68 = a5;
  uint64_t v69 = a6;
  uint64_t v25 = a5;
  uint64_t v70 = a2;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25938);
  sub_255B9EC6C();
  uint64_t v26 = v48;
  sub_255C7FAC8();
  (*(void (**)(char *, char *))(v12 + 8))(v24, a3);
  sub_255C801D8();
  uint64_t v61 = a3;
  long long v62 = v41;
  uint64_t v63 = v25;
  uint64_t v64 = a6;
  uint64_t v65 = v42;
  uint64_t v27 = sub_255A09998(&qword_269F25978, &qword_269F25910);
  v73[4] = v25;
  v73[5] = v27;
  uint64_t v28 = v50;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = v47;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v28);
  uint64_t v31 = swift_getWitnessTable();
  v73[2] = v29;
  v73[3] = v31;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v52;
  sub_255A20F54(v30);
  uint64_t v34 = v56;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v56 + 8);
  v35(v30, v15);
  uint64_t v36 = v59;
  unint64_t v37 = v44;
  uint64_t v38 = v43;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v44, v43);
  uint64_t v74 = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v30, v33, v15);
  uint64_t v75 = v30;
  v73[0] = v38;
  v73[1] = v15;
  uint64_t v71 = v45;
  uint64_t v72 = v32;
  sub_255AF64A0((uint64_t)&v74, 2uLL, (uint64_t)v73);
  v35(v33, v15);
  id v39 = *(void (**)(char *, uint64_t))(v60 + 8);
  v39(v37, v38);
  v35(v30, v15);
  return ((uint64_t (*)(char *, uint64_t))v39)(v59, v38);
}

uint64_t sub_255B9BFE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)&long long v14 = a1;
  *((void *)&v14 + 1) = a2;
  type metadata accessor for MaterialChinModifier();
  sub_255B9C12C((uint64_t)&v15);
  unsigned __int8 v4 = v17;
  if (v17 == 255)
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v10 = 0;
    uint64_t KeyPath = 0;
    uint64_t v9 = 0;
    uint64_t result = 0;
    char v13 = 0;
    long long v12 = 0uLL;
  }
  else
  {
    uint64_t v6 = v15;
    uint64_t v5 = v16;
    uint64_t v7 = v17 & 1;
    uint64_t v15 = 0;
    sub_255A22540(v6, v16, v17 & 1);
    __swift_instantiateConcreteTypeFromMangledName(qword_269F21200);
    sub_255C7FE58();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v9 = swift_getKeyPath();
    uint64_t v10 = sub_255C7FC78();
    sub_255ACF494(v6, v5, v4);
    uint64_t result = swift_getKeyPath();
    long long v12 = v14;
    char v13 = 2;
  }
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v10;
  *(_OWORD *)(a3 + 32) = v12;
  *(void *)(a3 + 48) = KeyPath;
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = v9;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = result;
  *(unsigned char *)(a3 + 88) = v13;
  return result;
}

void sub_255B9C12C(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  sub_255C802E8();
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D718();
  swift_release();
  id v2 = *(void **)(v7 + 24);
  id v3 = v2;
  swift_release();
  sub_255C802E8();
  swift_getKeyPath();
  sub_255C7D718();
  swift_release();
  unsigned __int8 v4 = *(void **)(v7 + 16);
  id v5 = v4;
  swift_release();
  if (v2)
  {
    char v6 = v4 == 0;
  }
  else
  {

    unsigned __int8 v4 = 0;
    char v6 = -1;
  }
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
}

uint64_t sub_255B9C294@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v18[1] = a5;
  uint64_t v9 = sub_255C7E458();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v18 - v14;
  v18[4] = a1;
  v18[5] = a2;
  v18[6] = a3;
  v18[7] = a4;
  type metadata accessor for MaterialChinModifier();
  sub_255C801F8();
  sub_255C7FA38();
  double v18[2] = a4;
  v18[3] = MEMORY[0x263F18860];
  swift_getWitnessTable();
  sub_255A20F54(v12);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  sub_255A20F54(v15);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

void sub_255B9C464(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MaterialChinModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  sub_255C802E8();
  swift_getKeyPath();
  sub_255B9F29C((unint64_t *)&qword_269F224E8, (void (*)(uint64_t))type metadata accessor for MaterialMotionContentObserver);
  sub_255C7D718();
  swift_release();
  id v3 = *(void **)(a2 + 24);
  id v4 = v3;
  swift_release();
  id v5 = *(void **)(a1 + 8);
  if (v3)
  {
    if (v5)
    {
      sub_255B9E9C8();
      id v6 = v4;
      id v7 = v5;
      char v8 = sub_255C80DD8();

      if (v8) {
        return;
      }
    }
    else
    {
    }
LABEL_8:
    sub_255C802E8();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    id v10 = v5;
    sub_255C7D708();
    swift_release();
    swift_release();

    return;
  }
  if (v5) {
    goto LABEL_8;
  }
}

double sub_255B9C67C(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  int v25 = a2;
  uint64_t v26 = a1;
  uint64_t v8 = sub_255C7E328();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_255C7E158();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))&v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))&v24[-v17];
  sub_255B9C8B8((uint64_t)&v24[-v17], v15, a5);
  uint64_t v19 = *(void (**)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v13 + 8);
  v19(v15, v12);
  BOOL v20 = (a4 & 1) != 0 || *(double *)&a3 == 0.0;
  char v28 = v25 & 1;
  BOOL v27 = v20;
  sub_255C7E118();
  sub_255C7E308();
  double v22 = v21;
  sub_255C7E318();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  v19(v18, v12);
  return v22;
}

uint64_t sub_255B9C8B8(uint64_t a1, unsigned int (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v35 = a1;
  uint64_t v5 = sub_255C7E288();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v33 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v31 = (uint64_t)&v30 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_255B9F29C((unint64_t *)&qword_26B29F290, MEMORY[0x263F18AB8]);
  sub_255C80B08();
  sub_255C80B48();
  uint64_t v36 = v18;
  if (sub_255C80B38() == 2)
  {
    uint64_t v34 = a2;
    uint64_t v30 = v6;
    sub_255C79FA8((uint64_t)v17);
    uint64_t v19 = sub_255C7E158();
    uint64_t v20 = *(void *)(v19 - 8);
    double v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v17, 1, v19) == 1)
    {
      uint64_t v14 = v17;
    }
    else
    {
      double v22 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
      v22(v35, v17, v19);
      if (sub_255C80B28())
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v14, 1, 1, v19);
      }
      else
      {
        sub_255C80B48();
        sub_255B9F29C(qword_269F25990, MEMORY[0x263F18AB8]);
        sub_255C80518();
        uint64_t v23 = (void (*)(uint64_t *, void))sub_255C80B98();
        (*(void (**)(char *))(v20 + 16))(v14);
        v23(&v37, 0);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
        if (v21(v14, 1, v19) != 1) {
          return ((uint64_t (*)(void, char *, uint64_t))v22)(v34, v14, v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v35, v19);
    }
    sub_255B9F23C((uint64_t)v14);
    uint64_t v6 = v30;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v32, a3, v5);
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_255C810E8();
  uint64_t v39 = v37;
  unint64_t v40 = v38;
  sub_255C806E8();
  sub_255C80B08();
  sub_255C80B48();
  uint64_t v37 = sub_255C80B38();
  sub_255C813E8();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  uint64_t v25 = v31;
  sub_255C79FA8(v31);
  uint64_t v26 = sub_255C7E158();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v34(v25, 1, v26);
  uint64_t v35 = 1702195828;
  sub_255B9F23C(v25);
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  if (sub_255C80B28())
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v33, 1, 1, v26);
LABEL_13:
    uint64_t v35 = 0x65736C6166;
    goto LABEL_14;
  }
  sub_255C80B48();
  sub_255B9F29C(qword_269F25990, MEMORY[0x263F18AB8]);
  sub_255C80518();
  char v28 = (void (*)(uint64_t *, void))sub_255C80B98();
  uint64_t v29 = v33;
  (*(void (**)(uint64_t))(v27 + 16))(v33);
  v28(&v37, 0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  if (v34(v29, 1, v26) == 1) {
    goto LABEL_13;
  }
LABEL_14:
  sub_255B9F23C(v33);
  sub_255C806E8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_255C81248();
  __break(1u);
  return result;
}

uint64_t sub_255B9D008(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v30 = a1;
  uint64_t v31 = sub_255C7E328();
  uint64_t v17 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_255C7E158();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v30 - v25;
  sub_255B9C8B8((uint64_t)&v30 - v25, v23, a5);
  BOOL v27 = (a4 & 1) != 0 || *(double *)&a3 == 0.0;
  char v37 = a2 & 1;
  BOOL v36 = v27;
  sub_255C7E118();
  v38.origin.CGFloat x = a6;
  v38.origin.CGFloat y = a7;
  v38.size.double width = a8;
  v38.size.double height = a9;
  CGRectGetMidX(v38);
  v39.origin.CGFloat x = a6;
  v39.origin.CGFloat y = a7;
  v39.size.double width = a8;
  v39.size.double height = a9;
  CGRectGetMinY(v39);
  sub_255C80358();
  sub_255C7E308();
  sub_255C7E318();
  char v35 = 0;
  char v34 = 0;
  sub_255C7E138();
  sub_255C7E308();
  sub_255C7E318();
  v40.origin.CGFloat x = a6;
  v40.origin.CGFloat y = a7;
  v40.size.double width = a8;
  v40.size.double height = a9;
  CGRectGetMidX(v40);
  v41.origin.CGFloat x = a6;
  v41.origin.CGFloat y = a7;
  v41.size.double width = a8;
  v41.size.double height = a9;
  CGRectGetMinY(v41);
  sub_255C7E318();
  sub_255C80358();
  char v33 = 0;
  char v32 = 0;
  sub_255C7E138();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v31);
  char v28 = *(void (**)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v21 + 8);
  v28(v23, v20);
  return ((uint64_t (*)(char *, uint64_t))v28)(v26, v20);
}

double sub_255B9D340(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_255B9C67C(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_255B9D35C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_255B9D008(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

uint64_t View.materialChin<A, B>(image:height:placeholder:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_255B9D3F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t))MCUINamespace<A>.materialChin<A, B>(image:height:placeholder:content:));
}

uint64_t View.motionMaterialChin<A, B>(keyframe:height:placeholder:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_255B9D3F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t))MCUINamespace<A>.motionMaterialChin<A, B>(keyframe:height:placeholder:content:));
}

uint64_t sub_255B9D3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t))
{
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a13;
  uint64_t v16 = type metadata accessor for MCUINamespace();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v21 - v18;
  View.mcui.getter(a6, (uint64_t)&v21 - v18);
  v24(a1, v22, v23, v25, v26, v16, v27, v28, a9, a10, a11, a12);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_255B9D548()
{
  return swift_getWitnessTable();
}

void sub_255B9D5EC()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_255B9E888();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_255B9D710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v43 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v43 - 8);
  int v4 = *(_DWORD *)(v3 + 80);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v42 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v42 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v41 = v6 + v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = (v6 + v9 + ((v5 + 16) & ~v5)) & ~v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v14 & 0xF8 | 7;
  uint64_t v16 = v10 + v15;
  uint64_t v17 = (v10 + v15 + v11) & ~v15;
  uint64_t v18 = *(void *)(v13 + 64) + 7;
  unint64_t v19 = (v18 & 0xFFFFFFFFFFFFFFF8) + v17 + 8;
  unint64_t v20 = v8 | (unint64_t)v4 | v15;
  int v21 = (v8 | v4 | v14) & 0x100000;
  if (v20 != 7 || v21 != 0 || v19 > 0x18)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    CGRect v39 = (uint64_t *)(v24 + ((v20 + 16) & ~v20));
  }
  else
  {
    unint64_t v25 = ~(unint64_t)v8;
    uint64_t v26 = ~v15;
    *a1 = *a2;
    uint64_t v27 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = *v28;
    *uint64_t v27 = *v28;
    uint64_t v30 = ((unint64_t)v27 + v5 + 8) & ~v5;
    uint64_t v31 = ((unint64_t)v28 + v5 + 8) & ~v5;
    char v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v45 = v12;
    id v33 = v29;
    v32(v30, v31, v43);
    uint64_t v34 = (v30 + v41) & ~v9;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v34, (v31 + v41) & v25, v42);
    uint64_t v35 = (v34 + v16) & v26;
    unint64_t v36 = (((v31 + v41) & v25) + v16) & v26;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(v35, v36, v45);
    char v37 = (void *)((v18 + v35) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v38 = v18 + v36;
    CGRect v39 = a1;
    *char v37 = *(void *)(v38 & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v39;
}

uint64_t sub_255B9D9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (id *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = ((unint64_t)v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v10);
  uint64_t v11 = *(void *)(v9 + 56);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))((v10 + v11 + v14) & ~v14, v12);

  return swift_release();
}

void *sub_255B9DAE0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *v6;
  *uint64_t v5 = *v6;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v9 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = ((unint64_t)v5 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v6 + v12 + 8) & ~v12;
  id v15 = v7;
  v10(v13, v14, v8);
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = v16 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = *(void *)(v11 + 48) + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v20, v21);
  uint64_t v22 = *(void *)(v17 + 48);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24 + 16;
  uint64_t v26 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  uint64_t v27 = (v22 + v26 + v20) & ~v26;
  uint64_t v28 = (v22 + v26 + v21) & ~v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v27, v28, v23);
  *(void *)((*(void *)(v25 + 48) + 7 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v25 + 48)
                                                                                       + 7
                                                                                       + v28) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

void *sub_255B9DC68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void **)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *v6;
  uint64_t v8 = *v5;
  *uint64_t v5 = *v6;
  id v9 = v7;

  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v5 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v6 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 40);
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = v16 + 24;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v20, v21);
  uint64_t v22 = *(void *)(v17 + 40);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24 + 24;
  uint64_t v26 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  uint64_t v27 = (v22 + v26 + v20) & ~v26;
  uint64_t v28 = (v22 + v26 + v21) & ~v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24))(v27, v28, v23);
  *(void *)((*(void *)(v25 + 40) + 7 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v25 + 40)
                                                                                       + 7
                                                                                       + v28) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_255B9DDF8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 32);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  uint64_t v24 = (v19 + v23 + v17) & ~v23;
  uint64_t v25 = (v19 + v23 + v18) & ~v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v24, v25, v20);
  *(void *)((*(void *)(v22 + 32) + 7 + v24) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v22 + 32)
                                                                                       + 7
                                                                                       + v25) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_255B9DF6C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void **)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *v5;
  *uint64_t v5 = *v6;

  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = v22 + 40;
  uint64_t v24 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  uint64_t v25 = (v20 + v24 + v18) & ~v24;
  uint64_t v26 = (v20 + v24 + v19) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40))(v25, v26, v21);
  *(void *)((*(void *)(v23 + 24) + 7 + v25) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v23 + 24)
                                                                                       + 7
                                                                                       + v26) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_255B9E0F0(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v36 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v36 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v7 <= v9) {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  if (*(_DWORD *)(v12 + 84) <= 0x7FFFFFFEu) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v12 + 84);
  }
  if (v10 > v17) {
    unsigned int v17 = v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  if (v17 < a2)
  {
    unint64_t v19 = ((*(void *)(*(void *)(v11 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
        + ((v16 + v18 + ((v14 + v15 + ((v13 + 16) & ~v13)) & ~v15)) & ~v18)
        + 8;
    uint64_t v20 = v19 & 0xFFFFFFF8;
    if ((v19 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = 2;
    }
    else {
      unsigned int v21 = a2 - v17 + 1;
    }
    if (v21 >= 0x10000) {
      unsigned int v22 = 4;
    }
    else {
      unsigned int v22 = 2;
    }
    if (v21 < 0x100) {
      unsigned int v22 = 1;
    }
    if (v21 >= 2) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    switch(v23)
    {
      case 1:
        int v24 = *((unsigned __int8 *)a1 + v19);
        if (!v24) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v24 = *(unsigned __int16 *)((char *)a1 + v19);
        if (v24) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B9E46CLL);
      case 4:
        int v24 = *(int *)((char *)a1 + v19);
        if (!v24) {
          break;
        }
LABEL_27:
        int v26 = v24 - 1;
        if (v20)
        {
          int v26 = 0;
          int v27 = *a1;
        }
        else
        {
          int v27 = 0;
        }
        return v17 + (v27 | v26) + 1;
      default:
        break;
    }
  }
  uint64_t v28 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 <= 0x7FFFFFFE)
  {
    uint64_t v29 = *v28;
    if ((unint64_t)*v28 >= 0xFFFFFFFF) {
      LODWORD(v29) = -1;
    }
    if ((v29 + 1) >= 2) {
      return v29;
    }
    else {
      return 0;
    }
  }
  uint64_t v30 = ((unint64_t)v28 + v13 + 8) & ~v13;
  if (v7 == v17)
  {
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    uint64_t v32 = v7;
    uint64_t v33 = v5;
    return v31(v30, v32, v33);
  }
  uint64_t v30 = (v30 + v14 + v15) & ~v15;
  if (v9 == v17)
  {
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v32 = v9;
    uint64_t v33 = v36;
    return v31(v30, v32, v33);
  }
  uint64_t v34 = (v30 + v16 + v18) & ~v18;
  uint64_t v35 = *(uint64_t (**)(uint64_t))(v12 + 48);

  return v35(v34);
}

void sub_255B9E480(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v40 = *(void *)(a4 + 24);
  uint64_t v41 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v41 - 8);
  uint64_t v42 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v40 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = *(void *)(v7 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = *(void *)(v9 + 64);
  if (*(_DWORD *)(v13 + 84) <= 0x7FFFFFFEu) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v13 + 84);
  }
  if (v11 <= v18) {
    unsigned int v19 = v18;
  }
  else {
    unsigned int v19 = v11;
  }
  uint64_t v20 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  size_t v21 = ((*(void *)(*(void *)(v12 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  size_t v22 = ((v17 + v20 + ((v15 + v16 + ((v14 + 16) & ~v14)) & ~v16)) & ~v20) + v21;
  if (v19 >= a3)
  {
    int v25 = 0;
    int v26 = a2 - v19;
    if (a2 <= v19) {
      goto LABEL_23;
    }
LABEL_27:
    if (v22) {
      int v28 = 1;
    }
    else {
      int v28 = v26;
    }
    if (v22)
    {
      int v29 = ~v19 + a2;
      bzero(a1, ((v17 + v20 + ((v15 + v16 + ((v14 + 16) & ~v14)) & ~v16)) & ~v20) + v21);
      *a1 = v29;
    }
    switch(v25)
    {
      case 1:
        *((unsigned char *)a1 + v22) = v28;
        break;
      case 2:
        *(_WORD *)((char *)a1 + v22) = v28;
        break;
      case 3:
LABEL_57:
        __break(1u);
        JUMPOUT(0x255B9E860);
      case 4:
        *(_DWORD *)((char *)a1 + v22) = v28;
        break;
      default:
        return;
    }
    return;
  }
  if (v22) {
    unsigned int v23 = 2;
  }
  else {
    unsigned int v23 = a3 - v19 + 1;
  }
  if (v23 >= 0x10000) {
    int v24 = 4;
  }
  else {
    int v24 = 2;
  }
  if (v23 < 0x100) {
    int v24 = 1;
  }
  if (v23 >= 2) {
    int v25 = v24;
  }
  else {
    int v25 = 0;
  }
  int v26 = a2 - v19;
  if (a2 > v19) {
    goto LABEL_27;
  }
LABEL_23:
  switch(v25)
  {
    case 1:
      *((unsigned char *)a1 + v22) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)((char *)a1 + v22) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 3:
      goto LABEL_57;
    case 4:
      *(_DWORD *)((char *)a1 + v22) = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (!a2) {
        return;
      }
LABEL_36:
      uint64_t v30 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v19 <= 0x7FFFFFFE)
      {
        *uint64_t v30 = a2;
        return;
      }
      uint64_t v31 = ((unint64_t)v30 + v14 + 8) & ~v14;
      if (v8 == v19)
      {
        uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        uint64_t v33 = a2;
        uint64_t v34 = v8;
        uint64_t v35 = v41;
LABEL_41:
        v32(v31, v33, v34, v35);
        return;
      }
      uint64_t v31 = (v31 + v15 + v16) & ~v16;
      if (v10 == v19)
      {
        uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v33 = a2;
        uint64_t v34 = v10;
        uint64_t v35 = v40;
        goto LABEL_41;
      }
      uint64_t v27 = ~v20;
      uint64_t v36 = (_DWORD *)((v31 + v17 + v20) & ~v20);
      if (v18 >= a2)
      {
        unint64_t v38 = *(void (**)(uint64_t, uint64_t))(v13 + 56);
        uint64_t v39 = (v31 + v17 + v20) & v27;
        v38(v39, a2);
      }
      else if (v21)
      {
        int v37 = ~v18 + a2;
        bzero((void *)((v31 + v17 + v20) & v27), v21);
        *uint64_t v36 = v37;
      }
      break;
  }
}

void sub_255B9E888()
{
  if (!qword_26B29D138)
  {
    type metadata accessor for MaterialMotionContentObserver(255);
    unint64_t v0 = sub_255C802F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29D138);
    }
  }
}

uint64_t sub_255B9E8E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B9E924()
{
  unint64_t result = qword_269F25928;
  if (!qword_269F25928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BF18);
    sub_255B9F29C(&qword_269F25930, (void (*)(uint64_t))sub_255B9E9C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25928);
  }
  return result;
}

unint64_t sub_255B9E9C8()
{
  unint64_t result = qword_26B29FCA0;
  if (!qword_26B29FCA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B29FCA0);
  }
  return result;
}

uint64_t sub_255B9EA08@<X0>(uint64_t a1@<X8>)
{
  return sub_255B9B8F8(*(void *)(v1 + 48), *(void *)(v1 + 56), *(char **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_255B9EA18()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v7 = *(_OWORD *)(v0 + 24);
  unint64_t v2 = (int *)(type metadata accessor for MaterialChinModifier() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));

  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[16], v1);
  (*(void (**)(uint64_t))(*(void *)(v7 - 8) + 8))(v3 + v2[17]);
  uint64_t v4 = v3 + v2[18];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  swift_release();
  return swift_deallocObject();
}

void sub_255B9EBB0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for MaterialChinModifier() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  sub_255B9C464(v3, v1);
}

uint64_t sub_255B9EC5C@<X0>(uint64_t a1@<X8>)
{
  return sub_255B9BFE8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255B9EC6C()
{
  unint64_t result = qword_269F25940;
  if (!qword_269F25940)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25938);
    sub_255B9ECE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25940);
  }
  return result;
}

unint64_t sub_255B9ECE0()
{
  unint64_t result = qword_269F25948;
  if (!qword_269F25948)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25950);
    sub_255A09998(&qword_269F25958, &qword_269F25960);
    sub_255A09998((unint64_t *)&qword_269F25968, &qword_269F25970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25948);
  }
  return result;
}

uint64_t sub_255B9EDA4@<X0>(uint64_t a1@<X8>)
{
  return sub_255B9C294(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_255B9EDCC()
{
  return swift_deallocObject();
}

unint64_t sub_255B9EDDC()
{
  unint64_t result = qword_269F25980;
  if (!qword_269F25980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25980);
  }
  return result;
}

uint64_t sub_255B9EE30@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_255B9EE60()
{
  swift_release();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for MaterialChinLayout()
{
  return &type metadata for MaterialChinLayout;
}

uint64_t sub_255B9EEA8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B9F1E8()
{
  unint64_t result = qword_269F25988;
  if (!qword_269F25988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25988);
  }
  return result;
}

uint64_t sub_255B9F23C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255B9F29C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255B9F2E4()
{
}

void sub_255B9F2FC()
{
}

double sub_255B9F314()
{
  if (*(unsigned char *)(v0 + 16))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    JUMPOUT(0x255B9F430);
  }
  double v1 = *(double *)v0;
  double v2 = 78.0;
  double v3 = 117.0;
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
      goto LABEL_6;
    case 2:
      double v2 = 52.0;
      uint64_t v4 = 0x4053800000000000;
      goto LABEL_5;
    case 3:
      goto LABEL_18;
    default:
      double v2 = 32.0;
      uint64_t v4 = 0x4048000000000000;
LABEL_5:
      double v3 = *(double *)&v4;
LABEL_6:
      BOOL v5 = v1 > 1500.0 || v1 <= 1194.0;
      double v6 = 38.0;
      if (!v5) {
        double v6 = 50.0;
      }
      double v7 = *(double *)(v0 + 8) + -60.0 + -267.0 - v6 + -56.0;
      double result = v1 - (v1 * 0.5 + 17.5) - v3 - v2 + -16.0;
      if (v7 < result && v7 >= 350.0) {
        return *(double *)(v0 + 8) + -60.0 + -267.0 - v6 + -56.0;
      }
      return result;
  }
}

uint64_t sub_255B9F440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  _s11ContentViewVMa();
  sub_255C7E458();
  _s13FooterButtonsVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v4 = sub_255C7FF98();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v6 = (char *)&v25 - v5;
  uint64_t v29 = sub_255C7E458();
  uint64_t v32 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  int v25 = (char *)&v25 - v7;
  uint64_t v31 = sub_255C7E458();
  uint64_t v33 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v27 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v25 - v10;
  uint64_t v11 = *(void *)v2;
  uint64_t v12 = *(void *)(v2 + 8);
  uint64_t v13 = *(void *)(v2 + 16);
  char v14 = *(unsigned char *)(v2 + 24);
  uint64_t v35 = v3;
  uint64_t v36 = v26;
  sub_255C7EA58();
  sub_255C7FF88();
  sub_255C7F188();
  sub_255A322FC(v11, v12, v13, v14);
  sub_255ABD254(v11, v12, v13, v14, &v41);
  sub_255A31D88(v11, v12, v13, v14);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = v25;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  sub_255C7F1B8();
  sub_255A322FC(v11, v12, v13, v14);
  sub_255ABD254(v11, v12, v13, v14, &v41);
  sub_255A31D88(v11, v12, v13, v14);
  uint64_t v17 = MEMORY[0x263F18C10];
  uint64_t v39 = WitnessTable;
  uint64_t v40 = MEMORY[0x263F18C10];
  uint64_t v18 = v29;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = v27;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v18);
  uint64_t v37 = v19;
  uint64_t v38 = v17;
  uint64_t v21 = v31;
  swift_getWitnessTable();
  size_t v22 = v30;
  sub_255A20F54(v20);
  unsigned int v23 = *(void (**)(char *, uint64_t))(v33 + 8);
  v23(v20, v21);
  sub_255A20F54(v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v22, v21);
}

uint64_t sub_255B9F8E8@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = _s13FooterButtonsVMa();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v14[0] = (char *)v14 - v6;
  sub_255B9FD7C((uint64_t)v41);
  long long v53 = v41[6];
  long long v54 = v41[7];
  LOBYTE(v55) = v42;
  long long v49 = v41[2];
  long long v50 = v41[3];
  long long v52 = v41[5];
  long long v51 = v41[4];
  long long v47 = v41[0];
  long long v48 = v41[1];
  sub_255C7F1E8();
  _s11ContentViewVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  sub_255BA18D0((uint64_t)v41);
  v43[8] = v67;
  v43[9] = v68;
  v43[10] = v69;
  v43[4] = v63;
  v43[5] = v64;
  v43[6] = v65;
  v43[7] = v66;
  v43[0] = v59;
  v43[1] = v60;
  v43[2] = v61;
  v43[3] = v62;
  long long v55 = v67;
  long long v56 = v68;
  long long v57 = v69;
  long long v51 = v63;
  long long v52 = v64;
  long long v53 = v65;
  long long v54 = v66;
  long long v47 = v59;
  long long v48 = v60;
  char v44 = v70;
  char v58 = v70;
  long long v49 = v61;
  long long v50 = v62;
  uint64_t v8 = sub_255C7E458();
  void v28[2] = WitnessTable;
  v28[3] = MEMORY[0x263F18C10];
  uint64_t v9 = swift_getWitnessTable();
  sub_255A20F54(&v47);
  sub_255BA18D0((uint64_t)v43);
  sub_255BC23B0((uint64_t)v4);
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = (char *)v14[0];
  sub_255A20F54(v4);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v45[8] = v37;
  v45[9] = v38;
  v45[10] = v39;
  v45[4] = v33;
  v45[5] = v34;
  v45[6] = v35;
  v45[7] = v36;
  v45[0] = v29;
  v45[1] = v30;
  v45[2] = v31;
  v45[3] = v32;
  long long v24 = v37;
  long long v25 = v38;
  long long v26 = v39;
  long long v20 = v33;
  long long v21 = v34;
  long long v22 = v35;
  long long v23 = v36;
  long long v16 = v29;
  long long v17 = v30;
  char v46 = v40;
  char v27 = v40;
  long long v18 = v31;
  long long v19 = v32;
  v28[0] = &v16;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v11, v1);
  v28[1] = v4;
  sub_255BA19A4((uint64_t)v45);
  v15[0] = v8;
  v15[1] = v1;
  v14[2] = v9;
  v14[3] = v10;
  sub_255AF64A0((uint64_t)v28, 2uLL, (uint64_t)v15);
  v12(v11, v1);
  long long v55 = v37;
  long long v56 = v38;
  long long v57 = v39;
  char v58 = v40;
  long long v51 = v33;
  long long v52 = v34;
  long long v53 = v35;
  long long v54 = v36;
  long long v47 = v29;
  long long v48 = v30;
  long long v49 = v31;
  long long v50 = v32;
  sub_255BA18D0((uint64_t)&v47);
  v12(v4, v1);
  long long v67 = v24;
  long long v68 = v25;
  long long v69 = v26;
  char v70 = v27;
  long long v63 = v20;
  long long v64 = v21;
  long long v65 = v22;
  long long v66 = v23;
  long long v59 = v16;
  long long v60 = v17;
  long long v61 = v18;
  long long v62 = v19;
  return sub_255BA18D0((uint64_t)&v59);
}

double sub_255B9FD7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7E628();
  uint64_t v4 = v3;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  type metadata accessor for WindowProperties();
  sub_255BA1A90();
  uint64_t v7 = sub_255C7DD58();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = KeyPath;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_WORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 128) = v8 & 1;
  return result;
}

uint64_t sub_255B9FE40@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_255B9FE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  _s18DefaultContentViewVMa();
  uint64_t v20 = v3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  v19[1] = swift_getWitnessTable();
  uint64_t v5 = sub_255C7FED8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v19 - v10;
  long long v12 = *(_OWORD *)(v2 + 80);
  v26[0] = *(_OWORD *)(v2 + 64);
  v26[1] = v12;
  long long v13 = *(_OWORD *)(v2 + 112);
  v26[2] = *(_OWORD *)(v2 + 96);
  v26[3] = v13;
  char v27 = *(unsigned char *)(v2 + 128);
  long long v14 = *(_OWORD *)(v2 + 48);
  long long v24 = *(_OWORD *)(v2 + 32);
  long long v25 = v14;
  long long v15 = *(_OWORD *)(v2 + 16);
  v23[0] = *(_OWORD *)v2;
  v23[1] = v15;
  void v32[2] = v14;
  v33[0] = v26[0];
  *(_OWORD *)((char *)v33 + 10) = *(_OWORD *)((char *)v26 + 10);
  v32[0] = v15;
  v32[1] = v24;
  long long v30 = v14;
  v31[0] = v26[0];
  *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v26 + 10);
  long long v28 = v15;
  long long v29 = v24;
  sub_255A1D474((uint64_t)v32, (uint64_t)v34);
  sub_255B5A588((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v22);
  uint64_t v16 = sub_255B5A588((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  switch(v22[18])
  {
    case 3:
      __break(1u);
      JUMPOUT(0x255BA01E8);
    default:
      MEMORY[0x270FA5388](v16);
      v19[-4] = v20;
      v19[-3] = v4;
      v19[-2] = v23;
      sub_255C7E928();
      sub_255C7FEC8();
      swift_getWitnessTable();
      sub_255A20F54(v8);
      long long v17 = *(void (**)(char *, uint64_t))(v6 + 8);
      v17(v8, v5);
      sub_255A20F54(v11);
      return ((uint64_t (*)(char *, uint64_t))v17)(v11, v5);
  }
}

uint64_t sub_255BA01F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v38)(ValueMetadata ***__return_ptr, uint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t AssociatedConformanceWitness;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  void *Description;
  uint64_t v52;
  uint64_t v53;
  long long v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t);
  long long v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t WitnessTable;
  uint64_t v71;
  ValueMetadata *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  ValueMetadata **v85;
  uint64_t v86;
  ValueMetadata **v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  ValueMetadata *v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  __int16 v96;
  long long v97;
  ValueMetadata *v98;
  long long v99;
  long long v100;
  long long v101;
  long long v102;
  __int16 v103;
  long long v104;

  uint64_t v73 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v67 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v65 = (uint64_t)&v63 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  long long v68 = AssociatedTypeWitness;
  uint64_t v9 = sub_255C7E458();
  long long v69 = *(void **)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v64 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v66 = (uint64_t)&v63 - v12;
  uint64_t v76 = v13;
  uint64_t v14 = sub_255C80E88();
  uint64_t v72 = *(ValueMetadata **)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v77 = (uint64_t)&v63 - v18;
  uint64_t KeyPath = (ValueMetadata *)swift_getKeyPath();
  *(void *)&long long v63 = *(void *)(a3 + 8);
  uint64_t v20 = sub_255C7E628();
  uint64_t v91 = KeyPath;
  uint64_t v92 = 0u;
  uint64_t v93 = 0u;
  uint64_t v94 = 0u;
  uint64_t v95 = 0u;
  uint64_t v96 = 0;
  *(void *)&uint64_t v97 = v20;
  *((void *)&v97 + 1) = v21;
  uint64_t v22 = _s18DefaultContentViewVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v71 = v22;
  sub_255A20F54(&v91);
  sub_255A1D054((uint64_t)KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  swift_unknownObjectRelease();
  uint64_t v23 = *(void *)(a1 + 96);
  uint64_t v24 = *(void *)(a1 + 104);
  char v25 = *(unsigned char *)(a1 + 112);
  sub_255A7663C(v23, v24, v25);
  sub_255ABBD20(v23, v24, v25, (uint64_t *)&v91);
  sub_255A767C8(v23, v24, v25);
  uint64_t v26 = v92;
  uint64_t v74 = v16;
  uint64_t v75 = v14;
  if ((void)v92)
  {
    char v27 = v91;
    char v28 = *(unsigned char *)(a1 + 128);
    uint64_t v29 = swift_retain();
    long long v30 = (ValueMetadata *)sub_255ABBAC4(v29, v28);
    swift_release();
    swift_getKeyPath();
    uint64_t v91 = v30;
    sub_255BA1A90();
    sub_255C7D718();
    swift_release();
    char v31 = BYTE1(v30[8].Description);
    swift_release();
    if ((v31 & 1) == 0)
    {
      sub_255C23448(*(void *)a1);
      long long v38 = *(void (**)(ValueMetadata ***__return_ptr, uint64_t, uint64_t))(a3 + 296);
      swift_unknownObjectRetain();
      v38(&v87, a2, a3);
      swift_unknownObjectRelease();
      uint64_t v85 = v87;
      id v86 = (uint64_t)v88;
      uint64_t v83 = (uint64_t)v27;
      uint64_t v84 = v26;
      long long v39 = sub_255AB6114();
      char v40 = v68;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v91 = &type metadata for NowPlayingHostedContentID;
      *(void *)&uint64_t v92 = v40;
      *((void *)&v92 + 1) = v39;
      *(void *)&uint64_t v93 = AssociatedConformanceWitness;
      char v42 = type metadata accessor for ContentLookup();
      uint64_t v43 = v65;
      sub_255A9A0F8((uint64_t)&v83, v42);
      swift_bridgeObjectRelease();
      swift_release();
      sub_255AB84D4();
      char v44 = v64;
      sub_255C7F608();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v43, v40);
      uint64_t v45 = sub_255BA2174();
      long long v68 = AssociatedConformanceWitness;
      uint64_t v78 = AssociatedConformanceWitness;
      uint64_t v79 = v45;
      char v46 = v76;
      swift_getWitnessTable();
      long long v47 = v66;
      sub_255A20F54(v44);
      long long v48 = v69;
      long long v49 = (void (*)(uint64_t, uint64_t))v69[1];
      v49(v44, v46);
      long long v50 = (uint64_t)v74;
      sub_255A20F54(v47);
      v49(v47, v46);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v48[7])(v50, 0, 1, v46);
      sub_255A97640(v50, v77);
      uint64_t v34 = (uint64_t)v72;
      Description = v72->Description;
      long long v67 = (unint64_t)&v72->Description & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      long long v52 = v75;
      long long v69 = Description;
      ((void (*)(uint64_t, uint64_t))Description)(v50, v75);
      uint64_t v36 = v52;
      long long v37 = (char *)v50;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v74;
    uint64_t v14 = v75;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v69[7])(v16, 1, 1, v76);
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  unint64_t v33 = sub_255BA2174();
  long long v68 = v32;
  unint64_t v89 = v32;
  uint64_t v90 = v33;
  swift_getWitnessTable();
  sub_255A97640((uint64_t)v16, v77);
  uint64_t v34 = (uint64_t)v72;
  long long v35 = v72->Description;
  long long v67 = (unint64_t)&v72->Description & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  long long v69 = v35;
  ((void (*)(char *, uint64_t))v35)(v16, v14);
  uint64_t v36 = v14;
  long long v37 = v16;
LABEL_6:
  uint64_t v72 = v98;
  long long v53 = *((void *)&v99 + 1);
  long long v54 = v100;
  long long v65 = *((void *)&v101 + 1);
  long long v55 = v101;
  long long v66 = v99;
  long long v56 = *((void *)&v102 + 1);
  long long v64 = v102;
  long long v57 = v103;
  char v58 = HIBYTE(v103);
  uint64_t v91 = v98;
  uint64_t v92 = v99;
  uint64_t v93 = v100;
  uint64_t v94 = v101;
  uint64_t v95 = v102;
  uint64_t v96 = v103;
  long long v63 = v104;
  uint64_t v97 = v104;
  uint64_t v87 = &v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v37, v77, v36);
  uint64_t v88 = v37;
  sub_255A1CFDC((uint64_t)v72, v66, v53, v54, *((uint64_t *)&v54 + 1), v55, v65, v64, v56, v57, v58);
  swift_unknownObjectRetain();
  long long v59 = v75;
  uint64_t v85 = (ValueMetadata **)v71;
  id v86 = v75;
  uint64_t v83 = WitnessTable;
  long long v60 = sub_255BA2174();
  uint64_t v81 = v68;
  uint64_t v82 = v60;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v84 = swift_getWitnessTable();
  sub_255AF64A0((uint64_t)&v87, 2uLL, (uint64_t)&v85);
  long long v61 = (void (*)(char *, uint64_t))v69;
  ((void (*)(uint64_t, uint64_t))v69)(v77, v59);
  sub_255A1D054((uint64_t)v98, v99, *((uint64_t *)&v99 + 1), v100, *((uint64_t *)&v100 + 1), v101, *((uint64_t *)&v101 + 1), v102, *((uint64_t *)&v102 + 1), v103, SHIBYTE(v103));
  swift_unknownObjectRelease();
  v61(v74, v59);
  sub_255A1D054((uint64_t)v91, v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((uint64_t *)&v95 + 1), v96, SHIBYTE(v96));
  return swift_unknownObjectRelease();
}

uint64_t sub_255BA0A80()
{
  long long v1 = v0[3];
  long long v13 = v0[2];
  *(_OWORD *)uint64_t v14 = v1;
  long long v2 = v0[5];
  *(_OWORD *)&v14[16] = v0[4];
  long long v15 = v2;
  long long v3 = v0[1];
  long long v11 = *v0;
  long long v12 = v3;
  sub_255C7EA58();
  *(void *)&v20[0] = _s21FullScreenArtworkViewVMa();
  *((void *)&v20[0] + 1) = _s33DefaultMetadataAndContextMenuViewVMa();
  *(void *)&v20[1] = _s10BannerViewVMa();
  _s15TimeControlViewVMa();
  *((void *)&v20[1] + 1) = sub_255C7E458();
  *(void *)&_DWORD v20[2] = _s12ControlsViewVMa();
  swift_getTupleTypeMetadata();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF88();
  memcpy(__dst, __src, 0x119uLL);
  memcpy(v6, __src, 0x119uLL);
  v16[2] = v13;
  v17[0] = *(_OWORD *)v14;
  *(_OWORD *)((char *)v17 + 10) = *(_OWORD *)&v14[10];
  v16[0] = v11;
  v16[1] = v12;
  long long v9 = v13;
  v10[0] = *(_OWORD *)v14;
  *(_OWORD *)((char *)v10 + 10) = *(_OWORD *)&v14[10];
  long long v7 = v11;
  long long v8 = v12;
  sub_255B5A588((uint64_t)v16, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v5);
  sub_255B5A588((uint64_t)v16, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  v20[0] = v5[0];
  LOBYTE(v20[1]) = v5[1];
  *(_WORD *)((char *)&v20[1] + 1) = *(_WORD *)((char *)&v5[1] + 1);
  *((void *)&v20[1] + 1) = *((void *)&v5[1] + 1);
  LOBYTE(v20[2]) = v5[2];
  *(_OWORD *)((char *)&v20[2] + 8) = *(_OWORD *)((char *)&v5[2] + 8);
  *(_OWORD *)((char *)&v20[3] + 8) = *(_OWORD *)((char *)&v5[3] + 8);
  BYTE8(v20[4]) = BYTE8(v5[4]);
  sub_255B9F314();
  sub_255C801F8();
  sub_255C7FF98();
  swift_getWitnessTable();
  sub_255C7FA38();
  sub_255BA2620((uint64_t)__dst);
  memcpy(__src, v20, sizeof(__src));
  memcpy(v5, v20, sizeof(v5));
  sub_255C7E458();
  swift_getWitnessTable();
  sub_255A20F54(v5);
  sub_255BA2620((uint64_t)__src);
  memcpy(v20, v6, sizeof(v20));
  memcpy(v5, v6, sizeof(v5));
  sub_255A20F54(v5);
  return sub_255BA2620((uint64_t)v20);
}

uint64_t sub_255BA0DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (_OWORD *)a1;
  uint64_t v6 = *(void *)(a1 + 80);
  sub_255C23448(v6);
  long long v7 = *(void (**)(uint64_t, uint64_t))(a3 + 208);
  long long v39 = v7;
  swift_unknownObjectRetain();
  v7(a2, a3);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  *(void *)long long v69 = sub_255BE1660();
  *(void *)&v69[8] = v8;
  uint64_t v41 = _s21FullScreenArtworkViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(v69);
  swift_release();
  sub_255BE16DC((uint64_t)v69);
  uint64_t v9 = *(void *)&v69[16];
  LOBYTE(v7) = v70[0];
  *(_OWORD *)long long v62 = *(_OWORD *)v69;
  *(void *)&v62[16] = *(void *)&v69[16];
  v63[0] = v70[0];
  uint64_t v40 = _s33DefaultMetadataAndContextMenuViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(v62);
  swift_unknownObjectRelease();
  sub_255A087D0(v9, (char)v7);
  sub_255C23448(v6);
  swift_unknownObjectRetain();
  v39(a2, a3);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_255BC1BF8((uint64_t)v69);
  uint64_t v10 = *(void *)&v69[16];
  char v11 = v70[0];
  *(_OWORD *)long long v62 = *(_OWORD *)v69;
  *(void *)&v62[16] = *(void *)&v69[16];
  v63[0] = v70[0];
  *(_OWORD *)&v63[8] = *(_OWORD *)&v70[8];
  uint64_t v38 = _s10BannerViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(v62);
  swift_release();
  sub_255A087D0(v10, v11);
  swift_unknownObjectRelease();
  CGSizeMake(a2, a3);
  sub_255C7F1B8();
  long long v12 = v5[3];
  v91[2] = v5[2];
  v92[0] = v12;
  *(_OWORD *)((char *)v92 + 10) = *(_OWORD *)((char *)v5 + 58);
  long long v13 = v5[1];
  v91[0] = *v5;
  v91[1] = v13;
  sub_255B5A588((uint64_t)v91, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v69);
  sub_255B5A588((uint64_t)v91, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  *(_OWORD *)long long v62 = *(_OWORD *)v69;
  v62[16] = v69[16];
  *(_WORD *)&v62[17] = *(_WORD *)&v69[17];
  *(void *)long long v63 = *(void *)v70;
  v63[8] = v70[8];
  *(_OWORD *)&v63[16] = *(_OWORD *)&v70[16];
  long long v64 = v71;
  LOBYTE(v65) = v72;
  sub_255BD1754();
  _s15TimeControlViewVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  v69[0] = v62[0];
  *(_OWORD *)&v69[8] = *(_OWORD *)&v62[8];
  *(_OWORD *)char v70 = *(_OWORD *)v63;
  v70[16] = v63[16];
  uint64_t v37 = sub_255C7E458();
  uint64_t v76 = WitnessTable;
  uint64_t v77 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_255A20F54(v69);
  sub_255B59F30((uint64_t)v62);
  uint64_t v33 = *(void *)&v62[8];
  uint64_t v34 = *(void *)v62;
  uint64_t v32 = *(void *)&v62[16];
  uint64_t v15 = *(void *)v63;
  long long v16 = *(_OWORD *)&v63[8];
  uint64_t v17 = *(void *)&v63[24];
  long long v18 = v64;
  LOBYTE(v9) = v65;
  LOBYTE(WitnessTable) = HIBYTE(v65);
  long long v52 = *(_OWORD *)v62;
  uint64_t v53 = *(void *)&v62[16];
  uint64_t v54 = *(void *)v63;
  long long v55 = *(_OWORD *)&v63[8];
  uint64_t v56 = *(void *)&v63[24];
  long long v57 = v64;
  __int16 v58 = v65;
  long long v59 = v66;
  long long v60 = v67;
  char v61 = v68;
  uint64_t v36 = _s12ControlsViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(&v52);
  sub_255A1D054(v34, v33, v32, v15, v16, *((uint64_t *)&v16 + 1), v17, v18, *((uint64_t *)&v18 + 1), v9, WitnessTable);
  swift_unknownObjectRelease();
  swift_release();
  v50[0] = v89;
  v50[1] = v90;
  uint64_t v35 = v87;
  LOBYTE(v33) = v88;
  long long v47 = v86;
  uint64_t v48 = v87;
  char v49 = v88;
  v51[0] = v50;
  v51[1] = &v47;
  uint64_t v31 = v83;
  char v30 = v84;
  long long v52 = v82;
  uint64_t v53 = v83;
  LOBYTE(v54) = v84;
  long long v55 = v85;
  char v43 = v78;
  long long v44 = v79;
  long long v45 = v80;
  char v46 = v81;
  v51[2] = &v52;
  v51[3] = &v43;
  long long v19 = *(_OWORD *)v69;
  uint64_t v20 = *(void *)&v69[16];
  uint64_t v21 = *(void *)v70;
  long long v22 = *(_OWORD *)&v70[8];
  uint64_t v23 = *(void *)&v70[24];
  long long v24 = v71;
  LOBYTE(v17) = v72;
  LOBYTE(v5) = HIBYTE(v72);
  *(_OWORD *)long long v62 = *(_OWORD *)v69;
  *(void *)&v62[16] = *(void *)&v69[16];
  *(void *)long long v63 = *(void *)v70;
  *(_OWORD *)&v63[8] = *(_OWORD *)&v70[8];
  *(void *)&v63[24] = *(void *)&v70[24];
  long long v64 = v71;
  __int16 v65 = v72;
  long long v66 = v73;
  long long v67 = v74;
  char v68 = v75;
  v51[4] = v62;
  swift_unknownObjectRetain();
  swift_retain();
  sub_255A0877C(v35, v33);
  swift_retain();
  sub_255A0877C(v31, v30);
  swift_unknownObjectRetain();
  sub_255A1CFDC(v19, *((uint64_t *)&v19 + 1), v20, v21, v22, *((uint64_t *)&v22 + 1), v23, v24, *((uint64_t *)&v24 + 1), v17, (char)v5);
  swift_retain();
  swift_unknownObjectRetain();
  v42[0] = v41;
  v42[1] = v40;
  v42[2] = v38;
  v42[3] = v37;
  v42[4] = v36;
  sub_255AF64A0((uint64_t)v51, 5uLL, (uint64_t)v42);
  sub_255A1D054(*(uint64_t *)v69, *(uint64_t *)&v69[8], *(uint64_t *)&v69[16], *(uint64_t *)v70, *(uint64_t *)&v70[8], *(uint64_t *)&v70[16], *(uint64_t *)&v70[24], v71, *((uint64_t *)&v71 + 1), v72, SHIBYTE(v72));
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v25 = v83;
  LOBYTE(v9) = v84;
  swift_release();
  sub_255A087D0(v25, v9);
  swift_unknownObjectRelease();
  uint64_t v26 = v87;
  LOBYTE(v9) = v88;
  swift_unknownObjectRelease();
  sub_255A087D0(v26, v9);
  swift_release();
  sub_255A1D054(*(uint64_t *)v62, *(uint64_t *)&v62[8], *(uint64_t *)&v62[16], *(uint64_t *)v63, *(uint64_t *)&v63[8], *(uint64_t *)&v63[16], *(uint64_t *)&v63[24], v64, *((uint64_t *)&v64 + 1), v65, SHIBYTE(v65));
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v27 = v53;
  LOBYTE(v9) = v54;
  swift_release();
  sub_255A087D0(v27, v9);
  swift_unknownObjectRelease();
  uint64_t v28 = v48;
  LOBYTE(v9) = v49;
  swift_unknownObjectRelease();
  sub_255A087D0(v28, v9);
  return swift_release();
}

double sub_255BA1698@<D0>(uint64_t a1@<X8>)
{
  DeviceMetrics.padding.getter((uint64_t)&v3);
  double result = v4;
  *(_OWORD *)a1 = v3;
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t sub_255BA1720(uint64_t a1)
{
  return sub_255A31D88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_255BA1734(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A322FC(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_255BA1794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_255A322FC(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_255A31D88(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_255BA1804(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_255A31D88(v5, v7, v6, v8);
  return a1;
}

uint64_t _s37FullScreenContentView_RegularExtendedVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BA186C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s11ContentViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BA18C8@<X0>(uint64_t a1@<X8>)
{
  return sub_255B9F8E8(a1);
}

uint64_t sub_255BA18D0(uint64_t a1)
{
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 88);
  char v9 = *(unsigned char *)(a1 + 89);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 112);
  swift_unknownObjectRelease();
  sub_255A1D054(v16, v15, v14, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_255A767C8(v10, v13, v12);
  swift_release();
  return a1;
}

uint64_t sub_255BA19A4(uint64_t a1)
{
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 88);
  char v9 = *(unsigned char *)(a1 + 89);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 112);
  swift_unknownObjectRetain();
  sub_255A1CFDC(v16, v15, v14, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_255A7663C(v10, v13, v12);
  swift_retain();
  return a1;
}

unint64_t sub_255BA1A90()
{
  unint64_t result = qword_26B298EB0;
  if (!qword_26B298EB0)
  {
    type metadata accessor for WindowProperties();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298EB0);
  }
  return result;
}

uint64_t sub_255BA1AE8(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_255A1D054(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88), *(unsigned char *)(a1 + 89));
  sub_255A767C8(*(void *)(a1 + 96), *(void *)(a1 + 104), *(unsigned char *)(a1 + 112));

  return swift_release();
}

uint64_t sub_255BA1B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 72);
  char v11 = *(unsigned char *)(a2 + 88);
  char v12 = *(unsigned char *)(a2 + 89);
  swift_unknownObjectRetain();
  sub_255A1CFDC(v19, v18, v5, v6, v7, v8, v9, v17, v10, v11, v12);
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v18;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v17;
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 89) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 104);
  LOBYTE(v10) = *(unsigned char *)(a2 + 112);
  sub_255A7663C(v13, v14, v10);
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  *(unsigned char *)(a1 + 112) = v10;
  char v15 = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = v15;
  swift_retain();
  return a1;
}

uint64_t sub_255BA1C7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v30 = *(void *)(a2 + 80);
  char v31 = *(unsigned char *)(a2 + 88);
  char v32 = *(unsigned char *)(a2 + 89);
  sub_255A1CFDC(v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  char v21 = *(unsigned char *)(a1 + 88);
  char v22 = *(unsigned char *)(a1 + 89);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v30;
  *(unsigned char *)(a1 + 88) = v31;
  *(unsigned char *)(a1 + 89) = v32;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(a2 + 96);
  uint64_t v24 = *(void *)(a2 + 104);
  LOBYTE(v6) = *(unsigned char *)(a2 + 112);
  sub_255A7663C(v23, v24, v6);
  uint64_t v25 = *(void *)(a1 + 96);
  uint64_t v26 = *(void *)(a1 + 104);
  char v27 = *(unsigned char *)(a1 + 112);
  *(void *)(a1 + 96) = v23;
  *(void *)(a1 + 104) = v24;
  *(unsigned char *)(a1 + 112) = v6;
  sub_255A767C8(v25, v26, v27);
  char v28 = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = v28;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_255BA1E14(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 88);
  char v5 = *(unsigned char *)(a2 + 89);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  char v15 = *(unsigned char *)(a1 + 88);
  char v16 = *(unsigned char *)(a1 + 89);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v4;
  *(unsigned char *)(a1 + 89) = v5;
  sub_255A1D054(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  char v17 = *(unsigned char *)(a2 + 112);
  uint64_t v18 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 104);
  char v20 = *(unsigned char *)(a1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = v17;
  sub_255A767C8(v18, v19, v20);
  char v21 = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = v21;
  swift_release();
  return a1;
}

uint64_t sub_255BA1EEC(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 129)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255BA1F48(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_255BA1FC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BA210C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s18DefaultContentViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BA2168@<X0>(uint64_t a1@<X8>)
{
  return sub_255BA01F8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_255BA2174()
{
  unint64_t result = qword_269F21DA8;
  if (!qword_269F21DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F21DA8);
  }
  return result;
}

uint64_t sub_255BA21D8(uint64_t a1)
{
  sub_255A1D054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72), *(unsigned char *)(a1 + 73));

  return swift_unknownObjectRelease();
}

uint64_t sub_255BA2240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  char v15 = *(unsigned char *)(a2 + 72);
  char v16 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = v15;
  *(unsigned char *)(a1 + 73) = v16;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_255BA2318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 72);
  char v26 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 73);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  *(unsigned char *)(a1 + 72) = v25;
  *(unsigned char *)(a1 + 73) = v26;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t sub_255BA2430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  char v6 = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  char v16 = *(unsigned char *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 73);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 73) = v6;
  sub_255A1D054(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t sub_255BA24CC()
{
  _s18DefaultContentViewVMa();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FED8();

  return swift_getWitnessTable();
}

uint64_t sub_255BA25D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BA2614()
{
  return sub_255BA0DF4(v0[4], v0[2], v0[3]);
}

uint64_t sub_255BA2620(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 88);
  char v5 = *(unsigned char *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 168);
  uint64_t v14 = *(void *)(a1 + 192);
  uint64_t v15 = *(void *)(a1 + 184);
  uint64_t v12 = *(void *)(a1 + 208);
  uint64_t v13 = *(void *)(a1 + 200);
  uint64_t v6 = *(void *)(a1 + 232);
  uint64_t v10 = *(void *)(a1 + 224);
  uint64_t v11 = *(void *)(a1 + 216);
  char v7 = *(unsigned char *)(a1 + 240);
  char v8 = *(unsigned char *)(a1 + 241);
  swift_release();
  swift_unknownObjectRelease();
  sub_255A087D0(v2, v3);
  swift_release();
  sub_255A087D0(v4, v5);
  swift_unknownObjectRelease();
  sub_255A1D054(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7, v8);
  swift_unknownObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_255BA2738()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BA2890()
{
  sub_255A23024();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255BA28CC()
{
  id v0 = MTLCreateSystemDefaultDevice();
  type metadata accessor for MetalRenderContext();
  swift_allocObject();
  uint64_t result = sub_255BA2914(v0);
  qword_269F332D8 = result;
  return result;
}

uint64_t sub_255BA2914(void *a1)
{
  uint64_t v2 = v1;
  cacheOut[1] = *(CVMetalTextureCacheRef *)MEMORY[0x263EF8340];
  if (!a1)
  {
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_255C7D898();
    __swift_project_value_buffer(v15, (uint64_t)qword_269F332E0);
    uint64_t v16 = sub_255C7D878();
    os_log_type_t v17 = sub_255C80BE8();
    if (os_log_type_enabled(v16, v17))
    {
      long long v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v18 = 0;
      _os_log_impl(&dword_255A00000, v16, v17, "Couldn't init MetalRenderContext, device was nil", v18, 2u);
      MEMORY[0x25A297C00](v18, -1, -1);
    }

    goto LABEL_32;
  }
  *(void *)(v1 + 16) = a1;
  id v4 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_newCommandQueue);
  if (!v4)
  {
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_255C7D898();
    __swift_project_value_buffer(v19, (uint64_t)qword_269F332E0);
    uint64_t v20 = sub_255C7D878();
    os_log_type_t v21 = sub_255C80BE8();
    if (os_log_type_enabled(v20, v21))
    {
      char v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v22 = 0;
      _os_log_impl(&dword_255A00000, v20, v21, "Couldn't create command queue", v22, 2u);
      MEMORY[0x25A297C00](v22, -1, -1);
    }

    swift_unknownObjectRelease_n();
    goto LABEL_31;
  }
  *(void *)(v1 + 24) = v4;
  uint64_t v5 = qword_26B29F398;
  swift_unknownObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  cacheOut[0] = 0;
  id v6 = objc_msgSend(a1, sel_newDefaultLibraryWithBundle_error_, qword_26B2AA660, cacheOut);
  CVMetalTextureCacheRef v7 = cacheOut[0];
  if (!v6)
  {
    uint64_t v23 = cacheOut[0];
    uint64_t v24 = (void *)sub_255C7D4D8();

    swift_willThrow();
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_255C7D898();
    __swift_project_value_buffer(v25, (uint64_t)qword_269F332E0);
    id v26 = v24;
    id v27 = v24;
    char v28 = sub_255C7D878();
    os_log_type_t v29 = sub_255C80BE8();
    if (os_log_type_enabled(v28, v29))
    {
      log = v28;
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      char v31 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138543362;
      id v32 = v24;
      uint64_t v33 = (__CVMetalTextureCache *)_swift_stdlib_bridgeErrorToNSError();
      cacheOut[0] = v33;
      sub_255C80F18();
      void *v31 = v33;

      _os_log_impl(&dword_255A00000, log, v29, "Couldn't create default library: %{public}@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F27D60);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v31, -1, -1);
      MEMORY[0x25A297C00](v30, -1, -1);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_31;
  }
  *(void *)(v2 + 32) = v6;
  cacheOut[0] = 0;
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v9 = v7;
  CVReturn v10 = CVMetalTextureCacheCreate(v8, 0, a1, 0, cacheOut);
  CVMetalTextureCacheRef v11 = cacheOut[0];
  if (!cacheOut[0] || v10)
  {
    if (qword_269F20130 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_255C7D898();
    __swift_project_value_buffer(v34, (uint64_t)qword_269F332E0);
    uint64_t v35 = sub_255C7D878();
    os_log_type_t v36 = sub_255C80BE8();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 67109120;
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v35, v36, "Couldn't create CVMetalTextureCache: %d", v37, 8u);
      MEMORY[0x25A297C00](v37, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_31:
    swift_unknownObjectRelease();
LABEL_32:
    type metadata accessor for MetalRenderContext();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(CVMetalTextureCacheRef *)(v2 + 56) = cacheOut[0];
  id v12 = objc_allocWithZone(MEMORY[0x263F12D88]);
  uint64_t v13 = v11;
  *(void *)(v2 + 40) = objc_msgSend(v12, sel_initWithDevice_, a1);
  uint64_t v14 = sub_255BA2F54();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
  *(void *)(v2 + 48) = v14;

  return v2;
}

uint64_t sub_255BA2F54()
{
  if (objc_msgSend(v0, sel_supportsFamily_, 1003)
    && (uint64_t v1 = (void *)sub_255C805F8(), v2 = MGGetBoolAnswer(), v1, v2)
    && MGGetProductType() != 33245053)
  {
    return 552;
  }
  else
  {
    return 80;
  }
}

uint64_t sub_255BA2FD8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalRenderContext()
{
  return self;
}

uint64_t sub_255BA3054()
{
  if (qword_269F20120 != -1) {
    swift_once();
  }
  qword_269F25AA0 = qword_269F332D8;

  return swift_retain();
}

uint64_t sub_255BA30B8@<X0>(void *a1@<X8>)
{
  if (qword_269F20128 != -1) {
    swift_once();
  }
  *a1 = qword_269F25AA0;

  return swift_retain();
}

uint64_t sub_255BA3124()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F332E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F332E0);
  return sub_255C7D888();
}

ValueMetadata *_s21MetalRenderContextKeyVMa()
{
  return &_s21MetalRenderContextKeyVN;
}

uint64_t sub_255BA31A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for Geometry();
  sub_255BAAEE4(&qword_26B29B0F8, (void (*)(uint64_t))type metadata accessor for Geometry);
  swift_bridgeObjectRetain();
  uint64_t v10 = KeyPath;
  char v11 = 0;
  uint64_t v12 = sub_255C7E628();
  uint64_t v13 = v8;
  uint64_t v14 = v6;
  uint64_t v15 = v5;
  MEMORY[0x25A295390](&v10, a2, &type metadata for PublishGeometryModifier, a3);
  sub_255A087D0(KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_255BA32B0@<X0>(void *a1@<X8>)
{
  sub_255BAAF2C();
  uint64_t result = sub_255C7E8C8();
  if (v4) {
    __break(1u);
  }
  else {
    *a1 = v3;
  }
  return result;
}

uint64_t sub_255BA330C()
{
  return sub_255C7E8D8();
}

uint64_t NowPlayingGeometryIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t static NowPlayingGeometryIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_255C81428();
  }
}

uint64_t NowPlayingGeometryIdentifier.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255BA3440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AC0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  CVMetalTextureCacheRef v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AC8);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = v2[1];
  long long v33 = *v2;
  long long v34 = v12;
  long long v35 = v2[2];
  long long v36 = v35;
  long long v13 = v35;
  uint64_t v14 = v33;
  char v15 = BYTE8(v33);
  sub_255AE128C((uint64_t)&v36);
  sub_255A0877C(v14, v15);
  uint64_t v16 = sub_255ABBAE0(v14, v15);
  sub_255A087D0(v14, v15);
  LODWORD(v14) = sub_255C7EF68();
  sub_255C80378();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AD0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v7, a1, v21);
  char v22 = &v7[*(int *)(v5 + 44)];
  *(_OWORD *)char v22 = v13;
  *((void *)v22 + 2) = v16;
  *((_DWORD *)v22 + 6) = v14;
  *((void *)v22 + 4) = v18;
  *((void *)v22 + 5) = v20;
  v22[48] = 1;
  uint64_t v23 = (uint64_t (*)())swift_allocObject();
  long long v24 = v34;
  *((_OWORD *)v23 + 1) = v33;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v35;
  sub_255A09540((uint64_t)v7, (uint64_t)v11, &qword_269F25AC0);
  uint64_t v25 = (uint64_t (**)())&v11[*(int *)(v9 + 44)];
  char *v25 = sub_255BA47D4;
  v25[1] = v23;
  v25[2] = 0;
  v25[3] = 0;
  sub_255BA47DC((uint64_t)&v33);
  sub_255A095A4((uint64_t)v7, &qword_269F25AC0);
  id v26 = (_OWORD *)swift_allocObject();
  long long v27 = v34;
  v26[1] = v33;
  v26[2] = v27;
  v26[3] = v35;
  uint64_t v28 = v32;
  sub_255A09540((uint64_t)v11, v32, &qword_269F25AC8);
  os_log_type_t v29 = (void *)(v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F25AD8) + 36));
  void *v29 = 0;
  v29[1] = 0;
  v29[2] = sub_255BA4830;
  v29[3] = v26;
  sub_255BA47DC((uint64_t)&v33);
  return sub_255A095A4((uint64_t)v11, &qword_269F25AC8);
}

uint64_t sub_255BA36E4(void *a1)
{
  if (a1[2])
  {
    uint64_t v1 = a1[4];
    uint64_t v2 = a1[5];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v3 = (void (*)(uint64_t *, void))sub_255C7DAB8();
    sub_255BA6D88(&v6, v1, v2);
    swift_bridgeObjectRelease();
    v3(&v5, 0);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for Geometry();
    sub_255BAAEE4(&qword_26B29B0F8, (void (*)(uint64_t))type metadata accessor for Geometry);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BA3820(void *a1)
{
  if (a1[2])
  {
    uint64_t v1 = a1[4];
    uint64_t v2 = a1[5];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v3 = (void (*)(uint64_t *, void))sub_255C7DAB8();
    sub_255BAA1C8(v1, v2, &v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3(&v5, 0);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for Geometry();
    sub_255BAAEE4(&qword_26B29B0F8, (void (*)(uint64_t))type metadata accessor for Geometry);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BA3968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = *(void *)v2;
    char v6 = *(unsigned char *)(v2 + 8);
    uint64_t v8 = *(void *)(v2 + 32);
    uint64_t v7 = *(void *)(v2 + 40);
    int v9 = *(_DWORD *)(v2 + 48);
    uint64_t v10 = *(void *)(v2 + 56);
    uint64_t v11 = *(void *)(v2 + 64);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    char v12 = sub_255BEA360(v8, v7, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRetain();
      sub_255A0877C(v5, v6);
      uint64_t v13 = sub_255ABBAE0(v5, v6);
      sub_255A087D0(v5, v6);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AF0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a2, a1, v14);
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AE8);
      uint64_t v16 = a2 + *(int *)(v15 + 36);
      *(void *)uint64_t v16 = v8;
      *(void *)(v16 + 8) = v7;
      *(void *)(v16 + 16) = v13;
      *(_DWORD *)(v16 + 24) = v9;
      *(void *)(v16 + 32) = v10;
      *(void *)(v16 + 40) = v11;
      *(unsigned char *)(v16 + 48) = 0;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
    }
    else
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AE8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
    }
  }
  else
  {
    type metadata accessor for Geometry();
    sub_255BAAEE4(&qword_26B29B0F8, (void (*)(uint64_t))type metadata accessor for Geometry);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t MCUINamespace<A>.matchToNowPlayingView(_:properties:anchor:)(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for Geometry();
  sub_255BAAEE4(&qword_26B29B0F8, (void (*)(uint64_t))type metadata accessor for Geometry);
  swift_bridgeObjectRetain();
  uint64_t v16 = KeyPath;
  char v17 = 0;
  uint64_t v18 = sub_255C7E628();
  uint64_t v19 = v14;
  uint64_t v20 = v12;
  uint64_t v21 = v11;
  int v22 = a2;
  double v23 = a5;
  double v24 = a6;
  MEMORY[0x25A295390](&v16, *(void *)(a3 + 16), &type metadata for MatchGeometryModifier, a4);
  sub_255A087D0(KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_255BA3CF4()
{
  return sub_255C7E8D8();
}

uint64_t type metadata accessor for Geometry()
{
  uint64_t result = qword_26B29B100;
  if (!qword_26B29B100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MCUINamespace<A>.matchToNowPlayingButton(_:properties:anchor:)(double a1, double a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_255C810E8();
  swift_bridgeObjectRelease();
  v12[0] = 0xD000000000000011;
  v12[1] = 0x8000000255C9EC10;
  swift_bridgeObjectRetain();
  sub_255C806E8();
  swift_bridgeObjectRelease_n();
  MCUINamespace<A>.matchToNowPlayingView(_:properties:anchor:)(v12, a4, a5, a6, a1, a2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_255BA3E98()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255BA3F0C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI8Geometry__visibleViews;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255BA3FB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Geometry();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t View.matchToNowPlayingView(_:properties:anchor:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return sub_255BA4020(a1, a2, a3, a4, (void (*)(void *, uint64_t, uint64_t, uint64_t, double, double))MCUINamespace<A>.matchToNowPlayingView(_:properties:anchor:), a5, a6);
}

uint64_t View.matchToNowPlayingButton(_:properties:anchor:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return sub_255BA4020(a1, a2, a3, a4, (void (*)(void *, uint64_t, uint64_t, uint64_t, double, double))MCUINamespace<A>.matchToNowPlayingButton(_:properties:anchor:), a5, a6);
}

uint64_t sub_255BA4020(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t, uint64_t, uint64_t, double, double), double a6, double a7)
{
  uint64_t v21 = a5;
  uint64_t v13 = type metadata accessor for MCUINamespace();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v20 - v15;
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  View.mcui.getter(a3, (uint64_t)&v20 - v15);
  v22[0] = v17;
  v22[1] = v18;
  v21(v22, a2, v13, a4, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_255BA4164()
{
  unint64_t result = qword_26B29AE20[0];
  if (!qword_26B29AE20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B29AE20);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingGeometryIdentifier()
{
  return &type metadata for NowPlayingGeometryIdentifier;
}

uint64_t sub_255BA41C8()
{
  return type metadata accessor for Geometry();
}

void sub_255BA41D0()
{
  sub_255BA4260();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255BA4260()
{
  if (!qword_26B29B4F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B297C30);
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29B4F8);
    }
  }
}

uint64_t sub_255BA42BC()
{
  return swift_getWitnessTable();
}

unint64_t sub_255BA4320()
{
  unint64_t result = qword_269F25AB8;
  if (!qword_269F25AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25AB8);
  }
  return result;
}

uint64_t initializeWithCopy for MatchGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MatchGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for MatchGeometryModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatchGeometryModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MatchGeometryModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatchGeometryModifier()
{
  return &type metadata for MatchGeometryModifier;
}

uint64_t _s11MediaCoreUI21MatchGeometryModifierVwxx_0(uint64_t a1)
{
  sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PublishGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PublishGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PublishGeometryModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PublishGeometryModifier()
{
  return &type metadata for PublishGeometryModifier;
}

uint64_t sub_255BA4798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BA47B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BA47D4()
{
  return sub_255BA36E4((void *)(v0 + 16));
}

uint64_t sub_255BA47DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_255BA4830()
{
  return sub_255BA3820((void *)(v0 + 16));
}

uint64_t sub_255BA4838@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_255BA48BC()
{
  return sub_255C7DAD8();
}

uint64_t sub_255BA493C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_255C7D5C8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B18);
  uint64_t v5 = sub_255C810A8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    long long v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_255BAAEE4(&qword_269F24888, MEMORY[0x263F06EA8]);
      uint64_t result = sub_255C804E8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_255BA4D38()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AF8);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_255C80DC8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_255BA4FD8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_255C7D6A8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B28);
  uint64_t v5 = sub_255C810A8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    long long v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_255BAAEE4(&qword_269F24898, MEMORY[0x263F07508]);
      uint64_t result = sub_255C804E8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_255BA53D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B20);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_255C81578();
      sub_255C806B8();
      uint64_t result = sub_255C815B8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_255BA56B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B10);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    BOOL v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_255C80628();
      sub_255C81578();
      sub_255C806B8();
      uint64_t v18 = sub_255C815B8();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_255BA59C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B08);
  uint64_t result = sub_255C810A8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    BOOL v27 = v1;
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_255C81568();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_255BA5C60()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AE0);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_255C81578();
      swift_bridgeObjectRetain();
      sub_255C806B8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_255C815B8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_255BA5F50(uint64_t a1, uint64_t a2)
{
  sub_255C80DC8();
  unint64_t result = sub_255C80F98();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_255BA5FD4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_255BAAEE4(&qword_269F24888, MEMORY[0x263F06EA8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_255C804E8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    int64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_255BAAEE4(&qword_269F213B8, MEMORY[0x263F06EA8]);
      char v21 = sub_255C80578();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_255BA7130((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_255BA62F8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_255C7D6A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_255BAAEE4(&qword_269F24898, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_255C804E8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    int64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_255BAAEE4(&qword_269F248A0, MEMORY[0x263F07508]);
      char v21 = sub_255C80578();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_255BA73EC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_255BA661C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_255C81008();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_255BAAB88();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_255C80FF8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_255BA6F48(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_255BA4D38();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_255BA5F50((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_255C80DC8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_255BAAB88();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_255C80DD8();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_255C80DD8();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    id v8 = a2;
    sub_255BA76A8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_255BA689C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_255C81578();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  uint64_t v8 = sub_255C815B8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_255C81428() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_255C81428() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_255BA7820(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_255BA6A4C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_255C80628();
  sub_255C81578();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  uint64_t v7 = sub_255C815B8();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_255BA79BC((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_255C80628();
  uint64_t v12 = v11;
  if (v10 == sub_255C80628() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_255C81428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_255C80628();
        uint64_t v19 = v18;
        if (v17 == sub_255C80628() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_255C81428();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_255BA6C78(double *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_255C81568();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_255BA7BEC(v9, isUniquelyReferenced_nonNull_native, a2);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  double v11 = *(double *)(v10 + 8 * v9);
  if (v11 != a2)
  {
    uint64_t v13 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v13;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_8;
      }
      double v11 = *(double *)(v10 + 8 * v9);
    }
    while (v11 != a2);
  }
  uint64_t result = 0;
  a2 = v11;
LABEL_9:
  *a1 = a2;
  return result;
}

uint64_t sub_255BA6D88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_255C81578();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_255C815B8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_255C81428() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_255C81428() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_255BA7D20(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_255BA6F48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AF8);
    uint64_t v2 = sub_255C810B8();
    uint64_t v14 = v2;
    sub_255C80FB8();
    if (sub_255C81028())
    {
      sub_255BAAB88();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_255BA4D38();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_255C80DC8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_255C81028());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_255BA7130(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_255BA493C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_255BA8078(MEMORY[0x263F06EA8], &qword_269F25B18);
      goto LABEL_12;
    }
    sub_255BA89D4();
  }
  uint64_t v12 = *v3;
  sub_255BAAEE4(&qword_269F24888, MEMORY[0x263F06EA8]);
  uint64_t v13 = sub_255C804E8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    BOOL v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_255BAAEE4(&qword_269F213B8, MEMORY[0x263F06EA8]);
      char v21 = sub_255C80578();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_255C814A8();
  __break(1u);
  return result;
}

uint64_t sub_255BA73EC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_255C7D6A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_255BA4FD8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_255BA8078(MEMORY[0x263F07508], &qword_269F25B28);
      goto LABEL_12;
    }
    sub_255BA9000();
  }
  uint64_t v12 = *v3;
  sub_255BAAEE4(&qword_269F24898, MEMORY[0x263F07508]);
  uint64_t v13 = sub_255C804E8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    BOOL v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_255BAAEE4(&qword_269F248A0, MEMORY[0x263F07508]);
      char v21 = sub_255C80578();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_255C814A8();
  __break(1u);
  return result;
}

void sub_255BA76A8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_255BA4D38();
  }
  else
  {
    if (v7 > v6)
    {
      sub_255BA7ECC();
      goto LABEL_14;
    }
    sub_255BA8D84();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_255C80DC8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_255BAAB88();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_255C80DD8();

    if (v12)
    {
LABEL_13:
      sub_255C814A8();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_255C80DD8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_255BA7820(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_255BA53D4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_255BA8328();
      goto LABEL_22;
    }
    sub_255BA93B0();
  }
  uint64_t v11 = *v4;
  sub_255C81578();
  sub_255C806B8();
  uint64_t result = sub_255C815B8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    char v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_255C81428(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_255C814A8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_255C81428();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_255BA79BC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_255BA56B4();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_255BA84DC();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_255BA9660();
  }
  uint64_t v9 = *v3;
  sub_255C80628();
  sub_255C81578();
  sub_255C806B8();
  uint64_t v10 = sub_255C815B8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_255C80628();
  uint64_t v14 = v13;
  if (v12 == sub_255C80628() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_255C81428();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_255C80628();
      uint64_t v21 = v20;
      if (v19 == sub_255C80628() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_255C81428();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for URLResourceKey(0);
  uint64_t result = sub_255C814A8();
  __break(1u);
  return result;
}

uint64_t sub_255BA7BEC(uint64_t result, char a2, double a3)
{
  unint64_t v4 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0) {
    goto LABEL_14;
  }
  if (a2)
  {
    sub_255BA59C8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_255BA8688();
      goto LABEL_14;
    }
    sub_255BA9940();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_255C81568();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v4 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(double *)(v10 + 8 * v4) == a3)
    {
LABEL_13:
      uint64_t result = sub_255C814A8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        unint64_t v4 = (v4 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
          break;
        }
        if (*(double *)(v10 + 8 * v4) == a3) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(void *)(v12 + 48) + 8 * v4) = a3;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_255BA7D20(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_255BA5C60();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_255BA8820();
      goto LABEL_22;
    }
    sub_255BA9BB4();
  }
  uint64_t v11 = *v4;
  sub_255C81578();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_255C815B8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_255C81428(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_255C814A8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_255C81428();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

id sub_255BA7ECC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C81098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_255BA8078(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_255C81098();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_255BA8328()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C81098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_255BA84DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C81098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_255BA8688()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C81098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_255BA8820()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_255C81098();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_255BA89D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D5C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B18);
  uint64_t v7 = sub_255C810A8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_255BAAEE4(&qword_269F24888, MEMORY[0x263F06EA8]);
    uint64_t result = sub_255C804E8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA8D84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AF8);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_255C80DC8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA9000()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D6A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B28);
  uint64_t v7 = sub_255C810A8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_255BAAEE4(&qword_269F24898, MEMORY[0x263F07508]);
    uint64_t result = sub_255C804E8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA93B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B20);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_255C81578();
    swift_bridgeObjectRetain();
    sub_255C806B8();
    uint64_t result = sub_255C815B8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA9660()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B10);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_255C80628();
    sub_255C81578();
    id v18 = v17;
    sub_255C806B8();
    uint64_t v19 = sub_255C815B8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA9940()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25B08);
  uint64_t result = sub_255C810A8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_255C81568();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA9BB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25AE0);
  uint64_t v3 = sub_255C810A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_255C81578();
    swift_bridgeObjectRetain_n();
    sub_255C806B8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_255C815B8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_255BA9E70(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_255C81038();

    if (v5)
    {
      uint64_t v6 = sub_255BAA690();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_255C80DC8();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_255BAAB88();
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_255C80DD8();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_255C80DD8();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_255BA7ECC();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_255BAA81C(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_255BAA038(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_255C81578();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  uint64_t v6 = sub_255C815B8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  id v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_255C81428() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_255C81428() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_255BA8328();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_255BAA9C0(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_255BAA1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  sub_255C81578();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_255C815B8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_20:
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  uint64_t v12 = (void *)(v11 + 16 * v10);
  BOOL v13 = *v12 == a1 && v12[1] == a2;
  if (!v13 && (sub_255C81428() & 1) == 0)
  {
    uint64_t v20 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v20;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v21 = (void *)(v11 + 16 * v10);
      BOOL v22 = *v21 == a1 && v21[1] == a2;
    }
    while (!v22 && (sub_255C81428() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v3;
  uint64_t v23 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_255BA8820();
    uint64_t v15 = v23;
  }
  uint64_t v16 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v10);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *a3 = v18;
  a3[1] = v17;
  sub_255BAA9C0(v10);
  *uint64_t v3 = v23;

  return swift_bridgeObjectRelease();
}

uint64_t sub_255BAA394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_255C7D5C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_255BAAEE4(&qword_269F24888, MEMORY[0x263F06EA8]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_255C804E8();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_255BAAEE4(&qword_269F213B8, MEMORY[0x263F06EA8]);
      char v19 = sub_255C80578();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_255BA8078(MEMORY[0x263F06EA8], &qword_269F25B18);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_255BAABC8(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_255BAA690()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_255C80FF8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_255BA6F48(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_255C80DC8();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_255BAAB88();
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_255C80DD8();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_255BAA81C(v7);
      if (sub_255C80DD8())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_255C80DD8();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_255BAA81C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_255C80F88();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_255C80DC8();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_255BAA9C0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_255C80F88();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_255C81578();
        swift_bridgeObjectRetain();
        sub_255C806B8();
        uint64_t v10 = sub_255C815B8();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_255BAAB88()
{
  unint64_t result = qword_269F22950;
  if (!qword_269F22950)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F22950);
  }
  return result;
}

uint64_t sub_255BAABC8(int64_t a1)
{
  uint64_t v3 = sub_255C7D5C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_255C80F88();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      BOOL v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_255BAAEE4(&qword_269F24888, MEMORY[0x263F06EA8]);
        uint64_t v21 = sub_255C804E8();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_255BAAEE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255BAAF2C()
{
  unint64_t result = qword_26B29A728;
  if (!qword_26B29A728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A728);
  }
  return result;
}

unint64_t sub_255BAAF84()
{
  unint64_t result = qword_269F25B30;
  if (!qword_269F25B30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25AD8);
    sub_255BAB000();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25B30);
  }
  return result;
}

unint64_t sub_255BAB000()
{
  unint64_t result = qword_269F25B38;
  if (!qword_269F25B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25AC8);
    sub_255BAB134(&qword_269F25B40, &qword_269F25AC0, &qword_269F25B48, &qword_269F25AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25B38);
  }
  return result;
}

unint64_t sub_255BAB0A0()
{
  unint64_t result = qword_269F25B60;
  if (!qword_269F25B60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B68);
    sub_255BAB134(&qword_269F25B70, &qword_269F25AE8, &qword_269F25B78, &qword_269F25AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25B60);
  }
  return result;
}

uint64_t sub_255BAB134(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_255A09998(a3, a4);
    sub_255A09998(&qword_269F25B50, &qword_269F25B58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ParallaxHeader.init(parallaxBackground:content:fixedBackground:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  type metadata accessor for ParallaxContext();
  sub_255B53C5C();
  *(void *)a6 = sub_255C7DD58();
  *(unsigned char *)(a6 + 8) = v11 & 1;
  uint64_t v21 = a5;
  uint64_t v12 = (int *)type metadata accessor for ParallaxHeader();
  uint64_t v13 = (void *)(a6 + v12[20]);
  sub_255C7FE58();
  void *v13 = a4;
  v13[1] = v21;
  uint64_t v14 = (void *)(a6 + v12[21]);
  sub_255C7FE58();
  *uint64_t v14 = a4;
  v14[1] = v21;
  uint64_t v15 = (void *)(a6 + v12[22]);
  uint64_t v16 = sub_255C7FE58();
  *uint64_t v15 = a4;
  v15[1] = v21;
  uint64_t v17 = a1(v16);
  uint64_t v18 = a2(v17);
  return a3(v18);
}

uint64_t type metadata accessor for ParallaxHeader()
{
  return swift_getGenericMetadata();
}

uint64_t ParallaxHeader.init<>(parallaxBackground:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  type metadata accessor for ParallaxContext();
  sub_255B53C5C();
  *(void *)a3 = sub_255C7DD58();
  *(unsigned char *)(a3 + 8) = v6 & 1;
  uint64_t v13 = MEMORY[0x263F1BA08];
  uint64_t v7 = (int *)type metadata accessor for ParallaxHeader();
  uint64_t v8 = (void *)(a3 + v7[20]);
  sub_255C7FE58();
  *uint64_t v8 = a2;
  v8[1] = v13;
  uint64_t v9 = (void *)(a3 + v7[21]);
  sub_255C7FE58();
  *uint64_t v9 = a2;
  v9[1] = v13;
  unint64_t v10 = (void *)(a3 + v7[22]);
  uint64_t v11 = sub_255C7FE58();
  *unint64_t v10 = a2;
  v10[1] = v13;
  return a1(v11);
}

uint64_t sub_255BAB4D0()
{
  char v1 = *(unsigned char *)(v0 + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_255ABD494(v2, v1);
  swift_release();
  return v3;
}

double sub_255BAB514()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF10);
  sub_255C7FE68();
  return v1;
}

uint64_t sub_255BAB56C()
{
  return sub_255C7FE78();
}

double sub_255BAB5C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF10);
  sub_255C7FE68();
  return v1;
}

uint64_t sub_255BAB61C()
{
  return sub_255C7FE78();
}

uint64_t sub_255BAB674()
{
  return sub_255C7FE78();
}

void sub_255BAB6CC()
{
  double v0 = sub_255BAB5C4();
  if (qword_269F20160 != -1) {
    swift_once();
  }
  double v1 = v0 + *(double *)&qword_269F33338;
  uint64_t v2 = sub_255BAB4D0();
  swift_getKeyPath();
  sub_255B53C5C();
  sub_255C7D718();
  swift_release();
  double v3 = *(double *)(v2 + 48);
  swift_release();
  double v4 = sub_255BAB514() - v3 - v1;
  if (v4 > 0.0) {
    double v5 = v4;
  }
  else {
    double v5 = 0.0;
  }
  double v6 = sub_255BAB514() + 0.0 - v3;
  if (v6 > 0.0) {
    double v7 = v6;
  }
  else {
    double v7 = 0.0;
  }
  if (v5 > v7) {
    __break(1u);
  }
}

void sub_255BAB7FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  double v3 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(int *)(v5 + 72), v2, v3);
  LODWORD(v2) = swift_dynamicCast();
  sub_255BAB6CC();
  if (v2)
  {
    if (v7 < 0.0) {
      __break(1u);
    }
  }
}

uint64_t ParallaxHeader.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v118 = *(a1 - 1);
  uint64_t v120 = *(void *)(v118 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v117 = (char *)v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = *(void *)(v4 + 16);
  uint64_t v133 = sub_255C7E458();
  uint64_t v122 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v130 = (char *)v88 - v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22FB0);
  uint64_t v132 = sub_255C7E458();
  uint64_t v121 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v115 = (char *)v88 - v6;
  uint64_t v134 = sub_255C7E458();
  uint64_t v123 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v116 = (char *)v88 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B80);
  uint64_t v127 = sub_255C7E458();
  uint64_t v124 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v119 = (char *)v88 - v8;
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B88);
  uint64_t v110 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B90);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B98);
  uint64_t v111 = sub_255C7E458();
  uint64_t v129 = a1[4];
  uint64_t v114 = a1[7];
  uint64_t v112 = sub_255C7E598();
  uint64_t v108 = sub_255C7E458();
  uint64_t v9 = a1[3];
  uint64_t v113 = a1;
  uint64_t v128 = v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F23920);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BA0);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BA8);
  uint64_t v109 = sub_255C7E458();
  uint64_t v126 = a1[5];
  uint64_t v189 = v126;
  uint64_t v190 = MEMORY[0x263F189A8];
  uint64_t v10 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v188 = MEMORY[0x263F18880];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_255A09998(&qword_269F25BB0, &qword_269F25B88);
  uint64_t v185 = v11;
  uint64_t v186 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_255A09998(&qword_269F25BB8, &qword_269F25B90);
  uint64_t v183 = v13;
  uint64_t v184 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_255A09998(&qword_269F25BC0, &qword_269F25B98);
  uint64_t v181 = v15;
  uint64_t v182 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v179 = v17;
  uint64_t v180 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v177 = v19;
  uint64_t v178 = v20;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v176 = MEMORY[0x263F1A070];
  uint64_t v173 = swift_getWitnessTable();
  uint64_t v174 = MEMORY[0x263F18BF0];
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = sub_255A09998(&qword_269F25BC8, &qword_269F25BA0);
  uint64_t v171 = v21;
  uint64_t v172 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_255A09998(&qword_269F25BD0, &qword_269F25BA8);
  uint64_t v169 = v23;
  uint64_t v170 = v24;
  swift_getWitnessTable();
  sub_255C7E268();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D0F8);
  uint64_t v25 = sub_255C7E458();
  uint64_t v108 = MEMORY[0x263F18A90];
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = sub_255A09998((unint64_t *)&qword_26B29D0F0, &qword_26B29D0F8);
  uint64_t v167 = v26;
  uint64_t v168 = v27;
  uint64_t v106 = v10;
  uint64_t v110 = v25;
  uint64_t v109 = swift_getWitnessTable();
  sub_255C7E598();
  uint64_t v28 = sub_255C7E458();
  uint64_t v112 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v107 = (char *)v88 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BD8);
  uint64_t v97 = v28;
  uint64_t v30 = sub_255C7E458();
  uint64_t v111 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v105 = (char *)v88 - v31;
  uint64_t v32 = v126;
  uint64_t v165 = v126;
  uint64_t v166 = MEMORY[0x263F198F8];
  uint64_t v33 = swift_getWitnessTable();
  v88[0] = v33;
  uint64_t v34 = sub_255A09998(&qword_269F22FA8, &qword_269F22FB0);
  uint64_t v163 = v33;
  uint64_t v164 = v34;
  uint64_t v35 = swift_getWitnessTable();
  v88[1] = v35;
  unint64_t v36 = sub_255B20D98();
  uint64_t v161 = v35;
  unint64_t v162 = v36;
  uint64_t v37 = swift_getWitnessTable();
  v88[2] = v37;
  uint64_t v38 = sub_255A09998(&qword_269F25BE0, &qword_269F25B80);
  uint64_t v159 = v37;
  uint64_t v160 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v91 = v39;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v157 = v39;
  uint64_t v158 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v92 = v41;
  uint64_t v42 = sub_255A09998(&qword_269F25BE8, &qword_269F25BD8);
  uint64_t v155 = v41;
  uint64_t v156 = v42;
  uint64_t v96 = v30;
  uint64_t v95 = swift_getWitnessTable();
  *(void *)&long long v191 = v30;
  *((void *)&v191 + 1) = v95;
  uint64_t v99 = MEMORY[0x263F1AC08];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v101 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v89 = (char *)v88 - v43;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245A0);
  uint64_t v98 = sub_255C7E458();
  uint64_t v103 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v90 = (char *)v88 - v44;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24590);
  uint64_t v102 = sub_255C7E458();
  uint64_t v104 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v93 = (char *)v88 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  uint64_t v100 = (char *)v88 - v47;
  uint64_t v48 = v113;
  uint64_t v49 = v131;
  uint64_t v50 = v135;
  sub_255C7F748();
  long long v52 = v117;
  uint64_t v51 = v118;
  (*(void (**)(char *, uint64_t, void *))(v118 + 16))(v117, v49, v48);
  uint64_t v53 = v51;
  unint64_t v54 = (*(unsigned __int8 *)(v51 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  long long v55 = (char *)swift_allocObject();
  uint64_t v56 = v128;
  uint64_t v57 = v129;
  *((void *)v55 + 2) = v50;
  *((void *)v55 + 3) = v56;
  *((void *)v55 + 4) = v57;
  *((void *)v55 + 5) = v32;
  uint64_t v120 = v48[6];
  uint64_t v58 = v114;
  *((void *)v55 + 6) = v120;
  *((void *)v55 + 7) = v58;
  (*(void (**)(char *, char *, void *))(v53 + 32))(&v55[v54], v52, v48);
  sub_255BACA70();
  sub_255A1A1D4();
  long long v59 = v115;
  uint64_t v60 = v133;
  char v61 = v130;
  sub_255C7F8C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v61, v60);
  long long v62 = v116;
  uint64_t v63 = v132;
  sub_255C7FA58();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v59, v63);
  uint64_t v143 = v135;
  uint64_t v144 = v56;
  uint64_t v145 = v57;
  uint64_t v64 = v126;
  uint64_t v146 = v126;
  uint64_t v65 = v120;
  uint64_t v147 = v120;
  uint64_t v148 = v58;
  uint64_t v66 = v131;
  uint64_t v149 = v131;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25BF8);
  sub_255A09998(&qword_269F25C00, &qword_269F25BF8);
  long long v67 = v119;
  uint64_t v68 = v134;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v62, v68);
  uint64_t v136 = v135;
  uint64_t v137 = v128;
  uint64_t v138 = v129;
  uint64_t v139 = v64;
  uint64_t v140 = v65;
  uint64_t v141 = v58;
  uint64_t v142 = v66;
  sub_255C801F8();
  long long v69 = v107;
  uint64_t v70 = v127;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v67, v70);
  LOBYTE(v191) = 1;
  sub_255BAD608();
  long long v71 = v105;
  uint64_t v72 = v97;
  sub_255C7F5D8();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v69, v72);
  sub_255C7DF68();
  long long v73 = v89;
  uint64_t v75 = v95;
  uint64_t v74 = v96;
  sub_255C7F808();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v71, v74);
  uint64_t v154 = sub_255C7FC78();
  *(void *)&long long v191 = v74;
  *((void *)&v191 + 1) = v75;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v77 = v90;
  uint64_t v78 = OpaqueTypeMetadata2;
  sub_255C7F838();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v73, v78);
  uint64_t v79 = sub_255A09998(&qword_269F245A8, &qword_269F245A0);
  long long v191 = 0u;
  long long v192 = 0u;
  char v193 = 0;
  uint64_t v152 = OpaqueTypeConformance2;
  uint64_t v153 = v79;
  uint64_t v80 = v98;
  uint64_t v81 = swift_getWitnessTable();
  long long v82 = v93;
  sub_255C7F758();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v77, v80);
  uint64_t v83 = sub_255A09998(&qword_269F24598, &qword_269F24590);
  uint64_t v150 = v81;
  uint64_t v151 = v83;
  uint64_t v84 = v102;
  swift_getWitnessTable();
  long long v85 = v100;
  sub_255A20F54(v82);
  long long v86 = *(void (**)(char *, uint64_t))(v104 + 8);
  v86(v82, v84);
  sub_255A20F54(v85);
  return ((uint64_t (*)(char *, uint64_t))v86)(v85, v84);
}

uint64_t sub_255BAC9AC()
{
  return sub_255BAB674();
}

unint64_t sub_255BACA70()
{
  unint64_t result = qword_269F25BF0;
  if (!qword_269F25BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25BF0);
  }
  return result;
}

uint64_t sub_255BACAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (**a8)(uint64_t a1)@<X8>)
{
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v13 = type metadata accessor for ParallaxHeader();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v23 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v23 - v16, a1, v13, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = a3;
  *((void *)v19 + 4) = a4;
  *((void *)v19 + 5) = a5;
  uint64_t v20 = v25;
  *((void *)v19 + 6) = v24;
  *((void *)v19 + 7) = v20;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  uint64_t v22 = v26;
  *uint64_t v26 = sub_255BB1430;
  v22[1] = (uint64_t (*)(uint64_t))v19;
  return result;
}

uint64_t sub_255BACC38@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  return sub_255BACAC4(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_255BACC4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  uint64_t v33 = a8;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v10 = type metadata accessor for ParallaxHeader();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25CC8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_255C7FC78();
  sub_255C7E0D8();
  uint64_t v34 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v28;
  *((void *)v20 + 2) = a2;
  *((void *)v20 + 3) = v21;
  uint64_t v22 = v30;
  *((void *)v20 + 4) = v29;
  *((void *)v20 + 5) = v22;
  uint64_t v23 = v32;
  *((void *)v20 + 6) = v31;
  *((void *)v20 + 7) = v23;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v19], v13, v10);
  sub_255A1A1D4();
  sub_255C7FB38();
  swift_release();
  swift_release();
  double v24 = sub_255BAB514();
  uint64_t v25 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v33, v17, v14);
  *(double *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F25CD0) + 36)) = v24;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_255BACF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v41 = a7;
  uint64_t v42 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a8;
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v44 = a5;
  uint64_t v85 = a6;
  uint64_t v86 = a7;
  uint64_t v13 = type metadata accessor for ParallaxHeader();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v40 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)v40 - v16, a1, v13, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = a3;
  *((void *)v19 + 4) = v46;
  *((void *)v19 + 5) = a5;
  *((void *)v19 + 6) = a6;
  *((void *)v19 + 7) = v41;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B88);
  uint64_t v43 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B90);
  v40[0] = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B98);
  uint64_t v45 = sub_255C7E458();
  uint64_t v46 = sub_255C7E598();
  v40[1] = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F23920);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v41 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BA0);
  uint64_t v42 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BA8);
  sub_255C7E458();
  uint64_t v75 = v44;
  uint64_t v76 = MEMORY[0x263F189A8];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v74 = MEMORY[0x263F18880];
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_255A09998(&qword_269F25BB0, &qword_269F25B88);
  uint64_t v71 = v20;
  uint64_t v72 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_255A09998(&qword_269F25BB8, &qword_269F25B90);
  uint64_t v69 = v22;
  uint64_t v70 = v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = sub_255A09998(&qword_269F25BC0, &qword_269F25B98);
  uint64_t v67 = v24;
  uint64_t v68 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v65 = v26;
  uint64_t v66 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v63 = v28;
  uint64_t v64 = v29;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = MEMORY[0x263F1A070];
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = MEMORY[0x263F18BF0];
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = sub_255A09998(&qword_269F25BC8, &qword_269F25BA0);
  uint64_t v57 = v30;
  uint64_t v58 = v31;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = sub_255A09998(&qword_269F25BD0, &qword_269F25BA8);
  uint64_t v55 = v32;
  uint64_t v56 = v33;
  swift_getWitnessTable();
  uint64_t v77 = sub_255C7E258();
  uint64_t v78 = v34;
  uint64_t v35 = sub_255C7E268();
  uint64_t v36 = swift_getWitnessTable();
  View.mcui.getter(v35, (uint64_t)&v81);
  swift_release();
  uint64_t v50 = v81;
  uint64_t v51 = v82;
  char v54 = 3;
  uint64_t v37 = type metadata accessor for MCUINamespace();
  MCUINamespace<A>.motionCollection(policy:)((uint64_t)&v54, v37);
  swift_release();
  uint64_t v50 = v77;
  uint64_t v51 = v78;
  uint64_t v52 = v79;
  char v53 = v80;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D0F8);
  sub_255C7E458();
  uint64_t v38 = sub_255A09998((unint64_t *)&qword_26B29D0F0, &qword_26B29D0F8);
  uint64_t v48 = v36;
  uint64_t v49 = v38;
  swift_getWitnessTable();
  sub_255A20F54(&v50);
  swift_release();
  swift_release();
  uint64_t v77 = v81;
  uint64_t v78 = v82;
  uint64_t v79 = v83;
  char v80 = v84;
  sub_255A20F54(&v77);
  swift_release();
  return swift_release();
}

uint64_t sub_255BAD5F4@<X0>(uint64_t a1@<X8>)
{
  return sub_255BACF04(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

unint64_t sub_255BAD608()
{
  unint64_t result = qword_269F25C08[0];
  if (!qword_269F25C08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F25C08);
  }
  return result;
}

uint64_t sub_255BAD65C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BAD6A8@<X0>(uint64_t a1@<X1>, double a2@<X2>, double a3@<X3>, uint64_t a4@<X4>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v162 = a6;
  uint64_t v157 = a8;
  double v160 = a2;
  uint64_t v13 = sub_255C7E458();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v159 = (char *)&v118 - v15;
  uint64_t v16 = sub_255C7E458();
  uint64_t v123 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v122 = (char *)&v118 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B88);
  uint64_t v124 = v16;
  uint64_t v18 = sub_255C7E458();
  uint64_t v126 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v125 = (char *)&v118 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B90);
  uint64_t v127 = v18;
  uint64_t v20 = sub_255C7E458();
  uint64_t v132 = *(uint64_t **)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v128 = (char *)&v118 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25B98);
  uint64_t v134 = v20;
  uint64_t v22 = sub_255C7E458();
  uint64_t v143 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v140 = (char *)&v118 - v23;
  uint64_t v161 = a4;
  uint64_t v24 = sub_255C7E598();
  uint64_t v146 = (void *)v22;
  uint64_t v145 = v24;
  uint64_t v25 = sub_255C7E458();
  uint64_t v153 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v149 = (char *)&v118 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F23920);
  double v27 = a3;
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v28 = sub_255C7FF98();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v28;
  uint64_t v129 = WitnessTable;
  uint64_t v30 = sub_255C7E598();
  uint64_t v154 = v25;
  uint64_t v131 = v30;
  uint64_t v31 = sub_255C7E458();
  uint64_t v135 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v133 = (char *)&v118 - v32;
  uint64_t v137 = v33;
  uint64_t v34 = sub_255C7E458();
  uint64_t v138 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v136 = (char *)&v118 - v35;
  uint64_t v141 = v36;
  uint64_t v37 = sub_255C7E458();
  uint64_t v142 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v139 = (char *)&v118 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BA0);
  uint64_t v144 = v37;
  uint64_t v39 = sub_255C7E458();
  uint64_t v151 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v147 = (char *)&v118 - v40;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25BA8);
  uint64_t v152 = v39;
  uint64_t v156 = sub_255C7E458();
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  uint64_t v148 = (char *)&v118 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v150 = (char *)&v118 - v43;
  uint64_t v44 = sub_255C7EC28();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v47 = (char *)&v118 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED88();
  sub_255C7E0E8();
  CGFloat v49 = v48;
  CGFloat v51 = v50;
  CGFloat v53 = v52;
  CGFloat v55 = v54;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  v191.origin.CGFloat x = v49;
  v191.origin.CGFloat y = v51;
  v191.size.double width = v53;
  v191.size.double height = v55;
  double MinY = 0.0;
  if (CGRectGetMinX(v191) >= 0.0)
  {
    v192.origin.CGFloat x = v49;
    v192.origin.CGFloat y = v51;
    v192.size.double width = v53;
    v192.size.double height = v55;
    double MinY = CGRectGetMinY(v192);
  }
  if (qword_269F20158 != -1) {
    swift_once();
  }
  double v185 = v160;
  double v186 = v27;
  double v120 = v27;
  uint64_t v187 = v161;
  uint64_t v188 = a5;
  uint64_t v189 = v162;
  uint64_t v190 = a7;
  uint64_t v121 = type metadata accessor for ParallaxHeader();
  double v57 = sub_255BAB514();
  double v58 = (MinY + v57) / v57;
  if (MinY <= 0.0) {
    double v58 = 1.0;
  }
  if (v57 == 0.0) {
    double v59 = 1.0;
  }
  else {
    double v59 = v58;
  }
  sub_255BAE944();
  double v61 = v60;
  uint64_t v62 = v159;
  sub_255C7FA68();
  sub_255C80368();
  uint64_t v183 = a5;
  uint64_t v184 = MEMORY[0x263F189A8];
  uint64_t v158 = MEMORY[0x263F18E48];
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v119 = a7;
  uint64_t v64 = v63;
  uint64_t v65 = v122;
  sub_255C7F6D8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v62, v13);
  uint64_t v66 = sub_255C801D8();
  uint64_t v118 = a1;
  MEMORY[0x270FA5388](v66);
  *((double *)&v118 - 2) = MinY;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25C90);
  uint64_t v159 = a5;
  uint64_t v181 = v64;
  uint64_t v182 = MEMORY[0x263F18880];
  uint64_t v67 = v124;
  uint64_t v68 = swift_getWitnessTable();
  sub_255BB1634(&qword_269F25C98, &qword_269F25C90, (void (*)(void))sub_255BB11FC);
  uint64_t v69 = v125;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v65, v67);
  sub_255C80368();
  double v185 = v59;
  double v186 = v59;
  uint64_t v187 = v70;
  uint64_t v188 = v71;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25CA8);
  uint64_t v124 = MEMORY[0x263F19128];
  uint64_t v72 = sub_255A09998(&qword_269F25BB0, &qword_269F25B88);
  uint64_t v179 = v68;
  uint64_t v180 = v72;
  uint64_t v73 = v127;
  uint64_t v74 = swift_getWitnessTable();
  sub_255A09998(&qword_269F25CB0, &qword_269F25CA8);
  uint64_t v75 = v128;
  sub_255C7FB88();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v69, v73);
  double v185 = MinY;
  uint64_t v76 = sub_255A09998(&qword_269F25BB8, &qword_269F25B90);
  uint64_t v177 = v74;
  uint64_t v178 = v76;
  uint64_t v77 = v134;
  uint64_t v78 = swift_getWitnessTable();
  sub_255BACA70();
  uint64_t v79 = v140;
  sub_255C7F5D8();
  ((void (*)(char *, uint64_t))v132[1])(v75, v77);
  uint64_t v128 = (char *)sub_255C801E8();
  uint64_t v127 = v80;
  uint64_t v132 = &v118;
  MEMORY[0x270FA5388](v128);
  double v81 = v160;
  uint64_t v82 = *(void *)&v120;
  *((double *)&v118 - 8) = v160;
  *(&v118 - 7) = v82;
  uint64_t v83 = v161;
  uint64_t v84 = v159;
  *(&v118 - 6) = v161;
  *(&v118 - 5) = (uint64_t)v84;
  uint64_t v85 = v119;
  *(&v118 - 4) = v162;
  *(&v118 - 3) = v85;
  uint64_t v86 = v118;
  *(&v118 - 2) = v118;
  uint64_t v134 = MEMORY[0x263F1A318];
  uint64_t v87 = sub_255A09998(&qword_269F25BC0, &qword_269F25B98);
  uint64_t v175 = v78;
  uint64_t v176 = v87;
  char v88 = v146;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v90 = v149;
  sub_255C7FAC8();
  uint64_t v91 = (*(uint64_t (**)(char *, void *))(v143 + 8))(v79, v88);
  uint64_t v146 = &v118;
  MEMORY[0x270FA5388](v91);
  *((double *)&v118 - 8) = v81;
  *(&v118 - 7) = v82;
  uint64_t v92 = v159;
  *(&v118 - 6) = v83;
  *(&v118 - 5) = (uint64_t)v92;
  *(&v118 - 4) = v162;
  *(&v118 - 3) = v85;
  *(&v118 - 2) = v86;
  sub_255C801F8();
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v173 = v89;
  uint64_t v174 = v93;
  uint64_t v94 = v154;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v96 = v133;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v90, v94);
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v171 = v95;
  uint64_t v172 = v97;
  uint64_t v98 = v137;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v100 = v136;
  sub_255C7F7F8();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v96, v98);
  uint64_t v169 = v99;
  uint64_t v170 = MEMORY[0x263F1A070];
  uint64_t v101 = v141;
  uint64_t v102 = swift_getWitnessTable();
  uint64_t v103 = v139;
  sub_255C7FAB8();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v100, v101);
  double v185 = v61;
  uint64_t v167 = v102;
  uint64_t v168 = MEMORY[0x263F18BF0];
  uint64_t v104 = v144;
  uint64_t v105 = swift_getWitnessTable();
  sub_255BB1280();
  uint64_t v106 = v147;
  sub_255C7F5D8();
  (*(void (**)(char *, uint64_t))(v142 + 8))(v103, v104);
  sub_255BAB7FC(v121);
  double v185 = v107;
  double v186 = v108;
  uint64_t v109 = sub_255A09998(&qword_269F25BC8, &qword_269F25BA0);
  uint64_t v165 = v105;
  uint64_t v166 = v109;
  uint64_t v110 = v152;
  uint64_t v111 = swift_getWitnessTable();
  sub_255BB12D4();
  uint64_t v112 = v148;
  sub_255C7F5D8();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v106, v110);
  uint64_t v113 = sub_255A09998(&qword_269F25BD0, &qword_269F25BA8);
  uint64_t v163 = v111;
  uint64_t v164 = v113;
  uint64_t v114 = v156;
  swift_getWitnessTable();
  uint64_t v115 = v150;
  sub_255A20F54(v112);
  uint64_t v116 = *(void (**)(char *, uint64_t))(v155 + 8);
  v116(v112, v114);
  sub_255A20F54(v115);
  return ((uint64_t (*)(char *, uint64_t))v116)(v115, v114);
}

void sub_255BAE944()
{
  if (sub_255BAB514() != 0.0)
  {
    sub_255BAB6CC();
    sub_255BAB6CC();
  }
}

uint64_t sub_255BAE9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = v9;
  v17[1] = v10;
  _OWORD v17[2] = v11;
  v17[3] = v12;
  v17[4] = v13;
  v17[5] = v14;
  uint64_t v15 = type metadata accessor for ParallaxHeader();
  sub_255A20F54(a1 + *(int *)(v15 + 76));
  sub_255A20F54(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a4);
}

uint64_t sub_255BAEB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v21 = a5;
  uint64_t v24 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F23920);
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v12 = sub_255C7FF98();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v21 - v17;
  sub_255C7EA58();
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = v21;
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  uint64_t v31 = a1;
  sub_255C7FF88();
  swift_getWitnessTable();
  sub_255A20F54(v15);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  sub_255A20F54(v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, v12);
}

uint64_t sub_255BAED2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a7;
  uint64_t v39 = a6;
  uint64_t v37 = a5;
  uint64_t v40 = a2;
  uint64_t v41 = a4;
  uint64_t v44 = a8;
  double v52 = a2;
  CGFloat v53 = a3;
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v57 = a7;
  uint64_t v10 = type metadata accessor for ParallaxHeader();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v36 = *((void *)a3 - 1);
  uint64_t v14 = v36;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F23920);
  uint64_t v18 = sub_255C7E458();
  uint64_t v43 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x270FA5388](v21);
  uint64_t v38 = (char *)&v36 - v23;
  (*(void (**)(char *, uint64_t, char *, double))(v14 + 16))(v17, a1 + *(int *)(v10 + 72), a3, v22);
  uint64_t v24 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v25 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v39;
  *((void *)v26 + 2) = v40;
  *((void *)v26 + 3) = a3;
  uint64_t v28 = v37;
  *((void *)v26 + 4) = v41;
  *((void *)v26 + 5) = v28;
  uint64_t v29 = v42;
  *((void *)v26 + 6) = v27;
  *((void *)v26 + 7) = v29;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v26[v25], v24, v10);
  sub_255A1A1D4();
  sub_255C7F818();
  swift_release();
  (*(void (**)(char *, char *))(v36 + 8))(v17, a3);
  uint64_t v30 = sub_255A09998(&qword_269F22F78, (uint64_t *)&unk_269F23920);
  uint64_t v50 = v27;
  uint64_t v51 = v30;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v32 = v38;
  sub_255A20F54(v20);
  uint64_t v33 = v43;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v43 + 8);
  v34(v20, v18);
  uint64_t v48 = 0;
  char v49 = 0;
  double v52 = &v48;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v20, v32, v18);
  CGFloat v53 = v20;
  v47[0] = MEMORY[0x263F1B6B0];
  v47[1] = v18;
  uint64_t v45 = MEMORY[0x263F1B698];
  uint64_t v46 = WitnessTable;
  sub_255AF64A0((uint64_t)&v52, 2uLL, (uint64_t)v47);
  v34(v32, v18);
  return ((uint64_t (*)(char *, uint64_t))v34)(v20, v18);
}

uint64_t sub_255BAF16C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E0D8();
  *a1 = v3;
  return result;
}

void sub_255BAF198(double *a1)
{
  double v1 = *a1;
  type metadata accessor for ParallaxHeader();
  if (v1 != sub_255BAB5C4()) {
    sub_255BAB61C();
  }
}

uint64_t sub_255BAF204()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_255BAF32C(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v3 = a3[2];
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = a3[4];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = *(void *)(v12 + 64) + 7;
  unint64_t v16 = ((((((v15 + ((v10 + v13 + ((v6 + v8 + ((v5 + 9) & ~v5)) & ~v8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v17 = v8 | v5 | v13;
  if (v17 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v12 + 80)) & 0x100000) != 0 || v16 > 0x18)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    uint64_t v26 = v20 + ((v17 & 0xF8 ^ 0x1F8) & (v17 + 16));
  }
  else
  {
    uint64_t v36 = a3[3];
    uint64_t v37 = ~v8;
    uint64_t v39 = ~v13;
    char v21 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v21;
    uint64_t v22 = (a1 + v5 + 9) & ~v5;
    uint64_t v23 = ((unint64_t)a2 + v5 + 9) & ~v5;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v38 = v11;
    swift_retain();
    v24(v22, v23, v3);
    uint64_t v25 = (v22 + v9) & v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v25, (v23 + v9) & v37, v36);
    uint64_t v26 = a1;
    uint64_t v27 = (v25 + v14) & v39;
    uint64_t v28 = (((v23 + v9) & v37) + v14) & v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v27, v28, v38);
    uint64_t v29 = (void *)((v15 + v27) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = (void *)((v15 + v28) & 0xFFFFFFFFFFFFFFF8);
    void *v29 = *v30;
    v29[1] = v30[1];
    uint64_t v31 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v31 = *v32;
    v31[1] = v32[1];
    uint64_t v33 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v33 = *v34;
    v33[1] = v34[1];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v26;
}

uint64_t sub_255BAF618(uint64_t a1, void *a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2[2] - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(a2[3] - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v10);
  (*(void (**)(unint64_t))(*(void *)(a2[4] - 8) + 8))((v10
                                                                             + *(void *)(v9 + 56)
                                                                             + *(unsigned __int8 *)(*(void *)(a2[4] - 8)
                                                                                                  + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[4] - 8) + 80));
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_255BAF758(uint64_t a1, uint64_t a2, void *a3)
{
  char v5 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(void *)(v6 - 8) + 16;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v10 = (v9 + 9 + a1) & ~v9;
  uint64_t v11 = (v9 + 9 + a2) & ~v9;
  swift_retain();
  v7(v10, v11, v6);
  uint64_t v12 = *(void *)(a3[3] - 8);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 48) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v16, v17);
  uint64_t v18 = *(void *)(a3[4] - 8);
  uint64_t v19 = v18 + 16;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = *(void *)(v13 + 48) + v20;
  uint64_t v22 = (v21 + v16) & ~v20;
  uint64_t v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 48) + 7;
  uint64_t v25 = (void *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  v25[1] = v26[1];
  uint64_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  uint64_t v29 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255BAF918(uint64_t a1, uint64_t a2, void *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a3[2] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 + 9 + a1) & ~v9;
  uint64_t v11 = (v9 + 9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t v13 = *(void *)(a3[3] - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 40);
  uint64_t v20 = *(void *)(a3[4] - 8);
  uint64_t v21 = v20 + 24;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = (v23 + v17) & ~v22;
  uint64_t v25 = (v23 + v18) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v24, v25);
  uint64_t v26 = *(void *)(v21 + 40) + 7;
  uint64_t v27 = (void *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)((v26 + v25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_retain();
  swift_release();
  uint64_t v29 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_retain();
  swift_release();
  uint64_t v31 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255BAFAF8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 9 + a1) & ~v7;
  uint64_t v9 = (v7 + 9 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(a3[3] - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 32);
  uint64_t v18 = *(void *)(a3[4] - 8);
  uint64_t v19 = v18 + 32;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (v21 + v15) & ~v20;
  uint64_t v23 = (v21 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 32) + 7;
  uint64_t v25 = (_OWORD *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (_OWORD *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v25 = *v26;
  uint64_t v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  *(_OWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255BAFC6C(uint64_t a1, uint64_t a2, void *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v7 = *(void *)(a3[2] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 + 9 + a1) & ~v9;
  uint64_t v11 = (v9 + 9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(a3[3] - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 24);
  uint64_t v20 = *(void *)(a3[4] - 8);
  uint64_t v21 = v20 + 40;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = (v23 + v17) & ~v22;
  uint64_t v25 = (v23 + v18) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v24, v25);
  uint64_t v26 = *(void *)(v21 + 24) + 7;
  uint64_t v27 = (void *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)((v26 + v25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_release();
  uint64_t v29 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_release();
  uint64_t v31 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_release();
  return a1;
}

uint64_t sub_255BAFE2C(_DWORD *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[2] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a3[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v6 <= v8) {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v10 = a3[4];
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  if (v9 <= v12) {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v17 = v9;
  }
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(*(void *)(a3[3] - 8) + 64) + v16;
  uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64) + 7;
  if (v17 < a2)
  {
    unint64_t v20 = ((((((v19 + ((v18 + ((v14 + v15 + ((v13 + 9) & ~v13)) & ~v15)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v20 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = 2;
    }
    else {
      unsigned int v21 = a2 - v17 + 1;
    }
    if (v21 >= 0x10000) {
      unsigned int v22 = 4;
    }
    else {
      unsigned int v22 = 2;
    }
    if (v21 < 0x100) {
      unsigned int v22 = 1;
    }
    if (v21 >= 2) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    switch(v23)
    {
      case 1:
        int v24 = *((unsigned __int8 *)a1 + v20);
        if (!*((unsigned char *)a1 + v20)) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v24 = *(unsigned __int16 *)((char *)a1 + v20);
        if (*(_WORD *)((char *)a1 + v20)) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255BB0120);
      case 4:
        int v24 = *(_DWORD *)((char *)a1 + v20);
        if (!v24) {
          break;
        }
LABEL_27:
        int v26 = v24 - 1;
        if ((v20 & 0xFFFFFFF8) != 0)
        {
          int v26 = 0;
          int v27 = *a1;
        }
        else
        {
          int v27 = 0;
        }
        int v35 = v17 + (v27 | v26);
        return (v35 + 1);
      default:
        break;
    }
  }
  uint64_t v28 = ((unint64_t)a1 + v13 + 9) & ~v13;
  if (v6 == v17)
  {
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v30 = *(unsigned int *)(v5 + 84);
    uint64_t v31 = a3[2];
    return v29(v28, v30, v31);
  }
  uint64_t v32 = (v28 + v14 + v15) & ~v15;
  if (v8 == v17)
  {
    uint64_t v33 = *(uint64_t (**)(uint64_t))(v7 + 48);
    return v33(v32);
  }
  else
  {
    uint64_t v28 = (v18 + v32) & ~v16;
    if (v12 == v17)
    {
      uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      uint64_t v30 = *(unsigned int *)(v11 + 84);
      uint64_t v31 = a3[4];
      return v29(v28, v30, v31);
    }
    unint64_t v34 = *(void *)(((v19 + v28) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    int v35 = v34 - 1;
    if (v35 < 0) {
      int v35 = -1;
    }
    return (v35 + 1);
  }
}

void sub_255BB0134(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  uint64_t v10 = *(void *)(v8 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v9 - 8);
  if (v7 <= v11) {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v14 = *(void *)(v9 - 8);
  unsigned int v15 = *(_DWORD *)(v12 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v13 <= v15) {
    unsigned int v22 = v15;
  }
  else {
    unsigned int v22 = v13;
  }
  if (v22 <= 0x7FFFFFFE) {
    unsigned int v22 = 2147483646;
  }
  uint64_t v23 = v19 + v20;
  uint64_t v24 = v21 + 7;
  size_t v25 = ((((((v24 + ((v19 + v20 + ((v17 + v18 + ((v16 + 9) & ~v16)) & ~v18)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v22 >= a3)
  {
    int v29 = 0;
    int v30 = a2 - v22;
    if (a2 <= v22) {
      goto LABEL_22;
    }
LABEL_26:
    if (v25) {
      int v31 = 1;
    }
    else {
      int v31 = v30;
    }
    if (v25)
    {
      unsigned int v32 = ~v22 + a2;
      bzero(a1, v25);
      *(_DWORD *)a1 = v32;
    }
    switch(v29)
    {
      case 1:
        a1[v25] = v31;
        break;
      case 2:
        *(_WORD *)&a1[v25] = v31;
        break;
      case 3:
LABEL_55:
        __break(1u);
        JUMPOUT(0x255BB04C8);
      case 4:
        *(_DWORD *)&a1[v25] = v31;
        break;
      default:
        return;
    }
    return;
  }
  unsigned int v26 = a3 - v22;
  if (v25) {
    unsigned int v27 = 2;
  }
  else {
    unsigned int v27 = v26 + 1;
  }
  if (v27 >= 0x10000) {
    int v28 = 4;
  }
  else {
    int v28 = 2;
  }
  if (v27 < 0x100) {
    int v28 = 1;
  }
  if (v27 >= 2) {
    int v29 = v28;
  }
  else {
    int v29 = 0;
  }
  int v30 = a2 - v22;
  if (a2 > v22) {
    goto LABEL_26;
  }
LABEL_22:
  switch(v29)
  {
    case 1:
      a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
      goto LABEL_55;
    case 4:
      *(_DWORD *)&a1[v25] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      unint64_t v33 = (unint64_t)&a1[v16 + 9] & ~v16;
      if (v7 == v22)
      {
        unint64_t v34 = *(void (**)(unint64_t))(v6 + 56);
LABEL_38:
        v34(v33);
        return;
      }
      unint64_t v35 = (v33 + v17 + v18) & ~v18;
      if (v11 == v22)
      {
        uint64_t v36 = *(void (**)(unint64_t))(v10 + 56);
        v36(v35);
      }
      else
      {
        unint64_t v33 = (v23 + v35) & ~v20;
        if (v15 == v22)
        {
          unint64_t v34 = *(void (**)(unint64_t))(v14 + 56);
          goto LABEL_38;
        }
        uint64_t v37 = (void *)((v24 + v33) & 0xFFFFFFFFFFFFFFF8);
        if (a2 > 0x7FFFFFFE)
        {
          *uint64_t v37 = a2 - 0x7FFFFFFF;
          v37[1] = 0;
        }
        else
        {
          v37[1] = a2;
        }
      }
      break;
  }
}

uint64_t sub_255BB04F0()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for ParallaxHeaderIsInViewHierarchyKey()
{
  return &type metadata for ParallaxHeaderIsInViewHierarchyKey;
}

ValueMetadata *type metadata accessor for ParallaxScrollTargetOffsetRangeKey()
{
  return &type metadata for ParallaxScrollTargetOffsetRangeKey;
}

ValueMetadata *type metadata accessor for ParallaxAnimationProgressPreferenceKey()
{
  return &type metadata for ParallaxAnimationProgressPreferenceKey;
}

ValueMetadata *type metadata accessor for DefaultParallaxTopGradient()
{
  return &type metadata for DefaultParallaxTopGradient;
}

ValueMetadata *type metadata accessor for ParallaxHeaderHeightKey()
{
  return &type metadata for ParallaxHeaderHeightKey;
}

ValueMetadata *type metadata accessor for ParallaxHeaderMinYPreferenceKey()
{
  return &type metadata for ParallaxHeaderMinYPreferenceKey;
}

void sub_255BB0CD8()
{
  qword_269F33300 = 0;
}

double sub_255BB0CE4@<D0>(void *a1@<X8>)
{
  return sub_255BB0F10(&qword_269F20138, (double *)&qword_269F33300, a1);
}

char *sub_255BB0D10(char *result, void *(*a2)(uint64_t *__return_ptr))
{
  unint64_t v2 = result;
  if (*result)
  {
    char v3 = 1;
  }
  else
  {
    uint64_t result = (char *)a2(&v4);
    char v3 = v4;
  }
  char *v2 = v3;
  return result;
}

void sub_255BB0D60()
{
  xmmword_269F33310 = 0uLL;
}

double sub_255BB0D70@<D0>(_OWORD *a1@<X8>)
{
  if (qword_269F20140 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_269F33310;
  *a1 = xmmword_269F33310;
  return result;
}

void *sub_255BB0DCC(double *a1, void *(*a2)(double *__return_ptr))
{
  double v4 = *a1;
  uint64_t v5 = a2(&v10);
  double v6 = v4 + v10;
  double v7 = a1[1];
  double result = ((void *(*)(double *__return_ptr, void *))a2)(&v10, v5);
  double v9 = v7 + v11;
  if (v6 > v7 + v11)
  {
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = v9;
  }
  return result;
}

void sub_255BB0E4C()
{
  qword_269F33320 = 0;
}

double sub_255BB0E58@<D0>(void *a1@<X8>)
{
  return sub_255BB0F10(&qword_269F20148, (double *)&qword_269F33320, a1);
}

double sub_255BB0E7C(double *a1, void (*a2)(double *__return_ptr))
{
  a2(&v4);
  double result = v4 + *a1;
  *a1 = result;
  return result;
}

uint64_t sub_255BB0EC4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_255BB0EE0()
{
  qword_269F33328 = 0;
}

double sub_255BB0EEC@<D0>(void *a1@<X8>)
{
  return sub_255BB0F10(&qword_269F20150, (double *)&qword_269F33328, a1);
}

double sub_255BB0F10@<D0>(void *a1@<X2>, double *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  double result = *a2;
  *a3 = *(void *)a2;
  return result;
}

void sub_255BB0F58()
{
  qword_269F33330 = 0x3FD0000000000000;
}

void sub_255BB0F68()
{
  qword_269F33338 = 0x4049000000000000;
}

void sub_255BB0F78()
{
  qword_269F33340 = 0x4030000000000000;
}

void sub_255BB0F88()
{
  qword_269F33348 = 0x4049000000000000;
}

uint64_t sub_255BB0F98()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F21690);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_255C84C00;
  sub_255C7FC68();
  sub_255C7FCA8();
  swift_release();
  *(void *)(v0 + 32) = sub_255C80148();
  *(void *)(v0 + 40) = v1;
  sub_255C7FC68();
  sub_255C7FCA8();
  swift_release();
  *(void *)(v0 + 48) = sub_255C80148();
  *(void *)(v0 + 56) = v2;
  sub_255C7FC68();
  sub_255C7FCA8();
  swift_release();
  *(void *)(v0 + 64) = sub_255C80148();
  *(void *)(v0 + 72) = v3;
  uint64_t result = MEMORY[0x25A2959D0](v0);
  qword_269F33350 = result;
  return result;
}

double sub_255BB1090@<D0>(uint64_t a1@<X8>)
{
  if (qword_269F20178 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_255C80358();
  sub_255C80368();
  sub_255C7E2A8();
  sub_255C801F8();
  sub_255A58DFC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v8, 0.0, 1, 174.0, 0);
  sub_255B3CB38((uint64_t)v7);
  long long v2 = v8[7];
  *(_OWORD *)(a1 + 96) = v8[6];
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)(a1 + 128) = v8[8];
  *(void *)(a1 + 144) = v9;
  long long v3 = v8[3];
  *(_OWORD *)(a1 + 32) = v8[2];
  *(_OWORD *)(a1 + 48) = v3;
  long long v4 = v8[5];
  *(_OWORD *)(a1 + 64) = v8[4];
  *(_OWORD *)(a1 + 80) = v4;
  double result = *(double *)v8;
  long long v6 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v6;
  return result;
}

uint64_t sub_255BB11D0(uint64_t a1)
{
  return sub_255BB1448(a1, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255BAD6A8);
}

double sub_255BB11E8@<D0>(uint64_t a1@<X8>)
{
  double result = -*(double *)(v1 + 16);
  *(void *)a1 = 0;
  *(double *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255BB11FC()
{
  unint64_t result = qword_269F25CA0;
  if (!qword_269F25CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25CA0);
  }
  return result;
}

uint64_t sub_255BB1250()
{
  return sub_255BB1348((uint64_t (*)(void, void, void, void, void, void, void))sub_255BAE9F4);
}

uint64_t sub_255BB1268()
{
  return sub_255BB1348((uint64_t (*)(void, void, void, void, void, void, void))sub_255BAEB00);
}

unint64_t sub_255BB1280()
{
  unint64_t result = qword_269F25CB8;
  if (!qword_269F25CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25CB8);
  }
  return result;
}

unint64_t sub_255BB12D4()
{
  unint64_t result = qword_269F25CC0;
  if (!qword_269F25CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25CC0);
  }
  return result;
}

uint64_t sub_255BB1330()
{
  return sub_255BB1348((uint64_t (*)(void, void, void, void, void, void, void))sub_255BAED2C);
}

uint64_t sub_255BB1348(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

void sub_255BB1368(double *a1)
{
  type metadata accessor for ParallaxHeader();

  sub_255BAF198(a1);
}

uint64_t sub_255BB1430(uint64_t a1)
{
  return sub_255BB1448(a1, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255BACC4C);
}

uint64_t sub_255BB1448(uint64_t a1, uint64_t (*a2)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = *(void *)(type metadata accessor for ParallaxHeader() - 8);
  double v11 = (char *)v2 + ((*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return a2(a1, v11, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_255BB152C()
{
  return sub_255BAB56C();
}

uint64_t sub_255BB15F0()
{
  return sub_255BB1634(&qword_269F25CD8, &qword_269F25CE0, (void (*)(void))sub_255BB16B0);
}

uint64_t sub_255BB1634(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255BB16B0()
{
  unint64_t result = qword_269F25CE8;
  if (!qword_269F25CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25CE8);
  }
  return result;
}

void sub_255BB1708(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C80CD8();
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29B470);
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  id v13 = v24;
  if (v24)
  {
    if (a1)
    {
      sub_255A43740(0, &qword_26B29BF40);
      id v14 = a1;
      id v15 = v13;
      char v16 = sub_255C80DD8();

      if (v16) {
        return;
      }
    }
    else
    {
    }
LABEL_8:
    id v17 = objc_msgSend(self, sel_defaultCenter);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    id v18 = v24;
    sub_255C80CE8();

    sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
    id v24 = (id)sub_255C80C88();
    uint64_t v19 = sub_255C80C78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
    sub_255BB2A20(&qword_26B29BEE8, MEMORY[0x263F07CB0]);
    sub_255A42F64();
    sub_255C7DB68();
    sub_255ACF4AC((uint64_t)v6);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    swift_allocObject();
    swift_weakInit();
    sub_255BB297C();
    uint64_t v20 = sub_255C7DB98();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    *(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_routeDidChange) = v20;
    swift_release();
    return;
  }
  if (a1) {
    goto LABEL_8;
  }
}

uint64_t sub_255BB1B48()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for NowPlayingRouteObserver();
    sub_255BB2A20(&qword_26B29AA00, (void (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver);
    sub_255C7D9E8();
    sub_255C7DA48();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_255BB1BFC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

void sub_255BB1C70(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  swift_retain();
  sub_255C7DAD8();
  sub_255BB1708(v3);
}

uint64_t sub_255BB1D48()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v1 - 8);
  long long v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_255C80CD8();
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29B470);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B518);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver__route;
  aBlock[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF48);
  sub_255C7DA88();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v13 = v0;
  *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_routeDidChange) = 0;
  uint64_t v37 = v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_subscriptions;
  *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_subscriptions) = MEMORY[0x263F8EE88];
  id v14 = self;
  id v15 = (void *)swift_allocObject();
  uint64_t v30 = v13;
  swift_weakInit();
  aBlock[4] = sub_255BB293C;
  aBlock[5] = v15;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_255BB263C;
  aBlock[3] = &block_descriptor_19;
  char v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_getActiveRouteWithCompletion_, v16);
  _Block_release(v16);
  id v36 = self;
  id v17 = objc_msgSend(v36, sel_defaultCenter);
  sub_255C80CE8();

  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  aBlock[0] = (id)sub_255C80C88();
  uint64_t v18 = sub_255C80C78();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v35 = v19 + 56;
  uint64_t v20 = (uint64_t)v3;
  int v29 = v3;
  v34(v3, 1, 1, v18);
  uint64_t v33 = sub_255BB2A20(&qword_26B29BEE8, MEMORY[0x263F07CB0]);
  unint64_t v32 = sub_255A42F64();
  uint64_t v21 = v38;
  sub_255C7DB68();
  sub_255ACF4AC(v20);

  uint64_t v22 = *(void (**)(char *, uint64_t))(v40 + 8);
  v40 += 8;
  int v31 = v22;
  v22(v5, v21);
  swift_allocObject();
  swift_weakInit();
  sub_255BB297C();
  uint64_t v23 = v39;
  sub_255C7DB98();
  swift_release();
  id v24 = *(void (**)(char *, uint64_t))(v41 + 8);
  v41 += 8;
  v24(v7, v23);
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v25 = objc_msgSend(v36, sel_defaultCenter);
  sub_255C80CE8();

  aBlock[0] = (id)sub_255C80C88();
  uint64_t v26 = (uint64_t)v29;
  v34(v29, 1, 1, v18);
  sub_255C7DB68();
  sub_255ACF4AC(v26);

  v31(v5, v21);
  swift_allocObject();
  uint64_t v27 = v30;
  swift_weakInit();
  sub_255C7DB98();
  swift_release();
  v24(v7, v23);
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  return v27;
}

uint64_t sub_255BB23E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = self;
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = a3;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_255BB263C;
    aBlock[3] = a4;
    uint64_t v9 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_getActiveRouteWithCompletion_, v9);
    _Block_release(v9);
    return swift_release();
  }
  return result;
}

void sub_255BB24F8(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a1) {
      id v2 = a1;
    }
    else {
      id v2 = objc_msgSend(self, sel_systemRoute);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v3 = a1;
    sub_255C7DAC8();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    id v4 = v2;
    sub_255C7DAD8();
    sub_255BB1708(v5);
    swift_release();
  }
}

void sub_255BB263C(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_255BB26A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver__route;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B518);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_255BB276C()
{
  return type metadata accessor for NowPlayingRouteObserver();
}

uint64_t type metadata accessor for NowPlayingRouteObserver()
{
  uint64_t result = qword_26B29AA08;
  if (!qword_26B29AA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255BB27C0()
{
  sub_255BB2868();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255BB2868()
{
  if (!qword_26B29B520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BF48);
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29B520);
    }
  }
}

uint64_t sub_255BB28C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NowPlayingRouteObserver();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255BB2904()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_255BB293C(void *a1)
{
}

uint64_t sub_255BB2944(uint64_t a1)
{
  return sub_255BB23E8(a1, v1, (uint64_t)sub_255BB293C, (uint64_t)&block_descriptor_25);
}

unint64_t sub_255BB297C()
{
  unint64_t result = qword_26B29B460;
  if (!qword_26B29B460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29B470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B460);
  }
  return result;
}

uint64_t sub_255BB29D8(uint64_t a1)
{
  return sub_255BB23E8(a1, v1, (uint64_t)sub_255BB293C, (uint64_t)&block_descriptor_20);
}

uint64_t sub_255BB2A18()
{
  return sub_255BB1B48();
}

uint64_t sub_255BB2A20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BB2A70(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCA8);
    uint64_t v2 = sub_255C812F8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v29 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v29 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v27) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    int64_t v13 = v29 + 1;
    if (!v12)
    {
      int64_t v13 = v29 + 2;
      if (v29 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v29 + 3;
        if (v29 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v29 + 4;
          if (v29 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v29 = v13;
LABEL_28:
    id v15 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    char v16 = *(unsigned char *)(*(void *)(a1 + 56) + v10);
    *(void *)&v32[0] = v15;
    LOBYTE(v31[0]) = v16;
    id v17 = v15;
    swift_dynamicCast();
    uint64_t v18 = *(void *)&v32[0];
    sub_255A199E0((_OWORD *)((char *)v32 + 8), v30);
    sub_255A199E0(v30, v32);
    sub_255A199E0(v32, v31);
    sub_255C80628();
    sub_255C81578();
    sub_255C806B8();
    uint64_t v19 = sub_255C815B8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v8 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v18;
    uint64_t result = (uint64_t)sub_255A199E0(v31, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v29 + 5;
  if (v29 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_255B20BB4();
    return v2;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v29 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_255BB2E04(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F210F8);
    uint64_t v2 = sub_255C812F8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_255A42E30(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_255A199E0(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_255A199E0(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_255A199E0(v36, v37);
    sub_255A199E0(v37, &v33);
    uint64_t result = sub_255C81058();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_255A199E0(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_255B20BB4();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_255BB31CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = sub_255A18738(MEMORY[0x263F8EE78]);
  *(_OWORD *)(v4 + 24) = 0u;
  *(void *)(v4 + 16) = v9;
  *(_OWORD *)(v4 + 40) = 0u;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a2;
  *(void *)(v4 + 56) = a3;
  *(void *)(v4 + 64) = a4;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v11 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  uint64_t v12 = PPSCreateTelemetryIdentifier();

  if (v12)
  {
    *((void *)&v15 + 1) = MEMORY[0x263F8DD08];
    *(void *)&long long v14 = v12;
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_beginAccess();
  sub_255A15F58((uint64_t)&v14, v4 + 24);
  swift_endAccess();
  return v4;
}

void sub_255BB32E0(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  sub_255A15E88((uint64_t)(v1 + 3), (uint64_t)v20);
  if (v20[3])
  {
    if (swift_dynamicCast())
    {
      if (qword_269F20190 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_255C7D898();
      __swift_project_value_buffer(v4, (uint64_t)qword_269F25D00);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v5 = sub_255C7D878();
      os_log_type_t v6 = sub_255C80BD8();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        v20[0] = v19;
        *(_DWORD *)uint64_t v7 = 136446722;
        uint64_t v8 = v2[9];
        unint64_t v9 = v2[10];
        swift_bridgeObjectRetain();
        sub_255A7BEC4(v8, v9, v20);
        sub_255C80F18();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 12) = 2082;
        uint64_t v11 = v2[7];
        unint64_t v10 = v2[8];
        swift_bridgeObjectRetain();
        sub_255A7BEC4(v11, v10, v20);
        sub_255C80F18();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 22) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_255C80468();
        unint64_t v14 = v13;
        swift_bridgeObjectRelease();
        sub_255A7BEC4(v12, v14, v20);
        sub_255C80F18();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255A00000, v5, v6, "Will report subsystem=%{public}s category=%{public}s payload=%{public}s", (uint8_t *)v7, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v19, -1, -1);
        MEMORY[0x25A297C00](v7, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      sub_255BB2E04(a1);
      int64_t v16 = sub_255C80448();
      swift_bridgeObjectRelease();
      PPSSendTelemetry();
      goto LABEL_14;
    }
  }
  else
  {
    sub_255A7D6B8((uint64_t)v20);
  }
  if (qword_269F20190 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_255C7D898();
  __swift_project_value_buffer(v15, (uint64_t)qword_269F25D00);
  int64_t v16 = sub_255C7D878();
  os_log_type_t v17 = sub_255C80BE8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_255A00000, v16, v17, "Telemetry identifier for power log is not available. Reporting is not possible.", v18, 2u);
    MEMORY[0x25A297C00](v18, -1, -1);
  }
LABEL_14:
}

uint64_t sub_255BB36E0()
{
  swift_bridgeObjectRelease();
  sub_255A7D6B8(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerLogReporter()
{
  return self;
}

uint64_t sub_255BB3754(uint64_t a1)
{
  return sub_255BB38BC(a1, 0xD000000000000013, 0x8000000255CA07B0, &qword_269F25CF0);
}

uint64_t sub_255BB3778(double a1)
{
  *(double *)(v1 + 96) = a1;
  return MEMORY[0x270FA2498](sub_255BB3798, 0, 0);
}

uint64_t sub_255BB3798()
{
  if (qword_269F20180 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22930);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_255C83400;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x8000000255CA07B0;
  *(void *)(inited + 72) = MEMORY[0x263F8D538];
  *(void *)(inited + 48) = v1;
  unint64_t v3 = sub_255A18738(inited);
  sub_255BB32E0(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_255BB3898(uint64_t a1)
{
  return sub_255BB38BC(a1, 0xD000000000000016, 0x8000000255CA07D0, &qword_269F25CF8);
}

uint64_t sub_255BB38BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for PowerLogReporter();
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_255BB31CC(0x61447265646E6552, 0xEA00000000006174, a2, a3);
  *a4 = v7;
  return result;
}

uint64_t sub_255BB392C(double a1)
{
  *(double *)(v1 + 96) = a1;
  return MEMORY[0x270FA2498](sub_255BB394C, 0, 0);
}

uint64_t sub_255BB394C()
{
  if (qword_269F20188 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22930);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_255C83400;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x8000000255CA07D0;
  *(void *)(inited + 72) = MEMORY[0x263F8D538];
  *(void *)(inited + 48) = v1;
  unint64_t v3 = sub_255A18738(inited);
  sub_255BB32E0(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_255BB3A4C()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F25D00);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F25D00);
  return sub_255C7D888();
}

uint64_t sub_255BB3AC4()
{
  uint64_t v0 = _s11ContentViewVMa_0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - v5;
  sub_255BB3C2C((uint64_t)v3);
  swift_getWitnessTable();
  sub_255A20F54(v3);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  sub_255A20F54(v6);
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_255BB3C2C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_255C7E628();
  *(void *)(a1 + 8) = v2;
  _s5QueueCMa();
  sub_255BBD5AC(&qword_26B299BC8, (void (*)(uint64_t))_s5QueueCMa);
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v3;
  _s17TransportControlsCMa();
  sub_255BBD5AC((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
  *(void *)(a1 + 32) = sub_255C7E628();
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = swift_getKeyPath();
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_WORD *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = swift_getKeyPath();
  *(unsigned char *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = swift_getKeyPath();
  *(void *)(a1 + 152) = 0;
  *(unsigned char *)(a1 + 160) = 0;
  uint64_t v5 = _s11ContentViewVMa_0();
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(v5 + 56));
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(v5 + 60));
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255BB3DE0()
{
  return sub_255BB3AC4();
}

uint64_t sub_255BB3DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v135 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  _s18DefaultContentViewVMa_0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D30);
  sub_255C7E458();
  _s10HeaderViewVMa();
  sub_255C80E88();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v141 = (char *)MEMORY[0x263F1BB78];
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D38);
  sub_255C7E458();
  _s28ControlsAndFooterButtonsViewVMa();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D40);
  sub_255C7E458();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  uint64_t v123 = sub_255C80318();
  uint64_t v121 = swift_getWitnessTable();
  uint64_t v4 = sub_255C7FF98();
  uint64_t v124 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v122 = (char *)&v104 - v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA88);
  uint64_t v125 = v4;
  uint64_t v6 = sub_255C7E458();
  uint64_t v129 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v128 = (char *)&v104 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA00);
  uint64_t v130 = v6;
  uint64_t v134 = sub_255C7E458();
  uint64_t v131 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v133 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v127 = (char *)&v104 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v132 = (char *)&v104 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25D48);
  uint64_t v118 = *(void *)(v13 - 8);
  uint64_t v119 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v110 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v105 = (uint64_t *)((char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v108 = (uint64_t)&v104 - v18;
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25D50);
  MEMORY[0x270FA5388](v109);
  uint64_t v107 = (uint64_t)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25D58);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v106 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25D60);
  MEMORY[0x270FA5388](v120);
  uint64_t v126 = (uint64_t)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v138 = (uint64_t)&v104 - v24;
  uint64_t v139 = v3;
  uint64_t v140 = v2;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCD0);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v111 = sub_255C80E88();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v166 = AssociatedConformanceWitness;
  uint64_t v167 = v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = sub_255A09998(&qword_26B29BCC8, &qword_26B29BCD0);
  uint64_t v164 = v27;
  uint64_t v165 = v28;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
  uint64_t v162 = v29;
  uint64_t v163 = v30;
  uint64_t v160 = swift_getWitnessTable();
  uint64_t v161 = MEMORY[0x263F1A450];
  uint64_t v159 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v113 = sub_255C7EBB8();
  uint64_t v31 = sub_255C7E458();
  uint64_t v114 = *(void (***)(char *, uint64_t))(v31 - 8);
  MEMORY[0x270FA5388](v31);
  long long v33 = (char *)&v104 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25020);
  uint64_t v34 = sub_255C7E458();
  uint64_t v115 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  id v36 = (char *)&v104 - v35;
  sub_255C7F0D8();
  uint64_t v37 = sub_255C7E458();
  uint64_t v136 = *(void *)(v37 - 8);
  uint64_t v137 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v117 = (char *)&v104 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v112 = (char *)&v104 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v141 = (char *)&v104 - v42;
  uint64_t v158 = sub_255C7FC78();
  uint64_t v142 = v140;
  uint64_t v143 = v139;
  uint64_t v43 = v116;
  uint64_t v144 = v116;
  sub_255C801F8();
  sub_255C7F588();
  swift_release();
  uint64_t v150 = 0x746E65746E6F63;
  unint64_t v151 = 0xE700000000000000;
  uint64_t v44 = *(void *)(v43 + 128);
  char v45 = *(unsigned char *)(v43 + 136);
  sub_255A0877C(v44, v45);
  sub_255ABBAE0(v44, v45);
  sub_255A087D0(v44, v45);
  sub_255C7EF68();
  sub_255C80378();
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v156 = MEMORY[0x263F1B428];
  uint64_t v157 = v46;
  uint64_t v47 = swift_getWitnessTable();
  sub_255B88054();
  uint64_t v48 = v36;
  sub_255C7F938();
  v114[1](v33, v31);
  uint64_t v49 = *(void *)(v43 + 144);
  uint64_t v50 = *(void *)(v43 + 152);
  uint64_t v51 = v43;
  LOBYTE(v31) = *(unsigned char *)(v43 + 160);
  sub_255A7663C(v49, v50, v31);
  sub_255ABBD20(v49, v50, v31, &v150);
  sub_255A767C8(v49, v50, v31);
  if (v151) {
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = sub_255A09998(&qword_269F25018, &qword_269F25020);
  uint64_t v154 = v47;
  uint64_t v155 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = v112;
  sub_255C7F8D8();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v48, v34);
  uint64_t v55 = sub_255BBD5AC((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v152 = v53;
  uint64_t v153 = v55;
  uint64_t v56 = v137;
  uint64_t v57 = swift_getWitnessTable();
  sub_255A20F54(v54);
  uint64_t v58 = v136 + 8;
  double v59 = *(void (***)(char *, uint64_t))(v136 + 8);
  ((void (*)(char *, uint64_t))v59)(v54, v56);
  uint64_t v60 = v51;
  uint64_t v61 = *(void *)(v51 + 32);
  if (!v61) {
    goto LABEL_9;
  }
  swift_beginAccess();
  char v62 = *(unsigned char *)(v61 + 58);
  uint64_t v63 = v128;
  uint64_t v64 = v138;
  uint64_t v65 = v119;
  uint64_t v114 = v59;
  uint64_t v115 = v58;
  uint64_t v113 = v57;
  if (v62)
  {
    uint64_t v66 = 1;
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v68 = (uint64_t)v105;
    *uint64_t v105 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    swift_storeEnumTagMultiPayload();
    uint64_t v69 = v108;
    sub_255B30FAC(v68, v108);
    uint64_t v70 = *(void *)(v60 + 128);
    char v71 = *(unsigned char *)(v60 + 136);
    sub_255A0877C(v70, v71);
    uint64_t v72 = sub_255ABBAE0(v70, v71);
    sub_255A087D0(v70, v71);
    LODWORD(v70) = sub_255C7EF68();
    sub_255C80378();
    uint64_t v74 = v73;
    uint64_t v76 = v75;
    uint64_t v77 = v107;
    sub_255B5CAE8(v69, v107);
    uint64_t v78 = v77 + *(int *)(v109 + 36);
    *(void *)uint64_t v78 = 0x736C6F72746E6F63;
    *(void *)(v78 + 8) = 0xE800000000000000;
    *(void *)(v78 + 16) = v72;
    *(_DWORD *)(v78 + 24) = v70;
    *(void *)(v78 + 32) = v74;
    *(void *)(v78 + 40) = v76;
    *(unsigned char *)(v78 + 48) = 0;
    sub_255B5CB4C(v69);
    sub_255BBCB14();
    uint64_t v79 = (uint64_t)v106;
    sub_255C7F8D8();
    sub_255A095A4(v77, &qword_269F25D50);
    uint64_t v80 = v110;
    sub_255A09540(v79, v110, &qword_269F25D58);
    double v81 = (uint64_t (**)())(v80 + *(int *)(v65 + 36));
    *double v81 = sub_255B5BD5C;
    v81[1] = 0;
    sub_255A095A4(v79, &qword_269F25D58);
    sub_255A10514(v80, v64, &qword_269F25D48);
    uint64_t v66 = 0;
  }
  uint64_t v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v64, v66, 1, v65);
  MEMORY[0x270FA5388](v82);
  uint64_t v83 = v139;
  *(&v104 - 4) = v140;
  *(&v104 - 3) = v83;
  *(&v104 - 2) = v60;
  sub_255C7EA58();
  uint64_t v84 = v122;
  sub_255C7FF88();
  uint64_t v85 = v125;
  uint64_t v86 = swift_getWitnessTable();
  sub_255C1C804();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v84, v85);
  sub_255C80248();
  uint64_t v87 = *(void *)(v60 + 32);
  if (v87)
  {
    swift_beginAccess();
    LOBYTE(v149[0]) = *(unsigned char *)(v87 + 58);
    uint64_t v88 = sub_255A09998(&qword_26B29BA80, &qword_26B29BA88);
    v149[5] = v86;
    v149[6] = v88;
    uint64_t v89 = v130;
    uint64_t v90 = swift_getWitnessTable();
    uint64_t v91 = v127;
    sub_255C7FB68();
    swift_release();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v63, v89);
    uint64_t v92 = sub_255A09998((unint64_t *)&qword_26B29B9F8, &qword_26B29BA00);
    v149[3] = v90;
    v149[4] = v92;
    uint64_t v93 = v134;
    uint64_t v140 = swift_getWitnessTable();
    uint64_t v94 = v132;
    sub_255A20F54(v91);
    uint64_t v95 = v131;
    uint64_t v96 = *(void (**)(char *, uint64_t))(v131 + 8);
    v96(v91, v93);
    uint64_t v97 = v137;
    uint64_t v98 = v117;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v117, v141, v137);
    v149[0] = v98;
    uint64_t v99 = v64;
    uint64_t v100 = v126;
    sub_255A09540(v99, v126, &qword_269F25D60);
    v149[1] = v100;
    uint64_t v101 = v133;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v133, v94, v93);
    v149[2] = v101;
    v148[0] = v97;
    v148[1] = v120;
    v148[2] = v93;
    uint64_t v145 = v113;
    uint64_t v146 = sub_255BBCD4C(&qword_269F25D70, &qword_269F25D60, (void (*)(void))sub_255BBCBF0);
    uint64_t v147 = v140;
    sub_255AF64A0((uint64_t)v149, 3uLL, (uint64_t)v148);
    v96(v94, v93);
    sub_255A095A4(v138, &qword_269F25D60);
    uint64_t v102 = v114;
    ((void (*)(char *, uint64_t))v114)(v141, v97);
    v96(v101, v93);
    sub_255A095A4(v100, &qword_269F25D60);
    return ((uint64_t (*)(char *, uint64_t))v102)(v98, v97);
  }
  else
  {
LABEL_9:
    _s17TransportControlsCMa();
    sub_255BBD5AC((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BB4FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t AssociatedConformanceWitness;
  uint64_t v42;
  long long v43;
  long long v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t WitnessTable;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  char v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  long long v173;
  long long v174;
  long long v175;
  _OWORD v176[3];

  uint64_t v116 = a4;
  uint64_t v109 = sub_255C7EA18();
  uint64_t v107 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v103 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v101 = (uint64_t)&v92 - v9;
  uint64_t v10 = sub_255C7DCC8();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v97 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v117 = (char *)&v92 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  uint64_t v112 = AssociatedTypeWitness;
  uint64_t v14 = sub_255C7E458();
  uint64_t v102 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v118 = (char *)&v92 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCD0);
  uint64_t v121 = v14;
  uint64_t v16 = sub_255C7E458();
  uint64_t v104 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v96 = (char *)&v92 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  uint64_t v119 = v16;
  uint64_t v18 = sub_255C7E458();
  uint64_t v110 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v106 = (char *)&v92 - v19;
  uint64_t v120 = v20;
  uint64_t v21 = sub_255C7E458();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v105 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v108 = (char *)&v92 - v25;
  uint64_t v113 = sub_255C80E88();
  uint64_t v115 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v92 - v29;
  uint64_t v31 = *(void *)(a1 + 144);
  uint64_t v32 = *(void *)(a1 + 152);
  char v33 = *(unsigned char *)(a1 + 160);
  sub_255A7663C(v31, v32, v33);
  sub_255ABBD20(v31, v32, v33, (uint64_t *)&v173);
  sub_255A767C8(v31, v32, v33);
  uint64_t v34 = *((void *)&v173 + 1);
  uint64_t v35 = MEMORY[0x263F1A450];
  if (*((void *)&v173 + 1))
  {
    uint64_t v92 = v22;
    uint64_t v93 = v27;
    uint64_t v94 = v30;
    uint64_t v95 = v21;
    uint64_t v36 = v173;
    uint64_t v37 = v114;
    sub_255C23448(*(void *)a1);
    uint64_t v38 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 296);
    swift_unknownObjectRetain();
    v38(&v144, v37, a3);
    swift_unknownObjectRelease();
    uint64_t v130 = v144;
    uint64_t v131 = v145;
    uint64_t v142 = v36;
    uint64_t v143 = v34;
    uint64_t v39 = sub_255AB6114();
    uint64_t v40 = v112;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *(void *)&uint64_t v173 = &type metadata for NowPlayingHostedContentID;
    *((void *)&v173 + 1) = v40;
    *(void *)&uint64_t v174 = v39;
    *((void *)&v174 + 1) = AssociatedConformanceWitness;
    uint64_t v42 = type metadata accessor for ContentLookup();
    sub_255A9A0F8((uint64_t)&v142, v42);
    swift_bridgeObjectRelease();
    swift_release();
    swift_getKeyPath();
    uint64_t v43 = *(_OWORD *)(a1 + 96);
    uint64_t v175 = *(_OWORD *)(a1 + 80);
    v176[0] = v43;
    *(_OWORD *)((char *)v176 + 10) = *(_OWORD *)(a1 + 106);
    uint64_t v44 = *(_OWORD *)(a1 + 64);
    uint64_t v173 = *(_OWORD *)(a1 + 48);
    uint64_t v174 = v44;
    sub_255A1D4DC((uint64_t)&v173, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v144);
    sub_255A1D4DC((uint64_t)&v173, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    uint64_t v130 = v144;
    uint64_t v131 = v145;
    uint64_t v132 = v146;
    uint64_t v133 = v147;
    if (v148)
    {
      uint64_t v134 = v148;
      uint64_t v135 = v149;
      uint64_t v136 = v150;
      uint64_t v137 = v151;
      uint64_t v138 = v152;
      uint64_t v139 = v153;
      uint64_t v140 = v154;
      uint64_t v141 = v155;
      sub_255BE5ABC((uint64_t)&v142);
    }
    else
    {
      uint64_t v134 = 0;
      uint64_t v135 = v149;
      uint64_t v136 = v150;
      uint64_t v137 = v151;
      uint64_t v138 = v152;
      uint64_t v139 = v153;
      uint64_t v140 = v154;
      uint64_t v141 = v155;
      sub_255BE59C0((uint64_t)&v142);
    }
    uint64_t v130 = v143;
    uint64_t v56 = v117;
    uint64_t v111 = AssociatedConformanceWitness;
    sub_255C7F678();
    swift_release();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v56, v40);
    _s11ContentViewVMa_0();
    uint64_t v57 = v101;
    sub_255ABA66C(v101);
    uint64_t v58 = v107;
    double v59 = v103;
    uint64_t v60 = v109;
    (*(void (**)(char *, void, uint64_t))(v107 + 104))(v103, *MEMORY[0x263F19968], v109);
    LOBYTE(v56) = sub_255C7DCB8();
    uint64_t v61 = *(void (**)(char *, uint64_t))(v58 + 8);
    v61(v59, v60);
    v61((char *)v57, v60);
    if (v56)
    {
      uint64_t v63 = v97;
      char v62 = v98;
      uint64_t v64 = v99;
      (*(void (**)(uint64_t, void, uint64_t))(v98 + 104))(v97, *MEMORY[0x263F184F8], v99);
      uint64_t v65 = v62;
    }
    else
    {
      uint64_t v63 = v97;
      sub_255ABC184(v97);
      uint64_t v65 = v98;
      uint64_t v64 = v99;
    }
    uint64_t v66 = v96;
    uint64_t v67 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
    uint64_t v128 = v111;
    uint64_t v129 = v67;
    uint64_t v68 = v121;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v70 = v118;
    sub_255C7F658();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v70, v68);
    sub_255AB84D4();
    char v71 = sub_255A09998(&qword_26B29BCC8, &qword_26B29BCD0);
    uint64_t v126 = WitnessTable;
    uint64_t v127 = v71;
    uint64_t v72 = v119;
    uint64_t v73 = swift_getWitnessTable();
    uint64_t v74 = v106;
    sub_255C7F608();
    swift_release();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v66, v72);
    sub_255C7F1B8();
    sub_255C7E468();
    uint64_t v75 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    uint64_t v124 = v73;
    uint64_t v125 = v75;
    uint64_t v76 = v120;
    uint64_t v77 = swift_getWitnessTable();
    uint64_t v78 = v105;
    sub_255C7F7D8();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v74, v76);
    uint64_t v122 = v77;
    uint64_t v54 = MEMORY[0x263F1A450];
    uint64_t v123 = MEMORY[0x263F1A450];
    uint64_t v79 = v95;
    swift_getWitnessTable();
    uint64_t v80 = v108;
    sub_255A20F54(v78);
    double v81 = v92;
    uint64_t v82 = *(void (**)(char *, uint64_t))(v92 + 8);
    v82(v78, v79);
    uint64_t v83 = (uint64_t)v93;
    sub_255A20F54(v80);
    v82(v80, v79);
    uint64_t v49 = v111;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v83, 0, 1, v79);
    uint64_t v84 = (uint64_t)v94;
    sub_255A97640(v83, (uint64_t)v94);
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    uint64_t v85 = v83;
    uint64_t v30 = (char *)v84;
    uint64_t v55 = v113;
    v52(v85, v113);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v27, 1, 1, v21);
    char v45 = swift_getAssociatedConformanceWitness();
    uint64_t v46 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
    uint64_t v171 = v45;
    uint64_t v172 = v46;
    uint64_t v47 = swift_getWitnessTable();
    uint64_t v48 = sub_255A09998(&qword_26B29BCC8, &qword_26B29BCD0);
    uint64_t v169 = v47;
    uint64_t v170 = v48;
    uint64_t v49 = v45;
    uint64_t v50 = swift_getWitnessTable();
    uint64_t v51 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    uint64_t v167 = v50;
    uint64_t v168 = v51;
    uint64_t v165 = swift_getWitnessTable();
    uint64_t v166 = v35;
    swift_getWitnessTable();
    sub_255A97640((uint64_t)v27, (uint64_t)v30);
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    uint64_t v53 = v113;
    v52((uint64_t)v27, v113);
    uint64_t v54 = v35;
    uint64_t v55 = v53;
  }
  uint64_t v86 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v163 = v49;
  uint64_t v164 = v86;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v88 = sub_255A09998(&qword_26B29BCC8, &qword_26B29BCD0);
  uint64_t v161 = v87;
  uint64_t v162 = v88;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v90 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
  uint64_t v159 = v89;
  uint64_t v160 = v90;
  uint64_t v157 = swift_getWitnessTable();
  uint64_t v158 = v54;
  uint64_t v156 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v30);
  return ((uint64_t (*)(char *, uint64_t))v52)(v30, v55);
}

double MCUINamespace<A>.nowPlayingHorizontalPadding.getter()
{
  sub_255BB5D78();
  sub_255C7E8C8();
  return v1;
}

unint64_t sub_255BB5D78()
{
  unint64_t result = qword_269F25D28;
  if (!qword_269F25D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25D28);
  }
  return result;
}

double sub_255BB5DCC@<D0>(double *a1@<X8>)
{
  sub_255BB5D78();
  sub_255C7E8C8();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255BB5E1C()
{
  return sub_255C7E8D8();
}

uint64_t MCUINamespace<A>.nowPlayingHorizontalPadding.setter()
{
  return sub_255C7E8D8();
}

uint64_t sub_255BB5EA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v97 = a4;
  uint64_t v85 = _s28ControlsAndFooterButtonsViewVMa();
  uint64_t v87 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = &v68[-v7];
  uint64_t v86 = sub_255C7E458();
  uint64_t v89 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v83 = &v68[-v8];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D40);
  uint64_t v9 = sub_255C7E458();
  uint64_t v91 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v82 = &v68[-v10];
  uint64_t v92 = v11;
  uint64_t v96 = sub_255C7E458();
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v95 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v90 = &v68[-v14];
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = &v68[-v16];
  _s18DefaultContentViewVMa_0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D30);
  uint64_t v76 = sub_255C7E458();
  _s10HeaderViewVMa();
  uint64_t v17 = sub_255C80E88();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v78 = v17;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v81 = sub_255C7E598();
  uint64_t v79 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D38);
  uint64_t v18 = sub_255C7E458();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v101 = v18;
  uint64_t v102 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v88 = &v68[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v80 = &v68[-v22];
  MEMORY[0x270FA5388](v23);
  uint64_t v103 = &v68[-v24];
  uint64_t v25 = *a1;
  uint64_t v26 = a1;
  uint64_t v100 = a1;
  sub_255C23448(v25);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  uint64_t v28 = v27(a2, a3);
  swift_unknownObjectRelease();
  uint64_t v98 = a2;
  uint64_t v99 = a3;
  sub_255BB6ABC(v28, (uint64_t)&v135);
  long long v125 = v136;
  long long v126 = v137;
  long long v127 = v138;
  long long v128 = v139;
  uint64_t v124 = v135;
  uint64_t v129 = v140;
  char v130 = v141;
  char v131 = v142;
  long long v132 = v143;
  unsigned __int8 v133 = v144;
  uint64_t v134 = v145;
  sub_255C801D8();
  uint64_t v113 = a2;
  uint64_t v114 = a3;
  uint64_t v115 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25D88);
  uint64_t v75 = swift_getWitnessTable();
  sub_255BBCD4C(&qword_269F25D90, &qword_269F25D88, (void (*)(void))sub_255BBCDC4);
  sub_255C7FAC8();
  long long v29 = v125;
  long long v30 = v126;
  uint64_t v31 = v127;
  uint64_t v72 = *((void *)&v128 + 1);
  uint64_t v32 = v128;
  uint64_t v73 = *((void *)&v127 + 1);
  uint64_t v33 = v129;
  LOBYTE(v27) = v130;
  LOBYTE(a3) = v131;
  uint64_t v70 = *((void *)&v132 + 1);
  uint64_t v71 = v132;
  int v69 = v133;
  uint64_t v74 = v134;
  swift_release();
  sub_255A1D054(v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31, v73, v32, v72, v33, (char)v27, a3);
  sub_255A767C8(v71, v70, v69);
  swift_release();
  memcpy(v123, v146, sizeof(v123));
  sub_255C801D8();
  uint64_t v35 = v98;
  uint64_t v34 = v99;
  uint64_t v110 = v98;
  uint64_t v111 = v99;
  uint64_t v36 = v100;
  uint64_t v112 = v100;
  uint64_t v37 = sub_255A09998(&qword_269F25DC8, &qword_269F25D30);
  uint64_t v121 = v75;
  uint64_t v122 = v37;
  uint64_t v75 = MEMORY[0x263F18E48];
  uint64_t v38 = swift_getWitnessTable();
  sub_255C7FAC8();
  memcpy(v149, v123, sizeof(v149));
  sub_255BBCF44((uint64_t)v149);
  memcpy(v120, v147, sizeof(v120));
  uint64_t v107 = v35;
  uint64_t v108 = v34;
  uint64_t v109 = v36;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25DD0);
  uint64_t v39 = v82;
  uint64_t v40 = swift_getWitnessTable();
  v119[13] = v38;
  v119[14] = v40;
  uint64_t v41 = swift_getWitnessTable();
  sub_255BBCC90(&qword_269F25DD8, &qword_269F25DD0, (void (*)(void))sub_255BBD0F0);
  uint64_t v42 = v80;
  sub_255C7F588();
  memcpy(v150, v120, 0x198uLL);
  sub_255BBD190((uint64_t)v150);
  uint64_t v43 = sub_255A09998(&qword_269F25DF0, &qword_269F25D38);
  v119[11] = v41;
  v119[12] = v43;
  uint64_t v44 = v101;
  uint64_t v79 = swift_getWitnessTable();
  sub_255A20F54(v42);
  uint64_t v80 = *(unsigned char **)(v102 + 8);
  uint64_t v81 = v102 + 8;
  ((void (*)(unsigned char *, uint64_t))v80)(v42, v44);
  char v45 = v84;
  uint64_t v47 = v98;
  uint64_t v46 = v99;
  sub_255BB7A7C((uint64_t)v84);
  sub_255C7F1A8();
  uint64_t v48 = v85;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v83;
  sub_255C7FAF8();
  (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v45, v48);
  uint64_t v104 = v47;
  uint64_t v105 = v46;
  uint64_t v51 = v100;
  uint64_t v106 = v100;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25DF8);
  v119[9] = v49;
  v119[10] = MEMORY[0x263F18C10];
  uint64_t v52 = v86;
  uint64_t v53 = swift_getWitnessTable();
  sub_255BBD444();
  sub_255C7F588();
  (*(void (**)(unsigned char *, uint64_t))(v89 + 8))(v50, v52);
  if (v51[4])
  {
    swift_beginAccess();
    sub_255C801F8();
    uint64_t v54 = sub_255A09998(&qword_269F25E28, &qword_269F25D40);
    v119[4] = v53;
    v119[5] = v54;
    uint64_t v55 = v92;
    uint64_t v56 = swift_getWitnessTable();
    uint64_t v57 = v90;
    sub_255C7FA38();
    (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v39, v55);
    v119[2] = v56;
    v119[3] = MEMORY[0x263F18860];
    uint64_t v58 = v96;
    uint64_t v59 = swift_getWitnessTable();
    uint64_t v60 = v93;
    sub_255A20F54(v57);
    uint64_t v61 = v94;
    char v62 = *(void (**)(unsigned char *, uint64_t))(v94 + 8);
    v62(v57, v58);
    uint64_t v63 = v88;
    uint64_t v64 = v101;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v102 + 16))(v88, v103, v101);
    v119[0] = v63;
    uint64_t v65 = v95;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v95, v60, v58);
    v119[1] = v65;
    v118[0] = v64;
    v118[1] = v58;
    uint64_t v116 = v79;
    uint64_t v117 = v59;
    sub_255AF64A0((uint64_t)v119, 2uLL, (uint64_t)v118);
    v62(v60, v58);
    uint64_t v66 = (uint64_t (*)(unsigned char *, uint64_t))v80;
    ((void (*)(unsigned char *, uint64_t))v80)(v103, v64);
    v62(v65, v58);
    return v66(v63, v64);
  }
  else
  {
    _s17TransportControlsCMa();
    sub_255BBD5AC((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BB6ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = swift_getKeyPath();
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_WORD *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = swift_getKeyPath();
  *(void *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 104) = 0;
  sub_255C7E048();
  sub_255C80228();
  sub_255C80258();
  swift_release();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E038();
  if (qword_269F1FE68 != -1) {
    swift_once();
  }
  swift_retain();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E058();
  swift_release();
  swift_release();
  sub_255C7E048();
  sub_255C80228();
  sub_255C80258();
  swift_release();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E038();
  if (qword_269F1FE60 != -1) {
    swift_once();
  }
  swift_retain();
  sub_255C7E078();
  swift_release();
  swift_release();
  sub_255C7E058();
  swift_release();
  swift_release();
  uint64_t v3 = sub_255C7E008();
  swift_release();
  uint64_t result = swift_release();
  *(void *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_255BB6D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_255C7E958();
  uint64_t v49 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v44[-v6];
  uint64_t v8 = _s11ContentViewVMa_0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v44[-v10];
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v13 = *(void *)(a1 + 152);
  char v14 = *(unsigned char *)(a1 + 160);
  sub_255A7663C(v12, v13, v14);
  sub_255ABBD20(v12, v13, v14, (uint64_t *)v90);
  sub_255A767C8(v12, v13, v14);
  if (!*((void *)&v90[0] + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v90[0] == __PAIR128__(0xE500000000000000, 0x6575657571))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v15 = sub_255C81428();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_10:
    sub_255BBD590(&v70);
LABEL_16:
    sub_255A10514((uint64_t)&v70, (uint64_t)v92, &qword_269F25D88);
    return sub_255A10514((uint64_t)v92, v50, &qword_269F25D88);
  }
LABEL_6:
  uint64_t v16 = *(void *)(a1 + 128);
  char v17 = *(unsigned char *)(a1 + 136);
  sub_255A0877C(v16, v17);
  uint64_t v18 = sub_255ABBAE0(v16, v17);
  sub_255A087D0(v16, v17);
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    swift_beginAccess();
    char v20 = *(unsigned char *)(v19 + 32);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    if ((v20 & 1) == 0)
    {
      BOOL v47 = 0;
      goto LABEL_12;
    }
    uint64_t v21 = *((void *)v11 + 2);
    if (v21)
    {
      swift_beginAccess();
      BOOL v47 = *(void *)(v21 + 24) < 1;
LABEL_12:
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      int v46 = sub_255C7EF68();
      sub_255C80378();
      uint64_t v23 = v22;
      uint64_t v25 = v24;
      int v45 = sub_255C7F188();
      long long v26 = *(_OWORD *)(a1 + 48);
      v90[1] = *(_OWORD *)(a1 + 64);
      long long v27 = *(_OWORD *)(a1 + 96);
      v90[2] = *(_OWORD *)(a1 + 80);
      v91[0] = v27;
      *(_OWORD *)((char *)v91 + 10) = *(_OWORD *)(a1 + 106);
      v90[0] = v26;
      sub_255A1D4DC((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
      sub_255AB99F4((uint64_t)v55);
      sub_255A1D4DC((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
      uint64_t v28 = v18;
      v92[0] = v55[0];
      v92[1] = v55[1];
      char v93 = v56;
      char v94 = v57;
      if (v58)
      {
        char v95 = v58;
        uint64_t v96 = v59;
        char v97 = v60;
        uint64_t v98 = v61;
        uint64_t v99 = v62;
        uint64_t v100 = v63;
        uint64_t v101 = v64;
        char v102 = v65;
        sub_255BE5ABC((uint64_t)&v70);
      }
      else
      {
        char v95 = 0;
        uint64_t v96 = v59;
        char v97 = v60;
        uint64_t v98 = v61;
        uint64_t v99 = v62;
        uint64_t v100 = v63;
        uint64_t v101 = v64;
        char v102 = v65;
        sub_255BE59C0((uint64_t)&v70);
      }
      sub_255C7DC08();
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      uint64_t v37 = sub_255C7E468();
      char v38 = sub_255C7F198();
      char v52 = 0;
      sub_255C7E948();
      uint64_t v39 = v49;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 16))(v48, v7, v3);
      sub_255BBD5AC(&qword_269F24AE8, MEMORY[0x263F197F0]);
      uint64_t v40 = sub_255C7E088();
      v69[0] = *(_DWORD *)v54;
      *(_DWORD *)((char *)v69 + 3) = *(_DWORD *)&v54[3];
      v68[0] = *(_DWORD *)v53;
      *(_DWORD *)((char *)v68 + 3) = *(_DWORD *)&v53[3];
      char v41 = v52;
      v67[0] = *(_DWORD *)v51;
      *(_DWORD *)((char *)v67 + 3) = *(_DWORD *)&v51[3];
      (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v7, v3);
      *(_DWORD *)uint64_t v76 = v69[0];
      *(_DWORD *)&v76[3] = *(_DWORD *)((char *)v69 + 3);
      *(_DWORD *)uint64_t v78 = v68[0];
      *(_DWORD *)&v78[3] = *(_DWORD *)((char *)v68 + 3);
      *(_DWORD *)uint64_t v84 = v67[0];
      *(_DWORD *)&v84[3] = *(_DWORD *)((char *)v67 + 3);
      *(_DWORD *)&void v88[3] = *(_DWORD *)&v66[3];
      *(_DWORD *)uint64_t v88 = *(_DWORD *)v66;
      *(void *)&long long v70 = 0x49676E6979616C70;
      *((void *)&v70 + 1) = 0xEB000000006D6574;
      uint64_t v71 = v28;
      int v72 = v46;
      uint64_t v73 = v23;
      uint64_t v74 = v25;
      BOOL v75 = v47;
      char v77 = v45;
      uint64_t v79 = v30;
      uint64_t v80 = v32;
      uint64_t v81 = v34;
      uint64_t v82 = v36;
      char v83 = v41;
      long long v85 = xmmword_255C8CCB0;
      uint64_t v86 = v37;
      char v87 = v38;
      uint64_t v89 = v40;
      CGSizeMake(&v70, v42);
      goto LABEL_16;
    }
  }
  _s5QueueCMa();
  sub_255BBD5AC(&qword_26B299BC8, (void (*)(uint64_t))_s5QueueCMa);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

uint64_t sub_255BB738C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  char v4 = *(unsigned char *)(a1 + 160);
  sub_255A7663C(v2, v3, v4);
  sub_255ABBD20(v2, v3, v4, (uint64_t *)&v93);
  sub_255A767C8(v2, v3, v4);
  uint64_t v5 = *((void *)&v93 + 1);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    *(void *)uint64_t v86 = 1;
    _s10HeaderViewVMa();
    *(_OWORD *)&v86[8] = 0u;
    long long v87 = 0u;
    long long v88 = 0u;
    long long v89 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    __int16 v92 = 0;
    swift_getWitnessTable();
    sub_255A97640((uint64_t)v86, (uint64_t)&v93);
    uint64_t v7 = *((void *)&v93 + 1);
    uint64_t v6 = v93;
    uint64_t v8 = v94;
    uint64_t v9 = *((void *)&v95 + 1);
    uint64_t v10 = v95;
    uint64_t v12 = *((void *)&v96 + 1);
    uint64_t v11 = v96;
    uint64_t v14 = *((void *)&v97 + 1);
    uint64_t v13 = v97;
    uint64_t v16 = *((void *)&v98 + 1);
    uint64_t v15 = v98;
    uint64_t v17 = v99;
    uint64_t v18 = v100;
    __int16 v19 = v101;
LABEL_18:
    uint64_t v52 = v10;
    uint64_t v56 = v9;
    uint64_t v60 = v6;
    uint64_t v64 = v11;
    uint64_t v65 = v12;
    uint64_t v66 = v13;
    *(void *)&long long v93 = v6;
    *((void *)&v93 + 1) = v7;
    uint64_t v94 = v8;
    *(void *)&long long v95 = v10;
    *((void *)&v95 + 1) = v9;
    *(void *)&long long v96 = v11;
    *((void *)&v96 + 1) = v12;
    *(void *)&long long v97 = v13;
    *((void *)&v97 + 1) = v14;
    *(void *)&long long v98 = v15;
    *((void *)&v98 + 1) = v16;
    uint64_t v99 = v17;
    uint64_t v100 = v18;
    __int16 v101 = v19;
    uint64_t v48 = v15;
    uint64_t v49 = v16;
    _s10HeaderViewVMa();
    sub_255C80E88();
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_255A20F54(&v93);
    return sub_255BBD35C(v60, v7, v8, v52, v56, v64, v65, v66, v14, v48, v49, v17, SBYTE1(v17), v18, v19);
  }
  sub_255A7663C(v2, v3, v4);
  sub_255ABBD20(v2, v3, v4, (uint64_t *)&v93);
  sub_255A767C8(v2, v3, v4);
  if (!*((void *)&v93 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v93 == __PAIR128__(0xE500000000000000, 0x6575657571))
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v20 = sub_255C81428();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_10:
    char v22 = 0;
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    swift_beginAccess();
    char v22 = *(unsigned char *)(v21 + 32) ^ 1;
LABEL_11:
    sub_255B87BC4(v22 & 1, (uint64_t)v86);
    uint64_t v23 = *(void *)&v86[16];
    long long v24 = v87;
    long long v26 = v88;
    uint64_t v25 = v89;
    uint64_t v57 = v90;
    uint64_t v61 = *((void *)&v89 + 1);
    uint64_t v27 = *((void *)&v90 + 1);
    char v28 = v91;
    char v29 = BYTE1(v91);
    uint64_t v53 = *((void *)&v91 + 1);
    char v51 = v92;
    long long v76 = *(_OWORD *)v86;
    uint64_t v77 = *(void *)&v86[16];
    long long v78 = v87;
    long long v79 = v88;
    long long v80 = v89;
    long long v81 = v90;
    __int16 v82 = v91;
    uint64_t v83 = *((void *)&v91 + 1);
    __int16 v84 = v92;
    _s10HeaderViewVMa();
    swift_getWitnessTable();
    sub_255A20F54(&v76);
    swift_unknownObjectRelease();
    sub_255A1D054(v23, v24, *((uint64_t *)&v24 + 1), v26, *((uint64_t *)&v26 + 1), v25, v61, v57, v27, v28, v29);
    sub_255A087D0(v53, v51);
    uint64_t v58 = v95;
    uint64_t v62 = v94;
    uint64_t v30 = v96;
    uint64_t v54 = *((void *)&v95 + 1);
    uint64_t v31 = *((void *)&v96 + 1);
    long long v32 = v97;
    long long v33 = v98;
    char v34 = v99;
    char v35 = BYTE1(v99);
    uint64_t v36 = v100;
    LOBYTE(v25) = v101;
    *(_OWORD *)uint64_t v86 = v93;
    *(void *)&v86[16] = v94;
    long long v87 = v95;
    long long v88 = v96;
    long long v89 = v97;
    long long v90 = v98;
    LOWORD(v91) = v99;
    *((void *)&v91 + 1) = v100;
    __int16 v92 = v101;
    sub_255A20F54(v86);
    swift_unknownObjectRelease();
    sub_255A1D054(v62, v58, v54, v30, v31, v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, v35);
    sub_255A087D0(v36, v25);
    uint64_t v59 = v78;
    uint64_t v63 = v77;
    uint64_t v37 = v79;
    uint64_t v55 = *((void *)&v78 + 1);
    uint64_t v38 = *((void *)&v79 + 1);
    long long v39 = v80;
    long long v40 = v81;
    char v41 = v82;
    char v42 = HIBYTE(v82);
    uint64_t v43 = v83;
    char v44 = v84;
    if (HIBYTE(v82)) {
      uint64_t v45 = 256;
    }
    else {
      uint64_t v45 = 0;
    }
    uint64_t v46 = v45 | v82;
    if (HIBYTE(v84)) {
      __int16 v47 = 256;
    }
    else {
      __int16 v47 = 0;
    }
    long long v67 = v76;
    uint64_t v68 = v77;
    long long v69 = v78;
    long long v70 = v79;
    long long v71 = v80;
    long long v72 = v81;
    uint64_t v73 = v46;
    uint64_t v74 = v83;
    __int16 v75 = v47 | v84;
    sub_255A97640((uint64_t)&v67, (uint64_t)v86);
    swift_unknownObjectRelease();
    sub_255A1D054(v63, v59, v55, v37, v38, v39, *((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41, v42);
    sub_255A087D0(v43, v44);
    uint64_t v6 = *(void *)v86;
    uint64_t v7 = *(void *)&v86[8];
    uint64_t v8 = *(void *)&v86[16];
    uint64_t v9 = *((void *)&v87 + 1);
    uint64_t v10 = v87;
    uint64_t v12 = *((void *)&v88 + 1);
    uint64_t v11 = v88;
    uint64_t v14 = *((void *)&v89 + 1);
    uint64_t v13 = v89;
    uint64_t v16 = *((void *)&v90 + 1);
    uint64_t v15 = v90;
    uint64_t v18 = *((void *)&v91 + 1);
    uint64_t v17 = v91;
    __int16 v19 = v92;
    goto LABEL_18;
  }
  _s5QueueCMa();
  sub_255BBD5AC(&qword_26B299BC8, (void (*)(uint64_t))_s5QueueCMa);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

uint64_t sub_255BB7994(uint64_t a1)
{
  sub_255C7FC78();
  uint64_t v2 = *(void *)(a1 + 128);
  LOBYTE(a1) = *(unsigned char *)(a1 + 136);
  sub_255A0877C(v2, a1);
  sub_255ABBAE0(v2, a1);
  sub_255A087D0(v2, a1);
  sub_255C7EF68();
  sub_255C80378();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25DE8);
  sub_255BBD0F0();
  sub_255C7F8D8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_255BB7A7C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = swift_getKeyPath();
  uint64_t v2 = _s28ControlsAndFooterButtonsViewVMa();
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_WORD *)(a1 + 72) = 0;
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(v2 + 36));
  *uint64_t v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  char v4 = (uint64_t *)(a1 + *(int *)(v2 + 40));
  _s17TransportControlsCMa();
  sub_255BBD5AC((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
  uint64_t result = sub_255C7E628();
  *char v4 = result;
  v4[1] = v6;
  return result;
}

uint64_t sub_255BB7B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25E10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7FC78();
  uint64_t v8 = *(void *)(a1 + 128);
  LOBYTE(a1) = *(unsigned char *)(a1 + 136);
  sub_255A0877C(v8, a1);
  uint64_t v9 = sub_255ABBAE0(v8, a1);
  sub_255A087D0(v8, a1);
  LODWORD(a1) = sub_255C7EF68();
  sub_255C80378();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = sub_255C7E468();
  char v15 = sub_255C7F198();
  v18[0] = v7;
  v18[1] = 0x736C6F72746E6F63;
  double v18[2] = 0xE800000000000000;
  v18[3] = v9;
  int v19 = a1;
  uint64_t v20 = v11;
  uint64_t v21 = v13;
  char v22 = 1;
  uint64_t v23 = v14;
  char v24 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25E20);
  sub_255BBD4E4();
  sub_255C7F8D8();
  swift_bridgeObjectRelease();
  swift_release();
  sub_255A09540((uint64_t)v6, a2, &qword_269F25E10);
  uint64_t v16 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F25DF8) + 36));
  *uint64_t v16 = sub_255B5BD5C;
  v16[1] = 0;
  return sub_255A095A4((uint64_t)v6, &qword_269F25E10);
}

uint64_t sub_255BB7D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  _s21FullScreenArtworkViewVMa();
  sub_255C7F0D8();
  sub_255C7E458();
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  _s33DefaultMetadataAndContextMenuViewVMa();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  sub_255C7E458();
  sub_255C80E88();
  _s10BannerViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C80E88();
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v5 = sub_255C7FF98();
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_255C7E458();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v21 - v13;
  long long v15 = v2[5];
  long long v44 = v2[4];
  long long v45 = v15;
  long long v46 = v2[6];
  uint64_t v47 = *((void *)v2 + 14);
  long long v16 = v2[1];
  long long v40 = *v2;
  long long v41 = v16;
  long long v17 = v2[3];
  long long v42 = v2[2];
  long long v43 = v17;
  uint64_t v27 = v23;
  uint64_t v28 = v22;
  char v29 = &v40;
  sub_255C7EA58();
  sub_255C7FF88();
  sub_255C7F1B8();
  long long v36 = v44;
  long long v37 = v45;
  long long v38 = v46;
  uint64_t v39 = v47;
  long long v32 = v40;
  long long v33 = v41;
  long long v34 = v42;
  long long v35 = v43;
  sub_255BB9518();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
  uint64_t v30 = WitnessTable;
  uint64_t v31 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_255A20F54(v11);
  int v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  sub_255A20F54(v14);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
}

uint64_t sub_255BB812C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a4;
  _s21FullScreenArtworkViewVMa();
  sub_255C7F0D8();
  uint64_t v96 = sub_255C7E458();
  uint64_t v80 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  long long v81 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v72 - v9;
  MEMORY[0x270FA5388](v11);
  long long v93 = (char *)&v72 - v12;
  *(void *)&long long v74 = *(void *)a1;
  swift_retain();
  uint64_t v82 = a2;
  uint64_t v83 = a3;
  *(void *)&long long v187 = sub_255BE1660();
  *((void *)&v187 + 1) = v13;
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 96);
  uint64_t v79 = a1;
  char v16 = *(unsigned char *)(a1 + 104);
  sub_255A7663C(v14, v15, v16);
  sub_255ABBD20(v14, v15, v16, (uint64_t *)&v181);
  sub_255A767C8(v14, v15, v16);
  if (*((void *)&v181 + 1)) {
    swift_bridgeObjectRelease();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F8D8();
  swift_release();
  uint64_t v18 = sub_255BBD5AC((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v197 = WitnessTable;
  uint64_t v198 = v18;
  uint64_t v19 = v96;
  uint64_t v75 = swift_getWitnessTable();
  sub_255A20F54(v10);
  long long v76 = *(void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v77 = v80 + 8;
  v76(v10, v19);
  sub_255A7663C(v14, v15, v16);
  sub_255ABBD20(v14, v15, v16, (uint64_t *)&v187);
  sub_255A767C8(v14, v15, v16);
  uint64_t v20 = *((void *)&v187 + 1);
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x263F18C10];
  if (v20)
  {
    _s33DefaultMetadataAndContextMenuViewVMa();
    sub_255C7E458();
    long long v181 = 0u;
    long long v182 = 0u;
    memset(v183, 0, sizeof(v183));
    *(void *)&long long v184 = 0;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
    sub_255C7E458();
    uint64_t v195 = swift_getWitnessTable();
    uint64_t v196 = v21;
    uint64_t v22 = swift_getWitnessTable();
    uint64_t v23 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    uint64_t v193 = v22;
    uint64_t v194 = v23;
    swift_getWitnessTable();
    sub_255A97640((uint64_t)&v181, (uint64_t)&v187);
    uint64_t v24 = v187;
    uint64_t v90 = v188;
    uint64_t v91 = *((void *)&v187 + 1);
    uint64_t v88 = *((void *)&v189[0] + 1);
    *(void *)&long long v95 = *(void *)&v189[0];
    uint64_t v89 = *((void *)&v188 + 1);
    uint64_t v86 = *((void *)&v189[1] + 1);
    uint64_t v87 = *(void *)&v189[1];
    uint64_t v84 = *((void *)&v189[2] + 1);
    uint64_t v85 = *(void *)&v189[2];
    uint64_t v25 = v190;
  }
  else
  {
    sub_255BE16DC((uint64_t)&v175);
    uint64_t v26 = v176;
    char v27 = BYTE8(v176);
    long long v95 = v175;
    long long v128 = v175;
    *(void *)&long long v129 = v176;
    BYTE8(v129) = BYTE8(v176);
    LODWORD(v94) = sub_255C7F188();
    long long v28 = *(_OWORD *)(v79 + 24);
    long long v29 = *(_OWORD *)(v79 + 56);
    v201[2] = *(_OWORD *)(v79 + 40);
    v202[0] = v29;
    *(_OWORD *)((char *)v202 + 10) = *(_OWORD *)(v79 + 66);
    v201[0] = *(_OWORD *)(v79 + 8);
    v201[1] = v28;
    sub_255A1D4DC((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v181);
    sub_255A1D4DC((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    long long v187 = v181;
    LOWORD(v188) = v182;
    if (BYTE2(v182))
    {
      BYTE2(v188) = BYTE2(v182);
      *((void *)&v188 + 1) = *((void *)&v182 + 1);
      LOBYTE(v189[0]) = v183[0];
      *((void *)&v189[0] + 1) = *((void *)&v183[0] + 1);
      v189[1] = v183[1];
      *(void *)&v189[2] = *(void *)&v183[2];
      BYTE8(v189[2]) = BYTE8(v183[2]);
      sub_255BE5ABC((uint64_t)&v120);
    }
    else
    {
      BYTE2(v188) = 0;
      *((void *)&v188 + 1) = *((void *)&v182 + 1);
      LOBYTE(v189[0]) = v183[0];
      *((void *)&v189[0] + 1) = *((void *)&v183[0] + 1);
      v189[1] = v183[1];
      *(void *)&v189[2] = *(void *)&v183[2];
      BYTE8(v189[2]) = BYTE8(v183[2]);
      sub_255BE59C0((uint64_t)&v120);
    }
    _s33DefaultMetadataAndContextMenuViewVMa();
    uint64_t v30 = swift_getWitnessTable();
    sub_255C7FAF8();
    swift_unknownObjectRelease();
    sub_255A087D0(v26, v27);
    uint64_t v31 = v188;
    char v32 = BYTE8(v188);
    long long v94 = v187;
    long long v175 = v187;
    *(void *)&long long v176 = v188;
    BYTE8(v176) = BYTE8(v188);
    LOBYTE(v177[0]) = v189[0];
    *(_OWORD *)((char *)v177 + 8) = *(_OWORD *)((char *)v189 + 8);
    *(_OWORD *)((char *)&v177[1] + 8) = *(_OWORD *)((char *)&v189[1] + 8);
    BYTE8(v177[2]) = BYTE8(v189[2]);
    *(void *)&long long v92 = *(void *)(v79 + 112);
    sub_255C7E458();
    uint64_t v99 = v30;
    uint64_t v100 = MEMORY[0x263F18C10];
    *(void *)&long long v95 = MEMORY[0x263F18E48];
    uint64_t v33 = swift_getWitnessTable();
    sub_255C7F608();
    swift_unknownObjectRelease();
    sub_255A087D0(v31, v32);
    uint64_t v34 = v182;
    LOBYTE(v31) = BYTE8(v182);
    *(void *)&long long v94 = v184;
    long long v92 = v181;
    long long v175 = v181;
    *(void *)&long long v176 = v182;
    BYTE8(v176) = BYTE8(v182);
    LOBYTE(v177[0]) = v183[0];
    *(_OWORD *)((char *)v177 + 8) = *(_OWORD *)((char *)v183 + 8);
    *(_OWORD *)((char *)&v177[1] + 8) = *(_OWORD *)((char *)&v183[1] + 8);
    BYTE8(v177[2]) = BYTE8(v183[2]);
    *(void *)&long long v178 = v184;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
    sub_255C7E458();
    uint64_t v35 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    uint64_t v97 = v33;
    uint64_t v98 = v35;
    swift_getWitnessTable();
    sub_255A20F54(&v175);
    swift_unknownObjectRelease();
    sub_255A087D0(v34, v31);
    swift_release();
    uint64_t v36 = v188;
    char v37 = BYTE8(v188);
    long long v95 = v187;
    long long v181 = v187;
    *(void *)&long long v182 = v188;
    BYTE8(v182) = BYTE8(v188);
    LOBYTE(v183[0]) = v189[0];
    *(_OWORD *)((char *)v183 + 8) = *(_OWORD *)((char *)v189 + 8);
    *(_OWORD *)((char *)&v183[1] + 8) = *(_OWORD *)((char *)&v189[1] + 8);
    BYTE8(v183[2]) = BYTE8(v189[2]);
    *(void *)&long long v184 = v190;
    sub_255A20F54(&v181);
    swift_unknownObjectRelease();
    sub_255A087D0(v36, v37);
    swift_release();
    uint64_t v38 = v176;
    char v39 = BYTE8(v176);
    long long v95 = v175;
    long long v128 = v175;
    *(void *)&long long v129 = v176;
    *((void *)&v129 + 1) = BYTE8(v176);
    *(_OWORD *)&v130[8] = *(_OWORD *)((char *)v177 + 8);
    *(_OWORD *)&v130[24] = *(_OWORD *)((char *)&v177[1] + 8);
    *(void *)char v130 = LOBYTE(v177[0]);
    *(void *)&v130[40] = BYTE8(v177[2]);
    *(void *)&long long v131 = v178;
    sub_255A97640((uint64_t)&v128, (uint64_t)&v181);
    swift_unknownObjectRelease();
    sub_255A087D0(v38, v39);
    swift_release();
    uint64_t v24 = v181;
    uint64_t v90 = v182;
    uint64_t v91 = *((void *)&v181 + 1);
    uint64_t v88 = *((void *)&v183[0] + 1);
    *(void *)&long long v95 = *(void *)&v183[0];
    uint64_t v89 = *((void *)&v182 + 1);
    uint64_t v86 = *((void *)&v183[1] + 1);
    uint64_t v87 = *(void *)&v183[1];
    uint64_t v84 = *((void *)&v183[2] + 1);
    uint64_t v85 = *(void *)&v183[2];
    uint64_t v25 = v184;
  }
  *(void *)&long long v94 = v25;
  sub_255A7663C(v14, v15, v16);
  sub_255ABBD20(v14, v15, v16, (uint64_t *)&v187);
  sub_255A767C8(v14, v15, v16);
  uint64_t v40 = *((void *)&v187 + 1);
  swift_bridgeObjectRelease();
  *(void *)&long long v92 = v24;
  if (v40)
  {
    sub_255BBE9AC(&v175);
    _s10BannerViewVMa();
    sub_255C7E458();
    sub_255C7E458();
    uint64_t v41 = sub_255C80E88();
    long long v42 = *(void (**)(long long *, long long *, uint64_t))(*(void *)(v41 - 8) + 32);
    v42(&v181, &v175, v41);
    uint64_t v173 = swift_getWitnessTable();
    uint64_t v43 = MEMORY[0x263F18C10];
    uint64_t v174 = MEMORY[0x263F18C10];
    uint64_t v44 = v92;
    uint64_t v171 = swift_getWitnessTable();
    uint64_t v172 = v43;
    swift_getWitnessTable();
    sub_255A97640((uint64_t)&v181, (uint64_t)&v187);
    v42(&v181, &v187, v41);
    v42(&v187, &v181, v41);
  }
  else
  {
    swift_retain();
    sub_255BC1BF8((uint64_t)&v187);
    uint64_t v45 = v188;
    char v46 = BYTE8(v188);
    long long v181 = v187;
    *(void *)&long long v182 = v188;
    BYTE8(v182) = BYTE8(v188);
    long long v74 = v189[0];
    v183[0] = v189[0];
    sub_255C7F1A8();
    _s10BannerViewVMa();
    uint64_t v47 = swift_getWitnessTable();
    sub_255C7FAF8();
    swift_release();
    sub_255A087D0(v45, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = v154;
    char v49 = v155;
    uint64_t v143 = v152;
    uint64_t v144 = v153;
    uint64_t v145 = v154;
    char v146 = v155;
    long long v74 = v156;
    long long v147 = v156;
    char v148 = v157;
    long long v149 = v158;
    long long v150 = v159;
    char v151 = v160;
    LODWORD(v73) = sub_255C7F188();
    long long v50 = *(_OWORD *)(v79 + 24);
    long long v51 = *(_OWORD *)(v79 + 56);
    v199[2] = *(_OWORD *)(v79 + 40);
    v200[0] = v51;
    *(_OWORD *)((char *)v200 + 10) = *(_OWORD *)(v79 + 66);
    v199[0] = *(_OWORD *)(v79 + 8);
    v199[1] = v50;
    sub_255A1D4DC((uint64_t)v199, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v134);
    sub_255A1D4DC((uint64_t)v199, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    long long v187 = v134;
    LOWORD(v188) = v135;
    if (v136)
    {
      BYTE2(v188) = v136;
      *((void *)&v188 + 1) = v137;
      LOBYTE(v189[0]) = v138;
      *((void *)&v189[0] + 1) = v139;
      v189[1] = v140;
      *(void *)&v189[2] = v141;
      BYTE8(v189[2]) = v142;
      sub_255BE5ABC((uint64_t)&v181);
    }
    else
    {
      BYTE2(v188) = 0;
      *((void *)&v188 + 1) = v137;
      LOBYTE(v189[0]) = v138;
      *((void *)&v189[0] + 1) = v139;
      v189[1] = v140;
      *(void *)&v189[2] = v141;
      BYTE8(v189[2]) = v142;
      sub_255BE59C0((uint64_t)&v181);
    }
    sub_255C7E458();
    v101[20] = v47;
    uint64_t v52 = MEMORY[0x263F18C10];
    v101[21] = MEMORY[0x263F18C10];
    uint64_t v53 = swift_getWitnessTable();
    sub_255C7FAF8();
    swift_release();
    sub_255A087D0(v48, v49);
    swift_unknownObjectRelease();
    v102[6] = v179;
    v103[0] = v180[0];
    *(_OWORD *)((char *)v103 + 9) = *(_OWORD *)((char *)v180 + 9);
    void v102[2] = v177[0];
    v102[3] = v177[1];
    v102[4] = v177[2];
    v102[5] = v178;
    v102[0] = v175;
    v102[1] = v176;
    long long v191 = v179;
    v192[0] = v180[0];
    *(_OWORD *)((char *)v192 + 9) = *(_OWORD *)((char *)v180 + 9);
    v189[0] = v177[0];
    v189[1] = v177[1];
    long long v190 = v178;
    v189[2] = v177[2];
    long long v188 = v176;
    long long v187 = v175;
    sub_255C7E458();
    v101[18] = v53;
    v101[19] = v52;
    swift_getWitnessTable();
    sub_255A20F54(&v187);
    sub_255BBEBC4((uint64_t)v102);
    long long v110 = v185;
    v111[0] = v186[0];
    *(_OWORD *)((char *)v111 + 9) = *(_OWORD *)((char *)v186 + 9);
    long long v106 = v183[0];
    long long v107 = v183[1];
    long long v108 = v183[2];
    long long v109 = v184;
    long long v104 = v181;
    long long v105 = v182;
    long long v191 = v185;
    v192[0] = v186[0];
    *(_OWORD *)((char *)v192 + 9) = *(_OWORD *)((char *)v186 + 9);
    v189[0] = v183[0];
    v189[1] = v183[1];
    long long v190 = v184;
    v189[2] = v183[2];
    long long v188 = v182;
    long long v187 = v181;
    sub_255A20F54(&v187);
    sub_255BBEBC4((uint64_t)&v104);
    long long v118 = v132;
    v119[0] = v133[0];
    *(_OWORD *)((char *)v119 + 9) = *(_OWORD *)((char *)v133 + 9);
    long long v114 = *(_OWORD *)v130;
    long long v115 = *(_OWORD *)&v130[16];
    long long v116 = *(_OWORD *)&v130[32];
    long long v117 = v131;
    long long v112 = v128;
    long long v113 = v129;
    long long v126 = v132;
    v127[0] = v133[0];
    *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)((char *)v133 + 9);
    long long v122 = *(_OWORD *)v130;
    long long v123 = *(_OWORD *)&v130[16];
    long long v124 = *(_OWORD *)&v130[32];
    long long v125 = v131;
    long long v120 = v128;
    long long v121 = v129;
    CGSizeMake(&v120, v54);
    uint64_t v55 = sub_255C80E88();
    uint64_t v56 = *(void (**)(long long *, long long *, uint64_t))(*(void *)(v55 - 8) + 32);
    v56((long long *)v101, &v120, v55);
    sub_255A97640((uint64_t)v101, (uint64_t)&v187);
    sub_255BBEBC4((uint64_t)&v112);
    v56(&v128, &v187, v55);
    v56(&v187, &v128, v55);
    uint64_t v44 = v92;
  }
  uint64_t v57 = v81;
  (*(void (**)(void))(v80 + 16))();
  *(void *)&long long v128 = v44;
  uint64_t v59 = v90;
  uint64_t v58 = v91;
  *((void *)&v128 + 1) = v91;
  *(void *)&long long v129 = v90;
  uint64_t v60 = v88;
  *((void *)&v129 + 1) = v89;
  *(void *)char v130 = v95;
  *(void *)&v130[8] = v88;
  uint64_t v61 = v86;
  *(void *)&v130[16] = v87;
  *(void *)&v130[24] = v86;
  uint64_t v62 = v84;
  uint64_t v63 = v85;
  *(void *)&v130[32] = v85;
  *(void *)&v130[40] = v84;
  *(void *)&long long v131 = v94;
  *(void *)&long long v120 = v57;
  *((void *)&v120 + 1) = &v128;
  uint64_t v73 = _s10BannerViewVMa();
  *(void *)&long long v74 = sub_255C7E458();
  uint64_t v79 = sub_255C7E458();
  uint64_t v64 = sub_255C80E88();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v80 = *(void *)(v65 + 32);
  uint64_t v82 = v65 + 32;
  ((void (*)(long long *, long long *, uint64_t))v80)(&v175, &v187, v64);
  *(void *)&long long v121 = &v175;
  sub_255BBE9C8(v92, v58, v59, v89, v95, v60, v87, v61, v63, v62, v94);
  sub_255BBEAF8((uint64_t)&v187, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_255BBEA30);
  *(void *)&long long v112 = v96;
  _s33DefaultMetadataAndContextMenuViewVMa();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21DB0);
  sub_255C7E458();
  *((void *)&v112 + 1) = sub_255C80E88();
  *(void *)&long long v113 = v64;
  *(void *)&long long v104 = v75;
  uint64_t v169 = swift_getWitnessTable();
  uint64_t v66 = MEMORY[0x263F18C10];
  uint64_t v170 = MEMORY[0x263F18C10];
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
  uint64_t v167 = v67;
  uint64_t v168 = v68;
  uint64_t v166 = swift_getWitnessTable();
  *((void *)&v104 + 1) = swift_getWitnessTable();
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v165 = v66;
  uint64_t v162 = swift_getWitnessTable();
  uint64_t v163 = v66;
  uint64_t v161 = swift_getWitnessTable();
  *(void *)&long long v105 = swift_getWitnessTable();
  sub_255AF64A0((uint64_t)&v120, 3uLL, (uint64_t)&v112);
  sub_255BBEA90(v92, v91, v90, v89, v95, v88, v87, v86, v85, v84, v94);
  sub_255BBEAF8((uint64_t)&v187, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_255BBEB64);
  uint64_t v69 = v96;
  long long v70 = (uint64_t (*)(char *, uint64_t))v76;
  v76(v93, v96);
  ((void (*)(long long *, long long *, uint64_t))v80)(&v181, &v175, v64);
  sub_255BBEAF8((uint64_t)&v181, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_255BBEB64);
  sub_255BBEA90(v128, *((uint64_t *)&v128 + 1), v129, SBYTE8(v129), *(uint64_t *)v130, *(uint64_t *)&v130[8], *(uint64_t *)&v130[16], *(uint64_t *)&v130[24], *(uint64_t *)&v130[32], *(uint64_t *)&v130[40], v131);
  return v70(v81, v69);
}

void sub_255BB9518()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  char v8 = *(unsigned char *)(v0 + 80);
  char v9 = *(unsigned char *)(v0 + 81);
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v12 = *(void *)(v0 + 8);
  uint64_t v14 = v12;
  uint64_t v15 = v11;
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  char v23 = v8;
  char v24 = v9;
  sub_255A1CFDC(v12, v11, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_255AB99F4((uint64_t)v13);
  sub_255A1D054(v12, v11, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  if (v13[17])
  {
    id v10 = objc_msgSend(self, sel_currentTraitCollection);
    objc_msgSend(v10, sel_displayScale);
  }
}

uint64_t sub_255BB9704@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v73 = a1;
  uint64_t v2 = (_OWORD *)*((void *)a1 + 2);
  uint64_t v3 = (_OWORD *)*((void *)a1 + 3);
  _s15TimeControlViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  _s12ControlsViewVMa();
  uint64_t v86 = v2;
  uint64_t v87 = v3;
  _s13FooterButtonsVMa();
  swift_getTupleTypeMetadata3();
  uint64_t v4 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v60 = v4;
  uint64_t v5 = sub_255C7FF98();
  uint64_t v64 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v58 = (char *)&v57 - v6;
  uint64_t v7 = sub_255C7E458();
  uint64_t v77 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v84 = (char *)&v57 - v8;
  uint64_t v9 = sub_255C7E458();
  uint64_t v81 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)&v57 - v10;
  sub_255C7ECF8();
  uint64_t v11 = sub_255C7E458();
  uint64_t v65 = v5;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = MEMORY[0x263F18C10];
  uint64_t v61 = v12;
  uint64_t v112 = v12;
  uint64_t v113 = MEMORY[0x263F18C10];
  uint64_t v78 = v7;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v110 = v66;
  uint64_t v111 = v13;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v76 = MEMORY[0x263F19EA8];
  uint64_t v108 = swift_getWitnessTable();
  uint64_t v109 = MEMORY[0x263F189A8];
  uint64_t v15 = swift_getWitnessTable();
  *(void *)&long long v118 = v9;
  *((void *)&v118 + 1) = v11;
  *(void *)&long long v119 = v14;
  *((void *)&v119 + 1) = v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v80 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v85 = (char *)&v57 - v17;
  sub_255C7ECF8();
  uint64_t v18 = sub_255C7E458();
  uint64_t v82 = v9;
  *(void *)&long long v118 = v9;
  *((void *)&v118 + 1) = v11;
  uint64_t v74 = v11;
  uint64_t v67 = v15;
  uint64_t v68 = v14;
  *(void *)&long long v119 = v14;
  *((void *)&v119 + 1) = v15;
  uint64_t v19 = v57;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v107 = MEMORY[0x263F18BF0];
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v70 = OpaqueTypeMetadata2;
  uint64_t v71 = v18;
  *(void *)&long long v118 = OpaqueTypeMetadata2;
  *((void *)&v118 + 1) = v18;
  uint64_t v75 = OpaqueTypeConformance2;
  *(void *)&long long v119 = OpaqueTypeConformance2;
  *((void *)&v119 + 1) = v21;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = *(void *)((char *)v19 + *((int *)v73 + 10));
  if (v27)
  {
    uint64_t v69 = v26;
    uint64_t v72 = v21;
    uint64_t v73 = (char *)&v57 - v25;
    uint64_t v28 = swift_beginAccess();
    int v62 = *(unsigned __int8 *)(v27 + 58);
    MEMORY[0x270FA5388](v28);
    long long v29 = v87;
    *(&v57 - 4) = v86;
    *(&v57 - 3) = v29;
    *(&v57 - 2) = v19;
    int v63 = v30;
    *((unsigned char *)&v57 - 8) = v30;
    sub_255C7EA58();
    uint64_t v31 = v58;
    sub_255C7FF88();
    sub_255C7F188();
    long long v32 = v19[3];
    long long v120 = v19[2];
    v121[0] = v32;
    *(_OWORD *)((char *)v121 + 10) = *(_OWORD *)((char *)v19 + 58);
    long long v33 = v19[1];
    long long v118 = *v19;
    long long v119 = v33;
    sub_255A1D4DC((uint64_t)&v118, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v114);
    sub_255A1D4DC((uint64_t)&v118, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    uint64_t v76 = v23;
    long long v98 = v114;
    LOWORD(v99) = v115;
    if (BYTE2(v115))
    {
      BYTE2(v99) = BYTE2(v115);
      uint64_t v100 = *((void *)&v115 + 1);
      char v101 = v116;
      uint64_t v102 = *((void *)&v116 + 1);
      long long v103 = *(_OWORD *)v117;
      uint64_t v104 = *(void *)&v117[16];
      char v105 = v117[24];
      sub_255BE5ABC((uint64_t)&v88);
    }
    else
    {
      BYTE2(v99) = 0;
      uint64_t v100 = *((void *)&v115 + 1);
      char v101 = v116;
      uint64_t v102 = *((void *)&v116 + 1);
      long long v103 = *(_OWORD *)v117;
      uint64_t v104 = *(void *)&v117[16];
      char v105 = v117[24];
      sub_255BE59C0((uint64_t)&v88);
    }
    uint64_t v34 = v82;
    uint64_t v35 = v70;
    uint64_t v37 = v64;
    uint64_t v36 = v65;
    sub_255C7FAF8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v36);
    sub_255C7F1B8();
    long long v38 = v19[3];
    long long v116 = v19[2];
    *(_OWORD *)long long v117 = v38;
    *(_OWORD *)&v117[10] = *(_OWORD *)((char *)v19 + 58);
    long long v39 = v19[1];
    long long v114 = *v19;
    long long v115 = v39;
    sub_255A1D4DC((uint64_t)&v114, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v98);
    sub_255A1D4DC((uint64_t)&v114, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    uint64_t v40 = v86;
    long long v88 = v98;
    __int16 v89 = v99;
    if (BYTE2(v99))
    {
      char v90 = BYTE2(v99);
      uint64_t v91 = v100;
      char v92 = v101;
      uint64_t v93 = v102;
      long long v94 = v103;
      uint64_t v95 = v104;
      char v96 = v105;
      sub_255BE5ABC((uint64_t)v97);
    }
    else
    {
      char v90 = 0;
      uint64_t v91 = v100;
      char v92 = v101;
      uint64_t v93 = v102;
      long long v94 = v103;
      uint64_t v95 = v104;
      char v96 = v105;
      sub_255BE59C0((uint64_t)v97);
    }
    uint64_t v41 = v78;
    long long v42 = v79;
    char v43 = v63;
    uint64_t v44 = v84;
    sub_255C7FAF8();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v44, v41);
    uint64_t v45 = sub_255C80248();
    MEMORY[0x270FA5388](v45);
    char v46 = v87;
    *(&v57 - 4) = v40;
    *(&v57 - 3) = v46;
    *((unsigned char *)&v57 - 16) = v43;
    swift_checkMetadataState();
    sub_255C7FB58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v34);
    uint64_t v47 = sub_255C80248();
    MEMORY[0x270FA5388](v47);
    uint64_t v48 = v87;
    *(&v57 - 4) = v40;
    *(&v57 - 3) = v48;
    *((unsigned char *)&v57 - 16) = v43;
    uint64_t v49 = swift_checkMetadataState();
    uint64_t v50 = v69;
    uint64_t v51 = v75;
    uint64_t v52 = v72;
    uint64_t v53 = v85;
    sub_255C7FB58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v53, v35);
    *(void *)&long long v98 = v35;
    *((void *)&v98 + 1) = v49;
    uint64_t v99 = v51;
    uint64_t v100 = v52;
    swift_getOpaqueTypeConformance2();
    uint64_t v54 = v73;
    sub_255A20F54(v50);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
    v55(v50, v22);
    sub_255A20F54(v54);
    return ((uint64_t (*)(char *, uint64_t))v55)(v54, v22);
  }
  else
  {
    _s17TransportControlsCMa();
    sub_255BBD5AC((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BBA1F4@<X0>(_OWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, void (*a4)(unsigned char *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a5;
  uint64_t v46 = _s13FooterButtonsVMa();
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v10);
  uint64_t v50 = &v35[-v11 - 8];
  CGSizeMake(a3, a4);
  sub_255C7F1B8();
  long long v12 = a1[3];
  v89[2] = a1[2];
  v90[0] = v12;
  *(_OWORD *)((char *)v90 + 10) = *(_OWORD *)((char *)a1 + 58);
  long long v13 = a1[1];
  v89[0] = *a1;
  v89[1] = v13;
  sub_255A1D4DC((uint64_t)v89, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v73);
  sub_255A1D4DC((uint64_t)v89, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  *(_OWORD *)uint64_t v66 = *(_OWORD *)v73;
  v66[16] = v73[16];
  *(_WORD *)&v66[17] = *(_WORD *)&v73[17];
  *(void *)&long long v67 = v74;
  BYTE8(v67) = BYTE8(v74);
  v68[0] = v75[0];
  v68[1] = v75[1];
  LOBYTE(v69) = v76;
  sub_255BD1754();
  uint64_t v14 = a4;
  _s15TimeControlViewVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  LOBYTE(v56) = v66[0];
  long long v57 = *(_OWORD *)&v66[8];
  long long v58 = v67;
  LOBYTE(v59) = v68[0];
  sub_255C7E458();
  uint64_t v82 = WitnessTable;
  uint64_t v83 = MEMORY[0x263F18C10];
  uint64_t v16 = swift_getWitnessTable();
  sub_255C7FA68();
  v66[0] = v73[0];
  *(_OWORD *)&v66[8] = *(_OWORD *)&v73[8];
  long long v67 = v74;
  LOBYTE(v68[0]) = v75[0];
  *(_OWORD *)((char *)v68 + 8) = *(_OWORD *)((char *)v75 + 8);
  uint64_t v44 = sub_255C7E458();
  uint64_t v80 = v16;
  uint64_t v81 = MEMORY[0x263F189A8];
  uint64_t v45 = swift_getWitnessTable();
  sub_255A20F54(v66);
  uint64_t v41 = v14;
  sub_255B59FD4(a2, (uint64_t)v66);
  uint64_t v17 = *(void *)v66;
  uint64_t v18 = *(void *)&v66[8];
  uint64_t v19 = v67;
  uint64_t v39 = *(void *)&v66[16];
  uint64_t v20 = *((void *)&v67 + 1);
  uint64_t v37 = *((void *)&v68[0] + 1);
  *(void *)&long long v38 = *(void *)&v68[0];
  uint64_t v21 = *((void *)&v68[1] + 1);
  *(void *)&long long v36 = *(void *)&v68[1];
  LOBYTE(a1) = v69;
  char v22 = HIBYTE(v69);
  uint64_t v56 = *(void *)v66;
  long long v57 = *(_OWORD *)&v66[8];
  long long v58 = v67;
  uint64_t v59 = *(void *)&v68[0];
  long long v60 = *(_OWORD *)((char *)v68 + 8);
  uint64_t v61 = *((void *)&v68[1] + 1);
  __int16 v62 = v69;
  *(_OWORD *)&v35[8] = v70;
  long long v40 = v71;
  long long v63 = v70;
  long long v64 = v71;
  char v65 = v72;
  uint64_t v42 = _s12ControlsViewVMa();
  uint64_t v43 = swift_getWitnessTable();
  sub_255A20F54(&v56);
  sub_255A1D054(v17, v18, v39, v19, v20, v38, v37, v36, v21, (char)a1, v22);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v23 = v48;
  sub_255BC23B0((uint64_t)v48);
  uint64_t v24 = v46;
  uint64_t v39 = swift_getWitnessTable();
  sub_255A20F54(v23);
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
  *(void *)&long long v40 = v49 + 8;
  uint64_t v41 = v25;
  v25(v23, v24);
  LOBYTE(v56) = v84;
  long long v57 = v85;
  long long v58 = v86;
  LOBYTE(v59) = v87;
  long long v60 = v88;
  uint64_t v26 = *(void *)v73;
  uint64_t v27 = *(void *)&v73[8];
  uint64_t v28 = *(void *)&v73[16];
  uint64_t v34 = *((void *)&v74 + 1);
  uint64_t v29 = v74;
  *(_OWORD *)uint64_t v35 = v75[0];
  uint64_t v30 = *((void *)&v75[1] + 1);
  uint64_t v37 = *(void *)&v75[1];
  LOBYTE(a1) = v76;
  char v72 = v79;
  char v31 = HIBYTE(v76);
  *(void *)uint64_t v66 = *(void *)v73;
  *(void *)&v66[8] = *(void *)&v73[8];
  *(void *)&v66[16] = *(void *)&v73[16];
  long long v67 = v74;
  v68[0] = v75[0];
  v68[1] = v75[1];
  __int16 v69 = v76;
  long long v36 = v77;
  long long v38 = v78;
  long long v70 = v77;
  long long v71 = v78;
  v55[0] = &v56;
  v55[1] = v66;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 16))(v23, v50, v24);
  void v55[2] = v23;
  sub_255A1CFDC(v26, v27, v28, v29, v34, *(uint64_t *)v35, *(uint64_t *)&v35[8], v37, v30, (char)a1, v31);
  swift_retain();
  swift_unknownObjectRetain();
  v54[0] = v44;
  v54[1] = v42;
  v54[2] = v24;
  uint64_t v51 = v45;
  uint64_t v52 = v43;
  uint64_t v53 = v39;
  sub_255AF64A0((uint64_t)v55, 3uLL, (uint64_t)v54);
  long long v32 = v41;
  v41(v50, v24);
  sub_255A1D054(*(uint64_t *)v73, *(uint64_t *)&v73[8], *(uint64_t *)&v73[16], v74, *((uint64_t *)&v74 + 1), *(uint64_t *)&v75[0], *((uint64_t *)&v75[0] + 1), *(uint64_t *)&v75[1], *((uint64_t *)&v75[1] + 1), v76, SHIBYTE(v76));
  swift_unknownObjectRelease();
  swift_release();
  v32(v48, v24);
  sub_255A1D054(*(uint64_t *)v66, *(uint64_t *)&v66[8], *(uint64_t *)&v66[16], v67, *((uint64_t *)&v67 + 1), *(uint64_t *)&v68[0], *((uint64_t *)&v68[0] + 1), *(uint64_t *)&v68[1], *((uint64_t *)&v68[1] + 1), v69, SHIBYTE(v69));
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_255BBA8F0()
{
  _s15TimeControlViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  _s12ControlsViewVMa();
  _s13FooterButtonsVMa();
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7ECF8();
  uint64_t v0 = sub_255C7E458();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v10 - v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FA68();
  v10[0] = WitnessTable;
  v10[1] = MEMORY[0x263F189A8];
  swift_getWitnessTable();
  sub_255A20F54(v3);
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  sub_255A20F54(v6);
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
}

uint64_t sub_255BBABB0()
{
  _s15TimeControlViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  _s12ControlsViewVMa();
  _s13FooterButtonsVMa();
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FF98();
  sub_255C7E458();
  uint64_t v0 = sub_255C7E458();
  sub_255C7ECF8();
  uint64_t v1 = sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = MEMORY[0x263F18C10];
  v15[10] = WitnessTable;
  double v15[11] = MEMORY[0x263F18C10];
  unsigned char v15[8] = swift_getWitnessTable();
  v15[9] = v3;
  uint64_t v4 = swift_getWitnessTable();
  v15[6] = swift_getWitnessTable();
  v15[7] = MEMORY[0x263F189A8];
  void v15[2] = v0;
  v15[3] = v1;
  void v15[4] = v4;
  void v15[5] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_255C7ECF8();
  uint64_t v5 = sub_255C7E458();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v15 - v10;
  uint64_t v12 = swift_getWitnessTable();
  sub_255C7FAB8();
  v15[0] = v12;
  v15[1] = MEMORY[0x263F18BF0];
  swift_getWitnessTable();
  sub_255A20F54(v8);
  long long v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  sub_255A20F54(v11);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, v5);
}

uint64_t (*MCUINamespace<A>.nowPlayingHorizontalPadding.modify(uint64_t a1))(void *a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_255BB5D78();
  sub_255C7E8C8();
  return sub_255BBAFAC;
}

uint64_t sub_255BBAFAC(void *a1)
{
  a1[1] = *a1;
  return sub_255C7E8D8();
}

uint64_t sub_255BBAFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255A1A1D4();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

double EnvironmentValues.nowPlayingHorizontalPadding.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v0, v4);
  sub_255BB5D78();
  sub_255C7E8C8();
  double v5 = *(double *)&v7[1];
  sub_255A095A4((uint64_t)v3, qword_26B297F28);
  return v5;
}

uint64_t sub_255BBB138@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  sub_255BB5D78();
  sub_255C7E8C8();
  uint64_t v8 = v10[1];
  uint64_t result = sub_255A095A4((uint64_t)v6, qword_26B297F28);
  *a2 = v8;
  return result;
}

uint64_t sub_255BBB22C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = sub_255C7E8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, a2, v8);
  v11[1] = v7;
  sub_255BB5D78();
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
}

uint64_t EnvironmentValues.nowPlayingHorizontalPadding.setter(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7E8B8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v2, v7);
  *(double *)&v10[1] = a1;
  sub_255BB5D78();
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v2, v6, v7);
}

void (*EnvironmentValues.nowPlayingHorizontalPadding.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[5] = v5;
  uint64_t v6 = sub_255C7E8B8();
  v3[6] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  _OWORD v3[7] = v7;
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  unsigned char v3[8] = v8;
  v3[9] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v5, v1, v6);
  v3[10] = sub_255BB5D78();
  sub_255C7E8C8();
  uint64_t v9 = v3[1];
  sub_255A095A4((uint64_t)v5, qword_26B297F28);
  *uint64_t v3 = v9;
  return sub_255BBB5DC;
}

void sub_255BBB5DC(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (*a1)[7];
  uint64_t v5 = **a1;
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[8])((*a1)[5], (*a1)[4], (*a1)[6]);
  uint64_t v6 = (void *)v3[5];
  uint64_t v7 = v3[6];
  uint64_t v8 = v3[4];
  uint64_t v9 = 3;
  if (a2) {
    uint64_t v9 = 2;
  }
  v3[v9] = v5;
  sub_255C7E8D8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v7);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v8, v6, v7);
  free(v6);

  free(v3);
}

double sub_255BBB6BC@<D0>(double *a1@<X8>)
{
  sub_255BB5D78();
  sub_255C7E8C8();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255BBB70C()
{
  return sub_255C7E8D8();
}

uint64_t sub_255BBB758()
{
  return 0;
}

ValueMetadata *type metadata accessor for NowPlayingHorizontalPaddingKey()
{
  return &type metadata for NowPlayingHorizontalPaddingKey;
}

uint64_t _s36FullScreenContentView_CompactRegularVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BBB798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s11ContentViewVMa_0()
{
  return __swift_instantiateGenericMetadata();
}

void sub_255BBB828()
{
  sub_255BBC9F8(319, (unint64_t *)&qword_26B29B5A0, MEMORY[0x263F18520]);
  if (v0 <= 0x3F)
  {
    sub_255BBC9F8(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255BBB954(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v33 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    uint64_t v9 = a2[7];
    uint64_t v10 = a2[8];
    uint64_t v11 = a2[9];
    uint64_t v29 = a2[10];
    uint64_t v30 = a2[11];
    uint64_t v12 = a2[14];
    uint64_t v31 = a2[13];
    uint64_t v32 = a2[12];
    char v13 = *((unsigned char *)a2 + 120);
    char v14 = *((unsigned char *)a2 + 121);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_255A1CFDC(v33, v9, v10, v11, v29, v30, v32, v31, v12, v13, v14);
    *(void *)(a1 + 48) = v33;
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v29;
    *(void *)(a1 + 88) = v30;
    *(void *)(a1 + 96) = v32;
    *(void *)(a1 + 104) = v31;
    *(void *)(a1 + 112) = v12;
    *(unsigned char *)(a1 + 120) = v13;
    *(unsigned char *)(a1 + 121) = v14;
    uint64_t v15 = a2[16];
    char v16 = *((unsigned char *)a2 + 136);
    sub_255A0877C(v15, v16);
    *(void *)(a1 + 128) = v15;
    *(unsigned char *)(a1 + 136) = v16;
    uint64_t v17 = a2[18];
    uint64_t v18 = a2[19];
    char v19 = *((unsigned char *)a2 + 160);
    sub_255A7663C(v17, v18, v19);
    *(void *)(a1 + 144) = v17;
    *(void *)(a1 + 152) = v18;
    *(unsigned char *)(a1 + 160) = v19;
    uint64_t v20 = *(int *)(a3 + 56);
    uint64_t v21 = (void *)(a1 + v20);
    char v22 = (uint64_t *)((char *)a2 + v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = *(int *)(a3 + 60);
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BBBC1C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_255A1D054(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120), *(unsigned char *)(a1 + 121));
  sub_255A087D0(*(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
  sub_255A767C8(*(void *)(a1 + 144), *(void *)(a1 + 152), *(unsigned char *)(a1 + 160));
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 60);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA18();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255BBBDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v32 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v30 = *(void *)(a2 + 104);
  uint64_t v31 = *(void *)(a2 + 96);
  char v12 = *(unsigned char *)(a2 + 120);
  char v13 = *(unsigned char *)(a2 + 121);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_255A1CFDC(v32, v8, v9, v10, v28, v29, v31, v30, v11, v12, v13);
  *(void *)(a1 + 48) = v32;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v30;
  *(void *)(a1 + 112) = v11;
  *(unsigned char *)(a1 + 120) = v12;
  *(unsigned char *)(a1 + 121) = v13;
  uint64_t v14 = *(void *)(a2 + 128);
  char v15 = *(unsigned char *)(a2 + 136);
  sub_255A0877C(v14, v15);
  *(void *)(a1 + 128) = v14;
  *(unsigned char *)(a1 + 136) = v15;
  uint64_t v16 = *(void *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 152);
  char v18 = *(unsigned char *)(a2 + 160);
  sub_255A7663C(v16, v17, v18);
  *(void *)(a1 + 144) = v16;
  *(void *)(a1 + 152) = v17;
  *(unsigned char *)(a1 + 160) = v18;
  uint64_t v19 = *(int *)(a3 + 56);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_255C7DCC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    void *v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = *(int *)(a3 + 60);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *uint64_t v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255BBC020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v12 = *(void *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v42 = *(void *)(a2 + 112);
  char v43 = *(unsigned char *)(a2 + 120);
  char v44 = *(unsigned char *)(a2 + 121);
  sub_255A1CFDC(v5, v6, v7, v8, v9, v10, v12, v11, v42, v43, v44);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a1 + 112);
  char v22 = *(unsigned char *)(a1 + 120);
  char v23 = *(unsigned char *)(a1 + 121);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v42;
  *(unsigned char *)(a1 + 120) = v43;
  *(unsigned char *)(a1 + 121) = v44;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v24 = *(void *)(a2 + 128);
  LOBYTE(v5) = *(unsigned char *)(a2 + 136);
  sub_255A0877C(v24, v5);
  uint64_t v25 = *(void *)(a1 + 128);
  char v26 = *(unsigned char *)(a1 + 136);
  *(void *)(a1 + 128) = v24;
  *(unsigned char *)(a1 + 136) = v5;
  sub_255A087D0(v25, v26);
  uint64_t v27 = *(void *)(a2 + 144);
  uint64_t v28 = *(void *)(a2 + 152);
  LOBYTE(v6) = *(unsigned char *)(a2 + 160);
  sub_255A7663C(v27, v28, v6);
  uint64_t v29 = *(void *)(a1 + 144);
  uint64_t v30 = *(void *)(a1 + 152);
  char v31 = *(unsigned char *)(a1 + 160);
  *(void *)(a1 + 144) = v27;
  *(void *)(a1 + 152) = v28;
  *(unsigned char *)(a1 + 160) = v6;
  sub_255A767C8(v29, v30, v31);
  if (a1 != a2)
  {
    uint64_t v32 = *(int *)(a3 + 56);
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (void *)(a2 + v32);
    sub_255A095A4(a1 + v32, &qword_26B29B598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      void *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = *(int *)(a3 + 60);
    uint64_t v37 = (void *)(a1 + v36);
    long long v38 = (void *)(a2 + v36);
    sub_255A095A4(a1 + v36, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *uint64_t v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BBC320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v9;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v10 = *(int *)(a3 + 56);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_255C7DCC8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = *(int *)(a3 + 60);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255BBC4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_release();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 120);
  char v9 = *(unsigned char *)(a2 + 121);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v17 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 112);
  char v19 = *(unsigned char *)(a1 + 120);
  char v20 = *(unsigned char *)(a1 + 121);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = v8;
  *(unsigned char *)(a1 + 121) = v9;
  sub_255A1D054(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  char v21 = *(unsigned char *)(a2 + 136);
  uint64_t v22 = *(void *)(a1 + 128);
  char v23 = *(unsigned char *)(a1 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = v21;
  sub_255A087D0(v22, v23);
  char v24 = *(unsigned char *)(a2 + 160);
  uint64_t v25 = *(void *)(a1 + 144);
  uint64_t v26 = *(void *)(a1 + 152);
  char v27 = *(unsigned char *)(a1 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = v24;
  sub_255A767C8(v25, v26, v27);
  if (a1 != a2)
  {
    uint64_t v28 = *(int *)(a3 + 56);
    uint64_t v29 = (void *)(a1 + v28);
    uint64_t v30 = (const void *)(a2 + v28);
    sub_255A095A4(a1 + v28, &qword_26B29B598);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_255C7DCC8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    uint64_t v33 = *(int *)(a3 + 60);
    uint64_t v34 = (void *)(a1 + v33);
    uint64_t v35 = (const void *)(a2 + v33);
    sub_255A095A4(a1 + v33, (uint64_t *)&unk_26B298500);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255BBC75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BBC770);
}

uint64_t sub_255BBC770(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 56);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 60);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_255BBC8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BBC8C4);
}

void *sub_255BBC8C4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *double result = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 56);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 60);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_255BBC9F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_255C7DD38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255BBCA4C()
{
  _s11ContentViewVMa_0();

  return swift_getWitnessTable();
}

uint64_t sub_255BBCA94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s18DefaultContentViewVMa_0()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s28ControlsAndFooterButtonsViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BBCB08@<X0>(uint64_t a1@<X8>)
{
  return sub_255BB4FBC(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_255BBCB14()
{
  unint64_t result = qword_269F25D68;
  if (!qword_269F25D68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D50);
    sub_255BBD5AC(&qword_269F24EC8, (void (*)(uint64_t))type metadata accessor for NowPlayingContrastSensitiveBackdrop);
    sub_255A09998(&qword_269F25018, &qword_269F25020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25D68);
  }
  return result;
}

uint64_t sub_255BBCBE4@<X0>(uint64_t a1@<X8>)
{
  return sub_255BB5EA4(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255BBCBF0()
{
  unint64_t result = qword_269F25D78;
  if (!qword_269F25D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25D48);
    sub_255BBCC90(&qword_269F25D80, &qword_269F25D58, (void (*)(void))sub_255BBCB14);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25D78);
  }
  return result;
}

uint64_t sub_255BBCC90(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_255BBD5AC((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BBCD40@<X0>(uint64_t a1@<X8>)
{
  return sub_255BB6D4C(*(void *)(v1 + 32), a1);
}

uint64_t sub_255BBCD4C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255BBCDC4()
{
  unint64_t result = qword_269F25D98;
  if (!qword_269F25D98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25DA0);
    sub_255BBD514(&qword_269F25DA8, &qword_269F25DB0, (void (*)(void))sub_255BBCE90);
    sub_255A09998((unint64_t *)&qword_269F21DA8, &qword_269F21DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25D98);
  }
  return result;
}

unint64_t sub_255BBCE90()
{
  unint64_t result = qword_269F25DB8;
  if (!qword_269F25DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25DC0);
    sub_255BBD514(&qword_269F24FF0, &qword_269F24FF8, (void (*)(void))sub_255B619A0);
    sub_255AA79F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25DB8);
  }
  return result;
}

uint64_t sub_255BBCF38()
{
  return sub_255BB738C(*(void *)(v0 + 32));
}

uint64_t sub_255BBCF44(uint64_t a1)
{
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  char v7 = *(unsigned char *)(a1 + 81);
  uint64_t v8 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 128);
  uint64_t v18 = *(void *)(a1 + 120);
  swift_release();
  sub_255A1D054(v16, v15, v14, v13, v12, v2, v3, v4, v5, v6, v7);
  sub_255A767C8(v8, v11, v10);
  swift_release();
  sub_255BBD0A0(v18, v17);
  return a1;
}

uint64_t sub_255BBD0A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_255BBD0E4()
{
  return sub_255BB7994(*(void *)(v0 + 32));
}

unint64_t sub_255BBD0F0()
{
  unint64_t result = qword_269F25DE0;
  if (!qword_269F25DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25DE8);
    sub_255A09998(&qword_269F25018, &qword_269F25020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25DE0);
  }
  return result;
}

uint64_t sub_255BBD190(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 80);
  char v6 = *(unsigned char *)(a1 + 81);
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 88);
  char v10 = *(unsigned char *)(a1 + 104);
  uint64_t v27 = *(void *)(a1 + 128);
  uint64_t v28 = *(void *)(a1 + 120);
  uint64_t v29 = *(void *)(a1 + 288);
  uint64_t v30 = *(void *)(a1 + 280);
  long long v20 = *(_OWORD *)(a1 + 344);
  long long v19 = *(_OWORD *)(a1 + 360);
  uint64_t v21 = *(void *)(a1 + 296);
  uint64_t v22 = *(void *)(a1 + 304);
  uint64_t v23 = *(void *)(a1 + 312);
  uint64_t v24 = *(void *)(a1 + 320);
  uint64_t v25 = *(void *)(a1 + 328);
  uint64_t v26 = *(void *)(a1 + 336);
  uint64_t v7 = *(void *)(a1 + 376);
  __int16 v8 = *(_WORD *)(a1 + 384);
  swift_release();
  sub_255A1D054(v18, v17, v16, v2, v3, v15, v14, v13, v4, v5, v6);
  sub_255A767C8(v12, v11, v10);
  swift_release();
  sub_255BBD0A0(v28, v27);
  sub_255BBD35C(v30, v29, v21, v22, v23, v24, v25, v26, v20, *((uint64_t *)&v20 + 1), v19, SBYTE8(v19), SBYTE9(v19), v7, v8);
  return a1;
}

uint64_t sub_255BBD35C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13, uint64_t a14, char a15)
{
  if (result != 1)
  {
    swift_unknownObjectRelease();
    sub_255A1D054(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
    return sub_255A087D0(a14, a15 & 1);
  }
  return result;
}

uint64_t sub_255BBD438@<X0>(uint64_t a1@<X8>)
{
  return sub_255BB7B74(*(void *)(v1 + 32), a1);
}

unint64_t sub_255BBD444()
{
  unint64_t result = qword_269F25E00;
  if (!qword_269F25E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25DF8);
    sub_255BBCC90(&qword_269F25E08, &qword_269F25E10, (void (*)(void))sub_255BBD4E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25E00);
  }
  return result;
}

uint64_t sub_255BBD4E4()
{
  return sub_255BBD514(&qword_269F25E18, &qword_269F25E20, (void (*)(void))sub_255BBD0F0);
}

uint64_t sub_255BBD514(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_255BBD590(_OWORD *a1)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_255BBD5AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255BBD5FC()
{
  sub_255BBC9F8(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_255BBD6B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v25 = *(void *)(a2 + 64);
    char v26 = *(unsigned char *)(a2 + 72);
    char v27 = *(unsigned char *)(a2 + 73);
    sub_255A1CFDC(*(void *)a2, v7, v8, v9, v10, v11, v13, v12, v25, v26, v27);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v25;
    *(unsigned char *)(a1 + 72) = v26;
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    *(unsigned char *)(a1 + 73) = v27;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(int *)(a3 + 40);
    long long v20 = (void *)(a1 + v19);
    uint64_t v21 = (uint64_t *)(a2 + v19);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    void *v20 = v22;
    v20[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_255BBD880(uint64_t a1, uint64_t a2)
{
  sub_255A1D054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72), *(unsigned char *)(a1 + 73));
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_255BBD964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  char v24 = *(unsigned char *)(a2 + 72);
  char v25 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v23, v24, v25);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v23;
  *(unsigned char *)(a1 + 72) = v24;
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(unsigned char *)(a1 + 73) = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  *uint64_t v18 = v20;
  v18[1] = v21;
  swift_retain();
  return a1;
}

uint64_t sub_255BBDAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v32 = *(void *)(a2 + 64);
  char v33 = *(unsigned char *)(a2 + 72);
  char v34 = *(unsigned char *)(a2 + 73);
  sub_255A1CFDC(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v32, v33, v34);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 72);
  char v23 = *(unsigned char *)(a1 + 73);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v32;
  *(unsigned char *)(a1 + 72) = v33;
  *(unsigned char *)(a1 + 73) = v34;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  if (a1 != a2)
  {
    uint64_t v24 = *(int *)(a3 + 36);
    char v25 = (void *)(a1 + v24);
    char v26 = (void *)(a2 + v24);
    sub_255A095A4(a1 + v24, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = *(int *)(a3 + 40);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_retain();
  swift_release();
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  return a1;
}

_OWORD *sub_255BBDCB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  *(_OWORD *)((char *)a1 + 58) = *(_OWORD *)((char *)a2 + 58);
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_255BBDDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  char v8 = *(unsigned char *)(a2 + 73);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  char v18 = *(unsigned char *)(a1 + 72);
  char v19 = *(unsigned char *)(a1 + 73);
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 73) = v8;
  sub_255A1D054(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  if (a1 != a2)
  {
    uint64_t v22 = *(int *)(a3 + 36);
    char v23 = (void *)(a1 + v22);
    uint64_t v24 = (const void *)(a2 + v22);
    sub_255A095A4(a1 + v22, (uint64_t *)&unk_26B298500);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  uint64_t v27 = *(int *)(a3 + 40);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (void *)(a2 + v27);
  *(void *)(a1 + v27) = *v29;
  swift_release();
  *(void *)(v28 + 8) = v29[1];
  return a1;
}

uint64_t sub_255BBDF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BBDF3C);
}

uint64_t sub_255BBDF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_255BBE010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BBE024);
}

uint64_t sub_255BBE024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 36);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = a2;
  }
  return result;
}

uint64_t sub_255BBE0E8(uint64_t a1)
{
  swift_release();
  sub_255A1D054(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80), *(unsigned char *)(a1 + 81));
  sub_255A767C8(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));

  return swift_release();
}

uint64_t sub_255BBE164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = v4;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 64);
  char v11 = *(unsigned char *)(a2 + 80);
  char v12 = *(unsigned char *)(a2 + 81);
  swift_retain();
  sub_255A1CFDC(v18, v17, v5, v6, v7, v8, v9, v16, v10, v11, v12);
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 81) = v12;
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  LOBYTE(v10) = *(unsigned char *)(a2 + 104);
  sub_255A7663C(v13, v14, v10);
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  return a1;
}

uint64_t sub_255BBE270(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v29 = *(void *)(a2 + 72);
  char v30 = *(unsigned char *)(a2 + 80);
  char v31 = *(unsigned char *)(a2 + 81);
  sub_255A1CFDC(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  char v21 = *(unsigned char *)(a1 + 80);
  char v22 = *(unsigned char *)(a1 + 81);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v29;
  *(unsigned char *)(a1 + 80) = v30;
  *(unsigned char *)(a1 + 81) = v31;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(a2 + 88);
  uint64_t v24 = *(void *)(a2 + 96);
  LOBYTE(v6) = *(unsigned char *)(a2 + 104);
  sub_255A7663C(v23, v24, v6);
  uint64_t v25 = *(void *)(a1 + 88);
  uint64_t v26 = *(void *)(a1 + 96);
  char v27 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 88) = v23;
  *(void *)(a1 + 96) = v24;
  *(unsigned char *)(a1 + 104) = v6;
  sub_255A767C8(v25, v26, v27);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255BBE3C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 72);
  char v5 = *(unsigned char *)(a2 + 80);
  char v6 = *(unsigned char *)(a2 + 81);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  char v16 = *(unsigned char *)(a1 + 80);
  char v17 = *(unsigned char *)(a1 + 81);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v4;
  *(unsigned char *)(a1 + 80) = v5;
  *(unsigned char *)(a1 + 81) = v6;
  sub_255A1D054(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  char v18 = *(unsigned char *)(a2 + 104);
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  char v21 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v18;
  sub_255A767C8(v19, v20, v21);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_255BBE494()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BBE918()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BBE95C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BBE9A0@<X0>(uint64_t a1@<X8>)
{
  return sub_255BB812C(v1[4], v1[2], v1[3], a1);
}

double sub_255BBE9AC(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_255BBE9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    char v12 = a4 & 1;
    swift_unknownObjectRetain();
    sub_255A0877C(a3, v12);
    return swift_retain();
  }
  return result;
}

uint64_t sub_255BBEA30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a2)
  {
    char v5 = a4 & 1;
    swift_retain();
    sub_255A0877C(a3, v5);
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_255BBEA90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    char v12 = a4 & 1;
    swift_unknownObjectRelease();
    sub_255A087D0(a3, v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_255BBEAF8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_255BBEB64(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a2)
  {
    swift_release();
    sub_255A087D0(a3, a4 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_255BBEBC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  swift_release();
  sub_255A087D0(v2, v3);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_255BBEC18@<X0>(uint64_t a1@<X8>)
{
  return sub_255BBA1F4(*(_OWORD **)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 16), *(void (**)(unsigned char *, uint64_t))(v1 + 24), a1);
}

uint64_t sub_255BBEC28()
{
  return sub_255BBA8F0();
}

uint64_t sub_255BBEC34()
{
  return sub_255BBABB0();
}

uint64_t sub_255BBEC40()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BBEDF4()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_255BBF0A8()
{
  type metadata accessor for MotionEnabledState();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_255BBF3A8();
  qword_269F33358 = v0;
  return result;
}

uint64_t sub_255BBF0E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255BBF1A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255BC1BB0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255BBF260()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_255BBF340(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_255BBF3A8()
{
  uint64_t v1 = (void *)v0;
  uint64_t v92 = sub_255C80CD8();
  uint64_t v99 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v83 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29B470);
  uint64_t v100 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  char v84 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v86 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_269F25E48);
  uint64_t v82 = (id *)*(v86 - 1);
  MEMORY[0x270FA5388](v86);
  uint64_t v81 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v90 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_269F25E50);
  uint64_t v89 = *(v90 - 1);
  MEMORY[0x270FA5388](v90);
  long long v88 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F090);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  long long v74 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F080);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  long long v77 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v93 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25E58);
  uint64_t v71 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25E60);
  uint64_t v73 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  char v72 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B29F060 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_26B2AA610;
  *(void *)(v0 + 16) = qword_26B2AA610;
  *(void *)(v0 + 24) = MEMORY[0x263F8EE88];
  uint64_t v101 = v0 + 24;
  *(_WORD *)(v0 + 32) = 0;
  uint64_t v14 = v0 + OBJC_IVAR____TtC11MediaCoreUI18MotionEnabledState___observationRegistrar;
  id v15 = v13;
  sub_255C7D748();
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_255C7D898();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B2AA500);
  swift_retain_n();
  char v17 = sub_255C7D878();
  os_log_type_t v18 = sub_255C80C08();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v80 = v14;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    char v21 = (void *)swift_slowAlloc();
    id v108 = v21;
    *(_DWORD *)uint64_t v20 = 67109378;
    swift_getKeyPath();
    uint64_t v102 = v0;
    sub_255BC1BB0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
    sub_255C7D718();
    swift_release();
    int v22 = *(unsigned __int8 *)(v0 + 33);
    swift_release();
    LODWORD(v102) = v22;
    sub_255C80F18();
    swift_release();
    *(_WORD *)(v20 + 8) = 2082;
    uint64_t v23 = sub_255BC1290();
    uint64_t v102 = sub_255A7BEC4(v23, v24, (uint64_t *)&v108);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v17, v18, "isMotionEnabled was initialized to %{BOOL}d by default. attributesDescription=(%{public}s)", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v21, -1, -1);
    MEMORY[0x25A297C00](v20, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_255BC0DCC();
  id v25 = objc_msgSend(self, sel_standardUserDefaults);
  swift_getKeyPath();
  sub_255C7D4E8();

  swift_release();
  unint64_t v26 = sub_255A6C3AC();
  id v108 = (id)sub_255C80C88();
  uint64_t v95 = sub_255C80C78();
  uint64_t v27 = *(void *)(v95 - 8);
  uint64_t v28 = *(void (**)(void))(v27 + 56);
  uint64_t v96 = v27 + 56;
  uint64_t v29 = (uint64_t)v93;
  v28();
  long long v98 = v28;
  sub_255A09998(&qword_269F25E68, &qword_269F25E58);
  uint64_t v97 = sub_255BC1BB0((unint64_t *)&qword_26B29F110, (void (*)(uint64_t))sub_255A6C3AC);
  char v30 = v72;
  uint64_t v31 = v87;
  sub_255C7DB68();
  sub_255A095A4(v29, (uint64_t *)&unk_26B29F010);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v11, v31);
  swift_allocObject();
  swift_weakInit();
  uint64_t v87 = MEMORY[0x263EFDCB0];
  sub_255A09998(&qword_269F25E70, &qword_269F25E60);
  uint64_t v32 = v85;
  sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v30, v32);
  swift_getKeyPath();
  id v108 = v1;
  uint64_t v33 = sub_255BC1BB0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  uint64_t v85 = v33;
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F098);
  char v34 = v74;
  sub_255C7DA98();
  swift_endAccess();
  unint64_t v94 = v26;
  id v108 = (id)sub_255C80C88();
  uint64_t v35 = (uint64_t)v93;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v93, 1, 1, v95);
  uint64_t v73 = MEMORY[0x263EFDE50];
  sub_255A09998(&qword_26B29F088, &qword_26B29F090);
  uint64_t v36 = v77;
  uint64_t v37 = v76;
  sub_255C7DB68();
  sub_255A095A4(v35, (uint64_t *)&unk_26B29F010);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v34, v37);
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_26B29F078, &qword_26B29F080);
  uint64_t v38 = v79;
  sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v36, v38);
  swift_getKeyPath();
  id v108 = v1;
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0A0);
  uint64_t v39 = v81;
  sub_255C7DA98();
  swift_endAccess();
  id v108 = (id)sub_255C80C88();
  uint64_t v40 = (uint64_t)v93;
  uint64_t v41 = v95;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v98)(v93, 1, 1, v95);
  sub_255A09998(&qword_269F25E78, &qword_269F25E48);
  uint64_t v42 = v88;
  char v43 = v86;
  sub_255C7DB68();
  sub_255A095A4(v40, (uint64_t *)&unk_26B29F010);

  ((void (*)(char *, void *))v82[1])(v39, v43);
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_269F25E80, &qword_269F25E50);
  char v44 = v90;
  sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, void *))(v89 + 8))(v42, v44);
  swift_getKeyPath();
  id v108 = v1;
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();
  swift_release();
  long long v103 = xmmword_255C8F530;
  uint64_t v82 = &v104;
  id v104 = (id)*MEMORY[0x263F08450];
  id v45 = v104;
  uint64_t v46 = (void *)sub_255C80D08();
  uint64_t v47 = (void *)*MEMORY[0x263F832E0];
  id v105 = v46;
  id v106 = v47;
  id v107 = (id)*MEMORY[0x263F831F0];
  id v48 = v107;
  uint64_t v49 = self;
  char v90 = v49;
  id v50 = v47;
  id v51 = v48;
  uint64_t v81 = (char *)v45;
  id v52 = objc_msgSend(v49, sel_defaultCenter);
  uint64_t v53 = v83;
  sub_255C80CE8();

  id v108 = (id)sub_255C80C88();
  uint64_t v54 = (uint64_t)v93;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v98)(v93, 1, 1, v41);
  uint64_t v89 = sub_255BC1BB0(&qword_26B29BEE8, MEMORY[0x263F07CB0]);
  uint64_t v55 = v84;
  uint64_t v56 = v92;
  sub_255C7DB68();
  sub_255A095A4(v54, (uint64_t *)&unk_26B29F010);

  long long v57 = *(char **)(v99 + 8);
  v99 += 8;
  long long v88 = v57;
  ((void (*)(char *, uint64_t))v57)(v53, v56);
  swift_allocObject();
  swift_weakInit();
  uint64_t v87 = sub_255A09998((unint64_t *)&qword_26B29B460, (uint64_t *)&unk_26B29B470);
  uint64_t v58 = v91;
  sub_255C7DB98();
  swift_release();
  uint64_t v59 = *(void **)(v100 + 8);
  v100 += 8;
  long long v86 = v59;
  ((void (*)(char *, uint64_t))v59)(v55, v58);
  swift_getKeyPath();
  id v108 = v1;
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();

  swift_release();
  uint64_t v81 = (char *)v105;
  id v60 = objc_msgSend(v90, sel_defaultCenter);
  sub_255C80CE8();

  id v108 = (id)sub_255C80C88();
  uint64_t v61 = (uint64_t)v93;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v98)(v93, 1, 1, v95);
  uint64_t v62 = v92;
  sub_255C7DB68();
  sub_255A095A4(v61, (uint64_t *)&unk_26B29F010);

  ((void (*)(char *, uint64_t))v88)(v53, v62);
  swift_allocObject();
  swift_weakInit();
  sub_255C7DB98();
  swift_release();
  ((void (*)(char *, uint64_t))v86)(v55, v58);
  swift_getKeyPath();
  id v108 = v1;
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();

  swift_release();
  uint64_t v81 = (char *)v106;
  id v63 = objc_msgSend(v90, sel_defaultCenter);
  sub_255C80CE8();

  id v108 = (id)sub_255C80C88();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v98)(v61, 1, 1, v95);
  uint64_t v64 = v92;
  sub_255C7DB68();
  sub_255A095A4(v61, (uint64_t *)&unk_26B29F010);

  ((void (*)(char *, uint64_t))v88)(v53, v64);
  swift_allocObject();
  swift_weakInit();
  uint64_t v65 = v91;
  sub_255C7DB98();
  swift_release();
  ((void (*)(char *, uint64_t))v86)(v55, v65);
  swift_getKeyPath();
  id v108 = v1;
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();

  swift_release();
  id v66 = v107;
  id v67 = objc_msgSend(v90, sel_defaultCenter);
  sub_255C80CE8();

  id v108 = (id)sub_255C80C88();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v98)(v61, 1, 1, v95);
  uint64_t v68 = v92;
  sub_255C7DB68();
  sub_255A095A4(v61, (uint64_t *)&unk_26B29F010);

  ((void (*)(char *, uint64_t))v88)(v53, v68);
  swift_allocObject();
  swift_weakInit();
  uint64_t v69 = v91;
  sub_255C7DB98();
  swift_release();
  ((void (*)(char *, uint64_t))v86)(v55, v69);
  swift_getKeyPath();
  id v108 = v1;
  sub_255C7D718();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D738();
  swift_release();
  swift_beginAccess();
  sub_255C7D9A8();
  swift_endAccess();
  swift_release();
  id v108 = v1;
  swift_getKeyPath();
  sub_255C7D728();

  swift_release();
  type metadata accessor for Name(0);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_255BC0CCC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_255BC0DCC();
    return swift_release();
  }
  return result;
}

uint64_t sub_255BC0D24()
{
  swift_getKeyPath();
  sub_255BC1BB0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_255BC0DC4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 33) = a2;
  return result;
}

uint64_t sub_255BC0DCC()
{
  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + 32)) {
    goto LABEL_10;
  }
  if (UIAccessibilityIsReduceMotionEnabled()) {
    goto LABEL_10;
  }
  if ((sub_255C80CF8() & 1) == 0) {
    goto LABEL_10;
  }
  if (!UIAccessibilityIsVideoAutoplayEnabled()) {
    goto LABEL_10;
  }
  id v2 = objc_msgSend(self, sel_processInfo);
  unsigned __int8 v3 = objc_msgSend(v2, sel_isLowPowerModeEnabled);

  if (v3) {
    goto LABEL_10;
  }
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  id v5 = objc_msgSend(v4, sel_motionMode);

  if (!v5) {
    goto LABEL_10;
  }
  if (v5 == (id)1)
  {
    id v6 = objc_msgSend(self, sel_sharedMonitor);
    objc_msgSend(v6, sel_networkType);

    if (!ICEnvironmentNetworkTypeIsWiFi()) {
      goto LABEL_10;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  if (v17)
  {
LABEL_10:
    int v7 = 0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    int v7 = v17 < 0x1E;
  }
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_255BC1BB0(&qword_269F21388, (void (*)(uint64_t))type metadata accessor for MotionEnabledState);
  sub_255C7D718();
  uint64_t result = swift_release();
  if (v7 != *(unsigned __int8 *)(v1 + 33))
  {
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_255C7D898();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B2AA500);
    swift_retain_n();
    uint64_t v10 = sub_255C7D878();
    os_log_type_t v11 = sub_255C80C08();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v17 = v13;
      *(_DWORD *)uint64_t v12 = 67109634;
      swift_getKeyPath();
      sub_255C7D718();
      swift_release();
      swift_release();
      sub_255C80F18();
      swift_release();
      *(_WORD *)(v12 + 8) = 1024;
      sub_255C80F18();
      *(_WORD *)(v12 + 14) = 2082;
      uint64_t v14 = sub_255BC1290();
      sub_255A7BEC4(v14, v15, &v17);
      sub_255C80F18();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255A00000, v10, v11, "Updated isMotionEnabled from %{BOOL}d to %{BOOL}d: attributesDescription=(%{public}s)", (uint8_t *)v12, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v13, -1, -1);
      MEMORY[0x25A297C00](v12, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    uint64_t v17 = v1;
    sub_255C7D708();
    return swift_release();
  }
  return result;
}

uint64_t sub_255BC1290()
{
  sub_255C810E8();
  sub_255C806E8();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  UIAccessibilityIsReduceMotionEnabled();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  sub_255C80CF8();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  UIAccessibilityIsVideoAutoplayEnabled();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  id v0 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v0, sel_isLowPowerModeEnabled);

  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  objc_msgSend(v1, sel_motionMode);

  sub_255C813E8();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  sub_255C806E8();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  sub_255C813E8();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_255BC1648()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI18MotionEnabledState___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255BC16F8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_255BC172C();

  return v2;
}

uint64_t sub_255BC172C()
{
  id v1 = (void *)sub_255C805F8();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_255C80F58();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_255A15EF0((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_255A095A4((uint64_t)v6, &qword_26B297D00);
  }
  return 2;
}

uint64_t static MotionViewDeferral.isDeferred.getter()
{
  if (qword_269F20198 != -1) {
    swift_once();
  }
  return *(unsigned __int8 *)(qword_269F33358 + 32);
}

uint64_t static MotionViewDeferral.isDeferred.setter(uint64_t result)
{
  char v1 = result;
  if (qword_269F20198 != -1) {
    uint64_t result = swift_once();
  }
  int v2 = *(unsigned __int8 *)(qword_269F33358 + 32);
  *(unsigned char *)(qword_269F33358 + 32) = v1 & 1;
  if (v2 != (v1 & 1)) {
    return sub_255BC0DCC();
  }
  return result;
}

unsigned __int8 *(*static MotionViewDeferral.isDeferred.modify(unsigned char *a1))(unsigned __int8 *result)
{
  if (qword_269F20198 != -1) {
    swift_once();
  }
  *a1 = *(unsigned char *)(qword_269F33358 + 32);
  return sub_255BC1954;
}

unsigned __int8 *sub_255BC1954(unsigned __int8 *result)
{
  int v1 = *result;
  int v2 = *(unsigned __int8 *)(qword_269F33358 + 32);
  *(unsigned char *)(qword_269F33358 + 32) = v1;
  if (v1 != v2) {
    return (unsigned __int8 *)sub_255BC0DCC();
  }
  return result;
}

uint64_t MotionViewDeferral.deinit()
{
  return v0;
}

uint64_t MotionViewDeferral.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_255BC19A8()
{
  return type metadata accessor for MotionEnabledState();
}

uint64_t type metadata accessor for MotionEnabledState()
{
  uint64_t result = qword_269F25E38;
  if (!qword_269F25E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255BC19FC()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MotionViewDeferral()
{
  return self;
}

uint64_t method lookup function for MotionViewDeferral(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MotionViewDeferral);
}

uint64_t sub_255BC1B10()
{
  return sub_255BBF340(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_255BC1B2C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 33) = *(unsigned char *)(v0 + 24);
}

id sub_255BC1B3C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_motionMode);
  *a2 = result;
  return result;
}

uint64_t sub_255BC1B70()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255BC1BA8()
{
  return sub_255BC0CCC();
}

uint64_t sub_255BC1BB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BC1BF8@<X0>(uint64_t a1@<X8>)
{
  _s6BannerCMa();
  sub_255BC20A0();
  *(void *)a1 = sub_255C7E2B8();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = swift_getKeyPath();
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t result = sub_255C7E628();
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v4;
  return result;
}

uint64_t sub_255BC1C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  char v30 = *(char **)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (char *)&v27 - v7;
  uint64_t v8 = sub_255C80E88();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *(void *)(v2 + 8);
  uint64_t v16 = *(void *)(v2 + 16);
  char v17 = *(unsigned char *)(v2 + 24);
  uint64_t v27 = *(void *)(v2 + 32);
  sub_255A0877C(v16, v17);
  sub_255AB99AC(v16, v17, v33);
  sub_255A087D0(v16, v17);
  if (v33[0] == 1 && (swift_beginAccess(), *(unsigned char *)(v15 + 16) == 1))
  {
    os_log_type_t v18 = v30;
    sub_255C23448(v27);
    BOOL v19 = *(void (**)(char *, uint64_t))(v3 + 328);
    swift_unknownObjectRetain();
    v19(v18, v3);
    swift_unknownObjectRelease();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    int v22 = v28;
    char v21 = v29;
    sub_255A20F54(v29);
    uint64_t v23 = v31;
    char v30 = v14;
    unint64_t v24 = *(void (**)(char *, uint64_t))(v31 + 8);
    v24(v21, AssociatedTypeWitness);
    sub_255A20F54(v22);
    v24(v22, AssociatedTypeWitness);
    uint64_t v14 = v30;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v11, 0, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v11, 1, 1, AssociatedTypeWitness);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  }
  sub_255A97640((uint64_t)v11, (uint64_t)v14);
  id v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v11, v8);
  uint64_t v34 = AssociatedConformanceWitness;
  swift_getWitnessTable();
  sub_255A20F54(v14);
  return ((uint64_t (*)(char *, uint64_t))v25)(v14, v8);
}

uint64_t _s6BannerCMa()
{
  return self;
}

uint64_t sub_255BC205C@<X0>(uint64_t *a1@<X8>)
{
  _s6BannerCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

unint64_t sub_255BC20A0()
{
  unint64_t result = qword_26B29E940;
  if (!qword_26B29E940)
  {
    _s6BannerCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29E940);
  }
  return result;
}

uint64_t sub_255BC20F4(uint64_t a1)
{
  swift_release();
  sub_255A087D0(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));

  return swift_unknownObjectRelease();
}

uint64_t sub_255BC213C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_255A0877C(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_255BC21A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_255A0877C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_255A087D0(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t sub_255BC2238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_255A087D0(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t _s10BannerViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BC22BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BC2300()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BC23B0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_255C7E628();
  *(void *)(a1 + 8) = v2;
  _s5DebugCMa();
  sub_255BC3DB8();
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = swift_getKeyPath();
  uint64_t v4 = _s13FooterButtonsVMa();
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  char v5 = (uint64_t *)(a1 + *(int *)(v4 + 44));
  *char v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255BC2484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v146 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v5 - 8);
  char v138 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_255C7EA18();
  uint64_t v142 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  long long v129 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v127 = (uint64_t)&v111 - v9;
  uint64_t v141 = (uint64_t *)sub_255C802C8();
  uint64_t v126 = *(v141 - 1);
  MEMORY[0x270FA5388](v141);
  long long v125 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25E88);
  uint64_t v123 = a1;
  uint64_t v13 = a1 + 16;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(v13 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v150 = v12;
  uint64_t v151 = v11;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v144 = AssociatedTypeWitness;
  uint64_t v16 = sub_255C7EBE8();
  sub_255A09998(&qword_269F25E90, &qword_269F25E88);
  uint64_t v155 = v16;
  uint64_t v17 = sub_255C7E1B8();
  uint64_t v122 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v139 = (uint64_t)&v111 - v18;
  sub_255C7E578();
  uint64_t v149 = v17;
  uint64_t v19 = sub_255C7E458();
  uint64_t v124 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  long long v140 = (char *)&v111 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EEB8);
  uint64_t v21 = sub_255C7E458();
  uint64_t v130 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  long long v128 = (char *)&v111 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCF0);
  uint64_t v147 = v21;
  uint64_t v23 = sub_255C7E458();
  uint64_t v133 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  long long v132 = (char *)&v111 - v24;
  uint64_t v25 = sub_255C7E458();
  uint64_t v137 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  long long v134 = (char *)&v111 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25E98);
  uint64_t v152 = v25;
  uint64_t v27 = sub_255C7E458();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  __int16 v135 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  char v136 = (char *)&v111 - v31;
  uint64_t v32 = sub_255C80E88();
  uint64_t v145 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v153 = (uint64_t)&v111 - v36;
  long long v37 = v3[5];
  v201[2] = v3[4];
  v202[0] = v37;
  *(_OWORD *)((char *)v202 + 10) = *(_OWORD *)((char *)v3 + 90);
  long long v39 = v3[2];
  long long v38 = v3[3];
  uint64_t v143 = (uint64_t)v3;
  v201[0] = v39;
  v201[1] = v38;
  sub_255A1D4DC((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v199);
  sub_255A1D4DC((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  unsigned __int8 v40 = v200;
  uint64_t v148 = v19;
  uint64_t v154 = v23;
  if (v200 == 3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v34, 1, 1, v27);
    uint64_t v143 = sub_255A09998(&qword_269F25EA0, &qword_269F25E88);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v42 = swift_getAssociatedConformanceWitness();
    uint64_t v144 = AssociatedConformanceWitness;
    uint64_t v197 = AssociatedConformanceWitness;
    uint64_t v142 = v42;
    uint64_t v198 = v42;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v195 = v143;
    uint64_t v196 = WitnessTable;
    uint64_t v193 = swift_getWitnessTable();
    uint64_t v194 = MEMORY[0x263F190D0];
    uint64_t v44 = swift_getWitnessTable();
    uint64_t v45 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    uint64_t v191 = v44;
    uint64_t v192 = v45;
    uint64_t v46 = swift_getWitnessTable();
    uint64_t v47 = sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    uint64_t v189 = v46;
    uint64_t v190 = v47;
    uint64_t v187 = swift_getWitnessTable();
    uint64_t v188 = MEMORY[0x263F18860];
    uint64_t v48 = swift_getWitnessTable();
    uint64_t v49 = sub_255A09998(&qword_269F25EA8, &qword_269F25E98);
    uint64_t v185 = v48;
    uint64_t v186 = v49;
    swift_getWitnessTable();
    sub_255A97640((uint64_t)v34, v153);
    id v50 = *(void (**)(char *, uint64_t))(v145 + 8);
    v50(v34, v32);
LABEL_17:
    uint64_t v102 = sub_255A09998(&qword_269F25EA0, &qword_269F25E88);
    uint64_t v183 = v144;
    uint64_t v184 = v142;
    uint64_t v103 = swift_getWitnessTable();
    uint64_t v181 = v102;
    uint64_t v182 = v103;
    uint64_t v179 = swift_getWitnessTable();
    uint64_t v180 = MEMORY[0x263F190D0];
    uint64_t v104 = swift_getWitnessTable();
    uint64_t v105 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    uint64_t v177 = v104;
    uint64_t v178 = v105;
    uint64_t v106 = swift_getWitnessTable();
    uint64_t v107 = sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    uint64_t v175 = v106;
    uint64_t v176 = v107;
    uint64_t v173 = swift_getWitnessTable();
    uint64_t v174 = MEMORY[0x263F18860];
    uint64_t v108 = swift_getWitnessTable();
    uint64_t v109 = sub_255A09998(&qword_269F25EA8, &qword_269F25E98);
    uint64_t v171 = v108;
    uint64_t v172 = v109;
    uint64_t v170 = swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v110 = v153;
    sub_255A20F54(v153);
    return ((uint64_t (*)(uint64_t, uint64_t))v50)(v110, v32);
  }
  uint64_t v117 = v15;
  uint64_t v118 = v28;
  long long v119 = v34;
  uint64_t v120 = v32;
  uint64_t v121 = v27;
  uint64_t v51 = sub_255C7E908();
  sub_255A1D4DC((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v199);
  uint64_t result = sub_255A1D4DC((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  if (v200 - 1 < 2)
  {
    uint64_t v53 = 0x4044000000000000;
    uint64_t v55 = v150;
    uint64_t v54 = v151;
LABEL_7:
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v54;
    *(void *)(v56 + 24) = v55;
    *(void *)(v56 + 32) = v51;
    *(void *)(v56 + 40) = v53;
    *(unsigned char *)(v56 + 48) = 0;
    MEMORY[0x270FA5388](v56);
    *(&v111 - 4) = v54;
    *(&v111 - 3) = v55;
    uint64_t v57 = v143;
    *(&v111 - 2) = v143;
    *((unsigned char *)&v111 - 8) = v40;
    sub_255BC37D0((uint64_t)sub_255BC497C, (uint64_t)(&v111 - 6), v139);
    swift_release();
    uint64_t v123 = v57 + *(int *)(v123 + 44);
    uint64_t v58 = v127;
    sub_255ABA66C(v127);
    unsigned int v116 = *MEMORY[0x263F19968];
    uint64_t v59 = v142;
    id v60 = *(void (**)(void))(v142 + 104);
    uint64_t v114 = v142 + 104;
    long long v115 = (void (*)(char *, void, uint64_t))v60;
    uint64_t v61 = v129;
    uint64_t v62 = v131;
    v60(v129);
    char v63 = sub_255C7DCB8();
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    uint64_t v113 = v64;
    v64((uint64_t)v61, v62);
    v64(v58, v62);
    uint64_t v65 = v125;
    uint64_t v66 = v126;
    id v67 = (unsigned int *)MEMORY[0x263F1B968];
    if ((v63 & 1) == 0) {
      id v67 = (unsigned int *)MEMORY[0x263F1B998];
    }
    (*(void (**)(char *, void, uint64_t *))(v126 + 104))(v125, *v67, v141);
    uint64_t v112 = sub_255A09998(&qword_269F25EA0, &qword_269F25E88);
    uint64_t v68 = swift_getAssociatedConformanceWitness();
    uint64_t v69 = swift_getAssociatedConformanceWitness();
    uint64_t v144 = v68;
    uint64_t v168 = v68;
    uint64_t v169 = v69;
    uint64_t v142 = v69;
    uint64_t v70 = swift_getWitnessTable();
    uint64_t v166 = v112;
    uint64_t v167 = v70;
    uint64_t v71 = v149;
    uint64_t v72 = swift_getWitnessTable();
    uint64_t v73 = v139;
    uint64_t v117 = v72;
    sub_255C7FB78();
    (*(void (**)(char *, uint64_t *))(v66 + 8))(v65, v141);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v73, v71);
    sub_255ABA66C(v58);
    v115(v61, v116, v62);
    LOBYTE(v73) = sub_255C7DCB8();
    long long v74 = v113;
    v113((uint64_t)v61, v62);
    v74(v58, v62);
    if (v73) {
      sub_255C7FD18();
    }
    else {
      sub_255C7FC28();
    }
    uint64_t v75 = v148;
    uint64_t v76 = v154;
    uint64_t v77 = (uint64_t)v138;
    uint64_t v78 = v132;
    uint64_t v79 = v124;
    uint64_t v164 = v117;
    uint64_t v165 = MEMORY[0x263F190D0];
    uint64_t v80 = swift_getWitnessTable();
    uint64_t v81 = v128;
    uint64_t v82 = v140;
    sub_255C7FA28();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v75);
    if (qword_26B29E8B0 != -1) {
      swift_once();
    }
    sub_255C7F298();
    uint64_t v83 = sub_255C7F258();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v77, 1, 1, v83);
    sub_255C7F2A8();
    sub_255A095A4(v77, &qword_26B29BD88);
    uint64_t v84 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
    uint64_t v162 = v80;
    uint64_t v163 = v84;
    uint64_t v85 = v147;
    uint64_t v86 = swift_getWitnessTable();
    sub_255C7F9F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v81, v85);
    uint64_t v87 = v78;
    if (qword_26B29E8B8 != -1) {
      swift_once();
    }
    sub_255C801F8();
    uint64_t v88 = sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    uint64_t v160 = v86;
    uint64_t v161 = v88;
    uint64_t v89 = swift_getWitnessTable();
    char v90 = v134;
    sub_255C7FA38();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v87, v76);
    sub_255C7EA68();
    uint64_t v91 = sub_255C7E908();
    uint64_t v141 = &v111;
    MEMORY[0x270FA5388](v91);
    uint64_t v92 = v150;
    *(&v111 - 4) = v151;
    *(&v111 - 3) = v92;
    *(&v111 - 2) = v143;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F25EB0);
    uint64_t v158 = v89;
    uint64_t v159 = MEMORY[0x263F18860];
    uint64_t v93 = v152;
    uint64_t v94 = swift_getWitnessTable();
    sub_255BC49A8();
    uint64_t v95 = v135;
    sub_255C7FAC8();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v90, v93);
    uint64_t v96 = sub_255A09998(&qword_269F25EA8, &qword_269F25E98);
    uint64_t v156 = v94;
    uint64_t v157 = v96;
    uint64_t v97 = v121;
    swift_getWitnessTable();
    long long v98 = v136;
    sub_255A20F54(v95);
    uint64_t v99 = v118;
    uint64_t v100 = *(void (**)(char *, uint64_t))(v118 + 8);
    v100(v95, v97);
    uint64_t v101 = (uint64_t)v119;
    sub_255A20F54(v98);
    v100(v98, v97);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v99 + 56))(v101, 0, 1, v97);
    sub_255A97640(v101, v153);
    id v50 = *(void (**)(char *, uint64_t))(v145 + 8);
    uint64_t v32 = v120;
    v50((char *)v101, v120);
    goto LABEL_17;
  }
  uint64_t v55 = v150;
  uint64_t v54 = v151;
  if (!v200)
  {
    uint64_t v53 = 0x4056400000000000;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_255BC37D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_255C7EBE8();
  unint64_t v7 = sub_255BC4B48();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_255AF6EAC(a1, a2, MEMORY[0x263F18750], v6, v7, WitnessTable, a3);
}

uint64_t sub_255BC3920@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v29 = a2;
  uint64_t v30 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  v33[0] = AssociatedTypeWitness;
  v33[1] = v9;
  _OWORD v33[2] = AssociatedConformanceWitness;
  void v33[3] = v27;
  uint64_t v10 = type metadata accessor for NowPlayingFooterConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_255C7EBE8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v25 - v19;
  sub_255C23448(*a1);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a4 + 304);
  swift_unknownObjectRetain();
  v21(a3, a4);
  swift_unknownObjectRelease();
  LOBYTE(v33[0]) = v29;
  uint64_t v22 = v25;
  sub_255B3D890(v33, v25, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v22);
  uint64_t v31 = AssociatedConformanceWitness;
  uint64_t v32 = v27;
  swift_getWitnessTable();
  sub_255A20F54(v17);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v17, v14);
  sub_255A20F54(v20);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
}

uint64_t sub_255BC3C1C@<X0>(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v2 + 18))
    {
      uint64_t v4 = sub_255C7FC88();
      sub_255C801F8();
      sub_255C7DFE8();
      uint64_t v5 = v14;
      uint64_t v6 = v15;
      uint64_t v7 = v16;
      uint64_t v8 = v17;
      uint64_t v9 = v18;
      uint64_t v10 = v19;
      uint64_t result = sub_255C7E908();
      int64x2_t v12 = vdupq_n_s64(0x100uLL);
      v12.i64[0] = v4;
      uint64_t v13 = sub_255BC3D4C;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t result = 0;
      uint64_t v13 = 0;
      int64x2_t v12 = 0uLL;
    }
    *a2 = v12;
    a2[1].i64[0] = v5;
    a2[1].i64[1] = v6;
    a2[2].i64[0] = v7;
    a2[2].i64[1] = v8;
    a2[3].i64[0] = v9;
    a2[3].i64[1] = v10;
    a2[4].i64[0] = result;
    a2[4].i64[1] = (uint64_t)v13;
    a2[5].i64[0] = 0;
  }
  else
  {
    _s5DebugCMa();
    sub_255BC3DB8();
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BC3D4C()
{
  uint64_t v0 = sub_255C7E908();
  return MEMORY[0x25A293BB0](v0);
}

double sub_255BC3D78()
{
  double result = -10.0;
  xmmword_26B2AA5B0 = xmmword_255C93680;
  *(_OWORD *)&qword_26B2AA5C0 = xmmword_255C93690;
  return result;
}

void sub_255BC3D98()
{
  qword_26B2AA5E0 = 0x4065000000000000;
}

void sub_255BC3DA8()
{
  qword_26B2AA5E8 = 0x4034000000000000;
}

unint64_t sub_255BC3DB8()
{
  unint64_t result = qword_26B299A80;
  if (!qword_26B299A80)
  {
    _s5DebugCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299A80);
  }
  return result;
}

uint64_t _s13FooterButtonsVMa()
{
  return __swift_instantiateGenericMetadata();
}

void sub_255BC3E3C()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255BC3EE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    uint64_t v12 = a2[8];
    uint64_t v23 = a2[10];
    uint64_t v24 = v8;
    uint64_t v13 = a2[12];
    uint64_t v21 = a2[11];
    uint64_t v22 = a2[9];
    char v14 = *((unsigned char *)a2 + 104);
    char v15 = *((unsigned char *)a2 + 105);
    swift_unknownObjectRetain();
    swift_retain();
    sub_255A1CFDC(v24, v9, v10, v11, v12, v22, v23, v21, v13, v14, v15);
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v22;
    *(void *)(a1 + 80) = v23;
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 96) = v13;
    *(unsigned char *)(a1 + 104) = v14;
    uint64_t v16 = *(int *)(a3 + 44);
    unsigned __int8 v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    *(unsigned char *)(a1 + 105) = v15;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *unsigned __int8 v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BC40CC(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_release();
  sub_255A1D054(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104), *(unsigned char *)(a1 + 105));
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255BC41C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v19 = *(void *)(a2 + 72);
  uint64_t v20 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v21 = *(void *)(a2 + 88);
  uint64_t v22 = *(void *)(a2 + 80);
  char v12 = *(unsigned char *)(a2 + 104);
  char v13 = *(unsigned char *)(a2 + 105);
  swift_unknownObjectRetain();
  swift_retain();
  sub_255A1CFDC(v20, v7, v8, v9, v10, v19, v22, v21, v11, v12, v13);
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v19;
  *(void *)(a1 + 80) = v22;
  *(void *)(a1 + 88) = v21;
  *(void *)(a1 + 96) = v11;
  *(unsigned char *)(a1 + 104) = v12;
  uint64_t v14 = *(int *)(a3 + 44);
  char v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *(unsigned char *)(a1 + 105) = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *char v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255BC4358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  char v31 = *(unsigned char *)(a2 + 104);
  char v32 = *(unsigned char *)(a2 + 105);
  sub_255A1CFDC(v5, v6, v7, v8, v9, v10, v12, v11, v30, v31, v32);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  char v22 = *(unsigned char *)(a1 + 104);
  char v23 = *(unsigned char *)(a1 + 105);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v30;
  *(unsigned char *)(a1 + 104) = v31;
  *(unsigned char *)(a1 + 105) = v32;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  if (a1 != a2)
  {
    uint64_t v24 = *(int *)(a3 + 44);
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    sub_255A095A4(a1 + v24, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_255BC4540(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  *(_OWORD *)((char *)a1 + 90) = *(_OWORD *)((char *)a2 + 90);
  long long v6 = a2[3];
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255BC462C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 104);
  char v8 = *(unsigned char *)(a2 + 105);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 96);
  char v18 = *(unsigned char *)(a1 + 104);
  char v19 = *(unsigned char *)(a1 + 105);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v7;
  *(unsigned char *)(a1 + 105) = v8;
  sub_255A1D054(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 44);
    uint64_t v21 = (void *)(a1 + v20);
    char v22 = (const void *)(a2 + v20);
    sub_255A095A4(a1 + v20, (uint64_t *)&unk_26B298500);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255BC47A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BC47B8);
}

uint64_t sub_255BC47B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 44);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_255BC4878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BC488C);
}

void *sub_255BC488C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    char v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_255BC4938()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BC497C@<X0>(uint64_t a1@<X8>)
{
  return sub_255BC3920(*(uint64_t **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_255BC498C()
{
  qword_26B2AA5F0 = 0x403C000000000000;
}

uint64_t sub_255BC499C@<X0>(int64x2_t *a1@<X8>)
{
  return sub_255BC3C1C(*(void *)(v1 + 32), a1);
}

unint64_t sub_255BC49A8()
{
  unint64_t result = qword_269F25EB8;
  if (!qword_269F25EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25EB0);
    sub_255BC4A1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25EB8);
  }
  return result;
}

unint64_t sub_255BC4A1C()
{
  unint64_t result = qword_269F25EC0;
  if (!qword_269F25EC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25EC8);
    sub_255BC4A98();
    sub_255A7FF44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25EC0);
  }
  return result;
}

unint64_t sub_255BC4A98()
{
  unint64_t result = qword_269F25ED0;
  if (!qword_269F25ED0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25ED8);
    sub_255A09998(&qword_269F25EE0, &qword_269F25EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25ED0);
  }
  return result;
}

uint64_t sub_255BC4B38()
{
  return swift_deallocObject();
}

unint64_t sub_255BC4B48()
{
  unint64_t result = qword_269F25EF0;
  if (!qword_269F25EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25EF0);
  }
  return result;
}

uint64_t sub_255BC4B9C()
{
  return swift_getWitnessTable();
}

uint64_t BackdropView.init(image:useMask:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

id BackdropView.makeUIView(context:)()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  id v3 = objc_allocWithZone((Class)type metadata accessor for BackdropHostView());
  id v4 = v1;
  return sub_255BC5DCC(v1, v2, 1);
}

uint64_t type metadata accessor for BackdropHostView()
{
  return self;
}

uint64_t BackdropView.updateUIView(_:context:)(uint64_t a1)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *(void **)v1;
  int v14 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image);
  *(void *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image) = v13;
  id v16 = v13;

  sub_255BC590C();
  int v17 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask) = v14;
  if (v14 != v17)
  {
    if (qword_269F201A0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_255C7D898();
    __swift_project_value_buffer(v18, (uint64_t)qword_269F33360);
    char v19 = sub_255C7D878();
    os_log_type_t v20 = sub_255C80C08();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_255A00000, v19, v20, "changing useMask on already created BackdropHostView", v21, 2u);
      MEMORY[0x25A297C00](v21, -1, -1);
    }

    sub_255BC5BD0();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE80);
  sub_255C7EFC8();
  sub_255BC67C4();
  sub_255C7E8C8();
  char v22 = v36;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
  v23(v12, v3);
  uint64_t v24 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused) = v22;
  uint64_t v25 = *(void **)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
  if (v25)
  {
    id v26 = v25;
    if (objc_msgSend(v26, sel_isPaused) != *(unsigned __int8 *)(a1 + v24))
    {
      objc_msgSend(v26, sel_setPaused_);
      objc_msgSend(v26, sel_setEnableSetNeedsDisplay_, *(unsigned __int8 *)(a1 + v24));
    }
  }
  sub_255C7EFC8();
  sub_255BC6818();
  sub_255C7E8C8();
  int v27 = v36;
  v23(v9, v3);
  *(_DWORD *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity) = v27;
  uint64_t v28 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer;
  uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer);
  if (v29)
  {
    uint64_t v30 = v29 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
    swift_beginAccess();
    *(_DWORD *)(*(void *)v30 + 64) = v27;
  }
  sub_255C7EFC8();
  sub_255BC686C();
  sub_255C7E8C8();
  double v31 = v35;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v6, v3);
  *(double *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_crossfadeDuration) = v31;
  uint64_t v33 = *(void *)(a1 + v28);
  if (v33)
  {
    float v34 = v31;
    *(float *)(v33 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeDuration) = v34;
  }
  return result;
}

uint64_t sub_255BC535C()
{
  sub_255BC67C4();
  sub_255C7E8C8();
  return v1;
}

float sub_255BC5398()
{
  sub_255BC6818();
  sub_255C7E8C8();
  return v1;
}

double sub_255BC53D4()
{
  sub_255BC686C();
  sub_255C7E8C8();
  return v1;
}

id sub_255BC5410()
{
  double v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  id v3 = objc_allocWithZone((Class)type metadata accessor for BackdropHostView());
  id v4 = v1;
  return sub_255BC5DCC(v1, v2, 1);
}

uint64_t sub_255BC5468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255BC7088();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_255BC54CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255BC7088();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_255BC5530()
{
}

uint64_t MCUINamespace<A>.backdropIsPaused(_:)(uint64_t a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  v10[15] = v3;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t MCUINamespace<A>.backdropIntensity(_:)(uint64_t a1, float a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  *(float *)&v10[3] = a2;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t MCUINamespace<A>.backdropCrossfadeDuration(_:)(uint64_t a1, double a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  *(double *)&v10[1] = a2;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_255BC58D4(_DWORD *a1@<X8>)
{
  *a1 = 1065353216;
}

uint64_t sub_255BC58E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, MEMORY[0x263F8D5F8]);
}

void sub_255BC58EC(void *a1@<X8>)
{
  *a1 = 0x3FE999999999999ALL;
}

uint64_t sub_255BC5900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, MEMORY[0x263F8D568]);
}

void sub_255BC590C()
{
  double v1 = *(void **)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
  if (!v1) {
    return;
  }
  uint64_t v2 = v0;
  char v3 = *(char **)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer);
  if (!v3) {
    return;
  }
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage];
  uint64_t v5 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image;
  double v6 = *(void **)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image);
  if (!v4)
  {
    if (!v6) {
      return;
    }
    goto LABEL_8;
  }
  if (!v6)
  {
LABEL_8:
    id v11 = v1;
    uint64_t v12 = v3;
    goto LABEL_9;
  }
  sub_255A43740(0, (unint64_t *)&qword_26B29FCA0);
  id v7 = v1;
  id v16 = v3;
  id v8 = v6;
  id v9 = v4;
  char v10 = sub_255C80DD8();

  if ((v10 & 1) == 0)
  {
    double v6 = *(void **)(v2 + v5);
LABEL_9:
    uint64_t v13 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
    char v14 = *(unsigned char *)(v2 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused);
    id v15 = v6;
    sub_255B62D48(v6, (v14 & 1) == 0);

    if (*(unsigned char *)(v2 + v13) == 1) {
      objc_msgSend(v1, sel_setNeedsDisplay);
    }
    id v7 = v3;
    id v16 = (char *)v1;
  }
}

void sub_255BC5A8C(id a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView];
  if (a1)
  {
    id v5 = a1;
    if (v4)
    {
      sub_255A43740(0, &qword_269F25F48);
      id v6 = v4;
      id v5 = v5;
      char v7 = sub_255C80DD8();

      if (v7) {
        return;
      }
    }
    objc_msgSend(v5, sel_removeFromSuperview);
    uint64_t v4 = *(void **)&v2[v3];
    if (!v4) {
      return;
    }
  }
  else if (!v4)
  {
    return;
  }
  id v10 = v4;
  unsigned int v8 = objc_msgSend(v10, sel_isPaused);
  uint64_t v9 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
  if (v8 != v2[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused])
  {
    objc_msgSend(v10, sel_setPaused_);
    objc_msgSend(v10, sel_setEnableSetNeedsDisplay_, v2[v9]);
  }
  sub_255BC590C();
  objc_msgSend(v2, sel_addSubview_, v10);
}

void sub_255BC5BD0()
{
  v1[0] = *(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask);
  sub_255BC601C(v1);
}

id sub_255BC5DCC(void *a1, char a2, char a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image;
  *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image] = 0;
  v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity] = 1045220557;
  *(void *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_crossfadeDuration] = 0x3FE999999999999ALL;
  uint64_t v9 = *(void **)&v3[v8];
  *(void *)&v3[v8] = a1;
  id v10 = v3;
  id v11 = a1;

  v10[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask] = a2;
  v10[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_allowsDisplayCompositing] = a3;

  v14.receiver = v10;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_255BC5BD0();

  return v12;
}

Swift::Void __swiftcall BackdropHostView.layoutSubviews()()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  double v1 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView];
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v2, sel_setFrame_);
  }
}

void sub_255BC601C(unsigned __int8 *a1)
{
  uint64_t v3 = v1;
  int v4 = *a1;
  if (qword_26B29F2B0 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_26B29F310;
  if (qword_26B29F310)
  {
    uint64_t v6 = qword_26B29F318;
    uint64_t v7 = qword_26B29F320;
    uint64_t v9 = (void *)qword_26B29F328;
    uint64_t v8 = qword_26B29F330;
    v37[0] = qword_26B29F310;
    v37[1] = qword_26B29F318;
    v37[2] = qword_26B29F320;
    _OWORD v37[3] = qword_26B29F328;
    v37[4] = qword_26B29F330;
    char v38 = byte_26B29F338 & 1;
    v36[0] = v4;
    id v10 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer());
    swift_unknownObjectRetain_n();
    uint64_t v35 = v6;
    swift_unknownObjectRetain_n();
    uint64_t v34 = v7;
    swift_unknownObjectRetain_n();
    uint64_t v33 = v9;
    id v11 = v9;
    id v12 = (char *)Backdrop.CompositeRenderer.init(context:configuration:)(v37, v36);
    uint64_t v13 = &v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis];
    swift_beginAccess();
    *(_DWORD *)(*(void *)v13 + 64) = 1065353216;
    sub_255B63A50();
    id v14 = objc_msgSend(self, sel_systemGrayColor);
    sub_255B63284(v14, 0);

    id v15 = (uint64_t *)&v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat];
    swift_beginAccess();
    uint64_t v16 = *v15;
    *id v15 = v8;
    if (v16 != v8)
    {
      uint64_t v17 = *(void *)&v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16];
      *(void *)(v17 + 16) = v8;
      *(void *)(v17 + 160) = sub_255B6772C();
      swift_unknownObjectRelease();
    }
    uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image);
    id v19 = v18;
    sub_255B62D48(v18, 0);

    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12D90]), sel_initWithFrame_device_, v5, 0.0, 0.0, 0.0, 0.0);
    unsigned int v21 = objc_msgSend(v5, sel_supportsFamily_, 1005);
    uint64_t v39 = v2;
    if (v21)
    {
      id v22 = objc_msgSend(self, sel_mainScreen);
      uint64_t v23 = (uint64_t)objc_msgSend(v22, sel_maximumFramesPerSecond);
    }
    else
    {
      uint64_t v24 = &v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state];
      swift_beginAccess();
      if (*v24) {
        uint64_t v23 = 30;
      }
      else {
        uint64_t v23 = 15;
      }
    }
    objc_msgSend(v20, sel_setPreferredFramesPerSecond_, v23);
    objc_msgSend(v20, sel_setColorPixelFormat_, *v15);
    objc_msgSend(v20, sel_setDelegate_, v12);
    id v25 = objc_msgSend(v20, sel_layer);
    objc_msgSend(v25, sel_setAllowsDisplayCompositing_, *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_allowsDisplayCompositing));

    if (v4)
    {
      objc_msgSend(v20, sel_setOpaque_, 0);
      objc_msgSend(v20, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);
    }
    uint64_t v26 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer;
    int v27 = *(void **)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer);
    *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer) = v12;
    uint64_t v28 = v12;

    uint64_t v29 = *(void *)(v3 + v26);
    if (v29)
    {
      uint64_t v30 = v29 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
      swift_beginAccess();
      *(_DWORD *)(*(void *)v30 + 64) = *(_DWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity);
    }
    sub_255BC590C();

    double v31 = *(void **)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
    *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView) = v20;
    id v32 = v20;
    sub_255BC5A8C(v31);

    sub_255B697BC((uint64_t)v5, v35, v34, v33);
  }
  else
  {
    sub_255BC70DC();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t BackdropHostView.accessibilityIgnoresInvertColors.getter()
{
  return 1;
}

uint64_t (*BackdropHostView.accessibilityIgnoresInvertColors.modify(unsigned char *a1))(void, void)
{
  *a1 = 1;
  return CGSizeMake;
}

id BackdropHostView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void BackdropHostView.init(frame:)()
{
}

id BackdropHostView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void BackdropHostView.didChangeState(renderer:)(uint64_t a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
  if (v2)
  {
    id v8 = v2;
    id v4 = objc_msgSend(v8, sel_device);
    if (v4)
    {
      if (objc_msgSend(v4, sel_supportsFamily_, 1005))
      {
        id v5 = objc_msgSend(self, sel_mainScreen);
        uint64_t v6 = (uint64_t)objc_msgSend(v5, sel_maximumFramesPerSecond);
      }
      else
      {
        uint64_t v7 = (unsigned char *)(a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
        swift_beginAccess();
        if (*v7) {
          uint64_t v6 = 30;
        }
        else {
          uint64_t v6 = 15;
        }
      }
      objc_msgSend(v8, sel_setPreferredFramesPerSecond_, v6);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_255BC6744()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F33360);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F33360);
  return sub_255C7D888();
}

unint64_t sub_255BC67C4()
{
  unint64_t result = qword_269F25F08;
  if (!qword_269F25F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25F08);
  }
  return result;
}

unint64_t sub_255BC6818()
{
  unint64_t result = qword_26B29E9D8;
  if (!qword_26B29E9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29E9D8);
  }
  return result;
}

unint64_t sub_255BC686C()
{
  unint64_t result = qword_269F25F30;
  if (!qword_269F25F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25F30);
  }
  return result;
}

uint64_t View.backdropIsPaused(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  View.mcui.getter(a2, (uint64_t)&v9 - v6);
  MCUINamespace<A>.backdropIsPaused(_:)(a1, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t View.backdropIntensity(_:)(uint64_t a1, float a2)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  View.mcui.getter(a1, (uint64_t)&v9 - v6);
  MCUINamespace<A>.backdropIntensity(_:)(v4, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255BC6AC4@<X0>(unsigned char *a1@<X8>)
{
  sub_255BC67C4();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BC6B14()
{
  return sub_255C7E8D8();
}

float sub_255BC6B60@<S0>(float *a1@<X8>)
{
  sub_255BC6818();
  sub_255C7E8C8();
  float result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255BC6BB0()
{
  return sub_255C7E8D8();
}

double sub_255BC6BFC@<D0>(double *a1@<X8>)
{
  sub_255BC686C();
  sub_255C7E8C8();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255BC6C4C()
{
  return sub_255C7E8D8();
}

unint64_t sub_255BC6C9C()
{
  unint64_t result = qword_26B29DE18;
  if (!qword_26B29DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29DE18);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BackdropView(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for BackdropView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for BackdropView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BackdropView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BackdropView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropView()
{
  return &type metadata for BackdropView;
}

uint64_t method lookup function for BackdropHostView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BackdropHostView);
}

uint64_t sub_255BC6E8C(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm_0(a1, &qword_26B29BD20, &qword_26B29BD18);
}

uint64_t sub_255BC6EA0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm_0(a1, &qword_26B29EEC8, &qword_26B29EEC0);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm_0(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getWitnessTable();
}

uint64_t sub_255BC6F38(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm_0(a1, &qword_26B29BD30, &qword_26B29BD28);
}

uint64_t sub_255BC6F4C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *_s31__Key_backdropCrossfadeDurationVMa()
{
  return &_s31__Key_backdropCrossfadeDurationVN;
}

ValueMetadata *type metadata accessor for BackdropIntensityKey()
{
  return &type metadata for BackdropIntensityKey;
}

ValueMetadata *type metadata accessor for BackdropIsPausedKey()
{
  return &type metadata for BackdropIsPausedKey;
}

void sub_255BC6FCC()
{
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image] = 0;
  v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity] = 1045220557;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_crossfadeDuration] = 0x3FE999999999999ALL;

  sub_255C81248();
  __break(1u);
}

unint64_t sub_255BC7088()
{
  unint64_t result = qword_26B29DE20;
  if (!qword_26B29DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29DE20);
  }
  return result;
}

unint64_t sub_255BC70DC()
{
  unint64_t result = qword_269F25F50;
  if (!qword_269F25F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25F50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BackdropHostView.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x255BC71CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropHostView.Error()
{
  return &type metadata for BackdropHostView.Error;
}

unint64_t sub_255BC7208()
{
  unint64_t result = qword_269F25F58;
  if (!qword_269F25F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25F58);
  }
  return result;
}

uint64_t NowPlayingHostedContentToggleButton.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t NowPlayingHostedContentToggleButton.hostedContentID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255BC7278()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_255BC72AC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_255BC72EC())()
{
  return j__swift_endAccess;
}

uint64_t sub_255BC7340@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255BC7398();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255BC7370()
{
  return sub_255BC7490();
}

uint64_t sub_255BC7398()
{
  swift_getKeyPath();
  sub_255BC7B64();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_255BC7420@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255BC7398();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255BC7450()
{
  return sub_255BC7490();
}

uint64_t sub_255BC7478()
{
  return 16;
}

__n128 sub_255BC7484(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255BC7490()
{
  return swift_release();
}

void (*sub_255BC753C(void *a1))(void *a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  sub_255BC7B64();
  swift_release();
  *int v3 = v1;
  swift_getKeyPath();
  type metadata accessor for NowPlayingHostedContentToggleButton();
  swift_getWitnessTable();
  sub_255C7D738();
  swift_release();
  v3[5] = sub_255BC72EC();
  return sub_255BC7688;
}

void sub_255BC7688(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_255BC76DC();

  free(v1);
}

uint64_t sub_255BC76DC()
{
  return swift_release();
}

uint64_t NowPlayingHostedContentToggleButton.__allocating_init(_:presenting:label:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = swift_allocObject();
  NowPlayingHostedContentToggleButton.init(_:presenting:label:)(a1, a2, a3);
  return v6;
}

uint64_t NowPlayingHostedContentToggleButton.init(_:presenting:label:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *(void *)(*(void *)v3 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  id v8 = (char *)&v17 - v7;
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  *(unsigned char *)(v3 + 48) = 1;
  uint64_t v15 = sub_255C7D748();
  *(void *)(v3 + 16) = v10;
  *(void *)(v3 + 24) = v11;
  *(void *)(v3 + 32) = v13;
  *(void *)(v3 + 40) = v14;
  a3(v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v3 + *(void *)(*(void *)v3 + 120), v8, v5);
  return v3;
}

uint64_t sub_255BC7958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  double v6 = MEMORY[0x270FA5388](a1);
  id v8 = (char *)v13 - v7;
  uint64_t v9 = *((void *)v2 + 5);
  v13[0] = *((void *)v2 + 4);
  v13[1] = v9;
  (*(void (**)(char *, char *, uint64_t, double))(v10 + 16))((char *)v13 - v7, &v2[*(void *)(v4 + 120)], v5, v6);
  swift_bridgeObjectRetain();
  char v11 = sub_255BC7398();
  return sub_255BC7A80(v13, (uint64_t)v8, v11 & 1, v5, a2);
}

uint64_t sub_255BC7A80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  *(void *)a5 = swift_getKeyPath();
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  *(unsigned char *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = swift_getKeyPath();
  *(void *)(a5 + 48) = 0;
  *(unsigned char *)(a5 + 56) = 0;
  *(void *)(a5 + 64) = swift_getKeyPath();
  *(void *)(a5 + 72) = 0;
  *(unsigned char *)(a5 + 80) = 0;
  *(void *)(a5 + 88) = v9;
  *(void *)(a5 + 96) = v10;
  uint64_t v11 = type metadata accessor for ToggleButton();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v11 + 48), a2, a4);
  *(unsigned char *)(a5 + *(int *)(v11 + 52)) = a3;
  return result;
}

uint64_t sub_255BC7B64()
{
  return sub_255C7D718();
}

uint64_t sub_255BC7C18()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = v2;
  return result;
}

uint64_t sub_255BC7C6C()
{
  return sub_255C7D708();
}

uint64_t type metadata accessor for NowPlayingHostedContentToggleButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *NowPlayingHostedContentToggleButton.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 128);
  uint64_t v3 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t NowPlayingHostedContentToggleButton.__deallocating_deinit()
{
  NowPlayingHostedContentToggleButton.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_255BC7EA0@<X0>(void *a1@<X8>)
{
  return NowPlayingHostedContentToggleButton.id.getter(a1);
}

uint64_t sub_255BC7EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255BC7958(a1, a2);
}

uint64_t sub_255BC7EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v148 = a2;
  uint64_t v4 = sub_255C7EBF8();
  uint64_t v144 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v143 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  MEMORY[0x270FA5388](v6);
  uint64_t v112 = (uint64_t *)((char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v157 = *(void *)(a1 + 16);
  uint64_t v156 = v8;
  uint64_t v9 = a1;
  uint64_t v10 = sub_255C7FF78();
  uint64_t v116 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v111 = (char *)&v106 - v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_255BCEBB4(&qword_269F260F8, (void (*)(uint64_t))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  *(void *)&unsigned long long v177 = v10;
  *((void *)&v177 + 1) = v6;
  uint64_t v108 = v10;
  uint64_t v14 = v6;
  uint64_t v106 = v6;
  *(void *)&long long v178 = WitnessTable;
  *((void *)&v178 + 1) = v13;
  uint64_t v15 = WitnessTable;
  uint64_t v110 = WitnessTable;
  uint64_t v16 = v13;
  uint64_t v109 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v122 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v107 = (char *)&v106 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EDF8);
  uint64_t v124 = OpaqueTypeMetadata2;
  uint64_t v19 = sub_255C7E458();
  uint64_t v123 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  long long v119 = (char *)&v106 - v20;
  *(void *)&unsigned long long v177 = v10;
  *((void *)&v177 + 1) = v14;
  *(void *)&long long v178 = v15;
  *((void *)&v178 + 1) = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_255A09998(&qword_26B29EDF0, &qword_26B29EDF8);
  uint64_t v113 = OpaqueTypeConformance2;
  uint64_t v175 = OpaqueTypeConformance2;
  uint64_t v176 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_255BCEBB4(&qword_26B29D388, MEMORY[0x263F19B68]);
  uint64_t v129 = v19;
  *(void *)&unsigned long long v177 = v19;
  *((void *)&v177 + 1) = v4;
  uint64_t v147 = v4;
  uint64_t v117 = v23;
  *(void *)&long long v178 = v23;
  *((void *)&v178 + 1) = v24;
  uint64_t v115 = v24;
  uint64_t v25 = swift_getOpaqueTypeMetadata2();
  uint64_t v120 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v114 = (char *)&v106 - v26;
  uint64_t v121 = v27;
  uint64_t v28 = sub_255C7E458();
  uint64_t v133 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  long long v128 = (char *)&v106 - v29;
  sub_255C7F0D8();
  uint64_t v134 = v28;
  uint64_t v30 = sub_255C7E458();
  uint64_t v135 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  long long v132 = (char *)&v106 - v31;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD80);
  uint64_t v137 = v30;
  uint64_t v32 = sub_255C7E458();
  uint64_t v138 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  char v136 = (char *)&v106 - v33;
  uint64_t v139 = v34;
  uint64_t v35 = sub_255C7E458();
  uint64_t v141 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  long long v140 = (char *)&v106 - v36;
  uint64_t v142 = v37;
  uint64_t v146 = sub_255C7E458();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v154 = (char *)&v106 - v38;
  uint64_t v39 = v9;
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = *(void *)(v40 + 64);
  double v43 = MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v106 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = *(void (**)(char *, long long *, uint64_t, double))(v40 + 16);
  uint64_t v149 = v2;
  v155(v44, v2, v9, v43);
  sub_255C80958();
  uint64_t v45 = sub_255C80948();
  uint64_t v46 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v47 = (v46 + 48) & ~v46;
  uint64_t v125 = v41;
  uint64_t v153 = v47 + v41;
  uint64_t v150 = v46;
  uint64_t v48 = v46 | 7;
  uint64_t v49 = (char *)swift_allocObject();
  uint64_t v50 = MEMORY[0x263F8F500];
  *((void *)v49 + 2) = v45;
  *((void *)v49 + 3) = v50;
  uint64_t v51 = v156;
  *((void *)v49 + 4) = v157;
  *((void *)v49 + 5) = v51;
  id v52 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v52(&v49[v47], v44, v39);
  uint64_t v152 = v40 + 16;
  ((void (*)(char *, long long *, uint64_t))v155)(v44, v2, v39);
  uint64_t v53 = sub_255C80948();
  uint64_t v151 = v48;
  uint64_t v54 = (char *)swift_allocObject();
  *((void *)v54 + 2) = v53;
  uint64_t v55 = v157;
  *((void *)v54 + 3) = MEMORY[0x263F8F500];
  *((void *)v54 + 4) = v55;
  uint64_t v56 = v156;
  *((void *)v54 + 5) = v156;
  uint64_t v130 = v44;
  uint64_t v118 = v39;
  uint64_t v153 = v40 + 32;
  uint64_t v131 = (void (*)(uint64_t, char *, uint64_t))v52;
  v52(&v54[v47], v44, v39);
  sub_255C80008();
  unsigned long long v57 = v177;
  uint64_t v158 = v55;
  uint64_t v159 = v56;
  uint64_t v58 = v149;
  uint64_t v160 = v149;
  swift_retain();
  swift_retain();
  uint64_t v59 = v111;
  uint64_t v126 = v57 >> 64;
  uint64_t v127 = v57;
  id v60 = v107;
  sub_255C7FF68();
  uint64_t v61 = *((void *)v58 + 12);
  uint64_t v62 = (uint64_t)v112;
  *uint64_t v112 = *((void *)v58 + 11);
  *(void *)(v62 + 8) = v61;
  uint64_t v63 = v106;
  uint64_t v64 = (uint64_t *)(v62 + *(int *)(v106 + 20));
  *uint64_t v64 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = v62 + *(int *)(v63 + 24);
  type metadata accessor for NowPlayingViewModel.Metrics();
  sub_255BCEBB4(&qword_26B297B40, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Metrics);
  swift_bridgeObjectRetain();
  *(void *)uint64_t v65 = sub_255C7DD58();
  *(unsigned char *)(v65 + 8) = v66 & 1;
  uint64_t v67 = v108;
  sub_255C7F6F8();
  sub_255BCEEBC(v62, (uint64_t (*)(void))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v67);
  if (qword_269F201A8 != -1) {
    swift_once();
  }
  uint64_t v116 = ~v150;
  *(void *)&unsigned long long v177 = qword_269F25F60;
  sub_255BCEB60();
  uint64_t v68 = v119;
  uint64_t v69 = v124;
  sub_255C7F708();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v60, v69);
  uint64_t v70 = v143;
  uint64_t v71 = v129;
  uint64_t v72 = v147;
  uint64_t v73 = v117;
  uint64_t v74 = v115;
  sub_255B88354();
  uint64_t v75 = v114;
  sub_255C7F688();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v70, v72);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v68, v71);
  long long v76 = v58[1];
  unsigned long long v177 = *v58;
  long long v178 = v76;
  char v179 = *((unsigned char *)v58 + 32);
  sub_255B36F3C((uint64_t)&v177, (void (*)(void, void, void, void, void))sub_255AB8EBC);
  sub_255ABB854((uint64_t)&v171);
  sub_255B36F3C((uint64_t)&v177, (void (*)(void, void, void, void, void))sub_255AB8EB0);
  if (v172 != 1) {
    sub_255A8AFD4(v171, v172);
  }
  uint64_t v171 = v71;
  uint64_t v172 = v72;
  uint64_t v173 = v73;
  uint64_t v174 = v74;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  uint64_t v78 = v128;
  uint64_t v79 = v121;
  sub_255C7F7E8();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v75, v79);
  uint64_t v171 = 0;
  uint64_t v172 = 0xE000000000000000;
  sub_255C810E8();
  swift_bridgeObjectRelease();
  uint64_t v171 = 0xD000000000000018;
  uint64_t v172 = 0x8000000255CA0AE0;
  swift_bridgeObjectRetain();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  unint64_t v80 = sub_255A101A0();
  uint64_t v169 = v77;
  unint64_t v170 = v80;
  uint64_t v81 = MEMORY[0x263F18E48];
  uint64_t v82 = v134;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v84 = v132;
  sub_255B4BFB8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v78, v82);
  uint64_t v85 = v118;
  uint64_t v147 = *(int *)(v118 + 52);
  uint64_t v86 = sub_255BCEBB4((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v167 = v83;
  uint64_t v168 = v86;
  uint64_t v87 = v137;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = v136;
  sub_255C7FB08();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v84, v87);
  uint64_t v90 = sub_255A09998(&qword_26B29BD78, &qword_26B29BD80);
  uint64_t v165 = v88;
  uint64_t v166 = v90;
  uint64_t v144 = v81;
  uint64_t v91 = v139;
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v93 = v140;
  sub_255C7FAB8();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v89, v91);
  uint64_t v94 = v130;
  ((void (*)(char *, long long *, uint64_t))v155)(v130, v58, v85);
  uint64_t v95 = (v150 + 32) & v116;
  uint64_t v150 = v95 + v125;
  uint64_t v96 = swift_allocObject();
  uint64_t v97 = v156;
  *(void *)(v96 + 16) = v157;
  *(void *)(v96 + 24) = v97;
  long long v98 = v131;
  v131(v96 + v95, v94, v85);
  uint64_t v163 = v92;
  uint64_t v164 = MEMORY[0x263F18BF0];
  uint64_t v99 = v142;
  uint64_t v100 = swift_getWitnessTable();
  sub_255C7FB28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v93, v99);
  LOBYTE(v171) = *((unsigned char *)v149 + v147);
  ((void (*)(char *))v155)(v94);
  uint64_t v101 = swift_allocObject();
  uint64_t v102 = v156;
  *(void *)(v101 + 16) = v157;
  *(void *)(v101 + 24) = v102;
  v98(v101 + v95, v94, v85);
  uint64_t v161 = v100;
  uint64_t v162 = MEMORY[0x263F1A240];
  uint64_t v103 = v146;
  swift_getWitnessTable();
  uint64_t v104 = v154;
  sub_255C7FB48();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v104, v103);
}

uint64_t sub_255BC91C0@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  sub_255A7663C(v4, v5, v6);
  sub_255ABBD20(v4, v5, v6, &v10);
  sub_255A767C8(v4, v5, v6);
  if (v11)
  {
    if (v10 == *(void *)(a1 + 88) && v11 == *(void *)(a1 + 96))
    {
      uint64_t result = swift_bridgeObjectRelease();
      char v8 = 1;
    }
    else
    {
      char v8 = sub_255C81428();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  *a2 = v8 & 1;
  return result;
}

uint64_t sub_255BC9294(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ToggleButton();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - v8;
  int v10 = *a1;
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_255C7D898();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2AA4E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
  id v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    int v31 = v14;
    uint64_t v16 = v15;
    uint64_t v32 = swift_slowAlloc();
    v34[0] = v32;
    *(_DWORD *)uint64_t v16 = 136315394;
    if (v10) {
      uint64_t v17 = 0x69746E6573657250;
    }
    else {
      uint64_t v17 = 0x697373696D736944;
    }
    uint64_t v33 = sub_255A7BEC4(v17, 0xEA0000000000676ELL, v34);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    os_log_t v30 = v12;
    int v18 = v10;
    uint64_t v20 = *((void *)v9 + 11);
    unint64_t v19 = *((void *)v9 + 12);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_255A7BEC4(v20, v19, v34);
    sub_255C80F18();
    int v10 = v18;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    os_log_t v21 = v30;
    _os_log_impl(&dword_255A00000, v30, (os_log_type_t)v31, "%s selected content (id=%{public}s) because its toggle button was tapped", (uint8_t *)v16, 0x16u);
    uint64_t v22 = v32;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v22, -1, -1);
    MEMORY[0x25A297C00](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v23 = *(void *)(a4 + 64);
  uint64_t v24 = *(void *)(a4 + 72);
  char v25 = *(unsigned char *)(a4 + 80);
  sub_255AC86F0();
  uint64_t v26 = (void (*)(uint64_t *, uint64_t *))sub_255ABBF5C(v23, v24, v25);
  sub_255ABFD70();
  if (v10)
  {
    uint64_t v28 = *(void *)(a4 + 88);
    uint64_t v27 = *(void *)(a4 + 96);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v27 = 0;
  }
  v34[0] = v28;
  v34[1] = v27;
  LOBYTE(v33) = 1;
  v26(v34, &v33);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255BC9600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ToggleButton();
  sub_255A20F54(a1 + *(int *)(v7 + 48));
  sub_255A20F54(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a2);
}

void sub_255BC96F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + *(int *)(v7 + 60)) & 1) == 0)
  {
    uint64_t v8 = *(void *)(v1 + 40);
    uint64_t v9 = *(void *)(v2 + 48);
    char v10 = *(unsigned char *)(v2 + 56);
    sub_255A7663C(*(void *)(v2 + 40), v9, v10);
    sub_255ABBD20(v8, v9, v10, &v26);
    sub_255A767C8(v8, v9, v10);
    if (!v27)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (v26 == *(void *)(v2 + 88) && v27 == *(void *)(v2 + 96))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_255C81428();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        return;
      }
    }
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_255C7D898();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B2AA4E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
    os_log_type_t v13 = sub_255C7D878();
    os_log_type_t v14 = sub_255C80C08();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v26 = v24;
      *(_DWORD *)uint64_t v15 = 136446210;
      v23[1] = v15 + 4;
      uint64_t v17 = *((void *)v6 + 11);
      unint64_t v16 = *((void *)v6 + 12);
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_255A7BEC4(v17, v16, &v26);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      _os_log_impl(&dword_255A00000, v13, v14, "Dismissing selected content (id=%{public}s) because its associated button was disabled", v15, 0xCu);
      uint64_t v18 = v24;
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v18, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    }

    uint64_t v19 = *(void *)(v2 + 64);
    uint64_t v20 = *(void *)(v2 + 72);
    char v21 = *(unsigned char *)(v2 + 80);
    sub_255AC86F0();
    uint64_t v22 = (void (*)(uint64_t *, uint64_t *))sub_255ABBF5C(v19, v20, v21);
    sub_255ABFD70();
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    LOBYTE(v25) = 0;
    v22(&v26, &v25);
    swift_release();
  }
}

void sub_255BC9A54()
{
  qword_269F25F60 = 0xC024000000000000;
}

uint64_t NowPlayingHostedContentToggleButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v5 = sub_255C7EC78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_255C7EF28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25F80);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v30 = v15;
  uint64_t v31 = v16;
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v14, a1, v11, v17);
  uint64_t v20 = v3;
  sub_255BCEE54(v3, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v22 = (v13 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23 + v21, v14, v11);
  sub_255BC9F80((uint64_t)v10, v23 + v22);
  uint64_t v36 = a1;
  uint64_t v37 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25F88);
  sub_255BCA2DC();
  sub_255C7FEA8();
  uint64_t v24 = v32;
  sub_255C7EC68();
  sub_255A09998(&qword_269F25FC8, &qword_269F25F80);
  sub_255BCEBB4(&qword_269F25FD0, MEMORY[0x263F19CE8]);
  uint64_t v25 = v30;
  uint64_t v26 = v33;
  sub_255C7F638();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v25);
}

uint64_t type metadata accessor for NowPlayingHostedContentToggleButtonStyle()
{
  uint64_t result = qword_269F26068;
  if (!qword_269F26068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255BC9EA4(uint64_t a1, void *a2)
{
  uint64_t v3 = (void (*)(uint64_t *, void))sub_255C7EEE8();
  *uint64_t v4 = !*v4;
  v3(v11, 0);
  char v5 = *((unsigned char *)a2 + *(int *)(type metadata accessor for NowPlayingHostedContentToggleButtonStyle() + 24) + 8);
  uint64_t v6 = swift_retain();
  sub_255ABD4B8(v6, v5);
  swift_release();
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  v11[0] = v7;
  v11[1] = v8;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_255C7EEF8();
  sub_255BC9FE8(v9, v11, (v9 & 1) == 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_255BC9F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255BC9FE8(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + 16);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_255B39F08(v6, v5);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v12 + 16))
      {
        uint64_t v13 = sub_255B3B60C();
        if (v14)
        {
          uint64_t v15 = *(void (**)(char *))(*(void *)(v12 + 56) + 16 * v13);
          swift_retain();
          swift_bridgeObjectRelease();
          char v16 = a3 & 1;
          v15(&v16);
          return swift_release();
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_255BCA0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25FC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25FB0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25FA0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = sub_255C801F8();
  v8[1] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26100);
  sub_255BCA498(a1, a2, (uint64_t)v8 + *(int *)(v17 + 44));
  sub_255A09540((uint64_t)v8, (uint64_t)v11, &qword_269F25FC0);
  sub_255A095A4((uint64_t)v8, &qword_269F25FC0);
  sub_255A09540((uint64_t)v11, (uint64_t)v15, &qword_269F25FB0);
  uint64_t v18 = &v15[*(int *)(v13 + 44)];
  *(void *)uint64_t v18 = 0x3FF0000000000000;
  *((_WORD *)v18 + 4) = 0;
  sub_255A095A4((uint64_t)v11, &qword_269F25FB0);
  LOBYTE(a1) = sub_255C7EEF8();
  sub_255A09540((uint64_t)v15, a3, &qword_269F25FA0);
  uint64_t v19 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F25F88) + 36);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = a1 & 1;
  return sub_255A095A4((uint64_t)v15, &qword_269F25FA0);
}

uint64_t sub_255BCA2D4@<X0>(uint64_t a1@<X8>)
{
  return sub_255BCA0E8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255BCA2DC()
{
  unint64_t result = qword_269F25F90;
  if (!qword_269F25F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25F88);
    sub_255BCA37C();
    sub_255A09998((unint64_t *)&qword_26B29B9F8, &qword_26B29BA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25F90);
  }
  return result;
}

unint64_t sub_255BCA37C()
{
  unint64_t result = qword_269F25F98;
  if (!qword_269F25F98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25FA0);
    sub_255BCA3F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25F98);
  }
  return result;
}

unint64_t sub_255BCA3F8()
{
  unint64_t result = qword_269F25FA8;
  if (!qword_269F25FA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F25FB0);
    sub_255A09998(&qword_269F25FB8, &qword_269F25FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25FA8);
  }
  return result;
}

uint64_t sub_255BCA498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v81 = a1;
  uint64_t v98 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v97 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C802C8();
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v93 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21DD8);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  unint64_t v80 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_255C7EA18();
  uint64_t v79 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  char v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_255C7EF08();
  uint64_t v85 = *(void *)(v12 - 8);
  uint64_t v86 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26108);
  MEMORY[0x270FA5388](v82);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26110);
  MEMORY[0x270FA5388](v83);
  uint64_t v91 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26118);
  MEMORY[0x270FA5388](v88);
  uint64_t v94 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v89 = (char *)&v78 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v92 = (uint64_t)&v78 - v22;
  uint64_t v23 = sub_255C7E518();
  uint64_t v24 = v23 - 8;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (_OWORD *)((char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBE8);
  uint64_t v28 = v27 - 8;
  MEMORY[0x270FA5388](v27);
  uint64_t v90 = (uint64_t)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v78 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v78 - v34;
  uint64_t v36 = (char *)v26 + *(int *)(v24 + 28);
  uint64_t v37 = *MEMORY[0x263F19860];
  uint64_t v38 = sub_255C7E988();
  uint64_t v39 = v37;
  uint64_t v40 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v39, v38);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v26 = _Q0;
  if (sub_255C7EEF8()) {
    double v46 = 1.0;
  }
  else {
    double v46 = 0.0;
  }
  uint64_t v47 = (uint64_t (*)(void))MEMORY[0x263F19048];
  sub_255BCEE54((uint64_t)v26, (uint64_t)v32, MEMORY[0x263F19048]);
  *(double *)&v32[*(int *)(v28 + 44)] = v46;
  sub_255BCEEBC((uint64_t)v26, v47);
  uint64_t v87 = v35;
  sub_255A10514((uint64_t)v32, (uint64_t)v35, &qword_26B29EBE8);
  sub_255C7EF18();
  char v48 = sub_255C7EEF8();
  type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  sub_255ABA66C((uint64_t)v11);
  uint64_t v49 = *(int *)(v8 + 56);
  uint64_t v50 = v78;
  uint64_t v51 = &v80[v49];
  *unint64_t v80 = v48 & 1;
  uint64_t v52 = v79;
  (*(void (**)(unsigned char *, char *, uint64_t))(v79 + 32))(v51, v11, v50);
  if (v48)
  {
    uint64_t v53 = sub_255C7FC68();
LABEL_11:
    uint64_t v54 = v53;
    (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v51, v50);
    goto LABEL_12;
  }
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v52 + 88))(v51, v50) != *MEMORY[0x263F19968])
  {
    uint64_t v53 = sub_255C7FC28();
    goto LABEL_11;
  }
  if (qword_269F1FF00 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_269F33050;
  swift_retain();
LABEL_12:
  uint64_t v56 = v85;
  uint64_t v55 = v86;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v16, v14, v86);
  *(void *)&v16[*(int *)(v82 + 36)] = v54;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v55);
  char v57 = sub_255C7EEF8();
  uint64_t v59 = v95;
  uint64_t v58 = v96;
  id v60 = (unsigned int *)MEMORY[0x263F1B970];
  if ((v57 & 1) == 0) {
    id v60 = (unsigned int *)MEMORY[0x263F1B998];
  }
  uint64_t v61 = v93;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v93, *v60, v96);
  uint64_t v62 = (uint64_t)v91;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(&v91[*(int *)(v83 + 36)], v61, v58);
  sub_255A09540((uint64_t)v16, v62, &qword_269F26108);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v58);
  sub_255A095A4((uint64_t)v16, &qword_269F26108);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = sub_255C7EF28();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v97, v40, v64);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v64);
  uint64_t v67 = (uint64_t)v89;
  uint64_t v68 = (uint64_t *)&v89[*(int *)(v88 + 36)];
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26120);
  sub_255A09540(v66, (uint64_t)v68 + *(int *)(v69 + 28), qword_269F25FE0);
  uint64_t *v68 = KeyPath;
  sub_255A09540(v62, v67, &qword_269F26110);
  sub_255A095A4(v66, qword_269F25FE0);
  sub_255A095A4(v62, &qword_269F26110);
  uint64_t v70 = v67;
  uint64_t v71 = v92;
  sub_255A10514(v70, v92, &qword_269F26118);
  uint64_t v72 = (uint64_t)v87;
  uint64_t v73 = v90;
  sub_255A09540((uint64_t)v87, v90, &qword_26B29EBE8);
  uint64_t v74 = v94;
  sub_255A09540(v71, v94, &qword_269F26118);
  uint64_t v75 = v98;
  sub_255A09540(v73, v98, &qword_26B29EBE8);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(qword_269F26128);
  sub_255A09540(v74, v75 + *(int *)(v76 + 48), &qword_269F26118);
  sub_255A095A4(v71, &qword_269F26118);
  sub_255A095A4(v72, &qword_26B29EBE8);
  sub_255A095A4(v74, &qword_269F26118);
  return sub_255A095A4(v73, &qword_26B29EBE8);
}

uint64_t MCUINamespace<A>.hostedContentToggleConfiguration.getter()
{
  sub_255BCADD0();

  return sub_255C7E8C8();
}

unint64_t sub_255BCADD0()
{
  unint64_t result = qword_269F25FD8;
  if (!qword_269F25FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F25FD8);
  }
  return result;
}

uint64_t sub_255BCAE24()
{
  return sub_255C7E8C8();
}

uint64_t sub_255BCAE64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_255A09540(a1, (uint64_t)&v9 - v6, qword_269F25FE0);
  sub_255A09540((uint64_t)v7, (uint64_t)v4, qword_269F25FE0);
  sub_255BCADD0();
  sub_255C7E8D8();
  return sub_255A095A4((uint64_t)v7, qword_269F25FE0);
}

uint64_t MCUINamespace<A>.hostedContentToggleConfiguration.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_255A09540(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), qword_269F25FE0);
  sub_255BCADD0();
  sub_255C7E8D8();
  return sub_255A095A4(a1, qword_269F25FE0);
}

uint64_t sub_255BCB000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v37 = a3;
  uint64_t v7 = sub_255C7EC78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(a2 - 8);
  uint64_t v10 = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C7EF28();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25F80);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  uint64_t v33 = v18;
  double v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v16, a1, v13, v19);
  uint64_t v22 = v5;
  sub_255BCEE54(v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v24 = (v15 + *(unsigned __int8 *)(v31 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v23, v16, v13);
  sub_255BC9F80((uint64_t)v12, v25 + v24);
  uint64_t v38 = a1;
  uint64_t v39 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F25F88);
  sub_255BCA2DC();
  sub_255C7FEA8();
  uint64_t v26 = v34;
  sub_255C7EC68();
  sub_255A09998(&qword_269F25FC8, &qword_269F25F80);
  sub_255BCEBB4(&qword_269F25FD0, MEMORY[0x263F19CE8]);
  uint64_t v27 = v32;
  uint64_t v28 = v35;
  sub_255C7F638();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v21, v27);
}

uint64_t sub_255BCB3F0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  __swift_allocate_value_buffer(v0, qword_269F25F68);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269F25F68);
  uint64_t v2 = sub_255C7EF28();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_255BCB488@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F201B0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269F25F68);
  return sub_255A09540(v3, a1, qword_269F25FE0);
}

void (*MCUINamespace<A>.hostedContentToggleConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_255BCADD0();
  sub_255C7E8C8();
  return sub_255BCB5C0;
}

void sub_255BCB5C0(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_255A09540((*a1)[3], (*a1)[2], qword_269F25FE0);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = (void *)v3[2];
  if (a2)
  {
    sub_255A09540(v3[2], v3[1], qword_269F25FE0);
    sub_255C7E8D8();
    sub_255A095A4((uint64_t)v6, qword_269F25FE0);
  }
  else
  {
    sub_255C7E8D8();
  }
  sub_255A095A4((uint64_t)v4, qword_269F25FE0);
  free(v4);
  free(v6);
  free(v5);

  free(v3);
}

uint64_t sub_255BCB6B0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t NowPlayingViewModel.Metrics.on(_:for:handler:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  uint64_t v11 = (void *)(v9 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v9 + 16);
  *(void *)(v9 + 16) = 0x8000000000000000;
  unint64_t v15 = sub_255B39F08(v8, v7);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_11;
  }
  LOBYTE(v9) = v14;
  if (*(void *)(v13 + 24) >= v18)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_11:
    sub_255B84DE4();
    goto LABEL_6;
  }
  sub_255B82510(v18, isUniquelyReferenced_nonNull_native);
  unint64_t v19 = sub_255B39F08(v8, v7);
  if ((v9 & 1) != (v20 & 1)) {
    goto LABEL_13;
  }
  unint64_t v15 = v19;
LABEL_6:
  *uint64_t v11 = v13;
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)*v11;
  if (v9)
  {
LABEL_9:
    uint64_t v27 = v21[7];
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *(void *)(v27 + 8 * v15);
    *(void *)(v27 + 8 * v15) = 0x8000000000000000;
    sub_255BCCBB0((uint64_t)sub_255BCB958, v10, v28);
    *(void *)(v27 + 8 * v15) = v30;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  unint64_t v22 = sub_255A19CC4(MEMORY[0x263F8EE78]);
  v21[(v15 >> 6) + 8] |= 1 << v15;
  unint64_t v23 = (uint64_t *)(v21[6] + 16 * v15);
  *unint64_t v23 = v8;
  v23[1] = v7;
  *(void *)(v21[7] + 8 * v15) = v22;
  uint64_t v24 = v21[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (!v25)
  {
    void v21[2] = v26;
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  __break(1u);
LABEL_13:
  uint64_t result = sub_255C814B8();
  __break(1u);
  return result;
}

uint64_t sub_255BCB8F4(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_255BCB920()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255BCB958(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t EnvironmentValues.hostedContentToggleConfiguration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v0, v4);
  sub_255BCADD0();
  sub_255C7E8C8();
  return sub_255A095A4((uint64_t)v3, qword_26B297F28);
}

uint64_t sub_255BCBA64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C7E8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, a1, v5);
  sub_255BCADD0();
  sub_255C7E8C8();
  return sub_255A095A4((uint64_t)v4, qword_26B297F28);
}

uint64_t sub_255BCBB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - v11;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v19 - v14;
  sub_255A09540(a1, (uint64_t)&v19 - v14, qword_269F25FE0);
  sub_255A09540((uint64_t)v15, (uint64_t)v12, qword_269F25FE0);
  uint64_t v16 = sub_255C7E8B8();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v6, a2, v16);
  sub_255A09540((uint64_t)v12, (uint64_t)v9, qword_269F25FE0);
  sub_255BCADD0();
  sub_255C7E8D8();
  sub_255A095A4((uint64_t)v12, qword_269F25FE0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v6, v16);
  return sub_255A095A4((uint64_t)v15, qword_269F25FE0);
}

uint64_t EnvironmentValues.hostedContentToggleConfiguration.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v16 - v11;
  sub_255A09540(a1, (uint64_t)&v16 - v11, qword_269F25FE0);
  uint64_t v13 = sub_255C7E8B8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v2, v13);
  sub_255A09540((uint64_t)v12, (uint64_t)v9, qword_269F25FE0);
  sub_255BCADD0();
  sub_255C7E8D8();
  sub_255A095A4((uint64_t)v12, qword_269F25FE0);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v2, v6, v13);
  return sub_255A095A4(a1, qword_269F25FE0);
}

void (*EnvironmentValues.hostedContentToggleConfiguration.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  size_t v6 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_269F25FE0) - 8) + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  uint64_t v7 = sub_255C7E8B8();
  v3[6] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  _OWORD v3[7] = v8;
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
  unsigned char v3[8] = v9;
  v3[9] = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v5, v1, v7);
  v3[10] = sub_255BCADD0();
  sub_255C7E8C8();
  sub_255A095A4((uint64_t)v5, qword_26B297F28);
  return sub_255BCC0A0;
}

void sub_255BCC0A0(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_255A09540((*a1)[5], (*a1)[4], qword_269F25FE0);
  uint64_t v4 = v3[7];
  uint64_t v5 = (void (*)(void *, uint64_t, uint64_t))v3[8];
  uint64_t v6 = v3[6];
  uint64_t v12 = (void *)v3[5];
  uint64_t v7 = (void *)v3[3];
  uint64_t v8 = (void *)v3[4];
  uint64_t v9 = (void *)v3[1];
  uint64_t v11 = (void *)v3[2];
  uint64_t v10 = *v3;
  if (a2)
  {
    sub_255A09540((uint64_t)v8, (uint64_t)v7, qword_269F25FE0);
    v5(v9, v10, v6);
    sub_255A09540((uint64_t)v7, (uint64_t)v11, qword_269F25FE0);
    sub_255C7E8D8();
    sub_255A095A4((uint64_t)v7, qword_269F25FE0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v6);
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v10, v9, v6);
    sub_255A095A4((uint64_t)v8, qword_269F25FE0);
  }
  else
  {
    v5(v9, *v3, v6);
    sub_255A09540((uint64_t)v8, (uint64_t)v7, qword_269F25FE0);
    sub_255C7E8D8();
    sub_255A095A4((uint64_t)v8, qword_269F25FE0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v6);
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v10, v9, v6);
  }
  sub_255A095A4((uint64_t)v12, qword_269F25FE0);
  free(v12);
  free(v8);
  free(v7);
  free(v11);
  free(v9);

  free(v3);
}

uint64_t sub_255BCC2A4(char a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_255B39D24(a3);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a1 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a1 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_255B838DC();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a2;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(double *)(v16[6] + v18) = a3;
    *(double *)(v16[7] + v18) = a2;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_255B8013C(result, a1 & 1);
  uint64_t result = sub_255B39D24(a3);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_255C814B8();
  __break(1u);
  return result;
}

uint64_t sub_255BCC3D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_255B39E20(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_255B83F60();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_255B80BF4(result, a4 & 1);
  uint64_t result = sub_255B39E20(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_255C814B8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v18[2] = v23;

  return swift_bridgeObjectRetain();
}

uint64_t sub_255BCC538(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_255BCC87C(a1, a2, a3, a4, (void (*)(void))sub_255B84110, (void (*)(void))sub_255B80F00);
}

_OWORD *sub_255BCC564(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_255B3A0AC((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_255B842C0();
      goto LABEL_7;
    }
    sub_255B811E0(v12, a3 & 1);
    unint64_t v18 = sub_255B3A0AC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_255C814B8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    return sub_255A199E0(a1, v16);
  }
LABEL_13:
  sub_255BCCEFC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_255BCC6A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_255C7D5C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_255B39F90(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_255B84644();
    goto LABEL_7;
  }
  sub_255B8183C(v17, a3 & 1);
  unint64_t v23 = sub_255B39F90(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_255C814B8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  BOOL v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_255BCCF64(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_255BCC850(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_255BCC87C(a1, a2, a3, a4, (void (*)(void))sub_255B84488, (void (*)(void))sub_255B8151C);
}

uint64_t sub_255BCC87C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_255B39E20(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    BOOL v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_release();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v25 = sub_255B39E20(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_255C814B8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  BOOL v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a2;
  v27[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v22[2] = v30;

  return swift_bridgeObjectRetain();
}

uint64_t sub_255BCCA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_255B39E20(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_255B848DC();
LABEL_7:
    uint64_t v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      char v24 = (void *)(v23[7] + 32 * v17);
      uint64_t result = swift_bridgeObjectRelease();
      *char v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_255B81C60(v20, a7 & 1);
  unint64_t v26 = sub_255B39E20(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_255C814B8();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  uint64_t v28 = (uint64_t *)(v23[6] + 16 * v17);
  uint64_t *v28 = a5;
  v28[1] = a6;
  BOOL v29 = (void *)(v23[7] + 32 * v17);
  void *v29 = a1;
  v29[1] = a2;
  v29[2] = a3;
  v29[3] = a4;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v23[2] = v32;

  return swift_bridgeObjectRetain();
}

uint64_t sub_255BCCBB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_255B3B60C();
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_255B84C48();
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      unint64_t v17 = (void *)(*(void *)(v16 + 56) + 16 * v10);
      uint64_t result = swift_release();
      *unint64_t v17 = a1;
      v17[1] = a2;
      return result;
    }
LABEL_11:
    *(void *)(v16 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    BOOL v19 = (void *)(*(void *)(v16 + 56) + 16 * v10);
    *BOOL v19 = a1;
    v19[1] = a2;
    uint64_t v20 = *(void *)(v16 + 16);
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      *(void *)(v16 + 16) = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_255B82244(result, a3 & 1);
  uint64_t result = sub_255B3B60C();
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = *v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_255C814B8();
  __break(1u);
  return result;
}

uint64_t sub_255BCCCDC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_255B3A284(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_255B8512C();
      goto LABEL_7;
    }
    sub_255B82B08(v13, a3 & 1);
    unint64_t v24 = sub_255B3A284(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_255C814B8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_255C7D5C8();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_255BCD01C(v10, a2, a1, v16);
}

uint64_t sub_255BCCE44(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_255C7D6A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_255BCCEFC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_255A199E0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_255BCCF64(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_255C7D5C8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_255BCD01C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_255C7D5C8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_255BCD0C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BCD10C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BCD128()
{
  return 16;
}

__n128 sub_255BCD134(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255BCD140()
{
  return sub_255C7E8C8();
}

uint64_t sub_255BCD184()
{
  return 0;
}

uint64_t sub_255BCD19C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_255C7D758();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for NowPlayingHostedContentToggleButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NowPlayingHostedContentToggleButton);
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.__allocating_init(_:presenting:label:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.content.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t *initializeBufferWithCopyOfBuffer for NowPlayingHostedContentToggleButtonStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    char v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    LOBYTE(v15) = v15[8];
    *(void *)char v14 = v16;
    v14[8] = (char)v15;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for NowPlayingHostedContentToggleButtonStyle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for NowPlayingHostedContentToggleButtonStyle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  return a1;
}

void *assignWithCopy for NowPlayingHostedContentToggleButtonStyle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for NowPlayingHostedContentToggleButtonStyle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

void *assignWithTake for NowPlayingHostedContentToggleButtonStyle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_255A095A4((uint64_t)a1 + v7, (uint64_t *)&unk_26B298500);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7EA18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingHostedContentToggleButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BCD9A0);
}

uint64_t sub_255BCD9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingHostedContentToggleButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BCDA68);
}

uint64_t sub_255BCDA68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255BCDB14()
{
  sub_255A536C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t _s32HostedContentToggleButtonMetricsCMa()
{
  return self;
}

uint64_t sub_255BCDBD8()
{
  type metadata accessor for ToggleButton();

  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ToggleButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BCDC38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BCDD08()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_255BCDDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 104) & (unint64_t)~v6) + 1 > 0x18)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v26 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 8);
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 24);
    char v15 = *(unsigned char *)(a2 + 32);
    sub_255AB8EBC(*(void *)a2, v12, v13, v14, v15);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(unsigned char *)(a1 + 32) = v15;
    unint64_t v16 = a1 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = a2 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
    uint64_t v19 = *(void *)(v17 + 48);
    LOBYTE(v12) = *(unsigned char *)(v17 + 56);
    sub_255A7663C(v18, v19, v12);
    *(void *)(v16 + 40) = v18;
    *(void *)(v16 + 48) = v19;
    *(unsigned char *)(v16 + 56) = v12;
    uint64_t v20 = *(void *)(v17 + 64);
    uint64_t v21 = *(void *)(v17 + 72);
    LOBYTE(v12) = *(unsigned char *)(v17 + 80);
    sub_255AC86F0();
    *(void *)(v16 + 64) = v20;
    *(void *)(v16 + 72) = v21;
    *(unsigned char *)(v16 + 80) = v12;
    *(void *)(v16 + 88) = *(void *)(v17 + 88);
    *(void *)(v16 + 96) = *(void *)(v17 + 96);
    unint64_t v22 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 104) & ~v6;
    uint64_t v23 = (v17 + v6 + 104) & ~v6;
    unint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v24(v22, v23, v26);
    *(unsigned char *)(v22 + v7) = *(unsigned char *)(v23 + v7);
  }
  return a1;
}

uint64_t sub_255BCDF7C(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)a1;
  sub_255AB8EB0(*a1, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
  v3 &= 0xFFFFFFFFFFFFFFF8;
  sub_255A767C8(*(void *)(v3 + 40), *(void *)(v3 + 48), *(unsigned char *)(v3 + 56));
  sub_255ABFD70();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v4 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_255BCE020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_255AB8EBC(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  unint64_t v11 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  uint64_t v14 = *(void *)(v12 + 48);
  LOBYTE(v7) = *(unsigned char *)(v12 + 56);
  sub_255A7663C(v13, v14, v7);
  *(void *)(v11 + 40) = v13;
  *(void *)(v11 + 48) = v14;
  *(unsigned char *)(v11 + 56) = v7;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v16 = *(void *)(v12 + 72);
  LOBYTE(v7) = *(unsigned char *)(v12 + 80);
  sub_255AC86F0();
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 72) = v16;
  *(unsigned char *)(v11 + 80) = v7;
  *(void *)(v11 + 88) = *(void *)(v12 + 88);
  *(void *)(v11 + 96) = *(void *)(v12 + 96);
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16);
  uint64_t v20 = v18 + 16;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  unint64_t v22 = (v21 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v21;
  uint64_t v23 = (v21 + 104 + v12) & ~v21;
  swift_bridgeObjectRetain();
  v19(v22, v23, v17);
  *(unsigned char *)(*(void *)(v20 + 48) + v22) = *(unsigned char *)(*(void *)(v20 + 48) + v23);
  return a1;
}

uint64_t sub_255BCE14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_255AB8EBC(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_255AB8EB0(v11, v12, v13, v14, v15);
  unint64_t v16 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  uint64_t v19 = *(void *)(v17 + 48);
  LOBYTE(v7) = *(unsigned char *)(v17 + 56);
  sub_255A7663C(v18, v19, v7);
  uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 40);
  uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48);
  char v22 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(void *)(v16 + 40) = v18;
  *(void *)(v16 + 48) = v19;
  *(unsigned char *)(v16 + 56) = v7;
  sub_255A767C8(v20, v21, v22);
  uint64_t v23 = *(void *)(v17 + 64);
  uint64_t v24 = *(void *)(v17 + 72);
  LOBYTE(v7) = *(unsigned char *)(v17 + 80);
  sub_255AC86F0();
  *(void *)(v16 + 64) = v23;
  *(void *)(v16 + 72) = v24;
  *(unsigned char *)(v16 + 80) = v7;
  sub_255ABFD70();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v26 = v25 + 24;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  unint64_t v28 = (v27 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v27;
  uint64_t v29 = (v27 + 104 + v17) & ~v27;
  (*(void (**)(unint64_t, uint64_t))(v25 + 24))(v28, v29);
  *(unsigned char *)(*(void *)(v26 + 40) + v28) = *(unsigned char *)(*(void *)(v26 + 40) + v29);
  return a1;
}

uint64_t sub_255BCE2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  long long v6 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(unsigned char *)(v5 + 56) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(_OWORD *)(v5 + 40) = v6;
  long long v7 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  *(unsigned char *)(v5 + 80) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  *(_OWORD *)(v5 + 64) = v7;
  *(_OWORD *)(v5 + 88) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 88);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (v10 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  unint64_t v12 = (v10 + 104 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(v11, v12);
  *(unsigned char *)(*(void *)(v9 + 32) + v11) = *(unsigned char *)(*(void *)(v9 + 32) + v12);
  return a1;
}

uint64_t sub_255BCE36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_255AB8EB0(v7, v8, v9, v10, v11);
  unint64_t v13 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 &= 0xFFFFFFFFFFFFFFF8;
  char v14 = *(unsigned char *)(v4 + 56);
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 40);
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48);
  char v17 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v4 + 40);
  *(unsigned char *)(v13 + 56) = v14;
  sub_255A767C8(v15, v16, v17);
  char v18 = *(unsigned char *)(v4 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v4 + 64);
  *(unsigned char *)(v13 + 80) = v18;
  sub_255ABFD70();
  *(void *)(v13 + 88) = *(void *)(v4 + 88);
  *(void *)(v13 + 96) = *(void *)(v4 + 96);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  unint64_t v22 = (v21 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v21;
  uint64_t v23 = (v21 + 104 + v4) & ~v21;
  (*(void (**)(unint64_t, uint64_t))(v19 + 40))(v22, v23);
  *(unsigned char *)(*(void *)(v20 + 24) + v22) = *(unsigned char *)(*(void *)(v20 + 24) + v23);
  return a1;
}

uint64_t sub_255BCE47C(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 104) & ~v6) + 1;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)(a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      unint64_t v15 = a1 & 0xFFFFFFFFFFFFFFF8;
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v15 + v6 + 104) & ~v6);
      }
      unint64_t v16 = *(void *)(v15 + 96);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(unsigned char *)(a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v9) = *(unsigned __int16 *)a1 | (*(unsigned __int8 *)(a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_255BCE624(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 104) & ~v9) + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 104) & ~v9) != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero((void *)a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          *(unsigned char *)(a1 + 2) = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *(unsigned char *)a1 = v17;
        }
      }
    }
    else
    {
      bzero((void *)a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        *(unsigned char *)(a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)(a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)(a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      *(unsigned char *)(a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)(a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255BCE88CLL);
    case 4:
      *(_DWORD *)(a1 + v10) = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        unint64_t v18 = a1 & 0xFFFFFFFFFFFFFFF8;
        if ((v7 & 0x80000000) != 0)
        {
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19((v18 + v9 + 104) & ~v9);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)(v18 + 88) = a2 ^ 0x80000000;
          *(void *)(v18 + 96) = 0;
        }
        else
        {
          *(void *)(v18 + 96) = a2 - 1;
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for HostedContentToggleConfigurationKey()
{
  return &type metadata for HostedContentToggleConfigurationKey;
}

uint64_t sub_255BCE8C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BCE90C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ToggleButton() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255BC91C0(v4, a1);
}

uint64_t objectdestroy_24Tm_1()
{
  uint64_t v1 = *(void *)(v0 + 32);
  unint64_t v2 = (int *)(type metadata accessor for ToggleButton() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  sub_255AB8EB0(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char *)(v4 + 32));
  sub_255A767C8(*(void *)(v4 + 40), *(void *)(v4 + 48), *(unsigned char *)(v4 + 56));
  sub_255ABFD70();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v2[14], v1);

  return swift_deallocObject();
}

uint64_t sub_255BCEAC0(unsigned __int8 *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ToggleButton() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255BC9294(a1, v4, v5, v6);
}

uint64_t sub_255BCEB50()
{
  return sub_255BC9600(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

unint64_t sub_255BCEB60()
{
  unint64_t result = qword_26B29EF30;
  if (!qword_26B29EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EF30);
  }
  return result;
}

uint64_t sub_255BCEBB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (int *)(type metadata accessor for ToggleButton() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  sub_255AB8EB0(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
  sub_255A767C8(*(void *)(v3 + 40), *(void *)(v3 + 48), *(unsigned char *)(v3 + 56));
  sub_255ABFD70();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[14], v1);

  return swift_deallocObject();
}

void sub_255BCED20()
{
  uint64_t v0 = type metadata accessor for ToggleButton();
  sub_255BC96F8(v0);
}

uint64_t sub_255BCED88()
{
  uint64_t v1 = *(void *)(sub_255C7EF28() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for NowPlayingHostedContentToggleButtonStyle() - 8);
  uint64_t v5 = (void *)(v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));

  return sub_255BC9EA4(v0 + v2, v5);
}

uint64_t sub_255BCEE54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255BCEEBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255BCEF3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t NowPlayingController.transition(to:animated:)(unsigned __int8 *a1, char a2, uint64_t a3, uint64_t a4)
{
  int v7 = *a1;
  uint64_t result = NowPlayingController.playerStyle.getter(a3, a4);
  if (v7 != v9)
  {
    if (v7)
    {
      (*(void (**)(uint64_t, uint64_t))(a4 + 208))(a3, a4);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_255C7DAD8();
      return sub_255BCF738(a2 & 1, a3, a4);
    }
    else
    {
      return sub_255BCF738(a2 & 1 | 0xFFFFFF80, a3, a4);
    }
  }
  return result;
}

uint64_t sub_255BCF3F0(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_255C7D898();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA4E8);
  swift_unknownObjectRetain_n();
  uint64_t v5 = sub_255C7D878();
  os_log_type_t v6 = sub_255C80C08();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v15 = a1;
    int v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v7 = 67109120;
    unsigned int v8 = a2[26];
    v8(v15, (uint64_t)a2);
    swift_beginAccess();
    swift_unknownObjectRelease();
    swift_release();
    sub_255C80F18();
    swift_unknownObjectRelease();
    _os_log_impl(&dword_255A00000, v5, v6, "NowPlayingController.togglePlayback() called, old value = %{BOOL}d", v7, 8u);
    unsigned __int8 v9 = v7;
    a1 = v15;
    MEMORY[0x25A297C00](v9, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    unsigned int v8 = a2[26];
  }
  size_t v10 = (char *)(v8(a1, (uint64_t)a2) + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  char v11 = *v10;
  *v10 ^= 1u;
  sub_255C36B54(v11);
  swift_release();
  unsigned int v12 = (unsigned __int8 *)(v8(a1, (uint64_t)a2) + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  int v13 = *v12;
  swift_release();
  if (v13 == 1) {
    return a2[27](a1, (uint64_t)a2);
  }
  else {
    return a2[28](a1, (uint64_t)a2);
  }
}

uint64_t NowPlayingController.playerStyle.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 208))();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_255BCF738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_release();
}

uint64_t NowPlayingController.debugMenuItems.getter()
{
  return 1;
}

uint64_t NowPlayingController.isDebugEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((*(uint64_t (**)(void))(a2 + 208))() + 128);
  swift_retain();
  swift_release();
  swift_beginAccess();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 16);
  swift_release();
  return v3;
}

uint64_t NowPlayingController.isDebugEnabled.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 208))(a2, a3) + 128);
  swift_retain();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  return sub_255BD03F8(a1, v4, KeyPath, v6, (void (*)(void))_s5DebugCMa, (unint64_t *)&qword_26B299A80, (void (*)(uint64_t))_s5DebugCMa);
}

uint64_t (*NowPlayingController.isDebugEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 24) = NowPlayingController.isDebugEnabled.getter(a2, a3) & 1;
  return sub_255BCF968;
}

uint64_t sub_255BCF968(uint64_t a1)
{
  return NowPlayingController.isDebugEnabled.setter(*(unsigned char *)(a1 + 24), *(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_255BCF994(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s18MiniPlayerMetadataCMa, &qword_26B299948, (void (*)(uint64_t))_s18MiniPlayerMetadataCMa);
}

uint64_t sub_255BCF9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (a2)
  {
    if (v12)
    {
      if (v11 == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      char v7 = sub_255C81428();
      swift_bridgeObjectRelease();
      if (v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
LABEL_11:
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_255BD1644(&qword_26B29C090, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
    sub_255C7D9D8();
    sub_255C7DA48();
    swift_release();
    uint64_t v13 = a3;
    swift_retain();
    unsigned int v8 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    size_t v10 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *size_t v10 = a1;
    v10[1] = a2;
    v8(&v11, 0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_10:
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_255BCFBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_255BCFF8C(a1, a2, a3, a4, a5, (void (*)(void))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, &qword_26B29C090, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
}

uint64_t sub_255BCFC3C(uint64_t a1, uint64_t a2)
{
  v9[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  char v4 = sub_255AC1814(a1, v10);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_255BD1644(&qword_26B29C090, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
    sub_255C7D9D8();
    sub_255C7DA48();
    swift_release();
    uint64_t v10 = a2;
    swift_retain();
    uint64_t v5 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    char v7 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *char v7 = a1;
    v5(v9, 0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_255BCFDCC(char a1, uint64_t a2)
{
  v7[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (((a1 & 1) == 0) == v8)
  {
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_255BD1644(&qword_26B29C090, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata);
    sub_255C7D9D8();
    sub_255C7DA48();
    swift_release();
    uint64_t v8 = a2;
    swift_retain();
    char v4 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
    *uint64_t v5 = a1 & 1;
    v4(v7, 0);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_255BCFF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_255BCFF8C(a1, a2, a3, a4, a5, (void (*)(void))_s18MiniPlayerMetadataCMa, &qword_26B299948, (void (*)(uint64_t))_s18MiniPlayerMetadataCMa);
}

uint64_t sub_255BCFF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), unint64_t *a7, void (*a8)(uint64_t))
{
  uint64_t v21 = a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (v20[0] == a1 && v20[1] == a2)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_255C81428();
    swift_bridgeObjectRelease();
    if (v15)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      a6(0);
      sub_255BD1644(a7, a8);
      sub_255C7D9D8();
      sub_255C7DA48();
      swift_release();
      uint64_t v21 = a3;
      swift_retain();
      int v17 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
      uint64_t v19 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      v17(v20, 0);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
}

uint64_t sub_255BD0154(uint64_t a1, uint64_t a2)
{
  v14[7] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  sub_255BD1574(a1, (uint64_t)v10);
  sub_255BD1574((uint64_t)v14, (uint64_t)v12);
  if (v11 == 255)
  {
    if (v13 == 255)
    {
      sub_255A095A4((uint64_t)v10, &qword_26B299A60);
      sub_255A095A4((uint64_t)v14, &qword_26B299A60);
      goto LABEL_7;
    }
  }
  else
  {
    sub_255BD1574((uint64_t)v10, (uint64_t)v9);
    if (v13 != 255)
    {
      sub_255A52494(v12, (uint64_t)v8);
      char v4 = _s11MediaCoreUI19NowPlayingViewModelC18MiniPlayerSubtitleO2eeoiySbAE_AEtFZ_0((uint64_t)v9, (uint64_t)v8);
      sub_255A52464((uint64_t)v8);
      sub_255A52464((uint64_t)v9);
      sub_255A095A4((uint64_t)v10, &qword_26B299A60);
      sub_255A095A4((uint64_t)v14, &qword_26B299A60);
      if ((v4 & 1) == 0) {
        goto LABEL_10;
      }
LABEL_7:
      swift_release();
      swift_release();
      swift_release();
      return sub_255A095A4(a1, &qword_26B299A60);
    }
    sub_255A52464((uint64_t)v9);
  }
  sub_255A095A4((uint64_t)v10, &qword_26B29C098);
  sub_255A095A4((uint64_t)v14, &qword_26B299A60);
LABEL_10:
  _s18MiniPlayerMetadataCMa();
  sub_255BD1644(&qword_26B299948, (void (*)(uint64_t))_s18MiniPlayerMetadataCMa);
  sub_255C7D9D8();
  sub_255C7DA48();
  swift_release();
  v14[0] = a2;
  swift_retain();
  uint64_t v6 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
  sub_255BD15DC(a1, v7);
  v6(v10, 0);
  swift_release();
  swift_release();
  swift_release();
  sub_255A095A4(a1, &qword_26B299A60);
  return swift_release();
}

uint64_t sub_255BD03B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s17TransportControlsCMa, (unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
}

uint64_t sub_255BD03F8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  v15[0] = a2;
  int v11 = a1 & 1;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (v16 == v11)
  {
    swift_release();
    swift_release();
  }
  else
  {
    a5(0);
    sub_255BD1644(a6, a7);
    sub_255C7D9D8();
    sub_255C7DA48();
    swift_release();
    uint64_t v16 = a2;
    swift_retain();
    uint64_t v12 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
    unsigned char *v13 = v11;
    v12(v15, 0);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_255BD053C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (!a2)
  {
    if (!v12) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (!v12)
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v11 == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  char v6 = sub_255C81428();
  swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_11;
  }
LABEL_12:
  _s13HostedContentCMa();
  sub_255BD1644(&qword_26B298180, (void (*)(uint64_t))_s13HostedContentCMa);
  sub_255C7D9D8();
  sub_255C7DA48();
  swift_release();
  uint64_t v13 = a3;
  swift_retain();
  uint64_t v8 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v10 = a1;
  v10[1] = a2;
  v8(&v11, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_255BD0730(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s11ContextMenuCMa, &qword_26B29C088, (void (*)(uint64_t))_s11ContextMenuCMa);
}

uint64_t sub_255BD0778(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s14DefaultArtworkCMa, &qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
}

uint64_t sub_255BD07C0(char a1, uint64_t a2)
{
  v14[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x6573756170;
    }
    else {
      uint64_t v4 = 1886352499;
    }
    if (a1 == 1) {
      unint64_t v5 = 0xE500000000000000;
    }
    else {
      unint64_t v5 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v4 = 2036427888;
  }
  unint64_t v6 = 0xE500000000000000;
  uint64_t v7 = 0x6573756170;
  if (v15 != 1)
  {
    uint64_t v7 = 1886352499;
    unint64_t v6 = 0xE400000000000000;
  }
  if ((_BYTE)v15) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 2036427888;
  }
  if ((_BYTE)v15) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = 0xE400000000000000;
  }
  if (v4 == v8 && v5 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_255C81428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      _s17TransportControlsCMa();
      sub_255BD1644((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
      sub_255C7D9D8();
      sub_255C7DA48();
      swift_release();
      uint64_t v15 = a2;
      swift_retain();
      uint64_t v11 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
      *uint64_t v12 = a1;
      v11(v14, 0);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_255BD09D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_255BD0A2C(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t))sub_255ADFC50, (void (*)(uint64_t, uint64_t, uint64_t))sub_255ADFC28);
}

uint64_t sub_255BD0A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_255BD0A2C(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t))sub_255BD1698, (void (*)(uint64_t, uint64_t, uint64_t))sub_255BD1694);
}

uint64_t sub_255BD0A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v27 = a4;
  int v13 = ~(_BYTE)a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (!v13)
  {
    if (v26 == 255) {
      goto LABEL_20;
    }
    goto LABEL_11;
  }
  if (v26 == 255)
  {
    sub_255ADFC48();
    sub_255ADFC48();
    sub_255ADFC40();
LABEL_11:
    unint64_t v22 = a8;
    a8(a1, a2, a3);
    a8(v24, v25, v26);
LABEL_18:
    _s17TransportControlsCMa();
    sub_255BD1644((unint64_t *)&qword_26B299800, (void (*)(uint64_t))_s17TransportControlsCMa);
    sub_255C7D9D8();
    sub_255C7DA48();
    swift_release();
    uint64_t v27 = a4;
    swift_retain();
    unsigned int v14 = (void (*)(uint64_t *, void))swift_modifyAtReferenceWritableKeyPath();
    uint64_t v16 = v15;
    uint64_t v17 = *v15;
    uint64_t v18 = v15[1];
    uint64_t v19 = *((unsigned __int8 *)v15 + 16);
    a7(a1, a2, a3);
    v22(v17, v18, v19);
    *uint64_t v16 = a1;
    v16[1] = a2;
    *((unsigned char *)v16 + 16) = a3;
    v14(&v24, 0);
    swift_release();
    swift_release();
    swift_release();
    v22(a1, a2, a3);
    return swift_release();
  }
  if (a3)
  {
    if (v26)
    {
      if (v24 != a1 || v25 != a2) {
        goto LABEL_19;
      }
      goto LABEL_15;
    }
LABEL_16:
    a7(a1, a2, a3);
    sub_255ADFC40();
    a8(v24, v25, v26);
LABEL_17:
    unint64_t v22 = a8;
    goto LABEL_18;
  }
  if (v26) {
    goto LABEL_16;
  }
  if (v24 != a1 || v25 != a2)
  {
LABEL_19:
    char v21 = sub_255C81428();
    a7(a1, a2, a3);
    sub_255ADFC40();
    a8(v24, v25, v26);
    if (v21) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
LABEL_15:
  a7(a1, a2, a3);
  sub_255ADFC40();
  a8(a1, a2, v26);
LABEL_20:
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a8)(a1, a2, a3);
}

uint64_t sub_255BD0DF4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s5QueueCMa, &qword_26B299BC8, (void (*)(uint64_t))_s5QueueCMa);
}

uint64_t sub_255BD0E3C(uint64_t a1, uint64_t a2)
{
  v7[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (v8 == a1)
  {
    swift_release();
    swift_release();
  }
  else
  {
    _s5QueueCMa();
    sub_255BD1644(&qword_26B299BC8, (void (*)(uint64_t))_s5QueueCMa);
    sub_255C7D9D8();
    sub_255C7DA48();
    swift_release();
    uint64_t v8 = a2;
    swift_retain();
    uint64_t v4 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
    *unint64_t v5 = a1;
    v4(v7, 0);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_255BD0F90(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s6BannerCMa, (unint64_t *)&qword_26B29E940, (void (*)(uint64_t))_s6BannerCMa);
}

uint64_t sub_255BD0FD8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BD03F8(a1, a2, a3, a4, (void (*)(void))_s5DebugCMa, (unint64_t *)&qword_26B299A80, (void (*)(uint64_t))_s5DebugCMa);
}

uint64_t keypath_get_12Tm@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_255BD1068(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  swift_retain();
  return sub_255BD03F8(v2, v3, KeyPath, v5, (void (*)(void))_s5DebugCMa, (unint64_t *)&qword_26B299A80, (void (*)(uint64_t))_s5DebugCMa);
}

uint64_t sub_255BD1114@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_255BD1198()
{
  return sub_255C7DAD8();
}

uint64_t sub_255BD1210@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_255BD1294()
{
  return sub_255C7DAD8();
}

uint64_t sub_255BD1318@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_255BD1364@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = NowPlayingController.isDebugEnabled.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

uint64_t sub_255BD13A0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return NowPlayingController.isDebugEnabled.setter(*a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t sub_255BD13D4()
{
  return 16;
}

__n128 sub_255BD13E0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of NowPlayingController.viewModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of NowPlayingController.play()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of NowPlayingController.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of NowPlayingController.performLeadingTransportAction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of NowPlayingController.performTrailingTransportAction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of NowPlayingController.performTimeControlAction(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of NowPlayingController.primaryArtworkView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of NowPlayingController.metadataArtworkView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of NowPlayingController.metadataButtonAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of NowPlayingController.contextMenuButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of NowPlayingController.miniPlayerContextInteractionDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of NowPlayingController.hostedContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of NowPlayingController.footerConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of NowPlayingController.leadingAccessoryButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of NowPlayingController.trailingAccessoryButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of NowPlayingController.bannerView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of NowPlayingController.timeControlAccessoryView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of NowPlayingController.overlayView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of NowPlayingController.debugMenuItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t sub_255BD1568()
{
  return MEMORY[0x263F1BA00];
}

uint64_t sub_255BD1574(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B299A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255BD15DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B299A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_255BD1644(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NowPlayingViewModel.DurationSnapshot.init(elapsedDuration:duration:bufferedDuration:snapshotTime:rate:isLoading:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  *(void *)(a4 + 16) = result;
  *(unsigned char *)(a4 + 24) = a2 & 1;
  *(double *)(a4 + 32) = a7;
  *(double *)(a4 + 40) = a8;
  *(unsigned char *)(a4 + 48) = a3;
  return result;
}

uint64_t sub_255BD16B8@<X0>(unsigned char *a1@<X8>)
{
  sub_255B778A0();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BD1708()
{
  return sub_255C7E8D8();
}

void sub_255BD1754()
{
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
      switch(*(unsigned char *)(v0 + 17))
      {
        case 2:
          return;
        default:
          goto LABEL_5;
      }
    case 2:
      switch(*(unsigned char *)(v0 + 17))
      {
        case 1:
        case 6:
          goto LABEL_5;
        default:
          return;
      }
    case 3:
      return;
    default:
      switch(*(unsigned char *)(v0 + 17))
      {
        case 2:
        case 3:
        case 4:
LABEL_5:
          id v1 = objc_msgSend(self, sel_currentTraitCollection);
          objc_msgSend(v1, sel_displayScale);

          break;
        default:
          return;
      }
      break;
  }
}

uint64_t sub_255BD1CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = _s21LegacyTimeControlViewVMa();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v8 = _s20FluidTimeControlViewVMa();
  uint64_t v9 = sub_255C7EBE8();
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v24 - v10;
  *((void *)&v38 + 1) = &type metadata for Features;
  unint64_t v39 = sub_255BDCCD8();
  uint64_t v12 = swift_allocObject();
  *(void *)&long long v37 = v12;
  *(void *)(v12 + 16) = "MediaCoreUI";
  *(void *)(v12 + 24) = 11;
  *(unsigned char *)(v12 + 32) = 2;
  *(void *)(v12 + 40) = "FluidScrubber";
  *(void *)(v12 + 48) = 13;
  *(unsigned char *)(v12 + 56) = 2;
  char v13 = sub_255C7D778();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
  if (v13)
  {
    sub_255BD21C0((uint64_t)&v33);
    unint64_t v14 = v35;
    uint64_t v15 = v36;
    long long v25 = v33;
    long long v26 = v34;
    long long v29 = v33;
    long long v30 = v34;
    unint64_t v31 = v35;
    unsigned __int8 v32 = v36;
    swift_getWitnessTable();
    sub_255A20F54(&v29);
    swift_release();
    swift_unknownObjectRelease();
    sub_255AC0398(v14, v15);
    unint64_t v16 = v39;
    uint64_t v17 = v40;
    long long v25 = v37;
    long long v26 = v38;
    long long v29 = v37;
    long long v30 = v38;
    unint64_t v31 = v39;
    unsigned __int8 v32 = v40;
    sub_255A20F54(&v29);
    unint64_t v18 = v35;
    uint64_t v19 = v36;
    v24[0] = v33;
    v24[1] = v34;
    long long v29 = v33;
    long long v30 = v34;
    unint64_t v31 = v35;
    unsigned __int8 v32 = v36;
    swift_getWitnessTable();
    sub_255A44030((uint64_t)&v29, v8);
    swift_release();
    swift_unknownObjectRelease();
    sub_255AC0398(v18, v19);
    swift_release();
    swift_unknownObjectRelease();
    sub_255AC0398(v16, v17);
  }
  else
  {
    sub_255BD2280((uint64_t)v4);
    swift_getWitnessTable();
    sub_255A20F54(v4);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
    v20(v4, v1);
    sub_255A20F54(v7);
    swift_getWitnessTable();
    sub_255A44128((uint64_t)v4, v8, v1);
    v20(v4, v1);
    v20(v7, v1);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v41 = WitnessTable;
  uint64_t v42 = v22;
  swift_getWitnessTable();
  sub_255A20F54(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v9);
}

uint64_t sub_255BD21C0@<X0>(uint64_t a1@<X8>)
{
  _s11TimeControlCMa();
  sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
  uint64_t v2 = sub_255C7E628();
  uint64_t v4 = v3;
  uint64_t v5 = sub_255C7E628();
  uint64_t v7 = v6;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_255BD2280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7D668();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s11TimeControlCMa();
  sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
  *(void *)a1 = sub_255C7E628();
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v6;
  v13[15] = 0;
  sub_255C7FE58();
  uint64_t v7 = v14;
  *(unsigned char *)(a1 + 32) = v13[16];
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = sub_255BD46A0();
  *(unsigned char *)(a1 + 56) = v8 & 1;
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = _s21LegacyTimeControlViewVMa();
  sub_255C7D608();
  sub_255BD46F0((uint64_t)v4);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v10 + 52));
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255BD2410@<X0>(uint64_t a1@<X8>)
{
  return sub_255BD1CD0(a1);
}

uint64_t sub_255BD241C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D360);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F26238);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v100 = v4;
  *(void *)&long long v101 = v3;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Scrubber();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29E928);
  swift_getWitnessTable();
  sub_255BDEB44();
  swift_getOpaqueTypeMetadata2();
  sub_255A09998(qword_269F26240, &qword_269F26238);
  swift_getOpaqueTypeConformance2();
  sub_255C7E568();
  sub_255A09998((unint64_t *)&unk_269F240B0, &qword_26B29D360);
  swift_getWitnessTable();
  uint64_t v91 = sub_255C7E568();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for ScrubberReader();
  uint64_t v6 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ED08);
  uint64_t v7 = sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v8 = sub_255C7E458();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21848);
  uint64_t v93 = v5;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v130 = v90;
  uint64_t v131 = MEMORY[0x263F18BF0];
  uint64_t v95 = v6;
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v128 = v94;
  uint64_t v129 = sub_255A09998(&qword_26B29ED00, &qword_26B29ED08);
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v126 = v97;
  uint64_t v127 = sub_255BE09E8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = sub_255A09998(&qword_269F21850, &qword_269F21848);
  *(void *)&long long v117 = v8;
  *((void *)&v117 + 1) = v9;
  uint64_t v118 = v10;
  uint64_t v119 = v11;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v13 = type metadata accessor for MCUINamespace();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)v72 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v98 = (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = swift_checkMetadataState();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v96 = (char *)v72 - v19;
  uint64_t v20 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v74 = (char *)v72 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  uint64_t v23 = sub_255C7E458();
  MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v24);
  long long v29 = v99[1];
  long long v132 = *v99;
  *(_OWORD *)uint64_t v133 = v29;
  *(_OWORD *)&v133[9] = *(long long *)((char *)v99 + 25);
  if ((void)v132)
  {
    uint64_t v76 = v20;
    uint64_t v77 = v28;
    uint64_t v99 = (long long *)v7;
    uint64_t v78 = (char *)v72 - v26;
    uint64_t v79 = v11;
    uint64_t v80 = v27;
    uint64_t v81 = v25;
    uint64_t v82 = OpaqueTypeMetadata2;
    uint64_t v83 = v10;
    uint64_t v84 = v16;
    uint64_t v85 = v14;
    uint64_t v86 = v13;
    uint64_t v87 = v9;
    uint64_t v30 = *(void *)(v132 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition) + 24;
    uint64_t v31 = v132;
    swift_beginAccess();
    sub_255A10514(v30, (uint64_t)v134, &qword_26B29E928);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_255C7DAC8();
    uint64_t v89 = v31;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v32 = v117;
    int64_t v33 = *(void *)(v117 + 16);
    if (v33)
    {
      *(void *)&long long v117 = MEMORY[0x263F8EE78];
      sub_255B16D4C(0, v33, 0);
      uint64_t v34 = v117;
      v72[1] = v32;
      unint64_t v35 = (uint64_t *)(v32 + 48);
      do
      {
        uint64_t v37 = *(v35 - 2);
        uint64_t v36 = *(v35 - 1);
        uint64_t v38 = *v35;
        *(void *)&long long v117 = v34;
        unint64_t v40 = *(void *)(v34 + 16);
        unint64_t v39 = *(void *)(v34 + 24);
        swift_bridgeObjectRetain();
        if (v40 >= v39 >> 1)
        {
          sub_255B16D4C(v39 > 1, v40 + 1, 1);
          uint64_t v34 = v117;
        }
        *(void *)(v34 + 16) = v40 + 1;
        uint64_t v41 = (void *)(v34 + 24 * v40);
        v41[4] = v37;
        v41[5] = v36;
        v41[6] = v38;
        v35 += 3;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = MEMORY[0x263F8EE78];
    }
    uint64_t v42 = swift_allocObject();
    uint64_t v44 = v100;
    uint64_t v43 = v101;
    *(void *)(v42 + 16) = v100;
    *(void *)(v42 + 24) = v43;
    sub_255A10514((uint64_t)v134, v42 + 32, &qword_26B29E928);
    *(void *)(v42 + 88) = v34;
    long long v45 = *(_OWORD *)v133;
    *(_OWORD *)(v42 + 96) = v132;
    *(_OWORD *)(v42 + 112) = v45;
    *(_OWORD *)(v42 + 121) = *(_OWORD *)&v133[9];
    sub_255BDEC74((uint64_t)&v132);
    swift_checkMetadataState();
    ScrubberReader.init(content:)((uint64_t)sub_255BDEC60, v42, &v117);
    long long v113 = v117;
    uint64_t v114 = v118;
    uint64_t v115 = v119;
    swift_beginAccess();
    swift_checkMetadataState();
    sub_255C7FAB8();
    swift_release();
    swift_release();
    uint64_t v46 = swift_release();
    long long v113 = v104;
    uint64_t v114 = v105;
    uint64_t v115 = v106;
    uint64_t v116 = v107;
    MEMORY[0x270FA5388](v46);
    v72[-4] = v44;
    v72[-3] = v43;
    v72[-2] = &v132;
    sub_255C801F8();
    swift_checkMetadataState();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EED0);
    sub_255BE0988(&qword_26B29EED8, &qword_26B29EED0);
    sub_255C7FAC8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v47 = v121;
    uint64_t v48 = v122;
    char v49 = v123;
    long long v104 = v117;
    uint64_t v105 = v118;
    uint64_t v106 = v119;
    uint64_t v107 = v120;
    uint64_t v108 = v121;
    uint64_t v109 = v122;
    uint64_t v110 = v123;
    long long v101 = v124;
    long long v111 = v124;
    uint64_t v112 = v125;
    swift_checkMetadataState();
    uint64_t v50 = v96;
    sub_255B4BFB8();
    swift_release();
    swift_release();
    swift_release();
    sub_255B952E8(v47, v48, v49, v101);
    uint64_t v51 = *MEMORY[0x263F18D70];
    uint64_t v52 = sub_255C7E378();
    uint64_t v53 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(v98, v51, v52);
    sub_255BE09E8(qword_269F21878, 255, MEMORY[0x263F18D80]);
    if (sub_255C80578())
    {
      uint64_t v55 = v74;
      uint64_t v54 = v75;
      uint64_t v56 = v50;
      uint64_t v57 = v87;
      uint64_t v58 = v83;
      uint64_t v59 = v79;
      sub_255C7F7B8();
      sub_255A095A4(v53, &qword_269F21848);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v54);
      *(void *)&long long v117 = v54;
      *((void *)&v117 + 1) = v57;
      uint64_t v118 = v58;
      uint64_t v119 = v59;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v61 = (uint64_t)v84;
      uint64_t v62 = v82;
      View.mcui.getter(v82, (uint64_t)v84);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v62);
      uint64_t v63 = *(void *)&v133[16];
      uint64_t v64 = v133[24];
      sub_255AC0394(*(void *)&v133[16], v133[24]);
      sub_255ABD6D8(v63, v64, &v117);
      sub_255AC0398(v63, v64);
      uint64_t v65 = v77;
      uint64_t v66 = v86;
      MCUINamespace<A>.scrubberForceSensitivityTextToSingleLine(_:)((_BYTE)v117 == 0, v86, OpaqueTypeConformance2, v77);
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v61, v66);
      uint64_t v67 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
      uint64_t v102 = OpaqueTypeConformance2;
      uint64_t v103 = v67;
      uint64_t v68 = v81;
      swift_getWitnessTable();
      uint64_t v69 = v78;
      sub_255A20F54(v65);
      uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
      v70(v65, v68);
      sub_255A20F54(v69);
      return ((uint64_t (*)(char *, uint64_t))v70)(v69, v68);
    }
    __break(1u);
  }
  _s11TimeControlCMa();
  sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

uint64_t sub_255BD316C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v85 = a4;
  uint64_t v78 = a3;
  uint64_t v77 = a1;
  uint64_t v86 = a7;
  sub_255A10514(a2, (uint64_t)v89, &qword_26B29E928);
  uint64_t v57 = v90;
  uint64_t v55 = v91;
  int v56 = v92;
  uint64_t v70 = a6;
  uint64_t v69 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for Scrubber();
  uint64_t v82 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v71 = (uint64_t)&v54 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29E928);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v14 = sub_255BDEB44();
  uint64_t v96 = v10;
  double v97 = *(double *)&v12;
  uint64_t v98 = WitnessTable;
  unint64_t v99 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v83 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v81 = (char *)&v54 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F26238);
  uint64_t v18 = sub_255A09998(qword_269F26240, &qword_269F26238);
  uint64_t v96 = v10;
  double v97 = *(double *)&v12;
  uint64_t v73 = v12;
  uint64_t v67 = WitnessTable;
  uint64_t v98 = WitnessTable;
  unint64_t v99 = v14;
  unint64_t v64 = v14;
  char v19 = 1;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = v17;
  uint64_t v96 = v17;
  double v97 = *(double *)&OpaqueTypeMetadata2;
  uint64_t v84 = OpaqueTypeMetadata2;
  uint64_t v72 = v18;
  uint64_t v98 = v18;
  unint64_t v99 = OpaqueTypeConformance2;
  uint64_t v61 = OpaqueTypeConformance2;
  uint64_t v21 = sub_255C7E568();
  uint64_t v79 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v76 = (char *)&v54 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D360);
  uint64_t v24 = sub_255A09998((unint64_t *)&unk_269F240B0, &qword_26B29D360);
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v66 = v23;
  uint64_t v96 = v23;
  double v97 = *(double *)&v21;
  uint64_t v80 = v21;
  uint64_t v62 = v24;
  uint64_t v98 = v24;
  unint64_t v99 = v25;
  uint64_t v60 = v25;
  uint64_t v26 = sub_255C7E568();
  uint64_t v75 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v65 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v68 = (char *)&v54 - v29;
  sub_255A10514(a2, (uint64_t)&v96, &qword_26B29E928);
  if (v100 == 2)
  {
    uint64_t v30 = 0;
    char v31 = 0;
    double v58 = 0.0;
  }
  else
  {
    double v58 = v97;
    char v19 = v55 & 1;
    char v31 = v56 & 1;
    uint64_t v30 = v57;
  }
  LOBYTE(v87[0]) = v31;
  char v32 = v100 == 2;
  BYTE1(v87[0]) = v31;
  BYTE2(v87[0]) = v31;
  v87[1] = v30;
  char v88 = v19;
  uint64_t v33 = sub_255A10514(a2, (uint64_t)v93, &qword_26B29E928);
  if (v95 == 2) {
    double v34 = 0.0;
  }
  else {
    double v34 = v94;
  }
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = v69;
  uint64_t v36 = v70;
  *(&v54 - 4) = v69;
  *(&v54 - 3) = v36;
  uint64_t v37 = v85;
  uint64_t v52 = (uint64_t)v85;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v35;
  *(void *)(v38 + 24) = v36;
  long long v39 = v37[1];
  *(_OWORD *)(v38 + 32) = *v37;
  *(_OWORD *)(v38 + 48) = v39;
  *(_OWORD *)(v38 + 57) = *(_OWORD *)((char *)v37 + 25);
  uint64_t v40 = v78;
  swift_bridgeObjectRetain();
  sub_255BDEC74((uint64_t)v37);
  uint64_t v53 = AssociatedConformanceWitness;
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v41 = v71;
  Scrubber.init(duration:loadingConfiguration:playbackRate:sections:accessoryView:onScrub:)(v58, v32, (char *)v87, v40, (void (*)(__n128))sub_255BDE1D8, v71, v34);
  sub_255A10514(a2, (uint64_t)v87, &qword_26B29E928);
  uint64_t v42 = swift_allocObject();
  sub_255A10514(a2, v42 + 16, &qword_26B29E928);
  *(void *)(v42 + 72) = v77;
  swift_retain();
  uint64_t v43 = v81;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v41, v10);
  uint64_t v44 = *(void *)v37;
  if (v44)
  {
    v87[0] = *(void *)(*(void *)(v44
                                   + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition)
                       + 88);
    swift_retain();
    swift_retain();
    long long v45 = v76;
    uint64_t v46 = v84;
    sub_255C7FBB8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v46);
    v87[0] = *(void *)(v44
                       + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_pptScrubberInteractionState);
    swift_retain();
    swift_retain();
    uint64_t v47 = v65;
    uint64_t v48 = v80;
    sub_255C7FBB8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v45, v48);
    swift_getWitnessTable();
    char v49 = v68;
    sub_255A20F54(v47);
    uint64_t v50 = *(void (**)(char *, uint64_t))(v75 + 8);
    v50(v47, v26);
    sub_255A20F54(v49);
    return ((uint64_t (*)(char *, uint64_t))v50)(v49, v26);
  }
  else
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BD3B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v16 - v11;
  sub_255C23448(*(void *)(a1 + 16));
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(a3 + 336);
  swift_unknownObjectRetain();
  v13(a2, a3);
  swift_unknownObjectRelease();
  swift_getAssociatedConformanceWitness();
  sub_255A20F54(v9);
  unint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, AssociatedTypeWitness);
  sub_255A20F54(v12);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, AssociatedTypeWitness);
}

uint64_t sub_255BD3CC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  double v5 = *(double *)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) != 1)
    {
      if (qword_26B29B3F0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_255C7D898();
      __swift_project_value_buffer(v8, (uint64_t)qword_26B2AA4E8);
      uint64_t v9 = sub_255C7D878();
      os_log_type_t v10 = sub_255C80C08();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 134217984;
        sub_255C80F18();
        _os_log_impl(&dword_255A00000, v9, v10, "TimeControlView finished scrubbing with time: %f", v11, 0xCu);
        MEMORY[0x25A297C00](v11, -1, -1);
      }

      if (*a2)
      {
        swift_retain();
        sub_255C7D9F8();
        swift_release();
        sub_255C23448(a2[2]);
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, double))(a4 + 248);
        swift_unknownObjectRetain();
        v12(a3, a4, v5);
        return swift_unknownObjectRelease();
      }
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_255C7D898();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B2AA4E8);
    uint64_t v15 = sub_255C7D878();
    os_log_type_t v16 = sub_255C80C08();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134217984;
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v15, v16, "TimeControlView began scrubbing with time: %f", v17, 0xCu);
      MEMORY[0x25A297C00](v17, -1, -1);
    }
  }
  if (*a2)
  {
    swift_retain();
    sub_255C7D9F8();
    return swift_release();
  }
LABEL_16:
  _s11TimeControlCMa();
  sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

void sub_255BD3FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7D668();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A10514(a1, (uint64_t)v28, &qword_26B29E928);
  double v8 = 0.0;
  if (v29 != 2)
  {
    double v9 = *(double *)v28;
    double v10 = *(double *)&v28[1];
    double v11 = *(double *)&v28[4];
    double v12 = *(double *)&v28[5];
    sub_255C7D658();
    sub_255C7D5F8();
    double v14 = v13;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    double v15 = v9 + v12 * (v14 - v11);
    if (v10 < v15) {
      double v15 = v10;
    }
    if (v15 < 0.0) {
      double v8 = 0.0;
    }
    else {
      double v8 = v15;
    }
  }
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_255C7D898();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B2AA4E8);
  swift_retain_n();
  uint64_t v17 = sub_255C7D878();
  os_log_type_t v18 = sub_255C80C08();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v27 = v20;
    *(_DWORD *)uint64_t v19 = 136446722;
    sub_255A10514(a1, (uint64_t)v26, &qword_26B29E928);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29E928);
    uint64_t v21 = sub_255C80658();
    v26[0] = sub_255A7BEC4(v21, v22, &v27);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    *(double *)uint64_t v26 = v8;
    sub_255C80F18();
    *(_WORD *)(v19 + 22) = 2082;
    v26[0] = a2;
    uint64_t v23 = sub_255C80658();
    v26[0] = sub_255A7BEC4(v23, v24, &v27);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v17, v18, "TimeControlView received snapshot %{public}s, setting playhead to %f via ScrubberProxy %{public}s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v20, -1, -1);
    MEMORY[0x25A297C00](v19, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  ScrubberProxy.seek(to:)(v8);
}

void sub_255BD4344(char *a1)
{
  char v1 = *a1;
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_255C7D898();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA4E8);
  swift_retain_n();
  uint64_t v3 = sub_255C7D878();
  os_log_type_t v4 = sub_255C80C08();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_255C80658();
    sub_255A7BEC4(v7, v8, &v9);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v3, v4, "TimeControlView received changed interaction state, updating scrubber via proxy %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v6, -1, -1);
    MEMORY[0x25A297C00](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v9) = v1;
  ScrubberProxy._pptChangeScrubberInteractionState(to:)((MediaCoreUI::ScrubState)&v9);
}

uint64_t sub_255BD4510@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (*a1)
  {
    uint64_t v3 = *(void *)(*a1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    uint64_t result = swift_beginAccess();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    if (*(unsigned char *)(v3 + 16))
    {
      sub_255C7F268();
      uint64_t v9 = sub_255C7F408();
      uint64_t v11 = v10;
      char v13 = v12 & 1;
      sub_255C7FC88();
      uint64_t v5 = sub_255C7F468();
      uint64_t v6 = v14;
      uint64_t v8 = v15;
      uint64_t v7 = v16 & 1;
      sub_255A094C0(v9, v11, v13);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
    }
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  else
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BD46A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF58);
  sub_255C7FE58();
  return v1;
}

uint64_t sub_255BD46F0(uint64_t a1)
{
  uint64_t v2 = sub_255C7D668();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_255C7FE58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_255BD47E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v95 = a1;
  uint64_t v2 = a1 - 8;
  uint64_t v94 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v92 = v3;
  uint64_t v93 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_255C7EF58();
  MEMORY[0x270FA5388](v99);
  uint64_t v100 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v72 = *(void *)(v2 + 24);
  uint64_t v97 = v5;
  uint64_t v6 = _s21LegacyTimeControlViewV9TimedViewVMa();
  unint64_t v7 = sub_255BDDEC4();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v123 = &type metadata for MCUIText;
  long long v124 = (ValueMetadata *)v6;
  unint64_t v125 = v7;
  unint64_t v126 = WitnessTable;
  uint64_t v9 = sub_255C7FF58();
  uint64_t v10 = swift_getWitnessTable();
  unint64_t v11 = sub_255BDDF18();
  uint64_t v123 = (ValueMetadata *)v9;
  long long v124 = &type metadata for ContentBelowSliderStyle;
  unint64_t v125 = v10;
  unint64_t v126 = v11;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCB0);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCE0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EEB8);
  uint64_t v12 = sub_255C7E458();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB78);
  uint64_t v123 = (ValueMetadata *)v9;
  long long v124 = &type metadata for ContentBelowSliderStyle;
  unint64_t v125 = v10;
  unint64_t v126 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v15 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  uint64_t v121 = OpaqueTypeConformance2;
  uint64_t v122 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_255A09998(&qword_26B29BCA8, &qword_26B29BCB0);
  uint64_t v119 = v16;
  uint64_t v120 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = sub_255A09998(&qword_26B29BCD8, &qword_26B29BCE0);
  uint64_t v117 = v18;
  uint64_t v118 = v19;
  uint64_t v115 = swift_getWitnessTable();
  uint64_t v116 = MEMORY[0x263F18860];
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
  uint64_t v113 = v20;
  uint64_t v114 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_255A09998(&qword_26B29EB70, &qword_26B29EB78);
  uint64_t v91 = (ValueMetadata *)v12;
  uint64_t v123 = (ValueMetadata *)v12;
  long long v124 = (ValueMetadata *)v13;
  uint64_t v90 = (ValueMetadata *)v13;
  uint64_t v77 = v22;
  unint64_t v125 = v22;
  unint64_t v126 = v23;
  uint64_t v74 = v23;
  swift_getOpaqueTypeMetadata2();
  uint64_t v24 = v72;
  uint64_t v25 = v97;
  uint64_t v73 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t v75 = sub_255C7E458();
  uint64_t v26 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ED08);
  uint64_t v76 = v26;
  uint64_t v27 = sub_255C7E458();
  uint64_t v28 = _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa();
  uint64_t v78 = v27;
  uint64_t v79 = v28;
  uint64_t v29 = sub_255C7E458();
  uint64_t v30 = sub_255BE09E8(&qword_26B29EE68, 255, MEMORY[0x263F1A1B0]);
  uint64_t v84 = v29;
  uint64_t v81 = v30;
  uint64_t v31 = sub_255C7DF58();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  double v34 = (char *)&v70 - v33;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = v24;
  uint64_t v37 = v98;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v82 = AssociatedTypeWitness;
  uint64_t v80 = AssociatedConformanceWitness;
  uint64_t v83 = sub_255C7E598();
  uint64_t v39 = sub_255C7E458();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v71 = (char *)&v70 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v85 = (char *)&v70 - v43;
  if (*(void *)v37)
  {
    uint64_t v44 = *(void *)(*(void *)v37 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    long long v45 = *(ValueMetadata **)(v37 + 40);
    LOBYTE(v123) = *(unsigned char *)(v37 + 32);
    long long v124 = v45;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
    sub_255C7FE68();
    uint64_t v89 = v31;
    uint64_t v88 = v32;
    uint64_t v87 = v39;
    uint64_t v86 = v40;
    if ((v112 & 1) != 0 || (swift_beginAccess(), *(unsigned char *)(v44 + 72) == 2)) {
      uint64_t v46 = v34;
    }
    else {
      uint64_t v46 = v34;
    }
    sub_255C7EF48();
    uint64_t v47 = v94;
    uint64_t v48 = v93;
    uint64_t v49 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v37, v95);
    unint64_t v50 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v51 = (char *)swift_allocObject();
    *((void *)v51 + 2) = v36;
    *((void *)v51 + 3) = v25;
    *((void *)v51 + 4) = v44;
    uint64_t v70 = v44;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v51[v50], v48, v49);
    swift_retain();
    uint64_t v123 = v91;
    long long v124 = v90;
    unint64_t v125 = v77;
    unint64_t v126 = v74;
    uint64_t v52 = swift_getOpaqueTypeConformance2();
    uint64_t v53 = swift_getWitnessTable();
    uint64_t v110 = v52;
    uint64_t v111 = v53;
    uint64_t v108 = swift_getWitnessTable();
    uint64_t v109 = MEMORY[0x263F18BF0];
    uint64_t v54 = swift_getWitnessTable();
    uint64_t v55 = sub_255A09998(&qword_26B29ED00, &qword_26B29ED08);
    uint64_t v106 = v54;
    uint64_t v107 = v55;
    uint64_t v56 = swift_getWitnessTable();
    uint64_t v57 = swift_getWitnessTable();
    uint64_t v104 = v56;
    uint64_t v105 = v57;
    uint64_t v58 = v84;
    uint64_t v59 = swift_getWitnessTable();
    sub_255B08EA8(v100, (uint64_t)sub_255BDE138, (uint64_t)v51, v99, v58, v81, v59);
    uint64_t v60 = sub_255C801E8();
    MEMORY[0x270FA5388](v60);
    uint64_t v61 = v97;
    *(&v70 - 4) = v36;
    *(&v70 - 3) = v61;
    *(&v70 - 2) = v98;
    uint64_t v103 = v59;
    uint64_t v62 = v89;
    uint64_t v63 = swift_getWitnessTable();
    unint64_t v64 = v71;
    sub_255C7FAC8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v46, v62);
    uint64_t v65 = swift_getWitnessTable();
    uint64_t v101 = v63;
    uint64_t v102 = v65;
    uint64_t v66 = v87;
    swift_getWitnessTable();
    uint64_t v67 = v85;
    sub_255A20F54(v64);
    uint64_t v68 = *(void (**)(char *, uint64_t))(v86 + 8);
    v68(v64, v66);
    sub_255A20F54(v67);
    return ((uint64_t (*)(char *, uint64_t))v68)(v67, v66);
  }
  else
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BD53D0@<X0>(void (*a1)(char *, uint64_t *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v220 = a3;
  uint64_t v221 = a2;
  uint64_t v156 = (void (*)(char *, uint64_t *, uint64_t))a1;
  uint64_t v212 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v209 = (char *)v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = a4;
  unint64_t v222 = a5;
  uint64_t v219 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t v211 = *(void *)(v219 - 8);
  MEMORY[0x270FA5388](v219);
  uint64_t v210 = (void *)((char *)v152 - v10);
  uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB78);
  uint64_t v208 = *(void *)(v218 - 8);
  MEMORY[0x270FA5388](v218);
  uint64_t v207 = (uint64_t)v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_255C7E398();
  uint64_t v205 = *(void *)(v12 - 8);
  uint64_t v206 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v204 = (char *)v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _s21LegacyTimeControlViewV9TimedViewVMa();
  unint64_t v15 = sub_255BDDEC4();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v246 = &type metadata for MCUIText;
  *((void *)&v246 + 1) = v14;
  uint64_t v164 = v14;
  uint64_t v161 = WitnessTable;
  unint64_t v162 = v15;
  *(void *)&long long v247 = v15;
  *((void *)&v247 + 1) = WitnessTable;
  uint64_t v17 = sub_255C7FF58();
  uint64_t v170 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v169 = (uint64_t)v152 - v18;
  uint64_t v19 = swift_getWitnessTable();
  unint64_t v20 = sub_255BDDF18();
  *(void *)&long long v246 = v17;
  *((void *)&v246 + 1) = &type metadata for ContentBelowSliderStyle;
  *(void *)&long long v247 = v19;
  *((void *)&v247 + 1) = v20;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v167 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v166 = (char *)v152 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  uint64_t v168 = OpaqueTypeMetadata2;
  uint64_t v23 = sub_255C7E458();
  uint64_t v174 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v172 = (char *)v152 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCB0);
  uint64_t v25 = sub_255C7E458();
  uint64_t v179 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v175 = (char *)v152 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCE0);
  uint64_t v27 = sub_255C7E458();
  uint64_t v186 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v182 = (char *)v152 - v28;
  uint64_t v29 = sub_255C7E458();
  uint64_t v185 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v181 = (char *)v152 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EEB8);
  uint64_t v31 = sub_255C7E458();
  uint64_t v191 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v184 = (char *)v152 - v32;
  uint64_t v171 = v17;
  *(void *)&long long v246 = v17;
  *((void *)&v246 + 1) = &type metadata for ContentBelowSliderStyle;
  *(void *)&long long v247 = v19;
  uint64_t v165 = v19;
  unint64_t v163 = v20;
  *((void *)&v247 + 1) = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  uint64_t v155 = OpaqueTypeConformance2;
  uint64_t v244 = OpaqueTypeConformance2;
  uint64_t v245 = v34;
  uint64_t v176 = v23;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = sub_255A09998(&qword_26B29BCA8, &qword_26B29BCB0);
  uint64_t v157 = v35;
  uint64_t v242 = v35;
  uint64_t v243 = v36;
  uint64_t v180 = v25;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = sub_255A09998(&qword_26B29BCD8, &qword_26B29BCE0);
  uint64_t v158 = v37;
  uint64_t v240 = v37;
  uint64_t v241 = v38;
  uint64_t v189 = v27;
  uint64_t v159 = swift_getWitnessTable();
  uint64_t v238 = v159;
  uint64_t v239 = MEMORY[0x263F18860];
  uint64_t v188 = v29;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = sub_255A09998(&qword_26B29EEB0, &qword_26B29EEB8);
  uint64_t v160 = v39;
  uint64_t v236 = v39;
  uint64_t v237 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = sub_255A09998(&qword_26B29EB70, &qword_26B29EB78);
  uint64_t v199 = v31;
  *(void *)&long long v246 = v31;
  *((void *)&v246 + 1) = v218;
  uint64_t v217 = v41;
  *(void *)&long long v247 = v41;
  *((void *)&v247 + 1) = v42;
  uint64_t v216 = v42;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v177 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v173 = (char *)v152 - v44;
  uint64_t v178 = v45;
  uint64_t v46 = sub_255C7E458();
  uint64_t v187 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v183 = (char *)v152 - v47;
  uint64_t v190 = v48;
  uint64_t v49 = sub_255C7E458();
  uint64_t v193 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v192 = (char *)v152 - v50;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ED08);
  uint64_t v194 = v49;
  uint64_t v51 = sub_255C7E458();
  uint64_t v200 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v196 = (char *)v152 - v52;
  uint64_t v53 = _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa();
  uint64_t v201 = v51;
  uint64_t v195 = v53;
  uint64_t v54 = sub_255C7E458();
  uint64_t v202 = *(void *)(v54 - 8);
  uint64_t v203 = v54;
  MEMORY[0x270FA5388](v54);
  uint64_t v197 = (char *)v152 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v56);
  uint64_t v198 = (char *)v152 - v57;
  uint64_t v58 = _s21LegacyTimeControlViewVMa();
  uint64_t v215 = v58;
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v214 = *(void *)(v59 + 64);
  MEMORY[0x270FA5388](v58);
  uint64_t v61 = (char *)v152 - v60;
  uint64_t v213 = (char *)v152 - v60;
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  uint64_t v62 = *(void *)(v153 - 8);
  uint64_t v63 = *(void *)(v62 + 64);
  double v64 = MEMORY[0x270FA5388](v153);
  uint64_t v154 = (char *)v152 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v62 + 16))(v64);
  uint64_t v156 = *(void (**)(char *, uint64_t *, uint64_t))(v59 + 16);
  v156(v61, v220, v58);
  v152[2] = sub_255C80958();
  uint64_t v65 = v221;
  swift_retain();
  uint64_t v66 = sub_255C80948();
  unint64_t v67 = (*(unsigned __int8 *)(v62 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v68 = v59;
  uint64_t v69 = *(unsigned __int8 *)(v59 + 80);
  unint64_t v70 = (v63 + v69 + v67) & ~v69;
  v152[1] = v69 | 7;
  uint64_t v71 = (char *)swift_allocObject();
  uint64_t v72 = MEMORY[0x263F8F500];
  *((void *)v71 + 2) = v66;
  *((void *)v71 + 3) = v72;
  unint64_t v73 = v222;
  *((void *)v71 + 4) = v223;
  *((void *)v71 + 5) = v73;
  *((void *)v71 + 6) = v65;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v71[v67], v154, v153);
  uint64_t v74 = &v71[v70];
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
  uint64_t v154 = (char *)(v68 + 32);
  uint64_t v76 = v213;
  uint64_t v77 = v215;
  v75(v74, v213, v215);
  uint64_t v78 = v220;
  v156(v76, v220, v77);
  uint64_t v79 = sub_255C80948();
  uint64_t v80 = (void *)swift_allocObject();
  v80[2] = v79;
  uint64_t v81 = v223;
  v80[3] = MEMORY[0x263F8F500];
  v80[4] = v81;
  v80[5] = v73;
  v75((char *)v80 + ((v69 + 48) & ~v69), v213, v77);
  uint64_t v82 = MEMORY[0x263F8D538];
  sub_255C80008();
  uint64_t v83 = *v78;
  if (*v78)
  {
    long long v84 = v246;
    uint64_t v85 = v247;
    swift_retain();
    uint64_t v156 = (void (*)(char *, uint64_t *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE38);
    MEMORY[0x25A295850](&v228);
    double v86 = *(double *)&v228;
    uint64_t v87 = *(void *)(v83 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    swift_beginAccess();
    if (*(unsigned char *)(v87 + 72) == 2)
    {
      uint64_t v88 = swift_release();
      unint64_t v89 = 0xE500000000000000;
    }
    else
    {
      double v90 = *(double *)(v87 + 32);
      double v91 = v86 * v90;
      id v92 = objc_msgSend(*(id *)(v83 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_elapsedTimeFormatter), sel_stringFromSeconds_, v91);
      sub_255C80628();

      id v93 = objc_msgSend(*(id *)(v83 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_remainingTimeFormatter), sel_stringFromSeconds_, v90 - v91);
      sub_255C80628();
      unint64_t v89 = v94;
      swift_release();
    }
    uint64_t v154 = (char *)v152;
    long long v246 = v84;
    *(void *)&long long v247 = v85;
    MEMORY[0x270FA5388](v88);
    MEMORY[0x270FA5388](v95);
    unint64_t v151 = v89;
    unint64_t v96 = sub_255BDE788();
    uint64_t v213 = (char *)*((void *)&v84 + 1);
    swift_retain();
    uint64_t v214 = v84;
    swift_retain();
    uint64_t v97 = v164;
    uint64_t v98 = v82;
    uint64_t v99 = v161;
    uint64_t v100 = v162;
    sub_255BD71AC(v98, v96, (char *)&v228);
    v235[0] = v228;
    unint64_t v149 = v96;
    uint64_t v150 = v96;
    uint64_t v101 = v169;
    sub_255BD75AC((uint64_t)&v246, (uint64_t)v235, (uint64_t)sub_255BD7000, 0, (uint64_t (*)(uint64_t))sub_255BDE740, (uint64_t)&v148, (void (*)(uint64_t))sub_255BDE758, (uint64_t)&v148, v169, (uint64_t)CGSizeMake, 0, (uint64_t)&type metadata for MCUIText, v97, MEMORY[0x263F8D538], v100, v99, v149, v150);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v246 = swift_getKeyPath();
    BYTE8(v246) = 0;
    uint64_t v102 = v166;
    uint64_t v103 = v171;
    sub_255C7F6E8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v101, v103);
    swift_beginAccess();
    uint64_t v104 = v172;
    uint64_t v105 = v168;
    sub_255B6F580();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v102, v105);
    if (qword_26B29EAE0 != -1) {
      swift_once();
    }
    uint64_t v107 = v175;
    uint64_t v106 = v176;
    sub_255B6F630();
    (*(void (**)(char *, uint64_t))(v174 + 8))(v104, v106);
    swift_getKeyPath();
    uint64_t v109 = v204;
    uint64_t v108 = v205;
    uint64_t v110 = v206;
    (*(void (**)(char *, void, uint64_t))(v205 + 104))(v204, *MEMORY[0x263F18DC8], v206);
    uint64_t v111 = v182;
    uint64_t v112 = v180;
    sub_255C7F678();
    swift_release();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v107, v112);
    if (qword_26B29EAF8 != -1) {
      swift_once();
    }
    sub_255C801F8();
    uint64_t v113 = v181;
    uint64_t v114 = v189;
    sub_255C7FA38();
    (*(void (**)(char *, uint64_t))(v186 + 8))(v111, v114);
    sub_255C7FD18();
    uint64_t v115 = v184;
    uint64_t v116 = v188;
    sub_255C7F618();
    swift_release();
    (*(void (**)(char *, uint64_t))(v185 + 8))(v113, v116);
    uint64_t v117 = v207;
    uint64_t v118 = v220;
    sub_255BD7884(v215, v207);
    sub_255C7DD68();
    uint64_t v119 = v173;
    uint64_t v120 = v199;
    uint64_t v121 = v218;
    sub_255C7F8E8();
    (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v117, v121);
    (*(void (**)(char *, uint64_t))(v191 + 8))(v115, v120);
    uint64_t v122 = v118[5];
    LOBYTE(v228) = *((unsigned char *)v118 + 32);
    *((void *)&v228 + 1) = v122;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
    sub_255C7FE88();
    long long v123 = v246;
    LOBYTE(v115) = v247;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
    uint64_t v124 = (uint64_t)v209;
    sub_255C7FE88();
    char v125 = *((unsigned char *)v118 + 56);
    uint64_t v126 = v118[8];
    *(void *)&long long v228 = v118[6];
    BYTE8(v228) = v125;
    *(void *)&long long v229 = v126;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF18);
    sub_255C7FE88();
    unint64_t v151 = v222;
    uint64_t v150 = v223;
    uint64_t v127 = v210;
    sub_255BD7CC0(v123, *((uint64_t *)&v123 + 1), (char)v115, v124, v246, *((uint64_t *)&v246 + 1), v247, SBYTE8(v247), v210);
    *(void *)&long long v246 = v120;
    *((void *)&v246 + 1) = v121;
    *(void *)&long long v247 = v217;
    *((void *)&v247 + 1) = v216;
    uint64_t v128 = swift_getOpaqueTypeConformance2();
    uint64_t v129 = v183;
    uint64_t v130 = v178;
    uint64_t v131 = v219;
    MEMORY[0x25A295390](v127, v178, v219, v128);
    (*(void (**)(uint64_t *, uint64_t))(v211 + 8))(v127, v131);
    (*(void (**)(char *, uint64_t))(v177 + 8))(v119, v130);
    swift_beginAccess();
    uint64_t v132 = swift_getWitnessTable();
    uint64_t v233 = v128;
    uint64_t v234 = v132;
    uint64_t v133 = v190;
    uint64_t v134 = swift_getWitnessTable();
    uint64_t v135 = v192;
    sub_255C7FAB8();
    (*(void (**)(char *, uint64_t))(v187 + 8))(v129, v133);
    sub_255C801F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EED0);
    uint64_t v231 = v134;
    uint64_t v232 = MEMORY[0x263F18BF0];
    uint64_t v136 = v194;
    uint64_t v137 = swift_getWitnessTable();
    sub_255BE0988(&qword_26B29EED8, &qword_26B29EED0);
    uint64_t v138 = v196;
    sub_255C7FAC8();
    (*(void (**)(char *, uint64_t))(v193 + 8))(v135, v136);
    *(void *)&long long v246 = v214;
    *((void *)&v246 + 1) = v213;
    *(void *)&long long v247 = v85;
    MEMORY[0x25A295850](&v228, v156);
    sub_255BD7F40((uint64_t)&v246, *(double *)&v228);
    long long v249 = v246;
    long long v250 = v247;
    long long v228 = v246;
    long long v229 = v247;
    uint64_t v230 = v248;
    uint64_t v139 = sub_255A09998(&qword_26B29ED00, &qword_26B29ED08);
    uint64_t v226 = v137;
    uint64_t v227 = v139;
    uint64_t v140 = v201;
    uint64_t v141 = swift_getWitnessTable();
    uint64_t v142 = v197;
    MEMORY[0x25A295390](&v228, v140, v195, v141);
    swift_release();
    swift_release();
    sub_255A34AC0((uint64_t)&v249);
    sub_255AE01A8((uint64_t)&v250);
    (*(void (**)(char *, uint64_t))(v200 + 8))(v138, v140);
    uint64_t v143 = swift_getWitnessTable();
    uint64_t v224 = v141;
    uint64_t v225 = v143;
    uint64_t v144 = v203;
    swift_getWitnessTable();
    uint64_t v145 = v198;
    sub_255A20F54(v142);
    uint64_t v146 = *(void (**)(char *, uint64_t))(v202 + 8);
    v146(v142, v144);
    sub_255A20F54(v145);
    return ((uint64_t (*)(char *, uint64_t))v146)(v145, v144);
  }
  else
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BD6C40@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, double *a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v5 = _s21LegacyTimeControlViewVMa();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_255C7D668();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v37 - v13;
  swift_beginAccess();
  double v16 = *(double *)(a1 + 24);
  double v15 = *(double *)(a1 + 32);
  double v17 = *(double *)(a1 + 56);
  double v18 = *(double *)(a1 + 64);
  int v19 = *(unsigned __int8 *)(a1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  sub_255C7DF28();
  sub_255C7D5F8();
  double v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  double v23 = 0.0;
  if (v19 != 2)
  {
    double v24 = v16 + v18 * (v21 - v17);
    if (v15 < v24) {
      double v24 = v15;
    }
    if (v24 < 0.0) {
      double v24 = 0.0;
    }
    double v23 = v24 / v15;
  }
  char v25 = *(unsigned char *)(a2 + 56);
  uint64_t v26 = *(void *)(a2 + 64);
  uint64_t v41 = *(void *)(a2 + 48);
  LOBYTE(v42) = v25;
  uint64_t v43 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF18);
  uint64_t result = sub_255C7FE68();
  if (v45) {
    goto LABEL_14;
  }
  double v28 = v44;
  if (*(unsigned char *)(a1 + 72) == 2)
  {
    sub_255C7D608();
    sub_255C7D5F8();
    double v30 = v29;
    v22(v11, v8);
  }
  else
  {
    double v30 = *(double *)(a1 + 56);
  }
  uint64_t v31 = v39;
  uint64_t v32 = *(void *)(a2 + 40);
  LOBYTE(v41) = *(unsigned char *)(a2 + 32);
  uint64_t v42 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE68();
  int v33 = LOBYTE(v44);
  uint64_t v34 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v7, a2, v31);
  if (v33 != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
    sub_255C7FE68();
    sub_255C7D5F8();
    double v36 = v35;
    v22(v11, v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v7, v31);
    if (v30 < v36) {
      goto LABEL_15;
    }
LABEL_14:
    double v28 = v23;
    goto LABEL_15;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v7, v31);
LABEL_15:
  *uint64_t v40 = v28;
  return result;
}

uint64_t sub_255BD6F9C()
{
  return sub_255C7FE78();
}

uint64_t sub_255BD7000@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_255C7E968();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = "Slider to adjust playback progress.";
  *(void *)(a1 + 40) = 35;
  *(unsigned char *)(a1 + 48) = 2;
  return result;
}

uint64_t sub_255BD706C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2;
  _s21LegacyTimeControlViewV9TimedViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(&v3);
  uint64_t v3 = v5;
  uint64_t v4 = v6;
  sub_255A20F54(&v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255BD710C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v6 = a4;
  _s21LegacyTimeControlViewV9TimedViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(&v5);
  uint64_t v5 = v7;
  uint64_t v6 = v8;
  sub_255A20F54(&v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255BD71AC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, char *a3@<X8>)
{
  uint64_t v39 = a3;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v37 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  double v36 = (char *)&v35 - v7;
  uint64_t v38 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  MEMORY[0x270FA5388](v16);
  swift_getAssociatedConformanceWitness();
  sub_255C81468();
  sub_255C81408();
  sub_255C81468();
  double v17 = v13;
  sub_255C81408();
  uint64_t v18 = *(void *)(*(void *)(v14 + 24) + 8);
  uint64_t result = sub_255C80558();
  if (result)
  {
    double v20 = v10;
    uint64_t v21 = TupleTypeMetadata2;
    uint64_t v22 = v36;
    double v23 = &v36[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v24 = v38;
    char v25 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v25(v36, v17, a1);
    uint64_t v26 = v23;
    v25(v23, v20, a1);
    uint64_t v27 = *(int *)(v21 + 48);
    double v28 = v37;
    uint64_t v35 = v18;
    double v29 = &v37[v27];
    double v30 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v30(v37, v22, a1);
    v30(v29, v26, a1);
    uint64_t v31 = v39;
    v25(v39, v28, a1);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v24 + 8);
    v32(v29, a1);
    int v33 = &v28[*(int *)(TupleTypeMetadata2 + 48)];
    v25(v28, v22, a1);
    v25(v33, v26, a1);
    uint64_t v34 = sub_255C80568();
    v25(&v31[*(int *)(v34 + 36)], v33, a1);
    return ((uint64_t (*)(char *, uint64_t))v32)(v28, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255BD75AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v42 = a8;
  uint64_t v43 = a7;
  uint64_t v38 = a6;
  uint64_t v39 = a5;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v33 = a1;
  uint64_t v44 = a9;
  uint64_t v45 = a11;
  uint64_t v46 = a10;
  uint64_t v40 = a15;
  uint64_t v41 = a12;
  uint64_t v36 = a18;
  uint64_t v37 = a13;
  uint64_t v34 = a17;
  uint64_t v35 = a16;
  MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v20);
  uint64_t v32 = a14;
  uint64_t v21 = sub_255C80568();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v32 - v23;
  uint64_t v25 = sub_255C80028();
  uint64_t v26 = *(void *)(v25 - 8);
  double v27 = MEMORY[0x270FA5388](v25);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v26 + 16))((char *)&v32 - v28, a1, v25, v27);
  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, a2, v21);
  uint64_t v30 = v39(v29);
  v43(v30);
  sub_255C7FF48();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a2, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v33, v25);
}

uint64_t sub_255BD7884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v38 = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = sub_255C7EC18();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_255C7DD28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29ECF0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  uint64_t v37 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v31 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED78();
  sub_255C7DCF8();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32(v26, v3, a1);
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (v15 + 32) & ~v15;
  uint64_t v29 = v15 | 7;
  uint64_t v30 = v16 + v6;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v28 = *(void *)(a1 + 16);
  *(void *)(v17 + 16) = v28;
  *(void *)(v17 + 24) = v18;
  double v27 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v27(v17 + v16, (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_255BE09E8((unint64_t *)&unk_26B29D368, 255, MEMORY[0x263F185B8]);
  sub_255BE09E8(&qword_26B29EB10, 255, MEMORY[0x263F18588]);
  int v19 = v31;
  uint64_t v20 = v34;
  sub_255C800A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v20);
  uint64_t v21 = v26;
  v32(v26, v33, a1);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v28;
  *(void *)(v22 + 24) = v18;
  v27(v22 + v16, v21, a1);
  sub_255A09998(&qword_26B29ECE8, &qword_26B29ECF0);
  uint64_t v23 = v36;
  sub_255C80098();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v23);
}

uint64_t sub_255BD7CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>)
{
  _s11TimeControlCMa();
  sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
  *a9 = sub_255C7E628();
  a9[1] = v16;
  a9[2] = sub_255C7E628();
  a9[3] = v17;
  uint64_t v18 = (int *)_s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  int v19 = (uint64_t *)((char *)a9 + v18[10]);
  *int v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (char *)a9 + v18[11];
  *(void *)uint64_t v20 = a1;
  *((void *)v20 + 1) = a2;
  v20[16] = a3;
  uint64_t result = sub_255A10514(a4, (uint64_t)a9 + v18[12], &qword_269F26230);
  uint64_t v22 = (char *)a9 + v18[13];
  *(void *)uint64_t v22 = a5;
  *((void *)v22 + 1) = a6;
  *((void *)v22 + 2) = a7;
  v22[24] = a8 & 1;
  return result;
}

uint64_t sub_255BD7E20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    sub_255C7F268();
    uint64_t v9 = sub_255C7F408();
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    sub_255C7FC88();
    uint64_t v5 = sub_255C7F468();
    uint64_t v6 = v14;
    uint64_t v8 = v15;
    uint64_t v7 = v16 & 1;
    sub_255A094C0(v9, v11, v13);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  return result;
}

uint64_t sub_255BD7F40@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  _s11TimeControlCMa();
  sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
  uint64_t v4 = sub_255C7E628();
  uint64_t v6 = v5;
  uint64_t result = sub_255C7E628();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = v8;
  *(double *)(a1 + 32) = a2;
  return result;
}

uint64_t sub_255BD7FF4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE30);
  MEMORY[0x25A295850](&v2, v0);
  return v2;
}

uint64_t sub_255BD804C()
{
  return sub_255C7FFE8();
}

uint64_t sub_255BD80A8(uint64_t a1)
{
  uint64_t v2 = sub_255C7D668();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
  sub_255C7FFE8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_255BD81B0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F263E8);
  MEMORY[0x25A295850](&v2, v0);
  return v2;
}

uint64_t sub_255BD8214()
{
  return sub_255C7FFE8();
}

uint64_t sub_255BD8280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v121 = a1;
  uint64_t v114 = a3;
  uint64_t v118 = sub_255C7DC38();
  uint64_t v113 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v112 = (uint64_t)v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C7D668();
  uint64_t v110 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v109 = (char *)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = *(void *)(a2 - 8);
  uint64_t v124 = *(void *)(v126 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v88 = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  uint64_t v9 = sub_255C7EC98();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v127 = v9;
  *((void *)&v127 + 1) = MEMORY[0x263F8D4F8];
  uint64_t v89 = v9;
  uint64_t v11 = MEMORY[0x263F8D4F8];
  *(void *)&long long v128 = WitnessTable;
  *((void *)&v128 + 1) = MEMORY[0x263F8D510];
  uint64_t v119 = WitnessTable;
  uint64_t v12 = MEMORY[0x263F8D510];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v90 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v87 = (char *)v86 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EF58);
  *(void *)&long long v127 = v9;
  *((void *)&v127 + 1) = v11;
  *(void *)&long long v128 = WitnessTable;
  *((void *)&v128 + 1) = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_255BE0988((unint64_t *)&qword_269F23EE8, &qword_26B29EF58);
  *(void *)&long long v127 = OpaqueTypeMetadata2;
  *((void *)&v127 + 1) = v15;
  uint64_t v18 = OpaqueTypeMetadata2;
  v86[0] = OpaqueTypeMetadata2;
  v86[3] = v15;
  *(void *)&long long v128 = OpaqueTypeConformance2;
  *((void *)&v128 + 1) = v17;
  uint64_t v19 = OpaqueTypeConformance2;
  v86[2] = OpaqueTypeConformance2;
  uint64_t v20 = v17;
  v86[1] = v17;
  uint64_t v21 = swift_getOpaqueTypeMetadata2();
  uint64_t v99 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v115 = (char *)v86 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29E928);
  *(void *)&long long v127 = v18;
  *((void *)&v127 + 1) = v15;
  *(void *)&long long v128 = v19;
  *((void *)&v128 + 1) = v20;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  unint64_t v25 = sub_255BDEB44();
  *(void *)&long long v127 = v21;
  *((void *)&v127 + 1) = v23;
  *(void *)&long long v128 = v24;
  *((void *)&v128 + 1) = v25;
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v104 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v101 = (char *)v86 - v27;
  uint64_t v100 = v21;
  *(void *)&long long v127 = v21;
  *((void *)&v127 + 1) = v23;
  uint64_t v94 = v23;
  uint64_t v92 = v24;
  *(void *)&long long v128 = v24;
  *((void *)&v128 + 1) = v25;
  unint64_t v91 = v25;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = sub_255BE09E8(&qword_26B29DE10, 255, MEMORY[0x263F07490]);
  *(void *)&long long v127 = v26;
  *((void *)&v127 + 1) = v5;
  *(void *)&long long v128 = v28;
  *((void *)&v128 + 1) = v29;
  uint64_t v30 = swift_getOpaqueTypeMetadata2();
  uint64_t v107 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v117 = (char *)v86 - v31;
  uint64_t v106 = v26;
  *(void *)&long long v127 = v26;
  *((void *)&v127 + 1) = v5;
  uint64_t v111 = v5;
  uint64_t v95 = v28;
  *(void *)&long long v128 = v28;
  *((void *)&v128 + 1) = v29;
  uint64_t v93 = v29;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = sub_255BE09E8(&qword_26B29B540, 255, MEMORY[0x263F18460]);
  uint64_t v108 = v30;
  *(void *)&long long v127 = v30;
  *((void *)&v127 + 1) = v118;
  uint64_t v102 = v32;
  *(void *)&long long v128 = v32;
  *((void *)&v128 + 1) = v33;
  uint64_t v97 = v33;
  uint64_t v105 = swift_getOpaqueTypeMetadata2();
  uint64_t v103 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  unint64_t v96 = (char *)v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v98 = (char *)v86 - v36;
  uint64_t v37 = v122;
  LOBYTE(v127) = sub_255BD7FF4() & 1;
  uint64_t v38 = v126;
  uint64_t v39 = v126 + 16;
  char v125 = *(void (**)(char *, void *, uint64_t))(v126 + 16);
  uint64_t v40 = v88;
  v125(v88, v37, a2);
  uint64_t v41 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v42 = (v41 + 32) & ~v41;
  uint64_t v120 = v42 + v124;
  uint64_t v124 = v41 | 7;
  uint64_t v43 = swift_allocObject();
  uint64_t v45 = *(void *)(a2 + 16);
  uint64_t v44 = *(void *)(a2 + 24);
  *(void *)(v43 + 16) = v45;
  *(void *)(v43 + 24) = v44;
  long long v123 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  v123(v43 + v42, v40, a2);
  swift_checkMetadataState();
  uint64_t v46 = v87;
  sub_255C7FB48();
  swift_release();
  uint64_t v47 = v122;
  *(void *)&long long v127 = sub_255BD81B0();
  BYTE8(v127) = v48 & 1;
  uint64_t v121 = v39;
  v125(v40, v47, a2);
  uint64_t v49 = swift_allocObject();
  uint64_t v116 = v45;
  *(void *)(v49 + 16) = v45;
  *(void *)(v49 + 24) = v44;
  uint64_t v119 = v44;
  uint64_t v89 = v42;
  uint64_t v50 = v49 + v42;
  uint64_t v51 = v40;
  uint64_t v52 = v40;
  uint64_t v53 = a2;
  uint64_t v126 = v38 + 32;
  v123(v50, v52, a2);
  uint64_t v54 = v86[0];
  sub_255C7FB48();
  swift_release();
  uint64_t v55 = v122;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v46, v54);
  if (*v55)
  {
    uint64_t v56 = *(void *)(*v55 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    swift_beginAccess();
    char v57 = *(unsigned char *)(v56 + 72);
    long long v58 = *(_OWORD *)(v56 + 40);
    long long v127 = *(_OWORD *)(v56 + 24);
    long long v128 = v58;
    long long v129 = *(_OWORD *)(v56 + 56);
    char v130 = v57;
    uint64_t v59 = a2;
    v125(v51, v55, a2);
    uint64_t v60 = swift_allocObject();
    uint64_t v61 = v116;
    uint64_t v62 = v119;
    *(void *)(v60 + 16) = v116;
    *(void *)(v60 + 24) = v62;
    uint64_t v63 = v89;
    v123(v60 + v89, v51, v53);
    double v64 = v101;
    uint64_t v65 = v100;
    uint64_t v66 = v115;
    sub_255C7FB48();
    swift_release();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v65);
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
    uint64_t v68 = v109;
    MEMORY[0x25A295850](v67);
    v125(v51, v55, v59);
    uint64_t v69 = swift_allocObject();
    uint64_t v70 = v119;
    *(void *)(v69 + 16) = v61;
    *(void *)(v69 + 24) = v70;
    v123(v69 + v63, v51, v59);
    uint64_t v71 = v106;
    uint64_t v72 = v111;
    sub_255C7FB48();
    swift_release();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v68, v72);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v71);
    uint64_t v73 = v112;
    sub_255ABCB00(v112);
    v125(v51, v55, v59);
    uint64_t v74 = swift_allocObject();
    uint64_t v75 = v119;
    *(void *)(v74 + 16) = v116;
    *(void *)(v74 + 24) = v75;
    v123(v74 + v63, v51, v59);
    uint64_t v76 = v96;
    uint64_t v77 = v108;
    uint64_t v78 = v117;
    uint64_t v79 = v118;
    uint64_t v80 = v102;
    uint64_t v81 = v97;
    sub_255C7FB48();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v73, v79);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v78, v77);
    *(void *)&long long v127 = v77;
    *((void *)&v127 + 1) = v79;
    *(void *)&long long v128 = v80;
    *((void *)&v128 + 1) = v81;
    swift_getOpaqueTypeConformance2();
    uint64_t v82 = v98;
    uint64_t v83 = v105;
    sub_255A20F54(v76);
    long long v84 = *(void (**)(char *, uint64_t))(v103 + 8);
    v84(v76, v83);
    sub_255A20F54(v82);
    return ((uint64_t (*)(char *, uint64_t))v84)(v82, v83);
  }
  else
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BD9040(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7DC38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v23[-v11];
  uint64_t v13 = sub_255C7D668();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  if (sub_255BD7FF4())
  {
    sub_255C7D658();
  }
  else
  {
    uint64_t v25 = sub_255BD81B0();
    if ((v16 & 1) == 0)
    {
      if (!*a1) {
        goto LABEL_14;
      }
      uint64_t v17 = *(void *)(*a1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
      swift_beginAccess();
      if (*(unsigned char *)(v17 + 72) != 2)
      {
        double v18 = *(double *)(v17 + 32);
        sub_255ABCB00((uint64_t)v12);
        (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F18450], v6);
        int v24 = sub_255C7DC28();
        uint64_t v19 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
        v19(v9, v6);
        v19(v12, v6);
        if (v24)
        {
          double v20 = *(double *)&v25;
          sub_255C23448(a1[2]);
          uint64_t v21 = *(void (**)(uint64_t, uint64_t, double))(a3 + 248);
          swift_unknownObjectRetain();
          v21(a2, a3, v18 * v20);
          swift_unknownObjectRelease();
          goto LABEL_10;
        }
      }
    }
    sub_255C7D608();
  }
  sub_255BD80A8((uint64_t)v15);
LABEL_10:
  uint64_t result = sub_255BD7FF4();
  if (result) {
    return result;
  }
  if (!*a1)
  {
LABEL_14:
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
    return result;
  }
  uint64_t v26 = 0;
  char v27 = 1;
  swift_retain();
  sub_255C7D9F8();
  return swift_release();
}

uint64_t sub_255BD9374(void *a1)
{
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t result = sub_255BD7FF4();
  if (result)
  {
    if (*a1)
    {
      swift_retain();
      sub_255BD81B0();
      sub_255C7D9F8();
      return swift_release();
    }
    else
    {
      _s11TimeControlCMa();
      sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
      uint64_t result = sub_255C7E618();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_255BD945C(void *a1)
{
  uint64_t v2 = sub_255C7D668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t result = sub_255BD7FF4();
  if ((result & 1) == 0)
  {
    if (*a1)
    {
      uint64_t v7 = *(void *)(*a1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
      uint64_t result = swift_beginAccess();
      if (*(unsigned char *)(v7 + 72) != 2)
      {
        double v8 = *(double *)(v7 + 56);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
        MEMORY[0x25A295850](v9);
        sub_255C7D5F8();
        double v11 = v10;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        if (v11 < v8) {
          return sub_255BD8214();
        }
      }
    }
    else
    {
      _s11TimeControlCMa();
      sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
      uint64_t result = sub_255C7E618();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_255BD9630()
{
  uint64_t v0 = sub_255C7D668();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - v5;
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
  MEMORY[0x25A295850](v7);
  sub_255C7D608();
  char v8 = sub_255C7D638();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v9)(v6, v0);
  if (v8) {
    return sub_255BD8214();
  }
  return result;
}

uint64_t sub_255BD9798(uint64_t a1)
{
  uint64_t v2 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)v31 - v7;
  uint64_t v9 = sub_255C7DC38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v31 - v14;
  sub_255ABCB00((uint64_t)v31 - v14);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (result == *MEMORY[0x263F18448] || result == *MEMORY[0x263F18458]) {
    return sub_255BD804C();
  }
  if (result != *MEMORY[0x263F18450])
  {
    uint64_t v37 = v5;
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_255C7D898();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B2AA4E8);
    uint64_t v36 = v3;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v19(v8, a1, v2);
    v19(v37, a1, v2);
    double v20 = sub_255C7D878();
    os_log_type_t v21 = sub_255C80BF8();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      os_log_t v34 = v20;
      uint64_t v24 = v23;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v39 = v35;
      *(_DWORD *)uint64_t v24 = 136315394;
      int v32 = v22;
      sub_255ABCB00((uint64_t)v12);
      uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
      v33(v12, v9);
      uint64_t v38 = sub_255A7BEC4(0x616850656E656353, 0xEA00000000006573, &v39);
      sub_255C80F18();
      uint64_t v36 = *(void *)(v36 + 8);
      ((void (*)(char *, uint64_t))v36)(v8, v2);
      *(_WORD *)(v24 + 12) = 2080;
      v31[1] = v24 + 14;
      uint64_t v25 = v37;
      sub_255ABCB00((uint64_t)v12);
      uint64_t v26 = sub_255C80658();
      uint64_t v38 = sub_255A7BEC4(v26, v27, &v39);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v36)(v25, v2);
      os_log_t v28 = v34;
      _os_log_impl(&dword_255A00000, v34, (os_log_type_t)v32, "Unhandled case for %s: %s", (uint8_t *)v24, 0x16u);
      uint64_t v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v29, -1, -1);
      MEMORY[0x25A297C00](v24, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v33)(v15, v9);
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, uint64_t))(v36 + 8);
      v30(v8, v2);
      v30(v37, v2);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
  return result;
}

uint64_t sub_255BD9C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t OpaqueTypeConformance2 = a1;
  uint64_t v74 = a3;
  uint64_t v6 = sub_255C805C8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255C805E8();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v66 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_255C7EFA8();
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  uint64_t v15 = sub_255C7EC98();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v79 = v15;
  uint64_t v80 = WitnessTable;
  uint64_t v17 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  double v20 = (char *)&v56 - v19;
  sub_255C7F0D8();
  uint64_t v61 = OpaqueTypeMetadata2;
  uint64_t v62 = sub_255C7E458();
  MEMORY[0x270FA5388](v62);
  uint64_t v65 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v68 = (char *)&v56 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v69 = (char *)&v56 - v26;
  uint64_t v27 = *v4;
  if (!*v4)
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
    return result;
  }
  uint64_t v70 = v9;
  uint64_t v71 = v25;
  uint64_t v72 = a2;
  uint64_t v73 = v4;
  uint64_t v28 = *(void *)(v27 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
  swift_beginAccess();
  BOOL v29 = *(unsigned char *)(v28 + 72) == 2;
  uint64_t v67 = v27;
  if (v29)
  {
    swift_retain();
    uint64_t v30 = v17;
LABEL_9:
    if (qword_26B29E918 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_26B2AA5D0;
    uint64_t v37 = *(void *)algn_26B2AA5D8;
    swift_bridgeObjectRetain_n();
    swift_release();
    uint64_t v59 = v38;
    uint64_t v57 = v38;
    uint64_t v58 = v37;
    goto LABEL_12;
  }
  swift_retain();
  id v31 = (id)AXDurationStringForDuration();
  uint64_t v30 = v17;
  if (!v31) {
    goto LABEL_9;
  }
  int v32 = v31;
  uint64_t v33 = sub_255C80628();

  id v34 = (id)AXDurationStringForDuration();
  if (!v34)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v35 = v34;
  uint64_t v59 = v33;
  uint64_t v57 = sub_255C80628();
  uint64_t v58 = v36;
  swift_release();

LABEL_12:
  uint64_t v39 = swift_checkMetadataState();
  sub_255C7EF78();
  sub_255C7F8F8();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v12);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v40 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  *(void *)&long long v81 = sub_255C80648();
  *((void *)&v81 + 1) = v41;
  uint64_t v77 = v39;
  uint64_t v78 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_255A1D78C();
  uint64_t v42 = v65;
  uint64_t v43 = v61;
  sub_255C7F868();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v43);
  sub_255C805B8();
  sub_255C805A8();
  sub_255C80598();
  sub_255C805A8();
  sub_255C80598();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255C805A8();
  sub_255C805D8();
  id v44 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  *(void *)&long long v81 = sub_255C80648();
  *((void *)&v81 + 1) = v45;
  uint64_t v46 = v68;
  uint64_t v47 = v62;
  sub_255C7E3E8();
  swift_bridgeObjectRelease();
  char v48 = *(void (**)(char *, uint64_t))(v71 + 8);
  v48(v42, v47);
  uint64_t v49 = v73;
  long long v81 = *((_OWORD *)v73 + 1);
  uint64_t v50 = swift_allocObject();
  long long v51 = *(_OWORD *)v49;
  long long v52 = *((_OWORD *)v49 + 1);
  *(_OWORD *)(v50 + 16) = *(_OWORD *)(v72 + 16);
  *(_OWORD *)(v50 + 32) = v51;
  *(_OWORD *)(v50 + 48) = v52;
  *(void *)(v50 + 64) = v49[4];
  swift_retain();
  sub_255AE1234((uint64_t)&v81);
  uint64_t v53 = v69;
  sub_255C7E438();
  swift_release();
  v48(v46, v47);
  uint64_t v54 = sub_255BE09E8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v75 = OpaqueTypeConformance2;
  uint64_t v76 = v54;
  swift_getWitnessTable();
  sub_255B4BFB8();
  return ((uint64_t (*)(char *, uint64_t))v48)(v53, v47);
}

uint64_t sub_255BDA544(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_255C7F0F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)a2)
  {
    uint64_t v12 = *(void *)(*(void *)a2 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v12 + 72) != 2)
    {
      double v14 = *(double *)(v12 + 32);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      int v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
      if (v15 == *MEMORY[0x263F1A498])
      {
        sub_255C23448(*((void *)a2 + 2));
        double v16 = *((double *)a2 + 4);
        double v17 = 0.05;
LABEL_7:
        double v18 = v14 * (v16 + v17);
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, double))(a4 + 248);
        swift_unknownObjectRetain();
        v19(a3, a4, v18);
        return swift_unknownObjectRelease();
      }
      if (v15 == *MEMORY[0x263F1A490])
      {
        sub_255C23448(*((void *)a2 + 2));
        double v16 = *((double *)a2 + 4);
        double v17 = -0.05;
        goto LABEL_7;
      }
      if (qword_26B29B3F0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_255C7D898();
      __swift_project_value_buffer(v20, (uint64_t)qword_26B2AA4E8);
      long long v38 = a2[1];
      swift_retain();
      sub_255AE1234((uint64_t)&v38);
      swift_retain();
      sub_255AE1234((uint64_t)&v38);
      swift_retain();
      sub_255AE1234((uint64_t)&v38);
      swift_retain();
      sub_255AE1234((uint64_t)&v38);
      uint64_t v21 = sub_255C7D878();
      os_log_type_t v22 = sub_255C80BF8();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        os_log_t v32 = v21;
        uint64_t v24 = v23;
        uint64_t v33 = swift_slowAlloc();
        uint64_t v37 = v33;
        *(_DWORD *)uint64_t v24 = 136315394;
        _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa();
        uint64_t v25 = sub_255C81618();
        *(void *)&long long v34 = sub_255A7BEC4(v25, v26, &v37);
        sub_255C80F18();
        swift_release();
        swift_bridgeObjectRelease();
        sub_255AE01A8((uint64_t)&v38);
        swift_release();
        sub_255AE01A8((uint64_t)&v38);
        *(_WORD *)(v24 + 12) = 2080;
        long long v27 = a2[1];
        long long v34 = *a2;
        long long v35 = v27;
        uint64_t v36 = *((void *)a2 + 4);
        swift_retain();
        sub_255AE1234((uint64_t)&v38);
        uint64_t v28 = sub_255C80658();
        *(void *)&long long v34 = sub_255A7BEC4(v28, v29, &v37);
        sub_255C80F18();
        swift_release();
        swift_bridgeObjectRelease();
        sub_255AE01A8((uint64_t)&v38);
        swift_release();
        sub_255AE01A8((uint64_t)&v38);
        os_log_t v30 = v32;
        _os_log_impl(&dword_255A00000, v32, v22, "Unhandled case for %s: %s", (uint8_t *)v24, 0x16u);
        uint64_t v31 = v33;
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v31, -1, -1);
        MEMORY[0x25A297C00](v24, -1, -1);
      }
      else
      {
        swift_release();
        sub_255AE01A8((uint64_t)&v38);
        swift_release();
        sub_255AE01A8((uint64_t)&v38);
        swift_release();
        sub_255AE01A8((uint64_t)&v38);
        swift_release();
        sub_255AE01A8((uint64_t)&v38);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255BDAA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_255BD9C34(a1, a2, a3);
}

uint64_t sub_255BDAA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F263D0) - 8;
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (uint64_t)&v44 - v7;
  uint64_t v52 = sub_255C802C8();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90) - 8;
  MEMORY[0x270FA5388](v48);
  uint64_t v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v47 = (uint64_t *)((char *)&v44 - v11);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F263D8) - 8;
  MEMORY[0x270FA5388](v53);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_255C7F548();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_255C7F2F8();
  sub_255C7F218();
  swift_release();
  uint64_t v19 = sub_255C7F4A8();
  uint64_t v21 = v20;
  char v23 = v22;
  swift_release();
  sub_255A094C0(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_255C7F298();
  uint64_t v24 = sub_255C7F408();
  uint64_t v45 = v25;
  uint64_t v46 = v26;
  char v28 = v27 & 1;
  sub_255A094C0(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  sub_255C7FC88();
  uint64_t v29 = sub_255C7FCA8();
  swift_release();
  uint64_t v31 = v49;
  uint64_t v30 = v50;
  uint64_t v32 = v52;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, *MEMORY[0x263F1B968], v52);
  uint64_t v33 = v47;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v47 + *(int *)(v48 + 44), v31, v32);
  uint64_t *v33 = v29;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  LODWORD(v32) = sub_255C7ECE8();
  uint64_t v34 = v51;
  sub_255A09540((uint64_t)v33, v51, &qword_269F21C90);
  uint64_t v36 = (uint64_t)v54;
  uint64_t v35 = v55;
  uint64_t v37 = (uint64_t *)&v54[*(int *)(v55 + 64)];
  *uint64_t v37 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  sub_255A10514(v34, v36, &qword_269F21C90);
  *(_DWORD *)(v36 + *(int *)(v35 + 60)) = v32;
  uint64_t v38 = v56;
  sub_255A10514(v36, v56, &qword_269F263D0);
  sub_255A09540(v38, (uint64_t)&v13[*(int *)(v53 + 44)], &qword_269F263D0);
  uint64_t v40 = v45;
  uint64_t v39 = v46;
  *(void *)uint64_t v13 = v24;
  *((void *)v13 + 1) = v40;
  v13[16] = v28;
  *((void *)v13 + 3) = v39;
  sub_255A093E4(v24, v40, v28);
  swift_bridgeObjectRetain();
  sub_255A095A4(v38, &qword_269F263D0);
  sub_255A095A4((uint64_t)v33, &qword_269F21C90);
  sub_255A094C0(v24, v40, v28);
  swift_bridgeObjectRelease();
  uint64_t v41 = v57;
  sub_255A09540((uint64_t)v13, v57, &qword_269F263D8);
  uint64_t v42 = (uint64_t (**)())(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F263E0) + 36));
  char *v42 = sub_255B5BD5C;
  v42[1] = 0;
  return sub_255A095A4((uint64_t)v13, &qword_269F263D8);
}

uint64_t sub_255BDAF30@<X0>(uint64_t a1@<X8>)
{
  return sub_255BDAA70(*v1, v1[1], a1);
}

uint64_t sub_255BDAF40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_255C7DC38();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v15[-v8];
  _s21LegacyTimeControlViewVMa();
  sub_255ABCB00((uint64_t)v9);
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F18450], v3);
  char v10 = sub_255C7DC28();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  char v12 = *(unsigned char *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  if (v10)
  {
    char v17 = *(unsigned char *)(a2 + 32);
    uint64_t v18 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
    uint64_t result = sub_255C7FE68();
    if (v16) {
      return result;
    }
    char v17 = v12;
    uint64_t v18 = v13;
    char v16 = 1;
  }
  else
  {
    char v17 = *(unsigned char *)(a2 + 32);
    uint64_t v18 = v13;
    char v16 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  }
  return sub_255C7FE78();
}

uint64_t sub_255BDB124(unsigned __int8 *a1, void *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = (unsigned char *)(*a2 + 16);
  uint64_t result = swift_beginAccess();
  if (v2 != *(unsigned __int8 *)(v3 + 16))
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_255BE09E8((unint64_t *)&qword_26B2996E0, v6, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition);
    sub_255C7D9E8();
    sub_255C7DA48();
    uint64_t result = swift_release();
  }
  *uint64_t v4 = v2;
  return result;
}

uint64_t sub_255BDB1D8(char a1)
{
  int v2 = a1 & 1;
  uint64_t result = swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 16) != v2)
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_255BE09E8((unint64_t *)&qword_26B2996E0, v4, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition);
    sub_255C7D9E8();
    sub_255C7DA48();
    uint64_t result = swift_release();
  }
  *(unsigned char *)(v1 + 16) = v2;
  return result;
}

uint64_t type metadata accessor for NowPlayingViewModel.PlaybackPosition()
{
  return self;
}

void (*sub_255BDB2AC(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *(unsigned char *)(v1 + 16);
  return sub_255BDB320;
}

void sub_255BDB320(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 32);
  if (v3 != *(unsigned __int8 *)(v2 + 16))
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_255BE09E8((unint64_t *)&qword_26B2996E0, v4, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition);
    sub_255C7D9E8();
    sub_255C7DA48();
    swift_release();
    uint64_t v2 = v1[3];
  }
  *(unsigned char *)(v2 + 16) = v3;

  free(v1);
}

__n128 sub_255BDB3D0@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  char v4 = *(unsigned char *)(v3 + 72);
  long long v5 = *(_OWORD *)(v3 + 40);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 56);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

__n128 sub_255BDB42C@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  char v3 = *(unsigned char *)(v1 + 72);
  long long v4 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v3;
  return result;
}

uint64_t sub_255BDB484(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  int v8 = *((unsigned __int8 *)a1 + 48);
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(v1 + 72);
  if (v10 == 2)
  {
    if (v8 == 2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  long long v11 = *(_OWORD *)(v1 + 40);
  v18[0] = *(_OWORD *)(v1 + 24);
  v18[1] = v11;
  double v18[2] = *(_OWORD *)(v1 + 56);
  char v19 = v10;
  if (v8 == 2) {
    goto LABEL_6;
  }
  v13[0] = v2;
  v13[1] = v3;
  uint64_t v13[2] = v4;
  char v14 = v5 & 1;
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  char v17 = v8 & 1;
  uint64_t result = _s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)v18, (uint64_t)v13);
  if ((result & 1) == 0)
  {
LABEL_6:
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_255BE09E8((unint64_t *)&qword_26B2996E0, v12, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition);
    sub_255C7D9E8();
    sub_255C7DA48();
    uint64_t result = swift_release();
  }
LABEL_7:
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v6;
  *(void *)(v1 + 64) = v7;
  *(unsigned char *)(v1 + 72) = v8;
  return result;
}

void (*sub_255BDB5C4(void *a1))(uint64_t **a1)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  swift_beginAccess();
  char v4 = *(unsigned char *)(v1 + 72);
  long long v5 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v1 + 24);
  *((_OWORD *)v3 + 1) = v5;
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v1 + 56);
  *((unsigned char *)v3 + 48) = v4;
  return sub_255BDB64C;
}

void sub_255BDB64C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (*a1)[10];
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = (*a1)[4];
  uint64_t v8 = (*a1)[5];
  int v9 = *((unsigned __int8 *)*a1 + 48);
  int v10 = *(unsigned __int8 *)(v2 + 72);
  if (v10 == 2)
  {
    if (v9 == 2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  long long v11 = *(_OWORD *)(v2 + 40);
  v14[0] = *(_OWORD *)(v2 + 24);
  v14[1] = v11;
  v14[2] = *(_OWORD *)(v2 + 56);
  char v15 = v10;
  if (v9 == 2) {
    goto LABEL_6;
  }
  v16[0] = v3;
  v16[1] = v4;
  v16[2] = v5;
  char v17 = v6 & 1;
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  char v20 = v9 & 1;
  char v12 = _s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)v14, (uint64_t)v16);
  uint64_t v2 = v1[10];
  if ((v12 & 1) == 0)
  {
LABEL_6:
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_255BE09E8((unint64_t *)&qword_26B2996E0, v13, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition);
    sub_255C7D9E8();
    sub_255C7DA48();
    swift_release();
    uint64_t v2 = v1[10];
  }
LABEL_7:
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 48) = v6;
  *(void *)(v2 + 56) = v7;
  *(void *)(v2 + 64) = v8;
  *(unsigned char *)(v2 + 72) = v9;

  free(v1);
}

BOOL sub_255BDB790()
{
  swift_beginAccess();
  return *(unsigned char *)(v0 + 72) == 2 || *(double *)(v0 + 64) == 0.0;
}

double sub_255BDB7E0()
{
  swift_beginAccess();
  double v1 = 0.0;
  if (*(unsigned char *)(v0 + 72) != 2)
  {
    double v3 = *(double *)(v0 + 56);
    double v2 = *(double *)(v0 + 64);
    double v5 = *(double *)(v0 + 24);
    double v4 = *(double *)(v0 + 32);
    sub_255C7D5F8();
    double v7 = v5 + v2 * (v6 - v3);
    if (v4 < v7) {
      double v7 = v4;
    }
    if (v7 >= 0.0) {
      return v7;
    }
  }
  return v1;
}

uint64_t sub_255BDB878()
{
  return swift_release();
}

uint64_t NowPlayingViewModel.PlaybackPosition.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t NowPlayingViewModel.PlaybackPosition.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_255BDB924@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NowPlayingViewModel.PlaybackPosition();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255BDB960()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t result = sub_255C80648();
  qword_26B2AA5D0 = result;
  *(void *)algn_26B2AA5D8 = v4;
  return result;
}

void sub_255BDBAA0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  int64_t v0 = *(void *)(v14[0] + 16);
  if (v0)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_255B16CCC(0, v0, 0);
    uint64_t v1 = v15;
    uint64_t v2 = v14[0] + 48;
    do
    {
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_255C810E8();
      sub_255C806E8();
      swift_bridgeObjectRetain();
      sub_255C806E8();
      swift_bridgeObjectRelease();
      sub_255C806E8();
      sub_255C80A88();
      sub_255C806E8();
      swift_bridgeObjectRelease();
      uint64_t v15 = v1;
      unint64_t v4 = *(void *)(v1 + 16);
      unint64_t v3 = *(void *)(v1 + 24);
      if (v4 >= v3 >> 1)
      {
        sub_255B16CCC(v3 > 1, v4 + 1, 1);
        uint64_t v1 = v15;
      }
      *(void *)(v1 + 16) = v4 + 1;
      uint64_t v5 = v1 + 16 * v4;
      *(void *)(v5 + 32) = 0;
      *(void *)(v5 + 40) = 0xE000000000000000;
      v2 += 24;
      --v0;
    }
    while (v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = MEMORY[0x263F8EE78];
  }
  v14[0] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE80);
  sub_255A09998((unint64_t *)&qword_26B29BE88, &qword_26B29BE80);
  uint64_t v6 = sub_255C80538();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_255C7D898();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B2AA4E8);
  swift_bridgeObjectRetain();
  int v10 = sub_255C7D878();
  os_log_type_t v11 = sub_255C80C08();
  if (os_log_type_enabled(v10, v11))
  {
    char v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v14[0] = v13;
    *(_DWORD *)char v12 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_255A7BEC4(v6, v8, v14);
    sub_255C80F18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_255A00000, v10, v11, "TimeControl received segments: [%{public}s]", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v13, -1, -1);
    MEMORY[0x25A297C00](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_255BDBE6C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255BDBEE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl__segments;
  uint64_t v22 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298668);
  sub_255C7DA88();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  uint64_t v7 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_pptScrubberInteractionState;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D360);
  swift_allocObject();
  *(void *)(v1 + v7) = sub_255C7DA08();
  uint64_t v8 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition;
  type metadata accessor for NowPlayingViewModel.PlaybackPosition();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(unsigned char *)(v9 + 72) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984C8);
  swift_allocObject();
  uint64_t v10 = sub_255C7DA08();
  *(void *)(v9 + 80) = v10;
  uint64_t v22 = v10;
  sub_255A09998((unint64_t *)&unk_26B2984B8, &qword_26B2984C8);
  *(void *)(v9 + 88) = sub_255C7DAF8();
  *(void *)(v1 + v8) = v9;
  *(void *)(v1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPositionObserver) = 0;
  uint64_t v11 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_activeScrubPositionSubject;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2984A8);
  swift_allocObject();
  *(void *)(v1 + v11) = sub_255C7DA08();
  uint64_t v12 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_elapsedTimeFormatter;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA8B8]), sel_init);
  objc_msgSend(v13, sel_setStyle_, 1);
  *(void *)(v1 + v12) = v13;
  uint64_t v14 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_remainingTimeFormatter;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA8B8]), sel_init);
  objc_msgSend(v15, sel_setStyle_, 2);
  *(void *)(v1 + v14) = v15;
  sub_255BE09E8((unint64_t *)&qword_26B2996E0, v16, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition);
  uint64_t v22 = sub_255C7D9E8();
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_255BDCC0C;
  *(void *)(v18 + 24) = v17;
  sub_255C7DA58();
  uint64_t v19 = sub_255C7DB98();
  swift_release();
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPositionObserver) = v19;
  swift_release();
  return v1;
}

uint64_t sub_255BDC258()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    _s11TimeControlCMa();
    sub_255BE09E8(&qword_26B299430, 255, (void (*)(uint64_t))_s11TimeControlCMa);
    sub_255C7D9E8();
    swift_release();
    sub_255C7DA48();
    return swift_release();
  }
  return result;
}

uint64_t sub_255BDC310(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_255BDC338()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl__segments;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_255BDC43C@<X0>(uint64_t *a1@<X8>)
{
  _s11TimeControlCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

double NowPlayingViewModel.DurationSnapshot.elapsedDuration.getter()
{
  return *(double *)v0;
}

double NowPlayingViewModel.DurationSnapshot.duration.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t NowPlayingViewModel.DurationSnapshot.bufferedDuration.getter()
{
  return *(void *)(v0 + 16);
}

double NowPlayingViewModel.DurationSnapshot.snapshotTime.getter()
{
  return *(double *)(v0 + 32);
}

double NowPlayingViewModel.DurationSnapshot.rate.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t NowPlayingViewModel.DurationSnapshot.isLoading.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t NowPlayingViewModel.DurationSnapshot.init(elapsedDuration:duration:snapshotTime:rate:isLoading:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(double *)(a2 + 32) = a5;
  *(double *)(a2 + 40) = a6;
  *(unsigned char *)(a2 + 48) = result;
  return result;
}

uint64_t NowPlayingViewModel.DurationSnapshot.debugDescription.getter()
{
  return 0;
}

double sub_255BDC708()
{
  double result = 5.0;
  xmmword_26B29EAB8 = xmmword_255C940B0;
  *(_OWORD *)&qword_26B29EAC8 = xmmword_255C940B0;
  return result;
}

void sub_255BDC720()
{
  qword_26B29EAE8 = 0x4045000000000000;
}

uint64_t _s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  double v4 = *(double *)(a1 + 32);
  double v3 = *(double *)(a1 + 40);
  double v6 = *(double *)(a2 + 32);
  double v5 = *(double *)(a2 + 40);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
    if (v4 != v6 || v3 != v5) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 24)) {
      return 0;
    }
    BOOL v8 = *(double *)(a1 + 16) == *(double *)(a2 + 16) && v4 == v6;
    if (!v8 || v3 != v5) {
      return 0;
    }
  }
  return *(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48) ^ 1u;
}

uint64_t sub_255BDC7A4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_255BDC7F4(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 48);
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  long long v4[2] = *(_OWORD *)(a1 + 32);
  char v5 = v1;
  return sub_255BDB484((uint64_t *)v4);
}

uint64_t method lookup function for NowPlayingViewModel.PlaybackPosition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NowPlayingViewModel.PlaybackPosition);
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isLive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isLive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isLive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isPaused.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.elapsedTime(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.notifyJumped(by:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_255BDC998()
{
  return _s11TimeControlCMa();
}

uint64_t _s11TimeControlCMa()
{
  uint64_t result = qword_26B297B28;
  if (!qword_26B297B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255BDC9EC()
{
  sub_255BDCAA8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255BDCAA8()
{
  if (!qword_26B2984F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298668);
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2984F8);
    }
  }
}

uint64_t _s16DurationSnapshotVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s16DurationSnapshotVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.DurationSnapshot()
{
  return &type metadata for NowPlayingViewModel.DurationSnapshot;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TimeControlAction()
{
  return &type metadata for NowPlayingViewModel.TimeControlAction;
}

uint64_t sub_255BDCBD4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255BDCC0C()
{
  return sub_255BDC258();
}

uint64_t sub_255BDCC14()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _s15TimeControlViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BDCC64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s21LegacyTimeControlViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s20FluidTimeControlViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255BDCCD8()
{
  unint64_t result = qword_26B298428;
  if (!qword_26B298428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298428);
  }
  return result;
}

uint64_t sub_255BDCD2C()
{
  return swift_deallocObject();
}

void sub_255BDCD54()
{
  sub_255BDFE50(319, &qword_26B29EF08, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F)
  {
    sub_255BDFE50(319, &qword_26B29B590, MEMORY[0x263F18460], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255BDCE94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = *(int *)(a3 + 48);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v13 = sub_255C7D668();
    char v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v20(v11, v12, v13);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
    *(void *)(v11 + *(int *)(v14 + 28)) = *(void *)(v12 + *(int *)(v14 + 28));
    uint64_t v15 = *(int *)(a3 + 52);
    uint64_t v16 = (void *)(v7 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_255BDD090(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7DC38();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255BDD1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v11 = sub_255C7D668();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  v18(v9, v10, v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  *(void *)(v9 + *(int *)(v12 + 28)) = *(void *)(v10 + *(int *)(v12 + 28));
  uint64_t v13 = *(int *)(a3 + 52);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_255C7DC38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255BDD36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 52);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_255A095A4(a1 + v12, &qword_26B29B588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BDD548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  *(void *)(v9 + *(int *)(v12 + 28)) = *(void *)(v10 + *(int *)(v12 + 28));
  uint64_t v13 = *(int *)(a3 + 52);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_255C7DC38();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255BDD69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 52);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_255A095A4(a1 + v12, &qword_26B29B588);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_255C7DC38();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255BDD858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BDD86C);
}

uint64_t sub_255BDD86C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 48);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 52);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_255BDD9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BDD9C0);
}

void *sub_255BDD9C0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 48);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 52);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_255BDDAF4(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 40);

  return sub_255AC0398(v2, v3);
}

uint64_t sub_255BDDB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 40);
  swift_retain();
  swift_unknownObjectRetain();
  sub_255AC0394(v5, v6);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t sub_255BDDBA0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 40);
  sub_255AC0394(v4, v5);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  sub_255AC0398(v6, v7);
  return a1;
}

uint64_t sub_255BDDC38(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_unknownObjectRelease();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5;
  sub_255AC0398(v6, v7);
  return a1;
}

uint64_t sub_255BDDC9C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255BDDCF8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_255BDDD58()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BDDE24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BDDE68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s21LegacyTimeControlViewV9TimedViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255BDDEC4()
{
  unint64_t result = qword_26B29EB00;
  if (!qword_26B29EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EB00);
  }
  return result;
}

unint64_t sub_255BDDF18()
{
  unint64_t result = qword_26B29EA78;
  if (!qword_26B29EA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EA78);
  }
  return result;
}

uint64_t _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BDDF9C()
{
  unint64_t v1 = (int *)(_s21LegacyTimeControlViewVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v3 = v0 + v2 + v1[14];
  uint64_t v4 = sub_255C7D668();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  swift_release();
  unint64_t v5 = v0 + v2 + v1[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7DC38();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255BDE138@<X0>(void (*a1)(char *, uint64_t *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  unint64_t v6 = v2[3];
  uint64_t v7 = *(void *)(_s21LegacyTimeControlViewVMa() - 8);
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)((char *)v2
                + ((*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));

  return sub_255BD53D0(a1, v8, v9, v5, v6, a2);
}

uint64_t sub_255BDE1D8()
{
  return sub_255BD3B0C(v0[4], v0[2], v0[3]);
}

uint64_t sub_255BDE1E4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = (int *)(_s21LegacyTimeControlViewVMa() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v7 = v0 + v6 + v5[14];
  uint64_t v8 = sub_255C7D668();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  swift_release();
  unint64_t v9 = v0 + v6 + v5[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7DC38();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255BDE418@<X0>(double *a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68) - 8);
  unint64_t v4 = ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
     + *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(_s21LegacyTimeControlViewVMa() - 8);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = v1 + ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_255BD6C40(v6, v7, a1);
}

uint64_t sub_255BDE514()
{
  uint64_t v1 = (int *)(_s21LegacyTimeControlViewVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v3 = v0 + v2 + v1[14];
  uint64_t v4 = sub_255C7D668();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  swift_release();
  unint64_t v5 = v0 + v2 + v1[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7DC38();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255BDE6B0()
{
  _s21LegacyTimeControlViewVMa();

  return sub_255BD6F9C();
}

uint64_t sub_255BDE740()
{
  return sub_255BDE770((uint64_t (*)(void, void, void, void, void, void))sub_255BD706C);
}

uint64_t sub_255BDE758()
{
  return sub_255BDE770((uint64_t (*)(void, void, void, void, void, void))sub_255BD710C);
}

uint64_t sub_255BDE770(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[4], v1[5], v1[6], v1[7], v1[2], v1[3]);
}

unint64_t sub_255BDE788()
{
  unint64_t result = qword_26B29EF38;
  if (!qword_26B29EF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EF38);
  }
  return result;
}

uint64_t sub_255BDE7DC@<X0>(unsigned char *a1@<X8>)
{
  sub_255B778A0();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BDE82C()
{
  return sub_255C7E8D8();
}

uint64_t sub_255BDE880@<X0>(uint64_t *a1@<X8>)
{
  return sub_255BD7E20(v1, a1);
}

uint64_t sub_255BDE88C(uint64_t a1)
{
  uint64_t v3 = *(void *)(_s21LegacyTimeControlViewVMa() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255BDAF40(a1, v4);
}

uint64_t objectdestroy_73Tm()
{
  uint64_t v1 = (int *)(_s21LegacyTimeControlViewVMa() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[14];
  uint64_t v4 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF00);
  swift_release();
  uint64_t v5 = v2 + v1[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7DC38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255BDEAB0()
{
  return sub_255C7FE78();
}

unint64_t sub_255BDEB44()
{
  unint64_t result = qword_26B29E930;
  if (!qword_26B29E930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29E928);
    sub_255BDEBB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29E930);
  }
  return result;
}

unint64_t sub_255BDEBB8()
{
  unint64_t result = qword_26B29E920;
  if (!qword_26B29E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29E920);
  }
  return result;
}

uint64_t sub_255BDEC0C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_255AC0398(*(void *)(v0 + 128), *(unsigned __int8 *)(v0 + 136));

  return swift_deallocObject();
}

uint64_t sub_255BDEC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255BD316C(a1, v2 + 32, *(void *)(v2 + 88), (_OWORD *)(v2 + 96), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_255BDEC74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 40);
  swift_unknownObjectRetain();
  swift_retain();
  sub_255AC0394(v2, v3);
  return a1;
}

uint64_t sub_255BDECC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_255BD4510(*(void **)(v1 + 32), a1);
}

uint64_t sub_255BDECD4()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_255AC0398(*(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));

  return swift_deallocObject();
}

uint64_t sub_255BDED20(uint64_t a1)
{
  return sub_255BD3CC4(a1, v1 + 4, v1[2], v1[3]);
}

uint64_t sub_255BDED2C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_255BDED64()
{
  sub_255BD3FF0(v0 + 16, *(void *)(v0 + 72));
}

void sub_255BDED70(Swift::Double *a1)
{
}

void sub_255BDED78(char *a1)
{
}

uint64_t sub_255BDED80()
{
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_255BDEDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_255BDEE04(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

void *sub_255BDEE7C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t sub_255BDEED4(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255BDEF30(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void sub_255BDEF8C()
{
  sub_255BDFE50(319, &qword_26B29B590, MEMORY[0x263F18460], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255BDFE50(319, qword_269F26348, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_255BDF0D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    uint64_t v9 = a3[10];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[11];
    uint64_t v14 = a3[12];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    v15[16] = v16[16];
    uint64_t v18 = (uint64_t *)((char *)v7 + v14);
    uint64_t v19 = (char *)a2 + v14;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v14 + 8);
    *uint64_t v18 = *(uint64_t *)((char *)a2 + v14);
    v18[1] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
    uint64_t v22 = (char *)v18 + v21;
    char v23 = &v19[v21];
    uint64_t v24 = sub_255C7D668();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[13];
    uint64_t v26 = (char *)v7 + v25;
    char v27 = (char *)a2 + v25;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    *((void *)v26 + 2) = *((void *)v27 + 2);
    v26[24] = v27[24];
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_255BDF2DC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DC38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
  uint64_t v8 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return swift_release();
}

void *sub_255BDF424(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[10];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  swift_retain();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7DC38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  v14[16] = v15[16];
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (char *)a2 + v13;
  uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
  *uint64_t v17 = *(void *)((char *)a2 + v13);
  v17[1] = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
  uint64_t v21 = (char *)v17 + v20;
  uint64_t v22 = &v18[v20];
  uint64_t v23 = sub_255C7D668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[13];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  *((void *)v25 + 2) = *((void *)v26 + 2);
  v25[24] = v26[24];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255BDF5E0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v6 = a3[10];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7DC38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  v11[16] = v12[16];
  uint64_t v13 = a3[12];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  swift_release();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_retain();
  swift_release();
  uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
  uint64_t v17 = &v14[v16];
  uint64_t v18 = &v15[v16];
  uint64_t v19 = sub_255C7D668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  swift_retain();
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  uint64_t v23 = *((void *)v22 + 2);
  v21[24] = v22[24];
  *((void *)v21 + 2) = v23;
  return a1;
}

_OWORD *sub_255BDF824(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[10];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7DC38();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  uint64_t v16 = (void *)((char *)a1 + v13);
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = *(void *)((char *)a2 + v13);
  uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
  *uint64_t v16 = v18;
  v16[1] = v19;
  uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = &v17[v20];
  uint64_t v23 = sub_255C7D668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[13];
  uint64_t v25 = (_OWORD *)((char *)a1 + v24);
  uint64_t v26 = (_OWORD *)((char *)a2 + v24);
  _OWORD *v25 = *v26;
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
  return a1;
}

void *sub_255BDF9A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v7 = a3[10];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_255A095A4((uint64_t)a1 + v7, &qword_26B29B588);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7DC38();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[11];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  v13[16] = v14[16];
  uint64_t v15 = a3[12];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_release();
  uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  uint64_t v21 = sub_255C7D668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[13];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *(void *)((char *)a1 + v22) = *(void *)v24;
  swift_release();
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_release();
  *((void *)v23 + 2) = *((void *)v24 + 2);
  unsigned char v23[24] = v24[24];
  return a1;
}

uint64_t sub_255BDFBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BDFBC4);
}

uint64_t sub_255BDFBC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[10];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[11] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[12];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_255BDFD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BDFD14);
}

uint64_t sub_255BDFD14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F25308);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[10];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[11] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26230);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[12];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_255BDFE50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255BDFEB4()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE0490()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE08B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE08FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE0940()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE0988(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BE09E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BE0A34()
{
  return sub_255BE0C88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255BD9040);
}

uint64_t sub_255BE0A50()
{
  return sub_255BE0C88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255BD9374);
}

uint64_t sub_255BE0A6C()
{
  return sub_255BE0C88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255BD945C);
}

uint64_t sub_255BE0A88()
{
  return sub_255BE0C88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255BD9630);
}

uint64_t objectdestroy_97Tm()
{
  uint64_t v1 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3 + *(int *)(v1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DC38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 48);
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F26230) + 32);
  uint64_t v8 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255BE0C70()
{
  return sub_255BE0C88((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255BD9798);
}

uint64_t sub_255BE0C88(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(_s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a1(v5, v2, v3);
}

uint64_t sub_255BE0D20()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255BE0D60(uint64_t a1)
{
  return sub_255BDA544(a1, (long long *)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_255BE0D70()
{
  unint64_t result = qword_269F263F0;
  if (!qword_269F263F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F263E0);
    sub_255BE0DEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F263F0);
  }
  return result;
}

unint64_t sub_255BE0DEC()
{
  unint64_t result = qword_269F263F8;
  if (!qword_269F263F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F263D8);
    sub_255A09998(&qword_269F26400, &qword_269F263D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F263F8);
  }
  return result;
}

uint64_t sub_255BE0E8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE113C()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE12C4@<X0>(unsigned char *a1@<X8>)
{
  sub_255A12CE4();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BE1314()
{
  return sub_255C7E8D8();
}

double DeviceMetrics.padding.getter@<D0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 18)) {
    sub_255BE5ABC((uint64_t)&v5);
  }
  else {
    sub_255BE59C0((uint64_t)&v5);
  }
  double result = *(double *)&v5;
  uint64_t v4 = v6;
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_255BE1424()
{
  return sub_255C7E668();
}

uint64_t sub_255BE1448(uint64_t a1)
{
  uint64_t v2 = sub_255C7DCC8();
  double v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_255C7E678();
}

uint64_t NowPlayingController.sharedViews.getter@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_unknownObjectRetain();
}

uint64_t NowPlayingViews.artwork.getter()
{
  sub_255AC5ADC((uint64_t)&v7);
  uint64_t v0 = v7;
  char v1 = v8;
  uint64_t v5 = v7;
  char v6 = v8;
  _s24HeaderArtworkPlaceholderVMa();
  swift_getWitnessTable();
  sub_255A20F54(&v5);
  sub_255A087D0(v0, v1);
  uint64_t v2 = v9;
  char v3 = v10;
  uint64_t v7 = v9;
  char v8 = v10;
  sub_255A20F54(&v7);
  return sub_255A087D0(v2, v3);
}

uint64_t NowPlayingViews.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void, void))(*(void *)(a1 + 24) + 208))(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t result = sub_255C7E628();
  *a2 = v3;
  a2[1] = result;
  a2[2] = v5;
  return result;
}

uint64_t sub_255BE1660()
{
  _s7ArtworkCMa();
  sub_255BE8750(&qword_26B299F60, (void (*)(uint64_t))_s7ArtworkCMa);

  return sub_255C7E2B8();
}

uint64_t sub_255BE16DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7E628();
  uint64_t v4 = v3;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_255BE172C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v34 = sub_255C7EA18();
  uint64_t v3 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v32 - v6;
  uint64_t v38 = sub_255C7DCC8();
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  _s36FullScreenContentView_CompactRegularVMa();
  _s37FullScreenContentView_RegularExtendedVMa();
  sub_255C7EBE8();
  sub_255C7EBE8();
  uint64_t v11 = sub_255C7FD58();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCD0);
  _OWORD v32[2] = v11;
  uint64_t v12 = sub_255C7E458();
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v35 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v36 = (char *)v32 - v15;
  uint64_t v42 = v9;
  uint64_t v43 = v10;
  uint64_t v44 = v32[1];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v54 = WitnessTable;
  uint64_t v55 = v17;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = MEMORY[0x263F1BA00];
  uint64_t v18 = swift_getWitnessTable();
  sub_255C7FD48();
  long long v48 = v56;
  uint64_t v49 = v57;
  __int16 v50 = v58;
  char v51 = v59;
  sub_255ABA66C((uint64_t)v7);
  uint64_t v19 = v33;
  uint64_t v20 = v34;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v33, *MEMORY[0x263F19968], v34);
  char v21 = sub_255C7DCB8();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v19, v20);
  v22(v7, v20);
  if (v21)
  {
    uint64_t v23 = v37;
    uint64_t v24 = v39;
    uint64_t v25 = v38;
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x263F184F8], v38);
  }
  else
  {
    uint64_t v24 = v39;
    sub_255ABC184(v39);
    uint64_t v25 = v38;
    uint64_t v23 = v37;
  }
  uint64_t v47 = v18;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v35;
  sub_255C7F658();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
  sub_255BE7FB4(v48, *((uint64_t *)&v48 + 1), v49, v50, v51);
  uint64_t v28 = sub_255A09998(&qword_26B29BCC8, &qword_26B29BCD0);
  uint64_t v45 = v26;
  uint64_t v46 = v28;
  swift_getWitnessTable();
  uint64_t v29 = v36;
  sub_255A20F54(v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v27, v12);
  sub_255A20F54(v29);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, v12);
}

uint64_t sub_255BE1CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  sub_255A0877C(*(void *)a1, v6);
  sub_255ABB578(v5, v6, v64);
  sub_255A087D0(v5, v6);
  uint64_t v7 = MEMORY[0x263F1BA00];
  if (v64[0] >= 2u)
  {
    if (v64[0] == 2)
    {
      sub_255B9FE40((uint64_t)&v60);
      long long v19 = v60;
      uint64_t v20 = v61;
      char v21 = v62;
      long long v47 = v60;
      uint64_t v48 = v61;
      char v49 = v62;
      uint64_t v22 = _s37FullScreenContentView_RegularExtendedVMa();
      swift_getWitnessTable();
      sub_255A20F54(&v47);
      sub_255A31D88(v19, *((uint64_t *)&v19 + 1), v20, v21);
      uint64_t v40 = *((void *)&v51 + 1);
      uint64_t v41 = v51;
      uint64_t v39 = v52;
      char v38 = v53;
      long long v47 = v51;
      uint64_t v48 = v52;
      char v49 = v53;
      sub_255A20F54(&v47);
      long long v23 = v60;
      uint64_t v24 = v61;
      LOBYTE(v20) = v62;
      long long v43 = v60;
      uint64_t v44 = v61;
      char v45 = v62;
      uint64_t v25 = _s36FullScreenContentView_CompactRegularVMa();
      swift_getWitnessTable();
      sub_255A44128((uint64_t)&v43, v25, v22);
      sub_255A31D88(v23, *((uint64_t *)&v23 + 1), v24, v20);
      long long v26 = v47;
      uint64_t v27 = v48;
      LOBYTE(v24) = v50;
      char v28 = v49;
      long long v43 = v47;
      uint64_t v44 = v48;
      char v45 = v49;
      char v46 = v50;
      uint64_t v29 = sub_255C7EBE8();
      uint64_t v7 = MEMORY[0x263F1BA00];
      swift_getWitnessTable();
      sub_255A44030((uint64_t)&v43, v29);
      sub_255BE7FC4(v26, *((uint64_t *)&v26 + 1), v27, v28, v24);
      sub_255A31D88(v41, v40, v39, v38);
    }
    else
    {
      _s36FullScreenContentView_CompactRegularVMa();
      _s37FullScreenContentView_RegularExtendedVMa();
      uint64_t v30 = sub_255C7EBE8();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v59 = swift_getWitnessTable();
      uint64_t v31 = swift_getWitnessTable();
      sub_255A44128(v31, v30, MEMORY[0x263F1BA08]);
    }
  }
  else
  {
    CGSizeMake(a2, a3);
    uint64_t v8 = _s36FullScreenContentView_CompactRegularVMa();
    uint64_t v9 = swift_getWitnessTable();
    uint64_t v10 = sub_255A20F54(v9);
    sub_255A20F54(v10);
    _s37FullScreenContentView_RegularExtendedVMa();
    uint64_t v11 = swift_getWitnessTable();
    sub_255A44030(v11, v8);
    uint64_t v13 = *((void *)&v47 + 1);
    uint64_t v12 = v47;
    uint64_t v14 = v48;
    char v15 = v50;
    char v16 = v49;
    long long v43 = v47;
    uint64_t v44 = v48;
    char v45 = v49;
    char v46 = v50;
    uint64_t v17 = sub_255C7EBE8();
    swift_getWitnessTable();
    sub_255A44030((uint64_t)&v43, v17);
    uint64_t v18 = v13;
    uint64_t v7 = MEMORY[0x263F1BA00];
    sub_255BE7FC4(v12, v18, v14, v16, v15);
  }
  uint64_t v32 = v61;
  __int16 v33 = v62;
  char v34 = v63;
  long long v42 = v60;
  _s36FullScreenContentView_CompactRegularVMa();
  _s37FullScreenContentView_RegularExtendedVMa();
  sub_255C7EBE8();
  sub_255C7EBE8();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v56 = v35;
  uint64_t v57 = v36;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = v7;
  swift_getWitnessTable();
  sub_255A20F54(&v60);
  return sub_255BE7FB4(v42, *((uint64_t *)&v42 + 1), v32, v33, v34);
}

uint64_t sub_255BE22B4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = swift_getKeyPath();
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = swift_getKeyPath();
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v2 = _s21FullScreenContentViewVMa();
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(v2 + 40));
  *uint64_t v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(v2 + 44));
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255BE2398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v4 = sub_255C7EC78();
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v77 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v75 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C805E8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v71 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255C7EBF8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  uint64_t v66 = v11;
  MEMORY[0x270FA5388](v10);
  __int16 v62 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26520);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v63 = v16;
  uint64_t v64 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v61 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26528);
  uint64_t v69 = *(void *)(v19 - 8);
  uint64_t v70 = v19;
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26530);
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26538);
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26540);
  double v24 = MEMORY[0x270FA5388](v74);
  uint64_t v76 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _OWORD *, uint64_t, double))(v13 + 16))((char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1, v24);
  unint64_t v26 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = *(void *)(a1 + 24);
  *(void *)(v27 + 16) = v28;
  *(void *)(v27 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v27 + v26, (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v81 = v28;
  uint64_t v82 = v29;
  uint64_t v83 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F26548);
  sub_255BE822C();
  uint64_t v30 = v61;
  sub_255C7FEA8();
  uint64_t v31 = v62;
  sub_255C7E5F8();
  sub_255A09998(&qword_269F26568, &qword_269F26520);
  sub_255BE8750(&qword_26B29D388, MEMORY[0x263F19B68]);
  uint64_t v32 = v63;
  uint64_t v33 = v65;
  sub_255C7F688();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v32);
  char v34 = sub_255C7F1A8();
  long long v35 = v2[4];
  _OWORD v100[2] = v2[3];
  v101[0] = v35;
  *(_OWORD *)((char *)v101 + 10) = *(_OWORD *)((char *)v2 + 74);
  long long v36 = v2[2];
  v100[0] = v2[1];
  v100[1] = v36;
  sub_255A1D4DC((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v92);
  sub_255A1D4DC((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  long long v84 = v92;
  char v85 = v93;
  __int16 v86 = v94;
  uint64_t v87 = v95;
  char v88 = v96;
  long long v89 = v97;
  long long v90 = v98;
  char v91 = v99;
  sub_255BE37A4();
  if (qword_269F201D0 != -1) {
    swift_once();
  }
  sub_255C7DC08();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v69;
  uint64_t v45 = v70;
  long long v47 = v67;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v21, v70);
  uint64_t v48 = &v47[*(int *)(v68 + 36)];
  *uint64_t v48 = v34;
  *((void *)v48 + 1) = v38;
  *((void *)v48 + 2) = v40;
  *((void *)v48 + 3) = v42;
  *((void *)v48 + 4) = v44;
  v48[40] = 0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v45);
  sub_255C80588();
  uint64_t v49 = (uint64_t)v47;
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v50 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  *(void *)&long long v92 = sub_255C80648();
  *((void *)&v92 + 1) = v51;
  sub_255BE82CC();
  sub_255A1D78C();
  uint64_t v52 = (uint64_t)v72;
  sub_255C7F868();
  swift_bridgeObjectRelease();
  sub_255A095A4(v49, &qword_269F26530);
  id v53 = objc_msgSend(self, sel_mainBundle);
  uint64_t v54 = sub_255B4C6B8();
  uint64_t v56 = v55;

  *(void *)&long long v92 = v54;
  *((void *)&v92 + 1) = v56;
  sub_255C806E8();
  sub_255C806E8();
  sub_255BE83F0();
  uint64_t v57 = (uint64_t)v76;
  sub_255C7F978();
  swift_bridgeObjectRelease();
  sub_255A095A4(v52, &qword_269F26538);
  __int16 v58 = v77;
  sub_255C7EC68();
  sub_255BE8418(&qword_269F26580, &qword_269F26540, (void (*)(void))sub_255BE83F0);
  sub_255BE8750(&qword_269F25FD0, MEMORY[0x263F19CE8]);
  uint64_t v59 = v80;
  sub_255C7F638();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v58, v59);
  return sub_255A095A4(v57, &qword_269F26540);
}

uint64_t sub_255BE2D30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_255C23448(*a1);
  unsigned __int8 v6 = 0;
  swift_unknownObjectRetain();
  NowPlayingController.transition(to:animated:)(&v6, 1, a2, a3);

  return swift_unknownObjectRelease();
}

uint64_t sub_255BE2DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v23 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26560);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_255C7FC78();
  if (qword_269F201B8 != -1) {
    swift_once();
  }
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v8 = v26;
  char v9 = v27;
  uint64_t v10 = v28;
  char v11 = v29;
  uint64_t v12 = v30;
  uint64_t v21 = v31;
  uint64_t v13 = sub_255C801D8();
  uint64_t v15 = v14;
  sub_255BE2F44(v23, v24, v25, (uint64_t)v7);
  uint64_t v16 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *uint64_t v16 = v13;
  v16[1] = v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26548);
  sub_255A09540((uint64_t)v7, a4 + *(int *)(v17 + 36), &qword_269F26560);
  *(void *)a4 = v22;
  *(void *)(a4 + 8) = v8;
  *(unsigned char *)(a4 + 16) = v9;
  *(void *)(a4 + 24) = v10;
  *(unsigned char *)(a4 + 32) = v11;
  uint64_t v18 = v21;
  *(void *)(a4 + 40) = v12;
  *(void *)(a4 + 48) = v18;
  return sub_255A095A4((uint64_t)v7, &qword_269F26560);
}

uint64_t sub_255BE2F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v76 = a1;
  uint64_t v80 = a4;
  uint64_t v4 = sub_255C7EA18();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v73 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v72 = (uint64_t)&v62 - v7;
  uint64_t v8 = sub_255C7DCC8();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v79 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26588);
  MEMORY[0x270FA5388](v65);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C801A8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = sub_255C80038();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC60);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26590);
  MEMORY[0x270FA5388](v63);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F26598);
  MEMORY[0x270FA5388](v66);
  uint64_t v69 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F265A0);
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = (uint64_t)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *MEMORY[0x263F19860];
  uint64_t v30 = sub_255C7E988();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v21, v29, v30);
  if (qword_269F201C0 != -1) {
    swift_once();
  }
  uint64_t v77 = v10;
  if (qword_269F201C8 != -1) {
    swift_once();
  }
  sub_255C801F8();
  sub_255C7DFE8();
  sub_255A395C4((uint64_t)v21, (uint64_t)v24);
  uint64_t v31 = &v24[*(int *)(v22 + 36)];
  long long v32 = v82;
  *(_OWORD *)uint64_t v31 = v81;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v83;
  sub_255A38C38((uint64_t)v21);
  sub_255C80178();
  id v33 = objc_msgSend(self, sel_systemGrayColor);
  uint64_t v34 = MEMORY[0x25A295490](v33);
  long long v35 = v64;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v64, v18, v13);
  uint64_t v36 = v65;
  uint64_t v37 = (uint64_t *)&v12[*(int *)(v65 + 56)];
  *uint64_t v37 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v35, v13);
  *(void *)&v12[*(int *)(v36 + 52)] = v34;
  sub_255A10514((uint64_t)v12, (uint64_t)&v26[*(int *)(v63 + 36)], &qword_269F26588);
  sub_255A09540((uint64_t)v24, (uint64_t)v26, &qword_26B29EC60);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  sub_255A095A4((uint64_t)v24, &qword_26B29EC60);
  uint64_t KeyPath = swift_getKeyPath();
  _s19HeaderDismissButtonVMa();
  uint64_t v39 = v72;
  sub_255ABA66C(v72);
  uint64_t v41 = v73;
  uint64_t v40 = v74;
  uint64_t v42 = v75;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, *MEMORY[0x263F19968], v75);
  LOBYTE(v34) = sub_255C7DCB8();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
  v43(v41, v42);
  v43((char *)v39, v42);
  if (v34)
  {
    uint64_t v45 = (uint64_t)v77;
    uint64_t v44 = v78;
    uint64_t v46 = v79;
    (*(void (**)(char *, void, uint64_t))(v78 + 104))(v77, *MEMORY[0x263F18508], v79);
  }
  else
  {
    uint64_t v45 = (uint64_t)v77;
    sub_255ABC184((uint64_t)v77);
    uint64_t v44 = v78;
    uint64_t v46 = v79;
  }
  uint64_t v47 = (uint64_t)v69;
  uint64_t v48 = (uint64_t *)&v69[*(int *)(v66 + 36)];
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BCD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))((char *)v48 + *(int *)(v49 + 28), v45, v46);
  *uint64_t v48 = KeyPath;
  sub_255A09540((uint64_t)v26, v47, &qword_269F26590);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
  sub_255A095A4((uint64_t)v26, &qword_269F26590);
  if (qword_269F201D0 != -1) {
    swift_once();
  }
  char v50 = sub_255C7F198();
  sub_255C7DC08();
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v59 = v68;
  sub_255A09540(v47, v68, &qword_269F26598);
  uint64_t v60 = v59 + *(int *)(v67 + 36);
  *(unsigned char *)uint64_t v60 = v50;
  *(void *)(v60 + 8) = v52;
  *(void *)(v60 + 16) = v54;
  *(void *)(v60 + 24) = v56;
  *(void *)(v60 + 32) = v58;
  *(unsigned char *)(v60 + 40) = 0;
  sub_255A095A4(v47, &qword_269F26598);
  return sub_255A10514(v59, v80, &qword_269F265A0);
}

void sub_255BE37A4()
{
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
    case 2:
    case 3:
      return;
    default:
      if (*(unsigned char *)(v0 + 17))
      {
        if (*(unsigned char *)(v0 + 17) == 1)
        {
          id v1 = objc_msgSend(self, sel_currentTraitCollection);
          objc_msgSend(v1, sel_displayScale);
        }
      }
      break;
  }
}

uint64_t sub_255BE38A8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_255C7E628();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = swift_getKeyPath();
  uint64_t v3 = _s19HeaderDismissButtonVMa();
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_WORD *)(a1 + 88) = 0;
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(v3 + 40));
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v3 + 44));
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255BE3998@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C805E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v30 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_255C7E9F8();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s27DefaultArtworkContainerViewVMa();
  swift_getWitnessTable();
  sub_255C7E598();
  uint64_t v12 = sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v13 = sub_255C7E458();
  uint64_t v35 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v33 = (char *)&v30 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v34 = (char *)&v30 - v19;
  uint64_t v44 = sub_255C7FC78();
  sub_255C801D8();
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v20 = MEMORY[0x263F1B428];
  sub_255C7FAC8();
  swift_release();
  sub_255C7E9B8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v42 = v20;
  uint64_t v43 = WitnessTable;
  uint64_t v22 = swift_getWitnessTable();
  sub_255C7F958();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  (*(void (**)(void *, uint64_t))(*(void *)(v12 - 8) + 8))(v45, v12);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v23 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  v45[0] = sub_255C80648();
  v45[1] = v24;
  sub_255A1D78C();
  uint64_t v25 = v33;
  sub_255C7E3C8();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v35 + 8);
  v26(v15, v13);
  uint64_t v27 = sub_255BE8750((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v40 = v22;
  uint64_t v41 = v27;
  swift_getWitnessTable();
  uint64_t v28 = v34;
  sub_255A20F54(v25);
  v26(v25, v13);
  sub_255A20F54(v28);
  return ((uint64_t (*)(char *, uint64_t))v26)(v28, v13);
}

uint64_t sub_255BE3EC4()
{
  sub_255ACD0C4((uint64_t)v3);
  uint64_t v0 = _s27DefaultArtworkContainerViewVMa();
  swift_getWitnessTable();
  sub_255A20F54(v3);
  id v1 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v0 - 8) + 8);
  v1(v3, v0);
  sub_255A20F54(v4);
  return ((uint64_t (*)(unsigned char *, uint64_t))v1)(v4, v0);
}

uint64_t sub_255BE3FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255BE3998(*(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_255BE3FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  _s19DefaultMetadataViewVMa();
  sub_255C7F0D8();
  sub_255C7E458();
  swift_getAssociatedTypeWitness();
  uint64_t v40 = v3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  _s15ContextMenuViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v5 = sub_255C7FED8();
  uint64_t WitnessTable = swift_getWitnessTable();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v38 = v5;
  uint64_t v39 = WitnessTable;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = sub_255C7E598();
  uint64_t v7 = sub_255C7E458();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = sub_255C7E458();
  uint64_t v27 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v23 - v14;
  long long v23 = *v2;
  uint64_t v16 = *((void *)v2 + 2);
  char v17 = *((unsigned char *)v2 + 24);
  uint64_t v38 = sub_255C7FC78();
  sub_255C801E8();
  uint64_t v29 = v4;
  uint64_t v30 = v3;
  long long v31 = v23;
  uint64_t v32 = v16;
  char v33 = v17;
  uint64_t v18 = MEMORY[0x263F1B428];
  sub_255C7FAC8();
  swift_release();
  if (qword_26B29EAB0 != -1) {
    swift_once();
  }
  sub_255C801F8();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v36 = v18;
  uint64_t v37 = v19;
  uint64_t v20 = swift_getWitnessTable();
  sub_255C7FA38();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  uint64_t v34 = v20;
  uint64_t v35 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  sub_255A20F54(v12);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v27 + 8);
  v21(v12, v10);
  sub_255A20F54(v15);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, v10);
}

uint64_t sub_255BE4480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v36 = a1;
  uint64_t v43 = a7;
  int v35 = a4 & 1;
  uint64_t v10 = sub_255C7EFA8();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19DefaultMetadataViewVMa();
  sub_255C7F0D8();
  sub_255C7E458();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = a5;
  uint64_t v44 = a5;
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v39 = a6;
  uint64_t v46 = a6;
  uint64_t v47 = AssociatedConformanceWitness;
  _s15ContextMenuViewVMa();
  sub_255C7E458();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_255C80318();
  v33[0] = swift_getWitnessTable();
  v33[1] = v14;
  uint64_t v15 = sub_255C7FED8();
  uint64_t v34 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)v33 - v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v44 = v15;
  uint64_t v45 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v20 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v33 - v24;
  LOBYTE(a6) = v35;
  sub_255A0877C(a3, v35);
  sub_255ABB578(a3, a6, &v44);
  sub_255A087D0(a3, a6);
  if (v44 == 1) {
    uint64_t v26 = sub_255C7E8F8();
  }
  else {
    uint64_t v26 = sub_255C7E928();
  }
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = v39;
  v33[-6] = v37;
  v33[-5] = v27;
  uint64_t v28 = v38;
  v33[-4] = v36;
  v33[-3] = v28;
  v33[-2] = a3;
  LOBYTE(v33[-1]) = v29;
  sub_255C7FEC8();
  uint64_t v30 = v40;
  sub_255C7EF98();
  sub_255C7F8F8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  uint64_t v44 = v15;
  uint64_t v45 = WitnessTable;
  swift_getOpaqueTypeConformance2();
  sub_255A20F54(v22);
  long long v31 = *(void (**)(char *, uint64_t))(v20 + 8);
  v31(v22, OpaqueTypeMetadata2);
  sub_255A20F54(v25);
  return ((uint64_t (*)(char *, uint64_t))v31)(v25, OpaqueTypeMetadata2);
}

uint64_t sub_255BE494C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v72 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v67 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v65 = (char *)v52 - v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  long long v81 = a3;
  uint64_t v82 = AssociatedTypeWitness;
  uint64_t v83 = a4;
  uint64_t v84 = AssociatedConformanceWitness;
  uint64_t v62 = _s15ContextMenuViewVMa();
  uint64_t v70 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v59 = (void *)((char *)v52 - v11);
  uint64_t v63 = sub_255C7E458();
  uint64_t v71 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v60 = (char *)v52 - v12;
  sub_255C7F0D8();
  uint64_t v13 = sub_255C7E458();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v68 = v13;
  uint64_t v69 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v64 = (char *)v52 - v17;
  uint64_t v18 = _s19DefaultMetadataViewVMa();
  uint64_t v19 = sub_255C7E458();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v75 = v19;
  uint64_t v76 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v74 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v77 = (char *)v52 - v23;
  uint64_t v73 = *(void *)(a4 + 8);
  v52[1] = a2;
  sub_255C23448(a1);
  v52[0] = a4;
  uint64_t v24 = *(void (**)(char *, uint64_t))(a4 + 208);
  swift_unknownObjectRetain();
  v24(a3, a4);
  uint64_t v53 = v24;
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_255C23448(a1);
  swift_unknownObjectRetain();
  uint64_t v25 = v52[0];
  v24(a3, v52[0]);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  uint64_t v26 = v25;
  sub_255A46EBC((uint64_t)&v81);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v28 = v74;
  sub_255C7F998();
  (*(void (**)(char **, uint64_t))(*(void *)(v18 - 8) + 8))(&v81, v18);
  uint64_t v55 = sub_255BE8750((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  v80[6] = WitnessTable;
  v80[7] = v55;
  uint64_t v54 = MEMORY[0x263F18E48];
  uint64_t v29 = v75;
  uint64_t v56 = swift_getWitnessTable();
  sub_255A20F54(v28);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v76 + 8);
  uint64_t v57 = v76 + 8;
  uint64_t v58 = v30;
  v30(v28, v29);
  sub_255C23448(a1);
  swift_unknownObjectRetain();
  v53(a3, v26);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_255C23448(a1);
  uint64_t v31 = v26;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 280);
  swift_unknownObjectRetain();
  uint64_t v33 = (uint64_t)v65;
  v32(a3, v31);
  swift_unknownObjectRelease();
  uint64_t v34 = v59;
  sub_255AB11EC(v33, v67, v59);
  uint64_t v35 = sub_255C7E8F8();
  uint64_t v36 = v62;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = v60;
  MEMORY[0x25A295000](v35, sub_255BE5144, 0, v36, v37);
  (*(void (**)(uint64_t *, uint64_t))(v70 + 8))(v34, v36);
  unint64_t v39 = sub_255A7FF44();
  v80[4] = v37;
  v80[5] = v39;
  uint64_t v40 = v63;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v61;
  sub_255C7F998();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v40);
  v80[2] = v41;
  v80[3] = v55;
  uint64_t v43 = v68;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v64;
  sub_255A20F54(v42);
  uint64_t v46 = v69;
  uint64_t v47 = *(void (**)(char *, uint64_t))(v69 + 8);
  v47(v42, v43);
  uint64_t v49 = v74;
  uint64_t v48 = v75;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v74, v77, v75);
  long long v81 = v49;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v42, v45, v43);
  uint64_t v82 = (uint64_t)v42;
  v80[0] = v48;
  v80[1] = v43;
  uint64_t v78 = v56;
  uint64_t v79 = v44;
  sub_255AF64A0((uint64_t)&v81, 2uLL, (uint64_t)v80);
  v47(v45, v43);
  char v50 = v58;
  v58(v77, v48);
  v47(v42, v43);
  return v50(v49, v48);
}

double sub_255BE5144()
{
  uint64_t v0 = sub_255C7E8F8();
  return MEMORY[0x25A293BB0](v0) + 13.5;
}

uint64_t sub_255BE5178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v19[0] = a3;
  v19[1] = a6;
  _s18HeaderMetadataViewVMa();
  v19[10] = a4;
  v19[11] = swift_getAssociatedTypeWitness();
  unsigned char v19[12] = a5;
  v19[13] = swift_getAssociatedConformanceWitness();
  _s15ContextMenuViewVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v10 = sub_255C7FED8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v19 - v15;
  sub_255C7E928();
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a1;
  _OWORD v19[7] = a2;
  v19[8] = v19[0];
  sub_255C7FEC8();
  swift_getWitnessTable();
  sub_255A20F54(v13);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  sub_255A20F54(v16);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_255BE53DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v29 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v26 = (char *)&v23 - v8;
  *(void *)&long long v27 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v40 = a2;
  *((void *)&v40 + 1) = AssociatedTypeWitness;
  *(void *)uint64_t v41 = a3;
  *(void *)&_OWORD v41[8] = v27;
  uint64_t v9 = _s15ContextMenuViewVMa();
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v23 = (char *)&v23 - v13;
  swift_retain();
  sub_255A47804((uint64_t)&v40);
  uint64_t v44 = *(void *)&v41[16];
  char v45 = v41[24];
  long long v42 = v40;
  long long v43 = *(_OWORD *)v41;
  long long v34 = v40;
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v41;
  *(_OWORD *)&v35[9] = *(_OWORD *)&v41[9];
  uint64_t v24 = _s18HeaderMetadataViewVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A20F54(&v34);
  sub_255AE01D4((uint64_t)&v42);
  sub_255AE01A8((uint64_t)&v43);
  sub_255BE6040((uint64_t)&v44);
  swift_retain();
  sub_255C23448(a1);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(a3 + 280);
  swift_unknownObjectRetain();
  uint64_t v15 = (uint64_t)v26;
  v14(a2, a3);
  swift_unknownObjectRelease();
  sub_255AB11EC(v15, AssociatedTypeWitness, v11);
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = v23;
  sub_255A20F54(v11);
  uint64_t v18 = v28;
  uint64_t v19 = *(void (**)(uint64_t *, uint64_t))(v28 + 8);
  v19(v11, v9);
  uint64_t v20 = v38;
  LOBYTE(a2) = v39;
  long long v34 = v36;
  long long v27 = v37;
  *(_OWORD *)uint64_t v35 = v37;
  *(void *)&v35[16] = v38;
  unsigned char v35[24] = v39;
  v33[0] = &v34;
  (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 16))(v11, v17, v9);
  v33[1] = v11;
  swift_unknownObjectRetain();
  swift_retain();
  sub_255A52558(v20, a2);
  v32[0] = v24;
  v32[1] = v9;
  uint64_t v30 = WitnessTable;
  uint64_t v31 = v16;
  sub_255AF64A0((uint64_t)v33, 2uLL, (uint64_t)v32);
  v19((uint64_t *)v17, v9);
  swift_release();
  swift_unknownObjectRelease();
  sub_255A525AC(v38, v39);
  v19(v11, v9);
  uint64_t v21 = *(void *)&v35[16];
  LOBYTE(v9) = v35[24];
  swift_release();
  swift_unknownObjectRelease();
  return sub_255A525AC(v21, v9);
}

uint64_t sub_255BE5864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255BE5178(*v2, v2[1], v2[2], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

void sub_255BE5878()
{
  qword_26B29EAA8 = 0x4050000000000000;
}

void sub_255BE5888()
{
  qword_269F33378 = 0x4040000000000000;
}

void sub_255BE5898()
{
  qword_269F33380 = 0x4041800000000000;
}

void sub_255BE58AC()
{
  qword_269F33388 = 0x4014000000000000;
}

void sub_255BE58BC()
{
  qword_269F33390 = 0x4024000000000000;
}

double DeviceMetrics.Padding.top.getter()
{
  return *(double *)v0;
}

double DeviceMetrics.Padding.horizontal.getter()
{
  return *(double *)(v0 + 8);
}

double DeviceMetrics.Padding.bottom.getter()
{
  return *(double *)(v0 + 16);
}

void sub_255BE58E4()
{
  xmmword_269F26408 = 0uLL;
  qword_269F26418 = 0;
}

double static DeviceMetrics.Padding.zero.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_269F201D8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_269F26418;
  *(_OWORD *)a1 = xmmword_269F26408;
  *(double *)(a1 + 16) = result;
  return result;
}

BOOL static DeviceMetrics.Padding.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL sub_255BE5990(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_255BE59C0(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 17);
  if (v3 == 9) {
    goto LABEL_2;
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if ((*(unsigned char *)(v1 + 32) & 1) == 0 && v5 == 1 || !*(unsigned char *)(v1 + 17))
  {
    double v4 = 33.0;
    goto LABEL_17;
  }
  if (v3 != 3 || (v5 ? (char v6 = 1) : (char v6 = *(unsigned char *)(v1 + 32)), (v6 & 1) != 0))
  {
LABEL_2:
    double v4 = 19.0;
  }
  else
  {
    id v7 = objc_msgSend(self, sel_currentTraitCollection);
    objc_msgSend(v7, sel_displayScale);
    double v9 = v8;

    double v10 = 1.0;
    if (v9 >= 1.0)
    {
      double v10 = v9;
      if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
      {
        double v10 = 1.0;
        if ((*(void *)&v9 & 0xFFFFFFFFFFFFFLL) == 0) {
          double v10 = v9;
        }
      }
    }
    double v4 = 1.0 / v10 + 17.0;
  }
LABEL_17:
  *(_OWORD *)a1 = xmmword_255C94730;
  *(double *)(a1 + 16) = v4;
}

void sub_255BE5ABC(uint64_t a1@<X8>)
{
  unsigned int v3 = *(unsigned __int8 *)(v1 + 17);
  int v4 = *(unsigned __int8 *)(v1 + 18);
  if (v4 == 1)
  {
    double v5 = 25.0;
    double v6 = 80.0;
    *(double *)&uint64_t v7 = 79.0;
    switch(*(unsigned char *)(v1 + 17))
    {
      case 0:
      case 3:
        break;
      case 1:
      case 2:
      case 4:
        double v6 = 80.0;
        double v5 = 45.0;
        break;
      case 5:
        id v12 = objc_msgSend(self, sel_currentTraitCollection);
        objc_msgSend(v12, sel_displayScale);
        double v14 = v13;

        double v15 = 1.0;
        if (v14 >= 1.0)
        {
          double v15 = v14;
          if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
          {
            double v15 = 1.0;
            if ((*(void *)&v14 & 0xFFFFFFFFFFFFFLL) == 0) {
              double v15 = v14;
            }
          }
        }
        double v6 = 1.0 / v15 + 80.0;
        break;
      case 6:
        goto LABEL_14;
      default:
        *(double *)&uint64_t v7 = 80.0;
LABEL_14:
        double v5 = 27.0;
        double v6 = *(double *)&v7;
        break;
    }
  }
  else
  {
    id v8 = objc_msgSend(self, sel_currentTraitCollection);
    objc_msgSend(v8, sel_displayScale);
    double v10 = v9;

    double v11 = 1.0;
    if (v10 >= 1.0)
    {
      double v11 = v10;
      if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
      {
        double v11 = 1.0;
        if ((*(void *)&v10 & 0xFFFFFFFFFFFFFLL) == 0) {
          double v11 = v10;
        }
      }
    }
    double v6 = 1.0 / v11 + 54.0;
    double v5 = 0.0;
    if (v4 && v4 != 3)
    {
      if (v3 <= 4 && ((1 << v3) & 0x16) != 0) {
        double v5 = 34.0;
      }
      else {
        double v5 = 14.0;
      }
    }
  }
  *(void *)a1 = 0;
  *(double *)(a1 + 8) = v6;
  *(double *)(a1 + 16) = v5;
}

uint64_t type metadata accessor for NowPlayingViews()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for DeviceMetrics.Padding()
{
  return &type metadata for DeviceMetrics.Padding;
}

uint64_t sub_255BE5CE8(void *a1)
{
  return get_witness_table_11MediaCoreUI20NowPlayingControllerRzlAA0dE4ViewV24HeaderArtworkPlaceholderVyx_G05SwiftC00G0HPyHCTm(a1, (void (*)(uint64_t, void, void))_s24HeaderArtworkPlaceholderVMa);
}

uint64_t sub_255BE5D14(void *a1)
{
  return get_witness_table_11MediaCoreUI20NowPlayingControllerRzlAA0dE4ViewV24HeaderArtworkPlaceholderVyx_G05SwiftC00G0HPyHCTm(a1, (void (*)(uint64_t, void, void))_s32HeaderMetadataAndContextMenuViewVMa);
}

uint64_t get_witness_table_11MediaCoreUI20NowPlayingControllerRzlAA0dE4ViewV24HeaderArtworkPlaceholderVyx_G05SwiftC00G0HPyHCTm(void *a1, void (*a2)(uint64_t, void, void))
{
  a2(255, *a1, a1[1]);

  return swift_getWitnessTable();
}

uint64_t _s32HeaderMetadataAndContextMenuViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BE5DA8()
{
  swift_release();

  return swift_unknownObjectRelease();
}

void *sub_255BE5DE4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_255BE5E24(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_255BE5E8C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t sub_255BE5ED4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s19HeaderDismissButtonVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BE5F40()
{
  return sub_255C7E668();
}

uint64_t sub_255BE5F7C@<X0>(unsigned char *a1@<X8>)
{
  sub_255A12CE4();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BE5FCC()
{
  return sub_255C7E8D8();
}

uint64_t _s21FullScreenContentViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BE6030@<X0>(uint64_t a1@<X8>)
{
  return sub_255BE53DC(v1[5], v1[2], v1[3], a1);
}

uint64_t sub_255BE6040(uint64_t a1)
{
  return a1;
}

double sub_255BE6070(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 17);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 18);
  if (qword_269F201C8 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_269F33388;
  double v4 = 0.0;
  switch(v2)
  {
    case 1:
      goto LABEL_11;
    case 2:
      double v4 = 6.0;
      if (v1 < 3) {
        double v4 = 12.0;
      }
      break;
    case 3:
      return v3 + v4;
    default:
      if (v1)
      {
        if (v1 == 1)
        {
          id v5 = objc_msgSend(self, sel_currentTraitCollection);
          objc_msgSend(v5, sel_displayScale);
          double v7 = v6;

          double v8 = 1.0;
          if (v7 >= 1.0)
          {
            double v8 = v7;
            if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
            {
              double v8 = 1.0;
              if ((*(void *)&v7 & 0xFFFFFFFFFFFFFLL) == 0) {
                double v8 = v7;
              }
            }
          }
          double v4 = 1.0 / v8 + 5.0;
        }
        else
        {
LABEL_11:
          double v4 = 6.0;
        }
      }
      else
      {
        double v4 = 12.0;
      }
      break;
  }
  return v3 + v4;
}

void sub_255BE61B4()
{
}

uint64_t sub_255BE61C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    uint64_t v8 = a2[3];
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v12 = a2[7];
    uint64_t v25 = a2[8];
    uint64_t v26 = v7;
    uint64_t v13 = a2[10];
    uint64_t v27 = a2[9];
    char v14 = *((unsigned char *)a2 + 88);
    char v15 = *((unsigned char *)a2 + 89);
    swift_unknownObjectRetain();
    sub_255A1CFDC(v26, v8, v9, v10, v11, v12, v25, v27, v13, v14, v15);
    *(void *)(a1 + 16) = v26;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v25;
    *(void *)(a1 + 72) = v27;
    *(void *)(a1 + 80) = v13;
    *(unsigned char *)(a1 + 88) = v14;
    uint64_t v16 = *(int *)(a3 + 40);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    *(unsigned char *)(a1 + 89) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(int *)(a3 + 44);
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BE642C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  sub_255A1D054(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88), *(unsigned char *)(a1 + 89));
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA18();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255BE6594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 72);
  char v12 = *(unsigned char *)(a2 + 88);
  char v13 = *(unsigned char *)(a2 + 89);
  swift_unknownObjectRetain();
  sub_255A1CFDC(v24, v6, v7, v8, v9, v10, v23, v25, v11, v12, v13);
  *(void *)(a1 + 16) = v24;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v23;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v12;
  uint64_t v14 = *(int *)(a3 + 40);
  char v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *(unsigned char *)(a1 + 89) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_255C7DCC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *char v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = *(int *)(a3 + 44);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255BE67A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v34 = *(void *)(a2 + 80);
  char v35 = *(unsigned char *)(a2 + 88);
  char v36 = *(unsigned char *)(a2 + 89);
  sub_255A1CFDC(v5, v6, v7, v8, v9, v10, v12, v11, v34, v35, v36);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  char v22 = *(unsigned char *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 89);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v34;
  *(unsigned char *)(a1 + 88) = v35;
  *(unsigned char *)(a1 + 89) = v36;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  if (a1 != a2)
  {
    uint64_t v24 = *(int *)(a3 + 40);
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    sub_255A095A4(a1 + v24, &qword_26B29B598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = *(int *)(a3 + 44);
    uint64_t v29 = (void *)(a1 + v28);
    uint64_t v30 = (void *)(a2 + v28);
    sub_255A095A4(a1 + v28, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      void *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_255BE6A10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  *(_OWORD *)((char *)a1 + 74) = *(_OWORD *)((char *)a2 + 74);
  long long v7 = a2[1];
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_255C7DCC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 44);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255BE6BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  char v6 = *(unsigned char *)(a2 + 88);
  char v7 = *(unsigned char *)(a2 + 89);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v16 = *(void *)(a1 + 80);
  char v17 = *(unsigned char *)(a1 + 88);
  char v18 = *(unsigned char *)(a1 + 89);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v6;
  *(unsigned char *)(a1 + 89) = v7;
  sub_255A1D054(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = *(int *)(a3 + 40);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_255A095A4(a1 + v19, &qword_26B29B598);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_255C7DCC8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    uint64_t v24 = *(int *)(a3 + 44);
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (const void *)(a2 + v24);
    sub_255A095A4(a1 + v24, (uint64_t *)&unk_26B298500);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255BE6DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BE6DE0);
}

uint64_t sub_255BE6DE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 40);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      char v17 = (char *)a1 + *(int *)(a3 + 44);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_255BE6F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BE6F34);
}

void *sub_255BE6F34(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 40);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 44);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_255BE7068()
{
}

void sub_255BE7078()
{
  sub_255BBC9F8(319, (unint64_t *)&qword_26B29B5A0, MEMORY[0x263F18520]);
  if (v0 <= 0x3F)
  {
    sub_255BBC9F8(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_255BE717C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_255A0877C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_255A0877C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(int *)(a3 + 40);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 44);
    char v17 = (void *)(a1 + v16);
    char v18 = (void *)(a2 + v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *char v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BE7368(uint64_t a1, uint64_t a2)
{
  sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_255A087D0(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA18();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255BE74A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_255A0877C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_255C7DCC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *uint64_t v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255BE763C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255A087D0(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_255A0877C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_255A087D0(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 40);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_255A095A4(a1 + v14, &qword_26B29B598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(int *)(a3 + 44);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_255A095A4(a1 + v18, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255BE7810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 40);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7DCC8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = (void *)(a1 + v11);
  char v13 = (const void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255BE79AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255A087D0(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_255A087D0(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 40);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    sub_255A095A4(a1 + v13, &qword_26B29B598);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_255C7DCC8();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = *(int *)(a3 + 44);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (char *)a2 + v18;
    sub_255A095A4(a1 + v18, (uint64_t *)&unk_26B298500);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_255C7EA18();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255BE7B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255BE7B9C);
}

uint64_t sub_255BE7B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 40);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255BE7CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255BE7CDC);
}

uint64_t sub_255BE7CDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 40);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_255BE7E0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE7F20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE7F64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE7FA8()
{
  return sub_255BE1CE4(v0[4], v0[2], v0[3]);
}

uint64_t sub_255BE7FB4(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4, char a5)
{
  if ((a5 & 1) == 0) {
    return sub_255BE7FC4(result, a2, a3, a4, HIBYTE(a4) & 1);
  }
  return result;
}

uint64_t sub_255BE7FC4(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if (a5) {
    return sub_255A31D88(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_255BE7FD4()
{
  uint64_t v1 = _s19HeaderDismissButtonVMa();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_unknownObjectRelease();
  sub_255A1D054(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(unsigned char *)(v2 + 88), *(unsigned char *)(v2 + 89));
  uint64_t v3 = v2 + *(int *)(v1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255BE819C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(_s19HeaderDismissButtonVMa() - 8);
  uint64_t v4 = (uint64_t *)(v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_255BE2D30(v4, v1, v2);
}

uint64_t sub_255BE8220@<X0>(uint64_t a1@<X8>)
{
  return sub_255BE2DB0(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_255BE822C()
{
  unint64_t result = qword_269F26550;
  if (!qword_269F26550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F26548);
    sub_255B367AC();
    sub_255A09998(&qword_269F26558, &qword_269F26560);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F26550);
  }
  return result;
}

unint64_t sub_255BE82CC()
{
  unint64_t result = qword_269F26570;
  if (!qword_269F26570)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F26530);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F26520);
    sub_255C7EBF8();
    sub_255A09998(&qword_269F26568, &qword_269F26520);
    sub_255BE8750(&qword_26B29D388, MEMORY[0x263F19B68]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F26570);
  }
  return result;
}

uint64_t sub_255BE83F0()
{
  return sub_255BE8418(&qword_269F26578, &qword_269F26538, (void (*)(void))sub_255BE82CC);
}

uint64_t sub_255BE8418(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_255BE8750((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BE84C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE8680()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE8750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255BE8798(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_255A087D0(v2, v3);
}

uint64_t sub_255BE87D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_255A0877C(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_255BE882C(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  uint64_t v4 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_255A0877C(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_255A087D0(v5, v6);
  return a1;
}

uint64_t sub_255BE88A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_255A087D0(v5, v6);
  return a1;
}

uint64_t sub_255BE88F8(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255BE8954(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t _s33DefaultMetadataAndContextMenuViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_255BE89C4(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_255BE8A08(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t _s21FullScreenArtworkViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BE8A54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE8A98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255BE8ADC()
{
  return sub_255BE3EC4();
}

uint64_t sub_255BE8AE4()
{
  return sub_255BE8B14((uint64_t (*)(void, void, void, void, void, void))sub_255BE4480);
}

uint64_t sub_255BE8AFC()
{
  return sub_255BE8B14((uint64_t (*)(void, void, void, void, void, void))sub_255BE494C);
}

uint64_t sub_255BE8B14(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_255BE8B30()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE8C68()
{
  return swift_getWitnessTable();
}

uint64_t sub_255BE8EB8()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_26B2AA560);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B2AA560);
  return sub_255C7D888();
}

unint64_t sub_255BE8F30(char a1)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000099;
      break;
    case 2:
      unint64_t result = 0xD000000000000020;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_255BE9028()
{
  return sub_255BE8F30(*v0);
}

ValueMetadata *type metadata accessor for AudioTap()
{
  return &type metadata for AudioTap;
}

unsigned char *storeEnumTagSinglePayload for AudioTap.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255BE910CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioTap.Error()
{
  return &type metadata for AudioTap.Error;
}

unint64_t sub_255BE9148()
{
  unint64_t result = qword_269F265A8;
  if (!qword_269F265A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F265A8);
  }
  return result;
}

uint64_t sub_255BE919C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_255BE921C(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_currentTexture] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_displayModeSubject;
  LOBYTE(v19[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22828);
  swift_allocObject();
  char v7 = v2;
  *(void *)&v2[v6] = sub_255C7DA28();
  *(void *)&v7[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_image] = a1;
  *(void *)&v7[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_textureLoader] = a2;
  id v8 = a1;
  id v9 = a2;

  v20.receiver = v7;
  v20.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v20, sel_init, v19[0]);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  id v12 = v10;
  id v13 = objc_msgSend(v8, sel_CGImage);
  if (v13)
  {
    uint64_t v14 = v13;
    if (qword_269F201E8 != -1) {
      swift_once();
    }
    type metadata accessor for Option(0);
    sub_255BE9CB4();
    uint64_t v15 = sub_255C80448();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_255BE9CA8;
    *(void *)(v16 + 24) = v11;
    v19[4] = sub_255A85DCC;
    v19[5] = v16;
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 1107296256;
    void v19[2] = sub_255BE919C;
    v19[3] = &block_descriptor_20;
    uint64_t v17 = _Block_copy(v19);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_newTextureWithCGImage_options_completionHandler_, v14, v15, v17);
    _Block_release(v17);

    id v9 = (id)v15;
  }
  else
  {
    sub_255BE94CC((void *)1, 1, v11);
    uint64_t v14 = v8;
  }

  swift_release_n();
  return v12;
}

void sub_255BE94CC(void *a1, char a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x25A297D40](v5);
  if (v6)
  {
    char v7 = (void *)v6;
    if (a2)
    {
      sub_255A85DD4(a1);
      if (qword_269F20130 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_255C7D898();
      __swift_project_value_buffer(v8, (uint64_t)qword_269F332E0);
      sub_255A85DD4(a1);
      sub_255A85DD4(a1);
      id v9 = sub_255C7D878();
      os_log_type_t v10 = sub_255C80BE8();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        id v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138543362;
        sub_255A86148();
        swift_allocError();
        void *v13 = a1;
        sub_255A85DD4(a1);
        uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
        sub_255C80F18();
        *id v12 = v14;
        sub_255A85DE4(a1, 1);
        sub_255A85DE4(a1, 1);
        _os_log_impl(&dword_255A00000, v9, v10, "MetalImageTextureProvider failed to load texture: %{public}@", v11, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F27D60);
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v12, -1, -1);
        MEMORY[0x25A297C00](v11, -1, -1);

        sub_255A85DE4(a1, 1);
      }
      else
      {

        sub_255A85DE4(a1, 1);
        sub_255A85DE4(a1, 1);
        sub_255A85DF0(a1);
      }
    }
    else
    {
      *(void *)(v6 + OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_currentTexture) = a1;
      sub_255A8619C(a1, 0);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      sub_255C7DA18();
      sub_255A85DE4(a1, 0);
    }
  }
}

uint64_t sub_255BE9768()
{
  uint64_t v1 = OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher);
  }
  else
  {
    uint64_t v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22828);
    sub_255BE9C14();
    uint64_t v2 = sub_255C7DAF8();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

unint64_t sub_255BE9808()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F265F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_255C855F0;
  uint64_t v1 = (void *)*MEMORY[0x263F12D50];
  uint64_t v2 = MEMORY[0x263F8D4F8];
  *(void *)(inited + 32) = *MEMORY[0x263F12D50];
  *(unsigned char *)(inited + 40) = 0;
  uint64_t v3 = (void *)*MEMORY[0x263F12D60];
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 104) = MEMORY[0x263F8D9D0];
  *(void *)(inited + 80) = 3;
  id v4 = v1;
  id v5 = v3;
  unint64_t result = sub_255A18710(inited);
  qword_269F265B0 = result;
  return result;
}

uint64_t sub_255BE98A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v8 - 8);
  os_log_type_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_255C80958();
  swift_unknownObjectRetain();
  swift_retain();
  id v12 = a2;
  uint64_t v13 = sub_255C80948();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  uint64_t v14[2] = v13;
  _OWORD v14[3] = v15;
  void v14[4] = a1;
  v14[5] = a3;
  v14[6] = a4;
  v14[7] = a2;
  sub_255B5DB70((uint64_t)v10, (uint64_t)&unk_269F265F0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_255BE99E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  v7[5] = a7;
  void v7[2] = a4;
  v7[3] = a5;
  sub_255C80958();
  void v7[6] = sub_255C80948();
  uint64_t v9 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255BE9A84, v9, v8);
}

uint64_t sub_255BE9A84()
{
  uint64_t v1 = v0[2];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void (*)(uint64_t, void))v0[3];
    uint64_t v3 = swift_unknownObjectRetain();
    v2(v3, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    ((void (*)(void, uint64_t))v0[3])(v0[5], 1);
  }
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t type metadata accessor for MetalImageTextureProvider()
{
  return self;
}

uint64_t sub_255BE9C00()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_255BE9C14()
{
  unint64_t result = qword_269F22830;
  if (!qword_269F22830)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22830);
  }
  return result;
}

uint64_t sub_255BE9C70()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_255BE9CA8(void *a1, char a2)
{
  sub_255BE94CC(a1, a2 & 1, v2);
}

unint64_t sub_255BE9CB4()
{
  unint64_t result = qword_26B29FC90;
  if (!qword_26B29FC90)
  {
    type metadata accessor for Option(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29FC90);
  }
  return result;
}

uint64_t sub_255BE9D0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255BE9D44()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255BE9D94(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *os_log_type_t v10 = v2;
  v10[1] = sub_255A160B0;
  return sub_255BE99E8(a1, v4, v5, v6, v7, v9, v8);
}

void destroy for MetalImageTextureProvider.Error(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *_s11MediaCoreUI25MetalImageTextureProviderC5ErrorOwCP_0(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for MetalImageTextureProvider.Error(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    os_log_type_t v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for MetalImageTextureProvider.Error(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for MetalImageTextureProvider.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for MetalImageTextureProvider.Error()
{
  return &type metadata for MetalImageTextureProvider.Error;
}

BOOL sub_255BEA05C(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_255C81578();
  sub_255C81588();
  uint64_t v4 = sub_255C815B8();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_255BEA14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_255C7D6A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_255BFDA6C(&qword_269F24898, MEMORY[0x263F07508]),
        uint64_t v7 = sub_255C804E8(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    int v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_255BFDA6C(&qword_269F248A0, MEMORY[0x263F07508]);
      char v15 = sub_255C80578();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_255BEA360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_255C81578();
    swift_bridgeObjectRetain();
    sub_255C806B8();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_255C815B8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_255C81428() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_255C81428() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_255BEA4A8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_255C81578();
  sub_255C7E278();
  sub_255C81598();
  uint64_t v3 = sub_255C815B8();
  uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v5 = v3 & ~v4;
  uint64_t v6 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return 0;
  }
  int v7 = sub_255C7E278();
  if (v7 == sub_255C7E278()) {
    return 1;
  }
  uint64_t v9 = ~v4;
  unint64_t v10 = (v5 + 1) & v9;
  if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  do
  {
    int v11 = sub_255C7E278();
    BOOL v12 = v11 == sub_255C7E278();
    uint64_t result = v12;
    if (v12) {
      break;
    }
    unint64_t v10 = (v10 + 1) & v9;
  }
  while (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return result;
}

uint64_t sub_255BEA5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_255C7D5C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_255BFDA6C(&qword_269F24888, MEMORY[0x263F06EA8]),
        uint64_t v7 = sub_255C804E8(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    BOOL v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_255BFDA6C(&qword_269F213B8, MEMORY[0x263F06EA8]);
      char v15 = sub_255C80578();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t MCUINamespace<A>.marqueeFeathering(_:_:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9 = a1 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  char v12 = 0;
  char v13 = v9;
  uint64_t v14 = a2;
  char v15 = a3 & 1;
  MEMORY[0x25A295390](&KeyPath, *(void *)(a4 + 16), &type metadata for MarqueeFeatheringModifier, a5);
  return swift_release();
}

uint64_t sub_255BEA87C()
{
  sub_255BFD7DC();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255BEA8B8@<X0>(void *a1@<X8>)
{
  sub_255BFD7DC();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BEA908()
{
  return sub_255C7E8D8();
}

uint64_t sub_255BEA968@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v38 = a4;
  uint64_t v39 = a6;
  uint64_t v16 = sub_255C7E378();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298420);
  uint64_t v21 = (int *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = &v23[v21[16]];
  uint64_t v44 = 0;
  sub_255C7FE58();
  uint64_t v25 = v41;
  *(void *)uint64_t v24 = v40;
  *((void *)v24 + 1) = v25;
  uint64_t v26 = &v23[v21[17]];
  *(void *)uint64_t v26 = swift_getKeyPath();
  v26[8] = 0;
  uint64_t v27 = &v23[v21[18]];
  *(void *)uint64_t v27 = swift_getKeyPath();
  v27[8] = 0;
  uint64_t v28 = &v23[v21[19]];
  *(void *)uint64_t v28 = swift_getKeyPath();
  *((void *)v28 + 1) = 0;
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0;
  v28[32] = 0;
  uint64_t v29 = &v23[v21[20]];
  *(void *)uint64_t v29 = swift_getKeyPath();
  v29[8] = 0;
  uint64_t v30 = &v23[v21[21]];
  *(void *)uint64_t v30 = swift_getKeyPath();
  v30[8] = 0;
  *(double *)&v23[v21[11]] = a7;
  *(double *)&v23[v21[12]] = a8;
  *(double *)&v23[v21[13]] = a9;
  v23[v21[14]] = a1;
  uint64_t v31 = &v23[v21[15]];
  *(void *)uint64_t v31 = a2;
  *((_DWORD *)v31 + 2) = a3;
  v31[12] = BYTE4(a3) & 1;
  uint64_t v40 = v38;
  uint64_t v41 = a5;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_255C7F548();
  uint64_t v41 = v32;
  char v42 = v33 & 1;
  uint64_t v43 = v34;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F18D10], v16);
  sub_255C7F7A8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_255A094C0(v40, v41, v42);
  swift_bridgeObjectRelease();
  char v35 = &v23[v21[22]];
  *(void *)char v35 = 0;
  v35[8] = 1;
  sub_255A10514((uint64_t)v23, v39, &qword_26B298420);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255BEAC78@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  sub_255C7FE58();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = swift_getKeyPath();
  sub_255A1D78C();
  uint64_t result = sub_255C7F548();
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v19;
  *(unsigned char *)(a4 + 16) = v18 & 1;
  *(void *)(a4 + 24) = v20;
  *(double *)(a4 + 32) = a5;
  *(double *)(a4 + 40) = a6;
  *(double *)(a4 + 48) = a7;
  *(unsigned char *)(a4 + 56) = a1;
  *(void *)(a4 + 60) = a2;
  *(_DWORD *)(a4 + 68) = a3;
  *(unsigned char *)(a4 + 72) = BYTE4(a3) & 1;
  *(void *)(a4 + 80) = v23;
  *(void *)(a4 + 88) = v24;
  *(void *)(a4 + 96) = KeyPath;
  *(unsigned char *)(a4 + 104) = 0;
  *(void *)(a4 + 112) = v13;
  *(unsigned char *)(a4 + 120) = 0;
  *(void *)(a4 + 128) = v14;
  *(void *)(a4 + 136) = 0;
  *(void *)(a4 + 144) = 0;
  *(void *)(a4 + 152) = 0;
  *(unsigned char *)(a4 + 160) = 0;
  *(void *)(a4 + 168) = v15;
  *(unsigned char *)(a4 + 176) = 0;
  *(void *)(a4 + 184) = v16;
  *(unsigned char *)(a4 + 192) = 0;
  *(void *)(a4 + 200) = 0;
  *(unsigned char *)(a4 + 208) = 1;
  return result;
}

uint64_t Marquee.init(spacing:rate:delay:isAnimating:preferredFrameRateRange:content:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  uint64_t v16 = (int *)type metadata accessor for Marquee();
  uint64_t v17 = (void *)(a5 + v16[14]);
  sub_255C7FE58();
  *uint64_t v17 = v26;
  v17[1] = v27;
  uint64_t v18 = a5 + v16[15];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 8) = 0;
  uint64_t v19 = a5 + v16[16];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a5 + v16[17];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(void *)(v20 + 8) = 0;
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 0;
  uint64_t v21 = a5 + v16[18];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(unsigned char *)(v21 + 8) = 0;
  uint64_t v22 = a5 + v16[19];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(unsigned char *)(v22 + 8) = 0;
  *(double *)(a5 + v16[9]) = a6;
  *(double *)(a5 + v16[10]) = a7;
  *(double *)(a5 + v16[11]) = a8;
  *(unsigned char *)(a5 + v16[12]) = a1;
  uint64_t v23 = a5 + v16[13];
  *(void *)uint64_t v23 = a2;
  *(_DWORD *)(v23 + 8) = a3;
  *(unsigned char *)(v23 + 12) = BYTE4(a3) & 1;
  uint64_t result = a4();
  uint64_t v25 = a5 + v16[20];
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  return result;
}

uint64_t Marquee.appending(badges:foregroundColor:badgeFont:)(uint64_t a1)
{
  return sub_255BF618C(a1);
}

uint64_t sub_255BEAFC8()
{
  sub_255BFC51C();

  return sub_255C7E8C8();
}

uint64_t sub_255BEB010()
{
  return sub_255C7E8C8();
}

uint64_t sub_255BEB050(uint64_t a1)
{
  sub_255A53C38(a1, (uint64_t)v3);
  sub_255A53C38((uint64_t)v3, (uint64_t)&v2);
  sub_255BFC51C();
  sub_255C7E8D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t MCUINamespace<A>.marqueeAnimationDirection(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = (char *)MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *v5;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  swift_getKeyPath();
  v10[15] = v8;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t MCUINamespace<A>.coordinatedMarquees()(uint64_t a1, uint64_t a2)
{
  sub_255C7FE58();
  MEMORY[0x25A295390](&v5, *(void *)(a1 + 16), &type metadata for CoordinatedMarquees, a2);
  return swift_release();
}

uint64_t EnvironmentValues.marqueeBoundsRestrictedEdges.getter()
{
  return sub_255BEBD6C((void (*)(void))sub_255BF6AB0);
}

uint64_t sub_255BEB280@<X0>(void *a1@<X8>)
{
  return sub_255BEBDD4((void (*)(void))sub_255BF6AB0, a1);
}

uint64_t sub_255BEB2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BEBE70(a1, a2, a3, a4, (void (*)(void))sub_255BF6AB0);
}

uint64_t EnvironmentValues.marqueeBoundsRestrictedEdges.setter()
{
  return sub_255C7E8D8();
}

uint64_t sub_255BEB2FC()
{
  sub_255A54658();
  sub_255C7E8C8();
  return v1;
}

uint64_t MCUINamespace<A>.marqueeFeathering(_:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](a1);
  char v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, v10, v5, v7);
  swift_getKeyPath();
  if (a2)
  {
    uint64_t inited = MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF98);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_255C855F0;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = a1;
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 56) = a1;
  }
  v13[9] = sub_255A1897C(inited);
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t EnvironmentValues.marqueeCanExtendContentBeyondFrame.getter()
{
  return sub_255BEE32C((void (*)(void))sub_255BF6B04);
}

uint64_t sub_255BEB4DC@<X0>(unsigned char *a1@<X8>)
{
  sub_255BF6B04();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BEB52C()
{
  return sub_255C7E8D8();
}

uint64_t EnvironmentValues.marqueeCanExtendContentBeyondFrame.setter()
{
  return sub_255C7E8D8();
}

void sub_255BEB5B4()
{
  qword_26B298D98 = 0x4034000000000000;
}

double static MarqueeDefaults.spacing.getter()
{
  return sub_255BEB650(&qword_26B298DA0, (uint64_t)&qword_26B298D98);
}

void sub_255BEB5E8()
{
  qword_26B298D70 = 0x4020000000000000;
}

double static MarqueeDefaults.feathering.getter()
{
  return sub_255BEB650(&qword_26B298D78, (uint64_t)&qword_26B298D70);
}

void sub_255BEB61C()
{
  qword_26B298D80 = 0x403E000000000000;
}

double static MarqueeDefaults.rate.getter()
{
  return sub_255BEB650(&qword_26B298D90, (uint64_t)&qword_26B298D80);
}

double sub_255BEB650(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

double static MarqueeDefaults.delay.getter()
{
  return 3.0;
}

uint64_t static MarqueeDefaults.isAnimating.getter()
{
  return 1;
}

uint64_t static MarqueeDefaults.repeatCount.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t Marquee.init(spacing:feathering:rate:delay:isAnimating:content:)@<X0>(char a1@<W0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14 = (int *)type metadata accessor for Marquee();
  uint64_t v15 = (void *)(a3 + v14[14]);
  sub_255C7FE58();
  *uint64_t v15 = v24;
  v15[1] = v25;
  uint64_t v16 = a3 + v14[15];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a3 + v14[16];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = a3 + v14[17];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(void *)(v18 + 8) = 0;
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(unsigned char *)(v18 + 32) = 0;
  uint64_t v19 = a3 + v14[18];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a3 + v14[19];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  *(double *)(a3 + v14[9]) = a4;
  *(double *)(a3 + v14[10]) = a6;
  *(double *)(a3 + v14[11]) = a7;
  *(unsigned char *)(a3 + v14[12]) = a1;
  uint64_t v21 = a3 + v14[13];
  *(void *)uint64_t v21 = 0;
  *(_DWORD *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 12) = 1;
  uint64_t result = a2();
  uint64_t v23 = a3 + v14[20];
  *(double *)uint64_t v23 = a5;
  *(unsigned char *)(v23 + 8) = 0;
  return result;
}

uint64_t Marquee.init(spacing:feathering:rate:delay:isAnimating:preferredFrameRateRange:content:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v18 = (int *)type metadata accessor for Marquee();
  uint64_t v19 = (void *)(a5 + v18[14]);
  sub_255C7FE58();
  *uint64_t v19 = v28;
  v19[1] = v29;
  uint64_t v20 = a5 + v18[15];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = a5 + v18[16];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(unsigned char *)(v21 + 8) = 0;
  uint64_t v22 = a5 + v18[17];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(unsigned char *)(v22 + 32) = 0;
  uint64_t v23 = a5 + v18[18];
  *(void *)uint64_t v23 = swift_getKeyPath();
  *(unsigned char *)(v23 + 8) = 0;
  uint64_t v24 = a5 + v18[19];
  *(void *)uint64_t v24 = swift_getKeyPath();
  *(unsigned char *)(v24 + 8) = 0;
  *(double *)(a5 + v18[9]) = a6;
  *(double *)(a5 + v18[10]) = a8;
  *(double *)(a5 + v18[11]) = a9;
  *(unsigned char *)(a5 + v18[12]) = a1;
  uint64_t v25 = a5 + v18[13];
  *(void *)uint64_t v25 = a2;
  *(_DWORD *)(v25 + 8) = a3;
  *(unsigned char *)(v25 + 12) = BYTE4(a3) & 1;
  uint64_t result = a4();
  uint64_t v27 = a5 + v18[20];
  *(double *)uint64_t v27 = a7;
  *(unsigned char *)(v27 + 8) = 0;
  return result;
}

double sub_255BEB9CC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDE0);
  sub_255C7FE88();
  return v1;
}

uint64_t sub_255BEBA28(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 60);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A52558(*(void *)v2, v4);
  uint64_t v5 = sub_255ABD950(v3, v4);
  sub_255A525AC(v3, v4);
  return v5;
}

uint64_t sub_255BEBA88(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 64);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A52558(*(void *)v2, v4);
  uint64_t v5 = sub_255ABA458(v3, v4);
  sub_255A525AC(v3, v4);
  return v5;
}

uint64_t sub_255BEBAE8(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 68);
  long long v3 = *(_OWORD *)(v2 + 16);
  v6[0] = *(_OWORD *)v2;
  v6[1] = v3;
  char v7 = *(unsigned char *)(v2 + 32);
  sub_255A10514((uint64_t)v6, (uint64_t)v8, &qword_26B29D848);
  sub_255BFC218((uint64_t)v8, (void (*)(void, void, void, void, void))sub_255B248BC);
  uint64_t v4 = sub_255ABD96C();
  sub_255BFC218((uint64_t)v6, (void (*)(void, void, void, void, void))sub_255B24ADC);
  return v4;
}

uint64_t sub_255BEBBA0()
{
  sub_255BFE0D8();
  sub_255C7E8C8();
  return v1;
}

double sub_255BEBBE0@<D0>(_OWORD *a1@<X8>)
{
  sub_255BFE0D8();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_255BEBC30(uint64_t *a1)
{
  return sub_255C7E8D8();
}

uint64_t sub_255BEBC8C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 72);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A0877C(*(void *)v2, v4);
  char v5 = sub_255ABA6A4(v3, v4);
  sub_255A087D0(v3, v4);
  return v5 & 1;
}

uint64_t sub_255BEBCEC(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 76);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A52558(*(void *)v2, v4);
  uint64_t v5 = sub_255ABDBC0(v3, v4);
  sub_255A525AC(v3, v4);
  return v5;
}

uint64_t sub_255BEBD4C()
{
  return sub_255BEBD6C((void (*)(void))sub_255BFE12C);
}

uint64_t sub_255BEBD6C(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

uint64_t sub_255BEBDB4@<X0>(void *a1@<X8>)
{
  return sub_255BEBDD4((void (*)(void))sub_255BFE12C, a1);
}

uint64_t sub_255BEBDD4@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t sub_255BEBE30@<X0>(void *a1@<X8>)
{
  return keypath_getTm_2((void (*)(void))sub_255BFE12C, a1);
}

uint64_t sub_255BEBE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BEBE70(a1, a2, a3, a4, (void (*)(void))sub_255BFE12C);
}

uint64_t sub_255BEBE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_255C7E8D8();
}

uint64_t sub_255BEBED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255BEBE70(a1, a2, a3, a4, (void (*)(void))sub_255BFE12C);
}

uint64_t type metadata accessor for Marquee()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255BEBF20@<X0>(void *a1@<X8>)
{
  return keypath_getTm_2((void (*)(void))sub_255BF6AB0, a1);
}

uint64_t sub_255BEBF44@<X0>(void *a1@<X8>)
{
  sub_255BFD7DC();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255BEBFA0@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_14Tm((void (*)(void))sub_255BF6B04, a1);
}

uint64_t sub_255BEBFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_15Tm(a1, a2, a3, a4, (void (*)(void))sub_255BF6B04);
}

uint64_t Marquee.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = v2;
  uint64_t v13 = type metadata accessor for Marquee.ContentWithBadge();
  sub_255C7E458();
  uint64_t v16 = sub_255C7E458();
  type metadata accessor for Marquee.MarqueeingContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD30);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD60);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD10);
  sub_255C7E458();
  uint64_t v14 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD50);
  sub_255C7E458();
  uint64_t v15 = sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v41;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = sub_255A09998(&qword_26B29BD28, &qword_26B29BD30);
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = sub_255A09998(&qword_26B29BD58, &qword_26B29BD60);
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = sub_255A09998(&qword_26B29BD08, &qword_26B29BD10);
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = MEMORY[0x263F1A240];
  uint64_t v3 = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
  uint64_t v24 = swift_getWitnessTable();
  unint64_t v25 = sub_255B20D98();
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v44 = v3;
  uint64_t v45 = swift_getWitnessTable();
  type metadata accessor for ShownWhenAppeared();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  uint64_t v4 = sub_255C7DFC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_255C7F158();
  uint64_t v21 = v18;
  uint64_t v22 = v17;
  uint64_t v23 = v19;
  sub_255C7DFB8();
  swift_getWitnessTable();
  sub_255A20F54(v7);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  sub_255A20F54(v10);
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

uint64_t sub_255BEC580@<X0>(void (*a1)(void, void, void)@<X0>, uint64_t a2@<X1>, void (*a3)(char *, void, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v108 = a1;
  uint64_t v103 = a4;
  type metadata accessor for Marquee.MarqueeingContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD30);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD60);
  uint64_t v102 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD10);
  uint64_t v104 = sub_255C7E458();
  uint64_t v105 = sub_255C7E458();
  uint64_t v106 = (void (*)(char *, void, uint64_t))a3;
  uint64_t v6 = type metadata accessor for Marquee.ContentWithBadge();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD50);
  uint64_t v107 = (char *)sub_255C7E458();
  uint64_t v7 = sub_255C7E458();
  v111[22] = swift_getWitnessTable();
  uint64_t v112 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  v111[20] = swift_getWitnessTable();
  v111[21] = v112;
  v111[18] = swift_getWitnessTable();
  v111[19] = sub_255A09998(&qword_26B29BD28, &qword_26B29BD30);
  v111[16] = swift_getWitnessTable();
  v111[17] = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  v111[14] = swift_getWitnessTable();
  v111[15] = sub_255A09998(&qword_26B29BD58, &qword_26B29BD60);
  v111[12] = swift_getWitnessTable();
  v111[13] = sub_255A09998(&qword_26B29BD08, &qword_26B29BD10);
  v111[10] = swift_getWitnessTable();
  v111[11] = MEMORY[0x263F1A240];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v84 = swift_getWitnessTable();
  v111[8] = v84;
  v111[9] = sub_255A09998(&qword_26B29BD48, &qword_26B29BD50);
  v111[6] = swift_getWitnessTable();
  v111[7] = sub_255B20D98();
  uint64_t v113 = v105;
  uint64_t v114 = v7;
  uint64_t v101 = v7;
  uint64_t v98 = WitnessTable;
  uint64_t v115 = WitnessTable;
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v95 = v116;
  uint64_t v100 = type metadata accessor for ShownWhenAppeared();
  uint64_t v96 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (uint64_t)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v97 = (char *)&v80 - v11;
  uint64_t v12 = type metadata accessor for Marquee();
  uint64_t v104 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v80 - v15;
  uint64_t v82 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v80 - v19;
  uint64_t v21 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v80 - v26;
  uint64_t v85 = v6;
  uint64_t v28 = sub_255C7E458();
  uint64_t v90 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  long long v89 = (char *)&v80 - v29;
  uint64_t v91 = v30;
  uint64_t v94 = sub_255C7E458();
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  char v93 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  char v88 = (char *)&v80 - v33;
  double v35 = MEMORY[0x270FA5388](v34);
  uint64_t v107 = (char *)&v80 - v36;
  uint64_t v37 = v108;
  (*(void (**)(uint64_t, void (*)(void, void, void), uint64_t, double))(v21 + 16))(v24, v108, a2, v35);
  uint64_t v87 = v27;
  uint64_t v38 = (uint64_t)v27;
  uint64_t v39 = v104;
  uint64_t v102 = a2;
  sub_255BED378(v24, a2, v38);
  int v86 = sub_255C7F1E8();
  LOBYTE(v24) = sub_255BEBC8C(v12);
  uint64_t v40 = *(void (**)(char *, void, uint64_t))(v39 + 16);
  v40(v20, v37, v12);
  if (v24)
  {
    uint64_t v41 = sub_255BEBA28(v12);
    char v42 = sub_255BEA4A8(1, v41);
    swift_bridgeObjectRelease();
    char v43 = v42 ^ 1;
  }
  else
  {
    char v43 = 0;
  }
  uint64_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
  v44(v20, v12);
  v40(v16, v108, v12);
  if ((v43 & 1) == 0)
  {
    v44(v16, v12);
LABEL_11:
    uint64_t v53 = v85;
    uint64_t v54 = v84;
    uint64_t v48 = v12;
    char v50 = v83;
    uint64_t v51 = v81;
    goto LABEL_15;
  }
  char v45 = sub_255BEBAE8(v12);
  uint64_t v47 = v46;
  v44(v16, v12);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    if ((v45 & 1) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v48 = v12;
  uint64_t v49 = *(void *)(sub_255BEBCEC(v12) + 16);
  char v50 = v83;
  uint64_t v51 = v81;
  uint64_t v80 = v40;
  if (!v49 || (sub_255B3A140(1), (v52 & 1) == 0))
  {
    if (qword_26B298D78 != -1) {
      swift_once();
    }
  }
  uint64_t v54 = v84;
  swift_bridgeObjectRelease();
  uint64_t v53 = v85;
  uint64_t v40 = v80;
LABEL_15:
  uint64_t v55 = v89;
  uint64_t v56 = v87;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v56, v53);
  v40(v50, v108, v48);
  uint64_t v57 = v104;
  unint64_t v58 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  uint64_t v59 = swift_allocObject();
  uint64_t v60 = v102;
  uint64_t v61 = v106;
  *(void *)(v59 + 16) = v102;
  *(void *)(v59 + 24) = v61;
  (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v59 + v58, v50, v48);
  v111[4] = v54;
  v111[5] = MEMORY[0x263F18C10];
  uint64_t v62 = v91;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = v88;
  sub_255C7FB28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v55, v62);
  _OWORD v111[2] = v63;
  v111[3] = MEMORY[0x263F1A240];
  uint64_t v65 = v94;
  uint64_t v90 = swift_getWitnessTable();
  sub_255A20F54(v64);
  uint64_t v66 = v92;
  uint64_t v67 = *(uint64_t (**)(char *, uint64_t))(v92 + 8);
  uint64_t v91 = v92 + 8;
  uint64_t v104 = (uint64_t)v67;
  uint64_t v68 = v67(v64, v65);
  MEMORY[0x270FA5388](v68);
  *(&v80 - 4) = (void (*)(char *, void, uint64_t))v60;
  *(&v80 - 3) = v61;
  *(&v80 - 2) = (void (*)(char *, void, uint64_t))v108;
  MEMORY[0x270FA5388](v69);
  *(&v80 - 4) = (void (*)(char *, void, uint64_t))v60;
  *(&v80 - 3) = v61;
  *(&v80 - 2) = v70;
  uint64_t v71 = v99;
  sub_255BEEA9C((uint64_t (*)(uint64_t))sub_255BFDAC4, (uint64_t (*)(uint64_t))sub_255BFDAD0, v105, v101, v99);
  uint64_t v72 = v100;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v74 = v97;
  sub_255A20F54(v71);
  uint64_t v75 = v96;
  uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
  v76(v71, v72);
  uint64_t v77 = v93;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v93, v107, v65);
  uint64_t v113 = (uint64_t)v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v71, v74, v72);
  uint64_t v114 = v71;
  v111[0] = v65;
  v111[1] = v72;
  uint64_t v109 = v90;
  uint64_t v110 = v73;
  sub_255AF64A0((uint64_t)&v113, 2uLL, (uint64_t)v111);
  v76((uint64_t)v74, v72);
  uint64_t v78 = (uint64_t (*)(char *, uint64_t))v104;
  ((void (*)(char *, uint64_t))v104)(v107, v65);
  v76(v71, v72);
  return v78(v77, v65);
}

uint64_t sub_255BED378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
  uint64_t v4 = a3 + *(int *)(type metadata accessor for Marquee.ContentWithBadge() + 52);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v4 = result;
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 32) = 0;
  return result;
}

uint64_t sub_255BED424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v110 = a4;
  uint64_t v83 = type metadata accessor for Marquee();
  uint64_t v104 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v107 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v103 = (char *)&v81 - v9;
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Marquee.MarqueeingContent();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v81 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  uint64_t v86 = sub_255C7E458();
  uint64_t v90 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v82 = (char *)&v81 - v18;
  uint64_t v87 = sub_255C7E458();
  uint64_t v91 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v84 = (char *)&v81 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD30);
  uint64_t v89 = sub_255C7E458();
  uint64_t KeyPath = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v85 = (char *)&v81 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  uint64_t v92 = (void *)sub_255C7E458();
  uint64_t v106 = *(v92 - 1);
  MEMORY[0x270FA5388](v92);
  char v88 = (char *)&v81 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD60);
  uint64_t v22 = sub_255C7E458();
  uint64_t v94 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v111 = (char *)&v81 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD10);
  uint64_t v95 = v22;
  uint64_t v24 = sub_255C7E458();
  uint64_t v99 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v96 = (char *)&v81 - v25;
  uint64_t v100 = v26;
  uint64_t v102 = sub_255C7E458();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  long long v97 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v29 = MEMORY[0x270FA5388](v28);
  uint64_t v98 = (char *)&v81 - v30;
  uint64_t v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, a2, v29);
  uint64_t v32 = (int *)v83;
  double v33 = sub_255BEB9CC();
  uint64_t v108 = a2;
  uint64_t v109 = a3;
  sub_255BEE168((uint64_t)v13, v34, v35, a2, (uint64_t)v17, v33);
  swift_getKeyPath();
  unint64_t v120 = *(void *)(v31 + v32[9]);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = v82;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  swift_getKeyPath();
  unint64_t v120 = *(void *)(v31 + v32[10]);
  uint64_t v81 = MEMORY[0x263F1A420];
  uint64_t v38 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v127 = WitnessTable;
  uint64_t v128 = v38;
  uint64_t v39 = v86;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = v84;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v37, v39);
  swift_getKeyPath();
  unint64_t v120 = *(void *)(v31 + v32[11]);
  uint64_t v125 = v40;
  uint64_t v126 = v38;
  uint64_t v42 = v87;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v85;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v41, v42);
  swift_getKeyPath();
  LOBYTE(v120) = *(unsigned char *)(v31 + v32[12]);
  uint64_t v45 = sub_255A09998(&qword_26B29BD28, &qword_26B29BD30);
  uint64_t v123 = v43;
  uint64_t v124 = v45;
  uint64_t v46 = v89;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = v88;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(KeyPath + 8))(v44, v46);
  swift_getKeyPath();
  uint64_t v49 = v31 + v32[13];
  unint64_t v50 = *(void *)v49;
  int v51 = *(_DWORD *)(v49 + 8);
  LOBYTE(v49) = *(unsigned char *)(v49 + 12);
  unint64_t v120 = v50;
  int v121 = v51;
  char v122 = v49;
  uint64_t v52 = (uint64_t)v32;
  uint64_t v53 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  uint64_t v118 = v47;
  uint64_t v119 = v53;
  uint64_t v54 = v92;
  uint64_t v55 = swift_getWitnessTable();
  sub_255C7F678();
  uint64_t v56 = v31;
  swift_release();
  (*(void (**)(char *, void *))(v106 + 8))(v48, v54);
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v57 = 0;
  unint64_t v58 = (uint64_t *)(v31 + v32[20]);
  if ((v58[1] & 1) == 0)
  {
    uint64_t v59 = *v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF98);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_255C855F0;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = v59;
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 56) = v59;
    unint64_t v57 = sub_255A1897C(inited);
  }
  uint64_t v61 = v104;
  uint64_t v62 = *(void **)(v104 + 16);
  uint64_t v63 = v103;
  uint64_t v106 = v56;
  uint64_t v92 = v62;
  ((void (*)(char *, uint64_t, uint64_t))v62)(v103, v56, v52);
  if (!v57) {
    unint64_t v57 = sub_255BEBCEC(v52);
  }
  (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v52);
  unint64_t v120 = v57;
  uint64_t v103 = (char *)MEMORY[0x263F1A420];
  uint64_t v64 = sub_255A09998(&qword_26B29BD58, &qword_26B29BD60);
  uint64_t v116 = v55;
  uint64_t v117 = v64;
  uint64_t v65 = v95;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = v96;
  uint64_t v68 = v111;
  sub_255C7F678();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v68, v65);
  uint64_t v69 = v107;
  ((void (*)(char *, uint64_t, uint64_t))v92)(v107, v106, v52);
  unint64_t v70 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v71 = swift_allocObject();
  uint64_t v72 = v109;
  *(void *)(v71 + 16) = v108;
  *(void *)(v71 + 24) = v72;
  (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v71 + v70, v69, v52);
  uint64_t v73 = sub_255A09998(&qword_26B29BD08, &qword_26B29BD10);
  uint64_t v114 = v66;
  uint64_t v115 = v73;
  uint64_t v74 = v100;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v76 = v97;
  sub_255C7FB28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v67, v74);
  uint64_t v112 = v75;
  uint64_t v113 = MEMORY[0x263F1A240];
  uint64_t v77 = v102;
  swift_getWitnessTable();
  uint64_t v78 = v98;
  sub_255A20F54(v76);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v101 + 8);
  v79(v76, v77);
  sub_255A20F54(v78);
  return ((uint64_t (*)(char *, uint64_t))v79)(v78, v77);
}